; ModuleID = 'regexec.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sv = type { i8*, i32, i32 }
%struct.gv = type { %struct.xpvgv*, i32, i32 }
%struct.xpvgv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.gp*, i8*, i64, %struct.hv*, i8 }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, %struct.sv*, i8*, i32 }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter* }
%struct.av = type { %struct.xpvav*, i32, i32 }
%struct.xpvav = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.sv**, %struct.sv*, i8 }
%struct.interpreter = type { i8 }
%struct.gp = type { %struct.sv*, i32, %struct.io*, %struct.cv*, %struct.av*, %struct.hv*, %struct.gv*, %struct.cv*, i32, i32, i32, i8* }
%struct.io = type { %struct.xpvio*, i32, i32 }
%struct.xpvio = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct._PerlIO**, %struct._PerlIO**, %union.anon, i64, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i16, i8, i8 }
%struct._PerlIO = type opaque
%union.anon = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%struct.cv = type { %struct.xpvcv*, i32, i32 }
%struct.xpvcv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.hv*, %struct.op*, %struct.op*, void (%struct.cv*)*, %union.any, %struct.gv*, i8*, i64, %struct.av*, %struct.cv*, i16, i32 }
%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8 }
%union.any = type { i8* }
%struct.hv = type { %struct.xpvhv*, i32, i32 }
%struct.xpvhv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, i32, %struct.he*, %struct.pmop*, i8* }
%struct.he = type { %struct.he*, %struct.hek*, %struct.sv* }
%struct.hek = type { i32, i32, [1 x i8] }
%struct.pmop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, %struct.op*, %struct.op*, %struct.op*, %struct.op*, %struct.pmop*, %struct.regexp*, i32, i32, i8, %struct.hv* }
%struct.regexp = type { i32*, i32*, %struct.regnode*, %struct.reg_substr_data*, i8*, %struct.reg_data*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, [1 x %struct.regnode] }
%struct.regnode = type { i8, i8, i16 }
%struct.reg_substr_data = type { [3 x %struct.reg_substr_datum] }
%struct.reg_substr_datum = type { i32, i32, %struct.sv*, %struct.sv* }
%struct.reg_data = type { i32, i8*, [1 x i8*] }
%struct.cop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, i8*, %struct.hv*, %struct.gv*, i32, i32, i32, %struct.sv*, %struct.sv* }
%struct.curcur = type { i32, i32, i32, i32, i32, %struct.regnode*, %struct.regnode*, i8*, %struct.curcur* }
%struct.re_cc_state = type { i32, %struct.regnode*, %struct.re_cc_state*, %struct.curcur*, %struct.regexp* }
%struct.xpv = type { i8*, i64, i64 }
%struct.re_scream_pos_data_s = type { i8**, i32* }
%struct.xpvmg = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv* }
%struct.xpvbm = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, i32, i16, i8 }
%struct.regnode_string = type { i8, i8, i16, [1 x i8] }
%struct.re_unwind_branch_t = type { i32, i32, i32, i32, %struct.regnode*, i8*, i32 }
%union.re_unwind_t = type { %struct.re_unwind_branch_t }
%struct.regnode_charclass = type { i8, i8, i16, i32, [32 x i8] }
%struct.regnode_1 = type { i8, i8, i16, i32 }
%struct.xrv = type { %struct.sv* }
%struct.xpviv = type { i8*, i64, i64, i64 }
%struct.xpvnv = type { i8*, i64, i64, i64, double }
%struct.regnode_2 = type { i8, i8, i16, i16, i16 }

@PL_reg_match_utf8 = external global i8
@PL_reg_flags = external global i32
@PL_regeol = external global i8*
@PL_sv_undef = external global %struct.sv
@PL_multiline = external global i32
@PL_screamfirst = external global i32*
@PL_regkind = external constant [0 x i8]
@PL_replgv = external global %struct.gv*
@PL_curcop = external global %struct.cop*
@PL_regcc = external global %struct.curcur*
@.str = private unnamed_addr constant [22 x i8] c"NULL regexp parameter\00", align 1
@.str1 = private unnamed_addr constant [25 x i8] c"corrupted regexp program\00", align 1
@PL_reg_eval_set = external global i32
@PL_reg_maxiter = external global i32
@PL_regbol = external global i8*
@PL_bostr = external global i8*
@PL_reg_sv = external global %struct.sv*
@PL_regtill = external global i8*
@PL_reg_call_cc = external global %struct.re_cc_state*
@PL_reg_ganch = external global i8*
@PL_utf8skip = external constant [0 x i8]
@PL_reginput = external global i8*
@PL_dowarn = external global i8
@PL_fold = external constant [0 x i8]
@PL_fold_locale = external global [0 x i8]
@PL_utf8_alnum = external global %struct.sv*
@.str2 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@PL_utf8_space = external global %struct.sv*
@.str3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@PL_utf8_digit = external global %struct.sv*
@.str4 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@PL_utf8_mark = external global %struct.sv*
@.str5 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@PL_regstartp = external global i32*
@PL_reg_leftiter = external global i32
@PL_reglastparen = external global i32*
@PL_regendp = external global i32*
@PL_stack_sp = external global %struct.sv**
@PL_op = external global %struct.op*
@PL_reg_re = external global %struct.regexp*
@PL_regdata = external global %struct.reg_data*
@PL_comppad = external global %struct.av*
@PL_curpad = external global %struct.sv**
@PL_reg_magic = external global %struct.magic*
@PL_runops = external global i32 ()*
@PL_regprecomp = external global i8*
@PL_regsize = external global i32
@PL_regnpar = external global i32
@PL_regcompp = external global %struct.regexp* (i8*, i8*, %struct.pmop*)*
@PL_savestack_ix = external global i32
@PL_reglastcloseparen = external global i32*
@PL_regfree = external global void (%struct.regexp*)*
@PL_Xpv = external global %struct.xpv*
@PL_reg_start_tmp = external global i8**
@PL_reg_poscache = external global i8*
@PL_reg_poscache_size = external global i64
@.str6 = private unnamed_addr constant [23 x i8] c"%s limit (%d) exceeded\00", align 1
@.str7 = private unnamed_addr constant [40 x i8] c"Complex regular subexpression recursion\00", align 1
@PL_savestack = external global %union.any*
@PL_stderrgv = external global %struct.gv*
@.str8 = private unnamed_addr constant [8 x i8] c"%lx %d\0A\00", align 1
@.str9 = private unnamed_addr constant [25 x i8] c"regexp memory corruption\00", align 1
@.str10 = private unnamed_addr constant [26 x i8] c"corrupted regexp pointers\00", align 1
@.str11 = private unnamed_addr constant [32 x i8] c"regexp unwind memory corruption\00", align 1
@.str12 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@PL_reg_oldsaved = external global i8*
@PL_reg_oldsavedlen = external global i64
@PL_reg_oldpos = external global i32
@PL_reg_oldcurpm = external global %struct.pmop*
@PL_curpm = external global %struct.pmop*

; Function Attrs: nounwind uwtable
define i32 @Perl_pregexec(%struct.regexp* %prog, i8* %stringarg, i8* %strend, i8* %strbeg, i32 %minend, %struct.sv* %screamer, i32 %nosave) #0 {
  %1 = alloca %struct.regexp*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.sv*, align 8
  %7 = alloca i32, align 4
  store %struct.regexp* %prog, %struct.regexp** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.regexp** %1, metadata !565, metadata !566), !dbg !567
  store i8* %stringarg, i8** %2, align 8
  call void @llvm.dbg.declare(metadata i8** %2, metadata !568, metadata !566), !dbg !569
  store i8* %strend, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !570, metadata !566), !dbg !571
  store i8* %strbeg, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !572, metadata !566), !dbg !573
  store i32 %minend, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !574, metadata !566), !dbg !575
  store %struct.sv* %screamer, %struct.sv** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.sv** %6, metadata !576, metadata !566), !dbg !577
  store i32 %nosave, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !578, metadata !566), !dbg !579
  %8 = load %struct.regexp** %1, align 8, !dbg !580
  %9 = load i8** %2, align 8, !dbg !581
  %10 = load i8** %3, align 8, !dbg !582
  %11 = load i8** %4, align 8, !dbg !583
  %12 = load i32* %5, align 4, !dbg !584
  %13 = load %struct.sv** %6, align 8, !dbg !585
  %14 = load i32* %7, align 4, !dbg !586
  %15 = icmp ne i32 %14, 0, !dbg !586
  %16 = select i1 %15, i32 0, i32 1, !dbg !586
  %17 = call i32 @Perl_regexec_flags(%struct.regexp* %8, i8* %9, i8* %10, i8* %11, i32 %12, %struct.sv* %13, i8* null, i32 %16), !dbg !587
  ret i32 %17, !dbg !588
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define i32 @Perl_regexec_flags(%struct.regexp* %prog, i8* %stringarg, i8* %strend, i8* %strbeg, i32 %minend, %struct.sv* %sv, i8* %data, i32 %flags) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.regexp*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.sv*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %s = alloca i8*, align 8
  %c = alloca %struct.regnode*, align 8
  %startpos = alloca i8*, align 8
  %minlen = alloca i32, align 4
  %dontbother = alloca i32, align 4
  %end_shift = alloca i32, align 4
  %scream_pos = alloca i32, align 4
  %scream_olds = alloca i8*, align 8
  %oreplsv = alloca %struct.sv*, align 8
  %do_utf8 = alloca i8, align 1
  %mg = alloca %struct.magic*, align 8
  %d = alloca %struct.re_scream_pos_data_s, align 8
  %end = alloca i8*, align 8
  %ch = alloca i8, align 1
  %must = alloca %struct.sv*, align 8
  %back_max = alloca i32, align 4
  %back_min = alloca i32, align 4
  %last = alloca i8*, align 8
  %last1 = alloca i8*, align 8
  %t = alloca i8*, align 8
  %op = alloca i32, align 4
  %last2 = alloca i8*, align 8
  %float_real = alloca %struct.sv*, align 8
  %len = alloca i64, align 8
  %little = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.regexp* %prog, %struct.regexp** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.regexp** %2, metadata !589, metadata !566), !dbg !590
  store i8* %stringarg, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !591, metadata !566), !dbg !592
  store i8* %strend, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !593, metadata !566), !dbg !594
  store i8* %strbeg, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !595, metadata !566), !dbg !596
  store i32 %minend, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !597, metadata !566), !dbg !598
  store %struct.sv* %sv, %struct.sv** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.sv** %7, metadata !599, metadata !566), !dbg !600
  store i8* %data, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !601, metadata !566), !dbg !602
  store i32 %flags, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !603, metadata !566), !dbg !604
  call void @llvm.dbg.declare(metadata i8** %s, metadata !605, metadata !566), !dbg !606
  call void @llvm.dbg.declare(metadata %struct.regnode** %c, metadata !607, metadata !566), !dbg !608
  call void @llvm.dbg.declare(metadata i8** %startpos, metadata !609, metadata !566), !dbg !610
  %10 = load i8** %3, align 8, !dbg !611
  store i8* %10, i8** %startpos, align 8, !dbg !610
  call void @llvm.dbg.declare(metadata i32* %minlen, metadata !612, metadata !566), !dbg !613
  call void @llvm.dbg.declare(metadata i32* %dontbother, metadata !614, metadata !566), !dbg !615
  store i32 0, i32* %dontbother, align 4, !dbg !615
  call void @llvm.dbg.declare(metadata i32* %end_shift, metadata !616, metadata !566), !dbg !617
  store i32 0, i32* %end_shift, align 4, !dbg !617
  call void @llvm.dbg.declare(metadata i32* %scream_pos, metadata !618, metadata !566), !dbg !619
  store i32 -1, i32* %scream_pos, align 4, !dbg !619
  call void @llvm.dbg.declare(metadata i8** %scream_olds, metadata !620, metadata !566), !dbg !621
  call void @llvm.dbg.declare(metadata %struct.sv** %oreplsv, metadata !622, metadata !566), !dbg !623
  %11 = load %struct.gv** @PL_replgv, align 8, !dbg !624
  %12 = getelementptr inbounds %struct.gv* %11, i32 0, i32 0, !dbg !624
  %13 = load %struct.xpvgv** %12, align 8, !dbg !624
  %14 = getelementptr inbounds %struct.xpvgv* %13, i32 0, i32 7, !dbg !624
  %15 = load %struct.gp** %14, align 8, !dbg !624
  %16 = getelementptr inbounds %struct.gp* %15, i32 0, i32 0, !dbg !624
  %17 = load %struct.sv** %16, align 8, !dbg !624
  store %struct.sv* %17, %struct.sv** %oreplsv, align 8, !dbg !623
  call void @llvm.dbg.declare(metadata i8* %do_utf8, metadata !625, metadata !566), !dbg !626
  %18 = load %struct.sv** %7, align 8, !dbg !627
  %19 = getelementptr inbounds %struct.sv* %18, i32 0, i32 2, !dbg !627
  %20 = load i32* %19, align 4, !dbg !627
  %21 = and i32 %20, 536870912, !dbg !627
  %22 = icmp ne i32 %21, 0, !dbg !627
  br i1 %22, label %23, label %31, !dbg !627

; <label>:23                                      ; preds = %0
  %24 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !628
  %25 = getelementptr inbounds %struct.cop* %24, i32 0, i32 7, !dbg !628
  %26 = load i8* %25, align 1, !dbg !628
  %27 = zext i8 %26 to i32, !dbg !628
  %28 = and i32 %27, 8, !dbg !628
  %29 = icmp ne i32 %28, 0, !dbg !628
  %30 = xor i1 %29, true, !dbg !628
  br label %31

; <label>:31                                      ; preds = %23, %0
  %32 = phi i1 [ false, %0 ], [ %30, %23 ]
  %33 = zext i1 %32 to i32, !dbg !630
  %34 = trunc i32 %33 to i8, !dbg !630
  store i8 %34, i8* %do_utf8, align 1, !dbg !626
  %35 = load i8* %do_utf8, align 1, !dbg !632
  %36 = sext i8 %35 to i32, !dbg !632
  %37 = icmp ne i32 %36, 0, !dbg !632
  br i1 %37, label %38, label %43, !dbg !632

; <label>:38                                      ; preds = %31
  %39 = load %struct.regexp** %2, align 8, !dbg !633
  %40 = getelementptr inbounds %struct.regexp* %39, i32 0, i32 15, !dbg !633
  %41 = load i32* %40, align 4, !dbg !633
  %42 = or i32 %41, 268435456, !dbg !633
  store i32 %42, i32* %40, align 4, !dbg !633
  store i8 1, i8* @PL_reg_match_utf8, align 1, !dbg !633
  br label %48, !dbg !633

; <label>:43                                      ; preds = %31
  %44 = load %struct.regexp** %2, align 8, !dbg !634
  %45 = getelementptr inbounds %struct.regexp* %44, i32 0, i32 15, !dbg !634
  %46 = load i32* %45, align 4, !dbg !634
  %47 = and i32 %46, -268435457, !dbg !634
  store i32 %47, i32* %45, align 4, !dbg !634
  store i8 0, i8* @PL_reg_match_utf8, align 1, !dbg !634
  br label %48, !dbg !634

; <label>:48                                      ; preds = %43, %38
  %49 = phi i32 [ 1, %38 ], [ 0, %43 ], !dbg !632
  store %struct.curcur* null, %struct.curcur** @PL_regcc, align 8, !dbg !635
  %50 = load %struct.regexp** %2, align 8, !dbg !636
  %51 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %50), !dbg !637
  %52 = load %struct.regexp** %2, align 8, !dbg !638
  %53 = icmp eq %struct.regexp* %52, null, !dbg !638
  br i1 %53, label %57, label %54, !dbg !640

; <label>:54                                      ; preds = %48
  %55 = load i8** %startpos, align 8, !dbg !641
  %56 = icmp eq i8* %55, null, !dbg !641
  br i1 %56, label %57, label %58, !dbg !640

; <label>:57                                      ; preds = %54, %48
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([22 x i8]* @.str, i32 0, i32 0)), !dbg !643
  store i32 0, i32* %1, !dbg !645
  br label %1534, !dbg !645

; <label>:58                                      ; preds = %54
  %59 = load %struct.regexp** %2, align 8, !dbg !646
  %60 = getelementptr inbounds %struct.regexp* %59, i32 0, i32 10, !dbg !646
  %61 = load i32* %60, align 4, !dbg !646
  store i32 %61, i32* %minlen, align 4, !dbg !647
  %62 = load i8** %4, align 8, !dbg !648
  %63 = load i8** %startpos, align 8, !dbg !650
  %64 = ptrtoint i8* %62 to i64, !dbg !648
  %65 = ptrtoint i8* %63 to i64, !dbg !648
  %66 = sub i64 %64, %65, !dbg !648
  %67 = load i32* %minlen, align 4, !dbg !651
  %68 = sext i32 %67 to i64, !dbg !651
  %69 = icmp slt i64 %66, %68, !dbg !648
  br i1 %69, label %70, label %71, !dbg !652

; <label>:70                                      ; preds = %58
  br label %1529, !dbg !653

; <label>:71                                      ; preds = %58
  %72 = load %struct.regexp** %2, align 8, !dbg !655
  %73 = getelementptr inbounds %struct.regexp* %72, i32 0, i32 16, !dbg !655
  %74 = getelementptr inbounds [1 x %struct.regnode]* %73, i32 0, i32 0, !dbg !655
  %75 = bitcast %struct.regnode* %74 to i8*, !dbg !655
  %76 = load i8* %75, align 1, !dbg !655
  %77 = zext i8 %76 to i32, !dbg !655
  %78 = icmp ne i32 %77, 156, !dbg !655
  br i1 %78, label %79, label %80, !dbg !657

; <label>:79                                      ; preds = %71
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([25 x i8]* @.str1, i32 0, i32 0)), !dbg !658
  br label %80, !dbg !660

; <label>:80                                      ; preds = %79, %71
  store i32 0, i32* @PL_reg_flags, align 4, !dbg !661
  store i32 0, i32* @PL_reg_eval_set, align 4, !dbg !662
  store i32 0, i32* @PL_reg_maxiter, align 4, !dbg !663
  %81 = load %struct.regexp** %2, align 8, !dbg !664
  %82 = getelementptr inbounds %struct.regexp* %81, i32 0, i32 15, !dbg !664
  %83 = load i32* %82, align 4, !dbg !664
  %84 = and i32 %83, 65536, !dbg !664
  %85 = icmp ne i32 %84, 0, !dbg !666
  br i1 %85, label %86, label %89, !dbg !666

; <label>:86                                      ; preds = %80
  %87 = load i32* @PL_reg_flags, align 4, !dbg !667
  %88 = or i32 %87, 8, !dbg !667
  store i32 %88, i32* @PL_reg_flags, align 4, !dbg !667
  br label %89, !dbg !667

; <label>:89                                      ; preds = %86, %80
  %90 = load i8** %startpos, align 8, !dbg !668
  store i8* %90, i8** @PL_regbol, align 8, !dbg !669
  %91 = load i8** %5, align 8, !dbg !670
  store i8* %91, i8** @PL_bostr, align 8, !dbg !671
  %92 = load %struct.sv** %7, align 8, !dbg !672
  store %struct.sv* %92, %struct.sv** @PL_reg_sv, align 8, !dbg !673
  %93 = load i8** %4, align 8, !dbg !674
  store i8* %93, i8** @PL_regeol, align 8, !dbg !675
  %94 = load i8** %startpos, align 8, !dbg !676
  %95 = load i32* %6, align 4, !dbg !677
  %96 = sext i32 %95 to i64, !dbg !676
  %97 = getelementptr inbounds i8* %94, i64 %96, !dbg !676
  store i8* %97, i8** @PL_regtill, align 8, !dbg !678
  store %struct.re_cc_state* null, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !679
  %98 = load i8** %startpos, align 8, !dbg !680
  store i8* %98, i8** %s, align 8, !dbg !681
  %99 = load %struct.regexp** %2, align 8, !dbg !682
  %100 = getelementptr inbounds %struct.regexp* %99, i32 0, i32 15, !dbg !682
  %101 = load i32* %100, align 4, !dbg !682
  %102 = and i32 %101, 128, !dbg !682
  %103 = icmp ne i32 %102, 0, !dbg !684
  br i1 %103, label %104, label %160, !dbg !684

; <label>:104                                     ; preds = %89
  call void @llvm.dbg.declare(metadata %struct.magic** %mg, metadata !685, metadata !566), !dbg !687
  %105 = load i32* %9, align 4, !dbg !688
  %106 = and i32 %105, 8, !dbg !688
  %107 = icmp ne i32 %106, 0, !dbg !690
  br i1 %107, label %108, label %110, !dbg !690

; <label>:108                                     ; preds = %104
  %109 = load i8** %startpos, align 8, !dbg !691
  store i8* %109, i8** @PL_reg_ganch, align 8, !dbg !692
  br label %159, !dbg !692

; <label>:110                                     ; preds = %104
  %111 = load %struct.sv** %7, align 8, !dbg !693
  %112 = icmp ne %struct.sv* %111, null, !dbg !695
  br i1 %112, label %113, label %156, !dbg !695

; <label>:113                                     ; preds = %110
  %114 = load %struct.sv** %7, align 8, !dbg !696
  %115 = getelementptr inbounds %struct.sv* %114, i32 0, i32 2, !dbg !696
  %116 = load i32* %115, align 4, !dbg !696
  %117 = and i32 %116, 255, !dbg !696
  %118 = icmp uge i32 %117, 7, !dbg !696
  br i1 %118, label %119, label %156, !dbg !695

; <label>:119                                     ; preds = %113
  %120 = load %struct.sv** %7, align 8, !dbg !698
  %121 = getelementptr inbounds %struct.sv* %120, i32 0, i32 0, !dbg !698
  %122 = load i8** %121, align 8, !dbg !698
  %123 = bitcast i8* %122 to %struct.xpvmg*, !dbg !698
  %124 = getelementptr inbounds %struct.xpvmg* %123, i32 0, i32 5, !dbg !698
  %125 = load %struct.magic** %124, align 8, !dbg !698
  %126 = icmp ne %struct.magic* %125, null, !dbg !695
  br i1 %126, label %127, label %156, !dbg !695

; <label>:127                                     ; preds = %119
  %128 = load %struct.sv** %7, align 8, !dbg !699
  %129 = call %struct.magic* @Perl_mg_find(%struct.sv* %128, i32 103), !dbg !700
  store %struct.magic* %129, %struct.magic** %mg, align 8, !dbg !701
  %130 = icmp ne %struct.magic* %129, null, !dbg !695
  br i1 %130, label %131, label %156, !dbg !695

; <label>:131                                     ; preds = %127
  %132 = load %struct.magic** %mg, align 8, !dbg !702
  %133 = getelementptr inbounds %struct.magic* %132, i32 0, i32 7, !dbg !702
  %134 = load i32* %133, align 4, !dbg !702
  %135 = icmp sge i32 %134, 0, !dbg !702
  br i1 %135, label %136, label %156, !dbg !695

; <label>:136                                     ; preds = %131
  %137 = load i8** %5, align 8, !dbg !703
  %138 = load %struct.magic** %mg, align 8, !dbg !705
  %139 = getelementptr inbounds %struct.magic* %138, i32 0, i32 7, !dbg !705
  %140 = load i32* %139, align 4, !dbg !705
  %141 = sext i32 %140 to i64, !dbg !703
  %142 = getelementptr inbounds i8* %137, i64 %141, !dbg !703
  store i8* %142, i8** @PL_reg_ganch, align 8, !dbg !706
  %143 = load %struct.regexp** %2, align 8, !dbg !707
  %144 = getelementptr inbounds %struct.regexp* %143, i32 0, i32 15, !dbg !707
  %145 = load i32* %144, align 4, !dbg !707
  %146 = and i32 %145, 8, !dbg !707
  %147 = icmp ne i32 %146, 0, !dbg !709
  br i1 %147, label %148, label %155, !dbg !709

; <label>:148                                     ; preds = %136
  %149 = load i8** %s, align 8, !dbg !710
  %150 = load i8** @PL_reg_ganch, align 8, !dbg !713
  %151 = icmp ugt i8* %149, %150, !dbg !710
  br i1 %151, label %152, label %153, !dbg !714

; <label>:152                                     ; preds = %148
  br label %1529, !dbg !715

; <label>:153                                     ; preds = %148
  %154 = load i8** @PL_reg_ganch, align 8, !dbg !716
  store i8* %154, i8** %s, align 8, !dbg !717
  br label %155, !dbg !718

; <label>:155                                     ; preds = %153, %136
  br label %158, !dbg !719

; <label>:156                                     ; preds = %131, %127, %119, %113, %110
  %157 = load i8** %5, align 8, !dbg !720
  store i8* %157, i8** @PL_reg_ganch, align 8, !dbg !721
  br label %158

; <label>:158                                     ; preds = %156, %155
  br label %159

; <label>:159                                     ; preds = %158, %108
  br label %160, !dbg !722

; <label>:160                                     ; preds = %159, %89
  %161 = load i32* %9, align 4, !dbg !723
  %162 = and i32 %161, 2, !dbg !723
  %163 = icmp ne i32 %162, 0, !dbg !725
  br i1 %163, label %195, label %164, !dbg !725

; <label>:164                                     ; preds = %160
  %165 = load %struct.regexp** %2, align 8, !dbg !726
  %166 = getelementptr inbounds %struct.regexp* %165, i32 0, i32 3, !dbg !726
  %167 = load %struct.reg_substr_data** %166, align 8, !dbg !726
  %168 = getelementptr inbounds %struct.reg_substr_data* %167, i32 0, i32 0, !dbg !726
  %169 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %168, i32 0, i64 2, !dbg !726
  %170 = getelementptr inbounds %struct.reg_substr_datum* %169, i32 0, i32 2, !dbg !726
  %171 = load %struct.sv** %170, align 8, !dbg !726
  %172 = icmp ne %struct.sv* %171, null, !dbg !726
  br i1 %172, label %182, label %173, !dbg !725

; <label>:173                                     ; preds = %164
  %174 = load %struct.regexp** %2, align 8, !dbg !728
  %175 = getelementptr inbounds %struct.regexp* %174, i32 0, i32 3, !dbg !728
  %176 = load %struct.reg_substr_data** %175, align 8, !dbg !728
  %177 = getelementptr inbounds %struct.reg_substr_data* %176, i32 0, i32 0, !dbg !728
  %178 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %177, i32 0, i64 2, !dbg !728
  %179 = getelementptr inbounds %struct.reg_substr_datum* %178, i32 0, i32 3, !dbg !728
  %180 = load %struct.sv** %179, align 8, !dbg !728
  %181 = icmp ne %struct.sv* %180, null, !dbg !728
  br i1 %181, label %182, label %195, !dbg !725

; <label>:182                                     ; preds = %173, %164
  call void @llvm.dbg.declare(metadata %struct.re_scream_pos_data_s* %d, metadata !730, metadata !566), !dbg !732
  %183 = getelementptr inbounds %struct.re_scream_pos_data_s* %d, i32 0, i32 0, !dbg !733
  store i8** %scream_olds, i8*** %183, align 8, !dbg !733
  %184 = getelementptr inbounds %struct.re_scream_pos_data_s* %d, i32 0, i32 1, !dbg !734
  store i32* %scream_pos, i32** %184, align 8, !dbg !734
  %185 = load %struct.regexp** %2, align 8, !dbg !735
  %186 = load %struct.sv** %7, align 8, !dbg !736
  %187 = load i8** %s, align 8, !dbg !737
  %188 = load i8** %4, align 8, !dbg !738
  %189 = load i32* %9, align 4, !dbg !739
  %190 = call i8* @Perl_re_intuit_start(%struct.regexp* %185, %struct.sv* %186, i8* %187, i8* %188, i32 %189, %struct.re_scream_pos_data_s* %d), !dbg !740
  store i8* %190, i8** %s, align 8, !dbg !741
  %191 = load i8** %s, align 8, !dbg !742
  %192 = icmp ne i8* %191, null, !dbg !744
  br i1 %192, label %194, label %193, !dbg !744

; <label>:193                                     ; preds = %182
  br label %1529, !dbg !745

; <label>:194                                     ; preds = %182
  br label %195, !dbg !747

; <label>:195                                     ; preds = %194, %173, %160
  %196 = load %struct.regexp** %2, align 8, !dbg !748
  %197 = getelementptr inbounds %struct.regexp* %196, i32 0, i32 15, !dbg !748
  %198 = load i32* %197, align 4, !dbg !748
  %199 = and i32 %198, 7, !dbg !748
  %200 = icmp ne i32 %199, 0, !dbg !750
  br i1 %200, label %201, label %340, !dbg !750

; <label>:201                                     ; preds = %195
  %202 = load i8** %s, align 8, !dbg !751
  %203 = load i8** %startpos, align 8, !dbg !754
  %204 = icmp eq i8* %202, %203, !dbg !751
  br i1 %204, label %205, label %211, !dbg !755

; <label>:205                                     ; preds = %201
  %206 = load %struct.regexp** %2, align 8, !dbg !756
  %207 = load i8** %startpos, align 8, !dbg !758
  %208 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %206, i8* %207), !dbg !759
  %209 = icmp ne i32 %208, 0, !dbg !755
  br i1 %209, label %210, label %211, !dbg !755

; <label>:210                                     ; preds = %205
  br label %1429, !dbg !760

; <label>:211                                     ; preds = %205, %201
  %212 = load i32* @PL_multiline, align 4, !dbg !761
  %213 = icmp ne i32 %212, 0, !dbg !763
  br i1 %213, label %226, label %214, !dbg !763

; <label>:214                                     ; preds = %211
  %215 = load %struct.regexp** %2, align 8, !dbg !764
  %216 = getelementptr inbounds %struct.regexp* %215, i32 0, i32 15, !dbg !764
  %217 = load i32* %216, align 4, !dbg !764
  %218 = and i32 %217, 32, !dbg !764
  %219 = icmp ne i32 %218, 0, !dbg !763
  br i1 %219, label %226, label %220, !dbg !763

; <label>:220                                     ; preds = %214
  %221 = load %struct.regexp** %2, align 8, !dbg !766
  %222 = getelementptr inbounds %struct.regexp* %221, i32 0, i32 15, !dbg !766
  %223 = load i32* %222, align 4, !dbg !766
  %224 = and i32 %223, 2, !dbg !766
  %225 = icmp ne i32 %224, 0, !dbg !763
  br i1 %225, label %226, label %338, !dbg !763

; <label>:226                                     ; preds = %220, %214, %211
  call void @llvm.dbg.declare(metadata i8** %end, metadata !767, metadata !566), !dbg !769
  %227 = load i32* %minlen, align 4, !dbg !770
  %228 = icmp ne i32 %227, 0, !dbg !772
  br i1 %228, label %229, label %232, !dbg !772

; <label>:229                                     ; preds = %226
  %230 = load i32* %minlen, align 4, !dbg !773
  %231 = sub nsw i32 %230, 1, !dbg !773
  store i32 %231, i32* %dontbother, align 4, !dbg !774
  br label %232, !dbg !774

; <label>:232                                     ; preds = %229, %226
  %233 = load i8* @PL_reg_match_utf8, align 1, !dbg !775
  %234 = sext i8 %233 to i32, !dbg !775
  %235 = icmp ne i32 %234, 0, !dbg !775
  br i1 %235, label %236, label %244, !dbg !775

; <label>:236                                     ; preds = %232
  %237 = load i8** %4, align 8, !dbg !776
  %238 = load i32* %dontbother, align 4, !dbg !776
  %239 = sub nsw i32 0, %238, !dbg !776
  %240 = load i8** %5, align 8, !dbg !776
  %241 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %237, i32 %239, i8* %240), !dbg !776
  %242 = sext i32 %241 to i64, !dbg !776
  %243 = inttoptr i64 %242 to i8*, !dbg !776
  br label %250, !dbg !776

; <label>:244                                     ; preds = %232
  %245 = load i8** %4, align 8, !dbg !778
  %246 = load i32* %dontbother, align 4, !dbg !778
  %247 = sub nsw i32 0, %246, !dbg !778
  %248 = sext i32 %247 to i64, !dbg !778
  %249 = getelementptr inbounds i8* %245, i64 %248, !dbg !778
  br label %250, !dbg !778

; <label>:250                                     ; preds = %244, %236
  %251 = phi i8* [ %243, %236 ], [ %249, %244 ], !dbg !775
  %252 = getelementptr inbounds i8* %251, i64 -1, !dbg !780
  store i8* %252, i8** %end, align 8, !dbg !783
  %253 = load %struct.regexp** %2, align 8, !dbg !784
  %254 = getelementptr inbounds %struct.regexp* %253, i32 0, i32 3, !dbg !784
  %255 = load %struct.reg_substr_data** %254, align 8, !dbg !784
  %256 = getelementptr inbounds %struct.reg_substr_data* %255, i32 0, i32 0, !dbg !784
  %257 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %256, i32 0, i64 2, !dbg !784
  %258 = getelementptr inbounds %struct.reg_substr_datum* %257, i32 0, i32 2, !dbg !784
  %259 = load %struct.sv** %258, align 8, !dbg !784
  %260 = icmp ne %struct.sv* %259, null, !dbg !786
  br i1 %260, label %270, label %261, !dbg !786

; <label>:261                                     ; preds = %250
  %262 = load %struct.regexp** %2, align 8, !dbg !787
  %263 = getelementptr inbounds %struct.regexp* %262, i32 0, i32 3, !dbg !787
  %264 = load %struct.reg_substr_data** %263, align 8, !dbg !787
  %265 = getelementptr inbounds %struct.reg_substr_data* %264, i32 0, i32 0, !dbg !787
  %266 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %265, i32 0, i64 2, !dbg !787
  %267 = getelementptr inbounds %struct.reg_substr_datum* %266, i32 0, i32 3, !dbg !787
  %268 = load %struct.sv** %267, align 8, !dbg !787
  %269 = icmp ne %struct.sv* %268, null, !dbg !786
  br i1 %269, label %270, label %310, !dbg !786

; <label>:270                                     ; preds = %261, %250
  %271 = load i8** %s, align 8, !dbg !789
  %272 = load i8** %startpos, align 8, !dbg !792
  %273 = icmp eq i8* %271, %272, !dbg !789
  br i1 %273, label %274, label %275, !dbg !793

; <label>:274                                     ; preds = %270
  br label %283, !dbg !794

; <label>:275                                     ; preds = %270
  br label %276, !dbg !795

; <label>:276                                     ; preds = %275, %309
  %277 = load %struct.regexp** %2, align 8, !dbg !796
  %278 = load i8** %s, align 8, !dbg !799
  %279 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %277, i8* %278), !dbg !800
  %280 = icmp ne i32 %279, 0, !dbg !801
  br i1 %280, label %281, label %282, !dbg !801

; <label>:281                                     ; preds = %276
  br label %1429, !dbg !802

; <label>:282                                     ; preds = %276
  br label %283, !dbg !803

; <label>:283                                     ; preds = %282, %274
  %284 = load i8** %s, align 8, !dbg !805
  %285 = load i8** %end, align 8, !dbg !807
  %286 = icmp uge i8* %284, %285, !dbg !805
  br i1 %286, label %287, label %288, !dbg !808

; <label>:287                                     ; preds = %283
  br label %1529, !dbg !809

; <label>:288                                     ; preds = %283
  %289 = load %struct.regexp** %2, align 8, !dbg !810
  %290 = getelementptr inbounds %struct.regexp* %289, i32 0, i32 15, !dbg !810
  %291 = load i32* %290, align 4, !dbg !810
  %292 = and i32 %291, 3145728, !dbg !810
  %293 = icmp ne i32 %292, 0, !dbg !812
  br i1 %293, label %294, label %306, !dbg !812

; <label>:294                                     ; preds = %288
  %295 = load %struct.regexp** %2, align 8, !dbg !813
  %296 = load %struct.sv** %7, align 8, !dbg !815
  %297 = load i8** %s, align 8, !dbg !816
  %298 = getelementptr inbounds i8* %297, i64 1, !dbg !816
  %299 = load i8** %4, align 8, !dbg !817
  %300 = load i32* %9, align 4, !dbg !818
  %301 = call i8* @Perl_re_intuit_start(%struct.regexp* %295, %struct.sv* %296, i8* %298, i8* %299, i32 %300, %struct.re_scream_pos_data_s* null), !dbg !819
  store i8* %301, i8** %s, align 8, !dbg !820
  %302 = load i8** %s, align 8, !dbg !821
  %303 = icmp ne i8* %302, null, !dbg !823
  br i1 %303, label %305, label %304, !dbg !823

; <label>:304                                     ; preds = %294
  br label %1529, !dbg !824

; <label>:305                                     ; preds = %294
  br label %309, !dbg !825

; <label>:306                                     ; preds = %288
  %307 = load i8** %s, align 8, !dbg !826
  %308 = getelementptr inbounds i8* %307, i32 1, !dbg !826
  store i8* %308, i8** %s, align 8, !dbg !826
  br label %309

; <label>:309                                     ; preds = %306, %305
  br label %276, !dbg !795

; <label>:310                                     ; preds = %261
  %311 = load i8** %s, align 8, !dbg !827
  %312 = load i8** %startpos, align 8, !dbg !830
  %313 = icmp ugt i8* %311, %312, !dbg !827
  br i1 %313, label %314, label %317, !dbg !831

; <label>:314                                     ; preds = %310
  %315 = load i8** %s, align 8, !dbg !832
  %316 = getelementptr inbounds i8* %315, i32 -1, !dbg !832
  store i8* %316, i8** %s, align 8, !dbg !832
  br label %317, !dbg !832

; <label>:317                                     ; preds = %314, %310
  br label %318, !dbg !833

; <label>:318                                     ; preds = %335, %317
  %319 = load i8** %s, align 8, !dbg !834
  %320 = load i8** %end, align 8, !dbg !837
  %321 = icmp ult i8* %319, %320, !dbg !838
  br i1 %321, label %322, label %336, !dbg !833

; <label>:322                                     ; preds = %318
  %323 = load i8** %s, align 8, !dbg !839
  %324 = getelementptr inbounds i8* %323, i32 1, !dbg !839
  store i8* %324, i8** %s, align 8, !dbg !839
  %325 = load i8* %323, align 1, !dbg !842
  %326 = sext i8 %325 to i32, !dbg !842
  %327 = icmp eq i32 %326, 10, !dbg !842
  br i1 %327, label %328, label %335, !dbg !843

; <label>:328                                     ; preds = %322
  %329 = load %struct.regexp** %2, align 8, !dbg !844
  %330 = load i8** %s, align 8, !dbg !847
  %331 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %329, i8* %330), !dbg !848
  %332 = icmp ne i32 %331, 0, !dbg !849
  br i1 %332, label %333, label %334, !dbg !849

; <label>:333                                     ; preds = %328
  br label %1429, !dbg !850

; <label>:334                                     ; preds = %328
  br label %335, !dbg !851

; <label>:335                                     ; preds = %334, %322
  br label %318, !dbg !833

; <label>:336                                     ; preds = %318
  br label %337

; <label>:337                                     ; preds = %336
  br label %338, !dbg !852

; <label>:338                                     ; preds = %337, %220
  br label %339

; <label>:339                                     ; preds = %338
  br label %1529, !dbg !853

; <label>:340                                     ; preds = %195
  %341 = load %struct.regexp** %2, align 8, !dbg !854
  %342 = getelementptr inbounds %struct.regexp* %341, i32 0, i32 15, !dbg !854
  %343 = load i32* %342, align 4, !dbg !854
  %344 = and i32 %343, 8, !dbg !854
  %345 = icmp ne i32 %344, 0, !dbg !856
  br i1 %345, label %346, label %353, !dbg !856

; <label>:346                                     ; preds = %340
  %347 = load %struct.regexp** %2, align 8, !dbg !857
  %348 = load i8** @PL_reg_ganch, align 8, !dbg !860
  %349 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %347, i8* %348), !dbg !861
  %350 = icmp ne i32 %349, 0, !dbg !862
  br i1 %350, label %351, label %352, !dbg !862

; <label>:351                                     ; preds = %346
  br label %1429, !dbg !863

; <label>:352                                     ; preds = %346
  br label %1529, !dbg !864

; <label>:353                                     ; preds = %340
  br label %354

; <label>:354                                     ; preds = %353
  %355 = load %struct.regexp** %2, align 8, !dbg !865
  %356 = getelementptr inbounds %struct.regexp* %355, i32 0, i32 3, !dbg !865
  %357 = load %struct.reg_substr_data** %356, align 8, !dbg !865
  %358 = getelementptr inbounds %struct.reg_substr_data* %357, i32 0, i32 0, !dbg !865
  %359 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %358, i32 0, i64 0, !dbg !865
  %360 = getelementptr inbounds %struct.reg_substr_datum* %359, i32 0, i32 2, !dbg !865
  %361 = load %struct.sv** %360, align 8, !dbg !865
  %362 = icmp ne %struct.sv* %361, null, !dbg !867
  br i1 %362, label %372, label %363, !dbg !867

; <label>:363                                     ; preds = %354
  %364 = load %struct.regexp** %2, align 8, !dbg !868
  %365 = getelementptr inbounds %struct.regexp* %364, i32 0, i32 3, !dbg !868
  %366 = load %struct.reg_substr_data** %365, align 8, !dbg !868
  %367 = getelementptr inbounds %struct.reg_substr_data* %366, i32 0, i32 0, !dbg !868
  %368 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %367, i32 0, i64 0, !dbg !868
  %369 = getelementptr inbounds %struct.reg_substr_datum* %368, i32 0, i32 3, !dbg !868
  %370 = load %struct.sv** %369, align 8, !dbg !868
  %371 = icmp ne %struct.sv* %370, null, !dbg !867
  br i1 %371, label %372, label %549, !dbg !867

; <label>:372                                     ; preds = %363, %354
  %373 = load %struct.regexp** %2, align 8, !dbg !870
  %374 = getelementptr inbounds %struct.regexp* %373, i32 0, i32 15, !dbg !870
  %375 = load i32* %374, align 4, !dbg !870
  %376 = and i32 %375, 16, !dbg !870
  %377 = icmp ne i32 %376, 0, !dbg !867
  br i1 %377, label %378, label %549, !dbg !867

; <label>:378                                     ; preds = %372
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !873, metadata !566), !dbg !875
  %379 = load i8* %do_utf8, align 1, !dbg !876
  %380 = sext i8 %379 to i32, !dbg !876
  %381 = icmp ne i32 %380, 0, !dbg !878
  br i1 %381, label %382, label %391, !dbg !878

; <label>:382                                     ; preds = %378
  %383 = load %struct.regexp** %2, align 8, !dbg !879
  %384 = getelementptr inbounds %struct.regexp* %383, i32 0, i32 3, !dbg !879
  %385 = load %struct.reg_substr_data** %384, align 8, !dbg !879
  %386 = getelementptr inbounds %struct.reg_substr_data* %385, i32 0, i32 0, !dbg !879
  %387 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %386, i32 0, i64 0, !dbg !879
  %388 = getelementptr inbounds %struct.reg_substr_datum* %387, i32 0, i32 3, !dbg !879
  %389 = load %struct.sv** %388, align 8, !dbg !879
  %390 = icmp ne %struct.sv* %389, null, !dbg !878
  br i1 %390, label %412, label %400, !dbg !878

; <label>:391                                     ; preds = %378
  %392 = load %struct.regexp** %2, align 8, !dbg !881
  %393 = getelementptr inbounds %struct.regexp* %392, i32 0, i32 3, !dbg !881
  %394 = load %struct.reg_substr_data** %393, align 8, !dbg !881
  %395 = getelementptr inbounds %struct.reg_substr_data* %394, i32 0, i32 0, !dbg !881
  %396 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %395, i32 0, i64 0, !dbg !881
  %397 = getelementptr inbounds %struct.reg_substr_datum* %396, i32 0, i32 2, !dbg !881
  %398 = load %struct.sv** %397, align 8, !dbg !881
  %399 = icmp ne %struct.sv* %398, null, !dbg !878
  br i1 %399, label %412, label %400, !dbg !878

; <label>:400                                     ; preds = %391, %382
  %401 = load i8* %do_utf8, align 1, !dbg !883
  %402 = sext i8 %401 to i32, !dbg !883
  %403 = icmp ne i32 %402, 0, !dbg !883
  br i1 %403, label %404, label %407, !dbg !883

; <label>:404                                     ; preds = %400
  %405 = load %struct.regexp** %2, align 8, !dbg !884
  %406 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_utf8_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %405), !dbg !885
  br label %410, !dbg !883

; <label>:407                                     ; preds = %400
  %408 = load %struct.regexp** %2, align 8, !dbg !886
  %409 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_byte_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %408), !dbg !887
  br label %410, !dbg !883

; <label>:410                                     ; preds = %407, %404
  %411 = phi i32 [ %406, %404 ], [ %409, %407 ], !dbg !883
  br label %412, !dbg !888

; <label>:412                                     ; preds = %410, %391, %382
  %413 = load i8* %do_utf8, align 1, !dbg !891
  %414 = sext i8 %413 to i32, !dbg !891
  %415 = icmp ne i32 %414, 0, !dbg !891
  br i1 %415, label %416, label %424, !dbg !891

; <label>:416                                     ; preds = %412
  %417 = load %struct.regexp** %2, align 8, !dbg !892
  %418 = getelementptr inbounds %struct.regexp* %417, i32 0, i32 3, !dbg !892
  %419 = load %struct.reg_substr_data** %418, align 8, !dbg !892
  %420 = getelementptr inbounds %struct.reg_substr_data* %419, i32 0, i32 0, !dbg !892
  %421 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %420, i32 0, i64 0, !dbg !892
  %422 = getelementptr inbounds %struct.reg_substr_datum* %421, i32 0, i32 3, !dbg !892
  %423 = load %struct.sv** %422, align 8, !dbg !892
  br label %432, !dbg !892

; <label>:424                                     ; preds = %412
  %425 = load %struct.regexp** %2, align 8, !dbg !894
  %426 = getelementptr inbounds %struct.regexp* %425, i32 0, i32 3, !dbg !894
  %427 = load %struct.reg_substr_data** %426, align 8, !dbg !894
  %428 = getelementptr inbounds %struct.reg_substr_data* %427, i32 0, i32 0, !dbg !894
  %429 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %428, i32 0, i64 0, !dbg !894
  %430 = getelementptr inbounds %struct.reg_substr_datum* %429, i32 0, i32 2, !dbg !894
  %431 = load %struct.sv** %430, align 8, !dbg !894
  br label %432, !dbg !894

; <label>:432                                     ; preds = %424, %416
  %433 = phi %struct.sv* [ %423, %416 ], [ %431, %424 ], !dbg !891
  %434 = getelementptr inbounds %struct.sv* %433, i32 0, i32 0, !dbg !896
  %435 = load i8** %434, align 8, !dbg !896
  %436 = bitcast i8* %435 to %struct.xpv*, !dbg !896
  %437 = getelementptr inbounds %struct.xpv* %436, i32 0, i32 0, !dbg !896
  %438 = load i8** %437, align 8, !dbg !896
  %439 = getelementptr inbounds i8* %438, i64 0, !dbg !896
  %440 = load i8* %439, align 1, !dbg !896
  store i8 %440, i8* %ch, align 1, !dbg !899
  %441 = load i8* %do_utf8, align 1, !dbg !900
  %442 = icmp ne i8 %441, 0, !dbg !902
  br i1 %442, label %443, label %506, !dbg !902

; <label>:443                                     ; preds = %432
  br label %444, !dbg !903

; <label>:444                                     ; preds = %495, %443
  %445 = load i8** %s, align 8, !dbg !905
  %446 = load i8** %4, align 8, !dbg !908
  %447 = icmp ult i8* %445, %446, !dbg !909
  br i1 %447, label %448, label %505, !dbg !903

; <label>:448                                     ; preds = %444
  %449 = load i8** %s, align 8, !dbg !910
  %450 = load i8* %449, align 1, !dbg !913
  %451 = sext i8 %450 to i32, !dbg !913
  %452 = load i8* %ch, align 1, !dbg !914
  %453 = sext i8 %452 to i32, !dbg !914
  %454 = icmp eq i32 %451, %453, !dbg !913
  br i1 %454, label %455, label %495, !dbg !915

; <label>:455                                     ; preds = %448
  %456 = load %struct.regexp** %2, align 8, !dbg !916
  %457 = load i8** %s, align 8, !dbg !919
  %458 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %456, i8* %457), !dbg !920
  %459 = icmp ne i32 %458, 0, !dbg !921
  br i1 %459, label %460, label %461, !dbg !921

; <label>:460                                     ; preds = %455
  br label %1429, !dbg !922

; <label>:461                                     ; preds = %455
  %462 = load i8** %s, align 8, !dbg !924
  %463 = load i8* %462, align 1, !dbg !924
  %464 = zext i8 %463 to i64, !dbg !924
  %465 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %464, !dbg !924
  %466 = load i8* %465, align 1, !dbg !924
  %467 = zext i8 %466 to i32, !dbg !924
  %468 = load i8** %s, align 8, !dbg !925
  %469 = sext i32 %467 to i64, !dbg !925
  %470 = getelementptr inbounds i8* %468, i64 %469, !dbg !925
  store i8* %470, i8** %s, align 8, !dbg !925
  br label %471, !dbg !926

; <label>:471                                     ; preds = %484, %461
  %472 = load i8** %s, align 8, !dbg !927
  %473 = load i8** %4, align 8, !dbg !930
  %474 = icmp ult i8* %472, %473, !dbg !931
  br i1 %474, label %475, label %482, !dbg !931

; <label>:475                                     ; preds = %471
  %476 = load i8** %s, align 8, !dbg !932
  %477 = load i8* %476, align 1, !dbg !934
  %478 = sext i8 %477 to i32, !dbg !934
  %479 = load i8* %ch, align 1, !dbg !935
  %480 = sext i8 %479 to i32, !dbg !935
  %481 = icmp eq i32 %478, %480, !dbg !934
  br label %482

; <label>:482                                     ; preds = %475, %471
  %483 = phi i1 [ false, %471 ], [ %481, %475 ]
  br i1 %483, label %484, label %494, !dbg !936

; <label>:484                                     ; preds = %482
  %485 = load i8** %s, align 8, !dbg !938
  %486 = load i8* %485, align 1, !dbg !938
  %487 = zext i8 %486 to i64, !dbg !938
  %488 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %487, !dbg !938
  %489 = load i8* %488, align 1, !dbg !938
  %490 = zext i8 %489 to i32, !dbg !938
  %491 = load i8** %s, align 8, !dbg !939
  %492 = sext i32 %490 to i64, !dbg !939
  %493 = getelementptr inbounds i8* %491, i64 %492, !dbg !939
  store i8* %493, i8** %s, align 8, !dbg !939
  br label %471, !dbg !926

; <label>:494                                     ; preds = %482
  br label %495, !dbg !940

; <label>:495                                     ; preds = %494, %448
  %496 = load i8** %s, align 8, !dbg !941
  %497 = load i8* %496, align 1, !dbg !941
  %498 = zext i8 %497 to i64, !dbg !941
  %499 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %498, !dbg !941
  %500 = load i8* %499, align 1, !dbg !941
  %501 = zext i8 %500 to i32, !dbg !941
  %502 = load i8** %s, align 8, !dbg !942
  %503 = sext i32 %501 to i64, !dbg !942
  %504 = getelementptr inbounds i8* %502, i64 %503, !dbg !942
  store i8* %504, i8** %s, align 8, !dbg !942
  br label %444, !dbg !903

; <label>:505                                     ; preds = %444
  br label %548, !dbg !943

; <label>:506                                     ; preds = %432
  br label %507, !dbg !944

; <label>:507                                     ; preds = %544, %506
  %508 = load i8** %s, align 8, !dbg !946
  %509 = load i8** %4, align 8, !dbg !949
  %510 = icmp ult i8* %508, %509, !dbg !950
  br i1 %510, label %511, label %547, !dbg !944

; <label>:511                                     ; preds = %507
  %512 = load i8** %s, align 8, !dbg !951
  %513 = load i8* %512, align 1, !dbg !954
  %514 = sext i8 %513 to i32, !dbg !954
  %515 = load i8* %ch, align 1, !dbg !955
  %516 = sext i8 %515 to i32, !dbg !955
  %517 = icmp eq i32 %514, %516, !dbg !954
  br i1 %517, label %518, label %544, !dbg !956

; <label>:518                                     ; preds = %511
  %519 = load %struct.regexp** %2, align 8, !dbg !957
  %520 = load i8** %s, align 8, !dbg !960
  %521 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %519, i8* %520), !dbg !961
  %522 = icmp ne i32 %521, 0, !dbg !962
  br i1 %522, label %523, label %524, !dbg !962

; <label>:523                                     ; preds = %518
  br label %1429, !dbg !963

; <label>:524                                     ; preds = %518
  %525 = load i8** %s, align 8, !dbg !965
  %526 = getelementptr inbounds i8* %525, i32 1, !dbg !965
  store i8* %526, i8** %s, align 8, !dbg !965
  br label %527, !dbg !966

; <label>:527                                     ; preds = %540, %524
  %528 = load i8** %s, align 8, !dbg !967
  %529 = load i8** %4, align 8, !dbg !970
  %530 = icmp ult i8* %528, %529, !dbg !971
  br i1 %530, label %531, label %538, !dbg !971

; <label>:531                                     ; preds = %527
  %532 = load i8** %s, align 8, !dbg !972
  %533 = load i8* %532, align 1, !dbg !974
  %534 = sext i8 %533 to i32, !dbg !974
  %535 = load i8* %ch, align 1, !dbg !975
  %536 = sext i8 %535 to i32, !dbg !975
  %537 = icmp eq i32 %534, %536, !dbg !974
  br label %538

; <label>:538                                     ; preds = %531, %527
  %539 = phi i1 [ false, %527 ], [ %537, %531 ]
  br i1 %539, label %540, label %543, !dbg !976

; <label>:540                                     ; preds = %538
  %541 = load i8** %s, align 8, !dbg !978
  %542 = getelementptr inbounds i8* %541, i32 1, !dbg !978
  store i8* %542, i8** %s, align 8, !dbg !978
  br label %527, !dbg !966

; <label>:543                                     ; preds = %538
  br label %544, !dbg !979

; <label>:544                                     ; preds = %543, %511
  %545 = load i8** %s, align 8, !dbg !980
  %546 = getelementptr inbounds i8* %545, i32 1, !dbg !980
  store i8* %546, i8** %s, align 8, !dbg !980
  br label %507, !dbg !944

; <label>:547                                     ; preds = %507
  br label %548

; <label>:548                                     ; preds = %547, %505
  br label %1428, !dbg !981

; <label>:549                                     ; preds = %372, %363
  %550 = load %struct.regexp** %2, align 8, !dbg !982
  %551 = getelementptr inbounds %struct.regexp* %550, i32 0, i32 3, !dbg !982
  %552 = load %struct.reg_substr_data** %551, align 8, !dbg !982
  %553 = getelementptr inbounds %struct.reg_substr_data* %552, i32 0, i32 0, !dbg !982
  %554 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %553, i32 0, i64 0, !dbg !982
  %555 = getelementptr inbounds %struct.reg_substr_datum* %554, i32 0, i32 2, !dbg !982
  %556 = load %struct.sv** %555, align 8, !dbg !982
  %557 = icmp ne %struct.sv* %556, null, !dbg !982
  br i1 %557, label %600, label %558, !dbg !984

; <label>:558                                     ; preds = %549
  %559 = load %struct.regexp** %2, align 8, !dbg !985
  %560 = getelementptr inbounds %struct.regexp* %559, i32 0, i32 3, !dbg !985
  %561 = load %struct.reg_substr_data** %560, align 8, !dbg !985
  %562 = getelementptr inbounds %struct.reg_substr_data* %561, i32 0, i32 0, !dbg !985
  %563 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %562, i32 0, i64 0, !dbg !985
  %564 = getelementptr inbounds %struct.reg_substr_datum* %563, i32 0, i32 3, !dbg !985
  %565 = load %struct.sv** %564, align 8, !dbg !985
  %566 = icmp ne %struct.sv* %565, null, !dbg !985
  br i1 %566, label %600, label %567, !dbg !984

; <label>:567                                     ; preds = %558
  %568 = load %struct.regexp** %2, align 8, !dbg !986
  %569 = getelementptr inbounds %struct.regexp* %568, i32 0, i32 3, !dbg !986
  %570 = load %struct.reg_substr_data** %569, align 8, !dbg !986
  %571 = getelementptr inbounds %struct.reg_substr_data* %570, i32 0, i32 0, !dbg !986
  %572 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %571, i32 0, i64 1, !dbg !986
  %573 = getelementptr inbounds %struct.reg_substr_datum* %572, i32 0, i32 2, !dbg !986
  %574 = load %struct.sv** %573, align 8, !dbg !986
  %575 = icmp ne %struct.sv* %574, null, !dbg !986
  br i1 %575, label %585, label %576, !dbg !984

; <label>:576                                     ; preds = %567
  %577 = load %struct.regexp** %2, align 8, !dbg !987
  %578 = getelementptr inbounds %struct.regexp* %577, i32 0, i32 3, !dbg !987
  %579 = load %struct.reg_substr_data** %578, align 8, !dbg !987
  %580 = getelementptr inbounds %struct.reg_substr_data* %579, i32 0, i32 0, !dbg !987
  %581 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %580, i32 0, i64 1, !dbg !987
  %582 = getelementptr inbounds %struct.reg_substr_datum* %581, i32 0, i32 3, !dbg !987
  %583 = load %struct.sv** %582, align 8, !dbg !987
  %584 = icmp ne %struct.sv* %583, null, !dbg !987
  br i1 %584, label %585, label %1096, !dbg !984

; <label>:585                                     ; preds = %576, %567
  %586 = load %struct.regexp** %2, align 8, !dbg !988
  %587 = getelementptr inbounds %struct.regexp* %586, i32 0, i32 3, !dbg !988
  %588 = load %struct.reg_substr_data** %587, align 8, !dbg !988
  %589 = getelementptr inbounds %struct.reg_substr_data* %588, i32 0, i32 0, !dbg !988
  %590 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %589, i32 0, i64 1, !dbg !988
  %591 = getelementptr inbounds %struct.reg_substr_datum* %590, i32 0, i32 1, !dbg !988
  %592 = load i32* %591, align 4, !dbg !988
  %593 = sext i32 %592 to i64, !dbg !988
  %594 = load i8** %4, align 8, !dbg !989
  %595 = load i8** %s, align 8, !dbg !990
  %596 = ptrtoint i8* %594 to i64, !dbg !989
  %597 = ptrtoint i8* %595 to i64, !dbg !989
  %598 = sub i64 %596, %597, !dbg !989
  %599 = icmp slt i64 %593, %598, !dbg !988
  br i1 %599, label %600, label %1096, !dbg !984

; <label>:600                                     ; preds = %585, %558, %549
  call void @llvm.dbg.declare(metadata %struct.sv** %must, metadata !991, metadata !566), !dbg !993
  call void @llvm.dbg.declare(metadata i32* %back_max, metadata !994, metadata !566), !dbg !995
  call void @llvm.dbg.declare(metadata i32* %back_min, metadata !996, metadata !566), !dbg !997
  call void @llvm.dbg.declare(metadata i8** %last, metadata !998, metadata !566), !dbg !999
  call void @llvm.dbg.declare(metadata i8** %last1, metadata !1000, metadata !566), !dbg !1001
  %601 = load %struct.regexp** %2, align 8, !dbg !1002
  %602 = getelementptr inbounds %struct.regexp* %601, i32 0, i32 3, !dbg !1002
  %603 = load %struct.reg_substr_data** %602, align 8, !dbg !1002
  %604 = getelementptr inbounds %struct.reg_substr_data* %603, i32 0, i32 0, !dbg !1002
  %605 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %604, i32 0, i64 0, !dbg !1002
  %606 = getelementptr inbounds %struct.reg_substr_datum* %605, i32 0, i32 2, !dbg !1002
  %607 = load %struct.sv** %606, align 8, !dbg !1002
  %608 = icmp ne %struct.sv* %607, null, !dbg !1004
  br i1 %608, label %618, label %609, !dbg !1004

; <label>:609                                     ; preds = %600
  %610 = load %struct.regexp** %2, align 8, !dbg !1005
  %611 = getelementptr inbounds %struct.regexp* %610, i32 0, i32 3, !dbg !1005
  %612 = load %struct.reg_substr_data** %611, align 8, !dbg !1005
  %613 = getelementptr inbounds %struct.reg_substr_data* %612, i32 0, i32 0, !dbg !1005
  %614 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %613, i32 0, i64 0, !dbg !1005
  %615 = getelementptr inbounds %struct.reg_substr_datum* %614, i32 0, i32 3, !dbg !1005
  %616 = load %struct.sv** %615, align 8, !dbg !1005
  %617 = icmp ne %struct.sv* %616, null, !dbg !1004
  br i1 %617, label %618, label %681, !dbg !1004

; <label>:618                                     ; preds = %609, %600
  %619 = load i8* %do_utf8, align 1, !dbg !1007
  %620 = sext i8 %619 to i32, !dbg !1007
  %621 = icmp ne i32 %620, 0, !dbg !1010
  br i1 %621, label %622, label %631, !dbg !1010

; <label>:622                                     ; preds = %618
  %623 = load %struct.regexp** %2, align 8, !dbg !1011
  %624 = getelementptr inbounds %struct.regexp* %623, i32 0, i32 3, !dbg !1011
  %625 = load %struct.reg_substr_data** %624, align 8, !dbg !1011
  %626 = getelementptr inbounds %struct.reg_substr_data* %625, i32 0, i32 0, !dbg !1011
  %627 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %626, i32 0, i64 0, !dbg !1011
  %628 = getelementptr inbounds %struct.reg_substr_datum* %627, i32 0, i32 3, !dbg !1011
  %629 = load %struct.sv** %628, align 8, !dbg !1011
  %630 = icmp ne %struct.sv* %629, null, !dbg !1010
  br i1 %630, label %652, label %640, !dbg !1010

; <label>:631                                     ; preds = %618
  %632 = load %struct.regexp** %2, align 8, !dbg !1013
  %633 = getelementptr inbounds %struct.regexp* %632, i32 0, i32 3, !dbg !1013
  %634 = load %struct.reg_substr_data** %633, align 8, !dbg !1013
  %635 = getelementptr inbounds %struct.reg_substr_data* %634, i32 0, i32 0, !dbg !1013
  %636 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %635, i32 0, i64 0, !dbg !1013
  %637 = getelementptr inbounds %struct.reg_substr_datum* %636, i32 0, i32 2, !dbg !1013
  %638 = load %struct.sv** %637, align 8, !dbg !1013
  %639 = icmp ne %struct.sv* %638, null, !dbg !1010
  br i1 %639, label %652, label %640, !dbg !1010

; <label>:640                                     ; preds = %631, %622
  %641 = load i8* %do_utf8, align 1, !dbg !1015
  %642 = sext i8 %641 to i32, !dbg !1015
  %643 = icmp ne i32 %642, 0, !dbg !1015
  br i1 %643, label %644, label %647, !dbg !1015

; <label>:644                                     ; preds = %640
  %645 = load %struct.regexp** %2, align 8, !dbg !1016
  %646 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_utf8_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %645), !dbg !1017
  br label %650, !dbg !1015

; <label>:647                                     ; preds = %640
  %648 = load %struct.regexp** %2, align 8, !dbg !1018
  %649 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_byte_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %648), !dbg !1019
  br label %650, !dbg !1015

; <label>:650                                     ; preds = %647, %644
  %651 = phi i32 [ %646, %644 ], [ %649, %647 ], !dbg !1015
  br label %652, !dbg !1020

; <label>:652                                     ; preds = %650, %631, %622
  %653 = load i8* %do_utf8, align 1, !dbg !1023
  %654 = sext i8 %653 to i32, !dbg !1023
  %655 = icmp ne i32 %654, 0, !dbg !1023
  br i1 %655, label %656, label %664, !dbg !1023

; <label>:656                                     ; preds = %652
  %657 = load %struct.regexp** %2, align 8, !dbg !1024
  %658 = getelementptr inbounds %struct.regexp* %657, i32 0, i32 3, !dbg !1024
  %659 = load %struct.reg_substr_data** %658, align 8, !dbg !1024
  %660 = getelementptr inbounds %struct.reg_substr_data* %659, i32 0, i32 0, !dbg !1024
  %661 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %660, i32 0, i64 0, !dbg !1024
  %662 = getelementptr inbounds %struct.reg_substr_datum* %661, i32 0, i32 3, !dbg !1024
  %663 = load %struct.sv** %662, align 8, !dbg !1024
  br label %672, !dbg !1023

; <label>:664                                     ; preds = %652
  %665 = load %struct.regexp** %2, align 8, !dbg !1026
  %666 = getelementptr inbounds %struct.regexp* %665, i32 0, i32 3, !dbg !1026
  %667 = load %struct.reg_substr_data** %666, align 8, !dbg !1026
  %668 = getelementptr inbounds %struct.reg_substr_data* %667, i32 0, i32 0, !dbg !1026
  %669 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %668, i32 0, i64 0, !dbg !1026
  %670 = getelementptr inbounds %struct.reg_substr_datum* %669, i32 0, i32 2, !dbg !1026
  %671 = load %struct.sv** %670, align 8, !dbg !1026
  br label %672, !dbg !1023

; <label>:672                                     ; preds = %664, %656
  %673 = phi %struct.sv* [ %663, %656 ], [ %671, %664 ], !dbg !1023
  store %struct.sv* %673, %struct.sv** %must, align 8, !dbg !1028
  %674 = load %struct.regexp** %2, align 8, !dbg !1031
  %675 = getelementptr inbounds %struct.regexp* %674, i32 0, i32 3, !dbg !1031
  %676 = load %struct.reg_substr_data** %675, align 8, !dbg !1031
  %677 = getelementptr inbounds %struct.reg_substr_data* %676, i32 0, i32 0, !dbg !1031
  %678 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %677, i32 0, i64 0, !dbg !1031
  %679 = getelementptr inbounds %struct.reg_substr_datum* %678, i32 0, i32 0, !dbg !1031
  %680 = load i32* %679, align 4, !dbg !1031
  store i32 %680, i32* %back_min, align 4, !dbg !1032
  store i32 %680, i32* %back_max, align 4, !dbg !1033
  br label %751, !dbg !1034

; <label>:681                                     ; preds = %609
  %682 = load i8* %do_utf8, align 1, !dbg !1035
  %683 = sext i8 %682 to i32, !dbg !1035
  %684 = icmp ne i32 %683, 0, !dbg !1038
  br i1 %684, label %685, label %694, !dbg !1038

; <label>:685                                     ; preds = %681
  %686 = load %struct.regexp** %2, align 8, !dbg !1039
  %687 = getelementptr inbounds %struct.regexp* %686, i32 0, i32 3, !dbg !1039
  %688 = load %struct.reg_substr_data** %687, align 8, !dbg !1039
  %689 = getelementptr inbounds %struct.reg_substr_data* %688, i32 0, i32 0, !dbg !1039
  %690 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %689, i32 0, i64 1, !dbg !1039
  %691 = getelementptr inbounds %struct.reg_substr_datum* %690, i32 0, i32 3, !dbg !1039
  %692 = load %struct.sv** %691, align 8, !dbg !1039
  %693 = icmp ne %struct.sv* %692, null, !dbg !1038
  br i1 %693, label %715, label %703, !dbg !1038

; <label>:694                                     ; preds = %681
  %695 = load %struct.regexp** %2, align 8, !dbg !1041
  %696 = getelementptr inbounds %struct.regexp* %695, i32 0, i32 3, !dbg !1041
  %697 = load %struct.reg_substr_data** %696, align 8, !dbg !1041
  %698 = getelementptr inbounds %struct.reg_substr_data* %697, i32 0, i32 0, !dbg !1041
  %699 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %698, i32 0, i64 1, !dbg !1041
  %700 = getelementptr inbounds %struct.reg_substr_datum* %699, i32 0, i32 2, !dbg !1041
  %701 = load %struct.sv** %700, align 8, !dbg !1041
  %702 = icmp ne %struct.sv* %701, null, !dbg !1038
  br i1 %702, label %715, label %703, !dbg !1038

; <label>:703                                     ; preds = %694, %685
  %704 = load i8* %do_utf8, align 1, !dbg !1043
  %705 = sext i8 %704 to i32, !dbg !1043
  %706 = icmp ne i32 %705, 0, !dbg !1043
  br i1 %706, label %707, label %710, !dbg !1043

; <label>:707                                     ; preds = %703
  %708 = load %struct.regexp** %2, align 8, !dbg !1044
  %709 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_utf8_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %708), !dbg !1045
  br label %713, !dbg !1043

; <label>:710                                     ; preds = %703
  %711 = load %struct.regexp** %2, align 8, !dbg !1046
  %712 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_byte_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %711), !dbg !1047
  br label %713, !dbg !1043

; <label>:713                                     ; preds = %710, %707
  %714 = phi i32 [ %709, %707 ], [ %712, %710 ], !dbg !1043
  br label %715, !dbg !1048

; <label>:715                                     ; preds = %713, %694, %685
  %716 = load i8* %do_utf8, align 1, !dbg !1051
  %717 = sext i8 %716 to i32, !dbg !1051
  %718 = icmp ne i32 %717, 0, !dbg !1051
  br i1 %718, label %719, label %727, !dbg !1051

; <label>:719                                     ; preds = %715
  %720 = load %struct.regexp** %2, align 8, !dbg !1052
  %721 = getelementptr inbounds %struct.regexp* %720, i32 0, i32 3, !dbg !1052
  %722 = load %struct.reg_substr_data** %721, align 8, !dbg !1052
  %723 = getelementptr inbounds %struct.reg_substr_data* %722, i32 0, i32 0, !dbg !1052
  %724 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %723, i32 0, i64 1, !dbg !1052
  %725 = getelementptr inbounds %struct.reg_substr_datum* %724, i32 0, i32 3, !dbg !1052
  %726 = load %struct.sv** %725, align 8, !dbg !1052
  br label %735, !dbg !1051

; <label>:727                                     ; preds = %715
  %728 = load %struct.regexp** %2, align 8, !dbg !1054
  %729 = getelementptr inbounds %struct.regexp* %728, i32 0, i32 3, !dbg !1054
  %730 = load %struct.reg_substr_data** %729, align 8, !dbg !1054
  %731 = getelementptr inbounds %struct.reg_substr_data* %730, i32 0, i32 0, !dbg !1054
  %732 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %731, i32 0, i64 1, !dbg !1054
  %733 = getelementptr inbounds %struct.reg_substr_datum* %732, i32 0, i32 2, !dbg !1054
  %734 = load %struct.sv** %733, align 8, !dbg !1054
  br label %735, !dbg !1051

; <label>:735                                     ; preds = %727, %719
  %736 = phi %struct.sv* [ %726, %719 ], [ %734, %727 ], !dbg !1051
  store %struct.sv* %736, %struct.sv** %must, align 8, !dbg !1056
  %737 = load %struct.regexp** %2, align 8, !dbg !1059
  %738 = getelementptr inbounds %struct.regexp* %737, i32 0, i32 3, !dbg !1059
  %739 = load %struct.reg_substr_data** %738, align 8, !dbg !1059
  %740 = getelementptr inbounds %struct.reg_substr_data* %739, i32 0, i32 0, !dbg !1059
  %741 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %740, i32 0, i64 1, !dbg !1059
  %742 = getelementptr inbounds %struct.reg_substr_datum* %741, i32 0, i32 1, !dbg !1059
  %743 = load i32* %742, align 4, !dbg !1059
  store i32 %743, i32* %back_max, align 4, !dbg !1060
  %744 = load %struct.regexp** %2, align 8, !dbg !1061
  %745 = getelementptr inbounds %struct.regexp* %744, i32 0, i32 3, !dbg !1061
  %746 = load %struct.reg_substr_data** %745, align 8, !dbg !1061
  %747 = getelementptr inbounds %struct.reg_substr_data* %746, i32 0, i32 0, !dbg !1061
  %748 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %747, i32 0, i64 1, !dbg !1061
  %749 = getelementptr inbounds %struct.reg_substr_datum* %748, i32 0, i32 0, !dbg !1061
  %750 = load i32* %749, align 4, !dbg !1061
  store i32 %750, i32* %back_min, align 4, !dbg !1062
  br label %751

; <label>:751                                     ; preds = %735, %672
  %752 = load %struct.sv** %must, align 8, !dbg !1063
  %753 = icmp eq %struct.sv* %752, @PL_sv_undef, !dbg !1063
  br i1 %753, label %754, label %755, !dbg !1065

; <label>:754                                     ; preds = %751
  br label %1529, !dbg !1066

; <label>:755                                     ; preds = %751
  %756 = load i8* @PL_reg_match_utf8, align 1, !dbg !1067
  %757 = sext i8 %756 to i32, !dbg !1067
  %758 = icmp ne i32 %757, 0, !dbg !1067
  br i1 %758, label %759, label %793, !dbg !1067

; <label>:759                                     ; preds = %755
  %760 = load i8** %4, align 8, !dbg !1068
  %761 = load i8* %do_utf8, align 1, !dbg !1068
  %762 = sext i8 %761 to i32, !dbg !1068
  %763 = icmp ne i32 %762, 0, !dbg !1068
  br i1 %763, label %764, label %767, !dbg !1068

; <label>:764                                     ; preds = %759
  %765 = load %struct.sv** %must, align 8, !dbg !1070
  %766 = call i64 @Perl_sv_len_utf8(%struct.sv* %765), !dbg !1070
  br label %774, !dbg !1070

; <label>:767                                     ; preds = %759
  %768 = load %struct.sv** %must, align 8, !dbg !1072
  %769 = getelementptr inbounds %struct.sv* %768, i32 0, i32 0, !dbg !1072
  %770 = load i8** %769, align 8, !dbg !1072
  %771 = bitcast i8* %770 to %struct.xpv*, !dbg !1072
  %772 = getelementptr inbounds %struct.xpv* %771, i32 0, i32 1, !dbg !1072
  %773 = load i64* %772, align 8, !dbg !1072
  br label %774, !dbg !1072

; <label>:774                                     ; preds = %767, %764
  %775 = phi i64 [ %766, %764 ], [ %773, %767 ], !dbg !1067
  %776 = load %struct.sv** %must, align 8, !dbg !1074
  %777 = getelementptr inbounds %struct.sv* %776, i32 0, i32 2, !dbg !1074
  %778 = load i32* %777, align 4, !dbg !1074
  %779 = and i32 %778, 1073741824, !dbg !1074
  %780 = icmp ne i32 %779, 0, !dbg !1074
  %781 = zext i1 %780 to i32, !dbg !1074
  %782 = sext i32 %781 to i64, !dbg !1074
  %783 = sub i64 %775, %782, !dbg !1074
  %784 = load i32* %back_min, align 4, !dbg !1074
  %785 = sext i32 %784 to i64, !dbg !1074
  %786 = add i64 %783, %785, !dbg !1074
  %787 = trunc i64 %786 to i32, !dbg !1074
  %788 = sub nsw i32 0, %787, !dbg !1074
  %789 = load i8** %5, align 8, !dbg !1074
  %790 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %760, i32 %788, i8* %789), !dbg !1074
  %791 = sext i32 %790 to i64, !dbg !1074
  %792 = inttoptr i64 %791 to i8*, !dbg !1074
  br label %825, !dbg !1074

; <label>:793                                     ; preds = %755
  %794 = load i8** %4, align 8, !dbg !1077
  %795 = load i8* %do_utf8, align 1, !dbg !1077
  %796 = sext i8 %795 to i32, !dbg !1077
  %797 = icmp ne i32 %796, 0, !dbg !1077
  br i1 %797, label %798, label %801, !dbg !1077

; <label>:798                                     ; preds = %793
  %799 = load %struct.sv** %must, align 8, !dbg !1079
  %800 = call i64 @Perl_sv_len_utf8(%struct.sv* %799), !dbg !1079
  br label %808, !dbg !1079

; <label>:801                                     ; preds = %793
  %802 = load %struct.sv** %must, align 8, !dbg !1081
  %803 = getelementptr inbounds %struct.sv* %802, i32 0, i32 0, !dbg !1081
  %804 = load i8** %803, align 8, !dbg !1081
  %805 = bitcast i8* %804 to %struct.xpv*, !dbg !1081
  %806 = getelementptr inbounds %struct.xpv* %805, i32 0, i32 1, !dbg !1081
  %807 = load i64* %806, align 8, !dbg !1081
  br label %808, !dbg !1081

; <label>:808                                     ; preds = %801, %798
  %809 = phi i64 [ %800, %798 ], [ %807, %801 ], !dbg !1067
  %810 = load %struct.sv** %must, align 8, !dbg !1083
  %811 = getelementptr inbounds %struct.sv* %810, i32 0, i32 2, !dbg !1083
  %812 = load i32* %811, align 4, !dbg !1083
  %813 = and i32 %812, 1073741824, !dbg !1083
  %814 = icmp ne i32 %813, 0, !dbg !1083
  %815 = zext i1 %814 to i32, !dbg !1083
  %816 = sext i32 %815 to i64, !dbg !1083
  %817 = sub i64 %809, %816, !dbg !1083
  %818 = load i32* %back_min, align 4, !dbg !1083
  %819 = sext i32 %818 to i64, !dbg !1083
  %820 = add i64 %817, %819, !dbg !1083
  %821 = trunc i64 %820 to i32, !dbg !1083
  %822 = sub nsw i32 0, %821, !dbg !1083
  %823 = sext i32 %822 to i64, !dbg !1083
  %824 = getelementptr inbounds i8* %794, i64 %823, !dbg !1083
  br label %825, !dbg !1083

; <label>:825                                     ; preds = %808, %774
  %826 = phi i8* [ %792, %774 ], [ %824, %808 ], !dbg !1067
  store i8* %826, i8** %last, align 8, !dbg !1086
  %827 = load i8** %s, align 8, !dbg !1089
  %828 = load i8** @PL_bostr, align 8, !dbg !1091
  %829 = icmp ugt i8* %827, %828, !dbg !1089
  br i1 %829, label %830, label %844, !dbg !1092

; <label>:830                                     ; preds = %825
  %831 = load i8* @PL_reg_match_utf8, align 1, !dbg !1093
  %832 = sext i8 %831 to i32, !dbg !1093
  %833 = icmp ne i32 %832, 0, !dbg !1093
  br i1 %833, label %834, label %839, !dbg !1093

; <label>:834                                     ; preds = %830
  %835 = load i8** %s, align 8, !dbg !1094
  %836 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %835, i32 -1), !dbg !1094
  %837 = sext i32 %836 to i64, !dbg !1094
  %838 = inttoptr i64 %837 to i8*, !dbg !1094
  br label %842, !dbg !1094

; <label>:839                                     ; preds = %830
  %840 = load i8** %s, align 8, !dbg !1096
  %841 = getelementptr inbounds i8* %840, i64 -1, !dbg !1096
  br label %842, !dbg !1096

; <label>:842                                     ; preds = %839, %834
  %843 = phi i8* [ %838, %834 ], [ %841, %839 ], !dbg !1093
  store i8* %843, i8** %last1, align 8, !dbg !1098
  br label %847, !dbg !1098

; <label>:844                                     ; preds = %825
  %845 = load i8** %s, align 8, !dbg !1101
  %846 = getelementptr inbounds i8* %845, i64 -1, !dbg !1101
  store i8* %846, i8** %last1, align 8, !dbg !1102
  br label %847

; <label>:847                                     ; preds = %844, %842
  store i32 -1, i32* %scream_pos, align 4, !dbg !1103
  %848 = load i32* %end_shift, align 4, !dbg !1104
  store i32 %848, i32* %dontbother, align 4, !dbg !1105
  %849 = load i8* @PL_reg_match_utf8, align 1, !dbg !1106
  %850 = sext i8 %849 to i32, !dbg !1106
  %851 = icmp ne i32 %850, 0, !dbg !1106
  br i1 %851, label %852, label %859, !dbg !1106

; <label>:852                                     ; preds = %847
  %853 = load i8** %4, align 8, !dbg !1107
  %854 = load i32* %dontbother, align 4, !dbg !1107
  %855 = sub nsw i32 0, %854, !dbg !1107
  %856 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %853, i32 %855), !dbg !1107
  %857 = sext i32 %856 to i64, !dbg !1107
  %858 = inttoptr i64 %857 to i8*, !dbg !1107
  br label %865, !dbg !1107

; <label>:859                                     ; preds = %847
  %860 = load i8** %4, align 8, !dbg !1108
  %861 = load i32* %dontbother, align 4, !dbg !1108
  %862 = sub nsw i32 0, %861, !dbg !1108
  %863 = sext i32 %862 to i64, !dbg !1108
  %864 = getelementptr inbounds i8* %860, i64 %863, !dbg !1108
  br label %865, !dbg !1108

; <label>:865                                     ; preds = %859, %852
  %866 = phi i8* [ %858, %852 ], [ %864, %859 ], !dbg !1106
  store i8* %866, i8** %4, align 8, !dbg !1109
  br label %867, !dbg !1111

; <label>:867                                     ; preds = %1094, %865
  %868 = load i8** %s, align 8, !dbg !1112
  %869 = load i8** %last, align 8, !dbg !1114
  %870 = icmp ule i8* %868, %869, !dbg !1115
  br i1 %870, label %871, label %929, !dbg !1116

; <label>:871                                     ; preds = %867
  %872 = load i32* %9, align 4, !dbg !1117
  %873 = and i32 %872, 4, !dbg !1117
  %874 = icmp ne i32 %873, 0, !dbg !1118
  br i1 %874, label %875, label %902, !dbg !1118

; <label>:875                                     ; preds = %871
  %876 = load %struct.sv** %7, align 8, !dbg !1119
  %877 = load %struct.sv** %must, align 8, !dbg !1120
  %878 = load i8* @PL_reg_match_utf8, align 1, !dbg !1121
  %879 = sext i8 %878 to i32, !dbg !1121
  %880 = icmp ne i32 %879, 0, !dbg !1121
  br i1 %880, label %881, label %888, !dbg !1121

; <label>:881                                     ; preds = %875
  %882 = load i8** %s, align 8, !dbg !1122
  %883 = load i32* %back_min, align 4, !dbg !1122
  %884 = load i8** %4, align 8, !dbg !1122
  %885 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %882, i32 %883, i8* %884), !dbg !1122
  %886 = sext i32 %885 to i64, !dbg !1122
  %887 = inttoptr i64 %886 to i8*, !dbg !1122
  br label %893, !dbg !1122

; <label>:888                                     ; preds = %875
  %889 = load i8** %s, align 8, !dbg !1123
  %890 = load i32* %back_min, align 4, !dbg !1123
  %891 = sext i32 %890 to i64, !dbg !1123
  %892 = getelementptr inbounds i8* %889, i64 %891, !dbg !1123
  br label %893, !dbg !1123

; <label>:893                                     ; preds = %888, %881
  %894 = phi i8* [ %887, %881 ], [ %892, %888 ], !dbg !1121
  %895 = load i8** %5, align 8, !dbg !1124
  %896 = ptrtoint i8* %894 to i64, !dbg !1121
  %897 = ptrtoint i8* %895 to i64, !dbg !1121
  %898 = sub i64 %896, %897, !dbg !1121
  %899 = trunc i64 %898 to i32, !dbg !1121
  %900 = load i32* %end_shift, align 4, !dbg !1125
  %901 = call i8* @Perl_screaminstr(%struct.sv* %876, %struct.sv* %877, i32 %899, i32 %900, i32* %scream_pos, i32 0), !dbg !1126
  store i8* %901, i8** %s, align 8, !dbg !1127
  br label %926, !dbg !1118

; <label>:902                                     ; preds = %871
  %903 = load i8* @PL_reg_match_utf8, align 1, !dbg !1128
  %904 = sext i8 %903 to i32, !dbg !1128
  %905 = icmp ne i32 %904, 0, !dbg !1128
  br i1 %905, label %906, label %913, !dbg !1128

; <label>:906                                     ; preds = %902
  %907 = load i8** %s, align 8, !dbg !1129
  %908 = load i32* %back_min, align 4, !dbg !1129
  %909 = load i8** %4, align 8, !dbg !1129
  %910 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %907, i32 %908, i8* %909), !dbg !1129
  %911 = sext i32 %910 to i64, !dbg !1129
  %912 = inttoptr i64 %911 to i8*, !dbg !1129
  br label %918, !dbg !1129

; <label>:913                                     ; preds = %902
  %914 = load i8** %s, align 8, !dbg !1130
  %915 = load i32* %back_min, align 4, !dbg !1130
  %916 = sext i32 %915 to i64, !dbg !1130
  %917 = getelementptr inbounds i8* %914, i64 %916, !dbg !1130
  br label %918, !dbg !1130

; <label>:918                                     ; preds = %913, %906
  %919 = phi i8* [ %912, %906 ], [ %917, %913 ], !dbg !1128
  %920 = load i8** %4, align 8, !dbg !1131
  %921 = load %struct.sv** %must, align 8, !dbg !1132
  %922 = load i32* @PL_multiline, align 4, !dbg !1133
  %923 = icmp ne i32 %922, 0, !dbg !1133
  %924 = select i1 %923, i32 1, i32 0, !dbg !1133
  %925 = call i8* @Perl_fbm_instr(i8* %919, i8* %920, %struct.sv* %921, i32 %924), !dbg !1134
  store i8* %925, i8** %s, align 8, !dbg !1135
  br label %926, !dbg !1118

; <label>:926                                     ; preds = %918, %893
  %927 = phi i8* [ %901, %893 ], [ %925, %918 ], !dbg !1118
  %928 = icmp ne i8* %927, null, !dbg !1116
  br label %929

; <label>:929                                     ; preds = %926, %867
  %930 = phi i1 [ false, %867 ], [ %928, %926 ]
  br i1 %930, label %931, label %1095, !dbg !1136

; <label>:931                                     ; preds = %929
  %932 = load i32* %9, align 4, !dbg !1137
  %933 = and i32 %932, 4, !dbg !1137
  %934 = icmp ne i32 %933, 0, !dbg !1140
  br i1 %934, label %935, label %954, !dbg !1140

; <label>:935                                     ; preds = %931
  %936 = load %struct.regexp** %2, align 8, !dbg !1141
  %937 = getelementptr inbounds %struct.regexp* %936, i32 0, i32 15, !dbg !1141
  %938 = load i32* %937, align 4, !dbg !1141
  %939 = and i32 %938, 262144, !dbg !1141
  %940 = icmp ne i32 %939, 0, !dbg !1140
  br i1 %940, label %941, label %954, !dbg !1140

; <label>:941                                     ; preds = %935
  %942 = load i8** %5, align 8, !dbg !1143
  %943 = load i8** %s, align 8, !dbg !1144
  %944 = load %struct.sv** %7, align 8, !dbg !1145
  %945 = getelementptr inbounds %struct.sv* %944, i32 0, i32 0, !dbg !1145
  %946 = load i8** %945, align 8, !dbg !1145
  %947 = bitcast i8* %946 to %struct.xpv*, !dbg !1145
  %948 = getelementptr inbounds %struct.xpv* %947, i32 0, i32 0, !dbg !1145
  %949 = load i8** %948, align 8, !dbg !1145
  %950 = ptrtoint i8* %943 to i64, !dbg !1144
  %951 = ptrtoint i8* %949 to i64, !dbg !1144
  %952 = sub i64 %950, %951, !dbg !1144
  %953 = getelementptr inbounds i8* %942, i64 %952, !dbg !1143
  store i8* %953, i8** %s, align 8, !dbg !1146
  br label %954, !dbg !1146

; <label>:954                                     ; preds = %941, %935, %931
  %955 = load i8* @PL_reg_match_utf8, align 1, !dbg !1147
  %956 = sext i8 %955 to i32, !dbg !1147
  %957 = icmp ne i32 %956, 0, !dbg !1147
  br i1 %957, label %958, label %965, !dbg !1147

; <label>:958                                     ; preds = %954
  %959 = load i8** %s, align 8, !dbg !1149
  %960 = load i32* %back_max, align 4, !dbg !1149
  %961 = sub nsw i32 0, %960, !dbg !1149
  %962 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %959, i32 %961), !dbg !1149
  %963 = sext i32 %962 to i64, !dbg !1149
  %964 = inttoptr i64 %963 to i8*, !dbg !1149
  br label %971, !dbg !1149

; <label>:965                                     ; preds = %954
  %966 = load i8** %s, align 8, !dbg !1151
  %967 = load i32* %back_max, align 4, !dbg !1151
  %968 = sub nsw i32 0, %967, !dbg !1151
  %969 = sext i32 %968 to i64, !dbg !1151
  %970 = getelementptr inbounds i8* %966, i64 %969, !dbg !1151
  br label %971, !dbg !1151

; <label>:971                                     ; preds = %965, %958
  %972 = phi i8* [ %964, %958 ], [ %970, %965 ], !dbg !1147
  %973 = load i8** %last1, align 8, !dbg !1153
  %974 = icmp ugt i8* %972, %973, !dbg !1147
  br i1 %974, label %975, label %1012, !dbg !1156

; <label>:975                                     ; preds = %971
  %976 = load i8* @PL_reg_match_utf8, align 1, !dbg !1157
  %977 = sext i8 %976 to i32, !dbg !1157
  %978 = icmp ne i32 %977, 0, !dbg !1157
  br i1 %978, label %979, label %986, !dbg !1157

; <label>:979                                     ; preds = %975
  %980 = load i8** %s, align 8, !dbg !1159
  %981 = load i32* %back_min, align 4, !dbg !1159
  %982 = sub nsw i32 0, %981, !dbg !1159
  %983 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %980, i32 %982), !dbg !1159
  %984 = sext i32 %983 to i64, !dbg !1159
  %985 = inttoptr i64 %984 to i8*, !dbg !1159
  br label %992, !dbg !1159

; <label>:986                                     ; preds = %975
  %987 = load i8** %s, align 8, !dbg !1161
  %988 = load i32* %back_min, align 4, !dbg !1161
  %989 = sub nsw i32 0, %988, !dbg !1161
  %990 = sext i32 %989 to i64, !dbg !1161
  %991 = getelementptr inbounds i8* %987, i64 %990, !dbg !1161
  br label %992, !dbg !1161

; <label>:992                                     ; preds = %986, %979
  %993 = phi i8* [ %985, %979 ], [ %991, %986 ], !dbg !1157
  store i8* %993, i8** %last1, align 8, !dbg !1163
  %994 = load i8* @PL_reg_match_utf8, align 1, !dbg !1166
  %995 = sext i8 %994 to i32, !dbg !1166
  %996 = icmp ne i32 %995, 0, !dbg !1166
  br i1 %996, label %997, label %1004, !dbg !1166

; <label>:997                                     ; preds = %992
  %998 = load i8** %s, align 8, !dbg !1167
  %999 = load i32* %back_max, align 4, !dbg !1167
  %1000 = sub nsw i32 0, %999, !dbg !1167
  %1001 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %998, i32 %1000), !dbg !1167
  %1002 = sext i32 %1001 to i64, !dbg !1167
  %1003 = inttoptr i64 %1002 to i8*, !dbg !1167
  br label %1010, !dbg !1167

; <label>:1004                                    ; preds = %992
  %1005 = load i8** %s, align 8, !dbg !1168
  %1006 = load i32* %back_max, align 4, !dbg !1168
  %1007 = sub nsw i32 0, %1006, !dbg !1168
  %1008 = sext i32 %1007 to i64, !dbg !1168
  %1009 = getelementptr inbounds i8* %1005, i64 %1008, !dbg !1168
  br label %1010, !dbg !1168

; <label>:1010                                    ; preds = %1004, %997
  %1011 = phi i8* [ %1003, %997 ], [ %1009, %1004 ], !dbg !1166
  store i8* %1011, i8** %s, align 8, !dbg !1169
  br label %1054, !dbg !1170

; <label>:1012                                    ; preds = %971
  call void @llvm.dbg.declare(metadata i8** %t, metadata !1171, metadata !566), !dbg !1173
  %1013 = load i8** %last1, align 8, !dbg !1174
  %1014 = load i8** @PL_bostr, align 8, !dbg !1175
  %1015 = icmp uge i8* %1013, %1014, !dbg !1174
  br i1 %1015, label %1016, label %1030, !dbg !1176

; <label>:1016                                    ; preds = %1012
  %1017 = load i8* @PL_reg_match_utf8, align 1, !dbg !1177
  %1018 = sext i8 %1017 to i32, !dbg !1177
  %1019 = icmp ne i32 %1018, 0, !dbg !1177
  br i1 %1019, label %1020, label %1025, !dbg !1177

; <label>:1020                                    ; preds = %1016
  %1021 = load i8** %last1, align 8, !dbg !1179
  %1022 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %1021, i32 1), !dbg !1179
  %1023 = sext i32 %1022 to i64, !dbg !1179
  %1024 = inttoptr i64 %1023 to i8*, !dbg !1179
  br label %1028, !dbg !1179

; <label>:1025                                    ; preds = %1016
  %1026 = load i8** %last1, align 8, !dbg !1181
  %1027 = getelementptr inbounds i8* %1026, i64 1, !dbg !1181
  br label %1028, !dbg !1181

; <label>:1028                                    ; preds = %1025, %1020
  %1029 = phi i8* [ %1024, %1020 ], [ %1027, %1025 ], !dbg !1183
  br label %1033, !dbg !1184

; <label>:1030                                    ; preds = %1012
  %1031 = load i8** %last1, align 8, !dbg !1187
  %1032 = getelementptr inbounds i8* %1031, i64 1, !dbg !1187
  br label %1033, !dbg !1176

; <label>:1033                                    ; preds = %1030, %1028
  %1034 = phi i8* [ %1029, %1028 ], [ %1032, %1030 ], !dbg !1176
  store i8* %1034, i8** %t, align 8, !dbg !1189
  %1035 = load i8* @PL_reg_match_utf8, align 1, !dbg !1192
  %1036 = sext i8 %1035 to i32, !dbg !1192
  %1037 = icmp ne i32 %1036, 0, !dbg !1192
  br i1 %1037, label %1038, label %1045, !dbg !1192

; <label>:1038                                    ; preds = %1033
  %1039 = load i8** %s, align 8, !dbg !1193
  %1040 = load i32* %back_min, align 4, !dbg !1193
  %1041 = sub nsw i32 0, %1040, !dbg !1193
  %1042 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %1039, i32 %1041), !dbg !1193
  %1043 = sext i32 %1042 to i64, !dbg !1193
  %1044 = inttoptr i64 %1043 to i8*, !dbg !1193
  br label %1051, !dbg !1193

; <label>:1045                                    ; preds = %1033
  %1046 = load i8** %s, align 8, !dbg !1194
  %1047 = load i32* %back_min, align 4, !dbg !1194
  %1048 = sub nsw i32 0, %1047, !dbg !1194
  %1049 = sext i32 %1048 to i64, !dbg !1194
  %1050 = getelementptr inbounds i8* %1046, i64 %1049, !dbg !1194
  br label %1051, !dbg !1194

; <label>:1051                                    ; preds = %1045, %1038
  %1052 = phi i8* [ %1044, %1038 ], [ %1050, %1045 ], !dbg !1192
  store i8* %1052, i8** %last1, align 8, !dbg !1195
  %1053 = load i8** %t, align 8, !dbg !1197
  store i8* %1053, i8** %s, align 8, !dbg !1198
  br label %1054

; <label>:1054                                    ; preds = %1051, %1010
  %1055 = load i8* %do_utf8, align 1, !dbg !1199
  %1056 = icmp ne i8 %1055, 0, !dbg !1201
  br i1 %1056, label %1057, label %1079, !dbg !1201

; <label>:1057                                    ; preds = %1054
  br label %1058, !dbg !1202

; <label>:1058                                    ; preds = %1068, %1057
  %1059 = load i8** %s, align 8, !dbg !1204
  %1060 = load i8** %last1, align 8, !dbg !1207
  %1061 = icmp ule i8* %1059, %1060, !dbg !1208
  br i1 %1061, label %1062, label %1078, !dbg !1202

; <label>:1062                                    ; preds = %1058
  %1063 = load %struct.regexp** %2, align 8, !dbg !1209
  %1064 = load i8** %s, align 8, !dbg !1212
  %1065 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %1063, i8* %1064), !dbg !1213
  %1066 = icmp ne i32 %1065, 0, !dbg !1214
  br i1 %1066, label %1067, label %1068, !dbg !1214

; <label>:1067                                    ; preds = %1062
  br label %1429, !dbg !1215

; <label>:1068                                    ; preds = %1062
  %1069 = load i8** %s, align 8, !dbg !1216
  %1070 = load i8* %1069, align 1, !dbg !1216
  %1071 = zext i8 %1070 to i64, !dbg !1216
  %1072 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1071, !dbg !1216
  %1073 = load i8* %1072, align 1, !dbg !1216
  %1074 = zext i8 %1073 to i32, !dbg !1216
  %1075 = load i8** %s, align 8, !dbg !1217
  %1076 = sext i32 %1074 to i64, !dbg !1217
  %1077 = getelementptr inbounds i8* %1075, i64 %1076, !dbg !1217
  store i8* %1077, i8** %s, align 8, !dbg !1217
  br label %1058, !dbg !1202

; <label>:1078                                    ; preds = %1058
  br label %1094, !dbg !1218

; <label>:1079                                    ; preds = %1054
  br label %1080, !dbg !1219

; <label>:1080                                    ; preds = %1090, %1079
  %1081 = load i8** %s, align 8, !dbg !1221
  %1082 = load i8** %last1, align 8, !dbg !1224
  %1083 = icmp ule i8* %1081, %1082, !dbg !1225
  br i1 %1083, label %1084, label %1093, !dbg !1219

; <label>:1084                                    ; preds = %1080
  %1085 = load %struct.regexp** %2, align 8, !dbg !1226
  %1086 = load i8** %s, align 8, !dbg !1229
  %1087 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %1085, i8* %1086), !dbg !1230
  %1088 = icmp ne i32 %1087, 0, !dbg !1231
  br i1 %1088, label %1089, label %1090, !dbg !1231

; <label>:1089                                    ; preds = %1084
  br label %1429, !dbg !1232

; <label>:1090                                    ; preds = %1084
  %1091 = load i8** %s, align 8, !dbg !1233
  %1092 = getelementptr inbounds i8* %1091, i32 1, !dbg !1233
  store i8* %1092, i8** %s, align 8, !dbg !1233
  br label %1080, !dbg !1219

; <label>:1093                                    ; preds = %1080
  br label %1094

; <label>:1094                                    ; preds = %1093, %1078
  br label %867, !dbg !1111

; <label>:1095                                    ; preds = %929
  br label %1529, !dbg !1234

; <label>:1096                                    ; preds = %585, %576
  %1097 = load %struct.regexp** %2, align 8, !dbg !1235
  %1098 = getelementptr inbounds %struct.regexp* %1097, i32 0, i32 2, !dbg !1235
  %1099 = load %struct.regnode** %1098, align 8, !dbg !1235
  store %struct.regnode* %1099, %struct.regnode** %c, align 8, !dbg !1237
  %1100 = icmp ne %struct.regnode* %1099, null, !dbg !1238
  br i1 %1100, label %1101, label %1152, !dbg !1238

; <label>:1101                                    ; preds = %1096
  %1102 = load i32* %minlen, align 4, !dbg !1239
  %1103 = icmp ne i32 %1102, 0, !dbg !1242
  br i1 %1103, label %1104, label %1142, !dbg !1242

; <label>:1104                                    ; preds = %1101
  call void @llvm.dbg.declare(metadata i32* %op, metadata !1243, metadata !566), !dbg !1245
  %1105 = load %struct.regexp** %2, align 8, !dbg !1246
  %1106 = getelementptr inbounds %struct.regexp* %1105, i32 0, i32 2, !dbg !1246
  %1107 = load %struct.regnode** %1106, align 8, !dbg !1246
  %1108 = getelementptr inbounds %struct.regnode* %1107, i32 0, i32 1, !dbg !1246
  %1109 = load i8* %1108, align 1, !dbg !1246
  %1110 = zext i8 %1109 to i32, !dbg !1247
  store i32 %1110, i32* %op, align 4, !dbg !1245
  %1111 = load i32* %op, align 4, !dbg !1248
  %1112 = sext i32 %1111 to i64, !dbg !1250
  %1113 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %1112, !dbg !1250
  %1114 = load i8* %1113, align 1, !dbg !1250
  %1115 = zext i8 %1114 to i32, !dbg !1250
  %1116 = icmp ne i32 %1115, 33, !dbg !1250
  br i1 %1116, label %1117, label %1141, !dbg !1251

; <label>:1117                                    ; preds = %1104
  %1118 = load i32* %op, align 4, !dbg !1252
  %1119 = icmp ne i32 %1118, 16, !dbg !1252
  br i1 %1119, label %1120, label %1141, !dbg !1251

; <label>:1120                                    ; preds = %1117
  %1121 = load i8* @PL_reg_match_utf8, align 1, !dbg !1254
  %1122 = sext i8 %1121 to i32, !dbg !1254
  %1123 = icmp ne i32 %1122, 0, !dbg !1254
  br i1 %1123, label %1124, label %1132, !dbg !1254

; <label>:1124                                    ; preds = %1120
  %1125 = load i8** %4, align 8, !dbg !1255
  %1126 = load i32* %minlen, align 4, !dbg !1255
  %1127 = sub nsw i32 %1126, 1, !dbg !1255
  %1128 = sub nsw i32 0, %1127, !dbg !1255
  %1129 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %1125, i32 %1128), !dbg !1255
  %1130 = sext i32 %1129 to i64, !dbg !1255
  %1131 = inttoptr i64 %1130 to i8*, !dbg !1255
  br label %1139, !dbg !1255

; <label>:1132                                    ; preds = %1120
  %1133 = load i8** %4, align 8, !dbg !1256
  %1134 = load i32* %minlen, align 4, !dbg !1256
  %1135 = sub nsw i32 %1134, 1, !dbg !1256
  %1136 = sub nsw i32 0, %1135, !dbg !1256
  %1137 = sext i32 %1136 to i64, !dbg !1256
  %1138 = getelementptr inbounds i8* %1133, i64 %1137, !dbg !1256
  br label %1139, !dbg !1256

; <label>:1139                                    ; preds = %1132, %1124
  %1140 = phi i8* [ %1131, %1124 ], [ %1138, %1132 ], !dbg !1254
  store i8* %1140, i8** %4, align 8, !dbg !1258
  br label %1141, !dbg !1258

; <label>:1141                                    ; preds = %1139, %1117, %1104
  br label %1142, !dbg !1261

; <label>:1142                                    ; preds = %1141, %1101
  %1143 = load %struct.regexp** %2, align 8, !dbg !1262
  %1144 = load %struct.regnode** %c, align 8, !dbg !1264
  %1145 = load i8** %s, align 8, !dbg !1265
  %1146 = load i8** %4, align 8, !dbg !1266
  %1147 = load i8** %startpos, align 8, !dbg !1267
  %1148 = call i32 (%struct.regexp*, %struct.regnode*, i8*, i8*, i8*, i32, ...)* bitcast (i32 (...)* @find_byclass to i32 (%struct.regexp*, %struct.regnode*, i8*, i8*, i8*, i32, ...)*)(%struct.regexp* %1143, %struct.regnode* %1144, i8* %1145, i8* %1146, i8* %1147, i32 0), !dbg !1268
  %1149 = icmp ne i32 %1148, 0, !dbg !1269
  br i1 %1149, label %1150, label %1151, !dbg !1269

; <label>:1150                                    ; preds = %1142
  br label %1429, !dbg !1270

; <label>:1151                                    ; preds = %1142
  br label %1426, !dbg !1271

; <label>:1152                                    ; preds = %1096
  store i32 0, i32* %dontbother, align 4, !dbg !1272
  %1153 = load %struct.regexp** %2, align 8, !dbg !1274
  %1154 = getelementptr inbounds %struct.regexp* %1153, i32 0, i32 3, !dbg !1274
  %1155 = load %struct.reg_substr_data** %1154, align 8, !dbg !1274
  %1156 = getelementptr inbounds %struct.reg_substr_data* %1155, i32 0, i32 0, !dbg !1274
  %1157 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1156, i32 0, i64 1, !dbg !1274
  %1158 = getelementptr inbounds %struct.reg_substr_datum* %1157, i32 0, i32 2, !dbg !1274
  %1159 = load %struct.sv** %1158, align 8, !dbg !1274
  %1160 = icmp ne %struct.sv* %1159, null, !dbg !1274
  br i1 %1160, label %1170, label %1161, !dbg !1276

; <label>:1161                                    ; preds = %1152
  %1162 = load %struct.regexp** %2, align 8, !dbg !1277
  %1163 = getelementptr inbounds %struct.regexp* %1162, i32 0, i32 3, !dbg !1277
  %1164 = load %struct.reg_substr_data** %1163, align 8, !dbg !1277
  %1165 = getelementptr inbounds %struct.reg_substr_data* %1164, i32 0, i32 0, !dbg !1277
  %1166 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1165, i32 0, i64 1, !dbg !1277
  %1167 = getelementptr inbounds %struct.reg_substr_datum* %1166, i32 0, i32 3, !dbg !1277
  %1168 = load %struct.sv** %1167, align 8, !dbg !1277
  %1169 = icmp ne %struct.sv* %1168, null, !dbg !1277
  br i1 %1169, label %1170, label %1370, !dbg !1276

; <label>:1170                                    ; preds = %1161, %1152
  call void @llvm.dbg.declare(metadata i8** %last2, metadata !1279, metadata !566), !dbg !1281
  call void @llvm.dbg.declare(metadata %struct.sv** %float_real, metadata !1282, metadata !566), !dbg !1283
  %1171 = load i8* %do_utf8, align 1, !dbg !1284
  %1172 = sext i8 %1171 to i32, !dbg !1284
  %1173 = icmp ne i32 %1172, 0, !dbg !1286
  br i1 %1173, label %1174, label %1183, !dbg !1286

; <label>:1174                                    ; preds = %1170
  %1175 = load %struct.regexp** %2, align 8, !dbg !1287
  %1176 = getelementptr inbounds %struct.regexp* %1175, i32 0, i32 3, !dbg !1287
  %1177 = load %struct.reg_substr_data** %1176, align 8, !dbg !1287
  %1178 = getelementptr inbounds %struct.reg_substr_data* %1177, i32 0, i32 0, !dbg !1287
  %1179 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1178, i32 0, i64 1, !dbg !1287
  %1180 = getelementptr inbounds %struct.reg_substr_datum* %1179, i32 0, i32 3, !dbg !1287
  %1181 = load %struct.sv** %1180, align 8, !dbg !1287
  %1182 = icmp ne %struct.sv* %1181, null, !dbg !1286
  br i1 %1182, label %1204, label %1192, !dbg !1286

; <label>:1183                                    ; preds = %1170
  %1184 = load %struct.regexp** %2, align 8, !dbg !1289
  %1185 = getelementptr inbounds %struct.regexp* %1184, i32 0, i32 3, !dbg !1289
  %1186 = load %struct.reg_substr_data** %1185, align 8, !dbg !1289
  %1187 = getelementptr inbounds %struct.reg_substr_data* %1186, i32 0, i32 0, !dbg !1289
  %1188 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1187, i32 0, i64 1, !dbg !1289
  %1189 = getelementptr inbounds %struct.reg_substr_datum* %1188, i32 0, i32 2, !dbg !1289
  %1190 = load %struct.sv** %1189, align 8, !dbg !1289
  %1191 = icmp ne %struct.sv* %1190, null, !dbg !1286
  br i1 %1191, label %1204, label %1192, !dbg !1286

; <label>:1192                                    ; preds = %1183, %1174
  %1193 = load i8* %do_utf8, align 1, !dbg !1291
  %1194 = sext i8 %1193 to i32, !dbg !1291
  %1195 = icmp ne i32 %1194, 0, !dbg !1291
  br i1 %1195, label %1196, label %1199, !dbg !1291

; <label>:1196                                    ; preds = %1192
  %1197 = load %struct.regexp** %2, align 8, !dbg !1292
  %1198 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_utf8_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %1197), !dbg !1293
  br label %1202, !dbg !1291

; <label>:1199                                    ; preds = %1192
  %1200 = load %struct.regexp** %2, align 8, !dbg !1294
  %1201 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_byte_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %1200), !dbg !1295
  br label %1202, !dbg !1291

; <label>:1202                                    ; preds = %1199, %1196
  %1203 = phi i32 [ %1198, %1196 ], [ %1201, %1199 ], !dbg !1291
  br label %1204, !dbg !1296

; <label>:1204                                    ; preds = %1202, %1183, %1174
  %1205 = load i8* %do_utf8, align 1, !dbg !1299
  %1206 = sext i8 %1205 to i32, !dbg !1299
  %1207 = icmp ne i32 %1206, 0, !dbg !1299
  br i1 %1207, label %1208, label %1216, !dbg !1299

; <label>:1208                                    ; preds = %1204
  %1209 = load %struct.regexp** %2, align 8, !dbg !1300
  %1210 = getelementptr inbounds %struct.regexp* %1209, i32 0, i32 3, !dbg !1300
  %1211 = load %struct.reg_substr_data** %1210, align 8, !dbg !1300
  %1212 = getelementptr inbounds %struct.reg_substr_data* %1211, i32 0, i32 0, !dbg !1300
  %1213 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1212, i32 0, i64 1, !dbg !1300
  %1214 = getelementptr inbounds %struct.reg_substr_datum* %1213, i32 0, i32 3, !dbg !1300
  %1215 = load %struct.sv** %1214, align 8, !dbg !1300
  br label %1224, !dbg !1299

; <label>:1216                                    ; preds = %1204
  %1217 = load %struct.regexp** %2, align 8, !dbg !1302
  %1218 = getelementptr inbounds %struct.regexp* %1217, i32 0, i32 3, !dbg !1302
  %1219 = load %struct.reg_substr_data** %1218, align 8, !dbg !1302
  %1220 = getelementptr inbounds %struct.reg_substr_data* %1219, i32 0, i32 0, !dbg !1302
  %1221 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1220, i32 0, i64 1, !dbg !1302
  %1222 = getelementptr inbounds %struct.reg_substr_datum* %1221, i32 0, i32 2, !dbg !1302
  %1223 = load %struct.sv** %1222, align 8, !dbg !1302
  br label %1224, !dbg !1299

; <label>:1224                                    ; preds = %1216, %1208
  %1225 = phi %struct.sv* [ %1215, %1208 ], [ %1223, %1216 ], !dbg !1299
  store %struct.sv* %1225, %struct.sv** %float_real, align 8, !dbg !1304
  %1226 = load i32* %9, align 4, !dbg !1307
  %1227 = and i32 %1226, 4, !dbg !1307
  %1228 = icmp ne i32 %1227, 0, !dbg !1309
  br i1 %1228, label %1229, label %1265, !dbg !1309

; <label>:1229                                    ; preds = %1224
  %1230 = load %struct.sv** %7, align 8, !dbg !1310
  %1231 = load %struct.sv** %float_real, align 8, !dbg !1312
  %1232 = load i8** %s, align 8, !dbg !1313
  %1233 = load i8** %5, align 8, !dbg !1314
  %1234 = ptrtoint i8* %1232 to i64, !dbg !1313
  %1235 = ptrtoint i8* %1233 to i64, !dbg !1313
  %1236 = sub i64 %1234, %1235, !dbg !1313
  %1237 = trunc i64 %1236 to i32, !dbg !1313
  %1238 = load i32* %end_shift, align 4, !dbg !1315
  %1239 = call i8* @Perl_screaminstr(%struct.sv* %1230, %struct.sv* %1231, i32 %1237, i32 %1238, i32* %scream_pos, i32 1), !dbg !1316
  store i8* %1239, i8** %last2, align 8, !dbg !1317
  %1240 = load i8** %last2, align 8, !dbg !1318
  %1241 = icmp ne i8* %1240, null, !dbg !1320
  br i1 %1241, label %1244, label %1242, !dbg !1320

; <label>:1242                                    ; preds = %1229
  %1243 = load i8** %scream_olds, align 8, !dbg !1321
  store i8* %1243, i8** %last2, align 8, !dbg !1322
  br label %1264, !dbg !1322

; <label>:1244                                    ; preds = %1229
  %1245 = load %struct.regexp** %2, align 8, !dbg !1323
  %1246 = getelementptr inbounds %struct.regexp* %1245, i32 0, i32 15, !dbg !1323
  %1247 = load i32* %1246, align 4, !dbg !1323
  %1248 = and i32 %1247, 262144, !dbg !1323
  %1249 = icmp ne i32 %1248, 0, !dbg !1325
  br i1 %1249, label %1250, label %1263, !dbg !1325

; <label>:1250                                    ; preds = %1244
  %1251 = load i8** %5, align 8, !dbg !1326
  %1252 = load i8** %s, align 8, !dbg !1327
  %1253 = load %struct.sv** %7, align 8, !dbg !1328
  %1254 = getelementptr inbounds %struct.sv* %1253, i32 0, i32 0, !dbg !1328
  %1255 = load i8** %1254, align 8, !dbg !1328
  %1256 = bitcast i8* %1255 to %struct.xpv*, !dbg !1328
  %1257 = getelementptr inbounds %struct.xpv* %1256, i32 0, i32 0, !dbg !1328
  %1258 = load i8** %1257, align 8, !dbg !1328
  %1259 = ptrtoint i8* %1252 to i64, !dbg !1327
  %1260 = ptrtoint i8* %1258 to i64, !dbg !1327
  %1261 = sub i64 %1259, %1260, !dbg !1327
  %1262 = getelementptr inbounds i8* %1251, i64 %1261, !dbg !1326
  store i8* %1262, i8** %s, align 8, !dbg !1329
  br label %1263, !dbg !1329

; <label>:1263                                    ; preds = %1250, %1244
  br label %1264

; <label>:1264                                    ; preds = %1263, %1242
  br label %1350, !dbg !1330

; <label>:1265                                    ; preds = %1224
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1331, metadata !566), !dbg !1333
  call void @llvm.dbg.declare(metadata i8** %little, metadata !1334, metadata !566), !dbg !1335
  %1266 = load %struct.sv** %float_real, align 8, !dbg !1336
  %1267 = getelementptr inbounds %struct.sv* %1266, i32 0, i32 2, !dbg !1336
  %1268 = load i32* %1267, align 4, !dbg !1336
  %1269 = and i32 %1268, 262144, !dbg !1336
  %1270 = icmp eq i32 %1269, 262144, !dbg !1336
  br i1 %1270, label %1271, label %1284, !dbg !1336

; <label>:1271                                    ; preds = %1265
  %1272 = load %struct.sv** %float_real, align 8, !dbg !1337
  %1273 = getelementptr inbounds %struct.sv* %1272, i32 0, i32 0, !dbg !1337
  %1274 = load i8** %1273, align 8, !dbg !1337
  %1275 = bitcast i8* %1274 to %struct.xpv*, !dbg !1337
  %1276 = getelementptr inbounds %struct.xpv* %1275, i32 0, i32 1, !dbg !1337
  %1277 = load i64* %1276, align 8, !dbg !1337
  store i64 %1277, i64* %len, align 8, !dbg !1337
  %1278 = load %struct.sv** %float_real, align 8, !dbg !1337
  %1279 = getelementptr inbounds %struct.sv* %1278, i32 0, i32 0, !dbg !1337
  %1280 = load i8** %1279, align 8, !dbg !1337
  %1281 = bitcast i8* %1280 to %struct.xpv*, !dbg !1337
  %1282 = getelementptr inbounds %struct.xpv* %1281, i32 0, i32 0, !dbg !1337
  %1283 = load i8** %1282, align 8, !dbg !1337
  br label %1287, !dbg !1337

; <label>:1284                                    ; preds = %1265
  %1285 = load %struct.sv** %float_real, align 8, !dbg !1339
  %1286 = call i8* @Perl_sv_2pv_flags(%struct.sv* %1285, i64* %len, i32 2), !dbg !1339
  br label %1287, !dbg !1339

; <label>:1287                                    ; preds = %1284, %1271
  %1288 = phi i8* [ %1283, %1271 ], [ %1286, %1284 ], !dbg !1336
  store i8* %1288, i8** %little, align 8, !dbg !1341
  %1289 = load %struct.sv** %float_real, align 8, !dbg !1344
  %1290 = getelementptr inbounds %struct.sv* %1289, i32 0, i32 2, !dbg !1344
  %1291 = load i32* %1290, align 4, !dbg !1344
  %1292 = and i32 %1291, 1073741824, !dbg !1344
  %1293 = icmp ne i32 %1292, 0, !dbg !1346
  br i1 %1293, label %1294, label %1334, !dbg !1346

; <label>:1294                                    ; preds = %1287
  %1295 = load i8** %4, align 8, !dbg !1347
  %1296 = load i64* %len, align 8, !dbg !1347
  %1297 = sub i64 0, %1296, !dbg !1347
  %1298 = getelementptr inbounds i8* %1295, i64 %1297, !dbg !1347
  %1299 = getelementptr inbounds i8* %1298, i64 1, !dbg !1347
  %1300 = load i8** %little, align 8, !dbg !1347
  %1301 = load i64* %len, align 8, !dbg !1347
  %1302 = sub i64 %1301, 1, !dbg !1347
  %1303 = call i32 @memcmp(i8* %1299, i8* %1300, i64 %1302), !dbg !1347
  %1304 = icmp ne i32 %1303, 0, !dbg !1350
  br i1 %1304, label %1311, label %1305, !dbg !1350

; <label>:1305                                    ; preds = %1294
  %1306 = load i8** %4, align 8, !dbg !1351
  %1307 = load i64* %len, align 8, !dbg !1352
  %1308 = sub i64 0, %1307, !dbg !1351
  %1309 = getelementptr inbounds i8* %1306, i64 %1308, !dbg !1351
  %1310 = getelementptr inbounds i8* %1309, i64 1, !dbg !1351
  store i8* %1310, i8** %last2, align 8, !dbg !1353
  br label %1333, !dbg !1353

; <label>:1311                                    ; preds = %1294
  %1312 = load i32* @PL_multiline, align 4, !dbg !1354
  %1313 = icmp ne i32 %1312, 0, !dbg !1356
  br i1 %1313, label %1331, label %1314, !dbg !1356

; <label>:1314                                    ; preds = %1311
  %1315 = load i8** %4, align 8, !dbg !1357
  %1316 = load i64* %len, align 8, !dbg !1357
  %1317 = sub i64 0, %1316, !dbg !1357
  %1318 = getelementptr inbounds i8* %1315, i64 %1317, !dbg !1357
  %1319 = load i8** %little, align 8, !dbg !1357
  %1320 = load i64* %len, align 8, !dbg !1357
  %1321 = call i32 @memcmp(i8* %1318, i8* %1319, i64 %1320), !dbg !1357
  %1322 = icmp ne i32 %1321, 0, !dbg !1357
  br i1 %1322, label %1328, label %1323, !dbg !1357

; <label>:1323                                    ; preds = %1314
  %1324 = load i8** %4, align 8, !dbg !1358
  %1325 = load i64* %len, align 8, !dbg !1359
  %1326 = sub i64 0, %1325, !dbg !1358
  %1327 = getelementptr inbounds i8* %1324, i64 %1326, !dbg !1358
  br label %1329, !dbg !1357

; <label>:1328                                    ; preds = %1314
  br label %1329, !dbg !1360

; <label>:1329                                    ; preds = %1328, %1323
  %1330 = phi i8* [ %1327, %1323 ], [ null, %1328 ], !dbg !1357
  store i8* %1330, i8** %last2, align 8, !dbg !1362
  br label %1332, !dbg !1362

; <label>:1331                                    ; preds = %1311
  br label %1335, !dbg !1365

; <label>:1332                                    ; preds = %1329
  br label %1333

; <label>:1333                                    ; preds = %1332, %1305
  br label %1349, !dbg !1366

; <label>:1334                                    ; preds = %1287
  br label %1335, !dbg !1367

; <label>:1335                                    ; preds = %1334, %1331
  %1336 = load i64* %len, align 8, !dbg !1368
  %1337 = icmp ne i64 %1336, 0, !dbg !1371
  br i1 %1337, label %1338, label %1346, !dbg !1371

; <label>:1338                                    ; preds = %1335
  %1339 = load i8** %s, align 8, !dbg !1372
  %1340 = load i8** %4, align 8, !dbg !1373
  %1341 = load i8** %little, align 8, !dbg !1374
  %1342 = load i8** %little, align 8, !dbg !1375
  %1343 = load i64* %len, align 8, !dbg !1376
  %1344 = getelementptr inbounds i8* %1342, i64 %1343, !dbg !1375
  %1345 = call i8* @Perl_rninstr(i8* %1339, i8* %1340, i8* %1341, i8* %1344), !dbg !1377
  store i8* %1345, i8** %last2, align 8, !dbg !1378
  br label %1348, !dbg !1378

; <label>:1346                                    ; preds = %1335
  %1347 = load i8** %4, align 8, !dbg !1379
  store i8* %1347, i8** %last2, align 8, !dbg !1380
  br label %1348

; <label>:1348                                    ; preds = %1346, %1338
  br label %1349

; <label>:1349                                    ; preds = %1348, %1333
  br label %1350

; <label>:1350                                    ; preds = %1349, %1264
  %1351 = load i8** %last2, align 8, !dbg !1381
  %1352 = icmp eq i8* %1351, null, !dbg !1381
  br i1 %1352, label %1353, label %1354, !dbg !1383

; <label>:1353                                    ; preds = %1350
  br label %1529, !dbg !1384

; <label>:1354                                    ; preds = %1350
  %1355 = load i8** %4, align 8, !dbg !1386
  %1356 = load i8** %last2, align 8, !dbg !1387
  %1357 = ptrtoint i8* %1355 to i64, !dbg !1386
  %1358 = ptrtoint i8* %1356 to i64, !dbg !1386
  %1359 = sub i64 %1357, %1358, !dbg !1386
  %1360 = load %struct.regexp** %2, align 8, !dbg !1388
  %1361 = getelementptr inbounds %struct.regexp* %1360, i32 0, i32 3, !dbg !1388
  %1362 = load %struct.reg_substr_data** %1361, align 8, !dbg !1388
  %1363 = getelementptr inbounds %struct.reg_substr_data* %1362, i32 0, i32 0, !dbg !1388
  %1364 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1363, i32 0, i64 1, !dbg !1388
  %1365 = getelementptr inbounds %struct.reg_substr_datum* %1364, i32 0, i32 0, !dbg !1388
  %1366 = load i32* %1365, align 4, !dbg !1388
  %1367 = sext i32 %1366 to i64, !dbg !1388
  %1368 = add nsw i64 %1359, %1367, !dbg !1386
  %1369 = trunc i64 %1368 to i32, !dbg !1386
  store i32 %1369, i32* %dontbother, align 4, !dbg !1389
  br label %1370, !dbg !1390

; <label>:1370                                    ; preds = %1354, %1161
  %1371 = load i32* %minlen, align 4, !dbg !1391
  %1372 = icmp ne i32 %1371, 0, !dbg !1393
  br i1 %1372, label %1373, label %1380, !dbg !1393

; <label>:1373                                    ; preds = %1370
  %1374 = load i32* %dontbother, align 4, !dbg !1394
  %1375 = load i32* %minlen, align 4, !dbg !1396
  %1376 = icmp slt i32 %1374, %1375, !dbg !1397
  br i1 %1376, label %1377, label %1380, !dbg !1393

; <label>:1377                                    ; preds = %1373
  %1378 = load i32* %minlen, align 4, !dbg !1398
  %1379 = sub nsw i32 %1378, 1, !dbg !1398
  store i32 %1379, i32* %dontbother, align 4, !dbg !1399
  br label %1380, !dbg !1399

; <label>:1380                                    ; preds = %1377, %1373, %1370
  %1381 = load i32* %dontbother, align 4, !dbg !1400
  %1382 = load i8** %4, align 8, !dbg !1401
  %1383 = sext i32 %1381 to i64, !dbg !1401
  %1384 = sub i64 0, %1383, !dbg !1401
  %1385 = getelementptr inbounds i8* %1382, i64 %1384, !dbg !1401
  store i8* %1385, i8** %4, align 8, !dbg !1401
  %1386 = load i8* %do_utf8, align 1, !dbg !1402
  %1387 = icmp ne i8 %1386, 0, !dbg !1404
  br i1 %1387, label %1388, label %1411, !dbg !1404

; <label>:1388                                    ; preds = %1380
  br label %1389, !dbg !1405

; <label>:1389                                    ; preds = %1400, %1388
  %1390 = load %struct.regexp** %2, align 8, !dbg !1407
  %1391 = load i8** %s, align 8, !dbg !1412
  %1392 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %1390, i8* %1391), !dbg !1413
  %1393 = icmp ne i32 %1392, 0, !dbg !1414
  br i1 %1393, label %1394, label %1395, !dbg !1414

; <label>:1394                                    ; preds = %1389
  br label %1429, !dbg !1415

; <label>:1395                                    ; preds = %1389
  %1396 = load i8** %s, align 8, !dbg !1416
  %1397 = load i8** %4, align 8, !dbg !1418
  %1398 = icmp uge i8* %1396, %1397, !dbg !1416
  br i1 %1398, label %1399, label %1400, !dbg !1419

; <label>:1399                                    ; preds = %1395
  br label %1410, !dbg !1420

; <label>:1400                                    ; preds = %1395
  %1401 = load i8** %s, align 8, !dbg !1421
  %1402 = load i8* %1401, align 1, !dbg !1421
  %1403 = zext i8 %1402 to i64, !dbg !1421
  %1404 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1403, !dbg !1421
  %1405 = load i8* %1404, align 1, !dbg !1421
  %1406 = zext i8 %1405 to i32, !dbg !1421
  %1407 = load i8** %s, align 8, !dbg !1422
  %1408 = sext i32 %1406 to i64, !dbg !1422
  %1409 = getelementptr inbounds i8* %1407, i64 %1408, !dbg !1422
  store i8* %1409, i8** %s, align 8, !dbg !1422
  br label %1389, !dbg !1423

; <label>:1410                                    ; preds = %1399
  br label %1425, !dbg !1424

; <label>:1411                                    ; preds = %1380
  br label %1412, !dbg !1425

; <label>:1412                                    ; preds = %1419, %1411
  %1413 = load %struct.regexp** %2, align 8, !dbg !1427
  %1414 = load i8** %s, align 8, !dbg !1430
  %1415 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %1413, i8* %1414), !dbg !1431
  %1416 = icmp ne i32 %1415, 0, !dbg !1432
  br i1 %1416, label %1417, label %1418, !dbg !1432

; <label>:1417                                    ; preds = %1412
  br label %1429, !dbg !1433

; <label>:1418                                    ; preds = %1412
  br label %1419, !dbg !1434

; <label>:1419                                    ; preds = %1418
  %1420 = load i8** %s, align 8, !dbg !1435
  %1421 = getelementptr inbounds i8* %1420, i32 1, !dbg !1435
  store i8* %1421, i8** %s, align 8, !dbg !1435
  %1422 = load i8** %4, align 8, !dbg !1437
  %1423 = icmp ult i8* %1420, %1422, !dbg !1438
  br i1 %1423, label %1412, label %1424, !dbg !1434

; <label>:1424                                    ; preds = %1419
  br label %1425

; <label>:1425                                    ; preds = %1424, %1410
  br label %1426

; <label>:1426                                    ; preds = %1425, %1151
  br label %1427

; <label>:1427                                    ; preds = %1426
  br label %1428

; <label>:1428                                    ; preds = %1427, %548
  br label %1529, !dbg !1439

; <label>:1429                                    ; preds = %1417, %1394, %1150, %1089, %1067, %523, %460, %351, %333, %281, %210
  %1430 = load i32* @PL_reg_flags, align 4, !dbg !1440
  %1431 = and i32 %1430, 1, !dbg !1440
  %1432 = icmp ne i32 %1431, 0, !dbg !1440
  br i1 %1432, label %1433, label %1438, !dbg !1440

; <label>:1433                                    ; preds = %1429
  %1434 = load %struct.regexp** %2, align 8, !dbg !1441
  %1435 = getelementptr inbounds %struct.regexp* %1434, i32 0, i32 15, !dbg !1441
  %1436 = load i32* %1435, align 4, !dbg !1441
  %1437 = or i32 %1436, 524288, !dbg !1441
  store i32 %1437, i32* %1435, align 4, !dbg !1441
  br label %1443, !dbg !1441

; <label>:1438                                    ; preds = %1429
  %1439 = load %struct.regexp** %2, align 8, !dbg !1442
  %1440 = getelementptr inbounds %struct.regexp* %1439, i32 0, i32 15, !dbg !1442
  %1441 = load i32* %1440, align 4, !dbg !1442
  %1442 = and i32 %1441, -524289, !dbg !1442
  store i32 %1442, i32* %1440, align 4, !dbg !1442
  br label %1443, !dbg !1442

; <label>:1443                                    ; preds = %1438, %1433
  %1444 = phi i32 [ %1437, %1433 ], [ %1442, %1438 ], !dbg !1440
  %1445 = load i32* @PL_reg_eval_set, align 4, !dbg !1443
  %1446 = icmp ne i32 %1445, 0, !dbg !1445
  br i1 %1446, label %1447, label %1467, !dbg !1445

; <label>:1447                                    ; preds = %1443
  %1448 = load %struct.sv** %oreplsv, align 8, !dbg !1446
  %1449 = load %struct.gv** @PL_replgv, align 8, !dbg !1449
  %1450 = getelementptr inbounds %struct.gv* %1449, i32 0, i32 0, !dbg !1449
  %1451 = load %struct.xpvgv** %1450, align 8, !dbg !1449
  %1452 = getelementptr inbounds %struct.xpvgv* %1451, i32 0, i32 7, !dbg !1449
  %1453 = load %struct.gp** %1452, align 8, !dbg !1449
  %1454 = getelementptr inbounds %struct.gp* %1453, i32 0, i32 0, !dbg !1449
  %1455 = load %struct.sv** %1454, align 8, !dbg !1449
  %1456 = icmp ne %struct.sv* %1448, %1455, !dbg !1446
  br i1 %1456, label %1457, label %1466, !dbg !1450

; <label>:1457                                    ; preds = %1447
  %1458 = load %struct.sv** %oreplsv, align 8, !dbg !1451
  %1459 = load %struct.gv** @PL_replgv, align 8, !dbg !1451
  %1460 = getelementptr inbounds %struct.gv* %1459, i32 0, i32 0, !dbg !1451
  %1461 = load %struct.xpvgv** %1460, align 8, !dbg !1451
  %1462 = getelementptr inbounds %struct.xpvgv* %1461, i32 0, i32 7, !dbg !1451
  %1463 = load %struct.gp** %1462, align 8, !dbg !1451
  %1464 = getelementptr inbounds %struct.gp* %1463, i32 0, i32 0, !dbg !1451
  %1465 = load %struct.sv** %1464, align 8, !dbg !1451
  call void @Perl_sv_setsv_flags(%struct.sv* %1458, %struct.sv* %1465, i32 2), !dbg !1451
  br label %1466, !dbg !1451

; <label>:1466                                    ; preds = %1457, %1447
  call void @restore_pos(i8* null), !dbg !1452
  br label %1467, !dbg !1453

; <label>:1467                                    ; preds = %1466, %1443
  %1468 = load i32* %9, align 4, !dbg !1454
  %1469 = and i32 %1468, 16, !dbg !1454
  %1470 = icmp ne i32 %1469, 0, !dbg !1456
  br i1 %1470, label %1528, label %1471, !dbg !1456

; <label>:1471                                    ; preds = %1467
  %1472 = load %struct.regexp** %2, align 8, !dbg !1457
  %1473 = getelementptr inbounds %struct.regexp* %1472, i32 0, i32 15, !dbg !1457
  %1474 = load i32* %1473, align 4, !dbg !1457
  %1475 = and i32 %1474, 262144, !dbg !1457
  %1476 = icmp ne i32 %1475, 0, !dbg !1460
  br i1 %1476, label %1477, label %1485, !dbg !1460

; <label>:1477                                    ; preds = %1471
  %1478 = load %struct.regexp** %2, align 8, !dbg !1461
  %1479 = getelementptr inbounds %struct.regexp* %1478, i32 0, i32 6, !dbg !1461
  %1480 = load i8** %1479, align 8, !dbg !1461
  call void @Perl_safesysfree(i8* %1480), !dbg !1461
  %1481 = load %struct.regexp** %2, align 8, !dbg !1463
  %1482 = getelementptr inbounds %struct.regexp* %1481, i32 0, i32 15, !dbg !1463
  %1483 = load i32* %1482, align 4, !dbg !1463
  %1484 = and i32 %1483, -262145, !dbg !1463
  store i32 %1484, i32* %1482, align 4, !dbg !1463
  br label %1485, !dbg !1464

; <label>:1485                                    ; preds = %1477, %1471
  %1486 = load i32* %9, align 4, !dbg !1465
  %1487 = and i32 %1486, 1, !dbg !1465
  %1488 = icmp ne i32 %1487, 0, !dbg !1467
  br i1 %1488, label %1489, label %1515, !dbg !1467

; <label>:1489                                    ; preds = %1485
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1468, metadata !566), !dbg !1470
  %1490 = load i8** @PL_regeol, align 8, !dbg !1471
  %1491 = load i8** %startpos, align 8, !dbg !1472
  %1492 = ptrtoint i8* %1490 to i64, !dbg !1471
  %1493 = ptrtoint i8* %1491 to i64, !dbg !1471
  %1494 = sub i64 %1492, %1493, !dbg !1471
  %1495 = load i8** %3, align 8, !dbg !1473
  %1496 = load i8** %5, align 8, !dbg !1474
  %1497 = ptrtoint i8* %1495 to i64, !dbg !1473
  %1498 = ptrtoint i8* %1496 to i64, !dbg !1473
  %1499 = sub i64 %1497, %1498, !dbg !1473
  %1500 = add nsw i64 %1494, %1499, !dbg !1471
  %1501 = trunc i64 %1500 to i32, !dbg !1471
  store i32 %1501, i32* %i, align 4, !dbg !1470
  %1502 = load i8** %5, align 8, !dbg !1475
  %1503 = load i32* %i, align 4, !dbg !1476
  %1504 = call i8* @Perl_savepvn(i8* %1502, i32 %1503), !dbg !1477
  store i8* %1504, i8** %s, align 8, !dbg !1478
  %1505 = load i8** %s, align 8, !dbg !1479
  %1506 = load %struct.regexp** %2, align 8, !dbg !1480
  %1507 = getelementptr inbounds %struct.regexp* %1506, i32 0, i32 6, !dbg !1480
  store i8* %1505, i8** %1507, align 8, !dbg !1480
  %1508 = load i32* %i, align 4, !dbg !1481
  %1509 = load %struct.regexp** %2, align 8, !dbg !1482
  %1510 = getelementptr inbounds %struct.regexp* %1509, i32 0, i32 8, !dbg !1482
  store i32 %1508, i32* %1510, align 4, !dbg !1482
  %1511 = load %struct.regexp** %2, align 8, !dbg !1483
  %1512 = getelementptr inbounds %struct.regexp* %1511, i32 0, i32 15, !dbg !1483
  %1513 = load i32* %1512, align 4, !dbg !1483
  %1514 = or i32 %1513, 262144, !dbg !1483
  store i32 %1514, i32* %1512, align 4, !dbg !1483
  br label %1527, !dbg !1484

; <label>:1515                                    ; preds = %1485
  %1516 = load i8** %5, align 8, !dbg !1485
  %1517 = load %struct.regexp** %2, align 8, !dbg !1487
  %1518 = getelementptr inbounds %struct.regexp* %1517, i32 0, i32 6, !dbg !1487
  store i8* %1516, i8** %1518, align 8, !dbg !1487
  %1519 = load i8** @PL_regeol, align 8, !dbg !1488
  %1520 = load i8** %5, align 8, !dbg !1489
  %1521 = ptrtoint i8* %1519 to i64, !dbg !1488
  %1522 = ptrtoint i8* %1520 to i64, !dbg !1488
  %1523 = sub i64 %1521, %1522, !dbg !1488
  %1524 = trunc i64 %1523 to i32, !dbg !1488
  %1525 = load %struct.regexp** %2, align 8, !dbg !1490
  %1526 = getelementptr inbounds %struct.regexp* %1525, i32 0, i32 8, !dbg !1490
  store i32 %1524, i32* %1526, align 4, !dbg !1490
  br label %1527

; <label>:1527                                    ; preds = %1515, %1489
  br label %1528, !dbg !1491

; <label>:1528                                    ; preds = %1527, %1467
  store i32 1, i32* %1, !dbg !1492
  br label %1534, !dbg !1492

; <label>:1529                                    ; preds = %1428, %1353, %1095, %754, %352, %339, %304, %287, %193, %152, %70
  %1530 = load i32* @PL_reg_eval_set, align 4, !dbg !1493
  %1531 = icmp ne i32 %1530, 0, !dbg !1495
  br i1 %1531, label %1532, label %1533, !dbg !1495

; <label>:1532                                    ; preds = %1529
  call void @restore_pos(i8* null), !dbg !1496
  br label %1533, !dbg !1496

; <label>:1533                                    ; preds = %1532, %1529
  store i32 0, i32* %1, !dbg !1497
  br label %1534, !dbg !1497

; <label>:1534                                    ; preds = %1533, %1528, %57
  %1535 = load i32* %1, !dbg !1498
  ret i32 %1535, !dbg !1498
}

; Function Attrs: nounwind uwtable
define i8* @Perl_re_intuit_start(%struct.regexp* %prog, %struct.sv* %sv, i8* %strpos, i8* %strend, i32 %flags, %struct.re_scream_pos_data_s* %data) #0 {
  %1 = alloca i8*, align 8
  %2 = alloca %struct.regexp*, align 8
  %3 = alloca %struct.sv*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.re_scream_pos_data_s*, align 8
  %start_shift = alloca i32, align 4
  %end_shift = alloca i32, align 4
  %s = alloca i8*, align 8
  %check = alloca %struct.sv*, align 8
  %strbeg = alloca i8*, align 8
  %t = alloca i8*, align 8
  %do_utf8 = alloca i32, align 4
  %ml_anch = alloca i32, align 4
  %other_last = alloca i8*, align 8
  %check_at = alloca i8*, align 8
  %slen = alloca i32, align 4
  %end = alloca i32, align 4
  %eshift = alloca i32, align 4
  %p = alloca i32, align 4
  %pp = alloca i32*, align 8
  %last = alloca i8*, align 8
  %last1 = alloca i8*, align 8
  %last2 = alloca i8*, align 8
  %s1 = alloca i8*, align 8
  %must = alloca %struct.sv*, align 8
  %last3 = alloca i8*, align 8
  %last14 = alloca i8*, align 8
  %s15 = alloca i8*, align 8
  %must6 = alloca %struct.sv*, align 8
  %str = alloca i8*, align 8
  %cl_l = alloca i32, align 4
  %endpos = alloca i8*, align 8
  %startpos = alloca i8*, align 8
  store %struct.regexp* %prog, %struct.regexp** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.regexp** %2, metadata !1499, metadata !566), !dbg !1500
  store %struct.sv* %sv, %struct.sv** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.sv** %3, metadata !1501, metadata !566), !dbg !1502
  store i8* %strpos, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1503, metadata !566), !dbg !1504
  store i8* %strend, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !1505, metadata !566), !dbg !1506
  store i32 %flags, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1507, metadata !566), !dbg !1508
  store %struct.re_scream_pos_data_s* %data, %struct.re_scream_pos_data_s** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.re_scream_pos_data_s** %7, metadata !1509, metadata !566), !dbg !1510
  call void @llvm.dbg.declare(metadata i32* %start_shift, metadata !1511, metadata !566), !dbg !1512
  store i32 0, i32* %start_shift, align 4, !dbg !1512
  call void @llvm.dbg.declare(metadata i32* %end_shift, metadata !1513, metadata !566), !dbg !1514
  store i32 0, i32* %end_shift, align 4, !dbg !1514
  call void @llvm.dbg.declare(metadata i8** %s, metadata !1515, metadata !566), !dbg !1516
  call void @llvm.dbg.declare(metadata %struct.sv** %check, metadata !1517, metadata !566), !dbg !1518
  call void @llvm.dbg.declare(metadata i8** %strbeg, metadata !1519, metadata !566), !dbg !1520
  call void @llvm.dbg.declare(metadata i8** %t, metadata !1521, metadata !566), !dbg !1522
  call void @llvm.dbg.declare(metadata i32* %do_utf8, metadata !1523, metadata !566), !dbg !1524
  %8 = load %struct.sv** %3, align 8, !dbg !1525
  %9 = icmp ne %struct.sv* %8, null, !dbg !1525
  br i1 %9, label %10, label %15, !dbg !1525

; <label>:10                                      ; preds = %0
  %11 = load %struct.sv** %3, align 8, !dbg !1526
  %12 = getelementptr inbounds %struct.sv* %11, i32 0, i32 2, !dbg !1526
  %13 = load i32* %12, align 4, !dbg !1526
  %14 = and i32 %13, 536870912, !dbg !1526
  br label %16, !dbg !1525

; <label>:15                                      ; preds = %0
  br label %16, !dbg !1528

; <label>:16                                      ; preds = %15, %10
  %17 = phi i32 [ %14, %10 ], [ 0, %15 ], !dbg !1525
  store i32 %17, i32* %do_utf8, align 4, !dbg !1530
  call void @llvm.dbg.declare(metadata i32* %ml_anch, metadata !1533, metadata !566), !dbg !1534
  call void @llvm.dbg.declare(metadata i8** %other_last, metadata !1535, metadata !566), !dbg !1536
  store i8* null, i8** %other_last, align 8, !dbg !1536
  call void @llvm.dbg.declare(metadata i8** %check_at, metadata !1537, metadata !566), !dbg !1538
  store i8* null, i8** %check_at, align 8, !dbg !1538
  %18 = load i32* %do_utf8, align 4, !dbg !1539
  %19 = icmp ne i32 %18, 0, !dbg !1539
  br i1 %19, label %20, label %25, !dbg !1539

; <label>:20                                      ; preds = %16
  %21 = load %struct.regexp** %2, align 8, !dbg !1540
  %22 = getelementptr inbounds %struct.regexp* %21, i32 0, i32 15, !dbg !1540
  %23 = load i32* %22, align 4, !dbg !1540
  %24 = or i32 %23, 268435456, !dbg !1540
  store i32 %24, i32* %22, align 4, !dbg !1540
  store i8 1, i8* @PL_reg_match_utf8, align 1, !dbg !1540
  br label %30, !dbg !1540

; <label>:25                                      ; preds = %16
  %26 = load %struct.regexp** %2, align 8, !dbg !1541
  %27 = getelementptr inbounds %struct.regexp* %26, i32 0, i32 15, !dbg !1541
  %28 = load i32* %27, align 4, !dbg !1541
  %29 = and i32 %28, -268435457, !dbg !1541
  store i32 %29, i32* %27, align 4, !dbg !1541
  store i8 0, i8* @PL_reg_match_utf8, align 1, !dbg !1541
  br label %30, !dbg !1541

; <label>:30                                      ; preds = %25, %20
  %31 = phi i32 [ 1, %20 ], [ 0, %25 ], !dbg !1539
  %32 = load %struct.regexp** %2, align 8, !dbg !1542
  %33 = getelementptr inbounds %struct.regexp* %32, i32 0, i32 15, !dbg !1542
  %34 = load i32* %33, align 4, !dbg !1542
  %35 = and i32 %34, 65536, !dbg !1542
  %36 = icmp ne i32 %35, 0, !dbg !1544
  br i1 %36, label %37, label %40, !dbg !1544

; <label>:37                                      ; preds = %30
  %38 = load i32* @PL_reg_flags, align 4, !dbg !1545
  %39 = or i32 %38, 8, !dbg !1545
  store i32 %39, i32* @PL_reg_flags, align 4, !dbg !1545
  br label %40, !dbg !1547

; <label>:40                                      ; preds = %37, %30
  %41 = load %struct.regexp** %2, align 8, !dbg !1548
  %42 = getelementptr inbounds %struct.regexp* %41, i32 0, i32 10, !dbg !1548
  %43 = load i32* %42, align 4, !dbg !1548
  %44 = sext i32 %43 to i64, !dbg !1548
  %45 = load i8** %5, align 8, !dbg !1550
  %46 = load i8** %4, align 8, !dbg !1551
  %47 = ptrtoint i8* %45 to i64, !dbg !1550
  %48 = ptrtoint i8* %46 to i64, !dbg !1550
  %49 = sub i64 %47, %48, !dbg !1550
  %50 = icmp sgt i64 %44, %49, !dbg !1548
  br i1 %50, label %51, label %52, !dbg !1552

; <label>:51                                      ; preds = %40
  br label %2117, !dbg !1553

; <label>:52                                      ; preds = %40
  %53 = load %struct.sv** %3, align 8, !dbg !1555
  %54 = icmp ne %struct.sv* %53, null, !dbg !1556
  br i1 %54, label %55, label %71, !dbg !1556

; <label>:55                                      ; preds = %52
  %56 = load %struct.sv** %3, align 8, !dbg !1557
  %57 = getelementptr inbounds %struct.sv* %56, i32 0, i32 2, !dbg !1557
  %58 = load i32* %57, align 4, !dbg !1557
  %59 = and i32 %58, 262144, !dbg !1557
  %60 = icmp ne i32 %59, 0, !dbg !1556
  br i1 %60, label %61, label %71, !dbg !1556

; <label>:61                                      ; preds = %55
  %62 = load i8** %5, align 8, !dbg !1558
  %63 = load %struct.sv** %3, align 8, !dbg !1559
  %64 = getelementptr inbounds %struct.sv* %63, i32 0, i32 0, !dbg !1559
  %65 = load i8** %64, align 8, !dbg !1559
  %66 = bitcast i8* %65 to %struct.xpv*, !dbg !1559
  %67 = getelementptr inbounds %struct.xpv* %66, i32 0, i32 1, !dbg !1559
  %68 = load i64* %67, align 8, !dbg !1559
  %69 = sub i64 0, %68, !dbg !1560
  %70 = getelementptr inbounds i8* %62, i64 %69, !dbg !1560
  br label %73, !dbg !1556

; <label>:71                                      ; preds = %55, %52
  %72 = load i8** %4, align 8, !dbg !1561
  br label %73, !dbg !1556

; <label>:73                                      ; preds = %71, %61
  %74 = phi i8* [ %70, %61 ], [ %72, %71 ], !dbg !1556
  store i8* %74, i8** %strbeg, align 8, !dbg !1563
  %75 = load i8** %5, align 8, !dbg !1566
  store i8* %75, i8** @PL_regeol, align 8, !dbg !1567
  %76 = load i32* %do_utf8, align 4, !dbg !1568
  %77 = icmp ne i32 %76, 0, !dbg !1570
  br i1 %77, label %78, label %107, !dbg !1570

; <label>:78                                      ; preds = %73
  %79 = load %struct.regexp** %2, align 8, !dbg !1571
  %80 = getelementptr inbounds %struct.regexp* %79, i32 0, i32 3, !dbg !1571
  %81 = load %struct.reg_substr_data** %80, align 8, !dbg !1571
  %82 = getelementptr inbounds %struct.reg_substr_data* %81, i32 0, i32 0, !dbg !1571
  %83 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %82, i32 0, i64 2, !dbg !1571
  %84 = getelementptr inbounds %struct.reg_substr_datum* %83, i32 0, i32 3, !dbg !1571
  %85 = load %struct.sv** %84, align 8, !dbg !1571
  %86 = icmp ne %struct.sv* %85, null, !dbg !1574
  br i1 %86, label %99, label %87, !dbg !1574

; <label>:87                                      ; preds = %78
  %88 = load %struct.regexp** %2, align 8, !dbg !1575
  %89 = getelementptr inbounds %struct.regexp* %88, i32 0, i32 3, !dbg !1575
  %90 = load %struct.reg_substr_data** %89, align 8, !dbg !1575
  %91 = getelementptr inbounds %struct.reg_substr_data* %90, i32 0, i32 0, !dbg !1575
  %92 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %91, i32 0, i64 2, !dbg !1575
  %93 = getelementptr inbounds %struct.reg_substr_datum* %92, i32 0, i32 2, !dbg !1575
  %94 = load %struct.sv** %93, align 8, !dbg !1575
  %95 = icmp ne %struct.sv* %94, null, !dbg !1574
  br i1 %95, label %96, label %99, !dbg !1574

; <label>:96                                      ; preds = %87
  %97 = load %struct.regexp** %2, align 8, !dbg !1577
  %98 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_utf8_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %97), !dbg !1578
  br label %99, !dbg !1578

; <label>:99                                      ; preds = %96, %87, %78
  %100 = load %struct.regexp** %2, align 8, !dbg !1579
  %101 = getelementptr inbounds %struct.regexp* %100, i32 0, i32 3, !dbg !1579
  %102 = load %struct.reg_substr_data** %101, align 8, !dbg !1579
  %103 = getelementptr inbounds %struct.reg_substr_data* %102, i32 0, i32 0, !dbg !1579
  %104 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %103, i32 0, i64 2, !dbg !1579
  %105 = getelementptr inbounds %struct.reg_substr_datum* %104, i32 0, i32 3, !dbg !1579
  %106 = load %struct.sv** %105, align 8, !dbg !1579
  store %struct.sv* %106, %struct.sv** %check, align 8, !dbg !1580
  br label %136, !dbg !1581

; <label>:107                                     ; preds = %73
  %108 = load %struct.regexp** %2, align 8, !dbg !1582
  %109 = getelementptr inbounds %struct.regexp* %108, i32 0, i32 3, !dbg !1582
  %110 = load %struct.reg_substr_data** %109, align 8, !dbg !1582
  %111 = getelementptr inbounds %struct.reg_substr_data* %110, i32 0, i32 0, !dbg !1582
  %112 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %111, i32 0, i64 2, !dbg !1582
  %113 = getelementptr inbounds %struct.reg_substr_datum* %112, i32 0, i32 2, !dbg !1582
  %114 = load %struct.sv** %113, align 8, !dbg !1582
  %115 = icmp ne %struct.sv* %114, null, !dbg !1585
  br i1 %115, label %128, label %116, !dbg !1585

; <label>:116                                     ; preds = %107
  %117 = load %struct.regexp** %2, align 8, !dbg !1586
  %118 = getelementptr inbounds %struct.regexp* %117, i32 0, i32 3, !dbg !1586
  %119 = load %struct.reg_substr_data** %118, align 8, !dbg !1586
  %120 = getelementptr inbounds %struct.reg_substr_data* %119, i32 0, i32 0, !dbg !1586
  %121 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %120, i32 0, i64 2, !dbg !1586
  %122 = getelementptr inbounds %struct.reg_substr_datum* %121, i32 0, i32 3, !dbg !1586
  %123 = load %struct.sv** %122, align 8, !dbg !1586
  %124 = icmp ne %struct.sv* %123, null, !dbg !1585
  br i1 %124, label %125, label %128, !dbg !1585

; <label>:125                                     ; preds = %116
  %126 = load %struct.regexp** %2, align 8, !dbg !1588
  %127 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_byte_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %126), !dbg !1589
  br label %128, !dbg !1589

; <label>:128                                     ; preds = %125, %116, %107
  %129 = load %struct.regexp** %2, align 8, !dbg !1590
  %130 = getelementptr inbounds %struct.regexp* %129, i32 0, i32 3, !dbg !1590
  %131 = load %struct.reg_substr_data** %130, align 8, !dbg !1590
  %132 = getelementptr inbounds %struct.reg_substr_data* %131, i32 0, i32 0, !dbg !1590
  %133 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %132, i32 0, i64 2, !dbg !1590
  %134 = getelementptr inbounds %struct.reg_substr_datum* %133, i32 0, i32 2, !dbg !1590
  %135 = load %struct.sv** %134, align 8, !dbg !1590
  store %struct.sv* %135, %struct.sv** %check, align 8, !dbg !1591
  br label %136

; <label>:136                                     ; preds = %128, %99
  %137 = load %struct.sv** %check, align 8, !dbg !1592
  %138 = icmp eq %struct.sv* %137, @PL_sv_undef, !dbg !1592
  br i1 %138, label %139, label %140, !dbg !1594

; <label>:139                                     ; preds = %136
  br label %2117, !dbg !1595

; <label>:140                                     ; preds = %136
  %141 = load %struct.regexp** %2, align 8, !dbg !1597
  %142 = getelementptr inbounds %struct.regexp* %141, i32 0, i32 15, !dbg !1597
  %143 = load i32* %142, align 4, !dbg !1597
  %144 = and i32 %143, 15, !dbg !1597
  %145 = icmp ne i32 %144, 0, !dbg !1599
  br i1 %145, label %146, label %463, !dbg !1599

; <label>:146                                     ; preds = %140
  %147 = load %struct.regexp** %2, align 8, !dbg !1600
  %148 = getelementptr inbounds %struct.regexp* %147, i32 0, i32 15, !dbg !1600
  %149 = load i32* %148, align 4, !dbg !1600
  %150 = and i32 %149, 12, !dbg !1600
  %151 = icmp ne i32 %150, 0, !dbg !1602
  br i1 %151, label %164, label %152, !dbg !1602

; <label>:152                                     ; preds = %146
  %153 = load %struct.regexp** %2, align 8, !dbg !1603
  %154 = getelementptr inbounds %struct.regexp* %153, i32 0, i32 15, !dbg !1603
  %155 = load i32* %154, align 4, !dbg !1603
  %156 = and i32 %155, 1, !dbg !1603
  %157 = icmp ne i32 %156, 0, !dbg !1604
  br i1 %157, label %158, label %162, !dbg !1604

; <label>:158                                     ; preds = %152
  %159 = load i32* @PL_multiline, align 4, !dbg !1605
  %160 = icmp ne i32 %159, 0, !dbg !1606
  %161 = xor i1 %160, true, !dbg !1606
  br label %162

; <label>:162                                     ; preds = %158, %152
  %163 = phi i1 [ false, %152 ], [ %161, %158 ]
  br label %164, !dbg !1602

; <label>:164                                     ; preds = %162, %146
  %165 = phi i1 [ true, %146 ], [ %163, %162 ]
  %166 = xor i1 %165, true, !dbg !1607
  %167 = zext i1 %166 to i32, !dbg !1607
  store i32 %167, i32* %ml_anch, align 4, !dbg !1610
  %168 = load i32* %ml_anch, align 4, !dbg !1611
  %169 = icmp ne i32 %168, 0, !dbg !1613
  br i1 %169, label %363, label %170, !dbg !1613

; <label>:170                                     ; preds = %164
  %171 = load %struct.regexp** %2, align 8, !dbg !1614
  %172 = getelementptr inbounds %struct.regexp* %171, i32 0, i32 15, !dbg !1614
  %173 = load i32* %172, align 4, !dbg !1614
  %174 = and i32 %173, 40, !dbg !1614
  %175 = icmp ne i32 %174, 0, !dbg !1617
  br i1 %175, label %190, label %176, !dbg !1617

; <label>:176                                     ; preds = %170
  %177 = load %struct.sv** %3, align 8, !dbg !1618
  %178 = icmp ne %struct.sv* %177, null, !dbg !1617
  br i1 %178, label %179, label %190, !dbg !1617

; <label>:179                                     ; preds = %176
  %180 = load %struct.sv** %3, align 8, !dbg !1619
  %181 = getelementptr inbounds %struct.sv* %180, i32 0, i32 2, !dbg !1619
  %182 = load i32* %181, align 4, !dbg !1619
  %183 = and i32 %182, 524288, !dbg !1619
  %184 = icmp ne i32 %183, 0, !dbg !1617
  br i1 %184, label %190, label %185, !dbg !1617

; <label>:185                                     ; preds = %179
  %186 = load i8** %4, align 8, !dbg !1620
  %187 = load i8** %strbeg, align 8, !dbg !1621
  %188 = icmp ne i8* %186, %187, !dbg !1620
  br i1 %188, label %189, label %190, !dbg !1617

; <label>:189                                     ; preds = %185
  br label %2117, !dbg !1622

; <label>:190                                     ; preds = %185, %179, %176, %170
  %191 = load %struct.regexp** %2, align 8, !dbg !1624
  %192 = getelementptr inbounds %struct.regexp* %191, i32 0, i32 3, !dbg !1624
  %193 = load %struct.reg_substr_data** %192, align 8, !dbg !1624
  %194 = getelementptr inbounds %struct.reg_substr_data* %193, i32 0, i32 0, !dbg !1624
  %195 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %194, i32 0, i64 2, !dbg !1624
  %196 = getelementptr inbounds %struct.reg_substr_datum* %195, i32 0, i32 0, !dbg !1624
  %197 = load i32* %196, align 4, !dbg !1624
  %198 = load %struct.regexp** %2, align 8, !dbg !1626
  %199 = getelementptr inbounds %struct.regexp* %198, i32 0, i32 3, !dbg !1626
  %200 = load %struct.reg_substr_data** %199, align 8, !dbg !1626
  %201 = getelementptr inbounds %struct.reg_substr_data* %200, i32 0, i32 0, !dbg !1626
  %202 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %201, i32 0, i64 2, !dbg !1626
  %203 = getelementptr inbounds %struct.reg_substr_datum* %202, i32 0, i32 1, !dbg !1626
  %204 = load i32* %203, align 4, !dbg !1626
  %205 = icmp eq i32 %197, %204, !dbg !1624
  br i1 %205, label %206, label %362, !dbg !1627

; <label>:206                                     ; preds = %190
  %207 = load %struct.regexp** %2, align 8, !dbg !1628
  %208 = getelementptr inbounds %struct.regexp* %207, i32 0, i32 15, !dbg !1628
  %209 = load i32* %208, align 4, !dbg !1628
  %210 = and i32 %209, 2048, !dbg !1628
  %211 = icmp ne i32 %210, 0, !dbg !1627
  br i1 %211, label %362, label %212, !dbg !1627

; <label>:212                                     ; preds = %206
  call void @llvm.dbg.declare(metadata i32* %slen, metadata !1629, metadata !566), !dbg !1631
  %213 = load i8* @PL_reg_match_utf8, align 1, !dbg !1632
  %214 = sext i8 %213 to i32, !dbg !1632
  %215 = icmp ne i32 %214, 0, !dbg !1632
  br i1 %215, label %216, label %229, !dbg !1632

; <label>:216                                     ; preds = %212
  %217 = load i8** %4, align 8, !dbg !1633
  %218 = load %struct.regexp** %2, align 8, !dbg !1633
  %219 = getelementptr inbounds %struct.regexp* %218, i32 0, i32 3, !dbg !1633
  %220 = load %struct.reg_substr_data** %219, align 8, !dbg !1633
  %221 = getelementptr inbounds %struct.reg_substr_data* %220, i32 0, i32 0, !dbg !1633
  %222 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %221, i32 0, i64 2, !dbg !1633
  %223 = getelementptr inbounds %struct.reg_substr_datum* %222, i32 0, i32 0, !dbg !1633
  %224 = load i32* %223, align 4, !dbg !1633
  %225 = load i8** %5, align 8, !dbg !1633
  %226 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %217, i32 %224, i8* %225), !dbg !1633
  %227 = sext i32 %226 to i64, !dbg !1633
  %228 = inttoptr i64 %227 to i8*, !dbg !1633
  br label %240, !dbg !1633

; <label>:229                                     ; preds = %212
  %230 = load i8** %4, align 8, !dbg !1635
  %231 = load %struct.regexp** %2, align 8, !dbg !1635
  %232 = getelementptr inbounds %struct.regexp* %231, i32 0, i32 3, !dbg !1635
  %233 = load %struct.reg_substr_data** %232, align 8, !dbg !1635
  %234 = getelementptr inbounds %struct.reg_substr_data* %233, i32 0, i32 0, !dbg !1635
  %235 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %234, i32 0, i64 2, !dbg !1635
  %236 = getelementptr inbounds %struct.reg_substr_datum* %235, i32 0, i32 0, !dbg !1635
  %237 = load i32* %236, align 4, !dbg !1635
  %238 = sext i32 %237 to i64, !dbg !1635
  %239 = getelementptr inbounds i8* %230, i64 %238, !dbg !1635
  br label %240, !dbg !1635

; <label>:240                                     ; preds = %229, %216
  %241 = phi i8* [ %228, %216 ], [ %239, %229 ], !dbg !1632
  store i8* %241, i8** %s, align 8, !dbg !1637
  %242 = load %struct.sv** %check, align 8, !dbg !1640
  %243 = getelementptr inbounds %struct.sv* %242, i32 0, i32 2, !dbg !1640
  %244 = load i32* %243, align 4, !dbg !1640
  %245 = and i32 %244, 1073741824, !dbg !1640
  %246 = icmp ne i32 %245, 0, !dbg !1642
  br i1 %246, label %247, label %325, !dbg !1642

; <label>:247                                     ; preds = %240
  %248 = load %struct.sv** %check, align 8, !dbg !1643
  %249 = getelementptr inbounds %struct.sv* %248, i32 0, i32 0, !dbg !1643
  %250 = load i8** %249, align 8, !dbg !1643
  %251 = bitcast i8* %250 to %struct.xpv*, !dbg !1643
  %252 = getelementptr inbounds %struct.xpv* %251, i32 0, i32 1, !dbg !1643
  %253 = load i64* %252, align 8, !dbg !1643
  %254 = trunc i64 %253 to i32, !dbg !1643
  store i32 %254, i32* %slen, align 4, !dbg !1645
  %255 = load i8** %5, align 8, !dbg !1646
  %256 = load i8** %s, align 8, !dbg !1648
  %257 = ptrtoint i8* %255 to i64, !dbg !1646
  %258 = ptrtoint i8* %256 to i64, !dbg !1646
  %259 = sub i64 %257, %258, !dbg !1646
  %260 = load i32* %slen, align 4, !dbg !1649
  %261 = sext i32 %260 to i64, !dbg !1649
  %262 = icmp sgt i64 %259, %261, !dbg !1646
  br i1 %262, label %288, label %263, !dbg !1650

; <label>:263                                     ; preds = %247
  %264 = load i8** %5, align 8, !dbg !1651
  %265 = load i8** %s, align 8, !dbg !1653
  %266 = ptrtoint i8* %264 to i64, !dbg !1654
  %267 = ptrtoint i8* %265 to i64, !dbg !1654
  %268 = sub i64 %266, %267, !dbg !1654
  %269 = load i32* %slen, align 4, !dbg !1655
  %270 = sub nsw i32 %269, 1, !dbg !1655
  %271 = sext i32 %270 to i64, !dbg !1655
  %272 = icmp slt i64 %268, %271, !dbg !1654
  br i1 %272, label %288, label %273, !dbg !1650

; <label>:273                                     ; preds = %263
  %274 = load i8** %5, align 8, !dbg !1656
  %275 = load i8** %s, align 8, !dbg !1657
  %276 = ptrtoint i8* %274 to i64, !dbg !1656
  %277 = ptrtoint i8* %275 to i64, !dbg !1656
  %278 = sub i64 %276, %277, !dbg !1656
  %279 = load i32* %slen, align 4, !dbg !1658
  %280 = sext i32 %279 to i64, !dbg !1658
  %281 = icmp eq i64 %278, %280, !dbg !1656
  br i1 %281, label %282, label %289, !dbg !1650

; <label>:282                                     ; preds = %273
  %283 = load i8** %5, align 8, !dbg !1659
  %284 = getelementptr inbounds i8* %283, i64 -1, !dbg !1659
  %285 = load i8* %284, align 1, !dbg !1659
  %286 = sext i8 %285 to i32, !dbg !1659
  %287 = icmp ne i32 %286, 10, !dbg !1659
  br i1 %287, label %288, label %289, !dbg !1650

; <label>:288                                     ; preds = %282, %263, %247
  br label %2071, !dbg !1660

; <label>:289                                     ; preds = %282, %273
  %290 = load i32* %slen, align 4, !dbg !1662
  %291 = add nsw i32 %290, -1, !dbg !1662
  store i32 %291, i32* %slen, align 4, !dbg !1662
  %292 = load i32* %slen, align 4, !dbg !1663
  %293 = icmp ne i32 %292, 0, !dbg !1665
  br i1 %293, label %294, label %324, !dbg !1665

; <label>:294                                     ; preds = %289
  %295 = load %struct.sv** %check, align 8, !dbg !1666
  %296 = getelementptr inbounds %struct.sv* %295, i32 0, i32 0, !dbg !1666
  %297 = load i8** %296, align 8, !dbg !1666
  %298 = bitcast i8* %297 to %struct.xpv*, !dbg !1666
  %299 = getelementptr inbounds %struct.xpv* %298, i32 0, i32 0, !dbg !1666
  %300 = load i8** %299, align 8, !dbg !1666
  %301 = load i8* %300, align 1, !dbg !1668
  %302 = sext i8 %301 to i32, !dbg !1668
  %303 = load i8** %s, align 8, !dbg !1669
  %304 = load i8* %303, align 1, !dbg !1670
  %305 = sext i8 %304 to i32, !dbg !1670
  %306 = icmp ne i32 %302, %305, !dbg !1668
  br i1 %306, label %322, label %307, !dbg !1665

; <label>:307                                     ; preds = %294
  %308 = load i32* %slen, align 4, !dbg !1671
  %309 = icmp sgt i32 %308, 1, !dbg !1671
  br i1 %309, label %310, label %324, !dbg !1665

; <label>:310                                     ; preds = %307
  %311 = load %struct.sv** %check, align 8, !dbg !1672
  %312 = getelementptr inbounds %struct.sv* %311, i32 0, i32 0, !dbg !1672
  %313 = load i8** %312, align 8, !dbg !1672
  %314 = bitcast i8* %313 to %struct.xpv*, !dbg !1672
  %315 = getelementptr inbounds %struct.xpv* %314, i32 0, i32 0, !dbg !1672
  %316 = load i8** %315, align 8, !dbg !1672
  %317 = load i8** %s, align 8, !dbg !1672
  %318 = load i32* %slen, align 4, !dbg !1672
  %319 = sext i32 %318 to i64, !dbg !1672
  %320 = call i32 @memcmp(i8* %316, i8* %317, i64 %319), !dbg !1672
  %321 = icmp ne i32 %320, 0, !dbg !1665
  br i1 %321, label %322, label %324, !dbg !1665

; <label>:322                                     ; preds = %310, %294
  br label %323, !dbg !1673

; <label>:323                                     ; preds = %359, %322
  br label %2071, !dbg !1674

; <label>:324                                     ; preds = %310, %307, %289
  br label %361, !dbg !1676

; <label>:325                                     ; preds = %240
  %326 = load %struct.sv** %check, align 8, !dbg !1677
  %327 = getelementptr inbounds %struct.sv* %326, i32 0, i32 0, !dbg !1677
  %328 = load i8** %327, align 8, !dbg !1677
  %329 = bitcast i8* %328 to %struct.xpv*, !dbg !1677
  %330 = getelementptr inbounds %struct.xpv* %329, i32 0, i32 0, !dbg !1677
  %331 = load i8** %330, align 8, !dbg !1677
  %332 = load i8* %331, align 1, !dbg !1679
  %333 = sext i8 %332 to i32, !dbg !1679
  %334 = load i8** %s, align 8, !dbg !1680
  %335 = load i8* %334, align 1, !dbg !1681
  %336 = sext i8 %335 to i32, !dbg !1681
  %337 = icmp ne i32 %333, %336, !dbg !1679
  br i1 %337, label %359, label %338, !dbg !1682

; <label>:338                                     ; preds = %325
  %339 = load %struct.sv** %check, align 8, !dbg !1683
  %340 = getelementptr inbounds %struct.sv* %339, i32 0, i32 0, !dbg !1683
  %341 = load i8** %340, align 8, !dbg !1683
  %342 = bitcast i8* %341 to %struct.xpv*, !dbg !1683
  %343 = getelementptr inbounds %struct.xpv* %342, i32 0, i32 1, !dbg !1683
  %344 = load i64* %343, align 8, !dbg !1683
  %345 = trunc i64 %344 to i32, !dbg !1683
  store i32 %345, i32* %slen, align 4, !dbg !1684
  %346 = icmp sgt i32 %345, 1, !dbg !1685
  br i1 %346, label %347, label %360, !dbg !1682

; <label>:347                                     ; preds = %338
  %348 = load %struct.sv** %check, align 8, !dbg !1686
  %349 = getelementptr inbounds %struct.sv* %348, i32 0, i32 0, !dbg !1686
  %350 = load i8** %349, align 8, !dbg !1686
  %351 = bitcast i8* %350 to %struct.xpv*, !dbg !1686
  %352 = getelementptr inbounds %struct.xpv* %351, i32 0, i32 0, !dbg !1686
  %353 = load i8** %352, align 8, !dbg !1686
  %354 = load i8** %s, align 8, !dbg !1686
  %355 = load i32* %slen, align 4, !dbg !1686
  %356 = sext i32 %355 to i64, !dbg !1686
  %357 = call i32 @memcmp(i8* %353, i8* %354, i64 %356), !dbg !1686
  %358 = icmp ne i32 %357, 0, !dbg !1682
  br i1 %358, label %359, label %360, !dbg !1682

; <label>:359                                     ; preds = %347, %325
  br label %323, !dbg !1687

; <label>:360                                     ; preds = %347, %338
  br label %361

; <label>:361                                     ; preds = %360, %324
  br label %1529, !dbg !1688

; <label>:362                                     ; preds = %206, %190
  br label %363, !dbg !1689

; <label>:363                                     ; preds = %362, %164
  %364 = load i8** %4, align 8, !dbg !1690
  store i8* %364, i8** %s, align 8, !dbg !1691
  %365 = load %struct.regexp** %2, align 8, !dbg !1692
  %366 = getelementptr inbounds %struct.regexp* %365, i32 0, i32 3, !dbg !1692
  %367 = load %struct.reg_substr_data** %366, align 8, !dbg !1692
  %368 = getelementptr inbounds %struct.reg_substr_data* %367, i32 0, i32 0, !dbg !1692
  %369 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %368, i32 0, i64 2, !dbg !1692
  %370 = getelementptr inbounds %struct.reg_substr_datum* %369, i32 0, i32 0, !dbg !1692
  %371 = load i32* %370, align 4, !dbg !1692
  store i32 %371, i32* %start_shift, align 4, !dbg !1693
  %372 = load %struct.regexp** %2, align 8, !dbg !1694
  %373 = getelementptr inbounds %struct.regexp* %372, i32 0, i32 10, !dbg !1694
  %374 = load i32* %373, align 4, !dbg !1694
  %375 = load i32* %start_shift, align 4, !dbg !1695
  %376 = sub nsw i32 %374, %375, !dbg !1694
  %377 = sext i32 %376 to i64, !dbg !1694
  %378 = load i32* %do_utf8, align 4, !dbg !1696
  %379 = icmp ne i32 %378, 0, !dbg !1696
  br i1 %379, label %380, label %383, !dbg !1696

; <label>:380                                     ; preds = %363
  %381 = load %struct.sv** %check, align 8, !dbg !1697
  %382 = call i64 @Perl_sv_len_utf8(%struct.sv* %381), !dbg !1697
  br label %390, !dbg !1697

; <label>:383                                     ; preds = %363
  %384 = load %struct.sv** %check, align 8, !dbg !1698
  %385 = getelementptr inbounds %struct.sv* %384, i32 0, i32 0, !dbg !1698
  %386 = load i8** %385, align 8, !dbg !1698
  %387 = bitcast i8* %386 to %struct.xpv*, !dbg !1698
  %388 = getelementptr inbounds %struct.xpv* %387, i32 0, i32 1, !dbg !1698
  %389 = load i64* %388, align 8, !dbg !1698
  br label %390, !dbg !1698

; <label>:390                                     ; preds = %383, %380
  %391 = phi i64 [ %382, %380 ], [ %389, %383 ], !dbg !1696
  %392 = sub i64 %377, %391, !dbg !1694
  %393 = load %struct.sv** %check, align 8, !dbg !1700
  %394 = getelementptr inbounds %struct.sv* %393, i32 0, i32 2, !dbg !1700
  %395 = load i32* %394, align 4, !dbg !1700
  %396 = and i32 %395, 1073741824, !dbg !1700
  %397 = icmp ne i32 %396, 0, !dbg !1700
  %398 = zext i1 %397 to i32, !dbg !1700
  %399 = sext i32 %398 to i64, !dbg !1701
  %400 = add i64 %392, %399, !dbg !1694
  %401 = trunc i64 %400 to i32, !dbg !1694
  store i32 %401, i32* %end_shift, align 4, !dbg !1702
  %402 = load i32* %ml_anch, align 4, !dbg !1703
  %403 = icmp ne i32 %402, 0, !dbg !1705
  br i1 %403, label %462, label %404, !dbg !1705

; <label>:404                                     ; preds = %390
  call void @llvm.dbg.declare(metadata i32* %end, metadata !1706, metadata !566), !dbg !1708
  %405 = load %struct.regexp** %2, align 8, !dbg !1709
  %406 = getelementptr inbounds %struct.regexp* %405, i32 0, i32 3, !dbg !1709
  %407 = load %struct.reg_substr_data** %406, align 8, !dbg !1709
  %408 = getelementptr inbounds %struct.reg_substr_data* %407, i32 0, i32 0, !dbg !1709
  %409 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %408, i32 0, i64 2, !dbg !1709
  %410 = getelementptr inbounds %struct.reg_substr_datum* %409, i32 0, i32 1, !dbg !1709
  %411 = load i32* %410, align 4, !dbg !1709
  %412 = sext i32 %411 to i64, !dbg !1709
  %413 = load i32* %do_utf8, align 4, !dbg !1710
  %414 = icmp ne i32 %413, 0, !dbg !1710
  br i1 %414, label %415, label %418, !dbg !1710

; <label>:415                                     ; preds = %404
  %416 = load %struct.sv** %check, align 8, !dbg !1711
  %417 = call i64 @Perl_sv_len_utf8(%struct.sv* %416), !dbg !1711
  br label %425, !dbg !1711

; <label>:418                                     ; preds = %404
  %419 = load %struct.sv** %check, align 8, !dbg !1713
  %420 = getelementptr inbounds %struct.sv* %419, i32 0, i32 0, !dbg !1713
  %421 = load i8** %420, align 8, !dbg !1713
  %422 = bitcast i8* %421 to %struct.xpv*, !dbg !1713
  %423 = getelementptr inbounds %struct.xpv* %422, i32 0, i32 1, !dbg !1713
  %424 = load i64* %423, align 8, !dbg !1713
  br label %425, !dbg !1713

; <label>:425                                     ; preds = %418, %415
  %426 = phi i64 [ %417, %415 ], [ %424, %418 ], !dbg !1710
  %427 = add i64 %412, %426, !dbg !1715
  %428 = load %struct.sv** %check, align 8, !dbg !1718
  %429 = getelementptr inbounds %struct.sv* %428, i32 0, i32 2, !dbg !1718
  %430 = load i32* %429, align 4, !dbg !1718
  %431 = and i32 %430, 1073741824, !dbg !1718
  %432 = icmp ne i32 %431, 0, !dbg !1718
  %433 = zext i1 %432 to i32, !dbg !1718
  %434 = sext i32 %433 to i64, !dbg !1719
  %435 = sub i64 %427, %434, !dbg !1709
  %436 = trunc i64 %435 to i32, !dbg !1709
  store i32 %436, i32* %end, align 4, !dbg !1708
  call void @llvm.dbg.declare(metadata i32* %eshift, metadata !1720, metadata !566), !dbg !1721
  %437 = load i8* @PL_reg_match_utf8, align 1, !dbg !1722
  %438 = sext i8 %437 to i32, !dbg !1722
  %439 = icmp ne i32 %438, 0, !dbg !1722
  br i1 %439, label %440, label %444, !dbg !1722

; <label>:440                                     ; preds = %425
  %441 = load i8** %5, align 8, !dbg !1723
  %442 = load i8** %s, align 8, !dbg !1723
  %443 = call i64 @Perl_utf8_distance(i8* %441, i8* %442), !dbg !1723
  br label %450, !dbg !1723

; <label>:444                                     ; preds = %425
  %445 = load i8** %5, align 8, !dbg !1724
  %446 = load i8** %s, align 8, !dbg !1724
  %447 = ptrtoint i8* %445 to i64, !dbg !1724
  %448 = ptrtoint i8* %446 to i64, !dbg !1724
  %449 = sub i64 %447, %448, !dbg !1724
  br label %450, !dbg !1724

; <label>:450                                     ; preds = %444, %440
  %451 = phi i64 [ %443, %440 ], [ %449, %444 ], !dbg !1722
  %452 = load i32* %end, align 4, !dbg !1725
  %453 = sext i32 %452 to i64, !dbg !1725
  %454 = sub nsw i64 %451, %453, !dbg !1722
  %455 = trunc i64 %454 to i32, !dbg !1722
  store i32 %455, i32* %eshift, align 4, !dbg !1721
  %456 = load i32* %end_shift, align 4, !dbg !1726
  %457 = load i32* %eshift, align 4, !dbg !1728
  %458 = icmp slt i32 %456, %457, !dbg !1726
  br i1 %458, label %459, label %461, !dbg !1729

; <label>:459                                     ; preds = %450
  %460 = load i32* %eshift, align 4, !dbg !1730
  store i32 %460, i32* %end_shift, align 4, !dbg !1731
  br label %461, !dbg !1731

; <label>:461                                     ; preds = %459, %450
  br label %462, !dbg !1732

; <label>:462                                     ; preds = %461, %390
  br label %502, !dbg !1733

; <label>:463                                     ; preds = %140
  store i32 0, i32* %ml_anch, align 4, !dbg !1734
  %464 = load i8** %4, align 8, !dbg !1736
  store i8* %464, i8** %s, align 8, !dbg !1737
  %465 = load %struct.regexp** %2, align 8, !dbg !1738
  %466 = getelementptr inbounds %struct.regexp* %465, i32 0, i32 3, !dbg !1738
  %467 = load %struct.reg_substr_data** %466, align 8, !dbg !1738
  %468 = getelementptr inbounds %struct.reg_substr_data* %467, i32 0, i32 0, !dbg !1738
  %469 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %468, i32 0, i64 2, !dbg !1738
  %470 = getelementptr inbounds %struct.reg_substr_datum* %469, i32 0, i32 0, !dbg !1738
  %471 = load i32* %470, align 4, !dbg !1738
  store i32 %471, i32* %start_shift, align 4, !dbg !1739
  %472 = load %struct.regexp** %2, align 8, !dbg !1740
  %473 = getelementptr inbounds %struct.regexp* %472, i32 0, i32 10, !dbg !1740
  %474 = load i32* %473, align 4, !dbg !1740
  %475 = load i32* %start_shift, align 4, !dbg !1741
  %476 = sub nsw i32 %474, %475, !dbg !1740
  %477 = sext i32 %476 to i64, !dbg !1740
  %478 = load i32* %do_utf8, align 4, !dbg !1742
  %479 = icmp ne i32 %478, 0, !dbg !1742
  br i1 %479, label %480, label %483, !dbg !1742

; <label>:480                                     ; preds = %463
  %481 = load %struct.sv** %check, align 8, !dbg !1743
  %482 = call i64 @Perl_sv_len_utf8(%struct.sv* %481), !dbg !1743
  br label %490, !dbg !1743

; <label>:483                                     ; preds = %463
  %484 = load %struct.sv** %check, align 8, !dbg !1745
  %485 = getelementptr inbounds %struct.sv* %484, i32 0, i32 0, !dbg !1745
  %486 = load i8** %485, align 8, !dbg !1745
  %487 = bitcast i8* %486 to %struct.xpv*, !dbg !1745
  %488 = getelementptr inbounds %struct.xpv* %487, i32 0, i32 1, !dbg !1745
  %489 = load i64* %488, align 8, !dbg !1745
  br label %490, !dbg !1745

; <label>:490                                     ; preds = %483, %480
  %491 = phi i64 [ %482, %480 ], [ %489, %483 ], !dbg !1742
  %492 = sub i64 %477, %491, !dbg !1740
  %493 = load %struct.sv** %check, align 8, !dbg !1747
  %494 = getelementptr inbounds %struct.sv* %493, i32 0, i32 2, !dbg !1747
  %495 = load i32* %494, align 4, !dbg !1747
  %496 = and i32 %495, 1073741824, !dbg !1747
  %497 = icmp ne i32 %496, 0, !dbg !1747
  %498 = zext i1 %497 to i32, !dbg !1747
  %499 = sext i32 %498 to i64, !dbg !1748
  %500 = add i64 %492, %499, !dbg !1740
  %501 = trunc i64 %500 to i32, !dbg !1740
  store i32 %501, i32* %end_shift, align 4, !dbg !1749
  br label %502

; <label>:502                                     ; preds = %490, %462
  br label %503, !dbg !1750

; <label>:503                                     ; preds = %2007, %1460, %1334, %1060, %502
  %504 = load i32* %6, align 4, !dbg !1751
  %505 = and i32 %504, 4, !dbg !1751
  %506 = icmp ne i32 %505, 0, !dbg !1753
  br i1 %506, label %507, label %606, !dbg !1753

; <label>:507                                     ; preds = %503
  call void @llvm.dbg.declare(metadata i32* %p, metadata !1754, metadata !566), !dbg !1756
  store i32 -1, i32* %p, align 4, !dbg !1756
  call void @llvm.dbg.declare(metadata i32** %pp, metadata !1757, metadata !566), !dbg !1758
  %508 = load %struct.re_scream_pos_data_s** %7, align 8, !dbg !1759
  %509 = icmp ne %struct.re_scream_pos_data_s* %508, null, !dbg !1759
  br i1 %509, label %510, label %514, !dbg !1759

; <label>:510                                     ; preds = %507
  %511 = load %struct.re_scream_pos_data_s** %7, align 8, !dbg !1760
  %512 = getelementptr inbounds %struct.re_scream_pos_data_s* %511, i32 0, i32 1, !dbg !1760
  %513 = load i32** %512, align 8, !dbg !1760
  br label %515, !dbg !1759

; <label>:514                                     ; preds = %507
  br label %515, !dbg !1762

; <label>:515                                     ; preds = %514, %510
  %516 = phi i32* [ %513, %510 ], [ %p, %514 ], !dbg !1759
  store i32* %516, i32** %pp, align 8, !dbg !1764
  %517 = load %struct.sv** %check, align 8, !dbg !1767
  %518 = getelementptr inbounds %struct.sv* %517, i32 0, i32 0, !dbg !1767
  %519 = load i8** %518, align 8, !dbg !1767
  %520 = bitcast i8* %519 to %struct.xpvbm*, !dbg !1767
  %521 = getelementptr inbounds %struct.xpvbm* %520, i32 0, i32 9, !dbg !1767
  %522 = load i8* %521, align 1, !dbg !1767
  %523 = zext i8 %522 to i64, !dbg !1769
  %524 = load i32** @PL_screamfirst, align 8, !dbg !1769
  %525 = getelementptr inbounds i32* %524, i64 %523, !dbg !1769
  %526 = load i32* %525, align 4, !dbg !1769
  %527 = icmp sge i32 %526, 0, !dbg !1769
  br i1 %527, label %559, label %528, !dbg !1770

; <label>:528                                     ; preds = %515
  %529 = load %struct.sv** %check, align 8, !dbg !1771
  %530 = getelementptr inbounds %struct.sv* %529, i32 0, i32 0, !dbg !1771
  %531 = load i8** %530, align 8, !dbg !1771
  %532 = bitcast i8* %531 to %struct.xpvbm*, !dbg !1771
  %533 = getelementptr inbounds %struct.xpvbm* %532, i32 0, i32 9, !dbg !1771
  %534 = load i8* %533, align 1, !dbg !1771
  %535 = zext i8 %534 to i32, !dbg !1771
  %536 = icmp eq i32 %535, 10, !dbg !1771
  br i1 %536, label %537, label %574, !dbg !1770

; <label>:537                                     ; preds = %528
  %538 = load %struct.sv** %check, align 8, !dbg !1772
  %539 = getelementptr inbounds %struct.sv* %538, i32 0, i32 0, !dbg !1772
  %540 = load i8** %539, align 8, !dbg !1772
  %541 = bitcast i8* %540 to %struct.xpvbm*, !dbg !1772
  %542 = getelementptr inbounds %struct.xpvbm* %541, i32 0, i32 8, !dbg !1772
  %543 = load i16* %542, align 2, !dbg !1772
  %544 = zext i16 %543 to i64, !dbg !1772
  %545 = load %struct.sv** %check, align 8, !dbg !1773
  %546 = getelementptr inbounds %struct.sv* %545, i32 0, i32 0, !dbg !1773
  %547 = load i8** %546, align 8, !dbg !1773
  %548 = bitcast i8* %547 to %struct.xpv*, !dbg !1773
  %549 = getelementptr inbounds %struct.xpv* %548, i32 0, i32 1, !dbg !1773
  %550 = load i64* %549, align 8, !dbg !1773
  %551 = sub i64 %550, 1, !dbg !1773
  %552 = icmp eq i64 %544, %551, !dbg !1772
  br i1 %552, label %553, label %574, !dbg !1770

; <label>:553                                     ; preds = %537
  %554 = load %struct.sv** %check, align 8, !dbg !1774
  %555 = getelementptr inbounds %struct.sv* %554, i32 0, i32 2, !dbg !1774
  %556 = load i32* %555, align 4, !dbg !1774
  %557 = and i32 %556, 1073741824, !dbg !1774
  %558 = icmp ne i32 %557, 0, !dbg !1770
  br i1 %558, label %559, label %574, !dbg !1770

; <label>:559                                     ; preds = %553, %515
  %560 = load %struct.sv** %3, align 8, !dbg !1775
  %561 = load %struct.sv** %check, align 8, !dbg !1776
  %562 = load i32* %start_shift, align 4, !dbg !1777
  %563 = sext i32 %562 to i64, !dbg !1777
  %564 = load i8** %s, align 8, !dbg !1778
  %565 = load i8** %strbeg, align 8, !dbg !1779
  %566 = ptrtoint i8* %564 to i64, !dbg !1778
  %567 = ptrtoint i8* %565 to i64, !dbg !1778
  %568 = sub i64 %566, %567, !dbg !1778
  %569 = add nsw i64 %563, %568, !dbg !1777
  %570 = trunc i64 %569 to i32, !dbg !1777
  %571 = load i32* %end_shift, align 4, !dbg !1780
  %572 = load i32** %pp, align 8, !dbg !1781
  %573 = call i8* @Perl_screaminstr(%struct.sv* %560, %struct.sv* %561, i32 %570, i32 %571, i32* %572, i32 0), !dbg !1782
  store i8* %573, i8** %s, align 8, !dbg !1783
  br label %575, !dbg !1783

; <label>:574                                     ; preds = %553, %537, %528
  br label %2071, !dbg !1784

; <label>:575                                     ; preds = %559
  %576 = load i8** %s, align 8, !dbg !1785
  %577 = icmp ne i8* %576, null, !dbg !1787
  br i1 %577, label %578, label %597, !dbg !1787

; <label>:578                                     ; preds = %575
  %579 = load %struct.regexp** %2, align 8, !dbg !1788
  %580 = getelementptr inbounds %struct.regexp* %579, i32 0, i32 15, !dbg !1788
  %581 = load i32* %580, align 4, !dbg !1788
  %582 = and i32 %581, 262144, !dbg !1788
  %583 = icmp ne i32 %582, 0, !dbg !1787
  br i1 %583, label %584, label %597, !dbg !1787

; <label>:584                                     ; preds = %578
  %585 = load i8** %strbeg, align 8, !dbg !1790
  %586 = load i8** %s, align 8, !dbg !1791
  %587 = load %struct.sv** %3, align 8, !dbg !1792
  %588 = getelementptr inbounds %struct.sv* %587, i32 0, i32 0, !dbg !1792
  %589 = load i8** %588, align 8, !dbg !1792
  %590 = bitcast i8* %589 to %struct.xpv*, !dbg !1792
  %591 = getelementptr inbounds %struct.xpv* %590, i32 0, i32 0, !dbg !1792
  %592 = load i8** %591, align 8, !dbg !1792
  %593 = ptrtoint i8* %586 to i64, !dbg !1791
  %594 = ptrtoint i8* %592 to i64, !dbg !1791
  %595 = sub i64 %593, %594, !dbg !1791
  %596 = getelementptr inbounds i8* %585, i64 %595, !dbg !1790
  store i8* %596, i8** %s, align 8, !dbg !1793
  br label %597, !dbg !1793

; <label>:597                                     ; preds = %584, %578, %575
  %598 = load %struct.re_scream_pos_data_s** %7, align 8, !dbg !1794
  %599 = icmp ne %struct.re_scream_pos_data_s* %598, null, !dbg !1796
  br i1 %599, label %600, label %605, !dbg !1796

; <label>:600                                     ; preds = %597
  %601 = load i8** %s, align 8, !dbg !1797
  %602 = load %struct.re_scream_pos_data_s** %7, align 8, !dbg !1798
  %603 = getelementptr inbounds %struct.re_scream_pos_data_s* %602, i32 0, i32 0, !dbg !1798
  %604 = load i8*** %603, align 8, !dbg !1798
  store i8* %601, i8** %604, align 8, !dbg !1799
  br label %605, !dbg !1799

; <label>:605                                     ; preds = %600, %597
  br label %670, !dbg !1800

; <label>:606                                     ; preds = %503
  %607 = load %struct.regexp** %2, align 8, !dbg !1801
  %608 = getelementptr inbounds %struct.regexp* %607, i32 0, i32 15, !dbg !1801
  %609 = load i32* %608, align 4, !dbg !1801
  %610 = and i32 %609, 2048, !dbg !1801
  %611 = icmp ne i32 %610, 0, !dbg !1803
  br i1 %611, label %612, label %627, !dbg !1803

; <label>:612                                     ; preds = %606
  %613 = load i8** %s, align 8, !dbg !1804
  %614 = load i32* %start_shift, align 4, !dbg !1805
  %615 = sext i32 %614 to i64, !dbg !1804
  %616 = getelementptr inbounds i8* %613, i64 %615, !dbg !1804
  %617 = load i8** %5, align 8, !dbg !1806
  %618 = load i32* %end_shift, align 4, !dbg !1807
  %619 = sext i32 %618 to i64, !dbg !1806
  %620 = sub i64 0, %619, !dbg !1806
  %621 = getelementptr inbounds i8* %617, i64 %620, !dbg !1806
  %622 = load %struct.sv** %check, align 8, !dbg !1808
  %623 = load i32* @PL_multiline, align 4, !dbg !1809
  %624 = icmp ne i32 %623, 0, !dbg !1809
  %625 = select i1 %624, i32 1, i32 0, !dbg !1809
  %626 = call i8* @Perl_fbm_instr(i8* %616, i8* %621, %struct.sv* %622, i32 %625), !dbg !1810
  store i8* %626, i8** %s, align 8, !dbg !1811
  br label %669, !dbg !1811

; <label>:627                                     ; preds = %606
  %628 = load i8* @PL_reg_match_utf8, align 1, !dbg !1812
  %629 = sext i8 %628 to i32, !dbg !1812
  %630 = icmp ne i32 %629, 0, !dbg !1812
  br i1 %630, label %631, label %638, !dbg !1812

; <label>:631                                     ; preds = %627
  %632 = load i8** %s, align 8, !dbg !1813
  %633 = load i32* %start_shift, align 4, !dbg !1813
  %634 = load i8** %5, align 8, !dbg !1813
  %635 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %632, i32 %633, i8* %634), !dbg !1813
  %636 = sext i32 %635 to i64, !dbg !1813
  %637 = inttoptr i64 %636 to i8*, !dbg !1813
  br label %643, !dbg !1813

; <label>:638                                     ; preds = %627
  %639 = load i8** %s, align 8, !dbg !1815
  %640 = load i32* %start_shift, align 4, !dbg !1815
  %641 = sext i32 %640 to i64, !dbg !1815
  %642 = getelementptr inbounds i8* %639, i64 %641, !dbg !1815
  br label %643, !dbg !1815

; <label>:643                                     ; preds = %638, %631
  %644 = phi i8* [ %637, %631 ], [ %642, %638 ], !dbg !1812
  %645 = load i8* @PL_reg_match_utf8, align 1, !dbg !1817
  %646 = sext i8 %645 to i32, !dbg !1817
  %647 = icmp ne i32 %646, 0, !dbg !1817
  br i1 %647, label %648, label %656, !dbg !1817

; <label>:648                                     ; preds = %643
  %649 = load i8** %5, align 8, !dbg !1818
  %650 = load i32* %end_shift, align 4, !dbg !1818
  %651 = sub nsw i32 0, %650, !dbg !1818
  %652 = load i8** %strbeg, align 8, !dbg !1818
  %653 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %649, i32 %651, i8* %652), !dbg !1818
  %654 = sext i32 %653 to i64, !dbg !1818
  %655 = inttoptr i64 %654 to i8*, !dbg !1818
  br label %662, !dbg !1818

; <label>:656                                     ; preds = %643
  %657 = load i8** %5, align 8, !dbg !1819
  %658 = load i32* %end_shift, align 4, !dbg !1819
  %659 = sub nsw i32 0, %658, !dbg !1819
  %660 = sext i32 %659 to i64, !dbg !1819
  %661 = getelementptr inbounds i8* %657, i64 %660, !dbg !1819
  br label %662, !dbg !1819

; <label>:662                                     ; preds = %656, %648
  %663 = phi i8* [ %655, %648 ], [ %661, %656 ], !dbg !1817
  %664 = load %struct.sv** %check, align 8, !dbg !1820
  %665 = load i32* @PL_multiline, align 4, !dbg !1821
  %666 = icmp ne i32 %665, 0, !dbg !1821
  %667 = select i1 %666, i32 1, i32 0, !dbg !1821
  %668 = call i8* @Perl_fbm_instr(i8* %644, i8* %663, %struct.sv* %664, i32 %667), !dbg !1822
  store i8* %668, i8** %s, align 8, !dbg !1823
  br label %669

; <label>:669                                     ; preds = %662, %612
  br label %670

; <label>:670                                     ; preds = %669, %605
  %671 = load i8** %s, align 8, !dbg !1824
  %672 = icmp ne i8* %671, null, !dbg !1826
  br i1 %672, label %674, label %673, !dbg !1826

; <label>:673                                     ; preds = %670
  br label %2071, !dbg !1827

; <label>:674                                     ; preds = %670
  %675 = load i8** %s, align 8, !dbg !1828
  store i8* %675, i8** %check_at, align 8, !dbg !1829
  %676 = load i32* %do_utf8, align 4, !dbg !1830
  %677 = icmp ne i32 %676, 0, !dbg !1832
  br i1 %677, label %678, label %696, !dbg !1832

; <label>:678                                     ; preds = %674
  %679 = load %struct.regexp** %2, align 8, !dbg !1833
  %680 = getelementptr inbounds %struct.regexp* %679, i32 0, i32 3, !dbg !1833
  %681 = load %struct.reg_substr_data** %680, align 8, !dbg !1833
  %682 = getelementptr inbounds %struct.reg_substr_data* %681, i32 0, i32 0, !dbg !1833
  %683 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %682, i32 0, i64 1, !dbg !1833
  %684 = getelementptr inbounds %struct.reg_substr_datum* %683, i32 0, i32 3, !dbg !1833
  %685 = load %struct.sv** %684, align 8, !dbg !1833
  %686 = icmp ne %struct.sv* %685, null, !dbg !1832
  br i1 %686, label %687, label %1344, !dbg !1832

; <label>:687                                     ; preds = %678
  %688 = load %struct.regexp** %2, align 8, !dbg !1835
  %689 = getelementptr inbounds %struct.regexp* %688, i32 0, i32 3, !dbg !1835
  %690 = load %struct.reg_substr_data** %689, align 8, !dbg !1835
  %691 = getelementptr inbounds %struct.reg_substr_data* %690, i32 0, i32 0, !dbg !1835
  %692 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %691, i32 0, i64 0, !dbg !1835
  %693 = getelementptr inbounds %struct.reg_substr_datum* %692, i32 0, i32 3, !dbg !1835
  %694 = load %struct.sv** %693, align 8, !dbg !1835
  %695 = icmp ne %struct.sv* %694, null, !dbg !1832
  br i1 %695, label %714, label %1344, !dbg !1832

; <label>:696                                     ; preds = %674
  %697 = load %struct.regexp** %2, align 8, !dbg !1837
  %698 = getelementptr inbounds %struct.regexp* %697, i32 0, i32 3, !dbg !1837
  %699 = load %struct.reg_substr_data** %698, align 8, !dbg !1837
  %700 = getelementptr inbounds %struct.reg_substr_data* %699, i32 0, i32 0, !dbg !1837
  %701 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %700, i32 0, i64 1, !dbg !1837
  %702 = getelementptr inbounds %struct.reg_substr_datum* %701, i32 0, i32 2, !dbg !1837
  %703 = load %struct.sv** %702, align 8, !dbg !1837
  %704 = icmp ne %struct.sv* %703, null, !dbg !1832
  br i1 %704, label %705, label %1344, !dbg !1832

; <label>:705                                     ; preds = %696
  %706 = load %struct.regexp** %2, align 8, !dbg !1839
  %707 = getelementptr inbounds %struct.regexp* %706, i32 0, i32 3, !dbg !1839
  %708 = load %struct.reg_substr_data** %707, align 8, !dbg !1839
  %709 = getelementptr inbounds %struct.reg_substr_data* %708, i32 0, i32 0, !dbg !1839
  %710 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %709, i32 0, i64 0, !dbg !1839
  %711 = getelementptr inbounds %struct.reg_substr_datum* %710, i32 0, i32 2, !dbg !1839
  %712 = load %struct.sv** %711, align 8, !dbg !1839
  %713 = icmp ne %struct.sv* %712, null, !dbg !1832
  br i1 %713, label %714, label %1344, !dbg !1832

; <label>:714                                     ; preds = %705, %687
  %715 = load i8** %other_last, align 8, !dbg !1841
  %716 = icmp ne i8* %715, null, !dbg !1844
  br i1 %716, label %719, label %717, !dbg !1844

; <label>:717                                     ; preds = %714
  %718 = load i8** %4, align 8, !dbg !1845
  store i8* %718, i8** %other_last, align 8, !dbg !1846
  br label %719, !dbg !1846

; <label>:719                                     ; preds = %717, %714
  %720 = load %struct.sv** %check, align 8, !dbg !1847
  %721 = load i32* %do_utf8, align 4, !dbg !1849
  %722 = icmp ne i32 %721, 0, !dbg !1849
  br i1 %722, label %723, label %731, !dbg !1849

; <label>:723                                     ; preds = %719
  %724 = load %struct.regexp** %2, align 8, !dbg !1850
  %725 = getelementptr inbounds %struct.regexp* %724, i32 0, i32 3, !dbg !1850
  %726 = load %struct.reg_substr_data** %725, align 8, !dbg !1850
  %727 = getelementptr inbounds %struct.reg_substr_data* %726, i32 0, i32 0, !dbg !1850
  %728 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %727, i32 0, i64 1, !dbg !1850
  %729 = getelementptr inbounds %struct.reg_substr_datum* %728, i32 0, i32 3, !dbg !1850
  %730 = load %struct.sv** %729, align 8, !dbg !1850
  br label %739, !dbg !1849

; <label>:731                                     ; preds = %719
  %732 = load %struct.regexp** %2, align 8, !dbg !1852
  %733 = getelementptr inbounds %struct.regexp* %732, i32 0, i32 3, !dbg !1852
  %734 = load %struct.reg_substr_data** %733, align 8, !dbg !1852
  %735 = getelementptr inbounds %struct.reg_substr_data* %734, i32 0, i32 0, !dbg !1852
  %736 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %735, i32 0, i64 1, !dbg !1852
  %737 = getelementptr inbounds %struct.reg_substr_datum* %736, i32 0, i32 2, !dbg !1852
  %738 = load %struct.sv** %737, align 8, !dbg !1852
  br label %739, !dbg !1849

; <label>:739                                     ; preds = %731, %723
  %740 = phi %struct.sv* [ %730, %723 ], [ %738, %731 ], !dbg !1849
  %741 = icmp eq %struct.sv* %720, %740, !dbg !1854
  br i1 %741, label %742, label %1114, !dbg !1857

; <label>:742                                     ; preds = %739
  br label %743, !dbg !1858

; <label>:743                                     ; preds = %2021, %1454, %742
  call void @llvm.dbg.declare(metadata i8** %last, metadata !1860, metadata !566), !dbg !1863
  %744 = load i8* @PL_reg_match_utf8, align 1, !dbg !1864
  %745 = sext i8 %744 to i32, !dbg !1864
  %746 = icmp ne i32 %745, 0, !dbg !1864
  br i1 %746, label %747, label %755, !dbg !1864

; <label>:747                                     ; preds = %743
  %748 = load i8** %s, align 8, !dbg !1865
  %749 = load i32* %start_shift, align 4, !dbg !1865
  %750 = sub nsw i32 0, %749, !dbg !1865
  %751 = load i8** %strbeg, align 8, !dbg !1865
  %752 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %748, i32 %750, i8* %751), !dbg !1865
  %753 = sext i32 %752 to i64, !dbg !1865
  %754 = inttoptr i64 %753 to i8*, !dbg !1865
  br label %761, !dbg !1865

; <label>:755                                     ; preds = %743
  %756 = load i8** %s, align 8, !dbg !1867
  %757 = load i32* %start_shift, align 4, !dbg !1867
  %758 = sub nsw i32 0, %757, !dbg !1867
  %759 = sext i32 %758 to i64, !dbg !1867
  %760 = getelementptr inbounds i8* %756, i64 %759, !dbg !1867
  br label %761, !dbg !1867

; <label>:761                                     ; preds = %755, %747
  %762 = phi i8* [ %754, %747 ], [ %760, %755 ], !dbg !1864
  store i8* %762, i8** %last, align 8, !dbg !1869
  call void @llvm.dbg.declare(metadata i8** %last1, metadata !1872, metadata !566), !dbg !1873
  call void @llvm.dbg.declare(metadata i8** %last2, metadata !1874, metadata !566), !dbg !1875
  call void @llvm.dbg.declare(metadata i8** %s1, metadata !1876, metadata !566), !dbg !1877
  %763 = load i8** %s, align 8, !dbg !1878
  store i8* %763, i8** %s1, align 8, !dbg !1877
  call void @llvm.dbg.declare(metadata %struct.sv** %must, metadata !1879, metadata !566), !dbg !1880
  %764 = load i8** %s, align 8, !dbg !1881
  %765 = load %struct.regexp** %2, align 8, !dbg !1882
  %766 = getelementptr inbounds %struct.regexp* %765, i32 0, i32 3, !dbg !1882
  %767 = load %struct.reg_substr_data** %766, align 8, !dbg !1882
  %768 = getelementptr inbounds %struct.reg_substr_data* %767, i32 0, i32 0, !dbg !1882
  %769 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %768, i32 0, i64 2, !dbg !1882
  %770 = getelementptr inbounds %struct.reg_substr_datum* %769, i32 0, i32 1, !dbg !1882
  %771 = load i32* %770, align 4, !dbg !1882
  %772 = sext i32 %771 to i64, !dbg !1881
  %773 = sub i64 0, %772, !dbg !1881
  %774 = getelementptr inbounds i8* %764, i64 %773, !dbg !1881
  store i8* %774, i8** %t, align 8, !dbg !1883
  %775 = load i8** %s, align 8, !dbg !1884
  %776 = load i8** %4, align 8, !dbg !1886
  %777 = ptrtoint i8* %775 to i64, !dbg !1884
  %778 = ptrtoint i8* %776 to i64, !dbg !1884
  %779 = sub i64 %777, %778, !dbg !1884
  %780 = load %struct.regexp** %2, align 8, !dbg !1887
  %781 = getelementptr inbounds %struct.regexp* %780, i32 0, i32 3, !dbg !1887
  %782 = load %struct.reg_substr_data** %781, align 8, !dbg !1887
  %783 = getelementptr inbounds %struct.reg_substr_data* %782, i32 0, i32 0, !dbg !1887
  %784 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %783, i32 0, i64 2, !dbg !1887
  %785 = getelementptr inbounds %struct.reg_substr_datum* %784, i32 0, i32 1, !dbg !1887
  %786 = load i32* %785, align 4, !dbg !1887
  %787 = sext i32 %786 to i64, !dbg !1887
  %788 = icmp sgt i64 %779, %787, !dbg !1884
  br i1 %788, label %789, label %812, !dbg !1888

; <label>:789                                     ; preds = %761
  %790 = load i32* %do_utf8, align 4, !dbg !1889
  %791 = icmp ne i32 %790, 0, !dbg !1888
  br i1 %791, label %792, label %811, !dbg !1888

; <label>:792                                     ; preds = %789
  %793 = load i8** %s, align 8, !dbg !1890
  %794 = load %struct.regexp** %2, align 8, !dbg !1890
  %795 = getelementptr inbounds %struct.regexp* %794, i32 0, i32 3, !dbg !1890
  %796 = load %struct.reg_substr_data** %795, align 8, !dbg !1890
  %797 = getelementptr inbounds %struct.reg_substr_data* %796, i32 0, i32 0, !dbg !1890
  %798 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %797, i32 0, i64 2, !dbg !1890
  %799 = getelementptr inbounds %struct.reg_substr_datum* %798, i32 0, i32 1, !dbg !1890
  %800 = load i32* %799, align 4, !dbg !1890
  %801 = sub nsw i32 0, %800, !dbg !1890
  %802 = load i8** %4, align 8, !dbg !1890
  %803 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghopmaybe3 to i32 (i8*, i32, i8*, ...)*)(i8* %793, i32 %801, i8* %802), !dbg !1890
  %804 = sext i32 %803 to i64, !dbg !1890
  %805 = inttoptr i64 %804 to i8*, !dbg !1890
  store i8* %805, i8** %t, align 8, !dbg !1891
  %806 = icmp ne i8* %805, null, !dbg !1888
  br i1 %806, label %807, label %812, !dbg !1888

; <label>:807                                     ; preds = %792
  %808 = load i8** %t, align 8, !dbg !1892
  %809 = load i8** %4, align 8, !dbg !1893
  %810 = icmp ugt i8* %808, %809, !dbg !1892
  br i1 %810, label %811, label %812, !dbg !1888

; <label>:811                                     ; preds = %807, %789
  br label %814, !dbg !1894

; <label>:812                                     ; preds = %807, %792, %761
  %813 = load i8** %4, align 8, !dbg !1896
  store i8* %813, i8** %t, align 8, !dbg !1897
  br label %814

; <label>:814                                     ; preds = %812, %811
  %815 = load i8* @PL_reg_match_utf8, align 1, !dbg !1898
  %816 = sext i8 %815 to i32, !dbg !1898
  %817 = icmp ne i32 %816, 0, !dbg !1898
  br i1 %817, label %818, label %831, !dbg !1898

; <label>:818                                     ; preds = %814
  %819 = load i8** %t, align 8, !dbg !1899
  %820 = load %struct.regexp** %2, align 8, !dbg !1899
  %821 = getelementptr inbounds %struct.regexp* %820, i32 0, i32 3, !dbg !1899
  %822 = load %struct.reg_substr_data** %821, align 8, !dbg !1899
  %823 = getelementptr inbounds %struct.reg_substr_data* %822, i32 0, i32 0, !dbg !1899
  %824 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %823, i32 0, i64 0, !dbg !1899
  %825 = getelementptr inbounds %struct.reg_substr_datum* %824, i32 0, i32 0, !dbg !1899
  %826 = load i32* %825, align 4, !dbg !1899
  %827 = load i8** %5, align 8, !dbg !1899
  %828 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %819, i32 %826, i8* %827), !dbg !1899
  %829 = sext i32 %828 to i64, !dbg !1899
  %830 = inttoptr i64 %829 to i8*, !dbg !1899
  br label %842, !dbg !1899

; <label>:831                                     ; preds = %814
  %832 = load i8** %t, align 8, !dbg !1900
  %833 = load %struct.regexp** %2, align 8, !dbg !1900
  %834 = getelementptr inbounds %struct.regexp* %833, i32 0, i32 3, !dbg !1900
  %835 = load %struct.reg_substr_data** %834, align 8, !dbg !1900
  %836 = getelementptr inbounds %struct.reg_substr_data* %835, i32 0, i32 0, !dbg !1900
  %837 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %836, i32 0, i64 0, !dbg !1900
  %838 = getelementptr inbounds %struct.reg_substr_datum* %837, i32 0, i32 0, !dbg !1900
  %839 = load i32* %838, align 4, !dbg !1900
  %840 = sext i32 %839 to i64, !dbg !1900
  %841 = getelementptr inbounds i8* %832, i64 %840, !dbg !1900
  br label %842, !dbg !1900

; <label>:842                                     ; preds = %831, %818
  %843 = phi i8* [ %830, %818 ], [ %841, %831 ], !dbg !1898
  store i8* %843, i8** %t, align 8, !dbg !1901
  %844 = load i8** %t, align 8, !dbg !1902
  %845 = load i8** %other_last, align 8, !dbg !1904
  %846 = icmp ult i8* %844, %845, !dbg !1902
  br i1 %846, label %847, label %849, !dbg !1905

; <label>:847                                     ; preds = %842
  %848 = load i8** %other_last, align 8, !dbg !1906
  store i8* %848, i8** %t, align 8, !dbg !1907
  br label %849, !dbg !1907

; <label>:849                                     ; preds = %847, %842
  %850 = load i8* @PL_reg_match_utf8, align 1, !dbg !1908
  %851 = sext i8 %850 to i32, !dbg !1908
  %852 = icmp ne i32 %851, 0, !dbg !1908
  br i1 %852, label %853, label %863, !dbg !1908

; <label>:853                                     ; preds = %849
  %854 = load i8** %5, align 8, !dbg !1909
  %855 = load %struct.regexp** %2, align 8, !dbg !1909
  %856 = getelementptr inbounds %struct.regexp* %855, i32 0, i32 10, !dbg !1909
  %857 = load i32* %856, align 4, !dbg !1909
  %858 = sub nsw i32 0, %857, !dbg !1909
  %859 = load i8** %strbeg, align 8, !dbg !1909
  %860 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %854, i32 %858, i8* %859), !dbg !1909
  %861 = sext i32 %860 to i64, !dbg !1909
  %862 = inttoptr i64 %861 to i8*, !dbg !1909
  br label %871, !dbg !1909

; <label>:863                                     ; preds = %849
  %864 = load i8** %5, align 8, !dbg !1910
  %865 = load %struct.regexp** %2, align 8, !dbg !1910
  %866 = getelementptr inbounds %struct.regexp* %865, i32 0, i32 10, !dbg !1910
  %867 = load i32* %866, align 4, !dbg !1910
  %868 = sub nsw i32 0, %867, !dbg !1910
  %869 = sext i32 %868 to i64, !dbg !1910
  %870 = getelementptr inbounds i8* %864, i64 %869, !dbg !1910
  br label %871, !dbg !1910

; <label>:871                                     ; preds = %863, %853
  %872 = phi i8* [ %862, %853 ], [ %870, %863 ], !dbg !1908
  store i8* %872, i8** %last1, align 8, !dbg !1911
  store i8* %872, i8** %last2, align 8, !dbg !1912
  %873 = load i8** %last, align 8, !dbg !1913
  %874 = load i8** %last1, align 8, !dbg !1915
  %875 = icmp ult i8* %873, %874, !dbg !1913
  br i1 %875, label %876, label %878, !dbg !1916

; <label>:876                                     ; preds = %871
  %877 = load i8** %last, align 8, !dbg !1917
  store i8* %877, i8** %last1, align 8, !dbg !1918
  br label %878, !dbg !1918

; <label>:878                                     ; preds = %876, %871
  %879 = load i32* %do_utf8, align 4, !dbg !1919
  %880 = icmp ne i32 %879, 0, !dbg !1919
  br i1 %880, label %881, label %889, !dbg !1919

; <label>:881                                     ; preds = %878
  %882 = load %struct.regexp** %2, align 8, !dbg !1920
  %883 = getelementptr inbounds %struct.regexp* %882, i32 0, i32 3, !dbg !1920
  %884 = load %struct.reg_substr_data** %883, align 8, !dbg !1920
  %885 = getelementptr inbounds %struct.reg_substr_data* %884, i32 0, i32 0, !dbg !1920
  %886 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %885, i32 0, i64 0, !dbg !1920
  %887 = getelementptr inbounds %struct.reg_substr_datum* %886, i32 0, i32 3, !dbg !1920
  %888 = load %struct.sv** %887, align 8, !dbg !1920
  br label %897, !dbg !1919

; <label>:889                                     ; preds = %878
  %890 = load %struct.regexp** %2, align 8, !dbg !1921
  %891 = getelementptr inbounds %struct.regexp* %890, i32 0, i32 3, !dbg !1921
  %892 = load %struct.reg_substr_data** %891, align 8, !dbg !1921
  %893 = getelementptr inbounds %struct.reg_substr_data* %892, i32 0, i32 0, !dbg !1921
  %894 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %893, i32 0, i64 0, !dbg !1921
  %895 = getelementptr inbounds %struct.reg_substr_datum* %894, i32 0, i32 2, !dbg !1921
  %896 = load %struct.sv** %895, align 8, !dbg !1921
  br label %897, !dbg !1919

; <label>:897                                     ; preds = %889, %881
  %898 = phi %struct.sv* [ %888, %881 ], [ %896, %889 ], !dbg !1919
  store %struct.sv* %898, %struct.sv** %must, align 8, !dbg !1922
  %899 = load %struct.sv** %must, align 8, !dbg !1923
  %900 = icmp eq %struct.sv* %899, @PL_sv_undef, !dbg !1923
  br i1 %900, label %901, label %902, !dbg !1925

; <label>:901                                     ; preds = %897
  store i8* null, i8** %s, align 8, !dbg !1926
  br label %1008, !dbg !1928

; <label>:902                                     ; preds = %897
  %903 = load i8** %t, align 8, !dbg !1929
  %904 = load i8* @PL_reg_match_utf8, align 1, !dbg !1930
  %905 = sext i8 %904 to i32, !dbg !1930
  %906 = icmp ne i32 %905, 0, !dbg !1930
  br i1 %906, label %907, label %955, !dbg !1930

; <label>:907                                     ; preds = %902
  %908 = load i8* @PL_reg_match_utf8, align 1, !dbg !1931
  %909 = sext i8 %908 to i32, !dbg !1931
  %910 = icmp ne i32 %909, 0, !dbg !1931
  br i1 %910, label %911, label %924, !dbg !1931

; <label>:911                                     ; preds = %907
  %912 = load i8** %last1, align 8, !dbg !1933
  %913 = load %struct.regexp** %2, align 8, !dbg !1933
  %914 = getelementptr inbounds %struct.regexp* %913, i32 0, i32 3, !dbg !1933
  %915 = load %struct.reg_substr_data** %914, align 8, !dbg !1933
  %916 = getelementptr inbounds %struct.reg_substr_data* %915, i32 0, i32 0, !dbg !1933
  %917 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %916, i32 0, i64 0, !dbg !1933
  %918 = getelementptr inbounds %struct.reg_substr_datum* %917, i32 0, i32 0, !dbg !1933
  %919 = load i32* %918, align 4, !dbg !1933
  %920 = load i8** %5, align 8, !dbg !1933
  %921 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %912, i32 %919, i8* %920), !dbg !1933
  %922 = sext i32 %921 to i64, !dbg !1933
  %923 = inttoptr i64 %922 to i8*, !dbg !1933
  br label %935, !dbg !1933

; <label>:924                                     ; preds = %907
  %925 = load i8** %last1, align 8, !dbg !1935
  %926 = load %struct.regexp** %2, align 8, !dbg !1935
  %927 = getelementptr inbounds %struct.regexp* %926, i32 0, i32 3, !dbg !1935
  %928 = load %struct.reg_substr_data** %927, align 8, !dbg !1935
  %929 = getelementptr inbounds %struct.reg_substr_data* %928, i32 0, i32 0, !dbg !1935
  %930 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %929, i32 0, i64 0, !dbg !1935
  %931 = getelementptr inbounds %struct.reg_substr_datum* %930, i32 0, i32 0, !dbg !1935
  %932 = load i32* %931, align 4, !dbg !1935
  %933 = sext i32 %932 to i64, !dbg !1935
  %934 = getelementptr inbounds i8* %925, i64 %933, !dbg !1935
  br label %935, !dbg !1935

; <label>:935                                     ; preds = %924, %911
  %936 = phi i8* [ %923, %911 ], [ %934, %924 ], !dbg !1930
  %937 = load %struct.sv** %must, align 8, !dbg !1937
  %938 = getelementptr inbounds %struct.sv* %937, i32 0, i32 0, !dbg !1937
  %939 = load i8** %938, align 8, !dbg !1937
  %940 = bitcast i8* %939 to %struct.xpv*, !dbg !1937
  %941 = getelementptr inbounds %struct.xpv* %940, i32 0, i32 1, !dbg !1937
  %942 = load i64* %941, align 8, !dbg !1937
  %943 = getelementptr inbounds i8* %936, i64 %942, !dbg !1937
  %944 = load %struct.sv** %must, align 8, !dbg !1937
  %945 = getelementptr inbounds %struct.sv* %944, i32 0, i32 2, !dbg !1937
  %946 = load i32* %945, align 4, !dbg !1937
  %947 = and i32 %946, 1073741824, !dbg !1937
  %948 = icmp ne i32 %947, 0, !dbg !1937
  %949 = zext i1 %948 to i32, !dbg !1937
  %950 = sub nsw i32 0, %949, !dbg !1937
  %951 = load i8** %strbeg, align 8, !dbg !1937
  %952 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %943, i32 %950, i8* %951), !dbg !1937
  %953 = sext i32 %952 to i64, !dbg !1937
  %954 = inttoptr i64 %953 to i8*, !dbg !1937
  br label %1001, !dbg !1937

; <label>:955                                     ; preds = %902
  %956 = load i8* @PL_reg_match_utf8, align 1, !dbg !1940
  %957 = sext i8 %956 to i32, !dbg !1940
  %958 = icmp ne i32 %957, 0, !dbg !1940
  br i1 %958, label %959, label %972, !dbg !1940

; <label>:959                                     ; preds = %955
  %960 = load i8** %last1, align 8, !dbg !1942
  %961 = load %struct.regexp** %2, align 8, !dbg !1942
  %962 = getelementptr inbounds %struct.regexp* %961, i32 0, i32 3, !dbg !1942
  %963 = load %struct.reg_substr_data** %962, align 8, !dbg !1942
  %964 = getelementptr inbounds %struct.reg_substr_data* %963, i32 0, i32 0, !dbg !1942
  %965 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %964, i32 0, i64 0, !dbg !1942
  %966 = getelementptr inbounds %struct.reg_substr_datum* %965, i32 0, i32 0, !dbg !1942
  %967 = load i32* %966, align 4, !dbg !1942
  %968 = load i8** %5, align 8, !dbg !1942
  %969 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %960, i32 %967, i8* %968), !dbg !1942
  %970 = sext i32 %969 to i64, !dbg !1942
  %971 = inttoptr i64 %970 to i8*, !dbg !1942
  br label %983, !dbg !1942

; <label>:972                                     ; preds = %955
  %973 = load i8** %last1, align 8, !dbg !1944
  %974 = load %struct.regexp** %2, align 8, !dbg !1944
  %975 = getelementptr inbounds %struct.regexp* %974, i32 0, i32 3, !dbg !1944
  %976 = load %struct.reg_substr_data** %975, align 8, !dbg !1944
  %977 = getelementptr inbounds %struct.reg_substr_data* %976, i32 0, i32 0, !dbg !1944
  %978 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %977, i32 0, i64 0, !dbg !1944
  %979 = getelementptr inbounds %struct.reg_substr_datum* %978, i32 0, i32 0, !dbg !1944
  %980 = load i32* %979, align 4, !dbg !1944
  %981 = sext i32 %980 to i64, !dbg !1944
  %982 = getelementptr inbounds i8* %973, i64 %981, !dbg !1944
  br label %983, !dbg !1944

; <label>:983                                     ; preds = %972, %959
  %984 = phi i8* [ %971, %959 ], [ %982, %972 ], !dbg !1930
  %985 = load %struct.sv** %must, align 8, !dbg !1946
  %986 = getelementptr inbounds %struct.sv* %985, i32 0, i32 0, !dbg !1946
  %987 = load i8** %986, align 8, !dbg !1946
  %988 = bitcast i8* %987 to %struct.xpv*, !dbg !1946
  %989 = getelementptr inbounds %struct.xpv* %988, i32 0, i32 1, !dbg !1946
  %990 = load i64* %989, align 8, !dbg !1946
  %991 = getelementptr inbounds i8* %984, i64 %990, !dbg !1946
  %992 = load %struct.sv** %must, align 8, !dbg !1946
  %993 = getelementptr inbounds %struct.sv* %992, i32 0, i32 2, !dbg !1946
  %994 = load i32* %993, align 4, !dbg !1946
  %995 = and i32 %994, 1073741824, !dbg !1946
  %996 = icmp ne i32 %995, 0, !dbg !1946
  %997 = zext i1 %996 to i32, !dbg !1946
  %998 = sub nsw i32 0, %997, !dbg !1946
  %999 = sext i32 %998 to i64, !dbg !1946
  %1000 = getelementptr inbounds i8* %991, i64 %999, !dbg !1946
  br label %1001, !dbg !1946

; <label>:1001                                    ; preds = %983, %935
  %1002 = phi i8* [ %954, %935 ], [ %1000, %983 ], !dbg !1930
  %1003 = load %struct.sv** %must, align 8, !dbg !1949
  %1004 = load i32* @PL_multiline, align 4, !dbg !1950
  %1005 = icmp ne i32 %1004, 0, !dbg !1950
  %1006 = select i1 %1005, i32 1, i32 0, !dbg !1950
  %1007 = call i8* @Perl_fbm_instr(i8* %903, i8* %1002, %struct.sv* %1003, i32 %1006), !dbg !1951
  store i8* %1007, i8** %s, align 8, !dbg !1952
  br label %1008

; <label>:1008                                    ; preds = %1001, %901
  %1009 = load i8** %s, align 8, !dbg !1953
  %1010 = icmp ne i8* %1009, null, !dbg !1955
  br i1 %1010, label %1062, label %1011, !dbg !1955

; <label>:1011                                    ; preds = %1008
  %1012 = load i8** %last1, align 8, !dbg !1956
  %1013 = load i8** %last2, align 8, !dbg !1959
  %1014 = icmp uge i8* %1012, %1013, !dbg !1956
  br i1 %1014, label %1015, label %1016, !dbg !1960

; <label>:1015                                    ; preds = %1011
  br label %2071, !dbg !1961

; <label>:1016                                    ; preds = %1011
  %1017 = load i8* @PL_reg_match_utf8, align 1, !dbg !1963
  %1018 = sext i8 %1017 to i32, !dbg !1963
  %1019 = icmp ne i32 %1018, 0, !dbg !1963
  br i1 %1019, label %1020, label %1034, !dbg !1963

; <label>:1020                                    ; preds = %1016
  %1021 = load i8** %last1, align 8, !dbg !1964
  %1022 = load %struct.regexp** %2, align 8, !dbg !1964
  %1023 = getelementptr inbounds %struct.regexp* %1022, i32 0, i32 3, !dbg !1964
  %1024 = load %struct.reg_substr_data** %1023, align 8, !dbg !1964
  %1025 = getelementptr inbounds %struct.reg_substr_data* %1024, i32 0, i32 0, !dbg !1964
  %1026 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1025, i32 0, i64 0, !dbg !1964
  %1027 = getelementptr inbounds %struct.reg_substr_datum* %1026, i32 0, i32 0, !dbg !1964
  %1028 = load i32* %1027, align 4, !dbg !1964
  %1029 = add nsw i32 %1028, 1, !dbg !1964
  %1030 = load i8** %5, align 8, !dbg !1964
  %1031 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1021, i32 %1029, i8* %1030), !dbg !1964
  %1032 = sext i32 %1031 to i64, !dbg !1964
  %1033 = inttoptr i64 %1032 to i8*, !dbg !1964
  br label %1046, !dbg !1964

; <label>:1034                                    ; preds = %1016
  %1035 = load i8** %last1, align 8, !dbg !1966
  %1036 = load %struct.regexp** %2, align 8, !dbg !1966
  %1037 = getelementptr inbounds %struct.regexp* %1036, i32 0, i32 3, !dbg !1966
  %1038 = load %struct.reg_substr_data** %1037, align 8, !dbg !1966
  %1039 = getelementptr inbounds %struct.reg_substr_data* %1038, i32 0, i32 0, !dbg !1966
  %1040 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1039, i32 0, i64 0, !dbg !1966
  %1041 = getelementptr inbounds %struct.reg_substr_datum* %1040, i32 0, i32 0, !dbg !1966
  %1042 = load i32* %1041, align 4, !dbg !1966
  %1043 = sext i32 %1042 to i64, !dbg !1966
  %1044 = getelementptr inbounds i8* %1035, i64 %1043, !dbg !1966
  %1045 = getelementptr inbounds i8* %1044, i64 1, !dbg !1966
  br label %1046, !dbg !1966

; <label>:1046                                    ; preds = %1034, %1020
  %1047 = phi i8* [ %1033, %1020 ], [ %1045, %1034 ], !dbg !1963
  store i8* %1047, i8** %other_last, align 8, !dbg !1968
  %1048 = load i8* @PL_reg_match_utf8, align 1, !dbg !1971
  %1049 = sext i8 %1048 to i32, !dbg !1971
  %1050 = icmp ne i32 %1049, 0, !dbg !1971
  br i1 %1050, label %1051, label %1057, !dbg !1971

; <label>:1051                                    ; preds = %1046
  %1052 = load i8** %last, align 8, !dbg !1972
  %1053 = load i8** %5, align 8, !dbg !1972
  %1054 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1052, i32 1, i8* %1053), !dbg !1972
  %1055 = sext i32 %1054 to i64, !dbg !1972
  %1056 = inttoptr i64 %1055 to i8*, !dbg !1972
  br label %1060, !dbg !1972

; <label>:1057                                    ; preds = %1046
  %1058 = load i8** %last, align 8, !dbg !1973
  %1059 = getelementptr inbounds i8* %1058, i64 1, !dbg !1973
  br label %1060, !dbg !1973

; <label>:1060                                    ; preds = %1057, %1051
  %1061 = phi i8* [ %1056, %1051 ], [ %1059, %1057 ], !dbg !1971
  store i8* %1061, i8** %s, align 8, !dbg !1974
  br label %503, !dbg !1975

; <label>:1062                                    ; preds = %1008
  %1063 = load i8* @PL_reg_match_utf8, align 1, !dbg !1976
  %1064 = sext i8 %1063 to i32, !dbg !1976
  %1065 = icmp ne i32 %1064, 0, !dbg !1976
  br i1 %1065, label %1066, label %1080, !dbg !1976

; <label>:1066                                    ; preds = %1062
  %1067 = load i8** %s, align 8, !dbg !1978
  %1068 = load %struct.regexp** %2, align 8, !dbg !1978
  %1069 = getelementptr inbounds %struct.regexp* %1068, i32 0, i32 3, !dbg !1978
  %1070 = load %struct.reg_substr_data** %1069, align 8, !dbg !1978
  %1071 = getelementptr inbounds %struct.reg_substr_data* %1070, i32 0, i32 0, !dbg !1978
  %1072 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1071, i32 0, i64 0, !dbg !1978
  %1073 = getelementptr inbounds %struct.reg_substr_datum* %1072, i32 0, i32 0, !dbg !1978
  %1074 = load i32* %1073, align 4, !dbg !1978
  %1075 = sub nsw i32 0, %1074, !dbg !1978
  %1076 = load i8** %strbeg, align 8, !dbg !1978
  %1077 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1067, i32 %1075, i8* %1076), !dbg !1978
  %1078 = sext i32 %1077 to i64, !dbg !1978
  %1079 = inttoptr i64 %1078 to i8*, !dbg !1978
  br label %1092, !dbg !1978

; <label>:1080                                    ; preds = %1062
  %1081 = load i8** %s, align 8, !dbg !1980
  %1082 = load %struct.regexp** %2, align 8, !dbg !1980
  %1083 = getelementptr inbounds %struct.regexp* %1082, i32 0, i32 3, !dbg !1980
  %1084 = load %struct.reg_substr_data** %1083, align 8, !dbg !1980
  %1085 = getelementptr inbounds %struct.reg_substr_data* %1084, i32 0, i32 0, !dbg !1980
  %1086 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1085, i32 0, i64 0, !dbg !1980
  %1087 = getelementptr inbounds %struct.reg_substr_datum* %1086, i32 0, i32 0, !dbg !1980
  %1088 = load i32* %1087, align 4, !dbg !1980
  %1089 = sub nsw i32 0, %1088, !dbg !1980
  %1090 = sext i32 %1089 to i64, !dbg !1980
  %1091 = getelementptr inbounds i8* %1081, i64 %1090, !dbg !1980
  br label %1092, !dbg !1980

; <label>:1092                                    ; preds = %1080, %1066
  %1093 = phi i8* [ %1079, %1066 ], [ %1091, %1080 ], !dbg !1976
  store i8* %1093, i8** %t, align 8, !dbg !1982
  %1094 = load i8* @PL_reg_match_utf8, align 1, !dbg !1985
  %1095 = sext i8 %1094 to i32, !dbg !1985
  %1096 = icmp ne i32 %1095, 0, !dbg !1985
  br i1 %1096, label %1097, label %1103, !dbg !1985

; <label>:1097                                    ; preds = %1092
  %1098 = load i8** %s, align 8, !dbg !1986
  %1099 = load i8** %5, align 8, !dbg !1986
  %1100 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1098, i32 1, i8* %1099), !dbg !1986
  %1101 = sext i32 %1100 to i64, !dbg !1986
  %1102 = inttoptr i64 %1101 to i8*, !dbg !1986
  br label %1106, !dbg !1986

; <label>:1103                                    ; preds = %1092
  %1104 = load i8** %s, align 8, !dbg !1987
  %1105 = getelementptr inbounds i8* %1104, i64 1, !dbg !1987
  br label %1106, !dbg !1987

; <label>:1106                                    ; preds = %1103, %1097
  %1107 = phi i8* [ %1102, %1097 ], [ %1105, %1103 ], !dbg !1985
  store i8* %1107, i8** %other_last, align 8, !dbg !1988
  %1108 = load i8** %s1, align 8, !dbg !1989
  store i8* %1108, i8** %s, align 8, !dbg !1990
  %1109 = load i8** %t, align 8, !dbg !1991
  %1110 = load i8** %4, align 8, !dbg !1993
  %1111 = icmp eq i8* %1109, %1110, !dbg !1991
  br i1 %1111, label %1112, label %1113, !dbg !1994

; <label>:1112                                    ; preds = %1106
  br label %1498, !dbg !1995

; <label>:1113                                    ; preds = %1106
  br label %1393, !dbg !1996

; <label>:1114                                    ; preds = %739
  call void @llvm.dbg.declare(metadata i8** %last3, metadata !1997, metadata !566), !dbg !1999
  call void @llvm.dbg.declare(metadata i8** %last14, metadata !2000, metadata !566), !dbg !2001
  call void @llvm.dbg.declare(metadata i8** %s15, metadata !2002, metadata !566), !dbg !2003
  %1115 = load i8** %s, align 8, !dbg !2004
  store i8* %1115, i8** %s15, align 8, !dbg !2003
  call void @llvm.dbg.declare(metadata %struct.sv** %must6, metadata !2005, metadata !566), !dbg !2006
  %1116 = load i8* @PL_reg_match_utf8, align 1, !dbg !2007
  %1117 = sext i8 %1116 to i32, !dbg !2007
  %1118 = icmp ne i32 %1117, 0, !dbg !2007
  br i1 %1118, label %1119, label %1127, !dbg !2007

; <label>:1119                                    ; preds = %1114
  %1120 = load i8** %s, align 8, !dbg !2008
  %1121 = load i32* %start_shift, align 4, !dbg !2008
  %1122 = sub nsw i32 0, %1121, !dbg !2008
  %1123 = load i8** %strbeg, align 8, !dbg !2008
  %1124 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1120, i32 %1122, i8* %1123), !dbg !2008
  %1125 = sext i32 %1124 to i64, !dbg !2008
  %1126 = inttoptr i64 %1125 to i8*, !dbg !2008
  br label %1133, !dbg !2008

; <label>:1127                                    ; preds = %1114
  %1128 = load i8** %s, align 8, !dbg !2010
  %1129 = load i32* %start_shift, align 4, !dbg !2010
  %1130 = sub nsw i32 0, %1129, !dbg !2010
  %1131 = sext i32 %1130 to i64, !dbg !2010
  %1132 = getelementptr inbounds i8* %1128, i64 %1131, !dbg !2010
  br label %1133, !dbg !2010

; <label>:1133                                    ; preds = %1127, %1119
  %1134 = phi i8* [ %1126, %1119 ], [ %1132, %1127 ], !dbg !2007
  store i8* %1134, i8** %t, align 8, !dbg !2012
  %1135 = load i8* @PL_reg_match_utf8, align 1, !dbg !2015
  %1136 = sext i8 %1135 to i32, !dbg !2015
  %1137 = icmp ne i32 %1136, 0, !dbg !2015
  br i1 %1137, label %1138, label %1156, !dbg !2015

; <label>:1138                                    ; preds = %1133
  %1139 = load i8** %5, align 8, !dbg !2016
  %1140 = load %struct.regexp** %2, align 8, !dbg !2016
  %1141 = getelementptr inbounds %struct.regexp* %1140, i32 0, i32 10, !dbg !2016
  %1142 = load i32* %1141, align 4, !dbg !2016
  %1143 = sub nsw i32 0, %1142, !dbg !2016
  %1144 = load %struct.regexp** %2, align 8, !dbg !2016
  %1145 = getelementptr inbounds %struct.regexp* %1144, i32 0, i32 3, !dbg !2016
  %1146 = load %struct.reg_substr_data** %1145, align 8, !dbg !2016
  %1147 = getelementptr inbounds %struct.reg_substr_data* %1146, i32 0, i32 0, !dbg !2016
  %1148 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1147, i32 0, i64 1, !dbg !2016
  %1149 = getelementptr inbounds %struct.reg_substr_datum* %1148, i32 0, i32 0, !dbg !2016
  %1150 = load i32* %1149, align 4, !dbg !2016
  %1151 = add nsw i32 %1143, %1150, !dbg !2016
  %1152 = load i8** %strbeg, align 8, !dbg !2016
  %1153 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1139, i32 %1151, i8* %1152), !dbg !2016
  %1154 = sext i32 %1153 to i64, !dbg !2016
  %1155 = inttoptr i64 %1154 to i8*, !dbg !2016
  br label %1173, !dbg !2016

; <label>:1156                                    ; preds = %1133
  %1157 = load i8** %5, align 8, !dbg !2017
  %1158 = load %struct.regexp** %2, align 8, !dbg !2017
  %1159 = getelementptr inbounds %struct.regexp* %1158, i32 0, i32 10, !dbg !2017
  %1160 = load i32* %1159, align 4, !dbg !2017
  %1161 = sub nsw i32 0, %1160, !dbg !2017
  %1162 = sext i32 %1161 to i64, !dbg !2017
  %1163 = getelementptr inbounds i8* %1157, i64 %1162, !dbg !2017
  %1164 = load %struct.regexp** %2, align 8, !dbg !2017
  %1165 = getelementptr inbounds %struct.regexp* %1164, i32 0, i32 3, !dbg !2017
  %1166 = load %struct.reg_substr_data** %1165, align 8, !dbg !2017
  %1167 = getelementptr inbounds %struct.reg_substr_data* %1166, i32 0, i32 0, !dbg !2017
  %1168 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1167, i32 0, i64 1, !dbg !2017
  %1169 = getelementptr inbounds %struct.reg_substr_datum* %1168, i32 0, i32 0, !dbg !2017
  %1170 = load i32* %1169, align 4, !dbg !2017
  %1171 = sext i32 %1170 to i64, !dbg !2017
  %1172 = getelementptr inbounds i8* %1163, i64 %1171, !dbg !2017
  br label %1173, !dbg !2017

; <label>:1173                                    ; preds = %1156, %1138
  %1174 = phi i8* [ %1155, %1138 ], [ %1172, %1156 ], !dbg !2015
  store i8* %1174, i8** %last3, align 8, !dbg !2018
  store i8* %1174, i8** %last14, align 8, !dbg !2019
  %1175 = load i8* @PL_reg_match_utf8, align 1, !dbg !2020
  %1176 = sext i8 %1175 to i32, !dbg !2020
  %1177 = icmp ne i32 %1176, 0, !dbg !2020
  br i1 %1177, label %1178, label %1182, !dbg !2020

; <label>:1178                                    ; preds = %1173
  %1179 = load i8** %last3, align 8, !dbg !2022
  %1180 = load i8** %t, align 8, !dbg !2022
  %1181 = call i64 @Perl_utf8_distance(i8* %1179, i8* %1180), !dbg !2022
  br label %1188, !dbg !2022

; <label>:1182                                    ; preds = %1173
  %1183 = load i8** %last3, align 8, !dbg !2024
  %1184 = load i8** %t, align 8, !dbg !2024
  %1185 = ptrtoint i8* %1183 to i64, !dbg !2024
  %1186 = ptrtoint i8* %1184 to i64, !dbg !2024
  %1187 = sub i64 %1185, %1186, !dbg !2024
  br label %1188, !dbg !2024

; <label>:1188                                    ; preds = %1182, %1178
  %1189 = phi i64 [ %1181, %1178 ], [ %1187, %1182 ], !dbg !2020
  %1190 = load %struct.regexp** %2, align 8, !dbg !2026
  %1191 = getelementptr inbounds %struct.regexp* %1190, i32 0, i32 3, !dbg !2026
  %1192 = load %struct.reg_substr_data** %1191, align 8, !dbg !2026
  %1193 = getelementptr inbounds %struct.reg_substr_data* %1192, i32 0, i32 0, !dbg !2026
  %1194 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1193, i32 0, i64 1, !dbg !2026
  %1195 = getelementptr inbounds %struct.reg_substr_datum* %1194, i32 0, i32 1, !dbg !2026
  %1196 = load i32* %1195, align 4, !dbg !2026
  %1197 = sext i32 %1196 to i64, !dbg !2026
  %1198 = icmp sgt i64 %1189, %1197, !dbg !2020
  br i1 %1198, label %1199, label %1229, !dbg !2029

; <label>:1199                                    ; preds = %1188
  %1200 = load i8* @PL_reg_match_utf8, align 1, !dbg !2030
  %1201 = sext i8 %1200 to i32, !dbg !2030
  %1202 = icmp ne i32 %1201, 0, !dbg !2030
  br i1 %1202, label %1203, label %1216, !dbg !2030

; <label>:1203                                    ; preds = %1199
  %1204 = load i8** %t, align 8, !dbg !2031
  %1205 = load %struct.regexp** %2, align 8, !dbg !2031
  %1206 = getelementptr inbounds %struct.regexp* %1205, i32 0, i32 3, !dbg !2031
  %1207 = load %struct.reg_substr_data** %1206, align 8, !dbg !2031
  %1208 = getelementptr inbounds %struct.reg_substr_data* %1207, i32 0, i32 0, !dbg !2031
  %1209 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1208, i32 0, i64 1, !dbg !2031
  %1210 = getelementptr inbounds %struct.reg_substr_datum* %1209, i32 0, i32 1, !dbg !2031
  %1211 = load i32* %1210, align 4, !dbg !2031
  %1212 = load i8** %5, align 8, !dbg !2031
  %1213 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1204, i32 %1211, i8* %1212), !dbg !2031
  %1214 = sext i32 %1213 to i64, !dbg !2031
  %1215 = inttoptr i64 %1214 to i8*, !dbg !2031
  br label %1227, !dbg !2031

; <label>:1216                                    ; preds = %1199
  %1217 = load i8** %t, align 8, !dbg !2032
  %1218 = load %struct.regexp** %2, align 8, !dbg !2032
  %1219 = getelementptr inbounds %struct.regexp* %1218, i32 0, i32 3, !dbg !2032
  %1220 = load %struct.reg_substr_data** %1219, align 8, !dbg !2032
  %1221 = getelementptr inbounds %struct.reg_substr_data* %1220, i32 0, i32 0, !dbg !2032
  %1222 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1221, i32 0, i64 1, !dbg !2032
  %1223 = getelementptr inbounds %struct.reg_substr_datum* %1222, i32 0, i32 1, !dbg !2032
  %1224 = load i32* %1223, align 4, !dbg !2032
  %1225 = sext i32 %1224 to i64, !dbg !2032
  %1226 = getelementptr inbounds i8* %1217, i64 %1225, !dbg !2032
  br label %1227, !dbg !2032

; <label>:1227                                    ; preds = %1216, %1203
  %1228 = phi i8* [ %1215, %1203 ], [ %1226, %1216 ], !dbg !2030
  store i8* %1228, i8** %last3, align 8, !dbg !2033
  br label %1229, !dbg !2033

; <label>:1229                                    ; preds = %1227, %1188
  %1230 = load i8* @PL_reg_match_utf8, align 1, !dbg !2034
  %1231 = sext i8 %1230 to i32, !dbg !2034
  %1232 = icmp ne i32 %1231, 0, !dbg !2034
  br i1 %1232, label %1233, label %1246, !dbg !2034

; <label>:1233                                    ; preds = %1229
  %1234 = load i8** %t, align 8, !dbg !2035
  %1235 = load %struct.regexp** %2, align 8, !dbg !2035
  %1236 = getelementptr inbounds %struct.regexp* %1235, i32 0, i32 3, !dbg !2035
  %1237 = load %struct.reg_substr_data** %1236, align 8, !dbg !2035
  %1238 = getelementptr inbounds %struct.reg_substr_data* %1237, i32 0, i32 0, !dbg !2035
  %1239 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1238, i32 0, i64 1, !dbg !2035
  %1240 = getelementptr inbounds %struct.reg_substr_datum* %1239, i32 0, i32 0, !dbg !2035
  %1241 = load i32* %1240, align 4, !dbg !2035
  %1242 = load i8** %5, align 8, !dbg !2035
  %1243 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1234, i32 %1241, i8* %1242), !dbg !2035
  %1244 = sext i32 %1243 to i64, !dbg !2035
  %1245 = inttoptr i64 %1244 to i8*, !dbg !2035
  br label %1257, !dbg !2035

; <label>:1246                                    ; preds = %1229
  %1247 = load i8** %t, align 8, !dbg !2036
  %1248 = load %struct.regexp** %2, align 8, !dbg !2036
  %1249 = getelementptr inbounds %struct.regexp* %1248, i32 0, i32 3, !dbg !2036
  %1250 = load %struct.reg_substr_data** %1249, align 8, !dbg !2036
  %1251 = getelementptr inbounds %struct.reg_substr_data* %1250, i32 0, i32 0, !dbg !2036
  %1252 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1251, i32 0, i64 1, !dbg !2036
  %1253 = getelementptr inbounds %struct.reg_substr_datum* %1252, i32 0, i32 0, !dbg !2036
  %1254 = load i32* %1253, align 4, !dbg !2036
  %1255 = sext i32 %1254 to i64, !dbg !2036
  %1256 = getelementptr inbounds i8* %1247, i64 %1255, !dbg !2036
  br label %1257, !dbg !2036

; <label>:1257                                    ; preds = %1246, %1233
  %1258 = phi i8* [ %1245, %1233 ], [ %1256, %1246 ], !dbg !2034
  store i8* %1258, i8** %s, align 8, !dbg !2037
  %1259 = load i8** %s, align 8, !dbg !2038
  %1260 = load i8** %other_last, align 8, !dbg !2040
  %1261 = icmp ult i8* %1259, %1260, !dbg !2038
  br i1 %1261, label %1262, label %1264, !dbg !2041

; <label>:1262                                    ; preds = %1257
  %1263 = load i8** %other_last, align 8, !dbg !2042
  store i8* %1263, i8** %s, align 8, !dbg !2043
  br label %1264, !dbg !2043

; <label>:1264                                    ; preds = %1262, %1257
  %1265 = load i32* %do_utf8, align 4, !dbg !2044
  %1266 = icmp ne i32 %1265, 0, !dbg !2044
  br i1 %1266, label %1267, label %1275, !dbg !2044

; <label>:1267                                    ; preds = %1264
  %1268 = load %struct.regexp** %2, align 8, !dbg !2045
  %1269 = getelementptr inbounds %struct.regexp* %1268, i32 0, i32 3, !dbg !2045
  %1270 = load %struct.reg_substr_data** %1269, align 8, !dbg !2045
  %1271 = getelementptr inbounds %struct.reg_substr_data* %1270, i32 0, i32 0, !dbg !2045
  %1272 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1271, i32 0, i64 1, !dbg !2045
  %1273 = getelementptr inbounds %struct.reg_substr_datum* %1272, i32 0, i32 3, !dbg !2045
  %1274 = load %struct.sv** %1273, align 8, !dbg !2045
  br label %1283, !dbg !2044

; <label>:1275                                    ; preds = %1264
  %1276 = load %struct.regexp** %2, align 8, !dbg !2046
  %1277 = getelementptr inbounds %struct.regexp* %1276, i32 0, i32 3, !dbg !2046
  %1278 = load %struct.reg_substr_data** %1277, align 8, !dbg !2046
  %1279 = getelementptr inbounds %struct.reg_substr_data* %1278, i32 0, i32 0, !dbg !2046
  %1280 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1279, i32 0, i64 1, !dbg !2046
  %1281 = getelementptr inbounds %struct.reg_substr_datum* %1280, i32 0, i32 2, !dbg !2046
  %1282 = load %struct.sv** %1281, align 8, !dbg !2046
  br label %1283, !dbg !2044

; <label>:1283                                    ; preds = %1275, %1267
  %1284 = phi %struct.sv* [ %1274, %1267 ], [ %1282, %1275 ], !dbg !2044
  store %struct.sv* %1284, %struct.sv** %must6, align 8, !dbg !2047
  %1285 = load %struct.sv** %must6, align 8, !dbg !2048
  %1286 = icmp eq %struct.sv* %1285, @PL_sv_undef, !dbg !2048
  br i1 %1286, label %1287, label %1288, !dbg !2050

; <label>:1287                                    ; preds = %1283
  store i8* null, i8** %s, align 8, !dbg !2051
  br label %1312, !dbg !2053

; <label>:1288                                    ; preds = %1283
  %1289 = load i8** %s, align 8, !dbg !2054
  %1290 = load i8** %last3, align 8, !dbg !2055
  %1291 = load %struct.sv** %must6, align 8, !dbg !2056
  %1292 = getelementptr inbounds %struct.sv* %1291, i32 0, i32 0, !dbg !2056
  %1293 = load i8** %1292, align 8, !dbg !2056
  %1294 = bitcast i8* %1293 to %struct.xpv*, !dbg !2056
  %1295 = getelementptr inbounds %struct.xpv* %1294, i32 0, i32 1, !dbg !2056
  %1296 = load i64* %1295, align 8, !dbg !2056
  %1297 = getelementptr inbounds i8* %1290, i64 %1296, !dbg !2057
  %1298 = load %struct.sv** %must6, align 8, !dbg !2058
  %1299 = getelementptr inbounds %struct.sv* %1298, i32 0, i32 2, !dbg !2058
  %1300 = load i32* %1299, align 4, !dbg !2058
  %1301 = and i32 %1300, 1073741824, !dbg !2058
  %1302 = icmp ne i32 %1301, 0, !dbg !2058
  %1303 = zext i1 %1302 to i32, !dbg !2058
  %1304 = sext i32 %1303 to i64, !dbg !2057
  %1305 = sub i64 0, %1304, !dbg !2057
  %1306 = getelementptr inbounds i8* %1297, i64 %1305, !dbg !2057
  %1307 = load %struct.sv** %must6, align 8, !dbg !2059
  %1308 = load i32* @PL_multiline, align 4, !dbg !2060
  %1309 = icmp ne i32 %1308, 0, !dbg !2060
  %1310 = select i1 %1309, i32 1, i32 0, !dbg !2060
  %1311 = call i8* @Perl_fbm_instr(i8* %1289, i8* %1306, %struct.sv* %1307, i32 %1310), !dbg !2061
  store i8* %1311, i8** %s, align 8, !dbg !2062
  br label %1312

; <label>:1312                                    ; preds = %1288, %1287
  %1313 = load i8** %s, align 8, !dbg !2063
  %1314 = icmp ne i8* %1313, null, !dbg !2065
  br i1 %1314, label %1336, label %1315, !dbg !2065

; <label>:1315                                    ; preds = %1312
  %1316 = load i8** %last14, align 8, !dbg !2066
  %1317 = load i8** %last3, align 8, !dbg !2069
  %1318 = icmp eq i8* %1316, %1317, !dbg !2066
  br i1 %1318, label %1319, label %1320, !dbg !2070

; <label>:1319                                    ; preds = %1315
  br label %2071, !dbg !2071

; <label>:1320                                    ; preds = %1315
  %1321 = load i8** %last3, align 8, !dbg !2073
  store i8* %1321, i8** %other_last, align 8, !dbg !2074
  %1322 = load i8* @PL_reg_match_utf8, align 1, !dbg !2075
  %1323 = sext i8 %1322 to i32, !dbg !2075
  %1324 = icmp ne i32 %1323, 0, !dbg !2075
  br i1 %1324, label %1325, label %1331, !dbg !2075

; <label>:1325                                    ; preds = %1320
  %1326 = load i8** %t, align 8, !dbg !2076
  %1327 = load i8** %5, align 8, !dbg !2076
  %1328 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1326, i32 1, i8* %1327), !dbg !2076
  %1329 = sext i32 %1328 to i64, !dbg !2076
  %1330 = inttoptr i64 %1329 to i8*, !dbg !2076
  br label %1334, !dbg !2076

; <label>:1331                                    ; preds = %1320
  %1332 = load i8** %t, align 8, !dbg !2078
  %1333 = getelementptr inbounds i8* %1332, i64 1, !dbg !2078
  br label %1334, !dbg !2078

; <label>:1334                                    ; preds = %1331, %1325
  %1335 = phi i8* [ %1330, %1325 ], [ %1333, %1331 ], !dbg !2075
  store i8* %1335, i8** %s, align 8, !dbg !2080
  br label %503, !dbg !2083

; <label>:1336                                    ; preds = %1312
  %1337 = load i8** %s, align 8, !dbg !2084
  store i8* %1337, i8** %other_last, align 8, !dbg !2086
  %1338 = load i8** %s15, align 8, !dbg !2087
  store i8* %1338, i8** %s, align 8, !dbg !2088
  %1339 = load i8** %t, align 8, !dbg !2089
  %1340 = load i8** %4, align 8, !dbg !2091
  %1341 = icmp eq i8* %1339, %1340, !dbg !2089
  br i1 %1341, label %1342, label %1343, !dbg !2092

; <label>:1342                                    ; preds = %1336
  br label %1498, !dbg !2093

; <label>:1343                                    ; preds = %1336
  br label %1393, !dbg !2094

; <label>:1344                                    ; preds = %705, %696, %687, %678
  %1345 = load i8** %s, align 8, !dbg !2095
  %1346 = load %struct.regexp** %2, align 8, !dbg !2096
  %1347 = getelementptr inbounds %struct.regexp* %1346, i32 0, i32 3, !dbg !2096
  %1348 = load %struct.reg_substr_data** %1347, align 8, !dbg !2096
  %1349 = getelementptr inbounds %struct.reg_substr_data* %1348, i32 0, i32 0, !dbg !2096
  %1350 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1349, i32 0, i64 2, !dbg !2096
  %1351 = getelementptr inbounds %struct.reg_substr_datum* %1350, i32 0, i32 1, !dbg !2096
  %1352 = load i32* %1351, align 4, !dbg !2096
  %1353 = sext i32 %1352 to i64, !dbg !2095
  %1354 = sub i64 0, %1353, !dbg !2095
  %1355 = getelementptr inbounds i8* %1345, i64 %1354, !dbg !2095
  store i8* %1355, i8** %t, align 8, !dbg !2097
  %1356 = load i8** %s, align 8, !dbg !2098
  %1357 = load i8** %4, align 8, !dbg !2100
  %1358 = ptrtoint i8* %1356 to i64, !dbg !2098
  %1359 = ptrtoint i8* %1357 to i64, !dbg !2098
  %1360 = sub i64 %1358, %1359, !dbg !2098
  %1361 = load %struct.regexp** %2, align 8, !dbg !2101
  %1362 = getelementptr inbounds %struct.regexp* %1361, i32 0, i32 3, !dbg !2101
  %1363 = load %struct.reg_substr_data** %1362, align 8, !dbg !2101
  %1364 = getelementptr inbounds %struct.reg_substr_data* %1363, i32 0, i32 0, !dbg !2101
  %1365 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1364, i32 0, i64 2, !dbg !2101
  %1366 = getelementptr inbounds %struct.reg_substr_datum* %1365, i32 0, i32 1, !dbg !2101
  %1367 = load i32* %1366, align 4, !dbg !2101
  %1368 = sext i32 %1367 to i64, !dbg !2101
  %1369 = icmp sgt i64 %1360, %1368, !dbg !2098
  br i1 %1369, label %1370, label %1497, !dbg !2102

; <label>:1370                                    ; preds = %1344
  %1371 = load i32* %do_utf8, align 4, !dbg !2103
  %1372 = icmp ne i32 %1371, 0, !dbg !2102
  br i1 %1372, label %1373, label %1392, !dbg !2102

; <label>:1373                                    ; preds = %1370
  %1374 = load i8** %s, align 8, !dbg !2104
  %1375 = load %struct.regexp** %2, align 8, !dbg !2104
  %1376 = getelementptr inbounds %struct.regexp* %1375, i32 0, i32 3, !dbg !2104
  %1377 = load %struct.reg_substr_data** %1376, align 8, !dbg !2104
  %1378 = getelementptr inbounds %struct.reg_substr_data* %1377, i32 0, i32 0, !dbg !2104
  %1379 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1378, i32 0, i64 2, !dbg !2104
  %1380 = getelementptr inbounds %struct.reg_substr_datum* %1379, i32 0, i32 1, !dbg !2104
  %1381 = load i32* %1380, align 4, !dbg !2104
  %1382 = sub nsw i32 0, %1381, !dbg !2104
  %1383 = load i8** %4, align 8, !dbg !2104
  %1384 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghopmaybe3 to i32 (i8*, i32, i8*, ...)*)(i8* %1374, i32 %1382, i8* %1383), !dbg !2104
  %1385 = sext i32 %1384 to i64, !dbg !2104
  %1386 = inttoptr i64 %1385 to i8*, !dbg !2104
  store i8* %1386, i8** %t, align 8, !dbg !2105
  %1387 = icmp ne i8* %1386, null, !dbg !2102
  br i1 %1387, label %1388, label %1497, !dbg !2102

; <label>:1388                                    ; preds = %1373
  %1389 = load i8** %t, align 8, !dbg !2106
  %1390 = load i8** %4, align 8, !dbg !2107
  %1391 = icmp ugt i8* %1389, %1390, !dbg !2106
  br i1 %1391, label %1392, label %1497, !dbg !2102

; <label>:1392                                    ; preds = %1388, %1370
  br label %1393, !dbg !2108

; <label>:1393                                    ; preds = %2031, %1392, %1343, %1113
  %1394 = load i32* %ml_anch, align 4, !dbg !2109
  %1395 = icmp ne i32 %1394, 0, !dbg !2112
  br i1 %1395, label %1396, label %1467, !dbg !2112

; <label>:1396                                    ; preds = %1393
  %1397 = load i8** %t, align 8, !dbg !2113
  %1398 = getelementptr inbounds i8* %1397, i64 -1, !dbg !2113
  %1399 = load i8* %1398, align 1, !dbg !2113
  %1400 = sext i8 %1399 to i32, !dbg !2113
  %1401 = icmp ne i32 %1400, 10, !dbg !2113
  br i1 %1401, label %1402, label %1467, !dbg !2112

; <label>:1402                                    ; preds = %1396
  br label %1403, !dbg !2115

; <label>:1403                                    ; preds = %1526, %1402
  br label %1404, !dbg !2117

; <label>:1404                                    ; preds = %1463, %1403
  %1405 = load i8** %t, align 8, !dbg !2119
  %1406 = load i8** %5, align 8, !dbg !2122
  %1407 = load %struct.regexp** %2, align 8, !dbg !2123
  %1408 = getelementptr inbounds %struct.regexp* %1407, i32 0, i32 10, !dbg !2123
  %1409 = load i32* %1408, align 4, !dbg !2123
  %1410 = sext i32 %1409 to i64, !dbg !2122
  %1411 = sub i64 0, %1410, !dbg !2122
  %1412 = getelementptr inbounds i8* %1406, i64 %1411, !dbg !2122
  %1413 = icmp ult i8* %1405, %1412, !dbg !2124
  br i1 %1413, label %1414, label %1466, !dbg !2117

; <label>:1414                                    ; preds = %1404
  %1415 = load i8** %t, align 8, !dbg !2125
  %1416 = load i8* %1415, align 1, !dbg !2128
  %1417 = sext i8 %1416 to i32, !dbg !2128
  %1418 = icmp eq i32 %1417, 10, !dbg !2128
  br i1 %1418, label %1419, label %1463, !dbg !2129

; <label>:1419                                    ; preds = %1414
  %1420 = load i8** %t, align 8, !dbg !2130
  %1421 = load i8** %check_at, align 8, !dbg !2133
  %1422 = load %struct.regexp** %2, align 8, !dbg !2134
  %1423 = getelementptr inbounds %struct.regexp* %1422, i32 0, i32 3, !dbg !2134
  %1424 = load %struct.reg_substr_data** %1423, align 8, !dbg !2134
  %1425 = getelementptr inbounds %struct.reg_substr_data* %1424, i32 0, i32 0, !dbg !2134
  %1426 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1425, i32 0, i64 2, !dbg !2134
  %1427 = getelementptr inbounds %struct.reg_substr_datum* %1426, i32 0, i32 0, !dbg !2134
  %1428 = load i32* %1427, align 4, !dbg !2134
  %1429 = sext i32 %1428 to i64, !dbg !2133
  %1430 = sub i64 0, %1429, !dbg !2133
  %1431 = getelementptr inbounds i8* %1421, i64 %1430, !dbg !2133
  %1432 = icmp ult i8* %1420, %1431, !dbg !2130
  br i1 %1432, label %1433, label %1460, !dbg !2135

; <label>:1433                                    ; preds = %1419
  %1434 = load i32* %do_utf8, align 4, !dbg !2136
  %1435 = icmp ne i32 %1434, 0, !dbg !2139
  br i1 %1435, label %1436, label %1445, !dbg !2139

; <label>:1436                                    ; preds = %1433
  %1437 = load %struct.regexp** %2, align 8, !dbg !2140
  %1438 = getelementptr inbounds %struct.regexp* %1437, i32 0, i32 3, !dbg !2140
  %1439 = load %struct.reg_substr_data** %1438, align 8, !dbg !2140
  %1440 = getelementptr inbounds %struct.reg_substr_data* %1439, i32 0, i32 0, !dbg !2140
  %1441 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1440, i32 0, i64 0, !dbg !2140
  %1442 = getelementptr inbounds %struct.reg_substr_datum* %1441, i32 0, i32 3, !dbg !2140
  %1443 = load %struct.sv** %1442, align 8, !dbg !2140
  %1444 = icmp ne %struct.sv* %1443, null, !dbg !2139
  br i1 %1444, label %1454, label %1457, !dbg !2139

; <label>:1445                                    ; preds = %1433
  %1446 = load %struct.regexp** %2, align 8, !dbg !2142
  %1447 = getelementptr inbounds %struct.regexp* %1446, i32 0, i32 3, !dbg !2142
  %1448 = load %struct.reg_substr_data** %1447, align 8, !dbg !2142
  %1449 = getelementptr inbounds %struct.reg_substr_data* %1448, i32 0, i32 0, !dbg !2142
  %1450 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1449, i32 0, i64 0, !dbg !2142
  %1451 = getelementptr inbounds %struct.reg_substr_datum* %1450, i32 0, i32 2, !dbg !2142
  %1452 = load %struct.sv** %1451, align 8, !dbg !2142
  %1453 = icmp ne %struct.sv* %1452, null, !dbg !2139
  br i1 %1453, label %1454, label %1457, !dbg !2139

; <label>:1454                                    ; preds = %1445, %1436
  %1455 = load i8** %t, align 8, !dbg !2144
  %1456 = getelementptr inbounds i8* %1455, i64 1, !dbg !2144
  store i8* %1456, i8** %4, align 8, !dbg !2146
  br label %743, !dbg !2147

; <label>:1457                                    ; preds = %1445, %1436
  %1458 = load i8** %t, align 8, !dbg !2148
  %1459 = getelementptr inbounds i8* %1458, i64 1, !dbg !2148
  store i8* %1459, i8** %s, align 8, !dbg !2149
  br label %1470, !dbg !2150

; <label>:1460                                    ; preds = %1419
  %1461 = load i8** %t, align 8, !dbg !2151
  %1462 = getelementptr inbounds i8* %1461, i64 1, !dbg !2151
  store i8* %1462, i8** %s, align 8, !dbg !2152
  store i8* %1462, i8** %4, align 8, !dbg !2153
  store i8* %1462, i8** %other_last, align 8, !dbg !2154
  br label %503, !dbg !2155

; <label>:1463                                    ; preds = %1414
  %1464 = load i8** %t, align 8, !dbg !2156
  %1465 = getelementptr inbounds i8* %1464, i32 1, !dbg !2156
  store i8* %1465, i8** %t, align 8, !dbg !2156
  br label %1404, !dbg !2117

; <label>:1466                                    ; preds = %1404
  br label %2071, !dbg !2157

; <label>:1467                                    ; preds = %1396, %1393
  br label %1468

; <label>:1468                                    ; preds = %1467
  %1469 = load i8** %t, align 8, !dbg !2158
  store i8* %1469, i8** %s, align 8, !dbg !2159
  br label %1470, !dbg !2159

; <label>:1470                                    ; preds = %1468, %1457
  %1471 = load i32* %do_utf8, align 4, !dbg !2160
  %1472 = icmp ne i32 %1471, 0, !dbg !2160
  br i1 %1472, label %1473, label %1481, !dbg !2160

; <label>:1473                                    ; preds = %1470
  %1474 = load %struct.regexp** %2, align 8, !dbg !2161
  %1475 = getelementptr inbounds %struct.regexp* %1474, i32 0, i32 3, !dbg !2161
  %1476 = load %struct.reg_substr_data** %1475, align 8, !dbg !2161
  %1477 = getelementptr inbounds %struct.reg_substr_data* %1476, i32 0, i32 0, !dbg !2161
  %1478 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1477, i32 0, i64 2, !dbg !2161
  %1479 = getelementptr inbounds %struct.reg_substr_datum* %1478, i32 0, i32 3, !dbg !2161
  %1480 = load %struct.sv** %1479, align 8, !dbg !2161
  br label %1489, !dbg !2161

; <label>:1481                                    ; preds = %1470
  %1482 = load %struct.regexp** %2, align 8, !dbg !2163
  %1483 = getelementptr inbounds %struct.regexp* %1482, i32 0, i32 3, !dbg !2163
  %1484 = load %struct.reg_substr_data** %1483, align 8, !dbg !2163
  %1485 = getelementptr inbounds %struct.reg_substr_data* %1484, i32 0, i32 0, !dbg !2163
  %1486 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1485, i32 0, i64 2, !dbg !2163
  %1487 = getelementptr inbounds %struct.reg_substr_datum* %1486, i32 0, i32 2, !dbg !2163
  %1488 = load %struct.sv** %1487, align 8, !dbg !2163
  br label %1489, !dbg !2163

; <label>:1489                                    ; preds = %1481, %1473
  %1490 = phi %struct.sv* [ %1480, %1473 ], [ %1488, %1481 ], !dbg !2160
  %1491 = getelementptr inbounds %struct.sv* %1490, i32 0, i32 0, !dbg !2165
  %1492 = load i8** %1491, align 8, !dbg !2165
  %1493 = bitcast i8* %1492 to %struct.xpvbm*, !dbg !2165
  %1494 = getelementptr inbounds %struct.xpvbm* %1493, i32 0, i32 7, !dbg !2168
  %1495 = load i32* %1494, align 4, !dbg !2168
  %1496 = add nsw i32 %1495, 1, !dbg !2168
  store i32 %1496, i32* %1494, align 4, !dbg !2168
  br label %1713, !dbg !2169

; <label>:1497                                    ; preds = %1388, %1373, %1344
  br label %1498, !dbg !2170

; <label>:1498                                    ; preds = %1497, %1342, %1112
  %1499 = load i32* %ml_anch, align 4, !dbg !2171
  %1500 = icmp ne i32 %1499, 0, !dbg !2174
  br i1 %1500, label %1501, label %1528, !dbg !2174

; <label>:1501                                    ; preds = %1498
  %1502 = load %struct.sv** %3, align 8, !dbg !2175
  %1503 = icmp ne %struct.sv* %1502, null, !dbg !2174
  br i1 %1503, label %1504, label %1528, !dbg !2174

; <label>:1504                                    ; preds = %1501
  %1505 = load %struct.sv** %3, align 8, !dbg !2177
  %1506 = getelementptr inbounds %struct.sv* %1505, i32 0, i32 2, !dbg !2177
  %1507 = load i32* %1506, align 4, !dbg !2177
  %1508 = and i32 %1507, 524288, !dbg !2177
  %1509 = icmp ne i32 %1508, 0, !dbg !2174
  br i1 %1509, label %1528, label %1510, !dbg !2174

; <label>:1510                                    ; preds = %1504
  %1511 = load i8** %4, align 8, !dbg !2179
  %1512 = load i8** %strbeg, align 8, !dbg !2180
  %1513 = icmp ne i8* %1511, %1512, !dbg !2179
  br i1 %1513, label %1514, label %1528, !dbg !2174

; <label>:1514                                    ; preds = %1510
  %1515 = load i8** %4, align 8, !dbg !2181
  %1516 = getelementptr inbounds i8* %1515, i64 -1, !dbg !2181
  %1517 = load i8* %1516, align 1, !dbg !2181
  %1518 = sext i8 %1517 to i32, !dbg !2181
  %1519 = icmp ne i32 %1518, 10, !dbg !2181
  br i1 %1519, label %1520, label %1528, !dbg !2174

; <label>:1520                                    ; preds = %1514
  %1521 = load %struct.regexp** %2, align 8, !dbg !2182
  %1522 = getelementptr inbounds %struct.regexp* %1521, i32 0, i32 15, !dbg !2182
  %1523 = load i32* %1522, align 4, !dbg !2182
  %1524 = and i32 %1523, 32, !dbg !2182
  %1525 = icmp ne i32 %1524, 0, !dbg !2174
  br i1 %1525, label %1528, label %1526, !dbg !2174

; <label>:1526                                    ; preds = %1520
  %1527 = load i8** %4, align 8, !dbg !2183
  store i8* %1527, i8** %t, align 8, !dbg !2185
  br label %1403, !dbg !2186

; <label>:1528                                    ; preds = %1520, %1514, %1510, %1504, %1501, %1498
  br label %1529, !dbg !2187

; <label>:1529                                    ; preds = %1528, %361
  %1530 = load %struct.regexp** %2, align 8, !dbg !2188
  %1531 = getelementptr inbounds %struct.regexp* %1530, i32 0, i32 15, !dbg !2188
  %1532 = load i32* %1531, align 4, !dbg !2188
  %1533 = and i32 %1532, 131072, !dbg !2188
  %1534 = icmp ne i32 %1533, 0, !dbg !2190
  br i1 %1534, label %1710, label %1535, !dbg !2190

; <label>:1535                                    ; preds = %1529
  %1536 = load i32* %do_utf8, align 4, !dbg !2191
  %1537 = icmp ne i32 %1536, 0, !dbg !2190
  br i1 %1537, label %1538, label %1578, !dbg !2190

; <label>:1538                                    ; preds = %1535
  %1539 = load %struct.regexp** %2, align 8, !dbg !2192
  %1540 = getelementptr inbounds %struct.regexp* %1539, i32 0, i32 3, !dbg !2192
  %1541 = load %struct.reg_substr_data** %1540, align 8, !dbg !2192
  %1542 = getelementptr inbounds %struct.reg_substr_data* %1541, i32 0, i32 0, !dbg !2192
  %1543 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1542, i32 0, i64 2, !dbg !2192
  %1544 = getelementptr inbounds %struct.reg_substr_datum* %1543, i32 0, i32 3, !dbg !2192
  %1545 = load %struct.sv** %1544, align 8, !dbg !2192
  %1546 = icmp ne %struct.sv* %1545, null, !dbg !2190
  br i1 %1546, label %1547, label %1710, !dbg !2190

; <label>:1547                                    ; preds = %1538
  %1548 = load %struct.regexp** %2, align 8, !dbg !2193
  %1549 = getelementptr inbounds %struct.regexp* %1548, i32 0, i32 3, !dbg !2193
  %1550 = load %struct.reg_substr_data** %1549, align 8, !dbg !2193
  %1551 = getelementptr inbounds %struct.reg_substr_data* %1550, i32 0, i32 0, !dbg !2193
  %1552 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1551, i32 0, i64 2, !dbg !2193
  %1553 = getelementptr inbounds %struct.reg_substr_datum* %1552, i32 0, i32 3, !dbg !2193
  %1554 = load %struct.sv** %1553, align 8, !dbg !2193
  %1555 = getelementptr inbounds %struct.sv* %1554, i32 0, i32 0, !dbg !2193
  %1556 = load i8** %1555, align 8, !dbg !2193
  %1557 = bitcast i8* %1556 to %struct.xpvbm*, !dbg !2193
  %1558 = getelementptr inbounds %struct.xpvbm* %1557, i32 0, i32 7, !dbg !2194
  %1559 = load i32* %1558, align 4, !dbg !2194
  %1560 = add nsw i32 %1559, -1, !dbg !2194
  store i32 %1560, i32* %1558, align 4, !dbg !2194
  %1561 = icmp slt i32 %1560, 0, !dbg !2194
  br i1 %1561, label %1562, label %1710, !dbg !2190

; <label>:1562                                    ; preds = %1547
  %1563 = load %struct.regexp** %2, align 8, !dbg !2195
  %1564 = getelementptr inbounds %struct.regexp* %1563, i32 0, i32 3, !dbg !2195
  %1565 = load %struct.reg_substr_data** %1564, align 8, !dbg !2195
  %1566 = getelementptr inbounds %struct.reg_substr_data* %1565, i32 0, i32 0, !dbg !2195
  %1567 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1566, i32 0, i64 2, !dbg !2195
  %1568 = getelementptr inbounds %struct.reg_substr_datum* %1567, i32 0, i32 3, !dbg !2195
  %1569 = load %struct.sv** %1568, align 8, !dbg !2195
  %1570 = load %struct.regexp** %2, align 8, !dbg !2196
  %1571 = getelementptr inbounds %struct.regexp* %1570, i32 0, i32 3, !dbg !2196
  %1572 = load %struct.reg_substr_data** %1571, align 8, !dbg !2196
  %1573 = getelementptr inbounds %struct.reg_substr_data* %1572, i32 0, i32 0, !dbg !2196
  %1574 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1573, i32 0, i64 1, !dbg !2196
  %1575 = getelementptr inbounds %struct.reg_substr_datum* %1574, i32 0, i32 3, !dbg !2196
  %1576 = load %struct.sv** %1575, align 8, !dbg !2196
  %1577 = icmp eq %struct.sv* %1569, %1576, !dbg !2195
  br i1 %1577, label %1618, label %1710, !dbg !2190

; <label>:1578                                    ; preds = %1535
  %1579 = load %struct.regexp** %2, align 8, !dbg !2197
  %1580 = getelementptr inbounds %struct.regexp* %1579, i32 0, i32 3, !dbg !2197
  %1581 = load %struct.reg_substr_data** %1580, align 8, !dbg !2197
  %1582 = getelementptr inbounds %struct.reg_substr_data* %1581, i32 0, i32 0, !dbg !2197
  %1583 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1582, i32 0, i64 2, !dbg !2197
  %1584 = getelementptr inbounds %struct.reg_substr_datum* %1583, i32 0, i32 2, !dbg !2197
  %1585 = load %struct.sv** %1584, align 8, !dbg !2197
  %1586 = icmp ne %struct.sv* %1585, null, !dbg !2190
  br i1 %1586, label %1587, label %1710, !dbg !2190

; <label>:1587                                    ; preds = %1578
  %1588 = load %struct.regexp** %2, align 8, !dbg !2198
  %1589 = getelementptr inbounds %struct.regexp* %1588, i32 0, i32 3, !dbg !2198
  %1590 = load %struct.reg_substr_data** %1589, align 8, !dbg !2198
  %1591 = getelementptr inbounds %struct.reg_substr_data* %1590, i32 0, i32 0, !dbg !2198
  %1592 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1591, i32 0, i64 2, !dbg !2198
  %1593 = getelementptr inbounds %struct.reg_substr_datum* %1592, i32 0, i32 2, !dbg !2198
  %1594 = load %struct.sv** %1593, align 8, !dbg !2198
  %1595 = getelementptr inbounds %struct.sv* %1594, i32 0, i32 0, !dbg !2198
  %1596 = load i8** %1595, align 8, !dbg !2198
  %1597 = bitcast i8* %1596 to %struct.xpvbm*, !dbg !2198
  %1598 = getelementptr inbounds %struct.xpvbm* %1597, i32 0, i32 7, !dbg !2199
  %1599 = load i32* %1598, align 4, !dbg !2199
  %1600 = add nsw i32 %1599, -1, !dbg !2199
  store i32 %1600, i32* %1598, align 4, !dbg !2199
  %1601 = icmp slt i32 %1600, 0, !dbg !2199
  br i1 %1601, label %1602, label %1710, !dbg !2190

; <label>:1602                                    ; preds = %1587
  %1603 = load %struct.regexp** %2, align 8, !dbg !2200
  %1604 = getelementptr inbounds %struct.regexp* %1603, i32 0, i32 3, !dbg !2200
  %1605 = load %struct.reg_substr_data** %1604, align 8, !dbg !2200
  %1606 = getelementptr inbounds %struct.reg_substr_data* %1605, i32 0, i32 0, !dbg !2200
  %1607 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1606, i32 0, i64 2, !dbg !2200
  %1608 = getelementptr inbounds %struct.reg_substr_datum* %1607, i32 0, i32 2, !dbg !2200
  %1609 = load %struct.sv** %1608, align 8, !dbg !2200
  %1610 = load %struct.regexp** %2, align 8, !dbg !2201
  %1611 = getelementptr inbounds %struct.regexp* %1610, i32 0, i32 3, !dbg !2201
  %1612 = load %struct.reg_substr_data** %1611, align 8, !dbg !2201
  %1613 = getelementptr inbounds %struct.reg_substr_data* %1612, i32 0, i32 0, !dbg !2201
  %1614 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1613, i32 0, i64 1, !dbg !2201
  %1615 = getelementptr inbounds %struct.reg_substr_datum* %1614, i32 0, i32 2, !dbg !2201
  %1616 = load %struct.sv** %1615, align 8, !dbg !2201
  %1617 = icmp eq %struct.sv* %1609, %1616, !dbg !2200
  br i1 %1617, label %1618, label %1710, !dbg !2190

; <label>:1618                                    ; preds = %1602, %1562
  %1619 = load i32* %do_utf8, align 4, !dbg !2202
  %1620 = icmp ne i32 %1619, 0, !dbg !2202
  br i1 %1620, label %1621, label %1629, !dbg !2202

; <label>:1621                                    ; preds = %1618
  %1622 = load %struct.regexp** %2, align 8, !dbg !2204
  %1623 = getelementptr inbounds %struct.regexp* %1622, i32 0, i32 3, !dbg !2204
  %1624 = load %struct.reg_substr_data** %1623, align 8, !dbg !2204
  %1625 = getelementptr inbounds %struct.reg_substr_data* %1624, i32 0, i32 0, !dbg !2204
  %1626 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1625, i32 0, i64 2, !dbg !2204
  %1627 = getelementptr inbounds %struct.reg_substr_datum* %1626, i32 0, i32 3, !dbg !2204
  %1628 = load %struct.sv** %1627, align 8, !dbg !2204
  br label %1637, !dbg !2204

; <label>:1629                                    ; preds = %1618
  %1630 = load %struct.regexp** %2, align 8, !dbg !2206
  %1631 = getelementptr inbounds %struct.regexp* %1630, i32 0, i32 3, !dbg !2206
  %1632 = load %struct.reg_substr_data** %1631, align 8, !dbg !2206
  %1633 = getelementptr inbounds %struct.reg_substr_data* %1632, i32 0, i32 0, !dbg !2206
  %1634 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1633, i32 0, i64 2, !dbg !2206
  %1635 = getelementptr inbounds %struct.reg_substr_datum* %1634, i32 0, i32 2, !dbg !2206
  %1636 = load %struct.sv** %1635, align 8, !dbg !2206
  br label %1637, !dbg !2206

; <label>:1637                                    ; preds = %1629, %1621
  %1638 = phi %struct.sv* [ %1628, %1621 ], [ %1636, %1629 ], !dbg !2202
  call void @Perl_sv_free(%struct.sv* %1638), !dbg !2208
  %1639 = load i32* %do_utf8, align 4, !dbg !2211
  %1640 = icmp ne i32 %1639, 0, !dbg !2213
  br i1 %1640, label %1641, label %1650, !dbg !2213

; <label>:1641                                    ; preds = %1637
  %1642 = load %struct.regexp** %2, align 8, !dbg !2214
  %1643 = getelementptr inbounds %struct.regexp* %1642, i32 0, i32 3, !dbg !2214
  %1644 = load %struct.reg_substr_data** %1643, align 8, !dbg !2214
  %1645 = getelementptr inbounds %struct.reg_substr_data* %1644, i32 0, i32 0, !dbg !2214
  %1646 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1645, i32 0, i64 2, !dbg !2214
  %1647 = getelementptr inbounds %struct.reg_substr_datum* %1646, i32 0, i32 2, !dbg !2214
  %1648 = load %struct.sv** %1647, align 8, !dbg !2214
  %1649 = icmp ne %struct.sv* %1648, null, !dbg !2213
  br i1 %1649, label %1659, label %1680, !dbg !2213

; <label>:1650                                    ; preds = %1637
  %1651 = load %struct.regexp** %2, align 8, !dbg !2216
  %1652 = getelementptr inbounds %struct.regexp* %1651, i32 0, i32 3, !dbg !2216
  %1653 = load %struct.reg_substr_data** %1652, align 8, !dbg !2216
  %1654 = getelementptr inbounds %struct.reg_substr_data* %1653, i32 0, i32 0, !dbg !2216
  %1655 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1654, i32 0, i64 2, !dbg !2216
  %1656 = getelementptr inbounds %struct.reg_substr_datum* %1655, i32 0, i32 3, !dbg !2216
  %1657 = load %struct.sv** %1656, align 8, !dbg !2216
  %1658 = icmp ne %struct.sv* %1657, null, !dbg !2213
  br i1 %1658, label %1659, label %1680, !dbg !2213

; <label>:1659                                    ; preds = %1650, %1641
  %1660 = load i32* %do_utf8, align 4, !dbg !2218
  %1661 = icmp ne i32 %1660, 0, !dbg !2218
  br i1 %1661, label %1662, label %1670, !dbg !2218

; <label>:1662                                    ; preds = %1659
  %1663 = load %struct.regexp** %2, align 8, !dbg !2219
  %1664 = getelementptr inbounds %struct.regexp* %1663, i32 0, i32 3, !dbg !2219
  %1665 = load %struct.reg_substr_data** %1664, align 8, !dbg !2219
  %1666 = getelementptr inbounds %struct.reg_substr_data* %1665, i32 0, i32 0, !dbg !2219
  %1667 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1666, i32 0, i64 2, !dbg !2219
  %1668 = getelementptr inbounds %struct.reg_substr_datum* %1667, i32 0, i32 2, !dbg !2219
  %1669 = load %struct.sv** %1668, align 8, !dbg !2219
  br label %1678, !dbg !2219

; <label>:1670                                    ; preds = %1659
  %1671 = load %struct.regexp** %2, align 8, !dbg !2220
  %1672 = getelementptr inbounds %struct.regexp* %1671, i32 0, i32 3, !dbg !2220
  %1673 = load %struct.reg_substr_data** %1672, align 8, !dbg !2220
  %1674 = getelementptr inbounds %struct.reg_substr_data* %1673, i32 0, i32 0, !dbg !2220
  %1675 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1674, i32 0, i64 2, !dbg !2220
  %1676 = getelementptr inbounds %struct.reg_substr_datum* %1675, i32 0, i32 3, !dbg !2220
  %1677 = load %struct.sv** %1676, align 8, !dbg !2220
  br label %1678, !dbg !2220

; <label>:1678                                    ; preds = %1670, %1662
  %1679 = phi %struct.sv* [ %1669, %1662 ], [ %1677, %1670 ], !dbg !2218
  call void @Perl_sv_free(%struct.sv* %1679), !dbg !2221
  br label %1680, !dbg !2221

; <label>:1680                                    ; preds = %1678, %1650, %1641
  %1681 = load %struct.regexp** %2, align 8, !dbg !2224
  %1682 = getelementptr inbounds %struct.regexp* %1681, i32 0, i32 3, !dbg !2224
  %1683 = load %struct.reg_substr_data** %1682, align 8, !dbg !2224
  %1684 = getelementptr inbounds %struct.reg_substr_data* %1683, i32 0, i32 0, !dbg !2224
  %1685 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1684, i32 0, i64 2, !dbg !2224
  %1686 = getelementptr inbounds %struct.reg_substr_datum* %1685, i32 0, i32 3, !dbg !2224
  store %struct.sv* null, %struct.sv** %1686, align 8, !dbg !2224
  %1687 = load %struct.regexp** %2, align 8, !dbg !2225
  %1688 = getelementptr inbounds %struct.regexp* %1687, i32 0, i32 3, !dbg !2225
  %1689 = load %struct.reg_substr_data** %1688, align 8, !dbg !2225
  %1690 = getelementptr inbounds %struct.reg_substr_data* %1689, i32 0, i32 0, !dbg !2225
  %1691 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1690, i32 0, i64 2, !dbg !2225
  %1692 = getelementptr inbounds %struct.reg_substr_datum* %1691, i32 0, i32 2, !dbg !2225
  store %struct.sv* null, %struct.sv** %1692, align 8, !dbg !2225
  %1693 = load %struct.regexp** %2, align 8, !dbg !2226
  %1694 = getelementptr inbounds %struct.regexp* %1693, i32 0, i32 3, !dbg !2226
  %1695 = load %struct.reg_substr_data** %1694, align 8, !dbg !2226
  %1696 = getelementptr inbounds %struct.reg_substr_data* %1695, i32 0, i32 0, !dbg !2226
  %1697 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1696, i32 0, i64 1, !dbg !2226
  %1698 = getelementptr inbounds %struct.reg_substr_datum* %1697, i32 0, i32 3, !dbg !2226
  store %struct.sv* null, %struct.sv** %1698, align 8, !dbg !2226
  %1699 = load %struct.regexp** %2, align 8, !dbg !2227
  %1700 = getelementptr inbounds %struct.regexp* %1699, i32 0, i32 3, !dbg !2227
  %1701 = load %struct.reg_substr_data** %1700, align 8, !dbg !2227
  %1702 = getelementptr inbounds %struct.reg_substr_data* %1701, i32 0, i32 0, !dbg !2227
  %1703 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1702, i32 0, i64 1, !dbg !2227
  %1704 = getelementptr inbounds %struct.reg_substr_datum* %1703, i32 0, i32 2, !dbg !2227
  store %struct.sv* null, %struct.sv** %1704, align 8, !dbg !2227
  store %struct.sv* null, %struct.sv** %check, align 8, !dbg !2228
  %1705 = load i8** %4, align 8, !dbg !2229
  store i8* %1705, i8** %s, align 8, !dbg !2230
  %1706 = load %struct.regexp** %2, align 8, !dbg !2231
  %1707 = getelementptr inbounds %struct.regexp* %1706, i32 0, i32 15, !dbg !2231
  %1708 = load i32* %1707, align 4, !dbg !2231
  %1709 = and i32 %1708, -3145729, !dbg !2231
  store i32 %1709, i32* %1707, align 4, !dbg !2231
  br label %1712, !dbg !2232

; <label>:1710                                    ; preds = %1602, %1587, %1578, %1562, %1547, %1538, %1529
  %1711 = load i8** %4, align 8, !dbg !2233
  store i8* %1711, i8** %s, align 8, !dbg !2234
  br label %1712

; <label>:1712                                    ; preds = %1710, %1680
  br label %1713

; <label>:1713                                    ; preds = %1712, %1489
  %1714 = load %struct.regexp** %2, align 8, !dbg !2235
  %1715 = getelementptr inbounds %struct.regexp* %1714, i32 0, i32 2, !dbg !2235
  %1716 = load %struct.regnode** %1715, align 8, !dbg !2235
  %1717 = icmp ne %struct.regnode* %1716, null, !dbg !2237
  br i1 %1717, label %1718, label %2068, !dbg !2237

; <label>:1718                                    ; preds = %1713
  call void @llvm.dbg.declare(metadata i8** %str, metadata !2238, metadata !566), !dbg !2240
  %1719 = load %struct.regexp** %2, align 8, !dbg !2241
  %1720 = getelementptr inbounds %struct.regexp* %1719, i32 0, i32 2, !dbg !2241
  %1721 = load %struct.regnode** %1720, align 8, !dbg !2241
  %1722 = bitcast %struct.regnode* %1721 to %struct.regnode_string*, !dbg !2241
  %1723 = getelementptr inbounds %struct.regnode_string* %1722, i32 0, i32 3, !dbg !2241
  %1724 = getelementptr inbounds [1 x i8]* %1723, i32 0, i32 0, !dbg !2241
  store i8* %1724, i8** %str, align 8, !dbg !2240
  call void @llvm.dbg.declare(metadata i32* %cl_l, metadata !2242, metadata !566), !dbg !2243
  %1725 = load %struct.regexp** %2, align 8, !dbg !2244
  %1726 = getelementptr inbounds %struct.regexp* %1725, i32 0, i32 2, !dbg !2244
  %1727 = load %struct.regnode** %1726, align 8, !dbg !2244
  %1728 = getelementptr inbounds %struct.regnode* %1727, i32 0, i32 1, !dbg !2244
  %1729 = load i8* %1728, align 1, !dbg !2244
  %1730 = zext i8 %1729 to i64, !dbg !2245
  %1731 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %1730, !dbg !2245
  %1732 = load i8* %1731, align 1, !dbg !2245
  %1733 = zext i8 %1732 to i32, !dbg !2245
  %1734 = icmp eq i32 %1733, 33, !dbg !2245
  br i1 %1734, label %1735, label %1769, !dbg !2245

; <label>:1735                                    ; preds = %1718
  %1736 = load i8* @PL_reg_match_utf8, align 1, !dbg !2246
  %1737 = sext i8 %1736 to i32, !dbg !2246
  %1738 = icmp ne i32 %1737, 0, !dbg !2246
  br i1 %1738, label %1739, label %1752, !dbg !2246

; <label>:1739                                    ; preds = %1735
  %1740 = load i8** %str, align 8, !dbg !2247
  %1741 = load %struct.regexp** %2, align 8, !dbg !2247
  %1742 = getelementptr inbounds %struct.regexp* %1741, i32 0, i32 2, !dbg !2247
  %1743 = load %struct.regnode** %1742, align 8, !dbg !2247
  %1744 = bitcast %struct.regnode* %1743 to %struct.regnode_string*, !dbg !2247
  %1745 = getelementptr inbounds %struct.regnode_string* %1744, i32 0, i32 0, !dbg !2247
  %1746 = load i8* %1745, align 1, !dbg !2247
  %1747 = zext i8 %1746 to i32, !dbg !2247
  %1748 = sext i32 %1747 to i64, !dbg !2247
  %1749 = getelementptr inbounds i8* %1740, i64 %1748, !dbg !2247
  %1750 = load i8** %str, align 8, !dbg !2247
  %1751 = call i64 @Perl_utf8_distance(i8* %1749, i8* %1750), !dbg !2247
  br label %1767, !dbg !2247

; <label>:1752                                    ; preds = %1735
  %1753 = load i8** %str, align 8, !dbg !2249
  %1754 = load %struct.regexp** %2, align 8, !dbg !2249
  %1755 = getelementptr inbounds %struct.regexp* %1754, i32 0, i32 2, !dbg !2249
  %1756 = load %struct.regnode** %1755, align 8, !dbg !2249
  %1757 = bitcast %struct.regnode* %1756 to %struct.regnode_string*, !dbg !2249
  %1758 = getelementptr inbounds %struct.regnode_string* %1757, i32 0, i32 0, !dbg !2249
  %1759 = load i8* %1758, align 1, !dbg !2249
  %1760 = zext i8 %1759 to i32, !dbg !2249
  %1761 = sext i32 %1760 to i64, !dbg !2249
  %1762 = getelementptr inbounds i8* %1753, i64 %1761, !dbg !2249
  %1763 = load i8** %str, align 8, !dbg !2249
  %1764 = ptrtoint i8* %1762 to i64, !dbg !2249
  %1765 = ptrtoint i8* %1763 to i64, !dbg !2249
  %1766 = sub i64 %1764, %1765, !dbg !2249
  br label %1767, !dbg !2249

; <label>:1767                                    ; preds = %1752, %1739
  %1768 = phi i64 [ %1751, %1739 ], [ %1766, %1752 ], !dbg !2246
  br label %1770, !dbg !2245

; <label>:1769                                    ; preds = %1718
  br label %1770, !dbg !2251

; <label>:1770                                    ; preds = %1769, %1767
  %1771 = phi i64 [ %1768, %1767 ], [ 1, %1769 ], !dbg !2245
  %1772 = trunc i64 %1771 to i32, !dbg !2252
  store i32 %1772, i32* %cl_l, align 4, !dbg !2243
  call void @llvm.dbg.declare(metadata i8** %endpos, metadata !2254, metadata !566), !dbg !2255
  %1773 = load %struct.regexp** %2, align 8, !dbg !2256
  %1774 = getelementptr inbounds %struct.regexp* %1773, i32 0, i32 3, !dbg !2256
  %1775 = load %struct.reg_substr_data** %1774, align 8, !dbg !2256
  %1776 = getelementptr inbounds %struct.reg_substr_data* %1775, i32 0, i32 0, !dbg !2256
  %1777 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1776, i32 0, i64 0, !dbg !2256
  %1778 = getelementptr inbounds %struct.reg_substr_datum* %1777, i32 0, i32 2, !dbg !2256
  %1779 = load %struct.sv** %1778, align 8, !dbg !2256
  %1780 = icmp ne %struct.sv* %1779, null, !dbg !2257
  br i1 %1780, label %1793, label %1781, !dbg !2257

; <label>:1781                                    ; preds = %1770
  %1782 = load %struct.regexp** %2, align 8, !dbg !2258
  %1783 = getelementptr inbounds %struct.regexp* %1782, i32 0, i32 3, !dbg !2258
  %1784 = load %struct.reg_substr_data** %1783, align 8, !dbg !2258
  %1785 = getelementptr inbounds %struct.reg_substr_data* %1784, i32 0, i32 0, !dbg !2258
  %1786 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1785, i32 0, i64 0, !dbg !2258
  %1787 = getelementptr inbounds %struct.reg_substr_datum* %1786, i32 0, i32 3, !dbg !2258
  %1788 = load %struct.sv** %1787, align 8, !dbg !2258
  %1789 = icmp ne %struct.sv* %1788, null, !dbg !2257
  br i1 %1789, label %1793, label %1790, !dbg !2257

; <label>:1790                                    ; preds = %1781
  %1791 = load i32* %ml_anch, align 4, !dbg !2259
  %1792 = icmp ne i32 %1791, 0, !dbg !2257
  br i1 %1792, label %1793, label %1827, !dbg !2257

; <label>:1793                                    ; preds = %1790, %1781, %1770
  %1794 = load i8* @PL_reg_match_utf8, align 1, !dbg !2260
  %1795 = sext i8 %1794 to i32, !dbg !2260
  %1796 = icmp ne i32 %1795, 0, !dbg !2260
  br i1 %1796, label %1797, label %1812, !dbg !2260

; <label>:1797                                    ; preds = %1793
  %1798 = load i8** %s, align 8, !dbg !2261
  %1799 = load %struct.regexp** %2, align 8, !dbg !2261
  %1800 = getelementptr inbounds %struct.regexp* %1799, i32 0, i32 10, !dbg !2261
  %1801 = load i32* %1800, align 4, !dbg !2261
  %1802 = icmp ne i32 %1801, 0, !dbg !2261
  br i1 %1802, label %1803, label %1805, !dbg !2261

; <label>:1803                                    ; preds = %1797
  %1804 = load i32* %cl_l, align 4, !dbg !2262
  br label %1806, !dbg !2262

; <label>:1805                                    ; preds = %1797
  br label %1806, !dbg !2264

; <label>:1806                                    ; preds = %1805, %1803
  %1807 = phi i32 [ %1804, %1803 ], [ 0, %1805 ], !dbg !2260
  %1808 = load i8** %5, align 8, !dbg !2266
  %1809 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1798, i32 %1807, i8* %1808), !dbg !2266
  %1810 = sext i32 %1809 to i64, !dbg !2266
  %1811 = inttoptr i64 %1810 to i8*, !dbg !2266
  br label %1825, !dbg !2266

; <label>:1812                                    ; preds = %1793
  %1813 = load i8** %s, align 8, !dbg !2269
  %1814 = load %struct.regexp** %2, align 8, !dbg !2269
  %1815 = getelementptr inbounds %struct.regexp* %1814, i32 0, i32 10, !dbg !2269
  %1816 = load i32* %1815, align 4, !dbg !2269
  %1817 = icmp ne i32 %1816, 0, !dbg !2269
  br i1 %1817, label %1818, label %1820, !dbg !2269

; <label>:1818                                    ; preds = %1812
  %1819 = load i32* %cl_l, align 4, !dbg !2270
  br label %1821, !dbg !2270

; <label>:1820                                    ; preds = %1812
  br label %1821, !dbg !2272

; <label>:1821                                    ; preds = %1820, %1818
  %1822 = phi i32 [ %1819, %1818 ], [ 0, %1820 ], !dbg !2260
  %1823 = sext i32 %1822 to i64, !dbg !2274
  %1824 = getelementptr inbounds i8* %1813, i64 %1823, !dbg !2274
  br label %1825, !dbg !2274

; <label>:1825                                    ; preds = %1821, %1806
  %1826 = phi i8* [ %1811, %1806 ], [ %1824, %1821 ], !dbg !2260
  br label %1903, !dbg !2257

; <label>:1827                                    ; preds = %1790
  %1828 = load %struct.regexp** %2, align 8, !dbg !2277
  %1829 = getelementptr inbounds %struct.regexp* %1828, i32 0, i32 3, !dbg !2277
  %1830 = load %struct.reg_substr_data** %1829, align 8, !dbg !2277
  %1831 = getelementptr inbounds %struct.reg_substr_data* %1830, i32 0, i32 0, !dbg !2277
  %1832 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1831, i32 0, i64 1, !dbg !2277
  %1833 = getelementptr inbounds %struct.reg_substr_datum* %1832, i32 0, i32 2, !dbg !2277
  %1834 = load %struct.sv** %1833, align 8, !dbg !2277
  %1835 = icmp ne %struct.sv* %1834, null, !dbg !2277
  br i1 %1835, label %1845, label %1836, !dbg !2277

; <label>:1836                                    ; preds = %1827
  %1837 = load %struct.regexp** %2, align 8, !dbg !2278
  %1838 = getelementptr inbounds %struct.regexp* %1837, i32 0, i32 3, !dbg !2278
  %1839 = load %struct.reg_substr_data** %1838, align 8, !dbg !2278
  %1840 = getelementptr inbounds %struct.reg_substr_data* %1839, i32 0, i32 0, !dbg !2278
  %1841 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1840, i32 0, i64 1, !dbg !2278
  %1842 = getelementptr inbounds %struct.reg_substr_datum* %1841, i32 0, i32 3, !dbg !2278
  %1843 = load %struct.sv** %1842, align 8, !dbg !2278
  %1844 = icmp ne %struct.sv* %1843, null, !dbg !2277
  br i1 %1844, label %1845, label %1899, !dbg !2277

; <label>:1845                                    ; preds = %1836, %1827
  %1846 = load i8* @PL_reg_match_utf8, align 1, !dbg !2279
  %1847 = sext i8 %1846 to i32, !dbg !2279
  %1848 = icmp ne i32 %1847, 0, !dbg !2279
  br i1 %1848, label %1849, label %1874, !dbg !2279

; <label>:1849                                    ; preds = %1845
  %1850 = load i8* @PL_reg_match_utf8, align 1, !dbg !2280
  %1851 = sext i8 %1850 to i32, !dbg !2280
  %1852 = icmp ne i32 %1851, 0, !dbg !2280
  br i1 %1852, label %1853, label %1861, !dbg !2280

; <label>:1853                                    ; preds = %1849
  %1854 = load i8** %check_at, align 8, !dbg !2281
  %1855 = load i32* %start_shift, align 4, !dbg !2281
  %1856 = sub nsw i32 0, %1855, !dbg !2281
  %1857 = load i8** %strbeg, align 8, !dbg !2281
  %1858 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1854, i32 %1856, i8* %1857), !dbg !2281
  %1859 = sext i32 %1858 to i64, !dbg !2281
  %1860 = inttoptr i64 %1859 to i8*, !dbg !2281
  br label %1867, !dbg !2281

; <label>:1861                                    ; preds = %1849
  %1862 = load i8** %check_at, align 8, !dbg !2282
  %1863 = load i32* %start_shift, align 4, !dbg !2282
  %1864 = sub nsw i32 0, %1863, !dbg !2282
  %1865 = sext i32 %1864 to i64, !dbg !2282
  %1866 = getelementptr inbounds i8* %1862, i64 %1865, !dbg !2282
  br label %1867, !dbg !2282

; <label>:1867                                    ; preds = %1861, %1853
  %1868 = phi i8* [ %1860, %1853 ], [ %1866, %1861 ], !dbg !2279
  %1869 = load i32* %cl_l, align 4, !dbg !2283
  %1870 = load i8** %5, align 8, !dbg !2283
  %1871 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1868, i32 %1869, i8* %1870), !dbg !2283
  %1872 = sext i32 %1871 to i64, !dbg !2283
  %1873 = inttoptr i64 %1872 to i8*, !dbg !2283
  br label %1897, !dbg !2283

; <label>:1874                                    ; preds = %1845
  %1875 = load i8* @PL_reg_match_utf8, align 1, !dbg !2284
  %1876 = sext i8 %1875 to i32, !dbg !2284
  %1877 = icmp ne i32 %1876, 0, !dbg !2284
  br i1 %1877, label %1878, label %1886, !dbg !2284

; <label>:1878                                    ; preds = %1874
  %1879 = load i8** %check_at, align 8, !dbg !2285
  %1880 = load i32* %start_shift, align 4, !dbg !2285
  %1881 = sub nsw i32 0, %1880, !dbg !2285
  %1882 = load i8** %strbeg, align 8, !dbg !2285
  %1883 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1879, i32 %1881, i8* %1882), !dbg !2285
  %1884 = sext i32 %1883 to i64, !dbg !2285
  %1885 = inttoptr i64 %1884 to i8*, !dbg !2285
  br label %1892, !dbg !2285

; <label>:1886                                    ; preds = %1874
  %1887 = load i8** %check_at, align 8, !dbg !2286
  %1888 = load i32* %start_shift, align 4, !dbg !2286
  %1889 = sub nsw i32 0, %1888, !dbg !2286
  %1890 = sext i32 %1889 to i64, !dbg !2286
  %1891 = getelementptr inbounds i8* %1887, i64 %1890, !dbg !2286
  br label %1892, !dbg !2286

; <label>:1892                                    ; preds = %1886, %1878
  %1893 = phi i8* [ %1885, %1878 ], [ %1891, %1886 ], !dbg !2279
  %1894 = load i32* %cl_l, align 4, !dbg !2287
  %1895 = sext i32 %1894 to i64, !dbg !2287
  %1896 = getelementptr inbounds i8* %1893, i64 %1895, !dbg !2287
  br label %1897, !dbg !2287

; <label>:1897                                    ; preds = %1892, %1867
  %1898 = phi i8* [ %1873, %1867 ], [ %1896, %1892 ], !dbg !2279
  br label %1901, !dbg !2277

; <label>:1899                                    ; preds = %1836
  %1900 = load i8** %5, align 8, !dbg !2288
  br label %1901, !dbg !2277

; <label>:1901                                    ; preds = %1899, %1897
  %1902 = phi i8* [ %1898, %1897 ], [ %1900, %1899 ], !dbg !2277
  br label %1903, !dbg !2257

; <label>:1903                                    ; preds = %1901, %1825
  %1904 = phi i8* [ %1826, %1825 ], [ %1902, %1901 ], !dbg !2257
  store i8* %1904, i8** %endpos, align 8, !dbg !2289
  call void @llvm.dbg.declare(metadata i8** %startpos, metadata !2291, metadata !566), !dbg !2292
  %1905 = load i8** %strbeg, align 8, !dbg !2293
  store i8* %1905, i8** %startpos, align 8, !dbg !2292
  %1906 = load i8** %s, align 8, !dbg !2294
  store i8* %1906, i8** %t, align 8, !dbg !2295
  %1907 = load %struct.regexp** %2, align 8, !dbg !2296
  %1908 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %1907), !dbg !2297
  %1909 = load %struct.regexp** %2, align 8, !dbg !2298
  %1910 = load %struct.regexp** %2, align 8, !dbg !2299
  %1911 = getelementptr inbounds %struct.regexp* %1910, i32 0, i32 2, !dbg !2299
  %1912 = load %struct.regnode** %1911, align 8, !dbg !2299
  %1913 = load i8** %s, align 8, !dbg !2300
  %1914 = load i8** %endpos, align 8, !dbg !2301
  %1915 = load i8** %startpos, align 8, !dbg !2302
  %1916 = call i32 (%struct.regexp*, %struct.regnode*, i8*, i8*, i8*, i32, ...)* bitcast (i32 (...)* @find_byclass to i32 (%struct.regexp*, %struct.regnode*, i8*, i8*, i8*, i32, ...)*)(%struct.regexp* %1909, %struct.regnode* %1912, i8* %1913, i8* %1914, i8* %1915, i32 1), !dbg !2303
  %1917 = sext i32 %1916 to i64, !dbg !2303
  %1918 = inttoptr i64 %1917 to i8*, !dbg !2303
  store i8* %1918, i8** %s, align 8, !dbg !2304
  %1919 = load i8** %s, align 8, !dbg !2305
  %1920 = icmp ne i8* %1919, null, !dbg !2307
  br i1 %1920, label %2061, label %1921, !dbg !2307

; <label>:1921                                    ; preds = %1903
  %1922 = load i8** %endpos, align 8, !dbg !2308
  %1923 = load i8** %5, align 8, !dbg !2311
  %1924 = icmp eq i8* %1922, %1923, !dbg !2308
  br i1 %1924, label %1925, label %1926, !dbg !2312

; <label>:1925                                    ; preds = %1921
  br label %2117, !dbg !2313

; <label>:1926                                    ; preds = %1921
  %1927 = load %struct.regexp** %2, align 8, !dbg !2315
  %1928 = getelementptr inbounds %struct.regexp* %1927, i32 0, i32 15, !dbg !2315
  %1929 = load i32* %1928, align 4, !dbg !2315
  %1930 = and i32 %1929, 15, !dbg !2315
  %1931 = icmp ne i32 %1930, 0, !dbg !2317
  br i1 %1931, label %1932, label %1936, !dbg !2317

; <label>:1932                                    ; preds = %1926
  %1933 = load i32* %ml_anch, align 4, !dbg !2318
  %1934 = icmp ne i32 %1933, 0, !dbg !2317
  br i1 %1934, label %1936, label %1935, !dbg !2317

; <label>:1935                                    ; preds = %1932
  br label %2117, !dbg !2320

; <label>:1936                                    ; preds = %1932, %1926
  %1937 = load %struct.regexp** %2, align 8, !dbg !2321
  %1938 = getelementptr inbounds %struct.regexp* %1937, i32 0, i32 3, !dbg !2321
  %1939 = load %struct.reg_substr_data** %1938, align 8, !dbg !2321
  %1940 = getelementptr inbounds %struct.reg_substr_data* %1939, i32 0, i32 0, !dbg !2321
  %1941 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1940, i32 0, i64 0, !dbg !2321
  %1942 = getelementptr inbounds %struct.reg_substr_datum* %1941, i32 0, i32 2, !dbg !2321
  %1943 = load %struct.sv** %1942, align 8, !dbg !2321
  %1944 = icmp ne %struct.sv* %1943, null, !dbg !2323
  br i1 %1944, label %1954, label %1945, !dbg !2323

; <label>:1945                                    ; preds = %1936
  %1946 = load %struct.regexp** %2, align 8, !dbg !2324
  %1947 = getelementptr inbounds %struct.regexp* %1946, i32 0, i32 3, !dbg !2324
  %1948 = load %struct.reg_substr_data** %1947, align 8, !dbg !2324
  %1949 = getelementptr inbounds %struct.reg_substr_data* %1948, i32 0, i32 0, !dbg !2324
  %1950 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1949, i32 0, i64 0, !dbg !2324
  %1951 = getelementptr inbounds %struct.reg_substr_datum* %1950, i32 0, i32 3, !dbg !2324
  %1952 = load %struct.sv** %1951, align 8, !dbg !2324
  %1953 = icmp ne %struct.sv* %1952, null, !dbg !2323
  br i1 %1953, label %1954, label %2022, !dbg !2323

; <label>:1954                                    ; preds = %1945, %1936
  %1955 = load i32* %do_utf8, align 4, !dbg !2326
  %1956 = icmp ne i32 %1955, 0, !dbg !2326
  br i1 %1956, label %1957, label %1965, !dbg !2326

; <label>:1957                                    ; preds = %1954
  %1958 = load %struct.regexp** %2, align 8, !dbg !2329
  %1959 = getelementptr inbounds %struct.regexp* %1958, i32 0, i32 3, !dbg !2329
  %1960 = load %struct.reg_substr_data** %1959, align 8, !dbg !2329
  %1961 = getelementptr inbounds %struct.reg_substr_data* %1960, i32 0, i32 0, !dbg !2329
  %1962 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1961, i32 0, i64 0, !dbg !2329
  %1963 = getelementptr inbounds %struct.reg_substr_datum* %1962, i32 0, i32 3, !dbg !2329
  %1964 = load %struct.sv** %1963, align 8, !dbg !2329
  br label %1973, !dbg !2326

; <label>:1965                                    ; preds = %1954
  %1966 = load %struct.regexp** %2, align 8, !dbg !2331
  %1967 = getelementptr inbounds %struct.regexp* %1966, i32 0, i32 3, !dbg !2331
  %1968 = load %struct.reg_substr_data** %1967, align 8, !dbg !2331
  %1969 = getelementptr inbounds %struct.reg_substr_data* %1968, i32 0, i32 0, !dbg !2331
  %1970 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1969, i32 0, i64 0, !dbg !2331
  %1971 = getelementptr inbounds %struct.reg_substr_datum* %1970, i32 0, i32 2, !dbg !2331
  %1972 = load %struct.sv** %1971, align 8, !dbg !2331
  br label %1973, !dbg !2326

; <label>:1973                                    ; preds = %1965, %1957
  %1974 = phi %struct.sv* [ %1964, %1957 ], [ %1972, %1965 ], !dbg !2326
  %1975 = load %struct.sv** %check, align 8, !dbg !2333
  %1976 = icmp eq %struct.sv* %1974, %1975, !dbg !2336
  br i1 %1976, label %1977, label %2008, !dbg !2337

; <label>:1977                                    ; preds = %1973
  br label %1978, !dbg !2338

; <label>:1978                                    ; preds = %2055, %1977
  %1979 = load i8* @PL_reg_match_utf8, align 1, !dbg !2340
  %1980 = sext i8 %1979 to i32, !dbg !2340
  %1981 = icmp ne i32 %1980, 0, !dbg !2340
  br i1 %1981, label %1982, label %1988, !dbg !2340

; <label>:1982                                    ; preds = %1978
  %1983 = load i8** %t, align 8, !dbg !2342
  %1984 = load i8** %5, align 8, !dbg !2342
  %1985 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1983, i32 1, i8* %1984), !dbg !2342
  %1986 = sext i32 %1985 to i64, !dbg !2342
  %1987 = inttoptr i64 %1986 to i8*, !dbg !2342
  br label %1991, !dbg !2342

; <label>:1988                                    ; preds = %1978
  %1989 = load i8** %t, align 8, !dbg !2344
  %1990 = getelementptr inbounds i8* %1989, i64 1, !dbg !2344
  br label %1991, !dbg !2344

; <label>:1991                                    ; preds = %1988, %1982
  %1992 = phi i8* [ %1987, %1982 ], [ %1990, %1988 ], !dbg !2340
  store i8* %1992, i8** %s, align 8, !dbg !2346
  %1993 = load i8** %s, align 8, !dbg !2349
  %1994 = load i32* %start_shift, align 4, !dbg !2351
  %1995 = sext i32 %1994 to i64, !dbg !2349
  %1996 = getelementptr inbounds i8* %1993, i64 %1995, !dbg !2349
  %1997 = load i32* %end_shift, align 4, !dbg !2352
  %1998 = sext i32 %1997 to i64, !dbg !2349
  %1999 = getelementptr inbounds i8* %1996, i64 %1998, !dbg !2349
  %2000 = load i8** %5, align 8, !dbg !2353
  %2001 = icmp ugt i8* %1999, %2000, !dbg !2349
  br i1 %2001, label %2002, label %2003, !dbg !2354

; <label>:2002                                    ; preds = %1991
  br label %2117, !dbg !2355

; <label>:2003                                    ; preds = %1991
  %2004 = load %struct.sv** %check, align 8, !dbg !2357
  %2005 = icmp ne %struct.sv* %2004, null, !dbg !2359
  br i1 %2005, label %2007, label %2006, !dbg !2359

; <label>:2006                                    ; preds = %2003
  br label %2069, !dbg !2360

; <label>:2007                                    ; preds = %2003
  br label %503, !dbg !2361

; <label>:2008                                    ; preds = %1973
  %2009 = load i8** %t, align 8, !dbg !2362
  %2010 = load i32* %start_shift, align 4, !dbg !2364
  %2011 = sext i32 %2010 to i64, !dbg !2362
  %2012 = getelementptr inbounds i8* %2009, i64 %2011, !dbg !2362
  %2013 = load i8** %check_at, align 8, !dbg !2365
  %2014 = icmp uge i8* %2012, %2013, !dbg !2362
  br i1 %2014, label %2015, label %2016, !dbg !2366

; <label>:2015                                    ; preds = %2008
  br label %2055, !dbg !2367

; <label>:2016                                    ; preds = %2008
  %2017 = load i8** %check_at, align 8, !dbg !2368
  store i8* %2017, i8** %s, align 8, !dbg !2369
  %2018 = load %struct.sv** %check, align 8, !dbg !2370
  %2019 = icmp ne %struct.sv* %2018, null, !dbg !2372
  br i1 %2019, label %2021, label %2020, !dbg !2372

; <label>:2020                                    ; preds = %2016
  br label %2069, !dbg !2373

; <label>:2021                                    ; preds = %2016
  br label %743, !dbg !2374

; <label>:2022                                    ; preds = %1945
  %2023 = load i32* %ml_anch, align 4, !dbg !2375
  %2024 = icmp ne i32 %2023, 0, !dbg !2377
  br i1 %2024, label %2025, label %2032, !dbg !2377

; <label>:2025                                    ; preds = %2022
  %2026 = load i8** %t, align 8, !dbg !2378
  %2027 = getelementptr inbounds i8* %2026, i64 1, !dbg !2378
  store i8* %2027, i8** %t, align 8, !dbg !2380
  store i8* %2027, i8** %s, align 8, !dbg !2381
  %2028 = load %struct.sv** %check, align 8, !dbg !2382
  %2029 = icmp ne %struct.sv* %2028, null, !dbg !2384
  br i1 %2029, label %2031, label %2030, !dbg !2384

; <label>:2030                                    ; preds = %2025
  br label %2069, !dbg !2385

; <label>:2031                                    ; preds = %2025
  br label %1393, !dbg !2386

; <label>:2032                                    ; preds = %2022
  %2033 = load i32* %do_utf8, align 4, !dbg !2387
  %2034 = icmp ne i32 %2033, 0, !dbg !2389
  br i1 %2034, label %2035, label %2044, !dbg !2389

; <label>:2035                                    ; preds = %2032
  %2036 = load %struct.regexp** %2, align 8, !dbg !2390
  %2037 = getelementptr inbounds %struct.regexp* %2036, i32 0, i32 3, !dbg !2390
  %2038 = load %struct.reg_substr_data** %2037, align 8, !dbg !2390
  %2039 = getelementptr inbounds %struct.reg_substr_data* %2038, i32 0, i32 0, !dbg !2390
  %2040 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %2039, i32 0, i64 1, !dbg !2390
  %2041 = getelementptr inbounds %struct.reg_substr_datum* %2040, i32 0, i32 3, !dbg !2390
  %2042 = load %struct.sv** %2041, align 8, !dbg !2390
  %2043 = icmp ne %struct.sv* %2042, null, !dbg !2389
  br i1 %2043, label %2054, label %2053, !dbg !2389

; <label>:2044                                    ; preds = %2032
  %2045 = load %struct.regexp** %2, align 8, !dbg !2392
  %2046 = getelementptr inbounds %struct.regexp* %2045, i32 0, i32 3, !dbg !2392
  %2047 = load %struct.reg_substr_data** %2046, align 8, !dbg !2392
  %2048 = getelementptr inbounds %struct.reg_substr_data* %2047, i32 0, i32 0, !dbg !2392
  %2049 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %2048, i32 0, i64 1, !dbg !2392
  %2050 = getelementptr inbounds %struct.reg_substr_datum* %2049, i32 0, i32 2, !dbg !2392
  %2051 = load %struct.sv** %2050, align 8, !dbg !2392
  %2052 = icmp ne %struct.sv* %2051, null, !dbg !2389
  br i1 %2052, label %2054, label %2053, !dbg !2389

; <label>:2053                                    ; preds = %2044, %2035
  br label %2117, !dbg !2394

; <label>:2054                                    ; preds = %2044, %2035
  br label %2055, !dbg !2395

; <label>:2055                                    ; preds = %2054, %2015
  %2056 = load i8** %check_at, align 8, !dbg !2398
  %2057 = load i32* %start_shift, align 4, !dbg !2399
  %2058 = sext i32 %2057 to i64, !dbg !2398
  %2059 = sub i64 0, %2058, !dbg !2398
  %2060 = getelementptr inbounds i8* %2056, i64 %2059, !dbg !2398
  store i8* %2060, i8** %t, align 8, !dbg !2400
  br label %1978, !dbg !2401

; <label>:2061                                    ; preds = %1903
  %2062 = load i8** %t, align 8, !dbg !2402
  %2063 = load i8** %s, align 8, !dbg !2404
  %2064 = icmp ne i8* %2062, %2063, !dbg !2402
  br i1 %2064, label %2065, label %2066, !dbg !2405

; <label>:2065                                    ; preds = %2061
  br label %2067, !dbg !2406

; <label>:2066                                    ; preds = %2061
  br label %2067

; <label>:2067                                    ; preds = %2066, %2065
  br label %2068, !dbg !2408

; <label>:2068                                    ; preds = %2067, %1713
  br label %2069, !dbg !2409

; <label>:2069                                    ; preds = %2068, %2030, %2020, %2006
  %2070 = load i8** %s, align 8, !dbg !2411
  store i8* %2070, i8** %1, !dbg !2412
  br label %2118, !dbg !2412

; <label>:2071                                    ; preds = %1466, %1319, %1015, %673, %574, %323, %288
  %2072 = load %struct.regexp** %2, align 8, !dbg !2413
  %2073 = getelementptr inbounds %struct.regexp* %2072, i32 0, i32 3, !dbg !2413
  %2074 = load %struct.reg_substr_data** %2073, align 8, !dbg !2413
  %2075 = getelementptr inbounds %struct.reg_substr_data* %2074, i32 0, i32 0, !dbg !2413
  %2076 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %2075, i32 0, i64 2, !dbg !2413
  %2077 = getelementptr inbounds %struct.reg_substr_datum* %2076, i32 0, i32 2, !dbg !2413
  %2078 = load %struct.sv** %2077, align 8, !dbg !2413
  %2079 = icmp ne %struct.sv* %2078, null, !dbg !2415
  br i1 %2079, label %2089, label %2080, !dbg !2415

; <label>:2080                                    ; preds = %2071
  %2081 = load %struct.regexp** %2, align 8, !dbg !2416
  %2082 = getelementptr inbounds %struct.regexp* %2081, i32 0, i32 3, !dbg !2416
  %2083 = load %struct.reg_substr_data** %2082, align 8, !dbg !2416
  %2084 = getelementptr inbounds %struct.reg_substr_data* %2083, i32 0, i32 0, !dbg !2416
  %2085 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %2084, i32 0, i64 2, !dbg !2416
  %2086 = getelementptr inbounds %struct.reg_substr_datum* %2085, i32 0, i32 3, !dbg !2416
  %2087 = load %struct.sv** %2086, align 8, !dbg !2416
  %2088 = icmp ne %struct.sv* %2087, null, !dbg !2415
  br i1 %2088, label %2089, label %2116, !dbg !2415

; <label>:2089                                    ; preds = %2080, %2071
  %2090 = load i32* %do_utf8, align 4, !dbg !2418
  %2091 = icmp ne i32 %2090, 0, !dbg !2418
  br i1 %2091, label %2092, label %2100, !dbg !2418

; <label>:2092                                    ; preds = %2089
  %2093 = load %struct.regexp** %2, align 8, !dbg !2419
  %2094 = getelementptr inbounds %struct.regexp* %2093, i32 0, i32 3, !dbg !2419
  %2095 = load %struct.reg_substr_data** %2094, align 8, !dbg !2419
  %2096 = getelementptr inbounds %struct.reg_substr_data* %2095, i32 0, i32 0, !dbg !2419
  %2097 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %2096, i32 0, i64 2, !dbg !2419
  %2098 = getelementptr inbounds %struct.reg_substr_datum* %2097, i32 0, i32 3, !dbg !2419
  %2099 = load %struct.sv** %2098, align 8, !dbg !2419
  br label %2108, !dbg !2419

; <label>:2100                                    ; preds = %2089
  %2101 = load %struct.regexp** %2, align 8, !dbg !2420
  %2102 = getelementptr inbounds %struct.regexp* %2101, i32 0, i32 3, !dbg !2420
  %2103 = load %struct.reg_substr_data** %2102, align 8, !dbg !2420
  %2104 = getelementptr inbounds %struct.reg_substr_data* %2103, i32 0, i32 0, !dbg !2420
  %2105 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %2104, i32 0, i64 2, !dbg !2420
  %2106 = getelementptr inbounds %struct.reg_substr_datum* %2105, i32 0, i32 2, !dbg !2420
  %2107 = load %struct.sv** %2106, align 8, !dbg !2420
  br label %2108, !dbg !2420

; <label>:2108                                    ; preds = %2100, %2092
  %2109 = phi %struct.sv* [ %2099, %2092 ], [ %2107, %2100 ], !dbg !2418
  %2110 = getelementptr inbounds %struct.sv* %2109, i32 0, i32 0, !dbg !2422
  %2111 = load i8** %2110, align 8, !dbg !2422
  %2112 = bitcast i8* %2111 to %struct.xpvbm*, !dbg !2422
  %2113 = getelementptr inbounds %struct.xpvbm* %2112, i32 0, i32 7, !dbg !2422
  %2114 = load i32* %2113, align 4, !dbg !2422
  %2115 = add nsw i32 %2114, 5, !dbg !2422
  store i32 %2115, i32* %2113, align 4, !dbg !2422
  br label %2116, !dbg !2422

; <label>:2116                                    ; preds = %2108, %2080
  br label %2117, !dbg !2425

; <label>:2117                                    ; preds = %2116, %2053, %2002, %1935, %1925, %189, %139, %51
  store i8* null, i8** %1, !dbg !2426
  br label %2118, !dbg !2426

; <label>:2118                                    ; preds = %2117, %2069
  %2119 = load i8** %1, !dbg !2427
  ret i8* %2119, !dbg !2427
}

declare i32 @to_utf8_substr(...) #2

declare i32 @to_byte_substr(...) #2

declare i32 @reghop3(...) #2

declare i32 @memcmp(i8*, i8*, i64) #2

declare i64 @Perl_sv_len_utf8(%struct.sv*) #2

declare i64 @Perl_utf8_distance(i8*, i8*) #2

declare i8* @Perl_screaminstr(%struct.sv*, %struct.sv*, i32, i32, i32*, i32) #2

declare i8* @Perl_fbm_instr(i8*, i8*, %struct.sv*, i32) #2

declare i32 @reghopmaybe3(...) #2

declare void @Perl_sv_free(%struct.sv*) #2

declare i32 @cache_re(...) #2

declare i32 @find_byclass(...) #2

declare void @Perl_croak(i8*, ...) #2

declare %struct.magic* @Perl_mg_find(%struct.sv*, i32) #2

declare i32 @regtry(...) #2

declare i32 @reghop(...) #2

declare i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i32) #2

declare i8* @Perl_rninstr(i8*, i8*, i8*, i8*) #2

declare void @Perl_sv_setsv_flags(%struct.sv*, %struct.sv*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @restore_pos(i8* %arg) #0 {
  %1 = alloca i8*, align 8
  store i8* %arg, i8** %1, align 8
  call void @llvm.dbg.declare(metadata i8** %1, metadata !2428, metadata !566), !dbg !2429
  %2 = load i32* @PL_reg_eval_set, align 4, !dbg !2430
  %3 = icmp ne i32 %2, 0, !dbg !2432
  br i1 %3, label %4, label %24, !dbg !2432

; <label>:4                                       ; preds = %0
  %5 = load i8** @PL_reg_oldsaved, align 8, !dbg !2433
  %6 = icmp ne i8* %5, null, !dbg !2436
  br i1 %6, label %7, label %19, !dbg !2436

; <label>:7                                       ; preds = %4
  %8 = load i8** @PL_reg_oldsaved, align 8, !dbg !2437
  %9 = load %struct.regexp** @PL_reg_re, align 8, !dbg !2439
  %10 = getelementptr inbounds %struct.regexp* %9, i32 0, i32 6, !dbg !2439
  store i8* %8, i8** %10, align 8, !dbg !2439
  %11 = load i64* @PL_reg_oldsavedlen, align 8, !dbg !2440
  %12 = trunc i64 %11 to i32, !dbg !2440
  %13 = load %struct.regexp** @PL_reg_re, align 8, !dbg !2441
  %14 = getelementptr inbounds %struct.regexp* %13, i32 0, i32 8, !dbg !2441
  store i32 %12, i32* %14, align 4, !dbg !2441
  %15 = load %struct.regexp** @PL_reg_re, align 8, !dbg !2442
  %16 = getelementptr inbounds %struct.regexp* %15, i32 0, i32 15, !dbg !2442
  %17 = load i32* %16, align 4, !dbg !2442
  %18 = or i32 %17, 262144, !dbg !2442
  store i32 %18, i32* %16, align 4, !dbg !2442
  br label %19, !dbg !2443

; <label>:19                                      ; preds = %7, %4
  %20 = load i32* @PL_reg_oldpos, align 4, !dbg !2444
  %21 = load %struct.magic** @PL_reg_magic, align 8, !dbg !2445
  %22 = getelementptr inbounds %struct.magic* %21, i32 0, i32 7, !dbg !2445
  store i32 %20, i32* %22, align 4, !dbg !2445
  store i32 0, i32* @PL_reg_eval_set, align 4, !dbg !2446
  %23 = load %struct.pmop** @PL_reg_oldcurpm, align 8, !dbg !2447
  store %struct.pmop* %23, %struct.pmop** @PL_curpm, align 8, !dbg !2448
  br label %24, !dbg !2449

; <label>:24                                      ; preds = %19, %0
  ret void, !dbg !2450
}

declare void @Perl_safesysfree(i8*) #2

declare i8* @Perl_savepvn(i8*, i32) #2

; Function Attrs: nounwind uwtable
define i32 @S_regmatch(%struct.regnode* %prog) #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.regnode*, align 8
  %scan = alloca %struct.regnode*, align 8
  %next = alloca %struct.regnode*, align 8
  %inner = alloca %struct.regnode*, align 8
  %nextchr = alloca i32, align 4
  %n = alloca i32, align 4
  %ln = alloca i32, align 4
  %s = alloca i8*, align 8
  %locinput = alloca i8*, align 8
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %paren = alloca i32, align 4
  %minmod = alloca i32, align 4
  %sw = alloca i32, align 4
  %logical = alloca i32, align 4
  %unwind = alloca i32, align 4
  %do_utf8 = alloca i8, align 1
  %l = alloca i8*, align 8
  %e = alloca i8*, align 8
  %ulen = alloca i64, align 8
  %l1 = alloca i8*, align 8
  %e2 = alloca i8*, align 8
  %inclasslen = alloca i64, align 8
  %r = alloca i8*, align 8
  %l3 = alloca i8*, align 8
  %e4 = alloca i8*, align 8
  %ulen1 = alloca i64, align 8
  %ulen2 = alloca i64, align 8
  %tmpbuf1 = alloca [7 x i8], align 1
  %tmpbuf2 = alloca [7 x i8], align 1
  %sp = alloca %struct.sv**, align 8
  %oop = alloca %struct.op*, align 8
  %ocurcop = alloca %struct.cop*, align 8
  %old_comppad = alloca %struct.av*, align 8
  %ret = alloca %struct.sv*, align 8
  %oreg = alloca %struct.regexp*, align 8
  %before = alloca %struct.sv**, align 8
  %re = alloca %struct.regexp*, align 8
  %mg = alloca %struct.magic*, align 8
  %state = alloca %struct.re_cc_state, align 8
  %cp = alloca i32, align 4
  %lastcp = alloca i32, align 4
  %toggleutf = alloca i32, align 4
  %sv = alloca %struct.sv*, align 8
  %len = alloca i64, align 8
  %t = alloca i8*, align 8
  %pm = alloca %struct.pmop, align 8
  %oprecomp = alloca i8*, align 8
  %osize = alloca i32, align 4
  %onpar = alloca i32, align 4
  %cc = alloca %struct.curcur, align 8
  %cp5 = alloca i32, align 4
  %parenfloor = alloca i32, align 4
  %cp6 = alloca i32, align 4
  %lastcp7 = alloca i32, align 4
  %cc8 = alloca %struct.curcur*, align 8
  %lastloc = alloca i8*, align 8
  %cache_offset = alloca i32, align 4
  %cache_bit = alloca i32, align 4
  %size = alloca i32, align 4
  %lastparen = alloca i32, align 4
  %unwind1 = alloca i32, align 4
  %uw = alloca %struct.re_unwind_branch_t*, align 8
  %l9 = alloca i32, align 4
  %lastcp10 = alloca i32, align 4
  %text_node = alloca %struct.regnode*, align 8
  %text_node11 = alloca %struct.regnode*, align 8
  %s12 = alloca i8*, align 8
  %text_node13 = alloca %struct.regnode*, align 8
  %ulen114 = alloca i64, align 8
  %ulen215 = alloca i64, align 8
  %tmpbuf116 = alloca [7 x i8], align 1
  %tmpbuf217 = alloca [7 x i8], align 1
  %lastcp18 = alloca i32, align 4
  %e19 = alloca i8*, align 8
  %old = alloca i8*, align 8
  %count = alloca i32, align 4
  %m = alloca i32, align 4
  %len20 = alloca i64, align 8
  %c = alloca i64, align 8
  %c21 = alloca i64, align 8
  %lastcp22 = alloca i32, align 4
  %c23 = alloca i64, align 8
  %c24 = alloca i64, align 8
  %cur_call_cc = alloca %struct.re_cc_state*, align 8
  %cctmp = alloca %struct.curcur*, align 8
  %re25 = alloca %struct.regexp*, align 8
  %cp26 = alloca i32, align 4
  %lastcp27 = alloca i32, align 4
  %uw28 = alloca %union.re_unwind_t*, align 8
  %uwb = alloca %struct.re_unwind_branch_t*, align 8
  %lastparen29 = alloca i32, align 4
  store %struct.regnode* %prog, %struct.regnode** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.regnode** %2, metadata !2451, metadata !566), !dbg !2452
  call void @llvm.dbg.declare(metadata %struct.regnode** %scan, metadata !2453, metadata !566), !dbg !2454
  call void @llvm.dbg.declare(metadata %struct.regnode** %next, metadata !2455, metadata !566), !dbg !2456
  call void @llvm.dbg.declare(metadata %struct.regnode** %inner, metadata !2457, metadata !566), !dbg !2458
  call void @llvm.dbg.declare(metadata i32* %nextchr, metadata !2459, metadata !566), !dbg !2460
  call void @llvm.dbg.declare(metadata i32* %n, metadata !2461, metadata !566), !dbg !2462
  call void @llvm.dbg.declare(metadata i32* %ln, metadata !2463, metadata !566), !dbg !2464
  store i32 0, i32* %ln, align 4, !dbg !2464
  call void @llvm.dbg.declare(metadata i8** %s, metadata !2465, metadata !566), !dbg !2466
  store i8* null, i8** %s, align 8, !dbg !2466
  call void @llvm.dbg.declare(metadata i8** %locinput, metadata !2467, metadata !566), !dbg !2468
  %3 = load i8** @PL_reginput, align 8, !dbg !2469
  store i8* %3, i8** %locinput, align 8, !dbg !2468
  call void @llvm.dbg.declare(metadata i32* %c1, metadata !2470, metadata !566), !dbg !2471
  store i32 0, i32* %c1, align 4, !dbg !2471
  call void @llvm.dbg.declare(metadata i32* %c2, metadata !2472, metadata !566), !dbg !2473
  store i32 0, i32* %c2, align 4, !dbg !2473
  call void @llvm.dbg.declare(metadata i32* %paren, metadata !2474, metadata !566), !dbg !2475
  call void @llvm.dbg.declare(metadata i32* %minmod, metadata !2476, metadata !566), !dbg !2477
  store i32 0, i32* %minmod, align 4, !dbg !2477
  call void @llvm.dbg.declare(metadata i32* %sw, metadata !2478, metadata !566), !dbg !2479
  store i32 0, i32* %sw, align 4, !dbg !2479
  call void @llvm.dbg.declare(metadata i32* %logical, metadata !2480, metadata !566), !dbg !2481
  store i32 0, i32* %logical, align 4, !dbg !2481
  call void @llvm.dbg.declare(metadata i32* %unwind, metadata !2482, metadata !566), !dbg !2483
  store i32 0, i32* %unwind, align 4, !dbg !2483
  call void @llvm.dbg.declare(metadata i8* %do_utf8, metadata !2484, metadata !566), !dbg !2485
  %4 = load i8* @PL_reg_match_utf8, align 1, !dbg !2486
  store i8 %4, i8* %do_utf8, align 1, !dbg !2485
  %5 = load i8** %locinput, align 8, !dbg !2487
  %6 = load i8* %5, align 1, !dbg !2487
  %7 = zext i8 %6 to i32, !dbg !2487
  store i32 %7, i32* %nextchr, align 4, !dbg !2488
  %8 = load %struct.regnode** %2, align 8, !dbg !2489
  store %struct.regnode* %8, %struct.regnode** %scan, align 8, !dbg !2490
  br label %9, !dbg !2491

; <label>:9                                       ; preds = %6121, %0
  %10 = load %struct.regnode** %scan, align 8, !dbg !2492
  %11 = icmp ne %struct.regnode* %10, null, !dbg !2492
  br i1 %11, label %12, label %6123, !dbg !2491

; <label>:12                                      ; preds = %9
  %13 = load %struct.regnode** %scan, align 8, !dbg !2495
  %14 = load %struct.regnode** %scan, align 8, !dbg !2497
  %15 = getelementptr inbounds %struct.regnode* %14, i32 0, i32 2, !dbg !2497
  %16 = load i16* %15, align 2, !dbg !2497
  %17 = zext i16 %16 to i32, !dbg !2497
  %18 = sext i32 %17 to i64, !dbg !2495
  %19 = getelementptr inbounds %struct.regnode* %13, i64 %18, !dbg !2495
  store %struct.regnode* %19, %struct.regnode** %next, align 8, !dbg !2498
  %20 = load %struct.regnode** %next, align 8, !dbg !2499
  %21 = load %struct.regnode** %scan, align 8, !dbg !2501
  %22 = icmp eq %struct.regnode* %20, %21, !dbg !2499
  br i1 %22, label %23, label %24, !dbg !2502

; <label>:23                                      ; preds = %12
  store %struct.regnode* null, %struct.regnode** %next, align 8, !dbg !2503
  br label %24, !dbg !2503

; <label>:24                                      ; preds = %23, %12
  %25 = load %struct.regnode** %scan, align 8, !dbg !2504
  %26 = getelementptr inbounds %struct.regnode* %25, i32 0, i32 1, !dbg !2504
  %27 = load i8* %26, align 1, !dbg !2504
  %28 = zext i8 %27 to i32, !dbg !2504
  switch i32 %28, label %6066 [
    i32 2, label %29
    i32 3, label %51
    i32 4, label %70
    i32 13, label %76
    i32 6, label %82
    i32 7, label %87
    i32 8, label %100
    i32 5, label %121
    i32 15, label %127
    i32 16, label %161
    i32 14, label %174
    i32 33, label %211
    i32 35, label %413
    i32 34, label %416
    i32 17, label %596
    i32 19, label %776
    i32 18, label %779
    i32 21, label %905
    i32 20, label %908
    i32 10, label %1038
    i32 12, label %1038
    i32 9, label %1041
    i32 11, label %1041
    i32 23, label %1302
    i32 22, label %1305
    i32 25, label %1464
    i32 24, label %1467
    i32 27, label %1582
    i32 26, label %1585
    i32 29, label %1687
    i32 28, label %1690
    i32 30, label %1796
    i32 49, label %1860
    i32 47, label %1863
    i32 48, label %1863
    i32 36, label %2047
    i32 37, label %2047
    i32 32, label %2048
    i32 57, label %2049
    i32 45, label %2444
    i32 46, label %2460
    i32 54, label %2499
    i32 53, label %2518
    i32 59, label %2545
    i32 43, label %2550
    i32 44, label %2621
    i32 56, label %3365
    i32 31, label %3381
    i32 58, label %3433
    i32 42, label %3434
    i32 41, label %4322
    i32 40, label %4355
    i32 38, label %4369
    i32 39, label %4372
    i32 0, label %5856
    i32 1, label %5913
    i32 52, label %5915
    i32 51, label %5917
    i32 50, label %5969
    i32 55, label %6052
  ], !dbg !2505

; <label>:29                                      ; preds = %24
  %30 = load i8** %locinput, align 8, !dbg !2506
  %31 = load i8** @PL_bostr, align 8, !dbg !2509
  %32 = icmp eq i8* %30, %31, !dbg !2506
  br i1 %32, label %49, label %33, !dbg !2510

; <label>:33                                      ; preds = %29
  %34 = load i32* @PL_multiline, align 4, !dbg !2511
  %35 = icmp ne i32 %34, 0, !dbg !2510
  br i1 %35, label %36, label %50, !dbg !2510

; <label>:36                                      ; preds = %33
  %37 = load i32* %nextchr, align 4, !dbg !2513
  %38 = icmp ne i32 %37, 0, !dbg !2510
  br i1 %38, label %43, label %39, !dbg !2510

; <label>:39                                      ; preds = %36
  %40 = load i8** %locinput, align 8, !dbg !2514
  %41 = load i8** @PL_regeol, align 8, !dbg !2515
  %42 = icmp ult i8* %40, %41, !dbg !2514
  br i1 %42, label %43, label %50, !dbg !2510

; <label>:43                                      ; preds = %39, %36
  %44 = load i8** %locinput, align 8, !dbg !2516
  %45 = getelementptr inbounds i8* %44, i64 -1, !dbg !2516
  %46 = load i8* %45, align 1, !dbg !2516
  %47 = sext i8 %46 to i32, !dbg !2516
  %48 = icmp eq i32 %47, 10, !dbg !2516
  br i1 %48, label %49, label %50, !dbg !2510

; <label>:49                                      ; preds = %43, %29
  br label %6120, !dbg !2517

; <label>:50                                      ; preds = %43, %39, %33
  br label %6127, !dbg !2519

; <label>:51                                      ; preds = %24
  %52 = load i8** %locinput, align 8, !dbg !2520
  %53 = load i8** @PL_bostr, align 8, !dbg !2522
  %54 = icmp eq i8* %52, %53, !dbg !2520
  br i1 %54, label %68, label %55, !dbg !2523

; <label>:55                                      ; preds = %51
  %56 = load i32* %nextchr, align 4, !dbg !2524
  %57 = icmp ne i32 %56, 0, !dbg !2523
  br i1 %57, label %62, label %58, !dbg !2523

; <label>:58                                      ; preds = %55
  %59 = load i8** %locinput, align 8, !dbg !2525
  %60 = load i8** @PL_regeol, align 8, !dbg !2526
  %61 = icmp ult i8* %59, %60, !dbg !2525
  br i1 %61, label %62, label %69, !dbg !2523

; <label>:62                                      ; preds = %58, %55
  %63 = load i8** %locinput, align 8, !dbg !2527
  %64 = getelementptr inbounds i8* %63, i64 -1, !dbg !2527
  %65 = load i8* %64, align 1, !dbg !2527
  %66 = sext i8 %65 to i32, !dbg !2527
  %67 = icmp eq i32 %66, 10, !dbg !2527
  br i1 %67, label %68, label %69, !dbg !2523

; <label>:68                                      ; preds = %62, %51
  br label %6120, !dbg !2528

; <label>:69                                      ; preds = %62, %58
  br label %6127, !dbg !2530

; <label>:70                                      ; preds = %24
  %71 = load i8** %locinput, align 8, !dbg !2531
  %72 = load i8** @PL_bostr, align 8, !dbg !2533
  %73 = icmp eq i8* %71, %72, !dbg !2531
  br i1 %73, label %74, label %75, !dbg !2534

; <label>:74                                      ; preds = %70
  br label %6120, !dbg !2535

; <label>:75                                      ; preds = %70
  br label %6127, !dbg !2536

; <label>:76                                      ; preds = %24
  %77 = load i8** %locinput, align 8, !dbg !2537
  %78 = load i8** @PL_reg_ganch, align 8, !dbg !2539
  %79 = icmp eq i8* %77, %78, !dbg !2537
  br i1 %79, label %80, label %81, !dbg !2540

; <label>:80                                      ; preds = %76
  br label %6120, !dbg !2541

; <label>:81                                      ; preds = %76
  br label %6127, !dbg !2542

; <label>:82                                      ; preds = %24
  %83 = load i32* @PL_multiline, align 4, !dbg !2543
  %84 = icmp ne i32 %83, 0, !dbg !2545
  br i1 %84, label %85, label %86, !dbg !2545

; <label>:85                                      ; preds = %82
  br label %88, !dbg !2546

; <label>:86                                      ; preds = %82
  br label %101, !dbg !2547

; <label>:87                                      ; preds = %24
  br label %88, !dbg !2543

; <label>:88                                      ; preds = %87, %85
  %89 = load i32* %nextchr, align 4, !dbg !2548
  %90 = icmp ne i32 %89, 0, !dbg !2550
  br i1 %90, label %95, label %91, !dbg !2550

; <label>:91                                      ; preds = %88
  %92 = load i8** %locinput, align 8, !dbg !2551
  %93 = load i8** @PL_regeol, align 8, !dbg !2553
  %94 = icmp ult i8* %92, %93, !dbg !2554
  br i1 %94, label %95, label %99, !dbg !2550

; <label>:95                                      ; preds = %91, %88
  %96 = load i32* %nextchr, align 4, !dbg !2555
  %97 = icmp ne i32 %96, 10, !dbg !2555
  br i1 %97, label %98, label %99, !dbg !2550

; <label>:98                                      ; preds = %95
  br label %6127, !dbg !2558

; <label>:99                                      ; preds = %95, %91
  br label %6120, !dbg !2559

; <label>:100                                     ; preds = %24
  br label %101, !dbg !2559

; <label>:101                                     ; preds = %100, %86
  %102 = load i32* %nextchr, align 4, !dbg !2560
  %103 = icmp ne i32 %102, 0, !dbg !2562
  br i1 %103, label %108, label %104, !dbg !2562

; <label>:104                                     ; preds = %101
  %105 = load i8** %locinput, align 8, !dbg !2563
  %106 = load i8** @PL_regeol, align 8, !dbg !2565
  %107 = icmp ult i8* %105, %106, !dbg !2566
  br i1 %107, label %108, label %112, !dbg !2562

; <label>:108                                     ; preds = %104, %101
  %109 = load i32* %nextchr, align 4, !dbg !2567
  %110 = icmp ne i32 %109, 10, !dbg !2567
  br i1 %110, label %111, label %112, !dbg !2562

; <label>:111                                     ; preds = %108
  br label %6127, !dbg !2570

; <label>:112                                     ; preds = %108, %104
  %113 = load i8** @PL_regeol, align 8, !dbg !2571
  %114 = load i8** %locinput, align 8, !dbg !2573
  %115 = ptrtoint i8* %113 to i64, !dbg !2571
  %116 = ptrtoint i8* %114 to i64, !dbg !2571
  %117 = sub i64 %115, %116, !dbg !2571
  %118 = icmp sgt i64 %117, 1, !dbg !2571
  br i1 %118, label %119, label %120, !dbg !2574

; <label>:119                                     ; preds = %112
  br label %6127, !dbg !2575

; <label>:120                                     ; preds = %112
  br label %6120, !dbg !2576

; <label>:121                                     ; preds = %24
  %122 = load i8** @PL_regeol, align 8, !dbg !2577
  %123 = load i8** %locinput, align 8, !dbg !2579
  %124 = icmp ne i8* %122, %123, !dbg !2577
  br i1 %124, label %125, label %126, !dbg !2580

; <label>:125                                     ; preds = %121
  br label %6127, !dbg !2581

; <label>:126                                     ; preds = %121
  br label %6120, !dbg !2582

; <label>:127                                     ; preds = %24
  %128 = load i32* %nextchr, align 4, !dbg !2583
  %129 = icmp ne i32 %128, 0, !dbg !2585
  br i1 %129, label %135, label %130, !dbg !2585

; <label>:130                                     ; preds = %127
  %131 = load i8** %locinput, align 8, !dbg !2586
  %132 = load i8** @PL_regeol, align 8, !dbg !2588
  %133 = icmp uge i8* %131, %132, !dbg !2589
  br i1 %133, label %134, label %135, !dbg !2585

; <label>:134                                     ; preds = %130
  br label %6127, !dbg !2590

; <label>:135                                     ; preds = %130, %127
  %136 = load i8* %do_utf8, align 1, !dbg !2591
  %137 = icmp ne i8 %136, 0, !dbg !2593
  br i1 %137, label %138, label %155, !dbg !2593

; <label>:138                                     ; preds = %135
  %139 = load i32* %nextchr, align 4, !dbg !2594
  %140 = sext i32 %139 to i64, !dbg !2596
  %141 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %140, !dbg !2596
  %142 = load i8* %141, align 1, !dbg !2596
  %143 = zext i8 %142 to i32, !dbg !2596
  %144 = load i8** %locinput, align 8, !dbg !2597
  %145 = sext i32 %143 to i64, !dbg !2597
  %146 = getelementptr inbounds i8* %144, i64 %145, !dbg !2597
  store i8* %146, i8** %locinput, align 8, !dbg !2597
  %147 = load i8** %locinput, align 8, !dbg !2598
  %148 = load i8** @PL_regeol, align 8, !dbg !2600
  %149 = icmp ugt i8* %147, %148, !dbg !2598
  br i1 %149, label %150, label %151, !dbg !2601

; <label>:150                                     ; preds = %138
  br label %6127, !dbg !2602

; <label>:151                                     ; preds = %138
  %152 = load i8** %locinput, align 8, !dbg !2603
  %153 = load i8* %152, align 1, !dbg !2603
  %154 = zext i8 %153 to i32, !dbg !2603
  store i32 %154, i32* %nextchr, align 4, !dbg !2604
  br label %160, !dbg !2605

; <label>:155                                     ; preds = %135
  %156 = load i8** %locinput, align 8, !dbg !2606
  %157 = getelementptr inbounds i8* %156, i32 1, !dbg !2606
  store i8* %157, i8** %locinput, align 8, !dbg !2606
  %158 = load i8* %157, align 1, !dbg !2606
  %159 = zext i8 %158 to i32, !dbg !2606
  store i32 %159, i32* %nextchr, align 4, !dbg !2607
  br label %160

; <label>:160                                     ; preds = %155, %151
  br label %6120, !dbg !2608

; <label>:161                                     ; preds = %24
  %162 = load i32* %nextchr, align 4, !dbg !2609
  %163 = icmp ne i32 %162, 0, !dbg !2611
  br i1 %163, label %169, label %164, !dbg !2611

; <label>:164                                     ; preds = %161
  %165 = load i8** %locinput, align 8, !dbg !2612
  %166 = load i8** @PL_regeol, align 8, !dbg !2614
  %167 = icmp uge i8* %165, %166, !dbg !2615
  br i1 %167, label %168, label %169, !dbg !2611

; <label>:168                                     ; preds = %164
  br label %6127, !dbg !2616

; <label>:169                                     ; preds = %164, %161
  %170 = load i8** %locinput, align 8, !dbg !2617
  %171 = getelementptr inbounds i8* %170, i32 1, !dbg !2617
  store i8* %171, i8** %locinput, align 8, !dbg !2617
  %172 = load i8* %171, align 1, !dbg !2617
  %173 = zext i8 %172 to i32, !dbg !2617
  store i32 %173, i32* %nextchr, align 4, !dbg !2618
  br label %6120, !dbg !2619

; <label>:174                                     ; preds = %24
  %175 = load i32* %nextchr, align 4, !dbg !2620
  %176 = icmp ne i32 %175, 0, !dbg !2622
  br i1 %176, label %181, label %177, !dbg !2622

; <label>:177                                     ; preds = %174
  %178 = load i8** %locinput, align 8, !dbg !2623
  %179 = load i8** @PL_regeol, align 8, !dbg !2625
  %180 = icmp uge i8* %178, %179, !dbg !2626
  br i1 %180, label %184, label %181, !dbg !2622

; <label>:181                                     ; preds = %177, %174
  %182 = load i32* %nextchr, align 4, !dbg !2627
  %183 = icmp eq i32 %182, 10, !dbg !2627
  br i1 %183, label %184, label %185, !dbg !2622

; <label>:184                                     ; preds = %181, %177
  br label %6127, !dbg !2630

; <label>:185                                     ; preds = %181
  %186 = load i8* %do_utf8, align 1, !dbg !2631
  %187 = icmp ne i8 %186, 0, !dbg !2633
  br i1 %187, label %188, label %205, !dbg !2633

; <label>:188                                     ; preds = %185
  %189 = load i32* %nextchr, align 4, !dbg !2634
  %190 = sext i32 %189 to i64, !dbg !2636
  %191 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %190, !dbg !2636
  %192 = load i8* %191, align 1, !dbg !2636
  %193 = zext i8 %192 to i32, !dbg !2636
  %194 = load i8** %locinput, align 8, !dbg !2637
  %195 = sext i32 %193 to i64, !dbg !2637
  %196 = getelementptr inbounds i8* %194, i64 %195, !dbg !2637
  store i8* %196, i8** %locinput, align 8, !dbg !2637
  %197 = load i8** %locinput, align 8, !dbg !2638
  %198 = load i8** @PL_regeol, align 8, !dbg !2640
  %199 = icmp ugt i8* %197, %198, !dbg !2638
  br i1 %199, label %200, label %201, !dbg !2641

; <label>:200                                     ; preds = %188
  br label %6127, !dbg !2642

; <label>:201                                     ; preds = %188
  %202 = load i8** %locinput, align 8, !dbg !2643
  %203 = load i8* %202, align 1, !dbg !2643
  %204 = zext i8 %203 to i32, !dbg !2643
  store i32 %204, i32* %nextchr, align 4, !dbg !2644
  br label %210, !dbg !2645

; <label>:205                                     ; preds = %185
  %206 = load i8** %locinput, align 8, !dbg !2646
  %207 = getelementptr inbounds i8* %206, i32 1, !dbg !2646
  store i8* %207, i8** %locinput, align 8, !dbg !2646
  %208 = load i8* %207, align 1, !dbg !2646
  %209 = zext i8 %208 to i32, !dbg !2646
  store i32 %209, i32* %nextchr, align 4, !dbg !2647
  br label %210

; <label>:210                                     ; preds = %205, %201
  br label %6120, !dbg !2648

; <label>:211                                     ; preds = %24
  %212 = load %struct.regnode** %scan, align 8, !dbg !2649
  %213 = bitcast %struct.regnode* %212 to %struct.regnode_string*, !dbg !2649
  %214 = getelementptr inbounds %struct.regnode_string* %213, i32 0, i32 3, !dbg !2649
  %215 = getelementptr inbounds [1 x i8]* %214, i32 0, i32 0, !dbg !2649
  store i8* %215, i8** %s, align 8, !dbg !2650
  %216 = load %struct.regnode** %scan, align 8, !dbg !2651
  %217 = bitcast %struct.regnode* %216 to %struct.regnode_string*, !dbg !2651
  %218 = getelementptr inbounds %struct.regnode_string* %217, i32 0, i32 0, !dbg !2651
  %219 = load i8* %218, align 1, !dbg !2651
  %220 = zext i8 %219 to i32, !dbg !2651
  store i32 %220, i32* %ln, align 4, !dbg !2652
  %221 = load i8* %do_utf8, align 1, !dbg !2653
  %222 = sext i8 %221 to i32, !dbg !2653
  %223 = load i32* @PL_reg_flags, align 4, !dbg !2655
  %224 = and i32 %223, 8, !dbg !2655
  %225 = icmp ne i32 %224, 0, !dbg !2655
  %226 = zext i1 %225 to i32, !dbg !2655
  %227 = icmp ne i32 %222, %226, !dbg !2653
  br i1 %227, label %228, label %377, !dbg !2656

; <label>:228                                     ; preds = %211
  call void @llvm.dbg.declare(metadata i8** %l, metadata !2657, metadata !566), !dbg !2659
  %229 = load i8** %locinput, align 8, !dbg !2660
  store i8* %229, i8** %l, align 8, !dbg !2659
  call void @llvm.dbg.declare(metadata i8** %e, metadata !2661, metadata !566), !dbg !2662
  %230 = load i8** %s, align 8, !dbg !2663
  %231 = load i32* %ln, align 4, !dbg !2664
  %232 = sext i32 %231 to i64, !dbg !2663
  %233 = getelementptr inbounds i8* %230, i64 %232, !dbg !2663
  store i8* %233, i8** %e, align 8, !dbg !2662
  call void @llvm.dbg.declare(metadata i64* %ulen, metadata !2665, metadata !566), !dbg !2666
  %234 = load i8* %do_utf8, align 1, !dbg !2667
  %235 = icmp ne i8 %234, 0, !dbg !2669
  br i1 %235, label %236, label %304, !dbg !2669

; <label>:236                                     ; preds = %228
  br label %237, !dbg !2670

; <label>:237                                     ; preds = %297, %236
  %238 = load i8** %s, align 8, !dbg !2672
  %239 = load i8** %e, align 8, !dbg !2675
  %240 = icmp ult i8* %238, %239, !dbg !2676
  br i1 %240, label %241, label %303, !dbg !2670

; <label>:241                                     ; preds = %237
  %242 = load i8** %l, align 8, !dbg !2677
  %243 = load i8** @PL_regeol, align 8, !dbg !2680
  %244 = icmp uge i8* %242, %243, !dbg !2677
  br i1 %244, label %245, label %246, !dbg !2681

; <label>:245                                     ; preds = %241
  br label %6127, !dbg !2682

; <label>:246                                     ; preds = %241
  %247 = load i8** %s, align 8, !dbg !2683
  %248 = load i8* %247, align 1, !dbg !2683
  %249 = zext i8 %248 to i64, !dbg !2683
  %250 = load i8** %l, align 8, !dbg !2685
  %251 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2686
  %252 = getelementptr inbounds %struct.cop* %251, i32 0, i32 14, !dbg !2686
  %253 = load %struct.sv** %252, align 8, !dbg !2686
  %254 = icmp ne %struct.sv* %253, null, !dbg !2686
  br i1 %254, label %255, label %279, !dbg !2686

; <label>:255                                     ; preds = %246
  %256 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2687
  %257 = getelementptr inbounds %struct.cop* %256, i32 0, i32 14, !dbg !2687
  %258 = load %struct.sv** %257, align 8, !dbg !2687
  %259 = icmp ne %struct.sv* %258, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !2687
  br i1 %259, label %260, label %279, !dbg !2687

; <label>:260                                     ; preds = %255
  %261 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2689
  %262 = getelementptr inbounds %struct.cop* %261, i32 0, i32 14, !dbg !2689
  %263 = load %struct.sv** %262, align 8, !dbg !2689
  %264 = icmp eq %struct.sv* %263, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !2689
  br i1 %264, label %291, label %265, !dbg !2689

; <label>:265                                     ; preds = %260
  %266 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2691
  %267 = getelementptr inbounds %struct.cop* %266, i32 0, i32 14, !dbg !2691
  %268 = load %struct.sv** %267, align 8, !dbg !2691
  %269 = getelementptr inbounds %struct.sv* %268, i32 0, i32 0, !dbg !2691
  %270 = load i8** %269, align 8, !dbg !2691
  %271 = bitcast i8* %270 to %struct.xpv*, !dbg !2691
  %272 = getelementptr inbounds %struct.xpv* %271, i32 0, i32 0, !dbg !2691
  %273 = load i8** %272, align 8, !dbg !2691
  %274 = getelementptr inbounds i8* %273, i64 11, !dbg !2691
  %275 = load i8* %274, align 1, !dbg !2691
  %276 = sext i8 %275 to i32, !dbg !2691
  %277 = and i32 %276, 1, !dbg !2691
  %278 = icmp ne i32 %277, 0, !dbg !2691
  br i1 %278, label %291, label %279, !dbg !2691

; <label>:279                                     ; preds = %265, %255, %246
  %280 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2693
  %281 = getelementptr inbounds %struct.cop* %280, i32 0, i32 14, !dbg !2693
  %282 = load %struct.sv** %281, align 8, !dbg !2693
  %283 = icmp eq %struct.sv* %282, null, !dbg !2693
  br i1 %283, label %284, label %289, !dbg !2693

; <label>:284                                     ; preds = %279
  %285 = load i8* @PL_dowarn, align 1, !dbg !2697
  %286 = zext i8 %285 to i32, !dbg !2697
  %287 = and i32 %286, 1, !dbg !2697
  %288 = icmp ne i32 %287, 0, !dbg !2697
  br label %289

; <label>:289                                     ; preds = %284, %279
  %290 = phi i1 [ false, %279 ], [ %288, %284 ]
  br label %291, !dbg !2699

; <label>:291                                     ; preds = %289, %265, %260
  %292 = phi i1 [ true, %265 ], [ true, %260 ], [ %290, %289 ]
  %293 = select i1 %292, i32 0, i32 255, !dbg !2701
  %294 = call i64 @Perl_utf8n_to_uvuni(i8* %250, i64 13, i64* %ulen, i32 %293), !dbg !2705
  %295 = icmp ne i64 %249, %294, !dbg !2683
  br i1 %295, label %296, label %297, !dbg !2706

; <label>:296                                     ; preds = %291
  br label %6127, !dbg !2707

; <label>:297                                     ; preds = %291
  %298 = load i64* %ulen, align 8, !dbg !2708
  %299 = load i8** %l, align 8, !dbg !2709
  %300 = getelementptr inbounds i8* %299, i64 %298, !dbg !2709
  store i8* %300, i8** %l, align 8, !dbg !2709
  %301 = load i8** %s, align 8, !dbg !2710
  %302 = getelementptr inbounds i8* %301, i32 1, !dbg !2710
  store i8* %302, i8** %s, align 8, !dbg !2710
  br label %237, !dbg !2670

; <label>:303                                     ; preds = %237
  br label %372, !dbg !2711

; <label>:304                                     ; preds = %228
  br label %305, !dbg !2712

; <label>:305                                     ; preds = %365, %304
  %306 = load i8** %s, align 8, !dbg !2714
  %307 = load i8** %e, align 8, !dbg !2717
  %308 = icmp ult i8* %306, %307, !dbg !2718
  br i1 %308, label %309, label %371, !dbg !2712

; <label>:309                                     ; preds = %305
  %310 = load i8** %l, align 8, !dbg !2719
  %311 = load i8** @PL_regeol, align 8, !dbg !2722
  %312 = icmp uge i8* %310, %311, !dbg !2719
  br i1 %312, label %313, label %314, !dbg !2723

; <label>:313                                     ; preds = %309
  br label %6127, !dbg !2724

; <label>:314                                     ; preds = %309
  %315 = load i8** %l, align 8, !dbg !2725
  %316 = load i8* %315, align 1, !dbg !2725
  %317 = zext i8 %316 to i64, !dbg !2725
  %318 = load i8** %s, align 8, !dbg !2727
  %319 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2728
  %320 = getelementptr inbounds %struct.cop* %319, i32 0, i32 14, !dbg !2728
  %321 = load %struct.sv** %320, align 8, !dbg !2728
  %322 = icmp ne %struct.sv* %321, null, !dbg !2728
  br i1 %322, label %323, label %347, !dbg !2728

; <label>:323                                     ; preds = %314
  %324 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2729
  %325 = getelementptr inbounds %struct.cop* %324, i32 0, i32 14, !dbg !2729
  %326 = load %struct.sv** %325, align 8, !dbg !2729
  %327 = icmp ne %struct.sv* %326, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !2729
  br i1 %327, label %328, label %347, !dbg !2729

; <label>:328                                     ; preds = %323
  %329 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2731
  %330 = getelementptr inbounds %struct.cop* %329, i32 0, i32 14, !dbg !2731
  %331 = load %struct.sv** %330, align 8, !dbg !2731
  %332 = icmp eq %struct.sv* %331, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !2731
  br i1 %332, label %359, label %333, !dbg !2731

; <label>:333                                     ; preds = %328
  %334 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2733
  %335 = getelementptr inbounds %struct.cop* %334, i32 0, i32 14, !dbg !2733
  %336 = load %struct.sv** %335, align 8, !dbg !2733
  %337 = getelementptr inbounds %struct.sv* %336, i32 0, i32 0, !dbg !2733
  %338 = load i8** %337, align 8, !dbg !2733
  %339 = bitcast i8* %338 to %struct.xpv*, !dbg !2733
  %340 = getelementptr inbounds %struct.xpv* %339, i32 0, i32 0, !dbg !2733
  %341 = load i8** %340, align 8, !dbg !2733
  %342 = getelementptr inbounds i8* %341, i64 11, !dbg !2733
  %343 = load i8* %342, align 1, !dbg !2733
  %344 = sext i8 %343 to i32, !dbg !2733
  %345 = and i32 %344, 1, !dbg !2733
  %346 = icmp ne i32 %345, 0, !dbg !2733
  br i1 %346, label %359, label %347, !dbg !2733

; <label>:347                                     ; preds = %333, %323, %314
  %348 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2735
  %349 = getelementptr inbounds %struct.cop* %348, i32 0, i32 14, !dbg !2735
  %350 = load %struct.sv** %349, align 8, !dbg !2735
  %351 = icmp eq %struct.sv* %350, null, !dbg !2735
  br i1 %351, label %352, label %357, !dbg !2735

; <label>:352                                     ; preds = %347
  %353 = load i8* @PL_dowarn, align 1, !dbg !2739
  %354 = zext i8 %353 to i32, !dbg !2739
  %355 = and i32 %354, 1, !dbg !2739
  %356 = icmp ne i32 %355, 0, !dbg !2739
  br label %357

; <label>:357                                     ; preds = %352, %347
  %358 = phi i1 [ false, %347 ], [ %356, %352 ]
  br label %359, !dbg !2741

; <label>:359                                     ; preds = %357, %333, %328
  %360 = phi i1 [ true, %333 ], [ true, %328 ], [ %358, %357 ]
  %361 = select i1 %360, i32 0, i32 255, !dbg !2743
  %362 = call i64 @Perl_utf8n_to_uvuni(i8* %318, i64 13, i64* %ulen, i32 %361), !dbg !2747
  %363 = icmp ne i64 %317, %362, !dbg !2725
  br i1 %363, label %364, label %365, !dbg !2748

; <label>:364                                     ; preds = %359
  br label %6127, !dbg !2749

; <label>:365                                     ; preds = %359
  %366 = load i64* %ulen, align 8, !dbg !2750
  %367 = load i8** %s, align 8, !dbg !2751
  %368 = getelementptr inbounds i8* %367, i64 %366, !dbg !2751
  store i8* %368, i8** %s, align 8, !dbg !2751
  %369 = load i8** %l, align 8, !dbg !2752
  %370 = getelementptr inbounds i8* %369, i32 1, !dbg !2752
  store i8* %370, i8** %l, align 8, !dbg !2752
  br label %305, !dbg !2712

; <label>:371                                     ; preds = %305
  br label %372

; <label>:372                                     ; preds = %371, %303
  %373 = load i8** %l, align 8, !dbg !2753
  store i8* %373, i8** %locinput, align 8, !dbg !2754
  %374 = load i8** %locinput, align 8, !dbg !2755
  %375 = load i8* %374, align 1, !dbg !2755
  %376 = zext i8 %375 to i32, !dbg !2755
  store i32 %376, i32* %nextchr, align 4, !dbg !2756
  br label %6120, !dbg !2757

; <label>:377                                     ; preds = %211
  %378 = load i8** %s, align 8, !dbg !2758
  %379 = load i8* %378, align 1, !dbg !2758
  %380 = zext i8 %379 to i32, !dbg !2758
  %381 = load i32* %nextchr, align 4, !dbg !2760
  %382 = icmp ne i32 %380, %381, !dbg !2758
  br i1 %382, label %383, label %384, !dbg !2761

; <label>:383                                     ; preds = %377
  br label %6127, !dbg !2762

; <label>:384                                     ; preds = %377
  %385 = load i8** @PL_regeol, align 8, !dbg !2763
  %386 = load i8** %locinput, align 8, !dbg !2765
  %387 = ptrtoint i8* %385 to i64, !dbg !2763
  %388 = ptrtoint i8* %386 to i64, !dbg !2763
  %389 = sub i64 %387, %388, !dbg !2763
  %390 = load i32* %ln, align 4, !dbg !2766
  %391 = sext i32 %390 to i64, !dbg !2766
  %392 = icmp slt i64 %389, %391, !dbg !2763
  br i1 %392, label %393, label %394, !dbg !2767

; <label>:393                                     ; preds = %384
  br label %6127, !dbg !2768

; <label>:394                                     ; preds = %384
  %395 = load i32* %ln, align 4, !dbg !2769
  %396 = icmp sgt i32 %395, 1, !dbg !2769
  br i1 %396, label %397, label %405, !dbg !2771

; <label>:397                                     ; preds = %394
  %398 = load i8** %s, align 8, !dbg !2772
  %399 = load i8** %locinput, align 8, !dbg !2772
  %400 = load i32* %ln, align 4, !dbg !2772
  %401 = sext i32 %400 to i64, !dbg !2772
  %402 = call i32 @memcmp(i8* %398, i8* %399, i64 %401), !dbg !2772
  %403 = icmp ne i32 %402, 0, !dbg !2771
  br i1 %403, label %404, label %405, !dbg !2771

; <label>:404                                     ; preds = %397
  br label %6127, !dbg !2774

; <label>:405                                     ; preds = %397, %394
  %406 = load i32* %ln, align 4, !dbg !2775
  %407 = load i8** %locinput, align 8, !dbg !2776
  %408 = sext i32 %406 to i64, !dbg !2776
  %409 = getelementptr inbounds i8* %407, i64 %408, !dbg !2776
  store i8* %409, i8** %locinput, align 8, !dbg !2776
  %410 = load i8** %locinput, align 8, !dbg !2777
  %411 = load i8* %410, align 1, !dbg !2777
  %412 = zext i8 %411 to i32, !dbg !2777
  store i32 %412, i32* %nextchr, align 4, !dbg !2778
  br label %6120, !dbg !2779

; <label>:413                                     ; preds = %24
  %414 = load i32* @PL_reg_flags, align 4, !dbg !2780
  %415 = or i32 %414, 1, !dbg !2780
  store i32 %415, i32* @PL_reg_flags, align 4, !dbg !2780
  br label %416, !dbg !2780

; <label>:416                                     ; preds = %24, %413
  %417 = load %struct.regnode** %scan, align 8, !dbg !2781
  %418 = bitcast %struct.regnode* %417 to %struct.regnode_string*, !dbg !2781
  %419 = getelementptr inbounds %struct.regnode_string* %418, i32 0, i32 3, !dbg !2781
  %420 = getelementptr inbounds [1 x i8]* %419, i32 0, i32 0, !dbg !2781
  store i8* %420, i8** %s, align 8, !dbg !2782
  %421 = load %struct.regnode** %scan, align 8, !dbg !2783
  %422 = bitcast %struct.regnode* %421 to %struct.regnode_string*, !dbg !2783
  %423 = getelementptr inbounds %struct.regnode_string* %422, i32 0, i32 0, !dbg !2783
  %424 = load i8* %423, align 1, !dbg !2783
  %425 = zext i8 %424 to i32, !dbg !2783
  store i32 %425, i32* %ln, align 4, !dbg !2784
  %426 = load i8* %do_utf8, align 1, !dbg !2785
  %427 = sext i8 %426 to i32, !dbg !2785
  %428 = icmp ne i32 %427, 0, !dbg !2787
  br i1 %428, label %433, label %429, !dbg !2787

; <label>:429                                     ; preds = %416
  %430 = load i32* @PL_reg_flags, align 4, !dbg !2788
  %431 = and i32 %430, 8, !dbg !2788
  %432 = icmp ne i32 %431, 0, !dbg !2788
  br i1 %432, label %433, label %533, !dbg !2787

; <label>:433                                     ; preds = %429, %416
  call void @llvm.dbg.declare(metadata i8** %l1, metadata !2790, metadata !566), !dbg !2792
  %434 = load i8** %locinput, align 8, !dbg !2793
  store i8* %434, i8** %l1, align 8, !dbg !2792
  call void @llvm.dbg.declare(metadata i8** %e2, metadata !2794, metadata !566), !dbg !2795
  %435 = load i8** @PL_regeol, align 8, !dbg !2796
  store i8* %435, i8** %e2, align 8, !dbg !2795
  %436 = load i8** %s, align 8, !dbg !2797
  %437 = load i32* %ln, align 4, !dbg !2799
  %438 = sext i32 %437 to i64, !dbg !2799
  %439 = load i32* @PL_reg_flags, align 4, !dbg !2800
  %440 = and i32 %439, 8, !dbg !2800
  %441 = icmp ne i32 %440, 0, !dbg !2800
  %442 = zext i1 %441 to i32, !dbg !2800
  %443 = trunc i32 %442 to i8, !dbg !2801
  %444 = load i8** %l1, align 8, !dbg !2802
  %445 = load i8* %do_utf8, align 1, !dbg !2803
  %446 = call i32 @Perl_ibcmp_utf8(i8* %436, i8** null, i64 %438, i8 signext %443, i8* %444, i8** %e2, i64 0, i8 signext %445), !dbg !2804
  %447 = icmp ne i32 %446, 0, !dbg !2805
  br i1 %447, label %448, label %528, !dbg !2805

; <label>:448                                     ; preds = %433
  %449 = load i8* %do_utf8, align 1, !dbg !2806
  %450 = sext i8 %449 to i32, !dbg !2806
  %451 = icmp ne i32 %450, 0, !dbg !2809
  br i1 %451, label %452, label %526, !dbg !2809

; <label>:452                                     ; preds = %448
  %453 = load i8** %s, align 8, !dbg !2810
  %454 = getelementptr inbounds i8* %453, i64 0, !dbg !2810
  %455 = load i8* %454, align 1, !dbg !2810
  %456 = sext i8 %455 to i32, !dbg !2810
  %457 = icmp sge i32 %456, 65, !dbg !2810
  br i1 %457, label %458, label %470, !dbg !2810

; <label>:458                                     ; preds = %452
  %459 = load i8** %s, align 8, !dbg !2811
  %460 = getelementptr inbounds i8* %459, i64 0, !dbg !2811
  %461 = load i8* %460, align 1, !dbg !2811
  %462 = sext i8 %461 to i32, !dbg !2811
  %463 = icmp sle i32 %462, 90, !dbg !2811
  br i1 %463, label %464, label %470, !dbg !2811

; <label>:464                                     ; preds = %458
  %465 = load i8** %s, align 8, !dbg !2813
  %466 = getelementptr inbounds i8* %465, i64 0, !dbg !2813
  %467 = load i8* %466, align 1, !dbg !2813
  %468 = sext i8 %467 to i32, !dbg !2813
  %469 = add nsw i32 %468, 32, !dbg !2813
  br label %475, !dbg !2813

; <label>:470                                     ; preds = %458, %452
  %471 = load i8** %s, align 8, !dbg !2815
  %472 = getelementptr inbounds i8* %471, i64 0, !dbg !2815
  %473 = load i8* %472, align 1, !dbg !2815
  %474 = sext i8 %473 to i32, !dbg !2815
  br label %475, !dbg !2815

; <label>:475                                     ; preds = %470, %464
  %476 = phi i32 [ %469, %464 ], [ %474, %470 ], !dbg !2810
  %477 = icmp eq i32 %476, 115, !dbg !2818
  br i1 %477, label %478, label %526, !dbg !2809

; <label>:478                                     ; preds = %475
  %479 = load i32* %ln, align 4, !dbg !2821
  %480 = icmp sge i32 %479, 2, !dbg !2821
  br i1 %480, label %481, label %526, !dbg !2809

; <label>:481                                     ; preds = %478
  %482 = load i8** %s, align 8, !dbg !2822
  %483 = getelementptr inbounds i8* %482, i64 1, !dbg !2822
  %484 = load i8* %483, align 1, !dbg !2822
  %485 = sext i8 %484 to i32, !dbg !2822
  %486 = icmp sge i32 %485, 65, !dbg !2822
  br i1 %486, label %487, label %499, !dbg !2822

; <label>:487                                     ; preds = %481
  %488 = load i8** %s, align 8, !dbg !2823
  %489 = getelementptr inbounds i8* %488, i64 1, !dbg !2823
  %490 = load i8* %489, align 1, !dbg !2823
  %491 = sext i8 %490 to i32, !dbg !2823
  %492 = icmp sle i32 %491, 90, !dbg !2823
  br i1 %492, label %493, label %499, !dbg !2823

; <label>:493                                     ; preds = %487
  %494 = load i8** %s, align 8, !dbg !2824
  %495 = getelementptr inbounds i8* %494, i64 1, !dbg !2824
  %496 = load i8* %495, align 1, !dbg !2824
  %497 = sext i8 %496 to i32, !dbg !2824
  %498 = add nsw i32 %497, 32, !dbg !2824
  br label %504, !dbg !2824

; <label>:499                                     ; preds = %487, %481
  %500 = load i8** %s, align 8, !dbg !2825
  %501 = getelementptr inbounds i8* %500, i64 1, !dbg !2825
  %502 = load i8* %501, align 1, !dbg !2825
  %503 = sext i8 %502 to i32, !dbg !2825
  br label %504, !dbg !2825

; <label>:504                                     ; preds = %499, %493
  %505 = phi i32 [ %498, %493 ], [ %503, %499 ], !dbg !2822
  %506 = icmp eq i32 %505, 115, !dbg !2826
  br i1 %506, label %507, label %526, !dbg !2809

; <label>:507                                     ; preds = %504
  %508 = load i8** %l1, align 8, !dbg !2827
  %509 = getelementptr inbounds i8* %508, i64 0, !dbg !2827
  %510 = load i8* %509, align 1, !dbg !2827
  %511 = zext i8 %510 to i32, !dbg !2828
  %512 = icmp eq i32 %511, 195, !dbg !2828
  br i1 %512, label %513, label %526, !dbg !2809

; <label>:513                                     ; preds = %507
  %514 = load i8** %e2, align 8, !dbg !2829
  %515 = load i8** %l1, align 8, !dbg !2830
  %516 = ptrtoint i8* %514 to i64, !dbg !2829
  %517 = ptrtoint i8* %515 to i64, !dbg !2829
  %518 = sub i64 %516, %517, !dbg !2829
  %519 = icmp sge i64 %518, 2, !dbg !2829
  br i1 %519, label %520, label %526, !dbg !2809

; <label>:520                                     ; preds = %513
  %521 = load i8** %l1, align 8, !dbg !2831
  %522 = getelementptr inbounds i8* %521, i64 1, !dbg !2831
  %523 = load i8* %522, align 1, !dbg !2831
  %524 = zext i8 %523 to i32, !dbg !2832
  %525 = icmp eq i32 %524, 159, !dbg !2832
  br i1 %525, label %527, label %526, !dbg !2809

; <label>:526                                     ; preds = %520, %513, %507, %504, %478, %475, %448
  br label %6127, !dbg !2833

; <label>:527                                     ; preds = %520
  br label %528, !dbg !2834

; <label>:528                                     ; preds = %527, %433
  %529 = load i8** %e2, align 8, !dbg !2835
  store i8* %529, i8** %locinput, align 8, !dbg !2836
  %530 = load i8** %locinput, align 8, !dbg !2837
  %531 = load i8* %530, align 1, !dbg !2837
  %532 = zext i8 %531 to i32, !dbg !2837
  store i32 %532, i32* %nextchr, align 4, !dbg !2838
  br label %6120, !dbg !2839

; <label>:533                                     ; preds = %429
  %534 = load i8** %s, align 8, !dbg !2840
  %535 = load i8* %534, align 1, !dbg !2840
  %536 = zext i8 %535 to i32, !dbg !2840
  %537 = load i32* %nextchr, align 4, !dbg !2842
  %538 = icmp ne i32 %536, %537, !dbg !2840
  br i1 %538, label %539, label %556, !dbg !2843

; <label>:539                                     ; preds = %533
  %540 = load i8** %s, align 8, !dbg !2844
  %541 = load i8* %540, align 1, !dbg !2844
  %542 = zext i8 %541 to i32, !dbg !2844
  %543 = load i32* %nextchr, align 4, !dbg !2845
  %544 = sext i32 %543 to i64, !dbg !2846
  %545 = load %struct.regnode** %scan, align 8, !dbg !2847
  %546 = getelementptr inbounds %struct.regnode* %545, i32 0, i32 1, !dbg !2847
  %547 = load i8* %546, align 1, !dbg !2847
  %548 = zext i8 %547 to i32, !dbg !2847
  %549 = icmp eq i32 %548, 34, !dbg !2847
  %550 = select i1 %549, i8* getelementptr inbounds ([0 x i8]* @PL_fold, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8]* @PL_fold_locale, i32 0, i32 0), !dbg !2848
  %551 = getelementptr inbounds i8* %550, i64 %544, !dbg !2846
  %552 = load i8* %551, align 1, !dbg !2846
  %553 = zext i8 %552 to i32, !dbg !2846
  %554 = icmp ne i32 %542, %553, !dbg !2844
  br i1 %554, label %555, label %556, !dbg !2843

; <label>:555                                     ; preds = %539
  br label %6127, !dbg !2849

; <label>:556                                     ; preds = %539, %533
  %557 = load i8** @PL_regeol, align 8, !dbg !2850
  %558 = load i8** %locinput, align 8, !dbg !2852
  %559 = ptrtoint i8* %557 to i64, !dbg !2850
  %560 = ptrtoint i8* %558 to i64, !dbg !2850
  %561 = sub i64 %559, %560, !dbg !2850
  %562 = load i32* %ln, align 4, !dbg !2853
  %563 = sext i32 %562 to i64, !dbg !2853
  %564 = icmp slt i64 %561, %563, !dbg !2850
  br i1 %564, label %565, label %566, !dbg !2854

; <label>:565                                     ; preds = %556
  br label %6127, !dbg !2855

; <label>:566                                     ; preds = %556
  %567 = load i32* %ln, align 4, !dbg !2856
  %568 = icmp sgt i32 %567, 1, !dbg !2856
  br i1 %568, label %569, label %588, !dbg !2858

; <label>:569                                     ; preds = %566
  %570 = load %struct.regnode** %scan, align 8, !dbg !2859
  %571 = getelementptr inbounds %struct.regnode* %570, i32 0, i32 1, !dbg !2859
  %572 = load i8* %571, align 1, !dbg !2859
  %573 = zext i8 %572 to i32, !dbg !2859
  %574 = icmp eq i32 %573, 34, !dbg !2859
  br i1 %574, label %575, label %581, !dbg !2858

; <label>:575                                     ; preds = %569
  %576 = load i8** %s, align 8, !dbg !2861
  %577 = load i8** %locinput, align 8, !dbg !2862
  %578 = load i32* %ln, align 4, !dbg !2863
  %579 = call i32 @Perl_ibcmp(i8* %576, i8* %577, i32 %578), !dbg !2864
  %580 = icmp ne i32 %579, 0, !dbg !2858
  br i1 %580, label %587, label %588, !dbg !2858

; <label>:581                                     ; preds = %569
  %582 = load i8** %s, align 8, !dbg !2865
  %583 = load i8** %locinput, align 8, !dbg !2866
  %584 = load i32* %ln, align 4, !dbg !2867
  %585 = call i32 @Perl_ibcmp_locale(i8* %582, i8* %583, i32 %584), !dbg !2868
  %586 = icmp ne i32 %585, 0, !dbg !2858
  br i1 %586, label %587, label %588, !dbg !2858

; <label>:587                                     ; preds = %581, %575
  br label %6127, !dbg !2869

; <label>:588                                     ; preds = %581, %575, %566
  %589 = load i32* %ln, align 4, !dbg !2870
  %590 = load i8** %locinput, align 8, !dbg !2871
  %591 = sext i32 %589 to i64, !dbg !2871
  %592 = getelementptr inbounds i8* %590, i64 %591, !dbg !2871
  store i8* %592, i8** %locinput, align 8, !dbg !2871
  %593 = load i8** %locinput, align 8, !dbg !2872
  %594 = load i8* %593, align 1, !dbg !2872
  %595 = zext i8 %594 to i32, !dbg !2872
  store i32 %595, i32* %nextchr, align 4, !dbg !2873
  br label %6120, !dbg !2874

; <label>:596                                     ; preds = %24
  %597 = load i8* %do_utf8, align 1, !dbg !2875
  %598 = icmp ne i8 %597, 0, !dbg !2877
  br i1 %598, label %599, label %636, !dbg !2877

; <label>:599                                     ; preds = %596
  call void @llvm.dbg.declare(metadata i64* %inclasslen, metadata !2878, metadata !566), !dbg !2880
  %600 = load i8** @PL_regeol, align 8, !dbg !2881
  %601 = load i8** %locinput, align 8, !dbg !2882
  %602 = ptrtoint i8* %600 to i64, !dbg !2881
  %603 = ptrtoint i8* %601 to i64, !dbg !2881
  %604 = sub i64 %602, %603, !dbg !2881
  store i64 %604, i64* %inclasslen, align 8, !dbg !2880
  %605 = load %struct.regnode** %scan, align 8, !dbg !2883
  %606 = load i8** %locinput, align 8, !dbg !2885
  %607 = load i8* %do_utf8, align 1, !dbg !2886
  %608 = sext i8 %607 to i32, !dbg !2886
  %609 = call i32 (%struct.regnode*, i8*, i64*, i32, ...)* bitcast (i32 (...)* @reginclass to i32 (%struct.regnode*, i8*, i64*, i32, ...)*)(%struct.regnode* %605, i8* %606, i64* %inclasslen, i32 %608), !dbg !2887
  %610 = icmp ne i32 %609, 0, !dbg !2888
  br i1 %610, label %612, label %611, !dbg !2888

; <label>:611                                     ; preds = %599
  br label %688, !dbg !2889

; <label>:612                                     ; preds = %599
  %613 = load i8** %locinput, align 8, !dbg !2890
  %614 = load i8** @PL_regeol, align 8, !dbg !2892
  %615 = icmp uge i8* %613, %614, !dbg !2890
  br i1 %615, label %616, label %617, !dbg !2893

; <label>:616                                     ; preds = %612
  br label %6127, !dbg !2894

; <label>:617                                     ; preds = %612
  %618 = load i64* %inclasslen, align 8, !dbg !2895
  %619 = icmp ne i64 %618, 0, !dbg !2895
  br i1 %619, label %620, label %622, !dbg !2895

; <label>:620                                     ; preds = %617
  %621 = load i64* %inclasslen, align 8, !dbg !2896
  br label %629, !dbg !2895

; <label>:622                                     ; preds = %617
  %623 = load i8** %locinput, align 8, !dbg !2898
  %624 = load i8* %623, align 1, !dbg !2898
  %625 = zext i8 %624 to i64, !dbg !2898
  %626 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %625, !dbg !2898
  %627 = load i8* %626, align 1, !dbg !2898
  %628 = zext i8 %627 to i64, !dbg !2898
  br label %629, !dbg !2895

; <label>:629                                     ; preds = %622, %620
  %630 = phi i64 [ %621, %620 ], [ %628, %622 ], !dbg !2895
  %631 = load i8** %locinput, align 8, !dbg !2900
  %632 = getelementptr inbounds i8* %631, i64 %630, !dbg !2900
  store i8* %632, i8** %locinput, align 8, !dbg !2900
  %633 = load i8** %locinput, align 8, !dbg !2903
  %634 = load i8* %633, align 1, !dbg !2903
  %635 = zext i8 %634 to i32, !dbg !2903
  store i32 %635, i32* %nextchr, align 4, !dbg !2904
  br label %6120, !dbg !2905

; <label>:636                                     ; preds = %596
  %637 = load i32* %nextchr, align 4, !dbg !2906
  %638 = icmp slt i32 %637, 0, !dbg !2906
  br i1 %638, label %639, label %643, !dbg !2909

; <label>:639                                     ; preds = %636
  %640 = load i8** %locinput, align 8, !dbg !2910
  %641 = load i8* %640, align 1, !dbg !2910
  %642 = zext i8 %641 to i32, !dbg !2910
  store i32 %642, i32* %nextchr, align 4, !dbg !2911
  br label %643, !dbg !2911

; <label>:643                                     ; preds = %639, %636
  %644 = load %struct.regnode** %scan, align 8, !dbg !2912
  %645 = getelementptr inbounds %struct.regnode* %644, i32 0, i32 0, !dbg !2912
  %646 = load i8* %645, align 1, !dbg !2912
  %647 = zext i8 %646 to i32, !dbg !2912
  %648 = icmp ne i32 %647, 0, !dbg !2914
  br i1 %648, label %649, label %654, !dbg !2914

; <label>:649                                     ; preds = %643
  %650 = load %struct.regnode** %scan, align 8, !dbg !2915
  %651 = load i8** %locinput, align 8, !dbg !2915
  %652 = call i32 (%struct.regnode*, i8*, i32, i32, ...)* bitcast (i32 (...)* @reginclass to i32 (%struct.regnode*, i8*, i32, i32, ...)*)(%struct.regnode* %650, i8* %651, i32 0, i32 0), !dbg !2915
  %653 = icmp ne i32 %652, 0, !dbg !2914
  br i1 %653, label %675, label %674, !dbg !2914

; <label>:654                                     ; preds = %643
  %655 = load i8** %locinput, align 8, !dbg !2917
  %656 = load i8* %655, align 1, !dbg !2917
  %657 = zext i8 %656 to i32, !dbg !2917
  %658 = ashr i32 %657, 3, !dbg !2917
  %659 = and i32 %658, 31, !dbg !2917
  %660 = sext i32 %659 to i64, !dbg !2917
  %661 = load %struct.regnode** %scan, align 8, !dbg !2917
  %662 = bitcast %struct.regnode* %661 to %struct.regnode_charclass*, !dbg !2917
  %663 = getelementptr inbounds %struct.regnode_charclass* %662, i32 0, i32 4, !dbg !2917
  %664 = getelementptr inbounds [32 x i8]* %663, i32 0, i64 %660, !dbg !2917
  %665 = load i8* %664, align 1, !dbg !2917
  %666 = sext i8 %665 to i32, !dbg !2917
  %667 = load i8** %locinput, align 8, !dbg !2917
  %668 = load i8* %667, align 1, !dbg !2917
  %669 = zext i8 %668 to i32, !dbg !2917
  %670 = and i32 %669, 7, !dbg !2917
  %671 = shl i32 1, %670, !dbg !2917
  %672 = and i32 %666, %671, !dbg !2917
  %673 = icmp ne i32 %672, 0, !dbg !2914
  br i1 %673, label %675, label %674, !dbg !2914

; <label>:674                                     ; preds = %654, %649
  br label %688, !dbg !2919

; <label>:675                                     ; preds = %654, %649
  %676 = load i32* %nextchr, align 4, !dbg !2920
  %677 = icmp ne i32 %676, 0, !dbg !2922
  br i1 %677, label %683, label %678, !dbg !2922

; <label>:678                                     ; preds = %675
  %679 = load i8** %locinput, align 8, !dbg !2923
  %680 = load i8** @PL_regeol, align 8, !dbg !2925
  %681 = icmp uge i8* %679, %680, !dbg !2926
  br i1 %681, label %682, label %683, !dbg !2922

; <label>:682                                     ; preds = %678
  br label %6127, !dbg !2927

; <label>:683                                     ; preds = %678, %675
  %684 = load i8** %locinput, align 8, !dbg !2928
  %685 = getelementptr inbounds i8* %684, i32 1, !dbg !2928
  store i8* %685, i8** %locinput, align 8, !dbg !2928
  %686 = load i8* %685, align 1, !dbg !2928
  %687 = zext i8 %686 to i32, !dbg !2928
  store i32 %687, i32* %nextchr, align 4, !dbg !2929
  br label %6120, !dbg !2930

; <label>:688                                     ; preds = %674, %611
  %689 = load %struct.regnode** %scan, align 8, !dbg !2931
  %690 = bitcast %struct.regnode* %689 to %struct.regnode_charclass*, !dbg !2931
  %691 = getelementptr inbounds %struct.regnode_charclass* %690, i32 0, i32 4, !dbg !2931
  %692 = getelementptr inbounds [32 x i8]* %691, i32 0, i64 27, !dbg !2931
  %693 = load i8* %692, align 1, !dbg !2931
  %694 = sext i8 %693 to i32, !dbg !2931
  %695 = and i32 %694, 128, !dbg !2931
  %696 = icmp ne i32 %695, 0, !dbg !2933
  br i1 %696, label %697, label %774, !dbg !2933

; <label>:697                                     ; preds = %688
  %698 = load %struct.regnode** %scan, align 8, !dbg !2934
  %699 = getelementptr inbounds %struct.regnode* %698, i32 0, i32 0, !dbg !2934
  %700 = load i8* %699, align 1, !dbg !2934
  %701 = zext i8 %700 to i32, !dbg !2934
  %702 = and i32 %701, 32, !dbg !2934
  %703 = icmp ne i32 %702, 0, !dbg !2933
  br i1 %703, label %704, label %774, !dbg !2933

; <label>:704                                     ; preds = %697
  %705 = load %struct.regnode** %scan, align 8, !dbg !2936
  %706 = getelementptr inbounds %struct.regnode* %705, i32 0, i32 0, !dbg !2936
  %707 = load i8* %706, align 1, !dbg !2936
  %708 = zext i8 %707 to i32, !dbg !2936
  %709 = and i32 %708, 2, !dbg !2936
  %710 = icmp ne i32 %709, 0, !dbg !2933
  br i1 %710, label %711, label %774, !dbg !2933

; <label>:711                                     ; preds = %704
  %712 = load i8** @PL_regeol, align 8, !dbg !2938
  %713 = load i8** %locinput, align 8, !dbg !2938
  %714 = getelementptr inbounds i8* %713, i64 1, !dbg !2938
  %715 = icmp ugt i8* %712, %714, !dbg !2938
  br i1 %715, label %716, label %774, !dbg !2933

; <label>:716                                     ; preds = %711
  %717 = load i8** %locinput, align 8, !dbg !2940
  %718 = getelementptr inbounds i8* %717, i64 0, !dbg !2940
  %719 = load i8* %718, align 1, !dbg !2940
  %720 = sext i8 %719 to i32, !dbg !2940
  %721 = icmp sge i32 %720, 65, !dbg !2940
  br i1 %721, label %722, label %734, !dbg !2940

; <label>:722                                     ; preds = %716
  %723 = load i8** %locinput, align 8, !dbg !2942
  %724 = getelementptr inbounds i8* %723, i64 0, !dbg !2942
  %725 = load i8* %724, align 1, !dbg !2942
  %726 = sext i8 %725 to i32, !dbg !2942
  %727 = icmp sle i32 %726, 90, !dbg !2942
  br i1 %727, label %728, label %734, !dbg !2942

; <label>:728                                     ; preds = %722
  %729 = load i8** %locinput, align 8, !dbg !2944
  %730 = getelementptr inbounds i8* %729, i64 0, !dbg !2944
  %731 = load i8* %730, align 1, !dbg !2944
  %732 = sext i8 %731 to i32, !dbg !2944
  %733 = add nsw i32 %732, 32, !dbg !2944
  br label %739, !dbg !2944

; <label>:734                                     ; preds = %722, %716
  %735 = load i8** %locinput, align 8, !dbg !2946
  %736 = getelementptr inbounds i8* %735, i64 0, !dbg !2946
  %737 = load i8* %736, align 1, !dbg !2946
  %738 = sext i8 %737 to i32, !dbg !2946
  br label %739, !dbg !2946

; <label>:739                                     ; preds = %734, %728
  %740 = phi i32 [ %733, %728 ], [ %738, %734 ], !dbg !2931
  %741 = icmp eq i32 %740, 115, !dbg !2949
  br i1 %741, label %742, label %774, !dbg !2933

; <label>:742                                     ; preds = %739
  %743 = load i8** %locinput, align 8, !dbg !2952
  %744 = getelementptr inbounds i8* %743, i64 1, !dbg !2952
  %745 = load i8* %744, align 1, !dbg !2952
  %746 = sext i8 %745 to i32, !dbg !2952
  %747 = icmp sge i32 %746, 65, !dbg !2952
  br i1 %747, label %748, label %760, !dbg !2952

; <label>:748                                     ; preds = %742
  %749 = load i8** %locinput, align 8, !dbg !2954
  %750 = getelementptr inbounds i8* %749, i64 1, !dbg !2954
  %751 = load i8* %750, align 1, !dbg !2954
  %752 = sext i8 %751 to i32, !dbg !2954
  %753 = icmp sle i32 %752, 90, !dbg !2954
  br i1 %753, label %754, label %760, !dbg !2954

; <label>:754                                     ; preds = %748
  %755 = load i8** %locinput, align 8, !dbg !2956
  %756 = getelementptr inbounds i8* %755, i64 1, !dbg !2956
  %757 = load i8* %756, align 1, !dbg !2956
  %758 = sext i8 %757 to i32, !dbg !2956
  %759 = add nsw i32 %758, 32, !dbg !2956
  br label %765, !dbg !2956

; <label>:760                                     ; preds = %748, %742
  %761 = load i8** %locinput, align 8, !dbg !2958
  %762 = getelementptr inbounds i8* %761, i64 1, !dbg !2958
  %763 = load i8* %762, align 1, !dbg !2958
  %764 = sext i8 %763 to i32, !dbg !2958
  br label %765, !dbg !2958

; <label>:765                                     ; preds = %760, %754
  %766 = phi i32 [ %759, %754 ], [ %764, %760 ], !dbg !2931
  %767 = icmp eq i32 %766, 115, !dbg !2961
  br i1 %767, label %768, label %774, !dbg !2933

; <label>:768                                     ; preds = %765
  %769 = load i8** %locinput, align 8, !dbg !2964
  %770 = getelementptr inbounds i8* %769, i64 2, !dbg !2964
  store i8* %770, i8** %locinput, align 8, !dbg !2964
  %771 = load i8** %locinput, align 8, !dbg !2966
  %772 = load i8* %771, align 1, !dbg !2966
  %773 = zext i8 %772 to i32, !dbg !2966
  store i32 %773, i32* %nextchr, align 4, !dbg !2967
  br label %775, !dbg !2968

; <label>:774                                     ; preds = %765, %739, %711, %704, %697, %688
  br label %6127, !dbg !2969

; <label>:775                                     ; preds = %768
  br label %6120, !dbg !2970

; <label>:776                                     ; preds = %24
  %777 = load i32* @PL_reg_flags, align 4, !dbg !2971
  %778 = or i32 %777, 1, !dbg !2971
  store i32 %778, i32* @PL_reg_flags, align 4, !dbg !2971
  br label %779, !dbg !2971

; <label>:779                                     ; preds = %24, %776
  %780 = load i32* %nextchr, align 4, !dbg !2972
  %781 = icmp ne i32 %780, 0, !dbg !2974
  br i1 %781, label %783, label %782, !dbg !2974

; <label>:782                                     ; preds = %779
  br label %6127, !dbg !2975

; <label>:783                                     ; preds = %779
  %784 = load i8* %do_utf8, align 1, !dbg !2976
  %785 = icmp ne i8 %784, 0, !dbg !2978
  br i1 %785, label %786, label %855, !dbg !2978

; <label>:786                                     ; preds = %783
  %787 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !2979
  %788 = icmp ne %struct.sv* %787, null, !dbg !2983
  br i1 %788, label %791, label %789, !dbg !2983

; <label>:789                                     ; preds = %786
  call void @Perl_push_scope(), !dbg !2984
  call void @Perl_save_re_context(), !dbg !2984
  %790 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8]* @.str2, i32 0, i32 0)), !dbg !2984
  call void @Perl_pop_scope(), !dbg !2984
  br label %791, !dbg !2984

; <label>:791                                     ; preds = %789, %786
  %792 = load %struct.regnode** %scan, align 8, !dbg !2987
  %793 = getelementptr inbounds %struct.regnode* %792, i32 0, i32 1, !dbg !2987
  %794 = load i8* %793, align 1, !dbg !2987
  %795 = zext i8 %794 to i32, !dbg !2987
  %796 = icmp eq i32 %795, 18, !dbg !2987
  br i1 %796, label %797, label %803, !dbg !2989

; <label>:797                                     ; preds = %791
  %798 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !2990
  %799 = load i8** %locinput, align 8, !dbg !2991
  %800 = load i8* %do_utf8, align 1, !dbg !2992
  %801 = call i64 @Perl_swash_fetch(%struct.sv* %798, i8* %799, i8 signext %800), !dbg !2993
  %802 = icmp ne i64 %801, 0, !dbg !2989
  br i1 %802, label %843, label %842, !dbg !2989

; <label>:803                                     ; preds = %791
  %804 = load i8** %locinput, align 8, !dbg !2994
  %805 = call i64 @Perl_utf8_to_uvchr(i8* %804, i64* null), !dbg !2994
  %806 = icmp ult i64 %805, 256, !dbg !2994
  br i1 %806, label %807, label %833, !dbg !2994

; <label>:807                                     ; preds = %803
  %808 = load i8** %locinput, align 8, !dbg !2995
  %809 = call i64 @Perl_utf8_to_uvchr(i8* %808, i64* null), !dbg !2995
  %810 = and i64 %809, -128, !dbg !2995
  %811 = icmp eq i64 %810, 0, !dbg !2995
  br i1 %811, label %812, label %830, !dbg !2995

; <label>:812                                     ; preds = %807
  %813 = load i8** %locinput, align 8, !dbg !2997
  %814 = call i64 @Perl_utf8_to_uvchr(i8* %813, i64* null), !dbg !2997
  %815 = trunc i64 %814 to i32, !dbg !2997
  %816 = sext i32 %815 to i64, !dbg !2997
  %817 = call i16** @__ctype_b_loc(), !dbg !2997
  %818 = load i16** %817, align 8, !dbg !2997
  %819 = getelementptr inbounds i16* %818, i64 %816, !dbg !2997
  %820 = load i16* %819, align 2, !dbg !2997
  %821 = zext i16 %820 to i32, !dbg !2997
  %822 = and i32 %821, 8, !dbg !2997
  %823 = icmp ne i32 %822, 0, !dbg !2997
  br i1 %823, label %828, label %824, !dbg !2997

; <label>:824                                     ; preds = %812
  %825 = load i8** %locinput, align 8, !dbg !2999
  %826 = call i64 @Perl_utf8_to_uvchr(i8* %825, i64* null), !dbg !2999
  %827 = icmp eq i64 %826, 95, !dbg !2999
  br label %828, !dbg !2999

; <label>:828                                     ; preds = %824, %812
  %829 = phi i1 [ true, %812 ], [ %827, %824 ]
  br label %830

; <label>:830                                     ; preds = %828, %807
  %831 = phi i1 [ false, %807 ], [ %829, %828 ]
  %832 = zext i1 %831 to i32, !dbg !3001
  br label %838, !dbg !3001

; <label>:833                                     ; preds = %803
  %834 = load i8** %locinput, align 8, !dbg !3003
  %835 = call i64 @Perl_utf8_to_uvchr(i8* %834, i64* null), !dbg !3003
  %836 = call signext i8 @Perl_is_uni_alnum_lc(i64 %835), !dbg !3003
  %837 = sext i8 %836 to i32, !dbg !3003
  br label %838, !dbg !3003

; <label>:838                                     ; preds = %833, %830
  %839 = phi i32 [ %832, %830 ], [ %837, %833 ], !dbg !2994
  %840 = sext i32 %839 to i64, !dbg !3005
  %841 = icmp ne i64 %840, 0, !dbg !2989
  br i1 %841, label %843, label %842, !dbg !2989

; <label>:842                                     ; preds = %838, %797
  br label %6127, !dbg !3008

; <label>:843                                     ; preds = %838, %797
  %844 = load i32* %nextchr, align 4, !dbg !3010
  %845 = sext i32 %844 to i64, !dbg !3011
  %846 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %845, !dbg !3011
  %847 = load i8* %846, align 1, !dbg !3011
  %848 = zext i8 %847 to i32, !dbg !3011
  %849 = load i8** %locinput, align 8, !dbg !3012
  %850 = sext i32 %848 to i64, !dbg !3012
  %851 = getelementptr inbounds i8* %849, i64 %850, !dbg !3012
  store i8* %851, i8** %locinput, align 8, !dbg !3012
  %852 = load i8** %locinput, align 8, !dbg !3013
  %853 = load i8* %852, align 1, !dbg !3013
  %854 = zext i8 %853 to i32, !dbg !3013
  store i32 %854, i32* %nextchr, align 4, !dbg !3014
  br label %6120, !dbg !3015

; <label>:855                                     ; preds = %783
  %856 = load %struct.regnode** %scan, align 8, !dbg !3016
  %857 = getelementptr inbounds %struct.regnode* %856, i32 0, i32 1, !dbg !3016
  %858 = load i8* %857, align 1, !dbg !3016
  %859 = zext i8 %858 to i32, !dbg !3016
  %860 = icmp eq i32 %859, 18, !dbg !3016
  br i1 %860, label %861, label %882, !dbg !3018

; <label>:861                                     ; preds = %855
  %862 = load i32* %nextchr, align 4, !dbg !3019
  %863 = icmp sge i32 %862, 65, !dbg !3019
  br i1 %863, label %864, label %867, !dbg !3018

; <label>:864                                     ; preds = %861
  %865 = load i32* %nextchr, align 4, !dbg !3019
  %866 = icmp sle i32 %865, 90, !dbg !3019
  br i1 %866, label %900, label %867, !dbg !3018

; <label>:867                                     ; preds = %864, %861
  %868 = load i32* %nextchr, align 4, !dbg !3019
  %869 = icmp sge i32 %868, 97, !dbg !3019
  br i1 %869, label %870, label %873, !dbg !3018

; <label>:870                                     ; preds = %867
  %871 = load i32* %nextchr, align 4, !dbg !3019
  %872 = icmp sle i32 %871, 122, !dbg !3019
  br i1 %872, label %900, label %873, !dbg !3018

; <label>:873                                     ; preds = %870, %867
  %874 = load i32* %nextchr, align 4, !dbg !3019
  %875 = icmp sge i32 %874, 48, !dbg !3019
  br i1 %875, label %876, label %879, !dbg !3018

; <label>:876                                     ; preds = %873
  %877 = load i32* %nextchr, align 4, !dbg !3019
  %878 = icmp sle i32 %877, 57, !dbg !3019
  br i1 %878, label %900, label %879, !dbg !3018

; <label>:879                                     ; preds = %876, %873
  %880 = load i32* %nextchr, align 4, !dbg !3019
  %881 = icmp eq i32 %880, 95, !dbg !3019
  br i1 %881, label %900, label %899, !dbg !3018

; <label>:882                                     ; preds = %855
  %883 = load i32* %nextchr, align 4, !dbg !3020
  %884 = and i32 %883, -128, !dbg !3020
  %885 = icmp eq i32 %884, 0, !dbg !3020
  br i1 %885, label %886, label %899, !dbg !3018

; <label>:886                                     ; preds = %882
  %887 = load i32* %nextchr, align 4, !dbg !3020
  %888 = sext i32 %887 to i64, !dbg !3020
  %889 = call i16** @__ctype_b_loc(), !dbg !3020
  %890 = load i16** %889, align 8, !dbg !3020
  %891 = getelementptr inbounds i16* %890, i64 %888, !dbg !3020
  %892 = load i16* %891, align 2, !dbg !3020
  %893 = zext i16 %892 to i32, !dbg !3020
  %894 = and i32 %893, 8, !dbg !3020
  %895 = icmp ne i32 %894, 0, !dbg !3018
  br i1 %895, label %900, label %896, !dbg !3018

; <label>:896                                     ; preds = %886
  %897 = load i32* %nextchr, align 4, !dbg !3020
  %898 = icmp eq i32 %897, 95, !dbg !3020
  br i1 %898, label %900, label %899, !dbg !3018

; <label>:899                                     ; preds = %896, %882, %879
  br label %6127, !dbg !3021

; <label>:900                                     ; preds = %896, %886, %879, %876, %870, %864
  %901 = load i8** %locinput, align 8, !dbg !3022
  %902 = getelementptr inbounds i8* %901, i32 1, !dbg !3022
  store i8* %902, i8** %locinput, align 8, !dbg !3022
  %903 = load i8* %902, align 1, !dbg !3022
  %904 = zext i8 %903 to i32, !dbg !3022
  store i32 %904, i32* %nextchr, align 4, !dbg !3023
  br label %6120, !dbg !3024

; <label>:905                                     ; preds = %24
  %906 = load i32* @PL_reg_flags, align 4, !dbg !3025
  %907 = or i32 %906, 1, !dbg !3025
  store i32 %907, i32* @PL_reg_flags, align 4, !dbg !3025
  br label %908, !dbg !3025

; <label>:908                                     ; preds = %24, %905
  %909 = load i32* %nextchr, align 4, !dbg !3026
  %910 = icmp ne i32 %909, 0, !dbg !3028
  br i1 %910, label %916, label %911, !dbg !3028

; <label>:911                                     ; preds = %908
  %912 = load i8** %locinput, align 8, !dbg !3029
  %913 = load i8** @PL_regeol, align 8, !dbg !3031
  %914 = icmp uge i8* %912, %913, !dbg !3032
  br i1 %914, label %915, label %916, !dbg !3028

; <label>:915                                     ; preds = %911
  br label %6127, !dbg !3033

; <label>:916                                     ; preds = %911, %908
  %917 = load i8* %do_utf8, align 1, !dbg !3034
  %918 = icmp ne i8 %917, 0, !dbg !3036
  br i1 %918, label %919, label %988, !dbg !3036

; <label>:919                                     ; preds = %916
  %920 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !3037
  %921 = icmp ne %struct.sv* %920, null, !dbg !3041
  br i1 %921, label %924, label %922, !dbg !3041

; <label>:922                                     ; preds = %919
  call void @Perl_push_scope(), !dbg !3042
  call void @Perl_save_re_context(), !dbg !3042
  %923 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8]* @.str2, i32 0, i32 0)), !dbg !3042
  call void @Perl_pop_scope(), !dbg !3042
  br label %924, !dbg !3042

; <label>:924                                     ; preds = %922, %919
  %925 = load %struct.regnode** %scan, align 8, !dbg !3045
  %926 = getelementptr inbounds %struct.regnode* %925, i32 0, i32 1, !dbg !3045
  %927 = load i8* %926, align 1, !dbg !3045
  %928 = zext i8 %927 to i32, !dbg !3045
  %929 = icmp eq i32 %928, 20, !dbg !3045
  br i1 %929, label %930, label %936, !dbg !3047

; <label>:930                                     ; preds = %924
  %931 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !3048
  %932 = load i8** %locinput, align 8, !dbg !3049
  %933 = load i8* %do_utf8, align 1, !dbg !3050
  %934 = call i64 @Perl_swash_fetch(%struct.sv* %931, i8* %932, i8 signext %933), !dbg !3051
  %935 = icmp ne i64 %934, 0, !dbg !3047
  br i1 %935, label %975, label %976, !dbg !3047

; <label>:936                                     ; preds = %924
  %937 = load i8** %locinput, align 8, !dbg !3052
  %938 = call i64 @Perl_utf8_to_uvchr(i8* %937, i64* null), !dbg !3052
  %939 = icmp ult i64 %938, 256, !dbg !3052
  br i1 %939, label %940, label %966, !dbg !3052

; <label>:940                                     ; preds = %936
  %941 = load i8** %locinput, align 8, !dbg !3053
  %942 = call i64 @Perl_utf8_to_uvchr(i8* %941, i64* null), !dbg !3053
  %943 = and i64 %942, -128, !dbg !3053
  %944 = icmp eq i64 %943, 0, !dbg !3053
  br i1 %944, label %945, label %963, !dbg !3053

; <label>:945                                     ; preds = %940
  %946 = load i8** %locinput, align 8, !dbg !3055
  %947 = call i64 @Perl_utf8_to_uvchr(i8* %946, i64* null), !dbg !3055
  %948 = trunc i64 %947 to i32, !dbg !3055
  %949 = sext i32 %948 to i64, !dbg !3055
  %950 = call i16** @__ctype_b_loc(), !dbg !3055
  %951 = load i16** %950, align 8, !dbg !3055
  %952 = getelementptr inbounds i16* %951, i64 %949, !dbg !3055
  %953 = load i16* %952, align 2, !dbg !3055
  %954 = zext i16 %953 to i32, !dbg !3055
  %955 = and i32 %954, 8, !dbg !3055
  %956 = icmp ne i32 %955, 0, !dbg !3055
  br i1 %956, label %961, label %957, !dbg !3055

; <label>:957                                     ; preds = %945
  %958 = load i8** %locinput, align 8, !dbg !3057
  %959 = call i64 @Perl_utf8_to_uvchr(i8* %958, i64* null), !dbg !3057
  %960 = icmp eq i64 %959, 95, !dbg !3057
  br label %961, !dbg !3057

; <label>:961                                     ; preds = %957, %945
  %962 = phi i1 [ true, %945 ], [ %960, %957 ]
  br label %963

; <label>:963                                     ; preds = %961, %940
  %964 = phi i1 [ false, %940 ], [ %962, %961 ]
  %965 = zext i1 %964 to i32, !dbg !3059
  br label %971, !dbg !3059

; <label>:966                                     ; preds = %936
  %967 = load i8** %locinput, align 8, !dbg !3061
  %968 = call i64 @Perl_utf8_to_uvchr(i8* %967, i64* null), !dbg !3061
  %969 = call signext i8 @Perl_is_uni_alnum_lc(i64 %968), !dbg !3061
  %970 = sext i8 %969 to i32, !dbg !3061
  br label %971, !dbg !3061

; <label>:971                                     ; preds = %966, %963
  %972 = phi i32 [ %965, %963 ], [ %970, %966 ], !dbg !3052
  %973 = sext i32 %972 to i64, !dbg !3063
  %974 = icmp ne i64 %973, 0, !dbg !3047
  br i1 %974, label %975, label %976, !dbg !3047

; <label>:975                                     ; preds = %971, %930
  br label %6127, !dbg !3066

; <label>:976                                     ; preds = %971, %930
  %977 = load i32* %nextchr, align 4, !dbg !3068
  %978 = sext i32 %977 to i64, !dbg !3069
  %979 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %978, !dbg !3069
  %980 = load i8* %979, align 1, !dbg !3069
  %981 = zext i8 %980 to i32, !dbg !3069
  %982 = load i8** %locinput, align 8, !dbg !3070
  %983 = sext i32 %981 to i64, !dbg !3070
  %984 = getelementptr inbounds i8* %982, i64 %983, !dbg !3070
  store i8* %984, i8** %locinput, align 8, !dbg !3070
  %985 = load i8** %locinput, align 8, !dbg !3071
  %986 = load i8* %985, align 1, !dbg !3071
  %987 = zext i8 %986 to i32, !dbg !3071
  store i32 %987, i32* %nextchr, align 4, !dbg !3072
  br label %6120, !dbg !3073

; <label>:988                                     ; preds = %916
  %989 = load %struct.regnode** %scan, align 8, !dbg !3074
  %990 = getelementptr inbounds %struct.regnode* %989, i32 0, i32 1, !dbg !3074
  %991 = load i8* %990, align 1, !dbg !3074
  %992 = zext i8 %991 to i32, !dbg !3074
  %993 = icmp eq i32 %992, 20, !dbg !3074
  br i1 %993, label %994, label %1015, !dbg !3076

; <label>:994                                     ; preds = %988
  %995 = load i32* %nextchr, align 4, !dbg !3077
  %996 = icmp sge i32 %995, 65, !dbg !3077
  br i1 %996, label %997, label %1000, !dbg !3076

; <label>:997                                     ; preds = %994
  %998 = load i32* %nextchr, align 4, !dbg !3077
  %999 = icmp sle i32 %998, 90, !dbg !3077
  br i1 %999, label %1032, label %1000, !dbg !3076

; <label>:1000                                    ; preds = %997, %994
  %1001 = load i32* %nextchr, align 4, !dbg !3077
  %1002 = icmp sge i32 %1001, 97, !dbg !3077
  br i1 %1002, label %1003, label %1006, !dbg !3076

; <label>:1003                                    ; preds = %1000
  %1004 = load i32* %nextchr, align 4, !dbg !3077
  %1005 = icmp sle i32 %1004, 122, !dbg !3077
  br i1 %1005, label %1032, label %1006, !dbg !3076

; <label>:1006                                    ; preds = %1003, %1000
  %1007 = load i32* %nextchr, align 4, !dbg !3077
  %1008 = icmp sge i32 %1007, 48, !dbg !3077
  br i1 %1008, label %1009, label %1012, !dbg !3076

; <label>:1009                                    ; preds = %1006
  %1010 = load i32* %nextchr, align 4, !dbg !3077
  %1011 = icmp sle i32 %1010, 57, !dbg !3077
  br i1 %1011, label %1032, label %1012, !dbg !3076

; <label>:1012                                    ; preds = %1009, %1006
  %1013 = load i32* %nextchr, align 4, !dbg !3077
  %1014 = icmp eq i32 %1013, 95, !dbg !3077
  br i1 %1014, label %1032, label %1033, !dbg !3076

; <label>:1015                                    ; preds = %988
  %1016 = load i32* %nextchr, align 4, !dbg !3078
  %1017 = and i32 %1016, -128, !dbg !3078
  %1018 = icmp eq i32 %1017, 0, !dbg !3078
  br i1 %1018, label %1019, label %1033, !dbg !3076

; <label>:1019                                    ; preds = %1015
  %1020 = load i32* %nextchr, align 4, !dbg !3078
  %1021 = sext i32 %1020 to i64, !dbg !3078
  %1022 = call i16** @__ctype_b_loc(), !dbg !3078
  %1023 = load i16** %1022, align 8, !dbg !3078
  %1024 = getelementptr inbounds i16* %1023, i64 %1021, !dbg !3078
  %1025 = load i16* %1024, align 2, !dbg !3078
  %1026 = zext i16 %1025 to i32, !dbg !3078
  %1027 = and i32 %1026, 8, !dbg !3078
  %1028 = icmp ne i32 %1027, 0, !dbg !3076
  br i1 %1028, label %1032, label %1029, !dbg !3076

; <label>:1029                                    ; preds = %1019
  %1030 = load i32* %nextchr, align 4, !dbg !3078
  %1031 = icmp eq i32 %1030, 95, !dbg !3078
  br i1 %1031, label %1032, label %1033, !dbg !3076

; <label>:1032                                    ; preds = %1029, %1019, %1012, %1009, %1003, %997
  br label %6127, !dbg !3079

; <label>:1033                                    ; preds = %1029, %1015, %1012
  %1034 = load i8** %locinput, align 8, !dbg !3080
  %1035 = getelementptr inbounds i8* %1034, i32 1, !dbg !3080
  store i8* %1035, i8** %locinput, align 8, !dbg !3080
  %1036 = load i8* %1035, align 1, !dbg !3080
  %1037 = zext i8 %1036 to i32, !dbg !3080
  store i32 %1037, i32* %nextchr, align 4, !dbg !3081
  br label %6120, !dbg !3082

; <label>:1038                                    ; preds = %24, %24
  %1039 = load i32* @PL_reg_flags, align 4, !dbg !3083
  %1040 = or i32 %1039, 1, !dbg !3083
  store i32 %1040, i32* @PL_reg_flags, align 4, !dbg !3083
  br label %1041, !dbg !3083

; <label>:1041                                    ; preds = %24, %24, %1038
  %1042 = load i8* %do_utf8, align 1, !dbg !3084
  %1043 = icmp ne i8 %1042, 0, !dbg !3086
  br i1 %1043, label %1044, label %1160, !dbg !3086

; <label>:1044                                    ; preds = %1041
  %1045 = load i8** %locinput, align 8, !dbg !3087
  %1046 = load i8** @PL_bostr, align 8, !dbg !3090
  %1047 = icmp eq i8* %1045, %1046, !dbg !3087
  br i1 %1047, label %1048, label %1049, !dbg !3091

; <label>:1048                                    ; preds = %1044
  store i32 10, i32* %ln, align 4, !dbg !3092
  br label %1064, !dbg !3092

; <label>:1049                                    ; preds = %1044
  call void @llvm.dbg.declare(metadata i8** %r, metadata !3093, metadata !566), !dbg !3095
  %1050 = load i8** %locinput, align 8, !dbg !3096
  %1051 = load i8** @PL_bostr, align 8, !dbg !3097
  %1052 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1050, i32 -1, i8* %1051), !dbg !3098
  %1053 = sext i32 %1052 to i64, !dbg !3098
  %1054 = inttoptr i64 %1053 to i8*, !dbg !3098
  store i8* %1054, i8** %r, align 8, !dbg !3095
  %1055 = load i8** %r, align 8, !dbg !3099
  %1056 = load i8** %r, align 8, !dbg !3100
  %1057 = load i8* %1056, align 1, !dbg !3100
  %1058 = zext i8 %1057 to i64, !dbg !3100
  %1059 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1058, !dbg !3100
  %1060 = load i8* %1059, align 1, !dbg !3100
  %1061 = zext i8 %1060 to i64, !dbg !3100
  %1062 = call i64 @Perl_utf8n_to_uvuni(i8* %1055, i64 %1061, i64* null, i32 0), !dbg !3101
  %1063 = trunc i64 %1062 to i32, !dbg !3101
  store i32 %1063, i32* %ln, align 4, !dbg !3102
  br label %1064

; <label>:1064                                    ; preds = %1049, %1048
  %1065 = load %struct.regnode** %scan, align 8, !dbg !3103
  %1066 = getelementptr inbounds %struct.regnode* %1065, i32 0, i32 1, !dbg !3103
  %1067 = load i8* %1066, align 1, !dbg !3103
  %1068 = zext i8 %1067 to i32, !dbg !3103
  %1069 = icmp eq i32 %1068, 9, !dbg !3103
  br i1 %1069, label %1076, label %1070, !dbg !3105

; <label>:1070                                    ; preds = %1064
  %1071 = load %struct.regnode** %scan, align 8, !dbg !3106
  %1072 = getelementptr inbounds %struct.regnode* %1071, i32 0, i32 1, !dbg !3106
  %1073 = load i8* %1072, align 1, !dbg !3106
  %1074 = zext i8 %1073 to i32, !dbg !3106
  %1075 = icmp eq i32 %1074, 11, !dbg !3106
  br i1 %1075, label %1076, label %1091, !dbg !3105

; <label>:1076                                    ; preds = %1070, %1064
  %1077 = load i32* %ln, align 4, !dbg !3108
  %1078 = sext i32 %1077 to i64, !dbg !3108
  %1079 = call signext i8 @Perl_is_uni_alnum(i64 %1078), !dbg !3108
  %1080 = sext i8 %1079 to i32, !dbg !3108
  store i32 %1080, i32* %ln, align 4, !dbg !3110
  %1081 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !3111
  %1082 = icmp ne %struct.sv* %1081, null, !dbg !3114
  br i1 %1082, label %1085, label %1083, !dbg !3114

; <label>:1083                                    ; preds = %1076
  call void @Perl_push_scope(), !dbg !3115
  call void @Perl_save_re_context(), !dbg !3115
  %1084 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8]* @.str2, i32 0, i32 0)), !dbg !3115
  call void @Perl_pop_scope(), !dbg !3115
  br label %1085, !dbg !3115

; <label>:1085                                    ; preds = %1083, %1076
  %1086 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !3118
  %1087 = load i8** %locinput, align 8, !dbg !3119
  %1088 = load i8* %do_utf8, align 1, !dbg !3120
  %1089 = call i64 @Perl_swash_fetch(%struct.sv* %1086, i8* %1087, i8 signext %1088), !dbg !3121
  %1090 = trunc i64 %1089 to i32, !dbg !3121
  store i32 %1090, i32* %n, align 4, !dbg !3122
  br label %1159, !dbg !3123

; <label>:1091                                    ; preds = %1070
  %1092 = load i32* %ln, align 4, !dbg !3124
  %1093 = icmp slt i32 %1092, 256, !dbg !3124
  br i1 %1093, label %1094, label %1116, !dbg !3124

; <label>:1094                                    ; preds = %1091
  %1095 = load i32* %ln, align 4, !dbg !3126
  %1096 = and i32 %1095, -128, !dbg !3126
  %1097 = icmp eq i32 %1096, 0, !dbg !3126
  br i1 %1097, label %1098, label %1113, !dbg !3126

; <label>:1098                                    ; preds = %1094
  %1099 = load i32* %ln, align 4, !dbg !3128
  %1100 = sext i32 %1099 to i64, !dbg !3128
  %1101 = call i16** @__ctype_b_loc(), !dbg !3128
  %1102 = load i16** %1101, align 8, !dbg !3128
  %1103 = getelementptr inbounds i16* %1102, i64 %1100, !dbg !3128
  %1104 = load i16* %1103, align 2, !dbg !3128
  %1105 = zext i16 %1104 to i32, !dbg !3128
  %1106 = and i32 %1105, 8, !dbg !3128
  %1107 = icmp ne i32 %1106, 0, !dbg !3128
  br i1 %1107, label %1111, label %1108, !dbg !3128

; <label>:1108                                    ; preds = %1098
  %1109 = load i32* %ln, align 4, !dbg !3130
  %1110 = icmp eq i32 %1109, 95, !dbg !3130
  br label %1111, !dbg !3130

; <label>:1111                                    ; preds = %1108, %1098
  %1112 = phi i1 [ true, %1098 ], [ %1110, %1108 ]
  br label %1113

; <label>:1113                                    ; preds = %1111, %1094
  %1114 = phi i1 [ false, %1094 ], [ %1112, %1111 ]
  %1115 = zext i1 %1114 to i32, !dbg !3132
  br label %1121, !dbg !3132

; <label>:1116                                    ; preds = %1091
  %1117 = load i32* %ln, align 4, !dbg !3134
  %1118 = sext i32 %1117 to i64, !dbg !3134
  %1119 = call signext i8 @Perl_is_uni_alnum_lc(i64 %1118), !dbg !3134
  %1120 = sext i8 %1119 to i32, !dbg !3134
  br label %1121, !dbg !3134

; <label>:1121                                    ; preds = %1116, %1113
  %1122 = phi i32 [ %1115, %1113 ], [ %1120, %1116 ], !dbg !3124
  store i32 %1122, i32* %ln, align 4, !dbg !3136
  %1123 = load i8** %locinput, align 8, !dbg !3139
  %1124 = call i64 @Perl_utf8_to_uvchr(i8* %1123, i64* null), !dbg !3139
  %1125 = icmp ult i64 %1124, 256, !dbg !3139
  br i1 %1125, label %1126, label %1152, !dbg !3139

; <label>:1126                                    ; preds = %1121
  %1127 = load i8** %locinput, align 8, !dbg !3140
  %1128 = call i64 @Perl_utf8_to_uvchr(i8* %1127, i64* null), !dbg !3140
  %1129 = and i64 %1128, -128, !dbg !3140
  %1130 = icmp eq i64 %1129, 0, !dbg !3140
  br i1 %1130, label %1131, label %1149, !dbg !3140

; <label>:1131                                    ; preds = %1126
  %1132 = load i8** %locinput, align 8, !dbg !3141
  %1133 = call i64 @Perl_utf8_to_uvchr(i8* %1132, i64* null), !dbg !3141
  %1134 = trunc i64 %1133 to i32, !dbg !3141
  %1135 = sext i32 %1134 to i64, !dbg !3141
  %1136 = call i16** @__ctype_b_loc(), !dbg !3141
  %1137 = load i16** %1136, align 8, !dbg !3141
  %1138 = getelementptr inbounds i16* %1137, i64 %1135, !dbg !3141
  %1139 = load i16* %1138, align 2, !dbg !3141
  %1140 = zext i16 %1139 to i32, !dbg !3141
  %1141 = and i32 %1140, 8, !dbg !3141
  %1142 = icmp ne i32 %1141, 0, !dbg !3141
  br i1 %1142, label %1147, label %1143, !dbg !3141

; <label>:1143                                    ; preds = %1131
  %1144 = load i8** %locinput, align 8, !dbg !3142
  %1145 = call i64 @Perl_utf8_to_uvchr(i8* %1144, i64* null), !dbg !3142
  %1146 = icmp eq i64 %1145, 95, !dbg !3142
  br label %1147, !dbg !3142

; <label>:1147                                    ; preds = %1143, %1131
  %1148 = phi i1 [ true, %1131 ], [ %1146, %1143 ]
  br label %1149

; <label>:1149                                    ; preds = %1147, %1126
  %1150 = phi i1 [ false, %1126 ], [ %1148, %1147 ]
  %1151 = zext i1 %1150 to i32, !dbg !3143
  br label %1157, !dbg !3143

; <label>:1152                                    ; preds = %1121
  %1153 = load i8** %locinput, align 8, !dbg !3144
  %1154 = call i64 @Perl_utf8_to_uvchr(i8* %1153, i64* null), !dbg !3144
  %1155 = call signext i8 @Perl_is_uni_alnum_lc(i64 %1154), !dbg !3144
  %1156 = sext i8 %1155 to i32, !dbg !3144
  br label %1157, !dbg !3144

; <label>:1157                                    ; preds = %1152, %1149
  %1158 = phi i32 [ %1151, %1149 ], [ %1156, %1152 ], !dbg !3139
  store i32 %1158, i32* %n, align 4, !dbg !3145
  br label %1159

; <label>:1159                                    ; preds = %1157, %1085
  br label %1274, !dbg !3146

; <label>:1160                                    ; preds = %1041
  %1161 = load i8** %locinput, align 8, !dbg !3147
  %1162 = load i8** @PL_bostr, align 8, !dbg !3149
  %1163 = icmp ne i8* %1161, %1162, !dbg !3147
  br i1 %1163, label %1164, label %1169, !dbg !3150

; <label>:1164                                    ; preds = %1160
  %1165 = load i8** %locinput, align 8, !dbg !3151
  %1166 = getelementptr inbounds i8* %1165, i64 -1, !dbg !3151
  %1167 = load i8* %1166, align 1, !dbg !3151
  %1168 = zext i8 %1167 to i32, !dbg !3151
  br label %1170, !dbg !3150

; <label>:1169                                    ; preds = %1160
  br label %1170, !dbg !3152

; <label>:1170                                    ; preds = %1169, %1164
  %1171 = phi i32 [ %1168, %1164 ], [ 10, %1169 ], !dbg !3150
  store i32 %1171, i32* %ln, align 4, !dbg !3154
  %1172 = load %struct.regnode** %scan, align 8, !dbg !3157
  %1173 = getelementptr inbounds %struct.regnode* %1172, i32 0, i32 1, !dbg !3157
  %1174 = load i8* %1173, align 1, !dbg !3157
  %1175 = zext i8 %1174 to i32, !dbg !3157
  %1176 = icmp eq i32 %1175, 9, !dbg !3157
  br i1 %1176, label %1183, label %1177, !dbg !3159

; <label>:1177                                    ; preds = %1170
  %1178 = load %struct.regnode** %scan, align 8, !dbg !3160
  %1179 = getelementptr inbounds %struct.regnode* %1178, i32 0, i32 1, !dbg !3160
  %1180 = load i8* %1179, align 1, !dbg !3160
  %1181 = zext i8 %1180 to i32, !dbg !3160
  %1182 = icmp eq i32 %1181, 11, !dbg !3160
  br i1 %1182, label %1183, label %1230, !dbg !3159

; <label>:1183                                    ; preds = %1177, %1170
  %1184 = load i32* %ln, align 4, !dbg !3162
  %1185 = icmp sge i32 %1184, 65, !dbg !3162
  br i1 %1185, label %1186, label %1189, !dbg !3162

; <label>:1186                                    ; preds = %1183
  %1187 = load i32* %ln, align 4, !dbg !3164
  %1188 = icmp sle i32 %1187, 90, !dbg !3164
  br i1 %1188, label %1204, label %1189, !dbg !3164

; <label>:1189                                    ; preds = %1186, %1183
  %1190 = load i32* %ln, align 4, !dbg !3166
  %1191 = icmp sge i32 %1190, 97, !dbg !3166
  br i1 %1191, label %1192, label %1195, !dbg !3166

; <label>:1192                                    ; preds = %1189
  %1193 = load i32* %ln, align 4, !dbg !3169
  %1194 = icmp sle i32 %1193, 122, !dbg !3169
  br i1 %1194, label %1204, label %1195, !dbg !3169

; <label>:1195                                    ; preds = %1192, %1189
  %1196 = load i32* %ln, align 4, !dbg !3171
  %1197 = icmp sge i32 %1196, 48, !dbg !3171
  br i1 %1197, label %1198, label %1201, !dbg !3171

; <label>:1198                                    ; preds = %1195
  %1199 = load i32* %ln, align 4, !dbg !3174
  %1200 = icmp sle i32 %1199, 57, !dbg !3174
  br i1 %1200, label %1204, label %1201, !dbg !3174

; <label>:1201                                    ; preds = %1198, %1195
  %1202 = load i32* %ln, align 4, !dbg !3176
  %1203 = icmp eq i32 %1202, 95, !dbg !3176
  br label %1204, !dbg !3176

; <label>:1204                                    ; preds = %1201, %1198, %1192, %1186
  %1205 = phi i1 [ true, %1198 ], [ true, %1192 ], [ true, %1186 ], [ %1203, %1201 ]
  %1206 = zext i1 %1205 to i32, !dbg !3179
  store i32 %1206, i32* %ln, align 4, !dbg !3184
  %1207 = load i32* %nextchr, align 4, !dbg !3185
  %1208 = icmp sge i32 %1207, 65, !dbg !3185
  br i1 %1208, label %1209, label %1212, !dbg !3185

; <label>:1209                                    ; preds = %1204
  %1210 = load i32* %nextchr, align 4, !dbg !3186
  %1211 = icmp sle i32 %1210, 90, !dbg !3186
  br i1 %1211, label %1227, label %1212, !dbg !3186

; <label>:1212                                    ; preds = %1209, %1204
  %1213 = load i32* %nextchr, align 4, !dbg !3187
  %1214 = icmp sge i32 %1213, 97, !dbg !3187
  br i1 %1214, label %1215, label %1218, !dbg !3187

; <label>:1215                                    ; preds = %1212
  %1216 = load i32* %nextchr, align 4, !dbg !3188
  %1217 = icmp sle i32 %1216, 122, !dbg !3188
  br i1 %1217, label %1227, label %1218, !dbg !3188

; <label>:1218                                    ; preds = %1215, %1212
  %1219 = load i32* %nextchr, align 4, !dbg !3189
  %1220 = icmp sge i32 %1219, 48, !dbg !3189
  br i1 %1220, label %1221, label %1224, !dbg !3189

; <label>:1221                                    ; preds = %1218
  %1222 = load i32* %nextchr, align 4, !dbg !3190
  %1223 = icmp sle i32 %1222, 57, !dbg !3190
  br i1 %1223, label %1227, label %1224, !dbg !3190

; <label>:1224                                    ; preds = %1221, %1218
  %1225 = load i32* %nextchr, align 4, !dbg !3191
  %1226 = icmp eq i32 %1225, 95, !dbg !3191
  br label %1227, !dbg !3191

; <label>:1227                                    ; preds = %1224, %1221, %1215, %1209
  %1228 = phi i1 [ true, %1221 ], [ true, %1215 ], [ true, %1209 ], [ %1226, %1224 ]
  %1229 = zext i1 %1228 to i32, !dbg !3192
  store i32 %1229, i32* %n, align 4, !dbg !3193
  br label %1273, !dbg !3194

; <label>:1230                                    ; preds = %1177
  %1231 = load i32* %ln, align 4, !dbg !3195
  %1232 = and i32 %1231, -128, !dbg !3195
  %1233 = icmp eq i32 %1232, 0, !dbg !3195
  br i1 %1233, label %1234, label %1249, !dbg !3195

; <label>:1234                                    ; preds = %1230
  %1235 = load i32* %ln, align 4, !dbg !3197
  %1236 = sext i32 %1235 to i64, !dbg !3197
  %1237 = call i16** @__ctype_b_loc(), !dbg !3197
  %1238 = load i16** %1237, align 8, !dbg !3197
  %1239 = getelementptr inbounds i16* %1238, i64 %1236, !dbg !3197
  %1240 = load i16* %1239, align 2, !dbg !3197
  %1241 = zext i16 %1240 to i32, !dbg !3197
  %1242 = and i32 %1241, 8, !dbg !3197
  %1243 = icmp ne i32 %1242, 0, !dbg !3197
  br i1 %1243, label %1247, label %1244, !dbg !3197

; <label>:1244                                    ; preds = %1234
  %1245 = load i32* %ln, align 4, !dbg !3199
  %1246 = icmp eq i32 %1245, 95, !dbg !3199
  br label %1247, !dbg !3199

; <label>:1247                                    ; preds = %1244, %1234
  %1248 = phi i1 [ true, %1234 ], [ %1246, %1244 ]
  br label %1249

; <label>:1249                                    ; preds = %1247, %1230
  %1250 = phi i1 [ false, %1230 ], [ %1248, %1247 ]
  %1251 = zext i1 %1250 to i32, !dbg !3201
  store i32 %1251, i32* %ln, align 4, !dbg !3203
  %1252 = load i32* %nextchr, align 4, !dbg !3204
  %1253 = and i32 %1252, -128, !dbg !3204
  %1254 = icmp eq i32 %1253, 0, !dbg !3204
  br i1 %1254, label %1255, label %1270, !dbg !3204

; <label>:1255                                    ; preds = %1249
  %1256 = load i32* %nextchr, align 4, !dbg !3205
  %1257 = sext i32 %1256 to i64, !dbg !3205
  %1258 = call i16** @__ctype_b_loc(), !dbg !3205
  %1259 = load i16** %1258, align 8, !dbg !3205
  %1260 = getelementptr inbounds i16* %1259, i64 %1257, !dbg !3205
  %1261 = load i16* %1260, align 2, !dbg !3205
  %1262 = zext i16 %1261 to i32, !dbg !3205
  %1263 = and i32 %1262, 8, !dbg !3205
  %1264 = icmp ne i32 %1263, 0, !dbg !3205
  br i1 %1264, label %1268, label %1265, !dbg !3205

; <label>:1265                                    ; preds = %1255
  %1266 = load i32* %nextchr, align 4, !dbg !3206
  %1267 = icmp eq i32 %1266, 95, !dbg !3206
  br label %1268, !dbg !3206

; <label>:1268                                    ; preds = %1265, %1255
  %1269 = phi i1 [ true, %1255 ], [ %1267, %1265 ]
  br label %1270

; <label>:1270                                    ; preds = %1268, %1249
  %1271 = phi i1 [ false, %1249 ], [ %1269, %1268 ]
  %1272 = zext i1 %1271 to i32, !dbg !3207
  store i32 %1272, i32* %n, align 4, !dbg !3208
  br label %1273

; <label>:1273                                    ; preds = %1270, %1227
  br label %1274

; <label>:1274                                    ; preds = %1273, %1159
  %1275 = load i32* %ln, align 4, !dbg !3209
  %1276 = icmp ne i32 %1275, 0, !dbg !3211
  %1277 = xor i1 %1276, true, !dbg !3211
  %1278 = zext i1 %1277 to i32, !dbg !3211
  %1279 = load i32* %n, align 4, !dbg !3212
  %1280 = icmp ne i32 %1279, 0, !dbg !3213
  %1281 = xor i1 %1280, true, !dbg !3213
  %1282 = zext i1 %1281 to i32, !dbg !3213
  %1283 = icmp eq i32 %1278, %1282, !dbg !3214
  %1284 = zext i1 %1283 to i32, !dbg !3214
  %1285 = load %struct.regnode** %scan, align 8, !dbg !3215
  %1286 = getelementptr inbounds %struct.regnode* %1285, i32 0, i32 1, !dbg !3215
  %1287 = load i8* %1286, align 1, !dbg !3215
  %1288 = zext i8 %1287 to i32, !dbg !3215
  %1289 = icmp eq i32 %1288, 9, !dbg !3215
  br i1 %1289, label %1296, label %1290, !dbg !3215

; <label>:1290                                    ; preds = %1274
  %1291 = load %struct.regnode** %scan, align 8, !dbg !3216
  %1292 = getelementptr inbounds %struct.regnode* %1291, i32 0, i32 1, !dbg !3216
  %1293 = load i8* %1292, align 1, !dbg !3216
  %1294 = zext i8 %1293 to i32, !dbg !3216
  %1295 = icmp eq i32 %1294, 10, !dbg !3216
  br label %1296, !dbg !3215

; <label>:1296                                    ; preds = %1290, %1274
  %1297 = phi i1 [ true, %1274 ], [ %1295, %1290 ]
  %1298 = zext i1 %1297 to i32, !dbg !3217
  %1299 = icmp eq i32 %1284, %1298, !dbg !3220
  br i1 %1299, label %1300, label %1301, !dbg !3221

; <label>:1300                                    ; preds = %1296
  br label %6127, !dbg !3222

; <label>:1301                                    ; preds = %1296
  br label %6120, !dbg !3223

; <label>:1302                                    ; preds = %24
  %1303 = load i32* @PL_reg_flags, align 4, !dbg !3224
  %1304 = or i32 %1303, 1, !dbg !3224
  store i32 %1304, i32* @PL_reg_flags, align 4, !dbg !3224
  br label %1305, !dbg !3224

; <label>:1305                                    ; preds = %24, %1302
  %1306 = load i32* %nextchr, align 4, !dbg !3225
  %1307 = icmp ne i32 %1306, 0, !dbg !3227
  br i1 %1307, label %1309, label %1308, !dbg !3227

; <label>:1308                                    ; preds = %1305
  br label %6127, !dbg !3228

; <label>:1309                                    ; preds = %1305
  %1310 = load i8* %do_utf8, align 1, !dbg !3229
  %1311 = icmp ne i8 %1310, 0, !dbg !3231
  br i1 %1311, label %1312, label %1422, !dbg !3231

; <label>:1312                                    ; preds = %1309
  %1313 = load i32* %nextchr, align 4, !dbg !3232
  %1314 = trunc i32 %1313 to i8, !dbg !3232
  %1315 = zext i8 %1314 to i32, !dbg !3232
  %1316 = and i32 %1315, 128, !dbg !3232
  %1317 = icmp ne i32 %1316, 0, !dbg !3235
  br i1 %1317, label %1318, label %1381, !dbg !3235

; <label>:1318                                    ; preds = %1312
  %1319 = load %struct.sv** @PL_utf8_space, align 8, !dbg !3236
  %1320 = icmp ne %struct.sv* %1319, null, !dbg !3240
  br i1 %1320, label %1323, label %1321, !dbg !3240

; <label>:1321                                    ; preds = %1318
  call void @Perl_push_scope(), !dbg !3241
  call void @Perl_save_re_context(), !dbg !3241
  %1322 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8]* @.str3, i32 0, i32 0)), !dbg !3241
  call void @Perl_pop_scope(), !dbg !3241
  br label %1323, !dbg !3241

; <label>:1323                                    ; preds = %1321, %1318
  %1324 = load %struct.regnode** %scan, align 8, !dbg !3244
  %1325 = getelementptr inbounds %struct.regnode* %1324, i32 0, i32 1, !dbg !3244
  %1326 = load i8* %1325, align 1, !dbg !3244
  %1327 = zext i8 %1326 to i32, !dbg !3244
  %1328 = icmp eq i32 %1327, 22, !dbg !3244
  br i1 %1328, label %1329, label %1335, !dbg !3246

; <label>:1329                                    ; preds = %1323
  %1330 = load %struct.sv** @PL_utf8_space, align 8, !dbg !3247
  %1331 = load i8** %locinput, align 8, !dbg !3248
  %1332 = load i8* %do_utf8, align 1, !dbg !3249
  %1333 = call i64 @Perl_swash_fetch(%struct.sv* %1330, i8* %1331, i8 signext %1332), !dbg !3250
  %1334 = icmp ne i64 %1333, 0, !dbg !3246
  br i1 %1334, label %1369, label %1368, !dbg !3246

; <label>:1335                                    ; preds = %1323
  %1336 = load i8** %locinput, align 8, !dbg !3251
  %1337 = call i64 @Perl_utf8_to_uvchr(i8* %1336, i64* null), !dbg !3251
  %1338 = icmp ult i64 %1337, 256, !dbg !3251
  br i1 %1338, label %1339, label %1359, !dbg !3251

; <label>:1339                                    ; preds = %1335
  %1340 = load i8** %locinput, align 8, !dbg !3252
  %1341 = call i64 @Perl_utf8_to_uvchr(i8* %1340, i64* null), !dbg !3252
  %1342 = and i64 %1341, -128, !dbg !3252
  %1343 = icmp eq i64 %1342, 0, !dbg !3252
  br i1 %1343, label %1344, label %1356, !dbg !3252

; <label>:1344                                    ; preds = %1339
  %1345 = load i8** %locinput, align 8, !dbg !3254
  %1346 = call i64 @Perl_utf8_to_uvchr(i8* %1345, i64* null), !dbg !3254
  %1347 = trunc i64 %1346 to i32, !dbg !3254
  %1348 = sext i32 %1347 to i64, !dbg !3254
  %1349 = call i16** @__ctype_b_loc(), !dbg !3254
  %1350 = load i16** %1349, align 8, !dbg !3254
  %1351 = getelementptr inbounds i16* %1350, i64 %1348, !dbg !3254
  %1352 = load i16* %1351, align 2, !dbg !3254
  %1353 = zext i16 %1352 to i32, !dbg !3254
  %1354 = and i32 %1353, 8192, !dbg !3254
  %1355 = icmp ne i32 %1354, 0, !dbg !3254
  br label %1356

; <label>:1356                                    ; preds = %1344, %1339
  %1357 = phi i1 [ false, %1339 ], [ %1355, %1344 ]
  %1358 = zext i1 %1357 to i32, !dbg !3256
  br label %1364, !dbg !3256

; <label>:1359                                    ; preds = %1335
  %1360 = load i8** %locinput, align 8, !dbg !3258
  %1361 = call i64 @Perl_utf8_to_uvchr(i8* %1360, i64* null), !dbg !3258
  %1362 = call signext i8 @Perl_is_uni_space_lc(i64 %1361), !dbg !3258
  %1363 = sext i8 %1362 to i32, !dbg !3258
  br label %1364, !dbg !3258

; <label>:1364                                    ; preds = %1359, %1356
  %1365 = phi i32 [ %1358, %1356 ], [ %1363, %1359 ], !dbg !3251
  %1366 = sext i32 %1365 to i64, !dbg !3260
  %1367 = icmp ne i64 %1366, 0, !dbg !3246
  br i1 %1367, label %1369, label %1368, !dbg !3246

; <label>:1368                                    ; preds = %1364, %1329
  br label %6127, !dbg !3263

; <label>:1369                                    ; preds = %1364, %1329
  %1370 = load i32* %nextchr, align 4, !dbg !3265
  %1371 = sext i32 %1370 to i64, !dbg !3266
  %1372 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1371, !dbg !3266
  %1373 = load i8* %1372, align 1, !dbg !3266
  %1374 = zext i8 %1373 to i32, !dbg !3266
  %1375 = load i8** %locinput, align 8, !dbg !3267
  %1376 = sext i32 %1374 to i64, !dbg !3267
  %1377 = getelementptr inbounds i8* %1375, i64 %1376, !dbg !3267
  store i8* %1377, i8** %locinput, align 8, !dbg !3267
  %1378 = load i8** %locinput, align 8, !dbg !3268
  %1379 = load i8* %1378, align 1, !dbg !3268
  %1380 = zext i8 %1379 to i32, !dbg !3268
  store i32 %1380, i32* %nextchr, align 4, !dbg !3269
  br label %6120, !dbg !3270

; <label>:1381                                    ; preds = %1312
  %1382 = load %struct.regnode** %scan, align 8, !dbg !3271
  %1383 = getelementptr inbounds %struct.regnode* %1382, i32 0, i32 1, !dbg !3271
  %1384 = load i8* %1383, align 1, !dbg !3271
  %1385 = zext i8 %1384 to i32, !dbg !3271
  %1386 = icmp eq i32 %1385, 22, !dbg !3271
  br i1 %1386, label %1387, label %1402, !dbg !3273

; <label>:1387                                    ; preds = %1381
  %1388 = load i32* %nextchr, align 4, !dbg !3274
  %1389 = icmp eq i32 %1388, 32, !dbg !3274
  br i1 %1389, label %1417, label %1390, !dbg !3273

; <label>:1390                                    ; preds = %1387
  %1391 = load i32* %nextchr, align 4, !dbg !3274
  %1392 = icmp eq i32 %1391, 9, !dbg !3274
  br i1 %1392, label %1417, label %1393, !dbg !3273

; <label>:1393                                    ; preds = %1390
  %1394 = load i32* %nextchr, align 4, !dbg !3274
  %1395 = icmp eq i32 %1394, 10, !dbg !3274
  br i1 %1395, label %1417, label %1396, !dbg !3273

; <label>:1396                                    ; preds = %1393
  %1397 = load i32* %nextchr, align 4, !dbg !3274
  %1398 = icmp eq i32 %1397, 13, !dbg !3274
  br i1 %1398, label %1417, label %1399, !dbg !3273

; <label>:1399                                    ; preds = %1396
  %1400 = load i32* %nextchr, align 4, !dbg !3274
  %1401 = icmp eq i32 %1400, 12, !dbg !3274
  br i1 %1401, label %1417, label %1416, !dbg !3273

; <label>:1402                                    ; preds = %1381
  %1403 = load i32* %nextchr, align 4, !dbg !3275
  %1404 = and i32 %1403, -128, !dbg !3275
  %1405 = icmp eq i32 %1404, 0, !dbg !3275
  br i1 %1405, label %1406, label %1416, !dbg !3273

; <label>:1406                                    ; preds = %1402
  %1407 = load i32* %nextchr, align 4, !dbg !3275
  %1408 = sext i32 %1407 to i64, !dbg !3275
  %1409 = call i16** @__ctype_b_loc(), !dbg !3275
  %1410 = load i16** %1409, align 8, !dbg !3275
  %1411 = getelementptr inbounds i16* %1410, i64 %1408, !dbg !3275
  %1412 = load i16* %1411, align 2, !dbg !3275
  %1413 = zext i16 %1412 to i32, !dbg !3275
  %1414 = and i32 %1413, 8192, !dbg !3275
  %1415 = icmp ne i32 %1414, 0, !dbg !3273
  br i1 %1415, label %1417, label %1416, !dbg !3273

; <label>:1416                                    ; preds = %1406, %1402, %1399
  br label %6127, !dbg !3276

; <label>:1417                                    ; preds = %1406, %1399, %1396, %1393, %1390, %1387
  %1418 = load i8** %locinput, align 8, !dbg !3277
  %1419 = getelementptr inbounds i8* %1418, i32 1, !dbg !3277
  store i8* %1419, i8** %locinput, align 8, !dbg !3277
  %1420 = load i8* %1419, align 1, !dbg !3277
  %1421 = zext i8 %1420 to i32, !dbg !3277
  store i32 %1421, i32* %nextchr, align 4, !dbg !3278
  br label %1463, !dbg !3279

; <label>:1422                                    ; preds = %1309
  %1423 = load %struct.regnode** %scan, align 8, !dbg !3280
  %1424 = getelementptr inbounds %struct.regnode* %1423, i32 0, i32 1, !dbg !3280
  %1425 = load i8* %1424, align 1, !dbg !3280
  %1426 = zext i8 %1425 to i32, !dbg !3280
  %1427 = icmp eq i32 %1426, 22, !dbg !3280
  br i1 %1427, label %1428, label %1443, !dbg !3283

; <label>:1428                                    ; preds = %1422
  %1429 = load i32* %nextchr, align 4, !dbg !3284
  %1430 = icmp eq i32 %1429, 32, !dbg !3284
  br i1 %1430, label %1458, label %1431, !dbg !3283

; <label>:1431                                    ; preds = %1428
  %1432 = load i32* %nextchr, align 4, !dbg !3284
  %1433 = icmp eq i32 %1432, 9, !dbg !3284
  br i1 %1433, label %1458, label %1434, !dbg !3283

; <label>:1434                                    ; preds = %1431
  %1435 = load i32* %nextchr, align 4, !dbg !3284
  %1436 = icmp eq i32 %1435, 10, !dbg !3284
  br i1 %1436, label %1458, label %1437, !dbg !3283

; <label>:1437                                    ; preds = %1434
  %1438 = load i32* %nextchr, align 4, !dbg !3284
  %1439 = icmp eq i32 %1438, 13, !dbg !3284
  br i1 %1439, label %1458, label %1440, !dbg !3283

; <label>:1440                                    ; preds = %1437
  %1441 = load i32* %nextchr, align 4, !dbg !3284
  %1442 = icmp eq i32 %1441, 12, !dbg !3284
  br i1 %1442, label %1458, label %1457, !dbg !3283

; <label>:1443                                    ; preds = %1422
  %1444 = load i32* %nextchr, align 4, !dbg !3285
  %1445 = and i32 %1444, -128, !dbg !3285
  %1446 = icmp eq i32 %1445, 0, !dbg !3285
  br i1 %1446, label %1447, label %1457, !dbg !3283

; <label>:1447                                    ; preds = %1443
  %1448 = load i32* %nextchr, align 4, !dbg !3285
  %1449 = sext i32 %1448 to i64, !dbg !3285
  %1450 = call i16** @__ctype_b_loc(), !dbg !3285
  %1451 = load i16** %1450, align 8, !dbg !3285
  %1452 = getelementptr inbounds i16* %1451, i64 %1449, !dbg !3285
  %1453 = load i16* %1452, align 2, !dbg !3285
  %1454 = zext i16 %1453 to i32, !dbg !3285
  %1455 = and i32 %1454, 8192, !dbg !3285
  %1456 = icmp ne i32 %1455, 0, !dbg !3283
  br i1 %1456, label %1458, label %1457, !dbg !3283

; <label>:1457                                    ; preds = %1447, %1443, %1440
  br label %6127, !dbg !3286

; <label>:1458                                    ; preds = %1447, %1440, %1437, %1434, %1431, %1428
  %1459 = load i8** %locinput, align 8, !dbg !3287
  %1460 = getelementptr inbounds i8* %1459, i32 1, !dbg !3287
  store i8* %1460, i8** %locinput, align 8, !dbg !3287
  %1461 = load i8* %1460, align 1, !dbg !3287
  %1462 = zext i8 %1461 to i32, !dbg !3287
  store i32 %1462, i32* %nextchr, align 4, !dbg !3288
  br label %1463

; <label>:1463                                    ; preds = %1458, %1417
  br label %6120, !dbg !3289

; <label>:1464                                    ; preds = %24
  %1465 = load i32* @PL_reg_flags, align 4, !dbg !3290
  %1466 = or i32 %1465, 1, !dbg !3290
  store i32 %1466, i32* @PL_reg_flags, align 4, !dbg !3290
  br label %1467, !dbg !3290

; <label>:1467                                    ; preds = %24, %1464
  %1468 = load i32* %nextchr, align 4, !dbg !3291
  %1469 = icmp ne i32 %1468, 0, !dbg !3293
  br i1 %1469, label %1475, label %1470, !dbg !3293

; <label>:1470                                    ; preds = %1467
  %1471 = load i8** %locinput, align 8, !dbg !3294
  %1472 = load i8** @PL_regeol, align 8, !dbg !3296
  %1473 = icmp uge i8* %1471, %1472, !dbg !3297
  br i1 %1473, label %1474, label %1475, !dbg !3293

; <label>:1474                                    ; preds = %1470
  br label %6127, !dbg !3298

; <label>:1475                                    ; preds = %1470, %1467
  %1476 = load i8* %do_utf8, align 1, !dbg !3299
  %1477 = icmp ne i8 %1476, 0, !dbg !3301
  br i1 %1477, label %1478, label %1541, !dbg !3301

; <label>:1478                                    ; preds = %1475
  %1479 = load %struct.sv** @PL_utf8_space, align 8, !dbg !3302
  %1480 = icmp ne %struct.sv* %1479, null, !dbg !3306
  br i1 %1480, label %1483, label %1481, !dbg !3306

; <label>:1481                                    ; preds = %1478
  call void @Perl_push_scope(), !dbg !3307
  call void @Perl_save_re_context(), !dbg !3307
  %1482 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8]* @.str3, i32 0, i32 0)), !dbg !3307
  call void @Perl_pop_scope(), !dbg !3307
  br label %1483, !dbg !3307

; <label>:1483                                    ; preds = %1481, %1478
  %1484 = load %struct.regnode** %scan, align 8, !dbg !3310
  %1485 = getelementptr inbounds %struct.regnode* %1484, i32 0, i32 1, !dbg !3310
  %1486 = load i8* %1485, align 1, !dbg !3310
  %1487 = zext i8 %1486 to i32, !dbg !3310
  %1488 = icmp eq i32 %1487, 24, !dbg !3310
  br i1 %1488, label %1489, label %1495, !dbg !3312

; <label>:1489                                    ; preds = %1483
  %1490 = load %struct.sv** @PL_utf8_space, align 8, !dbg !3313
  %1491 = load i8** %locinput, align 8, !dbg !3314
  %1492 = load i8* %do_utf8, align 1, !dbg !3315
  %1493 = call i64 @Perl_swash_fetch(%struct.sv* %1490, i8* %1491, i8 signext %1492), !dbg !3316
  %1494 = icmp ne i64 %1493, 0, !dbg !3312
  br i1 %1494, label %1528, label %1529, !dbg !3312

; <label>:1495                                    ; preds = %1483
  %1496 = load i8** %locinput, align 8, !dbg !3317
  %1497 = call i64 @Perl_utf8_to_uvchr(i8* %1496, i64* null), !dbg !3317
  %1498 = icmp ult i64 %1497, 256, !dbg !3317
  br i1 %1498, label %1499, label %1519, !dbg !3317

; <label>:1499                                    ; preds = %1495
  %1500 = load i8** %locinput, align 8, !dbg !3318
  %1501 = call i64 @Perl_utf8_to_uvchr(i8* %1500, i64* null), !dbg !3318
  %1502 = and i64 %1501, -128, !dbg !3318
  %1503 = icmp eq i64 %1502, 0, !dbg !3318
  br i1 %1503, label %1504, label %1516, !dbg !3318

; <label>:1504                                    ; preds = %1499
  %1505 = load i8** %locinput, align 8, !dbg !3320
  %1506 = call i64 @Perl_utf8_to_uvchr(i8* %1505, i64* null), !dbg !3320
  %1507 = trunc i64 %1506 to i32, !dbg !3320
  %1508 = sext i32 %1507 to i64, !dbg !3320
  %1509 = call i16** @__ctype_b_loc(), !dbg !3320
  %1510 = load i16** %1509, align 8, !dbg !3320
  %1511 = getelementptr inbounds i16* %1510, i64 %1508, !dbg !3320
  %1512 = load i16* %1511, align 2, !dbg !3320
  %1513 = zext i16 %1512 to i32, !dbg !3320
  %1514 = and i32 %1513, 8192, !dbg !3320
  %1515 = icmp ne i32 %1514, 0, !dbg !3320
  br label %1516

; <label>:1516                                    ; preds = %1504, %1499
  %1517 = phi i1 [ false, %1499 ], [ %1515, %1504 ]
  %1518 = zext i1 %1517 to i32, !dbg !3322
  br label %1524, !dbg !3322

; <label>:1519                                    ; preds = %1495
  %1520 = load i8** %locinput, align 8, !dbg !3324
  %1521 = call i64 @Perl_utf8_to_uvchr(i8* %1520, i64* null), !dbg !3324
  %1522 = call signext i8 @Perl_is_uni_space_lc(i64 %1521), !dbg !3324
  %1523 = sext i8 %1522 to i32, !dbg !3324
  br label %1524, !dbg !3324

; <label>:1524                                    ; preds = %1519, %1516
  %1525 = phi i32 [ %1518, %1516 ], [ %1523, %1519 ], !dbg !3317
  %1526 = sext i32 %1525 to i64, !dbg !3326
  %1527 = icmp ne i64 %1526, 0, !dbg !3312
  br i1 %1527, label %1528, label %1529, !dbg !3312

; <label>:1528                                    ; preds = %1524, %1489
  br label %6127, !dbg !3329

; <label>:1529                                    ; preds = %1524, %1489
  %1530 = load i32* %nextchr, align 4, !dbg !3331
  %1531 = sext i32 %1530 to i64, !dbg !3332
  %1532 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1531, !dbg !3332
  %1533 = load i8* %1532, align 1, !dbg !3332
  %1534 = zext i8 %1533 to i32, !dbg !3332
  %1535 = load i8** %locinput, align 8, !dbg !3333
  %1536 = sext i32 %1534 to i64, !dbg !3333
  %1537 = getelementptr inbounds i8* %1535, i64 %1536, !dbg !3333
  store i8* %1537, i8** %locinput, align 8, !dbg !3333
  %1538 = load i8** %locinput, align 8, !dbg !3334
  %1539 = load i8* %1538, align 1, !dbg !3334
  %1540 = zext i8 %1539 to i32, !dbg !3334
  store i32 %1540, i32* %nextchr, align 4, !dbg !3335
  br label %6120, !dbg !3336

; <label>:1541                                    ; preds = %1475
  %1542 = load %struct.regnode** %scan, align 8, !dbg !3337
  %1543 = getelementptr inbounds %struct.regnode* %1542, i32 0, i32 1, !dbg !3337
  %1544 = load i8* %1543, align 1, !dbg !3337
  %1545 = zext i8 %1544 to i32, !dbg !3337
  %1546 = icmp eq i32 %1545, 24, !dbg !3337
  br i1 %1546, label %1547, label %1562, !dbg !3339

; <label>:1547                                    ; preds = %1541
  %1548 = load i32* %nextchr, align 4, !dbg !3340
  %1549 = icmp eq i32 %1548, 32, !dbg !3340
  br i1 %1549, label %1576, label %1550, !dbg !3339

; <label>:1550                                    ; preds = %1547
  %1551 = load i32* %nextchr, align 4, !dbg !3340
  %1552 = icmp eq i32 %1551, 9, !dbg !3340
  br i1 %1552, label %1576, label %1553, !dbg !3339

; <label>:1553                                    ; preds = %1550
  %1554 = load i32* %nextchr, align 4, !dbg !3340
  %1555 = icmp eq i32 %1554, 10, !dbg !3340
  br i1 %1555, label %1576, label %1556, !dbg !3339

; <label>:1556                                    ; preds = %1553
  %1557 = load i32* %nextchr, align 4, !dbg !3340
  %1558 = icmp eq i32 %1557, 13, !dbg !3340
  br i1 %1558, label %1576, label %1559, !dbg !3339

; <label>:1559                                    ; preds = %1556
  %1560 = load i32* %nextchr, align 4, !dbg !3340
  %1561 = icmp eq i32 %1560, 12, !dbg !3340
  br i1 %1561, label %1576, label %1577, !dbg !3339

; <label>:1562                                    ; preds = %1541
  %1563 = load i32* %nextchr, align 4, !dbg !3341
  %1564 = and i32 %1563, -128, !dbg !3341
  %1565 = icmp eq i32 %1564, 0, !dbg !3341
  br i1 %1565, label %1566, label %1577, !dbg !3339

; <label>:1566                                    ; preds = %1562
  %1567 = load i32* %nextchr, align 4, !dbg !3341
  %1568 = sext i32 %1567 to i64, !dbg !3341
  %1569 = call i16** @__ctype_b_loc(), !dbg !3341
  %1570 = load i16** %1569, align 8, !dbg !3341
  %1571 = getelementptr inbounds i16* %1570, i64 %1568, !dbg !3341
  %1572 = load i16* %1571, align 2, !dbg !3341
  %1573 = zext i16 %1572 to i32, !dbg !3341
  %1574 = and i32 %1573, 8192, !dbg !3341
  %1575 = icmp ne i32 %1574, 0, !dbg !3339
  br i1 %1575, label %1576, label %1577, !dbg !3339

; <label>:1576                                    ; preds = %1566, %1559, %1556, %1553, %1550, %1547
  br label %6127, !dbg !3342

; <label>:1577                                    ; preds = %1566, %1562, %1559
  %1578 = load i8** %locinput, align 8, !dbg !3343
  %1579 = getelementptr inbounds i8* %1578, i32 1, !dbg !3343
  store i8* %1579, i8** %locinput, align 8, !dbg !3343
  %1580 = load i8* %1579, align 1, !dbg !3343
  %1581 = zext i8 %1580 to i32, !dbg !3343
  store i32 %1581, i32* %nextchr, align 4, !dbg !3344
  br label %6120, !dbg !3345

; <label>:1582                                    ; preds = %24
  %1583 = load i32* @PL_reg_flags, align 4, !dbg !3346
  %1584 = or i32 %1583, 1, !dbg !3346
  store i32 %1584, i32* @PL_reg_flags, align 4, !dbg !3346
  br label %1585, !dbg !3346

; <label>:1585                                    ; preds = %24, %1582
  %1586 = load i32* %nextchr, align 4, !dbg !3347
  %1587 = icmp ne i32 %1586, 0, !dbg !3349
  br i1 %1587, label %1589, label %1588, !dbg !3349

; <label>:1588                                    ; preds = %1585
  br label %6127, !dbg !3350

; <label>:1589                                    ; preds = %1585
  %1590 = load i8* %do_utf8, align 1, !dbg !3351
  %1591 = icmp ne i8 %1590, 0, !dbg !3353
  br i1 %1591, label %1592, label %1655, !dbg !3353

; <label>:1592                                    ; preds = %1589
  %1593 = load %struct.sv** @PL_utf8_digit, align 8, !dbg !3354
  %1594 = icmp ne %struct.sv* %1593, null, !dbg !3358
  br i1 %1594, label %1597, label %1595, !dbg !3358

; <label>:1595                                    ; preds = %1592
  call void @Perl_push_scope(), !dbg !3359
  call void @Perl_save_re_context(), !dbg !3359
  %1596 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8]* @.str4, i32 0, i32 0)), !dbg !3359
  call void @Perl_pop_scope(), !dbg !3359
  br label %1597, !dbg !3359

; <label>:1597                                    ; preds = %1595, %1592
  %1598 = load %struct.regnode** %scan, align 8, !dbg !3362
  %1599 = getelementptr inbounds %struct.regnode* %1598, i32 0, i32 1, !dbg !3362
  %1600 = load i8* %1599, align 1, !dbg !3362
  %1601 = zext i8 %1600 to i32, !dbg !3362
  %1602 = icmp eq i32 %1601, 26, !dbg !3362
  br i1 %1602, label %1603, label %1609, !dbg !3364

; <label>:1603                                    ; preds = %1597
  %1604 = load %struct.sv** @PL_utf8_digit, align 8, !dbg !3365
  %1605 = load i8** %locinput, align 8, !dbg !3366
  %1606 = load i8* %do_utf8, align 1, !dbg !3367
  %1607 = call i64 @Perl_swash_fetch(%struct.sv* %1604, i8* %1605, i8 signext %1606), !dbg !3368
  %1608 = icmp ne i64 %1607, 0, !dbg !3364
  br i1 %1608, label %1643, label %1642, !dbg !3364

; <label>:1609                                    ; preds = %1597
  %1610 = load i8** %locinput, align 8, !dbg !3369
  %1611 = call i64 @Perl_utf8_to_uvchr(i8* %1610, i64* null), !dbg !3369
  %1612 = icmp ult i64 %1611, 256, !dbg !3369
  br i1 %1612, label %1613, label %1633, !dbg !3369

; <label>:1613                                    ; preds = %1609
  %1614 = load i8** %locinput, align 8, !dbg !3370
  %1615 = call i64 @Perl_utf8_to_uvchr(i8* %1614, i64* null), !dbg !3370
  %1616 = and i64 %1615, -128, !dbg !3370
  %1617 = icmp eq i64 %1616, 0, !dbg !3370
  br i1 %1617, label %1618, label %1630, !dbg !3370

; <label>:1618                                    ; preds = %1613
  %1619 = load i8** %locinput, align 8, !dbg !3372
  %1620 = call i64 @Perl_utf8_to_uvchr(i8* %1619, i64* null), !dbg !3372
  %1621 = trunc i64 %1620 to i32, !dbg !3372
  %1622 = sext i32 %1621 to i64, !dbg !3372
  %1623 = call i16** @__ctype_b_loc(), !dbg !3372
  %1624 = load i16** %1623, align 8, !dbg !3372
  %1625 = getelementptr inbounds i16* %1624, i64 %1622, !dbg !3372
  %1626 = load i16* %1625, align 2, !dbg !3372
  %1627 = zext i16 %1626 to i32, !dbg !3372
  %1628 = and i32 %1627, 2048, !dbg !3372
  %1629 = icmp ne i32 %1628, 0, !dbg !3372
  br label %1630

; <label>:1630                                    ; preds = %1618, %1613
  %1631 = phi i1 [ false, %1613 ], [ %1629, %1618 ]
  %1632 = zext i1 %1631 to i32, !dbg !3374
  br label %1638, !dbg !3374

; <label>:1633                                    ; preds = %1609
  %1634 = load i8** %locinput, align 8, !dbg !3376
  %1635 = call i64 @Perl_utf8_to_uvchr(i8* %1634, i64* null), !dbg !3376
  %1636 = call signext i8 @Perl_is_uni_digit_lc(i64 %1635), !dbg !3376
  %1637 = sext i8 %1636 to i32, !dbg !3376
  br label %1638, !dbg !3376

; <label>:1638                                    ; preds = %1633, %1630
  %1639 = phi i32 [ %1632, %1630 ], [ %1637, %1633 ], !dbg !3369
  %1640 = sext i32 %1639 to i64, !dbg !3378
  %1641 = icmp ne i64 %1640, 0, !dbg !3364
  br i1 %1641, label %1643, label %1642, !dbg !3364

; <label>:1642                                    ; preds = %1638, %1603
  br label %6127, !dbg !3381

; <label>:1643                                    ; preds = %1638, %1603
  %1644 = load i32* %nextchr, align 4, !dbg !3383
  %1645 = sext i32 %1644 to i64, !dbg !3384
  %1646 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1645, !dbg !3384
  %1647 = load i8* %1646, align 1, !dbg !3384
  %1648 = zext i8 %1647 to i32, !dbg !3384
  %1649 = load i8** %locinput, align 8, !dbg !3385
  %1650 = sext i32 %1648 to i64, !dbg !3385
  %1651 = getelementptr inbounds i8* %1649, i64 %1650, !dbg !3385
  store i8* %1651, i8** %locinput, align 8, !dbg !3385
  %1652 = load i8** %locinput, align 8, !dbg !3386
  %1653 = load i8* %1652, align 1, !dbg !3386
  %1654 = zext i8 %1653 to i32, !dbg !3386
  store i32 %1654, i32* %nextchr, align 4, !dbg !3387
  br label %6120, !dbg !3388

; <label>:1655                                    ; preds = %1589
  %1656 = load %struct.regnode** %scan, align 8, !dbg !3389
  %1657 = getelementptr inbounds %struct.regnode* %1656, i32 0, i32 1, !dbg !3389
  %1658 = load i8* %1657, align 1, !dbg !3389
  %1659 = zext i8 %1658 to i32, !dbg !3389
  %1660 = icmp eq i32 %1659, 26, !dbg !3389
  br i1 %1660, label %1661, label %1667, !dbg !3391

; <label>:1661                                    ; preds = %1655
  %1662 = load i32* %nextchr, align 4, !dbg !3392
  %1663 = icmp sge i32 %1662, 48, !dbg !3392
  br i1 %1663, label %1664, label %1681, !dbg !3391

; <label>:1664                                    ; preds = %1661
  %1665 = load i32* %nextchr, align 4, !dbg !3392
  %1666 = icmp sle i32 %1665, 57, !dbg !3392
  br i1 %1666, label %1682, label %1681, !dbg !3391

; <label>:1667                                    ; preds = %1655
  %1668 = load i32* %nextchr, align 4, !dbg !3393
  %1669 = and i32 %1668, -128, !dbg !3393
  %1670 = icmp eq i32 %1669, 0, !dbg !3393
  br i1 %1670, label %1671, label %1681, !dbg !3391

; <label>:1671                                    ; preds = %1667
  %1672 = load i32* %nextchr, align 4, !dbg !3393
  %1673 = sext i32 %1672 to i64, !dbg !3393
  %1674 = call i16** @__ctype_b_loc(), !dbg !3393
  %1675 = load i16** %1674, align 8, !dbg !3393
  %1676 = getelementptr inbounds i16* %1675, i64 %1673, !dbg !3393
  %1677 = load i16* %1676, align 2, !dbg !3393
  %1678 = zext i16 %1677 to i32, !dbg !3393
  %1679 = and i32 %1678, 2048, !dbg !3393
  %1680 = icmp ne i32 %1679, 0, !dbg !3391
  br i1 %1680, label %1682, label %1681, !dbg !3391

; <label>:1681                                    ; preds = %1671, %1667, %1664, %1661
  br label %6127, !dbg !3394

; <label>:1682                                    ; preds = %1671, %1664
  %1683 = load i8** %locinput, align 8, !dbg !3395
  %1684 = getelementptr inbounds i8* %1683, i32 1, !dbg !3395
  store i8* %1684, i8** %locinput, align 8, !dbg !3395
  %1685 = load i8* %1684, align 1, !dbg !3395
  %1686 = zext i8 %1685 to i32, !dbg !3395
  store i32 %1686, i32* %nextchr, align 4, !dbg !3396
  br label %6120, !dbg !3397

; <label>:1687                                    ; preds = %24
  %1688 = load i32* @PL_reg_flags, align 4, !dbg !3398
  %1689 = or i32 %1688, 1, !dbg !3398
  store i32 %1689, i32* @PL_reg_flags, align 4, !dbg !3398
  br label %1690, !dbg !3398

; <label>:1690                                    ; preds = %24, %1687
  %1691 = load i32* %nextchr, align 4, !dbg !3399
  %1692 = icmp ne i32 %1691, 0, !dbg !3401
  br i1 %1692, label %1698, label %1693, !dbg !3401

; <label>:1693                                    ; preds = %1690
  %1694 = load i8** %locinput, align 8, !dbg !3402
  %1695 = load i8** @PL_regeol, align 8, !dbg !3404
  %1696 = icmp uge i8* %1694, %1695, !dbg !3405
  br i1 %1696, label %1697, label %1698, !dbg !3401

; <label>:1697                                    ; preds = %1693
  br label %6127, !dbg !3406

; <label>:1698                                    ; preds = %1693, %1690
  %1699 = load i8* %do_utf8, align 1, !dbg !3407
  %1700 = icmp ne i8 %1699, 0, !dbg !3409
  br i1 %1700, label %1701, label %1764, !dbg !3409

; <label>:1701                                    ; preds = %1698
  %1702 = load %struct.sv** @PL_utf8_digit, align 8, !dbg !3410
  %1703 = icmp ne %struct.sv* %1702, null, !dbg !3414
  br i1 %1703, label %1706, label %1704, !dbg !3414

; <label>:1704                                    ; preds = %1701
  call void @Perl_push_scope(), !dbg !3415
  call void @Perl_save_re_context(), !dbg !3415
  %1705 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8]* @.str4, i32 0, i32 0)), !dbg !3415
  call void @Perl_pop_scope(), !dbg !3415
  br label %1706, !dbg !3415

; <label>:1706                                    ; preds = %1704, %1701
  %1707 = load %struct.regnode** %scan, align 8, !dbg !3418
  %1708 = getelementptr inbounds %struct.regnode* %1707, i32 0, i32 1, !dbg !3418
  %1709 = load i8* %1708, align 1, !dbg !3418
  %1710 = zext i8 %1709 to i32, !dbg !3418
  %1711 = icmp eq i32 %1710, 28, !dbg !3418
  br i1 %1711, label %1712, label %1718, !dbg !3420

; <label>:1712                                    ; preds = %1706
  %1713 = load %struct.sv** @PL_utf8_digit, align 8, !dbg !3421
  %1714 = load i8** %locinput, align 8, !dbg !3422
  %1715 = load i8* %do_utf8, align 1, !dbg !3423
  %1716 = call i64 @Perl_swash_fetch(%struct.sv* %1713, i8* %1714, i8 signext %1715), !dbg !3424
  %1717 = icmp ne i64 %1716, 0, !dbg !3420
  br i1 %1717, label %1751, label %1752, !dbg !3420

; <label>:1718                                    ; preds = %1706
  %1719 = load i8** %locinput, align 8, !dbg !3425
  %1720 = call i64 @Perl_utf8_to_uvchr(i8* %1719, i64* null), !dbg !3425
  %1721 = icmp ult i64 %1720, 256, !dbg !3425
  br i1 %1721, label %1722, label %1742, !dbg !3425

; <label>:1722                                    ; preds = %1718
  %1723 = load i8** %locinput, align 8, !dbg !3426
  %1724 = call i64 @Perl_utf8_to_uvchr(i8* %1723, i64* null), !dbg !3426
  %1725 = and i64 %1724, -128, !dbg !3426
  %1726 = icmp eq i64 %1725, 0, !dbg !3426
  br i1 %1726, label %1727, label %1739, !dbg !3426

; <label>:1727                                    ; preds = %1722
  %1728 = load i8** %locinput, align 8, !dbg !3428
  %1729 = call i64 @Perl_utf8_to_uvchr(i8* %1728, i64* null), !dbg !3428
  %1730 = trunc i64 %1729 to i32, !dbg !3428
  %1731 = sext i32 %1730 to i64, !dbg !3428
  %1732 = call i16** @__ctype_b_loc(), !dbg !3428
  %1733 = load i16** %1732, align 8, !dbg !3428
  %1734 = getelementptr inbounds i16* %1733, i64 %1731, !dbg !3428
  %1735 = load i16* %1734, align 2, !dbg !3428
  %1736 = zext i16 %1735 to i32, !dbg !3428
  %1737 = and i32 %1736, 2048, !dbg !3428
  %1738 = icmp ne i32 %1737, 0, !dbg !3428
  br label %1739

; <label>:1739                                    ; preds = %1727, %1722
  %1740 = phi i1 [ false, %1722 ], [ %1738, %1727 ]
  %1741 = zext i1 %1740 to i32, !dbg !3430
  br label %1747, !dbg !3430

; <label>:1742                                    ; preds = %1718
  %1743 = load i8** %locinput, align 8, !dbg !3432
  %1744 = call i64 @Perl_utf8_to_uvchr(i8* %1743, i64* null), !dbg !3432
  %1745 = call signext i8 @Perl_is_uni_digit_lc(i64 %1744), !dbg !3432
  %1746 = sext i8 %1745 to i32, !dbg !3432
  br label %1747, !dbg !3432

; <label>:1747                                    ; preds = %1742, %1739
  %1748 = phi i32 [ %1741, %1739 ], [ %1746, %1742 ], !dbg !3425
  %1749 = sext i32 %1748 to i64, !dbg !3434
  %1750 = icmp ne i64 %1749, 0, !dbg !3420
  br i1 %1750, label %1751, label %1752, !dbg !3420

; <label>:1751                                    ; preds = %1747, %1712
  br label %6127, !dbg !3437

; <label>:1752                                    ; preds = %1747, %1712
  %1753 = load i32* %nextchr, align 4, !dbg !3439
  %1754 = sext i32 %1753 to i64, !dbg !3440
  %1755 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1754, !dbg !3440
  %1756 = load i8* %1755, align 1, !dbg !3440
  %1757 = zext i8 %1756 to i32, !dbg !3440
  %1758 = load i8** %locinput, align 8, !dbg !3441
  %1759 = sext i32 %1757 to i64, !dbg !3441
  %1760 = getelementptr inbounds i8* %1758, i64 %1759, !dbg !3441
  store i8* %1760, i8** %locinput, align 8, !dbg !3441
  %1761 = load i8** %locinput, align 8, !dbg !3442
  %1762 = load i8* %1761, align 1, !dbg !3442
  %1763 = zext i8 %1762 to i32, !dbg !3442
  store i32 %1763, i32* %nextchr, align 4, !dbg !3443
  br label %6120, !dbg !3444

; <label>:1764                                    ; preds = %1698
  %1765 = load %struct.regnode** %scan, align 8, !dbg !3445
  %1766 = getelementptr inbounds %struct.regnode* %1765, i32 0, i32 1, !dbg !3445
  %1767 = load i8* %1766, align 1, !dbg !3445
  %1768 = zext i8 %1767 to i32, !dbg !3445
  %1769 = icmp eq i32 %1768, 28, !dbg !3445
  br i1 %1769, label %1770, label %1776, !dbg !3447

; <label>:1770                                    ; preds = %1764
  %1771 = load i32* %nextchr, align 4, !dbg !3448
  %1772 = icmp sge i32 %1771, 48, !dbg !3448
  br i1 %1772, label %1773, label %1791, !dbg !3447

; <label>:1773                                    ; preds = %1770
  %1774 = load i32* %nextchr, align 4, !dbg !3448
  %1775 = icmp sle i32 %1774, 57, !dbg !3448
  br i1 %1775, label %1790, label %1791, !dbg !3447

; <label>:1776                                    ; preds = %1764
  %1777 = load i32* %nextchr, align 4, !dbg !3449
  %1778 = and i32 %1777, -128, !dbg !3449
  %1779 = icmp eq i32 %1778, 0, !dbg !3449
  br i1 %1779, label %1780, label %1791, !dbg !3447

; <label>:1780                                    ; preds = %1776
  %1781 = load i32* %nextchr, align 4, !dbg !3449
  %1782 = sext i32 %1781 to i64, !dbg !3449
  %1783 = call i16** @__ctype_b_loc(), !dbg !3449
  %1784 = load i16** %1783, align 8, !dbg !3449
  %1785 = getelementptr inbounds i16* %1784, i64 %1782, !dbg !3449
  %1786 = load i16* %1785, align 2, !dbg !3449
  %1787 = zext i16 %1786 to i32, !dbg !3449
  %1788 = and i32 %1787, 2048, !dbg !3449
  %1789 = icmp ne i32 %1788, 0, !dbg !3447
  br i1 %1789, label %1790, label %1791, !dbg !3447

; <label>:1790                                    ; preds = %1780, %1773
  br label %6127, !dbg !3450

; <label>:1791                                    ; preds = %1780, %1776, %1773, %1770
  %1792 = load i8** %locinput, align 8, !dbg !3451
  %1793 = getelementptr inbounds i8* %1792, i32 1, !dbg !3451
  store i8* %1793, i8** %locinput, align 8, !dbg !3451
  %1794 = load i8* %1793, align 1, !dbg !3451
  %1795 = zext i8 %1794 to i32, !dbg !3451
  store i32 %1795, i32* %nextchr, align 4, !dbg !3452
  br label %6120, !dbg !3453

; <label>:1796                                    ; preds = %24
  %1797 = load i8** %locinput, align 8, !dbg !3454
  %1798 = load i8** @PL_regeol, align 8, !dbg !3456
  %1799 = icmp uge i8* %1797, %1798, !dbg !3454
  br i1 %1799, label %1800, label %1801, !dbg !3457

; <label>:1800                                    ; preds = %1796
  br label %6127, !dbg !3458

; <label>:1801                                    ; preds = %1796
  %1802 = load i8* %do_utf8, align 1, !dbg !3459
  %1803 = icmp ne i8 %1802, 0, !dbg !3461
  br i1 %1803, label %1804, label %1853, !dbg !3461

; <label>:1804                                    ; preds = %1801
  %1805 = load %struct.sv** @PL_utf8_mark, align 8, !dbg !3462
  %1806 = icmp ne %struct.sv* %1805, null, !dbg !3466
  br i1 %1806, label %1809, label %1807, !dbg !3466

; <label>:1807                                    ; preds = %1804
  call void @Perl_push_scope(), !dbg !3467
  call void @Perl_save_re_context(), !dbg !3467
  %1808 = call signext i8 @Perl_is_utf8_mark(i8* getelementptr inbounds ([2 x i8]* @.str5, i32 0, i32 0)), !dbg !3467
  call void @Perl_pop_scope(), !dbg !3467
  br label %1809, !dbg !3467

; <label>:1809                                    ; preds = %1807, %1804
  %1810 = load %struct.sv** @PL_utf8_mark, align 8, !dbg !3470
  %1811 = load i8** %locinput, align 8, !dbg !3472
  %1812 = load i8* %do_utf8, align 1, !dbg !3473
  %1813 = call i64 @Perl_swash_fetch(%struct.sv* %1810, i8* %1811, i8 signext %1812), !dbg !3474
  %1814 = icmp ne i64 %1813, 0, !dbg !3475
  br i1 %1814, label %1815, label %1816, !dbg !3475

; <label>:1815                                    ; preds = %1809
  br label %6127, !dbg !3476

; <label>:1816                                    ; preds = %1809
  %1817 = load i32* %nextchr, align 4, !dbg !3477
  %1818 = sext i32 %1817 to i64, !dbg !3478
  %1819 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1818, !dbg !3478
  %1820 = load i8* %1819, align 1, !dbg !3478
  %1821 = zext i8 %1820 to i32, !dbg !3478
  %1822 = load i8** %locinput, align 8, !dbg !3479
  %1823 = sext i32 %1821 to i64, !dbg !3479
  %1824 = getelementptr inbounds i8* %1822, i64 %1823, !dbg !3479
  store i8* %1824, i8** %locinput, align 8, !dbg !3479
  br label %1825, !dbg !3480

; <label>:1825                                    ; preds = %1837, %1816
  %1826 = load i8** %locinput, align 8, !dbg !3481
  %1827 = load i8** @PL_regeol, align 8, !dbg !3484
  %1828 = icmp ult i8* %1826, %1827, !dbg !3485
  br i1 %1828, label %1829, label %1835, !dbg !3485

; <label>:1829                                    ; preds = %1825
  %1830 = load %struct.sv** @PL_utf8_mark, align 8, !dbg !3486
  %1831 = load i8** %locinput, align 8, !dbg !3487
  %1832 = load i8* %do_utf8, align 1, !dbg !3488
  %1833 = call i64 @Perl_swash_fetch(%struct.sv* %1830, i8* %1831, i8 signext %1832), !dbg !3489
  %1834 = icmp ne i64 %1833, 0, !dbg !3485
  br label %1835

; <label>:1835                                    ; preds = %1829, %1825
  %1836 = phi i1 [ false, %1825 ], [ %1834, %1829 ]
  br i1 %1836, label %1837, label %1847, !dbg !3490

; <label>:1837                                    ; preds = %1835
  %1838 = load i8** %locinput, align 8, !dbg !3492
  %1839 = load i8* %1838, align 1, !dbg !3492
  %1840 = zext i8 %1839 to i64, !dbg !3492
  %1841 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1840, !dbg !3492
  %1842 = load i8* %1841, align 1, !dbg !3492
  %1843 = zext i8 %1842 to i32, !dbg !3492
  %1844 = load i8** %locinput, align 8, !dbg !3493
  %1845 = sext i32 %1843 to i64, !dbg !3493
  %1846 = getelementptr inbounds i8* %1844, i64 %1845, !dbg !3493
  store i8* %1846, i8** %locinput, align 8, !dbg !3493
  br label %1825, !dbg !3480

; <label>:1847                                    ; preds = %1835
  %1848 = load i8** %locinput, align 8, !dbg !3494
  %1849 = load i8** @PL_regeol, align 8, !dbg !3496
  %1850 = icmp ugt i8* %1848, %1849, !dbg !3494
  br i1 %1850, label %1851, label %1852, !dbg !3497

; <label>:1851                                    ; preds = %1847
  br label %6127, !dbg !3498

; <label>:1852                                    ; preds = %1847
  br label %1856, !dbg !3499

; <label>:1853                                    ; preds = %1801
  %1854 = load i8** %locinput, align 8, !dbg !3500
  %1855 = getelementptr inbounds i8* %1854, i32 1, !dbg !3500
  store i8* %1855, i8** %locinput, align 8, !dbg !3500
  br label %1856

; <label>:1856                                    ; preds = %1853, %1852
  %1857 = load i8** %locinput, align 8, !dbg !3501
  %1858 = load i8* %1857, align 1, !dbg !3501
  %1859 = zext i8 %1858 to i32, !dbg !3501
  store i32 %1859, i32* %nextchr, align 4, !dbg !3502
  br label %6120, !dbg !3503

; <label>:1860                                    ; preds = %24
  %1861 = load i32* @PL_reg_flags, align 4, !dbg !3504
  %1862 = or i32 %1861, 1, !dbg !3504
  store i32 %1862, i32* @PL_reg_flags, align 4, !dbg !3504
  br label %1863, !dbg !3504

; <label>:1863                                    ; preds = %24, %24, %1860
  %1864 = load %struct.regnode** %scan, align 8, !dbg !3505
  %1865 = bitcast %struct.regnode* %1864 to %struct.regnode_1*, !dbg !3505
  %1866 = getelementptr inbounds %struct.regnode_1* %1865, i32 0, i32 3, !dbg !3505
  %1867 = load i32* %1866, align 4, !dbg !3505
  store i32 %1867, i32* %n, align 4, !dbg !3506
  %1868 = load i32* %n, align 4, !dbg !3507
  %1869 = sext i32 %1868 to i64, !dbg !3508
  %1870 = load i32** @PL_regstartp, align 8, !dbg !3508
  %1871 = getelementptr inbounds i32* %1870, i64 %1869, !dbg !3508
  %1872 = load i32* %1871, align 4, !dbg !3508
  store i32 %1872, i32* %ln, align 4, !dbg !3509
  %1873 = load i32* @PL_reg_maxiter, align 4, !dbg !3510
  store i32 %1873, i32* @PL_reg_leftiter, align 4, !dbg !3511
  %1874 = load i32** @PL_reglastparen, align 8, !dbg !3512
  %1875 = load i32* %1874, align 4, !dbg !3514
  %1876 = load i32* %n, align 4, !dbg !3515
  %1877 = icmp slt i32 %1875, %1876, !dbg !3516
  br i1 %1877, label %1881, label %1878, !dbg !3517

; <label>:1878                                    ; preds = %1863
  %1879 = load i32* %ln, align 4, !dbg !3518
  %1880 = icmp eq i32 %1879, -1, !dbg !3518
  br i1 %1880, label %1881, label %1882, !dbg !3517

; <label>:1881                                    ; preds = %1878, %1863
  br label %6127, !dbg !3520

; <label>:1882                                    ; preds = %1878
  %1883 = load i32* %ln, align 4, !dbg !3521
  %1884 = load i32* %n, align 4, !dbg !3523
  %1885 = sext i32 %1884 to i64, !dbg !3524
  %1886 = load i32** @PL_regendp, align 8, !dbg !3524
  %1887 = getelementptr inbounds i32* %1886, i64 %1885, !dbg !3524
  %1888 = load i32* %1887, align 4, !dbg !3524
  %1889 = icmp eq i32 %1883, %1888, !dbg !3521
  br i1 %1889, label %1890, label %1891, !dbg !3525

; <label>:1890                                    ; preds = %1882
  br label %6120, !dbg !3526

; <label>:1891                                    ; preds = %1882
  %1892 = load i8** @PL_bostr, align 8, !dbg !3527
  %1893 = load i32* %ln, align 4, !dbg !3528
  %1894 = sext i32 %1893 to i64, !dbg !3527
  %1895 = getelementptr inbounds i8* %1892, i64 %1894, !dbg !3527
  store i8* %1895, i8** %s, align 8, !dbg !3529
  %1896 = load i8* %do_utf8, align 1, !dbg !3530
  %1897 = sext i8 %1896 to i32, !dbg !3530
  %1898 = icmp ne i32 %1897, 0, !dbg !3532
  br i1 %1898, label %1899, label %1960, !dbg !3532

; <label>:1899                                    ; preds = %1891
  %1900 = load %struct.regnode** %scan, align 8, !dbg !3533
  %1901 = getelementptr inbounds %struct.regnode* %1900, i32 0, i32 1, !dbg !3533
  %1902 = load i8* %1901, align 1, !dbg !3533
  %1903 = zext i8 %1902 to i32, !dbg !3533
  %1904 = icmp ne i32 %1903, 47, !dbg !3533
  br i1 %1904, label %1905, label %1960, !dbg !3532

; <label>:1905                                    ; preds = %1899
  call void @llvm.dbg.declare(metadata i8** %l3, metadata !3535, metadata !566), !dbg !3537
  %1906 = load i8** %locinput, align 8, !dbg !3538
  store i8* %1906, i8** %l3, align 8, !dbg !3537
  call void @llvm.dbg.declare(metadata i8** %e4, metadata !3539, metadata !566), !dbg !3540
  %1907 = load i8** @PL_bostr, align 8, !dbg !3541
  %1908 = load i32* %n, align 4, !dbg !3542
  %1909 = sext i32 %1908 to i64, !dbg !3543
  %1910 = load i32** @PL_regendp, align 8, !dbg !3543
  %1911 = getelementptr inbounds i32* %1910, i64 %1909, !dbg !3543
  %1912 = load i32* %1911, align 4, !dbg !3543
  %1913 = sext i32 %1912 to i64, !dbg !3541
  %1914 = getelementptr inbounds i8* %1907, i64 %1913, !dbg !3541
  store i8* %1914, i8** %e4, align 8, !dbg !3540
  %1915 = load %struct.regnode** %scan, align 8, !dbg !3544
  %1916 = getelementptr inbounds %struct.regnode* %1915, i32 0, i32 1, !dbg !3544
  %1917 = load i8* %1916, align 1, !dbg !3544
  %1918 = zext i8 %1917 to i32, !dbg !3544
  %1919 = icmp eq i32 %1918, 48, !dbg !3544
  br i1 %1919, label %1920, label %1955, !dbg !3546

; <label>:1920                                    ; preds = %1905
  call void @llvm.dbg.declare(metadata i64* %ulen1, metadata !3547, metadata !566), !dbg !3549
  call void @llvm.dbg.declare(metadata i64* %ulen2, metadata !3550, metadata !566), !dbg !3551
  call void @llvm.dbg.declare(metadata [7 x i8]* %tmpbuf1, metadata !3552, metadata !566), !dbg !3556
  call void @llvm.dbg.declare(metadata [7 x i8]* %tmpbuf2, metadata !3557, metadata !566), !dbg !3558
  br label %1921, !dbg !3559

; <label>:1921                                    ; preds = %1947, %1920
  %1922 = load i8** %s, align 8, !dbg !3560
  %1923 = load i8** %e4, align 8, !dbg !3563
  %1924 = icmp ult i8* %1922, %1923, !dbg !3564
  br i1 %1924, label %1925, label %1954, !dbg !3559

; <label>:1925                                    ; preds = %1921
  %1926 = load i8** %l3, align 8, !dbg !3565
  %1927 = load i8** @PL_regeol, align 8, !dbg !3568
  %1928 = icmp uge i8* %1926, %1927, !dbg !3565
  br i1 %1928, label %1929, label %1930, !dbg !3569

; <label>:1929                                    ; preds = %1925
  br label %6127, !dbg !3570

; <label>:1930                                    ; preds = %1925
  %1931 = load i8** %s, align 8, !dbg !3571
  %1932 = getelementptr inbounds [7 x i8]* %tmpbuf1, i32 0, i32 0, !dbg !3571
  %1933 = call i64 @Perl_to_utf8_lower(i8* %1931, i8* %1932, i64* %ulen1), !dbg !3571
  %1934 = load i8** %l3, align 8, !dbg !3572
  %1935 = getelementptr inbounds [7 x i8]* %tmpbuf2, i32 0, i32 0, !dbg !3572
  %1936 = call i64 @Perl_to_utf8_lower(i8* %1934, i8* %1935, i64* %ulen2), !dbg !3572
  %1937 = load i64* %ulen1, align 8, !dbg !3573
  %1938 = load i64* %ulen2, align 8, !dbg !3575
  %1939 = icmp ne i64 %1937, %1938, !dbg !3573
  br i1 %1939, label %1946, label %1940, !dbg !3576

; <label>:1940                                    ; preds = %1930
  %1941 = getelementptr inbounds [7 x i8]* %tmpbuf1, i32 0, i32 0, !dbg !3577
  %1942 = getelementptr inbounds [7 x i8]* %tmpbuf2, i32 0, i32 0, !dbg !3577
  %1943 = load i64* %ulen1, align 8, !dbg !3577
  %1944 = call i32 @memcmp(i8* %1941, i8* %1942, i64 %1943), !dbg !3577
  %1945 = icmp ne i32 %1944, 0, !dbg !3576
  br i1 %1945, label %1946, label %1947, !dbg !3576

; <label>:1946                                    ; preds = %1940, %1930
  br label %6127, !dbg !3579

; <label>:1947                                    ; preds = %1940
  %1948 = load i64* %ulen1, align 8, !dbg !3580
  %1949 = load i8** %s, align 8, !dbg !3581
  %1950 = getelementptr inbounds i8* %1949, i64 %1948, !dbg !3581
  store i8* %1950, i8** %s, align 8, !dbg !3581
  %1951 = load i64* %ulen2, align 8, !dbg !3582
  %1952 = load i8** %l3, align 8, !dbg !3583
  %1953 = getelementptr inbounds i8* %1952, i64 %1951, !dbg !3583
  store i8* %1953, i8** %l3, align 8, !dbg !3583
  br label %1921, !dbg !3559

; <label>:1954                                    ; preds = %1921
  br label %1955, !dbg !3584

; <label>:1955                                    ; preds = %1954, %1905
  %1956 = load i8** %l3, align 8, !dbg !3585
  store i8* %1956, i8** %locinput, align 8, !dbg !3586
  %1957 = load i8** %locinput, align 8, !dbg !3587
  %1958 = load i8* %1957, align 1, !dbg !3587
  %1959 = zext i8 %1958 to i32, !dbg !3587
  store i32 %1959, i32* %nextchr, align 4, !dbg !3588
  br label %6120, !dbg !3589

; <label>:1960                                    ; preds = %1899, %1891
  %1961 = load i8** %s, align 8, !dbg !3590
  %1962 = load i8* %1961, align 1, !dbg !3590
  %1963 = zext i8 %1962 to i32, !dbg !3590
  %1964 = load i32* %nextchr, align 4, !dbg !3592
  %1965 = icmp ne i32 %1963, %1964, !dbg !3590
  br i1 %1965, label %1966, label %1989, !dbg !3593

; <label>:1966                                    ; preds = %1960
  %1967 = load %struct.regnode** %scan, align 8, !dbg !3594
  %1968 = getelementptr inbounds %struct.regnode* %1967, i32 0, i32 1, !dbg !3594
  %1969 = load i8* %1968, align 1, !dbg !3594
  %1970 = zext i8 %1969 to i32, !dbg !3594
  %1971 = icmp eq i32 %1970, 47, !dbg !3594
  br i1 %1971, label %1988, label %1972, !dbg !3593

; <label>:1972                                    ; preds = %1966
  %1973 = load i8** %s, align 8, !dbg !3595
  %1974 = load i8* %1973, align 1, !dbg !3595
  %1975 = zext i8 %1974 to i32, !dbg !3595
  %1976 = load i32* %nextchr, align 4, !dbg !3596
  %1977 = sext i32 %1976 to i64, !dbg !3597
  %1978 = load %struct.regnode** %scan, align 8, !dbg !3598
  %1979 = getelementptr inbounds %struct.regnode* %1978, i32 0, i32 1, !dbg !3598
  %1980 = load i8* %1979, align 1, !dbg !3598
  %1981 = zext i8 %1980 to i32, !dbg !3598
  %1982 = icmp eq i32 %1981, 48, !dbg !3598
  %1983 = select i1 %1982, i8* getelementptr inbounds ([0 x i8]* @PL_fold, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8]* @PL_fold_locale, i32 0, i32 0), !dbg !3598
  %1984 = getelementptr inbounds i8* %1983, i64 %1977, !dbg !3597
  %1985 = load i8* %1984, align 1, !dbg !3597
  %1986 = zext i8 %1985 to i32, !dbg !3599
  %1987 = icmp ne i32 %1975, %1986, !dbg !3595
  br i1 %1987, label %1988, label %1989, !dbg !3593

; <label>:1988                                    ; preds = %1972, %1966
  br label %6127, !dbg !3600

; <label>:1989                                    ; preds = %1972, %1960
  %1990 = load i32* %n, align 4, !dbg !3601
  %1991 = sext i32 %1990 to i64, !dbg !3602
  %1992 = load i32** @PL_regendp, align 8, !dbg !3602
  %1993 = getelementptr inbounds i32* %1992, i64 %1991, !dbg !3602
  %1994 = load i32* %1993, align 4, !dbg !3602
  %1995 = load i32* %ln, align 4, !dbg !3603
  %1996 = sub nsw i32 %1994, %1995, !dbg !3602
  store i32 %1996, i32* %ln, align 4, !dbg !3604
  %1997 = load i8** %locinput, align 8, !dbg !3605
  %1998 = load i32* %ln, align 4, !dbg !3607
  %1999 = sext i32 %1998 to i64, !dbg !3605
  %2000 = getelementptr inbounds i8* %1997, i64 %1999, !dbg !3605
  %2001 = load i8** @PL_regeol, align 8, !dbg !3608
  %2002 = icmp ugt i8* %2000, %2001, !dbg !3605
  br i1 %2002, label %2003, label %2004, !dbg !3609

; <label>:2003                                    ; preds = %1989
  br label %6127, !dbg !3610

; <label>:2004                                    ; preds = %1989
  %2005 = load i32* %ln, align 4, !dbg !3611
  %2006 = icmp sgt i32 %2005, 1, !dbg !3611
  br i1 %2006, label %2007, label %2039, !dbg !3613

; <label>:2007                                    ; preds = %2004
  %2008 = load %struct.regnode** %scan, align 8, !dbg !3614
  %2009 = getelementptr inbounds %struct.regnode* %2008, i32 0, i32 1, !dbg !3614
  %2010 = load i8* %2009, align 1, !dbg !3614
  %2011 = zext i8 %2010 to i32, !dbg !3614
  %2012 = icmp eq i32 %2011, 47, !dbg !3614
  br i1 %2012, label %2013, label %2020, !dbg !3613

; <label>:2013                                    ; preds = %2007
  %2014 = load i8** %s, align 8, !dbg !3616
  %2015 = load i8** %locinput, align 8, !dbg !3616
  %2016 = load i32* %ln, align 4, !dbg !3616
  %2017 = sext i32 %2016 to i64, !dbg !3616
  %2018 = call i32 @memcmp(i8* %2014, i8* %2015, i64 %2017), !dbg !3616
  %2019 = icmp ne i32 %2018, 0, !dbg !3613
  br i1 %2019, label %2038, label %2039, !dbg !3613

; <label>:2020                                    ; preds = %2007
  %2021 = load %struct.regnode** %scan, align 8, !dbg !3617
  %2022 = getelementptr inbounds %struct.regnode* %2021, i32 0, i32 1, !dbg !3617
  %2023 = load i8* %2022, align 1, !dbg !3617
  %2024 = zext i8 %2023 to i32, !dbg !3617
  %2025 = icmp eq i32 %2024, 48, !dbg !3617
  br i1 %2025, label %2026, label %2032, !dbg !3613

; <label>:2026                                    ; preds = %2020
  %2027 = load i8** %s, align 8, !dbg !3618
  %2028 = load i8** %locinput, align 8, !dbg !3619
  %2029 = load i32* %ln, align 4, !dbg !3620
  %2030 = call i32 @Perl_ibcmp(i8* %2027, i8* %2028, i32 %2029), !dbg !3621
  %2031 = icmp ne i32 %2030, 0, !dbg !3613
  br i1 %2031, label %2038, label %2039, !dbg !3613

; <label>:2032                                    ; preds = %2020
  %2033 = load i8** %s, align 8, !dbg !3622
  %2034 = load i8** %locinput, align 8, !dbg !3623
  %2035 = load i32* %ln, align 4, !dbg !3624
  %2036 = call i32 @Perl_ibcmp_locale(i8* %2033, i8* %2034, i32 %2035), !dbg !3625
  %2037 = icmp ne i32 %2036, 0, !dbg !3613
  br i1 %2037, label %2038, label %2039, !dbg !3613

; <label>:2038                                    ; preds = %2032, %2026, %2013
  br label %6127, !dbg !3626

; <label>:2039                                    ; preds = %2032, %2026, %2013, %2004
  %2040 = load i32* %ln, align 4, !dbg !3627
  %2041 = load i8** %locinput, align 8, !dbg !3628
  %2042 = sext i32 %2040 to i64, !dbg !3628
  %2043 = getelementptr inbounds i8* %2041, i64 %2042, !dbg !3628
  store i8* %2043, i8** %locinput, align 8, !dbg !3628
  %2044 = load i8** %locinput, align 8, !dbg !3629
  %2045 = load i8* %2044, align 1, !dbg !3629
  %2046 = zext i8 %2045 to i32, !dbg !3629
  store i32 %2046, i32* %nextchr, align 4, !dbg !3630
  br label %6120, !dbg !3631

; <label>:2047                                    ; preds = %24, %24
  br label %6120, !dbg !3632

; <label>:2048                                    ; preds = %24
  br label %6120, !dbg !3633

; <label>:2049                                    ; preds = %24
  call void @llvm.dbg.declare(metadata %struct.sv*** %sp, metadata !3634, metadata !566), !dbg !3636
  %2050 = load %struct.sv*** @PL_stack_sp, align 8, !dbg !3636
  store %struct.sv** %2050, %struct.sv*** %sp, align 8, !dbg !3636
  call void @llvm.dbg.declare(metadata %struct.op** %oop, metadata !3637, metadata !566), !dbg !3638
  %2051 = load %struct.op** @PL_op, align 8, !dbg !3639
  store %struct.op* %2051, %struct.op** %oop, align 8, !dbg !3638
  call void @llvm.dbg.declare(metadata %struct.cop** %ocurcop, metadata !3640, metadata !566), !dbg !3662
  %2052 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3663
  store %struct.cop* %2052, %struct.cop** %ocurcop, align 8, !dbg !3662
  call void @llvm.dbg.declare(metadata %struct.av** %old_comppad, metadata !3664, metadata !566), !dbg !3665
  call void @llvm.dbg.declare(metadata %struct.sv** %ret, metadata !3666, metadata !566), !dbg !3667
  call void @llvm.dbg.declare(metadata %struct.regexp** %oreg, metadata !3668, metadata !566), !dbg !3670
  %2053 = load %struct.regexp** @PL_reg_re, align 8, !dbg !3671
  store %struct.regexp* %2053, %struct.regexp** %oreg, align 8, !dbg !3670
  %2054 = load %struct.regnode** %scan, align 8, !dbg !3672
  %2055 = bitcast %struct.regnode* %2054 to %struct.regnode_1*, !dbg !3672
  %2056 = getelementptr inbounds %struct.regnode_1* %2055, i32 0, i32 3, !dbg !3672
  %2057 = load i32* %2056, align 4, !dbg !3672
  store i32 %2057, i32* %n, align 4, !dbg !3673
  %2058 = load i32* %n, align 4, !dbg !3674
  %2059 = sext i32 %2058 to i64, !dbg !3675
  %2060 = load %struct.reg_data** @PL_regdata, align 8, !dbg !3675
  %2061 = getelementptr inbounds %struct.reg_data* %2060, i32 0, i32 2, !dbg !3675
  %2062 = getelementptr inbounds [1 x i8*]* %2061, i32 0, i64 %2059, !dbg !3675
  %2063 = load i8** %2062, align 8, !dbg !3675
  %2064 = bitcast i8* %2063 to %struct.op*, !dbg !3676
  store %struct.op* %2064, %struct.op** @PL_op, align 8, !dbg !3677
  %2065 = load %struct.av** @PL_comppad, align 8, !dbg !3678
  store %struct.av* %2065, %struct.av** %old_comppad, align 8, !dbg !3678
  %2066 = load i32* %n, align 4, !dbg !3678
  %2067 = add nsw i32 %2066, 2, !dbg !3678
  %2068 = sext i32 %2067 to i64, !dbg !3678
  %2069 = load %struct.reg_data** @PL_regdata, align 8, !dbg !3678
  %2070 = getelementptr inbounds %struct.reg_data* %2069, i32 0, i32 2, !dbg !3678
  %2071 = getelementptr inbounds [1 x i8*]* %2070, i32 0, i64 %2068, !dbg !3678
  %2072 = load i8** %2071, align 8, !dbg !3678
  %2073 = bitcast i8* %2072 to %struct.av*, !dbg !3678
  store %struct.av* %2073, %struct.av** @PL_comppad, align 8, !dbg !3678
  %2074 = load %struct.av** @PL_comppad, align 8, !dbg !3678
  %2075 = icmp ne %struct.av* %2074, null, !dbg !3678
  br i1 %2075, label %2076, label %2083, !dbg !3678

; <label>:2076                                    ; preds = %2049
  %2077 = load %struct.av** @PL_comppad, align 8, !dbg !3679
  %2078 = getelementptr inbounds %struct.av* %2077, i32 0, i32 0, !dbg !3679
  %2079 = load %struct.xpvav** %2078, align 8, !dbg !3679
  %2080 = getelementptr inbounds %struct.xpvav* %2079, i32 0, i32 0, !dbg !3679
  %2081 = load i8** %2080, align 8, !dbg !3679
  %2082 = bitcast i8* %2081 to %struct.sv**, !dbg !3679
  br label %2084, !dbg !3679

; <label>:2083                                    ; preds = %2049
  br label %2084, !dbg !3681

; <label>:2084                                    ; preds = %2083, %2076
  %2085 = phi %struct.sv** [ %2082, %2076 ], [ null, %2083 ], !dbg !3678
  store %struct.sv** %2085, %struct.sv*** @PL_curpad, align 8, !dbg !3683
  %2086 = load i8** %locinput, align 8, !dbg !3686
  %2087 = load i8** @PL_bostr, align 8, !dbg !3687
  %2088 = ptrtoint i8* %2086 to i64, !dbg !3686
  %2089 = ptrtoint i8* %2087 to i64, !dbg !3686
  %2090 = sub i64 %2088, %2089, !dbg !3686
  %2091 = trunc i64 %2090 to i32, !dbg !3686
  %2092 = load %struct.magic** @PL_reg_magic, align 8, !dbg !3688
  %2093 = getelementptr inbounds %struct.magic* %2092, i32 0, i32 7, !dbg !3688
  store i32 %2091, i32* %2093, align 4, !dbg !3688
  %2094 = load i32** @PL_regendp, align 8, !dbg !3689
  %2095 = getelementptr inbounds i32* %2094, i64 0, !dbg !3689
  store i32 %2091, i32* %2095, align 4, !dbg !3689
  call void @llvm.dbg.declare(metadata %struct.sv*** %before, metadata !3690, metadata !566), !dbg !3692
  %2096 = load %struct.sv*** %sp, align 8, !dbg !3693
  store %struct.sv** %2096, %struct.sv*** %before, align 8, !dbg !3692
  %2097 = load i32 ()** @PL_runops, align 8, !dbg !3694
  %2098 = call i32 %2097(), !dbg !3694
  %2099 = load %struct.sv*** @PL_stack_sp, align 8, !dbg !3695
  store %struct.sv** %2099, %struct.sv*** %sp, align 8, !dbg !3695
  %2100 = load %struct.sv*** %sp, align 8, !dbg !3696
  %2101 = load %struct.sv*** %before, align 8, !dbg !3698
  %2102 = icmp eq %struct.sv** %2100, %2101, !dbg !3696
  br i1 %2102, label %2103, label %2104, !dbg !3699

; <label>:2103                                    ; preds = %2084
  store %struct.sv* @PL_sv_undef, %struct.sv** %ret, align 8, !dbg !3700
  br label %2109, !dbg !3700

; <label>:2104                                    ; preds = %2084
  %2105 = load %struct.sv*** %sp, align 8, !dbg !3701
  %2106 = getelementptr inbounds %struct.sv** %2105, i32 -1, !dbg !3701
  store %struct.sv** %2106, %struct.sv*** %sp, align 8, !dbg !3701
  %2107 = load %struct.sv** %2105, align 8, !dbg !3701
  store %struct.sv* %2107, %struct.sv** %ret, align 8, !dbg !3703
  %2108 = load %struct.sv*** %sp, align 8, !dbg !3704
  store %struct.sv** %2108, %struct.sv*** @PL_stack_sp, align 8, !dbg !3704
  br label %2109

; <label>:2109                                    ; preds = %2104, %2103
  %2110 = load %struct.op** %oop, align 8, !dbg !3705
  store %struct.op* %2110, %struct.op** @PL_op, align 8, !dbg !3706
  %2111 = load %struct.av** %old_comppad, align 8, !dbg !3707
  store %struct.av* %2111, %struct.av** @PL_comppad, align 8, !dbg !3707
  %2112 = load %struct.av** @PL_comppad, align 8, !dbg !3707
  %2113 = icmp ne %struct.av* %2112, null, !dbg !3707
  br i1 %2113, label %2114, label %2121, !dbg !3707

; <label>:2114                                    ; preds = %2109
  %2115 = load %struct.av** @PL_comppad, align 8, !dbg !3708
  %2116 = getelementptr inbounds %struct.av* %2115, i32 0, i32 0, !dbg !3708
  %2117 = load %struct.xpvav** %2116, align 8, !dbg !3708
  %2118 = getelementptr inbounds %struct.xpvav* %2117, i32 0, i32 0, !dbg !3708
  %2119 = load i8** %2118, align 8, !dbg !3708
  %2120 = bitcast i8* %2119 to %struct.sv**, !dbg !3708
  br label %2122, !dbg !3708

; <label>:2121                                    ; preds = %2109
  br label %2122, !dbg !3709

; <label>:2122                                    ; preds = %2121, %2114
  %2123 = phi %struct.sv** [ %2120, %2114 ], [ null, %2121 ], !dbg !3707
  store %struct.sv** %2123, %struct.sv*** @PL_curpad, align 8, !dbg !3710
  %2124 = load %struct.cop** %ocurcop, align 8, !dbg !3711
  store volatile %struct.cop* %2124, %struct.cop** @PL_curcop, align 8, !dbg !3712
  %2125 = load i32* %logical, align 4, !dbg !3713
  %2126 = icmp ne i32 %2125, 0, !dbg !3715
  br i1 %2126, label %2127, label %2437, !dbg !3715

; <label>:2127                                    ; preds = %2122
  %2128 = load i32* %logical, align 4, !dbg !3716
  %2129 = icmp eq i32 %2128, 2, !dbg !3716
  br i1 %2129, label %2130, label %2355, !dbg !3719

; <label>:2130                                    ; preds = %2127
  call void @llvm.dbg.declare(metadata %struct.regexp** %re, metadata !3720, metadata !566), !dbg !3722
  call void @llvm.dbg.declare(metadata %struct.magic** %mg, metadata !3723, metadata !566), !dbg !3724
  store %struct.magic* null, %struct.magic** %mg, align 8, !dbg !3724
  call void @llvm.dbg.declare(metadata %struct.re_cc_state* %state, metadata !3725, metadata !566), !dbg !3748
  call void @llvm.dbg.declare(metadata i32* %cp, metadata !3749, metadata !566), !dbg !3750
  call void @llvm.dbg.declare(metadata i32* %lastcp, metadata !3751, metadata !566), !dbg !3752
  call void @llvm.dbg.declare(metadata i32* %toggleutf, metadata !3753, metadata !566), !dbg !3754
  call void @llvm.dbg.declare(metadata %struct.sv** %sv, metadata !3755, metadata !566), !dbg !3756
  %2131 = load %struct.sv** %ret, align 8, !dbg !3757
  %2132 = getelementptr inbounds %struct.sv* %2131, i32 0, i32 2, !dbg !3757
  %2133 = load i32* %2132, align 4, !dbg !3757
  %2134 = and i32 %2133, 524288, !dbg !3757
  %2135 = icmp ne i32 %2134, 0, !dbg !3759
  br i1 %2135, label %2136, label %2150, !dbg !3759

; <label>:2136                                    ; preds = %2130
  %2137 = load %struct.sv** %ret, align 8, !dbg !3760
  %2138 = getelementptr inbounds %struct.sv* %2137, i32 0, i32 0, !dbg !3760
  %2139 = load i8** %2138, align 8, !dbg !3760
  %2140 = bitcast i8* %2139 to %struct.xrv*, !dbg !3760
  %2141 = getelementptr inbounds %struct.xrv* %2140, i32 0, i32 0, !dbg !3760
  %2142 = load %struct.sv** %2141, align 8, !dbg !3760
  store %struct.sv* %2142, %struct.sv** %sv, align 8, !dbg !3760
  %2143 = getelementptr inbounds %struct.sv* %2142, i32 0, i32 2, !dbg !3760
  %2144 = load i32* %2143, align 4, !dbg !3760
  %2145 = and i32 %2144, 16384, !dbg !3760
  %2146 = icmp ne i32 %2145, 0, !dbg !3759
  br i1 %2146, label %2147, label %2150, !dbg !3759

; <label>:2147                                    ; preds = %2136
  %2148 = load %struct.sv** %sv, align 8, !dbg !3762
  %2149 = call %struct.magic* @Perl_mg_find(%struct.sv* %2148, i32 114), !dbg !3763
  store %struct.magic* %2149, %struct.magic** %mg, align 8, !dbg !3764
  br label %2170, !dbg !3764

; <label>:2150                                    ; preds = %2136, %2130
  %2151 = load %struct.sv** %ret, align 8, !dbg !3765
  %2152 = getelementptr inbounds %struct.sv* %2151, i32 0, i32 2, !dbg !3765
  %2153 = load i32* %2152, align 4, !dbg !3765
  %2154 = and i32 %2153, 16384, !dbg !3765
  %2155 = icmp ne i32 %2154, 0, !dbg !3767
  br i1 %2155, label %2156, label %2169, !dbg !3767

; <label>:2156                                    ; preds = %2150
  %2157 = load %struct.sv** %ret, align 8, !dbg !3768
  %2158 = getelementptr inbounds %struct.sv* %2157, i32 0, i32 2, !dbg !3768
  %2159 = load i32* %2158, align 4, !dbg !3768
  %2160 = and i32 %2159, 8192, !dbg !3768
  %2161 = icmp ne i32 %2160, 0, !dbg !3771
  br i1 %2161, label %2162, label %2165, !dbg !3771

; <label>:2162                                    ; preds = %2156
  %2163 = load %struct.sv** %ret, align 8, !dbg !3772
  %2164 = call i32 @Perl_sv_unmagic(%struct.sv* %2163, i32 114), !dbg !3773
  br label %2168, !dbg !3773

; <label>:2165                                    ; preds = %2156
  %2166 = load %struct.sv** %ret, align 8, !dbg !3774
  %2167 = call %struct.magic* @Perl_mg_find(%struct.sv* %2166, i32 114), !dbg !3775
  store %struct.magic* %2167, %struct.magic** %mg, align 8, !dbg !3776
  br label %2168

; <label>:2168                                    ; preds = %2165, %2162
  br label %2169, !dbg !3777

; <label>:2169                                    ; preds = %2168, %2150
  br label %2170

; <label>:2170                                    ; preds = %2169, %2147
  %2171 = load %struct.magic** %mg, align 8, !dbg !3778
  %2172 = icmp ne %struct.magic* %2171, null, !dbg !3780
  br i1 %2172, label %2173, label %2190, !dbg !3780

; <label>:2173                                    ; preds = %2170
  %2174 = load %struct.magic** %mg, align 8, !dbg !3781
  %2175 = getelementptr inbounds %struct.magic* %2174, i32 0, i32 5, !dbg !3781
  %2176 = load %struct.sv** %2175, align 8, !dbg !3781
  %2177 = bitcast %struct.sv* %2176 to %struct.regexp*, !dbg !3783
  store %struct.regexp* %2177, %struct.regexp** %re, align 8, !dbg !3784
  %2178 = load %struct.regexp** %re, align 8, !dbg !3785
  %2179 = icmp ne %struct.regexp* %2178, null, !dbg !3785
  br i1 %2179, label %2180, label %2186, !dbg !3785

; <label>:2180                                    ; preds = %2173
  %2181 = load %struct.regexp** %re, align 8, !dbg !3786
  %2182 = getelementptr inbounds %struct.regexp* %2181, i32 0, i32 9, !dbg !3786
  %2183 = load i32* %2182, align 4, !dbg !3786
  %2184 = add nsw i32 %2183, 1, !dbg !3786
  store i32 %2184, i32* %2182, align 4, !dbg !3786
  %2185 = icmp ne i32 %2183, 0, !dbg !3786
  br label %2186

; <label>:2186                                    ; preds = %2180, %2173
  %2187 = phi i1 [ false, %2173 ], [ %2185, %2180 ]
  %2188 = zext i1 %2187 to i32, !dbg !3788
  %2189 = load %struct.regexp** %re, align 8, !dbg !3788
  br label %2267, !dbg !3790

; <label>:2190                                    ; preds = %2170
  call void @llvm.dbg.declare(metadata i64* %len, metadata !3791, metadata !566), !dbg !3793
  call void @llvm.dbg.declare(metadata i8** %t, metadata !3794, metadata !566), !dbg !3795
  %2191 = load %struct.sv** %ret, align 8, !dbg !3796
  %2192 = getelementptr inbounds %struct.sv* %2191, i32 0, i32 2, !dbg !3796
  %2193 = load i32* %2192, align 4, !dbg !3796
  %2194 = and i32 %2193, 262144, !dbg !3796
  %2195 = icmp eq i32 %2194, 262144, !dbg !3796
  br i1 %2195, label %2196, label %2209, !dbg !3796

; <label>:2196                                    ; preds = %2190
  %2197 = load %struct.sv** %ret, align 8, !dbg !3797
  %2198 = getelementptr inbounds %struct.sv* %2197, i32 0, i32 0, !dbg !3797
  %2199 = load i8** %2198, align 8, !dbg !3797
  %2200 = bitcast i8* %2199 to %struct.xpv*, !dbg !3797
  %2201 = getelementptr inbounds %struct.xpv* %2200, i32 0, i32 1, !dbg !3797
  %2202 = load i64* %2201, align 8, !dbg !3797
  store i64 %2202, i64* %len, align 8, !dbg !3797
  %2203 = load %struct.sv** %ret, align 8, !dbg !3797
  %2204 = getelementptr inbounds %struct.sv* %2203, i32 0, i32 0, !dbg !3797
  %2205 = load i8** %2204, align 8, !dbg !3797
  %2206 = bitcast i8* %2205 to %struct.xpv*, !dbg !3797
  %2207 = getelementptr inbounds %struct.xpv* %2206, i32 0, i32 0, !dbg !3797
  %2208 = load i8** %2207, align 8, !dbg !3797
  br label %2212, !dbg !3797

; <label>:2209                                    ; preds = %2190
  %2210 = load %struct.sv** %ret, align 8, !dbg !3799
  %2211 = call i8* @Perl_sv_2pv_flags(%struct.sv* %2210, i64* %len, i32 2), !dbg !3799
  br label %2212, !dbg !3799

; <label>:2212                                    ; preds = %2209, %2196
  %2213 = phi i8* [ %2208, %2196 ], [ %2211, %2209 ], !dbg !3796
  store i8* %2213, i8** %t, align 8, !dbg !3801
  call void @llvm.dbg.declare(metadata %struct.pmop* %pm, metadata !3804, metadata !566), !dbg !3805
  call void @llvm.dbg.declare(metadata i8** %oprecomp, metadata !3806, metadata !566), !dbg !3807
  %2214 = load i8** @PL_regprecomp, align 8, !dbg !3808
  store i8* %2214, i8** %oprecomp, align 8, !dbg !3807
  call void @llvm.dbg.declare(metadata i32* %osize, metadata !3809, metadata !566), !dbg !3810
  %2215 = load i32* @PL_regsize, align 4, !dbg !3811
  store i32 %2215, i32* %osize, align 4, !dbg !3810
  call void @llvm.dbg.declare(metadata i32* %onpar, metadata !3812, metadata !566), !dbg !3813
  %2216 = load i32* @PL_regnpar, align 4, !dbg !3814
  store i32 %2216, i32* %onpar, align 4, !dbg !3813
  %2217 = bitcast %struct.pmop* %pm to i8*, !dbg !3815
  call void @llvm.memset.p0i8.i64(i8* %2217, i8 0, i64 112, i32 1, i1 false), !dbg !3815
  %2218 = load %struct.sv** %ret, align 8, !dbg !3816
  %2219 = getelementptr inbounds %struct.sv* %2218, i32 0, i32 2, !dbg !3816
  %2220 = load i32* %2219, align 4, !dbg !3816
  %2221 = and i32 %2220, 536870912, !dbg !3816
  %2222 = icmp ne i32 %2221, 0, !dbg !3818
  br i1 %2222, label %2223, label %2236, !dbg !3818

; <label>:2223                                    ; preds = %2212
  %2224 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3819
  %2225 = getelementptr inbounds %struct.cop* %2224, i32 0, i32 7, !dbg !3819
  %2226 = load i8* %2225, align 1, !dbg !3819
  %2227 = zext i8 %2226 to i32, !dbg !3819
  %2228 = and i32 %2227, 8, !dbg !3819
  %2229 = icmp ne i32 %2228, 0, !dbg !3818
  br i1 %2229, label %2236, label %2230, !dbg !3818

; <label>:2230                                    ; preds = %2223
  %2231 = getelementptr inbounds %struct.pmop* %pm, i32 0, i32 16, !dbg !3821
  %2232 = load i8* %2231, align 1, !dbg !3821
  %2233 = zext i8 %2232 to i32, !dbg !3821
  %2234 = or i32 %2233, 8, !dbg !3821
  %2235 = trunc i32 %2234 to i8, !dbg !3821
  store i8 %2235, i8* %2231, align 1, !dbg !3821
  br label %2236, !dbg !3821

; <label>:2236                                    ; preds = %2230, %2223, %2212
  %2237 = load %struct.regexp* (i8*, i8*, %struct.pmop*)** @PL_regcompp, align 8, !dbg !3823
  %2238 = load i8** %t, align 8, !dbg !3824
  %2239 = load i8** %t, align 8, !dbg !3825
  %2240 = load i64* %len, align 8, !dbg !3826
  %2241 = getelementptr inbounds i8* %2239, i64 %2240, !dbg !3825
  %2242 = call %struct.regexp* %2237(i8* %2238, i8* %2241, %struct.pmop* %pm), !dbg !3823
  store %struct.regexp* %2242, %struct.regexp** %re, align 8, !dbg !3827
  %2243 = load %struct.sv** %ret, align 8, !dbg !3828
  %2244 = getelementptr inbounds %struct.sv* %2243, i32 0, i32 2, !dbg !3828
  %2245 = load i32* %2244, align 4, !dbg !3828
  %2246 = and i32 %2245, 8399360, !dbg !3828
  %2247 = icmp ne i32 %2246, 0, !dbg !3830
  br i1 %2247, label %2263, label %2248, !dbg !3830

; <label>:2248                                    ; preds = %2236
  %2249 = load %struct.sv** %ret, align 8, !dbg !3831
  %2250 = load %struct.regexp** %re, align 8, !dbg !3832
  %2251 = icmp ne %struct.regexp* %2250, null, !dbg !3832
  br i1 %2251, label %2252, label %2258, !dbg !3832

; <label>:2252                                    ; preds = %2248
  %2253 = load %struct.regexp** %re, align 8, !dbg !3833
  %2254 = getelementptr inbounds %struct.regexp* %2253, i32 0, i32 9, !dbg !3833
  %2255 = load i32* %2254, align 4, !dbg !3833
  %2256 = add nsw i32 %2255, 1, !dbg !3833
  store i32 %2256, i32* %2254, align 4, !dbg !3833
  %2257 = icmp ne i32 %2255, 0, !dbg !3833
  br label %2258

; <label>:2258                                    ; preds = %2252, %2248
  %2259 = phi i1 [ false, %2248 ], [ %2257, %2252 ]
  %2260 = zext i1 %2259 to i32, !dbg !3835
  %2261 = load %struct.regexp** %re, align 8, !dbg !3835
  %2262 = bitcast %struct.regexp* %2261 to %struct.sv*, !dbg !3837
  call void @Perl_sv_magic(%struct.sv* %2249, %struct.sv* %2262, i32 114, i8* null, i32 0), !dbg !3838
  br label %2263, !dbg !3838

; <label>:2263                                    ; preds = %2258, %2236
  %2264 = load i8** %oprecomp, align 8, !dbg !3839
  store i8* %2264, i8** @PL_regprecomp, align 8, !dbg !3840
  %2265 = load i32* %osize, align 4, !dbg !3841
  store i32 %2265, i32* @PL_regsize, align 4, !dbg !3842
  %2266 = load i32* %onpar, align 4, !dbg !3843
  store i32 %2266, i32* @PL_regnpar, align 4, !dbg !3844
  br label %2267

; <label>:2267                                    ; preds = %2263, %2186
  %2268 = load %struct.regnode** %next, align 8, !dbg !3845
  %2269 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 1, !dbg !3846
  store %struct.regnode* %2268, %struct.regnode** %2269, align 8, !dbg !3846
  %2270 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !3847
  %2271 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 2, !dbg !3848
  store %struct.re_cc_state* %2270, %struct.re_cc_state** %2271, align 8, !dbg !3848
  %2272 = load %struct.curcur** @PL_regcc, align 8, !dbg !3849
  %2273 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 3, !dbg !3850
  store %struct.curcur* %2272, %struct.curcur** %2273, align 8, !dbg !3850
  %2274 = load %struct.regexp** @PL_reg_re, align 8, !dbg !3851
  %2275 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 4, !dbg !3852
  store %struct.regexp* %2274, %struct.regexp** %2275, align 8, !dbg !3852
  store %struct.curcur* null, %struct.curcur** @PL_regcc, align 8, !dbg !3853
  %2276 = call i32 (i32, ...)* bitcast (i32 (...)* @regcppush to i32 (i32, ...)*)(i32 0), !dbg !3854
  store i32 %2276, i32* %cp, align 4, !dbg !3855
  %2277 = load i32* @PL_savestack_ix, align 4, !dbg !3856
  store i32 %2277, i32* %lastcp, align 4, !dbg !3856
  %2278 = load %struct.regexp** %re, align 8, !dbg !3857
  %2279 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %2278), !dbg !3858
  %2280 = load i32* @PL_savestack_ix, align 4, !dbg !3859
  %2281 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 0, !dbg !3860
  store i32 %2280, i32* %2281, align 4, !dbg !3860
  %2282 = load i32** @PL_reglastparen, align 8, !dbg !3861
  store i32 0, i32* %2282, align 4, !dbg !3862
  %2283 = load i32** @PL_reglastcloseparen, align 8, !dbg !3863
  store i32 0, i32* %2283, align 4, !dbg !3864
  store %struct.re_cc_state* %state, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !3865
  %2284 = load i8** %locinput, align 8, !dbg !3866
  store i8* %2284, i8** @PL_reginput, align 8, !dbg !3867
  %2285 = load i32* @PL_reg_flags, align 4, !dbg !3868
  %2286 = and i32 %2285, 8, !dbg !3868
  %2287 = icmp ne i32 %2286, 0, !dbg !3869
  %2288 = zext i1 %2287 to i32, !dbg !3869
  %2289 = load %struct.regexp** %re, align 8, !dbg !3870
  %2290 = getelementptr inbounds %struct.regexp* %2289, i32 0, i32 15, !dbg !3870
  %2291 = load i32* %2290, align 4, !dbg !3870
  %2292 = and i32 %2291, 65536, !dbg !3870
  %2293 = icmp ne i32 %2292, 0, !dbg !3871
  %2294 = zext i1 %2293 to i32, !dbg !3871
  %2295 = xor i32 %2288, %2294, !dbg !3872
  store i32 %2295, i32* %toggleutf, align 4, !dbg !3873
  %2296 = load i32* %toggleutf, align 4, !dbg !3874
  %2297 = icmp ne i32 %2296, 0, !dbg !3876
  br i1 %2297, label %2298, label %2301, !dbg !3876

; <label>:2298                                    ; preds = %2267
  %2299 = load i32* @PL_reg_flags, align 4, !dbg !3877
  %2300 = xor i32 %2299, 8, !dbg !3877
  store i32 %2300, i32* @PL_reg_flags, align 4, !dbg !3877
  br label %2301, !dbg !3877

; <label>:2301                                    ; preds = %2298, %2267
  store i32 0, i32* @PL_reg_maxiter, align 4, !dbg !3879
  %2302 = load %struct.regexp** %re, align 8, !dbg !3880
  %2303 = getelementptr inbounds %struct.regexp* %2302, i32 0, i32 16, !dbg !3880
  %2304 = getelementptr inbounds [1 x %struct.regnode]* %2303, i32 0, i32 0, !dbg !3880
  %2305 = getelementptr inbounds %struct.regnode* %2304, i64 1, !dbg !3880
  %2306 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2305), !dbg !3882
  %2307 = icmp ne i32 %2306, 0, !dbg !3883
  br i1 %2307, label %2308, label %2331, !dbg !3883

; <label>:2308                                    ; preds = %2301
  %2309 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 2, !dbg !3884
  %2310 = load %struct.re_cc_state** %2309, align 8, !dbg !3884
  store %struct.re_cc_state* %2310, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !3886
  %2311 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 3, !dbg !3887
  %2312 = load %struct.curcur** %2311, align 8, !dbg !3887
  store %struct.curcur* %2312, %struct.curcur** @PL_regcc, align 8, !dbg !3888
  %2313 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 4, !dbg !3889
  %2314 = load %struct.regexp** %2313, align 8, !dbg !3889
  store %struct.regexp* %2314, %struct.regexp** @PL_reg_re, align 8, !dbg !3890
  %2315 = load %struct.regexp** @PL_reg_re, align 8, !dbg !3891
  %2316 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %2315), !dbg !3892
  %2317 = load i32* %toggleutf, align 4, !dbg !3893
  %2318 = icmp ne i32 %2317, 0, !dbg !3895
  br i1 %2318, label %2319, label %2322, !dbg !3895

; <label>:2319                                    ; preds = %2308
  %2320 = load i32* @PL_reg_flags, align 4, !dbg !3896
  %2321 = xor i32 %2320, 8, !dbg !3896
  store i32 %2321, i32* @PL_reg_flags, align 4, !dbg !3896
  br label %2322, !dbg !3896

; <label>:2322                                    ; preds = %2319, %2308
  store i32 0, i32* @PL_reg_maxiter, align 4, !dbg !3898
  %2323 = load void (%struct.regexp*)** @PL_regfree, align 8, !dbg !3899
  %2324 = load %struct.regexp** %re, align 8, !dbg !3899
  call void %2323(%struct.regexp* %2324), !dbg !3899
  %2325 = load i32* @PL_savestack_ix, align 4, !dbg !3900
  %2326 = load i32* %cp, align 4, !dbg !3900
  %2327 = icmp sgt i32 %2325, %2326, !dbg !3900
  br i1 %2327, label %2328, label %2330, !dbg !3902

; <label>:2328                                    ; preds = %2322
  %2329 = load i32* %cp, align 4, !dbg !3903
  call void @Perl_leave_scope(i32 %2329), !dbg !3903
  br label %2330, !dbg !3903

; <label>:2330                                    ; preds = %2328, %2322
  br label %6126, !dbg !3905

; <label>:2331                                    ; preds = %2301
  %2332 = load void (%struct.regexp*)** @PL_regfree, align 8, !dbg !3906
  %2333 = load %struct.regexp** %re, align 8, !dbg !3906
  call void %2332(%struct.regexp* %2333), !dbg !3906
  %2334 = load i32* @PL_savestack_ix, align 4, !dbg !3907
  %2335 = load i32* %lastcp, align 4, !dbg !3907
  %2336 = icmp sgt i32 %2334, %2335, !dbg !3907
  br i1 %2336, label %2337, label %2339, !dbg !3909

; <label>:2337                                    ; preds = %2331
  %2338 = load i32* %lastcp, align 4, !dbg !3910
  call void @Perl_leave_scope(i32 %2338), !dbg !3910
  br label %2339, !dbg !3910

; <label>:2339                                    ; preds = %2337, %2331
  %2340 = call i32 (...)* @regcppop(), !dbg !3912
  %2341 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 2, !dbg !3913
  %2342 = load %struct.re_cc_state** %2341, align 8, !dbg !3913
  store %struct.re_cc_state* %2342, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !3914
  %2343 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 3, !dbg !3915
  %2344 = load %struct.curcur** %2343, align 8, !dbg !3915
  store %struct.curcur* %2344, %struct.curcur** @PL_regcc, align 8, !dbg !3916
  %2345 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 4, !dbg !3917
  %2346 = load %struct.regexp** %2345, align 8, !dbg !3917
  store %struct.regexp* %2346, %struct.regexp** @PL_reg_re, align 8, !dbg !3918
  %2347 = load %struct.regexp** @PL_reg_re, align 8, !dbg !3919
  %2348 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %2347), !dbg !3920
  %2349 = load i32* %toggleutf, align 4, !dbg !3921
  %2350 = icmp ne i32 %2349, 0, !dbg !3923
  br i1 %2350, label %2351, label %2354, !dbg !3923

; <label>:2351                                    ; preds = %2339
  %2352 = load i32* @PL_reg_flags, align 4, !dbg !3924
  %2353 = xor i32 %2352, 8, !dbg !3924
  store i32 %2353, i32* @PL_reg_flags, align 4, !dbg !3924
  br label %2354, !dbg !3924

; <label>:2354                                    ; preds = %2351, %2339
  store i32 0, i32* @PL_reg_maxiter, align 4, !dbg !3926
  store i32 0, i32* %logical, align 4, !dbg !3927
  br label %6127, !dbg !3928

; <label>:2355                                    ; preds = %2127
  %2356 = load %struct.sv** %ret, align 8, !dbg !3929
  %2357 = icmp ne %struct.sv* %2356, null, !dbg !3929
  br i1 %2357, label %2359, label %2358, !dbg !3929

; <label>:2358                                    ; preds = %2355
  br label %2435, !dbg !3930

; <label>:2359                                    ; preds = %2355
  %2360 = load %struct.sv** %ret, align 8, !dbg !3932
  %2361 = getelementptr inbounds %struct.sv* %2360, i32 0, i32 2, !dbg !3932
  %2362 = load i32* %2361, align 4, !dbg !3932
  %2363 = and i32 %2362, 262144, !dbg !3932
  %2364 = icmp ne i32 %2363, 0, !dbg !3932
  br i1 %2364, label %2365, label %2395, !dbg !3932

; <label>:2365                                    ; preds = %2359
  %2366 = load %struct.sv** %ret, align 8, !dbg !3934
  %2367 = getelementptr inbounds %struct.sv* %2366, i32 0, i32 0, !dbg !3934
  %2368 = load i8** %2367, align 8, !dbg !3934
  %2369 = bitcast i8* %2368 to %struct.xpv*, !dbg !3934
  store %struct.xpv* %2369, %struct.xpv** @PL_Xpv, align 8, !dbg !3934
  %2370 = icmp ne %struct.xpv* %2369, null, !dbg !3934
  br i1 %2370, label %2371, label %2392, !dbg !3934

; <label>:2371                                    ; preds = %2365
  %2372 = load %struct.xpv** @PL_Xpv, align 8, !dbg !3936
  %2373 = getelementptr inbounds %struct.xpv* %2372, i32 0, i32 1, !dbg !3936
  %2374 = load i64* %2373, align 8, !dbg !3936
  %2375 = icmp ugt i64 %2374, 1, !dbg !3936
  br i1 %2375, label %2390, label %2376, !dbg !3936

; <label>:2376                                    ; preds = %2371
  %2377 = load %struct.xpv** @PL_Xpv, align 8, !dbg !3938
  %2378 = getelementptr inbounds %struct.xpv* %2377, i32 0, i32 1, !dbg !3938
  %2379 = load i64* %2378, align 8, !dbg !3938
  %2380 = icmp ne i64 %2379, 0, !dbg !3938
  br i1 %2380, label %2381, label %2388, !dbg !3938

; <label>:2381                                    ; preds = %2376
  %2382 = load %struct.xpv** @PL_Xpv, align 8, !dbg !3940
  %2383 = getelementptr inbounds %struct.xpv* %2382, i32 0, i32 0, !dbg !3940
  %2384 = load i8** %2383, align 8, !dbg !3940
  %2385 = load i8* %2384, align 1, !dbg !3940
  %2386 = sext i8 %2385 to i32, !dbg !3940
  %2387 = icmp ne i32 %2386, 48, !dbg !3940
  br label %2388

; <label>:2388                                    ; preds = %2381, %2376
  %2389 = phi i1 [ false, %2376 ], [ %2387, %2381 ]
  br label %2390, !dbg !3942

; <label>:2390                                    ; preds = %2388, %2371
  %2391 = phi i1 [ true, %2371 ], [ %2389, %2388 ]
  br label %2392

; <label>:2392                                    ; preds = %2390, %2365
  %2393 = phi i1 [ false, %2365 ], [ %2391, %2390 ]
  %2394 = select i1 %2393, i32 1, i32 0, !dbg !3944
  br label %2433, !dbg !3944

; <label>:2395                                    ; preds = %2359
  %2396 = load %struct.sv** %ret, align 8, !dbg !3946
  %2397 = getelementptr inbounds %struct.sv* %2396, i32 0, i32 2, !dbg !3946
  %2398 = load i32* %2397, align 4, !dbg !3946
  %2399 = and i32 %2398, 65536, !dbg !3946
  %2400 = icmp ne i32 %2399, 0, !dbg !3946
  br i1 %2400, label %2401, label %2410, !dbg !3946

; <label>:2401                                    ; preds = %2395
  %2402 = load %struct.sv** %ret, align 8, !dbg !3948
  %2403 = getelementptr inbounds %struct.sv* %2402, i32 0, i32 0, !dbg !3948
  %2404 = load i8** %2403, align 8, !dbg !3948
  %2405 = bitcast i8* %2404 to %struct.xpviv*, !dbg !3948
  %2406 = getelementptr inbounds %struct.xpviv* %2405, i32 0, i32 3, !dbg !3948
  %2407 = load i64* %2406, align 8, !dbg !3948
  %2408 = icmp ne i64 %2407, 0, !dbg !3948
  %2409 = zext i1 %2408 to i32, !dbg !3948
  br label %2431, !dbg !3948

; <label>:2410                                    ; preds = %2395
  %2411 = load %struct.sv** %ret, align 8, !dbg !3950
  %2412 = getelementptr inbounds %struct.sv* %2411, i32 0, i32 2, !dbg !3950
  %2413 = load i32* %2412, align 4, !dbg !3950
  %2414 = and i32 %2413, 131072, !dbg !3950
  %2415 = icmp ne i32 %2414, 0, !dbg !3950
  br i1 %2415, label %2416, label %2425, !dbg !3950

; <label>:2416                                    ; preds = %2410
  %2417 = load %struct.sv** %ret, align 8, !dbg !3952
  %2418 = getelementptr inbounds %struct.sv* %2417, i32 0, i32 0, !dbg !3952
  %2419 = load i8** %2418, align 8, !dbg !3952
  %2420 = bitcast i8* %2419 to %struct.xpvnv*, !dbg !3952
  %2421 = getelementptr inbounds %struct.xpvnv* %2420, i32 0, i32 4, !dbg !3952
  %2422 = load double* %2421, align 8, !dbg !3952
  %2423 = fcmp une double %2422, 0.000000e+00, !dbg !3952
  %2424 = zext i1 %2423 to i32, !dbg !3952
  br label %2429, !dbg !3952

; <label>:2425                                    ; preds = %2410
  %2426 = load %struct.sv** %ret, align 8, !dbg !3954
  %2427 = call signext i8 @Perl_sv_2bool(%struct.sv* %2426), !dbg !3954
  %2428 = sext i8 %2427 to i32, !dbg !3954
  br label %2429, !dbg !3954

; <label>:2429                                    ; preds = %2425, %2416
  %2430 = phi i32 [ %2424, %2416 ], [ %2428, %2425 ], !dbg !3929
  br label %2431, !dbg !3956

; <label>:2431                                    ; preds = %2429, %2401
  %2432 = phi i32 [ %2409, %2401 ], [ %2430, %2429 ], !dbg !3929
  br label %2433, !dbg !3959

; <label>:2433                                    ; preds = %2431, %2392
  %2434 = phi i32 [ %2394, %2392 ], [ %2432, %2431 ], !dbg !3929
  br label %2435, !dbg !3962

; <label>:2435                                    ; preds = %2433, %2358
  %2436 = phi i32 [ 0, %2358 ], [ %2434, %2433 ], !dbg !3929
  store i32 %2436, i32* %sw, align 4, !dbg !3965
  store i32 0, i32* %logical, align 4, !dbg !3968
  br label %2443, !dbg !3969

; <label>:2437                                    ; preds = %2122
  %2438 = load %struct.gv** @PL_replgv, align 8, !dbg !3970
  %2439 = call %struct.sv* @Perl_save_scalar(%struct.gv* %2438), !dbg !3970
  %2440 = load %struct.sv** %ret, align 8, !dbg !3970
  call void @Perl_sv_setsv_flags(%struct.sv* %2439, %struct.sv* %2440, i32 2), !dbg !3970
  %2441 = load %struct.regexp** %oreg, align 8, !dbg !3972
  %2442 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %2441), !dbg !3973
  br label %2443

; <label>:2443                                    ; preds = %2437, %2435
  br label %6120, !dbg !3974

; <label>:2444                                    ; preds = %24
  %2445 = load %struct.regnode** %scan, align 8, !dbg !3975
  %2446 = bitcast %struct.regnode* %2445 to %struct.regnode_1*, !dbg !3975
  %2447 = getelementptr inbounds %struct.regnode_1* %2446, i32 0, i32 3, !dbg !3975
  %2448 = load i32* %2447, align 4, !dbg !3975
  store i32 %2448, i32* %n, align 4, !dbg !3976
  %2449 = load i8** %locinput, align 8, !dbg !3977
  %2450 = load i32* %n, align 4, !dbg !3978
  %2451 = sext i32 %2450 to i64, !dbg !3979
  %2452 = load i8*** @PL_reg_start_tmp, align 8, !dbg !3979
  %2453 = getelementptr inbounds i8** %2452, i64 %2451, !dbg !3979
  store i8* %2449, i8** %2453, align 8, !dbg !3979
  %2454 = load i32* %n, align 4, !dbg !3980
  %2455 = load i32* @PL_regsize, align 4, !dbg !3982
  %2456 = icmp sgt i32 %2454, %2455, !dbg !3980
  br i1 %2456, label %2457, label %2459, !dbg !3983

; <label>:2457                                    ; preds = %2444
  %2458 = load i32* %n, align 4, !dbg !3984
  store i32 %2458, i32* @PL_regsize, align 4, !dbg !3985
  br label %2459, !dbg !3985

; <label>:2459                                    ; preds = %2457, %2444
  br label %6120, !dbg !3986

; <label>:2460                                    ; preds = %24
  %2461 = load %struct.regnode** %scan, align 8, !dbg !3987
  %2462 = bitcast %struct.regnode* %2461 to %struct.regnode_1*, !dbg !3987
  %2463 = getelementptr inbounds %struct.regnode_1* %2462, i32 0, i32 3, !dbg !3987
  %2464 = load i32* %2463, align 4, !dbg !3987
  store i32 %2464, i32* %n, align 4, !dbg !3988
  %2465 = load i32* %n, align 4, !dbg !3989
  %2466 = sext i32 %2465 to i64, !dbg !3990
  %2467 = load i8*** @PL_reg_start_tmp, align 8, !dbg !3990
  %2468 = getelementptr inbounds i8** %2467, i64 %2466, !dbg !3990
  %2469 = load i8** %2468, align 8, !dbg !3990
  %2470 = load i8** @PL_bostr, align 8, !dbg !3991
  %2471 = ptrtoint i8* %2469 to i64, !dbg !3990
  %2472 = ptrtoint i8* %2470 to i64, !dbg !3990
  %2473 = sub i64 %2471, %2472, !dbg !3990
  %2474 = trunc i64 %2473 to i32, !dbg !3990
  %2475 = load i32* %n, align 4, !dbg !3992
  %2476 = sext i32 %2475 to i64, !dbg !3993
  %2477 = load i32** @PL_regstartp, align 8, !dbg !3993
  %2478 = getelementptr inbounds i32* %2477, i64 %2476, !dbg !3993
  store i32 %2474, i32* %2478, align 4, !dbg !3993
  %2479 = load i8** %locinput, align 8, !dbg !3994
  %2480 = load i8** @PL_bostr, align 8, !dbg !3995
  %2481 = ptrtoint i8* %2479 to i64, !dbg !3994
  %2482 = ptrtoint i8* %2480 to i64, !dbg !3994
  %2483 = sub i64 %2481, %2482, !dbg !3994
  %2484 = trunc i64 %2483 to i32, !dbg !3994
  %2485 = load i32* %n, align 4, !dbg !3996
  %2486 = sext i32 %2485 to i64, !dbg !3997
  %2487 = load i32** @PL_regendp, align 8, !dbg !3997
  %2488 = getelementptr inbounds i32* %2487, i64 %2486, !dbg !3997
  store i32 %2484, i32* %2488, align 4, !dbg !3997
  %2489 = load i32* %n, align 4, !dbg !3998
  %2490 = load i32** @PL_reglastparen, align 8, !dbg !4000
  %2491 = load i32* %2490, align 4, !dbg !4001
  %2492 = icmp sgt i32 %2489, %2491, !dbg !3998
  br i1 %2492, label %2493, label %2496, !dbg !4002

; <label>:2493                                    ; preds = %2460
  %2494 = load i32* %n, align 4, !dbg !4003
  %2495 = load i32** @PL_reglastparen, align 8, !dbg !4004
  store i32 %2494, i32* %2495, align 4, !dbg !4005
  br label %2496, !dbg !4005

; <label>:2496                                    ; preds = %2493, %2460
  %2497 = load i32* %n, align 4, !dbg !4006
  %2498 = load i32** @PL_reglastcloseparen, align 8, !dbg !4007
  store i32 %2497, i32* %2498, align 4, !dbg !4008
  br label %6120, !dbg !4009

; <label>:2499                                    ; preds = %24
  %2500 = load %struct.regnode** %scan, align 8, !dbg !4010
  %2501 = bitcast %struct.regnode* %2500 to %struct.regnode_1*, !dbg !4010
  %2502 = getelementptr inbounds %struct.regnode_1* %2501, i32 0, i32 3, !dbg !4010
  %2503 = load i32* %2502, align 4, !dbg !4010
  store i32 %2503, i32* %n, align 4, !dbg !4011
  %2504 = load i32** @PL_reglastparen, align 8, !dbg !4012
  %2505 = load i32* %2504, align 4, !dbg !4013
  %2506 = load i32* %n, align 4, !dbg !4014
  %2507 = icmp sge i32 %2505, %2506, !dbg !4015
  br i1 %2507, label %2508, label %2515, !dbg !4015

; <label>:2508                                    ; preds = %2499
  %2509 = load i32* %n, align 4, !dbg !4016
  %2510 = sext i32 %2509 to i64, !dbg !4018
  %2511 = load i32** @PL_regendp, align 8, !dbg !4018
  %2512 = getelementptr inbounds i32* %2511, i64 %2510, !dbg !4018
  %2513 = load i32* %2512, align 4, !dbg !4018
  %2514 = icmp ne i32 %2513, -1, !dbg !4018
  br label %2515

; <label>:2515                                    ; preds = %2508, %2499
  %2516 = phi i1 [ false, %2499 ], [ %2514, %2508 ]
  %2517 = zext i1 %2516 to i32, !dbg !4019
  store i32 %2517, i32* %sw, align 4, !dbg !4021
  br label %6120, !dbg !4022

; <label>:2518                                    ; preds = %24
  %2519 = load i32* @PL_reg_maxiter, align 4, !dbg !4023
  store i32 %2519, i32* @PL_reg_leftiter, align 4, !dbg !4024
  %2520 = load i32* %sw, align 4, !dbg !4025
  %2521 = icmp ne i32 %2520, 0, !dbg !4027
  br i1 %2521, label %2522, label %2526, !dbg !4027

; <label>:2522                                    ; preds = %2518
  %2523 = load %struct.regnode** %scan, align 8, !dbg !4028
  %2524 = getelementptr inbounds %struct.regnode* %2523, i64 1, !dbg !4028
  %2525 = getelementptr inbounds %struct.regnode* %2524, i64 1, !dbg !4028
  store %struct.regnode* %2525, %struct.regnode** %next, align 8, !dbg !4029
  br label %2544, !dbg !4029

; <label>:2526                                    ; preds = %2518
  %2527 = load %struct.regnode** %scan, align 8, !dbg !4030
  %2528 = load %struct.regnode** %scan, align 8, !dbg !4032
  %2529 = bitcast %struct.regnode* %2528 to %struct.regnode_1*, !dbg !4032
  %2530 = getelementptr inbounds %struct.regnode_1* %2529, i32 0, i32 3, !dbg !4032
  %2531 = load i32* %2530, align 4, !dbg !4032
  %2532 = zext i32 %2531 to i64, !dbg !4030
  %2533 = getelementptr inbounds %struct.regnode* %2527, i64 %2532, !dbg !4030
  store %struct.regnode* %2533, %struct.regnode** %next, align 8, !dbg !4033
  %2534 = load %struct.regnode** %next, align 8, !dbg !4034
  %2535 = getelementptr inbounds %struct.regnode* %2534, i32 0, i32 1, !dbg !4034
  %2536 = load i8* %2535, align 1, !dbg !4034
  %2537 = zext i8 %2536 to i32, !dbg !4034
  %2538 = icmp eq i32 %2537, 53, !dbg !4034
  br i1 %2538, label %2539, label %2543, !dbg !4036

; <label>:2539                                    ; preds = %2526
  %2540 = load %struct.regnode** %next, align 8, !dbg !4037
  %2541 = getelementptr inbounds %struct.regnode* %2540, i64 1, !dbg !4037
  %2542 = getelementptr inbounds %struct.regnode* %2541, i64 1, !dbg !4037
  store %struct.regnode* %2542, %struct.regnode** %next, align 8, !dbg !4038
  br label %2543, !dbg !4038

; <label>:2543                                    ; preds = %2539, %2526
  br label %2544

; <label>:2544                                    ; preds = %2543, %2522
  br label %6120, !dbg !4039

; <label>:2545                                    ; preds = %24
  %2546 = load %struct.regnode** %scan, align 8, !dbg !4040
  %2547 = getelementptr inbounds %struct.regnode* %2546, i32 0, i32 0, !dbg !4040
  %2548 = load i8* %2547, align 1, !dbg !4040
  %2549 = zext i8 %2548 to i32, !dbg !4040
  store i32 %2549, i32* %logical, align 4, !dbg !4041
  br label %6120, !dbg !4042

; <label>:2550                                    ; preds = %24
  call void @llvm.dbg.declare(metadata %struct.curcur* %cc, metadata !4043, metadata !566), !dbg !4045
  call void @llvm.dbg.declare(metadata i32* %cp5, metadata !4046, metadata !566), !dbg !4047
  %2551 = load i32* @PL_savestack_ix, align 4, !dbg !4048
  store i32 %2551, i32* %cp5, align 4, !dbg !4047
  call void @llvm.dbg.declare(metadata i32* %parenfloor, metadata !4049, metadata !566), !dbg !4050
  %2552 = load %struct.regnode** %scan, align 8, !dbg !4051
  %2553 = getelementptr inbounds %struct.regnode* %2552, i32 0, i32 0, !dbg !4051
  %2554 = load i8* %2553, align 1, !dbg !4051
  %2555 = zext i8 %2554 to i32, !dbg !4051
  store i32 %2555, i32* %parenfloor, align 4, !dbg !4050
  %2556 = load %struct.regnode** %next, align 8, !dbg !4052
  %2557 = getelementptr inbounds %struct.regnode* %2556, i64 -1, !dbg !4052
  %2558 = getelementptr inbounds %struct.regnode* %2557, i32 0, i32 1, !dbg !4052
  %2559 = load i8* %2558, align 1, !dbg !4052
  %2560 = zext i8 %2559 to i32, !dbg !4052
  %2561 = icmp eq i32 %2560, 36, !dbg !4052
  br i1 %2561, label %2562, label %2570, !dbg !4054

; <label>:2562                                    ; preds = %2550
  %2563 = load %struct.regnode** %next, align 8, !dbg !4055
  %2564 = bitcast %struct.regnode* %2563 to %struct.regnode_1*, !dbg !4055
  %2565 = getelementptr inbounds %struct.regnode_1* %2564, i32 0, i32 3, !dbg !4055
  %2566 = load i32* %2565, align 4, !dbg !4055
  %2567 = load %struct.regnode** %next, align 8, !dbg !4056
  %2568 = zext i32 %2566 to i64, !dbg !4056
  %2569 = getelementptr inbounds %struct.regnode* %2567, i64 %2568, !dbg !4056
  store %struct.regnode* %2569, %struct.regnode** %next, align 8, !dbg !4056
  br label %2570, !dbg !4056

; <label>:2570                                    ; preds = %2562, %2550
  %2571 = load %struct.curcur** @PL_regcc, align 8, !dbg !4057
  %2572 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 8, !dbg !4058
  store %struct.curcur* %2571, %struct.curcur** %2572, align 8, !dbg !4058
  store %struct.curcur* %cc, %struct.curcur** @PL_regcc, align 8, !dbg !4059
  %2573 = load i32* %parenfloor, align 4, !dbg !4060
  %2574 = load i32** @PL_reglastparen, align 8, !dbg !4062
  %2575 = load i32* %2574, align 4, !dbg !4063
  %2576 = icmp sgt i32 %2573, %2575, !dbg !4060
  br i1 %2576, label %2577, label %2580, !dbg !4064

; <label>:2577                                    ; preds = %2570
  %2578 = load i32** @PL_reglastparen, align 8, !dbg !4065
  %2579 = load i32* %2578, align 4, !dbg !4066
  store i32 %2579, i32* %parenfloor, align 4, !dbg !4067
  br label %2580, !dbg !4067

; <label>:2580                                    ; preds = %2577, %2570
  %2581 = load i32* %parenfloor, align 4, !dbg !4068
  %2582 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 0, !dbg !4069
  store i32 %2581, i32* %2582, align 4, !dbg !4069
  %2583 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 1, !dbg !4070
  store i32 -1, i32* %2583, align 4, !dbg !4070
  %2584 = load %struct.regnode** %scan, align 8, !dbg !4071
  %2585 = bitcast %struct.regnode* %2584 to %struct.regnode_2*, !dbg !4071
  %2586 = getelementptr inbounds %struct.regnode_2* %2585, i32 0, i32 3, !dbg !4071
  %2587 = load i16* %2586, align 2, !dbg !4071
  %2588 = zext i16 %2587 to i32, !dbg !4071
  %2589 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 2, !dbg !4072
  store i32 %2588, i32* %2589, align 4, !dbg !4072
  %2590 = load %struct.regnode** %scan, align 8, !dbg !4073
  %2591 = bitcast %struct.regnode* %2590 to %struct.regnode_2*, !dbg !4073
  %2592 = getelementptr inbounds %struct.regnode_2* %2591, i32 0, i32 4, !dbg !4073
  %2593 = load i16* %2592, align 2, !dbg !4073
  %2594 = zext i16 %2593 to i32, !dbg !4073
  %2595 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 3, !dbg !4074
  store i32 %2594, i32* %2595, align 4, !dbg !4074
  %2596 = load %struct.regnode** %scan, align 8, !dbg !4075
  %2597 = getelementptr inbounds %struct.regnode* %2596, i64 1, !dbg !4075
  %2598 = getelementptr inbounds %struct.regnode* %2597, i64 1, !dbg !4075
  %2599 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 5, !dbg !4076
  store %struct.regnode* %2598, %struct.regnode** %2599, align 8, !dbg !4076
  %2600 = load %struct.regnode** %next, align 8, !dbg !4077
  %2601 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 6, !dbg !4078
  store %struct.regnode* %2600, %struct.regnode** %2601, align 8, !dbg !4078
  %2602 = load i32* %minmod, align 4, !dbg !4079
  %2603 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 4, !dbg !4080
  store i32 %2602, i32* %2603, align 4, !dbg !4080
  %2604 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 7, !dbg !4081
  store i8* null, i8** %2604, align 8, !dbg !4081
  %2605 = load i8** %locinput, align 8, !dbg !4082
  store i8* %2605, i8** @PL_reginput, align 8, !dbg !4083
  %2606 = load %struct.regnode** %next, align 8, !dbg !4084
  %2607 = getelementptr inbounds %struct.regnode* %2606, i64 -1, !dbg !4084
  %2608 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2607), !dbg !4085
  store i32 %2608, i32* %n, align 4, !dbg !4086
  %2609 = load i32* @PL_savestack_ix, align 4, !dbg !4087
  %2610 = load i32* %cp5, align 4, !dbg !4087
  %2611 = icmp sgt i32 %2609, %2610, !dbg !4087
  br i1 %2611, label %2612, label %2614, !dbg !4089

; <label>:2612                                    ; preds = %2580
  %2613 = load i32* %cp5, align 4, !dbg !4090
  call void @Perl_leave_scope(i32 %2613), !dbg !4090
  br label %2614, !dbg !4090

; <label>:2614                                    ; preds = %2612, %2580
  %2615 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 8, !dbg !4092
  %2616 = load %struct.curcur** %2615, align 8, !dbg !4092
  store %struct.curcur* %2616, %struct.curcur** @PL_regcc, align 8, !dbg !4093
  %2617 = load i32* %n, align 4, !dbg !4094
  %2618 = icmp ne i32 %2617, 0, !dbg !4096
  br i1 %2618, label %2619, label %2620, !dbg !4096

; <label>:2619                                    ; preds = %2614
  br label %6126, !dbg !4097

; <label>:2620                                    ; preds = %2614
  br label %6127, !dbg !4099

; <label>:2621                                    ; preds = %24
  call void @llvm.dbg.declare(metadata i32* %cp6, metadata !4101, metadata !566), !dbg !4103
  call void @llvm.dbg.declare(metadata i32* %lastcp7, metadata !4104, metadata !566), !dbg !4105
  call void @llvm.dbg.declare(metadata %struct.curcur** %cc8, metadata !4106, metadata !566), !dbg !4107
  %2622 = load %struct.curcur** @PL_regcc, align 8, !dbg !4108
  store %struct.curcur* %2622, %struct.curcur** %cc8, align 8, !dbg !4107
  call void @llvm.dbg.declare(metadata i8** %lastloc, metadata !4109, metadata !566), !dbg !4110
  %2623 = load %struct.curcur** %cc8, align 8, !dbg !4111
  %2624 = getelementptr inbounds %struct.curcur* %2623, i32 0, i32 7, !dbg !4111
  %2625 = load i8** %2624, align 8, !dbg !4111
  store i8* %2625, i8** %lastloc, align 8, !dbg !4110
  call void @llvm.dbg.declare(metadata i32* %cache_offset, metadata !4112, metadata !566), !dbg !4113
  store i32 0, i32* %cache_offset, align 4, !dbg !4113
  call void @llvm.dbg.declare(metadata i32* %cache_bit, metadata !4114, metadata !566), !dbg !4115
  store i32 0, i32* %cache_bit, align 4, !dbg !4115
  %2626 = load %struct.curcur** %cc8, align 8, !dbg !4116
  %2627 = getelementptr inbounds %struct.curcur* %2626, i32 0, i32 1, !dbg !4116
  %2628 = load i32* %2627, align 4, !dbg !4116
  %2629 = add nsw i32 %2628, 1, !dbg !4116
  store i32 %2629, i32* %n, align 4, !dbg !4117
  %2630 = load i8** %locinput, align 8, !dbg !4118
  store i8* %2630, i8** @PL_reginput, align 8, !dbg !4119
  %2631 = load i8** %locinput, align 8, !dbg !4120
  %2632 = load %struct.curcur** %cc8, align 8, !dbg !4122
  %2633 = getelementptr inbounds %struct.curcur* %2632, i32 0, i32 7, !dbg !4122
  %2634 = load i8** %2633, align 8, !dbg !4122
  %2635 = icmp eq i8* %2631, %2634, !dbg !4120
  br i1 %2635, label %2636, label %2668, !dbg !4123

; <label>:2636                                    ; preds = %2621
  %2637 = load i32* %n, align 4, !dbg !4124
  %2638 = load %struct.curcur** %cc8, align 8, !dbg !4126
  %2639 = getelementptr inbounds %struct.curcur* %2638, i32 0, i32 2, !dbg !4126
  %2640 = load i32* %2639, align 4, !dbg !4126
  %2641 = icmp sge i32 %2637, %2640, !dbg !4127
  br i1 %2641, label %2642, label %2668, !dbg !4123

; <label>:2642                                    ; preds = %2636
  %2643 = load %struct.curcur** %cc8, align 8, !dbg !4128
  %2644 = getelementptr inbounds %struct.curcur* %2643, i32 0, i32 8, !dbg !4128
  %2645 = load %struct.curcur** %2644, align 8, !dbg !4128
  store %struct.curcur* %2645, %struct.curcur** @PL_regcc, align 8, !dbg !4130
  %2646 = load %struct.curcur** @PL_regcc, align 8, !dbg !4131
  %2647 = icmp ne %struct.curcur* %2646, null, !dbg !4133
  br i1 %2647, label %2648, label %2652, !dbg !4133

; <label>:2648                                    ; preds = %2642
  %2649 = load %struct.curcur** @PL_regcc, align 8, !dbg !4134
  %2650 = getelementptr inbounds %struct.curcur* %2649, i32 0, i32 1, !dbg !4134
  %2651 = load i32* %2650, align 4, !dbg !4134
  store i32 %2651, i32* %ln, align 4, !dbg !4135
  br label %2652, !dbg !4135

; <label>:2652                                    ; preds = %2648, %2642
  %2653 = load %struct.curcur** %cc8, align 8, !dbg !4136
  %2654 = getelementptr inbounds %struct.curcur* %2653, i32 0, i32 6, !dbg !4136
  %2655 = load %struct.regnode** %2654, align 8, !dbg !4136
  %2656 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2655), !dbg !4138
  %2657 = icmp ne i32 %2656, 0, !dbg !4139
  br i1 %2657, label %2658, label %2659, !dbg !4139

; <label>:2658                                    ; preds = %2652
  br label %6126, !dbg !4140

; <label>:2659                                    ; preds = %2652
  %2660 = load %struct.curcur** @PL_regcc, align 8, !dbg !4141
  %2661 = icmp ne %struct.curcur* %2660, null, !dbg !4143
  br i1 %2661, label %2662, label %2666, !dbg !4143

; <label>:2662                                    ; preds = %2659
  %2663 = load i32* %ln, align 4, !dbg !4144
  %2664 = load %struct.curcur** @PL_regcc, align 8, !dbg !4145
  %2665 = getelementptr inbounds %struct.curcur* %2664, i32 0, i32 1, !dbg !4145
  store i32 %2663, i32* %2665, align 4, !dbg !4145
  br label %2666, !dbg !4145

; <label>:2666                                    ; preds = %2662, %2659
  %2667 = load %struct.curcur** %cc8, align 8, !dbg !4146
  store %struct.curcur* %2667, %struct.curcur** @PL_regcc, align 8, !dbg !4147
  br label %6127, !dbg !4148

; <label>:2668                                    ; preds = %2636, %2621
  %2669 = load i32* %n, align 4, !dbg !4149
  %2670 = load %struct.curcur** %cc8, align 8, !dbg !4151
  %2671 = getelementptr inbounds %struct.curcur* %2670, i32 0, i32 2, !dbg !4151
  %2672 = load i32* %2671, align 4, !dbg !4151
  %2673 = icmp slt i32 %2669, %2672, !dbg !4149
  br i1 %2673, label %2674, label %2695, !dbg !4152

; <label>:2674                                    ; preds = %2668
  %2675 = load i32* %n, align 4, !dbg !4153
  %2676 = load %struct.curcur** %cc8, align 8, !dbg !4155
  %2677 = getelementptr inbounds %struct.curcur* %2676, i32 0, i32 1, !dbg !4155
  store i32 %2675, i32* %2677, align 4, !dbg !4155
  %2678 = load i8** %locinput, align 8, !dbg !4156
  %2679 = load %struct.curcur** %cc8, align 8, !dbg !4157
  %2680 = getelementptr inbounds %struct.curcur* %2679, i32 0, i32 7, !dbg !4157
  store i8* %2678, i8** %2680, align 8, !dbg !4157
  %2681 = load %struct.curcur** %cc8, align 8, !dbg !4158
  %2682 = getelementptr inbounds %struct.curcur* %2681, i32 0, i32 5, !dbg !4158
  %2683 = load %struct.regnode** %2682, align 8, !dbg !4158
  %2684 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2683), !dbg !4160
  %2685 = icmp ne i32 %2684, 0, !dbg !4161
  br i1 %2685, label %2686, label %2687, !dbg !4161

; <label>:2686                                    ; preds = %2674
  br label %6126, !dbg !4162

; <label>:2687                                    ; preds = %2674
  %2688 = load i32* %n, align 4, !dbg !4163
  %2689 = sub nsw i32 %2688, 1, !dbg !4163
  %2690 = load %struct.curcur** %cc8, align 8, !dbg !4164
  %2691 = getelementptr inbounds %struct.curcur* %2690, i32 0, i32 1, !dbg !4164
  store i32 %2689, i32* %2691, align 4, !dbg !4164
  %2692 = load i8** %lastloc, align 8, !dbg !4165
  %2693 = load %struct.curcur** %cc8, align 8, !dbg !4166
  %2694 = getelementptr inbounds %struct.curcur* %2693, i32 0, i32 7, !dbg !4166
  store i8* %2692, i8** %2694, align 8, !dbg !4166
  br label %6127, !dbg !4167

; <label>:2695                                    ; preds = %2668
  %2696 = load %struct.regnode** %scan, align 8, !dbg !4168
  %2697 = getelementptr inbounds %struct.regnode* %2696, i32 0, i32 0, !dbg !4168
  %2698 = load i8* %2697, align 1, !dbg !4168
  %2699 = icmp ne i8 %2698, 0, !dbg !4170
  br i1 %2699, label %2700, label %2820, !dbg !4170

; <label>:2700                                    ; preds = %2695
  %2701 = load i32* @PL_reg_maxiter, align 4, !dbg !4171
  %2702 = icmp ne i32 %2701, 0, !dbg !4174
  br i1 %2702, label %2719, label %2703, !dbg !4174

; <label>:2703                                    ; preds = %2700
  %2704 = load i8** @PL_regeol, align 8, !dbg !4175
  %2705 = load i8** @PL_bostr, align 8, !dbg !4177
  %2706 = ptrtoint i8* %2704 to i64, !dbg !4175
  %2707 = ptrtoint i8* %2705 to i64, !dbg !4175
  %2708 = sub i64 %2706, %2707, !dbg !4175
  %2709 = add nsw i64 %2708, 1, !dbg !4175
  %2710 = load %struct.regnode** %scan, align 8, !dbg !4178
  %2711 = getelementptr inbounds %struct.regnode* %2710, i32 0, i32 0, !dbg !4178
  %2712 = load i8* %2711, align 1, !dbg !4178
  %2713 = zext i8 %2712 to i32, !dbg !4178
  %2714 = ashr i32 %2713, 4, !dbg !4178
  %2715 = sext i32 %2714 to i64, !dbg !4179
  %2716 = mul nsw i64 %2709, %2715, !dbg !4180
  %2717 = trunc i64 %2716 to i32, !dbg !4180
  store i32 %2717, i32* @PL_reg_maxiter, align 4, !dbg !4181
  %2718 = load i32* @PL_reg_maxiter, align 4, !dbg !4182
  store i32 %2718, i32* @PL_reg_leftiter, align 4, !dbg !4183
  br label %2719, !dbg !4184

; <label>:2719                                    ; preds = %2703, %2700
  %2720 = load i32* @PL_reg_leftiter, align 4, !dbg !4185
  %2721 = add nsw i32 %2720, -1, !dbg !4185
  store i32 %2721, i32* @PL_reg_leftiter, align 4, !dbg !4185
  %2722 = icmp eq i32 %2720, 0, !dbg !4185
  br i1 %2722, label %2723, label %2760, !dbg !4187

; <label>:2723                                    ; preds = %2719
  call void @llvm.dbg.declare(metadata i32* %size, metadata !4188, metadata !566), !dbg !4190
  %2724 = load i32* @PL_reg_maxiter, align 4, !dbg !4191
  %2725 = add nsw i32 %2724, 7, !dbg !4191
  %2726 = add nsw i32 %2725, 2, !dbg !4191
  %2727 = sdiv i32 %2726, 8, !dbg !4192
  store i32 %2727, i32* %size, align 4, !dbg !4190
  %2728 = load i8** @PL_reg_poscache, align 8, !dbg !4193
  %2729 = icmp ne i8* %2728, null, !dbg !4195
  br i1 %2729, label %2730, label %2748, !dbg !4195

; <label>:2730                                    ; preds = %2723
  %2731 = load i64* @PL_reg_poscache_size, align 8, !dbg !4196
  %2732 = trunc i64 %2731 to i32, !dbg !4199
  %2733 = load i32* %size, align 4, !dbg !4200
  %2734 = icmp slt i32 %2732, %2733, !dbg !4199
  br i1 %2734, label %2735, label %2743, !dbg !4201

; <label>:2735                                    ; preds = %2730
  %2736 = load i8** @PL_reg_poscache, align 8, !dbg !4202
  %2737 = load i32* %size, align 4, !dbg !4202
  %2738 = sext i32 %2737 to i64, !dbg !4202
  %2739 = mul i64 %2738, 1, !dbg !4202
  %2740 = call i8* @Perl_safesysrealloc(i8* %2736, i64 %2739), !dbg !4202
  store i8* %2740, i8** @PL_reg_poscache, align 8, !dbg !4202
  %2741 = load i32* %size, align 4, !dbg !4204
  %2742 = sext i32 %2741 to i64, !dbg !4204
  store i64 %2742, i64* @PL_reg_poscache_size, align 8, !dbg !4205
  br label %2743, !dbg !4206

; <label>:2743                                    ; preds = %2735, %2730
  %2744 = load i8** @PL_reg_poscache, align 8, !dbg !4207
  %2745 = load i32* %size, align 4, !dbg !4207
  %2746 = sext i32 %2745 to i64, !dbg !4207
  %2747 = mul i64 %2746, 1, !dbg !4207
  call void @llvm.memset.p0i8.i64(i8* %2744, i8 0, i64 %2747, i32 1, i1 false), !dbg !4207
  br label %2759, !dbg !4208

; <label>:2748                                    ; preds = %2723
  %2749 = load i32* %size, align 4, !dbg !4209
  %2750 = sext i32 %2749 to i64, !dbg !4209
  store i64 %2750, i64* @PL_reg_poscache_size, align 8, !dbg !4211
  %2751 = load i32* %size, align 4, !dbg !4212
  %2752 = sext i32 %2751 to i64, !dbg !4212
  %2753 = mul i64 %2752, 1, !dbg !4212
  %2754 = call i8* @Perl_safesysmalloc(i64 %2753), !dbg !4212
  store i8* %2754, i8** @PL_reg_poscache, align 8, !dbg !4212
  %2755 = load i8** @PL_reg_poscache, align 8, !dbg !4212
  %2756 = load i32* %size, align 4, !dbg !4212
  %2757 = sext i32 %2756 to i64, !dbg !4212
  %2758 = mul i64 %2757, 1, !dbg !4212
  call void @llvm.memset.p0i8.i64(i8* %2755, i8 0, i64 %2758, i32 1, i1 false), !dbg !4212
  br label %2759

; <label>:2759                                    ; preds = %2748, %2743
  br label %2760, !dbg !4213

; <label>:2760                                    ; preds = %2759, %2719
  %2761 = load i32* @PL_reg_leftiter, align 4, !dbg !4214
  %2762 = icmp slt i32 %2761, 0, !dbg !4214
  br i1 %2762, label %2763, label %2819, !dbg !4216

; <label>:2763                                    ; preds = %2760
  %2764 = load i8** %locinput, align 8, !dbg !4217
  %2765 = load i8** @PL_bostr, align 8, !dbg !4219
  %2766 = ptrtoint i8* %2764 to i64, !dbg !4217
  %2767 = ptrtoint i8* %2765 to i64, !dbg !4217
  %2768 = sub i64 %2766, %2767, !dbg !4217
  %2769 = trunc i64 %2768 to i32, !dbg !4217
  store i32 %2769, i32* %cache_offset, align 4, !dbg !4220
  %2770 = load %struct.regnode** %scan, align 8, !dbg !4221
  %2771 = getelementptr inbounds %struct.regnode* %2770, i32 0, i32 0, !dbg !4221
  %2772 = load i8* %2771, align 1, !dbg !4221
  %2773 = zext i8 %2772 to i32, !dbg !4221
  %2774 = and i32 %2773, 15, !dbg !4221
  %2775 = sub nsw i32 %2774, 1, !dbg !4222
  %2776 = add nsw i32 %2775, 2, !dbg !4222
  %2777 = load i32* %cache_offset, align 4, !dbg !4223
  %2778 = load %struct.regnode** %scan, align 8, !dbg !4224
  %2779 = getelementptr inbounds %struct.regnode* %2778, i32 0, i32 0, !dbg !4224
  %2780 = load i8* %2779, align 1, !dbg !4224
  %2781 = zext i8 %2780 to i32, !dbg !4224
  %2782 = ashr i32 %2781, 4, !dbg !4224
  %2783 = mul nsw i32 %2777, %2782, !dbg !4223
  %2784 = add nsw i32 %2776, %2783, !dbg !4222
  store i32 %2784, i32* %cache_offset, align 4, !dbg !4225
  %2785 = load i32* %cache_offset, align 4, !dbg !4226
  %2786 = srem i32 %2785, 8, !dbg !4226
  store i32 %2786, i32* %cache_bit, align 4, !dbg !4227
  %2787 = load i32* %cache_offset, align 4, !dbg !4228
  %2788 = sdiv i32 %2787, 8, !dbg !4228
  store i32 %2788, i32* %cache_offset, align 4, !dbg !4228
  %2789 = load i32* %cache_offset, align 4, !dbg !4229
  %2790 = sext i32 %2789 to i64, !dbg !4231
  %2791 = load i8** @PL_reg_poscache, align 8, !dbg !4231
  %2792 = getelementptr inbounds i8* %2791, i64 %2790, !dbg !4231
  %2793 = load i8* %2792, align 1, !dbg !4231
  %2794 = sext i8 %2793 to i32, !dbg !4231
  %2795 = load i32* %cache_bit, align 4, !dbg !4232
  %2796 = shl i32 1, %2795, !dbg !4233
  %2797 = and i32 %2794, %2796, !dbg !4231
  %2798 = icmp ne i32 %2797, 0, !dbg !4234
  br i1 %2798, label %2799, label %2808, !dbg !4234

; <label>:2799                                    ; preds = %2763
  %2800 = load i8** @PL_reg_poscache, align 8, !dbg !4235
  %2801 = getelementptr inbounds i8* %2800, i64 0, !dbg !4235
  %2802 = load i8* %2801, align 1, !dbg !4235
  %2803 = sext i8 %2802 to i32, !dbg !4235
  %2804 = and i32 %2803, 1, !dbg !4235
  %2805 = icmp ne i32 %2804, 0, !dbg !4238
  br i1 %2805, label %2806, label %2807, !dbg !4238

; <label>:2806                                    ; preds = %2799
  br label %6126, !dbg !4239

; <label>:2807                                    ; preds = %2799
  br label %6129, !dbg !4240

; <label>:2808                                    ; preds = %2763
  %2809 = load i32* %cache_bit, align 4, !dbg !4241
  %2810 = shl i32 1, %2809, !dbg !4242
  %2811 = load i32* %cache_offset, align 4, !dbg !4243
  %2812 = sext i32 %2811 to i64, !dbg !4244
  %2813 = load i8** @PL_reg_poscache, align 8, !dbg !4244
  %2814 = getelementptr inbounds i8* %2813, i64 %2812, !dbg !4244
  %2815 = load i8* %2814, align 1, !dbg !4244
  %2816 = sext i8 %2815 to i32, !dbg !4244
  %2817 = or i32 %2816, %2810, !dbg !4244
  %2818 = trunc i32 %2817 to i8, !dbg !4244
  store i8 %2818, i8* %2814, align 1, !dbg !4244
  br label %2819, !dbg !4245

; <label>:2819                                    ; preds = %2808, %2760
  br label %2820, !dbg !4246

; <label>:2820                                    ; preds = %2819, %2695
  %2821 = load %struct.curcur** %cc8, align 8, !dbg !4247
  %2822 = getelementptr inbounds %struct.curcur* %2821, i32 0, i32 4, !dbg !4247
  %2823 = load i32* %2822, align 4, !dbg !4247
  %2824 = icmp ne i32 %2823, 0, !dbg !4249
  br i1 %2824, label %2825, label %3124, !dbg !4249

; <label>:2825                                    ; preds = %2820
  %2826 = load %struct.curcur** %cc8, align 8, !dbg !4250
  %2827 = getelementptr inbounds %struct.curcur* %2826, i32 0, i32 8, !dbg !4250
  %2828 = load %struct.curcur** %2827, align 8, !dbg !4250
  store %struct.curcur* %2828, %struct.curcur** @PL_regcc, align 8, !dbg !4252
  %2829 = load %struct.curcur** @PL_regcc, align 8, !dbg !4253
  %2830 = icmp ne %struct.curcur* %2829, null, !dbg !4255
  br i1 %2830, label %2831, label %2835, !dbg !4255

; <label>:2831                                    ; preds = %2825
  %2832 = load %struct.curcur** @PL_regcc, align 8, !dbg !4256
  %2833 = getelementptr inbounds %struct.curcur* %2832, i32 0, i32 1, !dbg !4256
  %2834 = load i32* %2833, align 4, !dbg !4256
  store i32 %2834, i32* %ln, align 4, !dbg !4257
  br label %2835, !dbg !4257

; <label>:2835                                    ; preds = %2831, %2825
  %2836 = load %struct.curcur** %cc8, align 8, !dbg !4258
  %2837 = getelementptr inbounds %struct.curcur* %2836, i32 0, i32 0, !dbg !4258
  %2838 = load i32* %2837, align 4, !dbg !4258
  %2839 = call i32 (i32, ...)* bitcast (i32 (...)* @regcppush to i32 (i32, ...)*)(i32 %2838), !dbg !4259
  store i32 %2839, i32* %cp6, align 4, !dbg !4260
  %2840 = load i32* @PL_savestack_ix, align 4, !dbg !4261
  store i32 %2840, i32* %lastcp7, align 4, !dbg !4261
  %2841 = load %struct.curcur** %cc8, align 8, !dbg !4262
  %2842 = getelementptr inbounds %struct.curcur* %2841, i32 0, i32 6, !dbg !4262
  %2843 = load %struct.regnode** %2842, align 8, !dbg !4262
  %2844 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2843), !dbg !4264
  %2845 = icmp ne i32 %2844, 0, !dbg !4265
  br i1 %2845, label %2846, label %2893, !dbg !4265

; <label>:2846                                    ; preds = %2835
  %2847 = load i32* @PL_savestack_ix, align 4, !dbg !4266
  %2848 = load i32* %cp6, align 4, !dbg !4266
  %2849 = icmp sgt i32 %2847, %2848, !dbg !4266
  br i1 %2849, label %2850, label %2852, !dbg !4269

; <label>:2850                                    ; preds = %2846
  %2851 = load i32* %cp6, align 4, !dbg !4270
  call void @Perl_leave_scope(i32 %2851), !dbg !4270
  br label %2852, !dbg !4270

; <label>:2852                                    ; preds = %2850, %2846
  %2853 = load i32* %cache_offset, align 4, !dbg !4272
  %2854 = load i32* %cache_bit, align 4, !dbg !4272
  %2855 = or i32 %2853, %2854, !dbg !4272
  %2856 = icmp ne i32 %2855, 0, !dbg !4275
  br i1 %2856, label %2857, label %2892, !dbg !4275

; <label>:2857                                    ; preds = %2852
  %2858 = load i8** @PL_reg_poscache, align 8, !dbg !4276
  %2859 = getelementptr inbounds i8* %2858, i64 0, !dbg !4276
  %2860 = load i8* %2859, align 1, !dbg !4276
  %2861 = sext i8 %2860 to i32, !dbg !4276
  %2862 = and i32 %2861, 2, !dbg !4276
  %2863 = icmp ne i32 %2862, 0, !dbg !4280
  br i1 %2863, label %2871, label %2864, !dbg !4280

; <label>:2864                                    ; preds = %2857
  %2865 = load i8** @PL_reg_poscache, align 8, !dbg !4281
  %2866 = getelementptr inbounds i8* %2865, i64 0, !dbg !4281
  %2867 = load i8* %2866, align 1, !dbg !4281
  %2868 = sext i8 %2867 to i32, !dbg !4281
  %2869 = or i32 %2868, 1, !dbg !4281
  %2870 = trunc i32 %2869 to i8, !dbg !4281
  store i8 %2870, i8* %2866, align 1, !dbg !4281
  br label %2891, !dbg !4281

; <label>:2871                                    ; preds = %2857
  %2872 = load i8** @PL_reg_poscache, align 8, !dbg !4283
  %2873 = getelementptr inbounds i8* %2872, i64 0, !dbg !4283
  %2874 = load i8* %2873, align 1, !dbg !4283
  %2875 = sext i8 %2874 to i32, !dbg !4283
  %2876 = and i32 %2875, 1, !dbg !4283
  %2877 = icmp ne i32 %2876, 0, !dbg !4286
  br i1 %2877, label %2890, label %2878, !dbg !4286

; <label>:2878                                    ; preds = %2871
  %2879 = load i32* %cache_bit, align 4, !dbg !4287
  %2880 = shl i32 1, %2879, !dbg !4287
  %2881 = xor i32 %2880, -1, !dbg !4287
  %2882 = load i32* %cache_offset, align 4, !dbg !4287
  %2883 = sext i32 %2882 to i64, !dbg !4287
  %2884 = load i8** @PL_reg_poscache, align 8, !dbg !4287
  %2885 = getelementptr inbounds i8* %2884, i64 %2883, !dbg !4287
  %2886 = load i8* %2885, align 1, !dbg !4287
  %2887 = sext i8 %2886 to i32, !dbg !4287
  %2888 = and i32 %2887, %2881, !dbg !4287
  %2889 = trunc i32 %2888 to i8, !dbg !4287
  store i8 %2889, i8* %2885, align 1, !dbg !4287
  br label %2890, !dbg !4287

; <label>:2890                                    ; preds = %2878, %2871
  br label %2891

; <label>:2891                                    ; preds = %2890, %2864
  br label %2892, !dbg !4290

; <label>:2892                                    ; preds = %2891, %2852
  br label %6126, !dbg !4292

; <label>:2893                                    ; preds = %2835
  %2894 = load i32* @PL_savestack_ix, align 4, !dbg !4295
  %2895 = load i32* %lastcp7, align 4, !dbg !4295
  %2896 = icmp sgt i32 %2894, %2895, !dbg !4295
  br i1 %2896, label %2897, label %2899, !dbg !4297

; <label>:2897                                    ; preds = %2893
  %2898 = load i32* %lastcp7, align 4, !dbg !4298
  call void @Perl_leave_scope(i32 %2898), !dbg !4298
  br label %2899, !dbg !4298

; <label>:2899                                    ; preds = %2897, %2893
  %2900 = call i32 (...)* @regcppop(), !dbg !4300
  %2901 = load %struct.curcur** @PL_regcc, align 8, !dbg !4301
  %2902 = icmp ne %struct.curcur* %2901, null, !dbg !4303
  br i1 %2902, label %2903, label %2907, !dbg !4303

; <label>:2903                                    ; preds = %2899
  %2904 = load i32* %ln, align 4, !dbg !4304
  %2905 = load %struct.curcur** @PL_regcc, align 8, !dbg !4305
  %2906 = getelementptr inbounds %struct.curcur* %2905, i32 0, i32 1, !dbg !4305
  store i32 %2904, i32* %2906, align 4, !dbg !4305
  br label %2907, !dbg !4305

; <label>:2907                                    ; preds = %2903, %2899
  %2908 = load %struct.curcur** %cc8, align 8, !dbg !4306
  store %struct.curcur* %2908, %struct.curcur** @PL_regcc, align 8, !dbg !4307
  %2909 = load i32* %n, align 4, !dbg !4308
  %2910 = load %struct.curcur** %cc8, align 8, !dbg !4310
  %2911 = getelementptr inbounds %struct.curcur* %2910, i32 0, i32 3, !dbg !4310
  %2912 = load i32* %2911, align 4, !dbg !4310
  %2913 = icmp sge i32 %2909, %2912, !dbg !4308
  br i1 %2913, label %2914, label %3004, !dbg !4311

; <label>:2914                                    ; preds = %2907
  %2915 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4312
  %2916 = getelementptr inbounds %struct.cop* %2915, i32 0, i32 14, !dbg !4312
  %2917 = load %struct.sv** %2916, align 8, !dbg !4312
  %2918 = icmp ne %struct.sv* %2917, null, !dbg !4312
  br i1 %2918, label %2919, label %2943, !dbg !4315

; <label>:2919                                    ; preds = %2914
  %2920 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4316
  %2921 = getelementptr inbounds %struct.cop* %2920, i32 0, i32 14, !dbg !4316
  %2922 = load %struct.sv** %2921, align 8, !dbg !4316
  %2923 = icmp ne %struct.sv* %2922, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !4316
  br i1 %2923, label %2924, label %2943, !dbg !4315

; <label>:2924                                    ; preds = %2919
  %2925 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4318
  %2926 = getelementptr inbounds %struct.cop* %2925, i32 0, i32 14, !dbg !4318
  %2927 = load %struct.sv** %2926, align 8, !dbg !4318
  %2928 = icmp eq %struct.sv* %2927, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !4318
  br i1 %2928, label %2953, label %2929, !dbg !4315

; <label>:2929                                    ; preds = %2924
  %2930 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4320
  %2931 = getelementptr inbounds %struct.cop* %2930, i32 0, i32 14, !dbg !4320
  %2932 = load %struct.sv** %2931, align 8, !dbg !4320
  %2933 = getelementptr inbounds %struct.sv* %2932, i32 0, i32 0, !dbg !4320
  %2934 = load i8** %2933, align 8, !dbg !4320
  %2935 = bitcast i8* %2934 to %struct.xpv*, !dbg !4320
  %2936 = getelementptr inbounds %struct.xpv* %2935, i32 0, i32 0, !dbg !4320
  %2937 = load i8** %2936, align 8, !dbg !4320
  %2938 = getelementptr inbounds i8* %2937, i64 5, !dbg !4320
  %2939 = load i8* %2938, align 1, !dbg !4320
  %2940 = sext i8 %2939 to i32, !dbg !4320
  %2941 = and i32 %2940, 1, !dbg !4320
  %2942 = icmp ne i32 %2941, 0, !dbg !4315
  br i1 %2942, label %2953, label %2943, !dbg !4315

; <label>:2943                                    ; preds = %2929, %2919, %2914
  %2944 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4322
  %2945 = getelementptr inbounds %struct.cop* %2944, i32 0, i32 14, !dbg !4322
  %2946 = load %struct.sv** %2945, align 8, !dbg !4322
  %2947 = icmp eq %struct.sv* %2946, null, !dbg !4322
  br i1 %2947, label %2948, label %2963, !dbg !4315

; <label>:2948                                    ; preds = %2943
  %2949 = load i8* @PL_dowarn, align 1, !dbg !4326
  %2950 = zext i8 %2949 to i32, !dbg !4326
  %2951 = and i32 %2950, 1, !dbg !4326
  %2952 = icmp ne i32 %2951, 0, !dbg !4315
  br i1 %2952, label %2953, label %2963, !dbg !4315

; <label>:2953                                    ; preds = %2948, %2929, %2924
  %2954 = load i32* %n, align 4, !dbg !4328
  %2955 = icmp sge i32 %2954, 32767, !dbg !4328
  br i1 %2955, label %2956, label %2963, !dbg !4315

; <label>:2956                                    ; preds = %2953
  %2957 = load i32* @PL_reg_flags, align 4, !dbg !4332
  %2958 = and i32 %2957, 2, !dbg !4332
  %2959 = icmp ne i32 %2958, 0, !dbg !4315
  br i1 %2959, label %2963, label %2960, !dbg !4315

; <label>:2960                                    ; preds = %2956
  %2961 = load i32* @PL_reg_flags, align 4, !dbg !4333
  %2962 = or i32 %2961, 2, !dbg !4333
  store i32 %2962, i32* @PL_reg_flags, align 4, !dbg !4333
  call void (i32, i8*, ...)* @Perl_warner(i32 20, i8* getelementptr inbounds ([23 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8]* @.str7, i32 0, i32 0), i32 32766), !dbg !4335
  br label %2963, !dbg !4336

; <label>:2963                                    ; preds = %2960, %2956, %2953, %2948, %2943
  %2964 = load i32* %cache_offset, align 4, !dbg !4337
  %2965 = load i32* %cache_bit, align 4, !dbg !4337
  %2966 = or i32 %2964, %2965, !dbg !4337
  %2967 = icmp ne i32 %2966, 0, !dbg !4340
  br i1 %2967, label %2968, label %3003, !dbg !4340

; <label>:2968                                    ; preds = %2963
  %2969 = load i8** @PL_reg_poscache, align 8, !dbg !4341
  %2970 = getelementptr inbounds i8* %2969, i64 0, !dbg !4341
  %2971 = load i8* %2970, align 1, !dbg !4341
  %2972 = sext i8 %2971 to i32, !dbg !4341
  %2973 = and i32 %2972, 2, !dbg !4341
  %2974 = icmp ne i32 %2973, 0, !dbg !4345
  br i1 %2974, label %2982, label %2975, !dbg !4345

; <label>:2975                                    ; preds = %2968
  %2976 = load i8** @PL_reg_poscache, align 8, !dbg !4346
  %2977 = getelementptr inbounds i8* %2976, i64 0, !dbg !4346
  %2978 = load i8* %2977, align 1, !dbg !4346
  %2979 = sext i8 %2978 to i32, !dbg !4346
  %2980 = or i32 %2979, 2, !dbg !4346
  %2981 = trunc i32 %2980 to i8, !dbg !4346
  store i8 %2981, i8* %2977, align 1, !dbg !4346
  br label %3002, !dbg !4346

; <label>:2982                                    ; preds = %2968
  %2983 = load i8** @PL_reg_poscache, align 8, !dbg !4348
  %2984 = getelementptr inbounds i8* %2983, i64 0, !dbg !4348
  %2985 = load i8* %2984, align 1, !dbg !4348
  %2986 = sext i8 %2985 to i32, !dbg !4348
  %2987 = and i32 %2986, 1, !dbg !4348
  %2988 = icmp ne i32 %2987, 0, !dbg !4351
  br i1 %2988, label %2989, label %3001, !dbg !4351

; <label>:2989                                    ; preds = %2982
  %2990 = load i32* %cache_bit, align 4, !dbg !4352
  %2991 = shl i32 1, %2990, !dbg !4352
  %2992 = xor i32 %2991, -1, !dbg !4352
  %2993 = load i32* %cache_offset, align 4, !dbg !4352
  %2994 = sext i32 %2993 to i64, !dbg !4352
  %2995 = load i8** @PL_reg_poscache, align 8, !dbg !4352
  %2996 = getelementptr inbounds i8* %2995, i64 %2994, !dbg !4352
  %2997 = load i8* %2996, align 1, !dbg !4352
  %2998 = sext i8 %2997 to i32, !dbg !4352
  %2999 = and i32 %2998, %2992, !dbg !4352
  %3000 = trunc i32 %2999 to i8, !dbg !4352
  store i8 %3000, i8* %2996, align 1, !dbg !4352
  br label %3001, !dbg !4352

; <label>:3001                                    ; preds = %2989, %2982
  br label %3002

; <label>:3002                                    ; preds = %3001, %2975
  br label %3003, !dbg !4355

; <label>:3003                                    ; preds = %3002, %2963
  br label %6127, !dbg !4357

; <label>:3004                                    ; preds = %2907
  %3005 = load i8** %locinput, align 8, !dbg !4360
  store i8* %3005, i8** @PL_reginput, align 8, !dbg !4361
  %3006 = load i32* %n, align 4, !dbg !4362
  %3007 = load %struct.curcur** %cc8, align 8, !dbg !4363
  %3008 = getelementptr inbounds %struct.curcur* %3007, i32 0, i32 1, !dbg !4363
  store i32 %3006, i32* %3008, align 4, !dbg !4363
  %3009 = load i8** %locinput, align 8, !dbg !4364
  %3010 = load %struct.curcur** %cc8, align 8, !dbg !4365
  %3011 = getelementptr inbounds %struct.curcur* %3010, i32 0, i32 7, !dbg !4365
  store i8* %3009, i8** %3011, align 8, !dbg !4365
  %3012 = load %struct.curcur** %cc8, align 8, !dbg !4366
  %3013 = getelementptr inbounds %struct.curcur* %3012, i32 0, i32 0, !dbg !4366
  %3014 = load i32* %3013, align 4, !dbg !4366
  %3015 = call i32 (i32, ...)* bitcast (i32 (...)* @regcppush to i32 (i32, ...)*)(i32 %3014), !dbg !4367
  store i32 %3015, i32* %cp6, align 4, !dbg !4368
  %3016 = load i32* @PL_savestack_ix, align 4, !dbg !4369
  store i32 %3016, i32* %lastcp7, align 4, !dbg !4369
  %3017 = load %struct.curcur** %cc8, align 8, !dbg !4370
  %3018 = getelementptr inbounds %struct.curcur* %3017, i32 0, i32 5, !dbg !4370
  %3019 = load %struct.regnode** %3018, align 8, !dbg !4370
  %3020 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %3019), !dbg !4372
  %3021 = icmp ne i32 %3020, 0, !dbg !4373
  br i1 %3021, label %3022, label %3069, !dbg !4373

; <label>:3022                                    ; preds = %3004
  %3023 = load i32* @PL_savestack_ix, align 4, !dbg !4374
  %3024 = load i32* %cp6, align 4, !dbg !4374
  %3025 = icmp sgt i32 %3023, %3024, !dbg !4374
  br i1 %3025, label %3026, label %3028, !dbg !4377

; <label>:3026                                    ; preds = %3022
  %3027 = load i32* %cp6, align 4, !dbg !4378
  call void @Perl_leave_scope(i32 %3027), !dbg !4378
  br label %3028, !dbg !4378

; <label>:3028                                    ; preds = %3026, %3022
  %3029 = load i32* %cache_offset, align 4, !dbg !4380
  %3030 = load i32* %cache_bit, align 4, !dbg !4380
  %3031 = or i32 %3029, %3030, !dbg !4380
  %3032 = icmp ne i32 %3031, 0, !dbg !4383
  br i1 %3032, label %3033, label %3068, !dbg !4383

; <label>:3033                                    ; preds = %3028
  %3034 = load i8** @PL_reg_poscache, align 8, !dbg !4384
  %3035 = getelementptr inbounds i8* %3034, i64 0, !dbg !4384
  %3036 = load i8* %3035, align 1, !dbg !4384
  %3037 = sext i8 %3036 to i32, !dbg !4384
  %3038 = and i32 %3037, 2, !dbg !4384
  %3039 = icmp ne i32 %3038, 0, !dbg !4388
  br i1 %3039, label %3047, label %3040, !dbg !4388

; <label>:3040                                    ; preds = %3033
  %3041 = load i8** @PL_reg_poscache, align 8, !dbg !4389
  %3042 = getelementptr inbounds i8* %3041, i64 0, !dbg !4389
  %3043 = load i8* %3042, align 1, !dbg !4389
  %3044 = sext i8 %3043 to i32, !dbg !4389
  %3045 = or i32 %3044, 1, !dbg !4389
  %3046 = trunc i32 %3045 to i8, !dbg !4389
  store i8 %3046, i8* %3042, align 1, !dbg !4389
  br label %3067, !dbg !4389

; <label>:3047                                    ; preds = %3033
  %3048 = load i8** @PL_reg_poscache, align 8, !dbg !4391
  %3049 = getelementptr inbounds i8* %3048, i64 0, !dbg !4391
  %3050 = load i8* %3049, align 1, !dbg !4391
  %3051 = sext i8 %3050 to i32, !dbg !4391
  %3052 = and i32 %3051, 1, !dbg !4391
  %3053 = icmp ne i32 %3052, 0, !dbg !4394
  br i1 %3053, label %3066, label %3054, !dbg !4394

; <label>:3054                                    ; preds = %3047
  %3055 = load i32* %cache_bit, align 4, !dbg !4395
  %3056 = shl i32 1, %3055, !dbg !4395
  %3057 = xor i32 %3056, -1, !dbg !4395
  %3058 = load i32* %cache_offset, align 4, !dbg !4395
  %3059 = sext i32 %3058 to i64, !dbg !4395
  %3060 = load i8** @PL_reg_poscache, align 8, !dbg !4395
  %3061 = getelementptr inbounds i8* %3060, i64 %3059, !dbg !4395
  %3062 = load i8* %3061, align 1, !dbg !4395
  %3063 = sext i8 %3062 to i32, !dbg !4395
  %3064 = and i32 %3063, %3057, !dbg !4395
  %3065 = trunc i32 %3064 to i8, !dbg !4395
  store i8 %3065, i8* %3061, align 1, !dbg !4395
  br label %3066, !dbg !4395

; <label>:3066                                    ; preds = %3054, %3047
  br label %3067

; <label>:3067                                    ; preds = %3066, %3040
  br label %3068, !dbg !4398

; <label>:3068                                    ; preds = %3067, %3028
  br label %6126, !dbg !4400

; <label>:3069                                    ; preds = %3004
  %3070 = load i32* @PL_savestack_ix, align 4, !dbg !4403
  %3071 = load i32* %lastcp7, align 4, !dbg !4403
  %3072 = icmp sgt i32 %3070, %3071, !dbg !4403
  br i1 %3072, label %3073, label %3075, !dbg !4405

; <label>:3073                                    ; preds = %3069
  %3074 = load i32* %lastcp7, align 4, !dbg !4406
  call void @Perl_leave_scope(i32 %3074), !dbg !4406
  br label %3075, !dbg !4406

; <label>:3075                                    ; preds = %3073, %3069
  %3076 = call i32 (...)* @regcppop(), !dbg !4408
  %3077 = load i32* %n, align 4, !dbg !4409
  %3078 = sub nsw i32 %3077, 1, !dbg !4409
  %3079 = load %struct.curcur** %cc8, align 8, !dbg !4410
  %3080 = getelementptr inbounds %struct.curcur* %3079, i32 0, i32 1, !dbg !4410
  store i32 %3078, i32* %3080, align 4, !dbg !4410
  %3081 = load i8** %lastloc, align 8, !dbg !4411
  %3082 = load %struct.curcur** %cc8, align 8, !dbg !4412
  %3083 = getelementptr inbounds %struct.curcur* %3082, i32 0, i32 7, !dbg !4412
  store i8* %3081, i8** %3083, align 8, !dbg !4412
  %3084 = load i32* %cache_offset, align 4, !dbg !4413
  %3085 = load i32* %cache_bit, align 4, !dbg !4413
  %3086 = or i32 %3084, %3085, !dbg !4413
  %3087 = icmp ne i32 %3086, 0, !dbg !4416
  br i1 %3087, label %3088, label %3123, !dbg !4416

; <label>:3088                                    ; preds = %3075
  %3089 = load i8** @PL_reg_poscache, align 8, !dbg !4417
  %3090 = getelementptr inbounds i8* %3089, i64 0, !dbg !4417
  %3091 = load i8* %3090, align 1, !dbg !4417
  %3092 = sext i8 %3091 to i32, !dbg !4417
  %3093 = and i32 %3092, 2, !dbg !4417
  %3094 = icmp ne i32 %3093, 0, !dbg !4421
  br i1 %3094, label %3102, label %3095, !dbg !4421

; <label>:3095                                    ; preds = %3088
  %3096 = load i8** @PL_reg_poscache, align 8, !dbg !4422
  %3097 = getelementptr inbounds i8* %3096, i64 0, !dbg !4422
  %3098 = load i8* %3097, align 1, !dbg !4422
  %3099 = sext i8 %3098 to i32, !dbg !4422
  %3100 = or i32 %3099, 2, !dbg !4422
  %3101 = trunc i32 %3100 to i8, !dbg !4422
  store i8 %3101, i8* %3097, align 1, !dbg !4422
  br label %3122, !dbg !4422

; <label>:3102                                    ; preds = %3088
  %3103 = load i8** @PL_reg_poscache, align 8, !dbg !4424
  %3104 = getelementptr inbounds i8* %3103, i64 0, !dbg !4424
  %3105 = load i8* %3104, align 1, !dbg !4424
  %3106 = sext i8 %3105 to i32, !dbg !4424
  %3107 = and i32 %3106, 1, !dbg !4424
  %3108 = icmp ne i32 %3107, 0, !dbg !4427
  br i1 %3108, label %3109, label %3121, !dbg !4427

; <label>:3109                                    ; preds = %3102
  %3110 = load i32* %cache_bit, align 4, !dbg !4428
  %3111 = shl i32 1, %3110, !dbg !4428
  %3112 = xor i32 %3111, -1, !dbg !4428
  %3113 = load i32* %cache_offset, align 4, !dbg !4428
  %3114 = sext i32 %3113 to i64, !dbg !4428
  %3115 = load i8** @PL_reg_poscache, align 8, !dbg !4428
  %3116 = getelementptr inbounds i8* %3115, i64 %3114, !dbg !4428
  %3117 = load i8* %3116, align 1, !dbg !4428
  %3118 = sext i8 %3117 to i32, !dbg !4428
  %3119 = and i32 %3118, %3112, !dbg !4428
  %3120 = trunc i32 %3119 to i8, !dbg !4428
  store i8 %3120, i8* %3116, align 1, !dbg !4428
  br label %3121, !dbg !4428

; <label>:3121                                    ; preds = %3109, %3102
  br label %3122

; <label>:3122                                    ; preds = %3121, %3095
  br label %3123, !dbg !4431

; <label>:3123                                    ; preds = %3122, %3075
  br label %6127, !dbg !4433

; <label>:3124                                    ; preds = %2820
  %3125 = load i32* %n, align 4, !dbg !4436
  %3126 = load %struct.curcur** %cc8, align 8, !dbg !4438
  %3127 = getelementptr inbounds %struct.curcur* %3126, i32 0, i32 3, !dbg !4438
  %3128 = load i32* %3127, align 4, !dbg !4438
  %3129 = icmp slt i32 %3125, %3128, !dbg !4436
  br i1 %3129, label %3130, label %3203, !dbg !4439

; <label>:3130                                    ; preds = %3124
  %3131 = load %struct.curcur** %cc8, align 8, !dbg !4440
  %3132 = getelementptr inbounds %struct.curcur* %3131, i32 0, i32 0, !dbg !4440
  %3133 = load i32* %3132, align 4, !dbg !4440
  %3134 = call i32 (i32, ...)* bitcast (i32 (...)* @regcppush to i32 (i32, ...)*)(i32 %3133), !dbg !4442
  store i32 %3134, i32* %cp6, align 4, !dbg !4443
  %3135 = load i32* %n, align 4, !dbg !4444
  %3136 = load %struct.curcur** %cc8, align 8, !dbg !4445
  %3137 = getelementptr inbounds %struct.curcur* %3136, i32 0, i32 1, !dbg !4445
  store i32 %3135, i32* %3137, align 4, !dbg !4445
  %3138 = load i8** %locinput, align 8, !dbg !4446
  %3139 = load %struct.curcur** %cc8, align 8, !dbg !4447
  %3140 = getelementptr inbounds %struct.curcur* %3139, i32 0, i32 7, !dbg !4447
  store i8* %3138, i8** %3140, align 8, !dbg !4447
  %3141 = load i32* @PL_savestack_ix, align 4, !dbg !4448
  store i32 %3141, i32* %lastcp7, align 4, !dbg !4448
  %3142 = load %struct.curcur** %cc8, align 8, !dbg !4449
  %3143 = getelementptr inbounds %struct.curcur* %3142, i32 0, i32 5, !dbg !4449
  %3144 = load %struct.regnode** %3143, align 8, !dbg !4449
  %3145 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %3144), !dbg !4451
  %3146 = icmp ne i32 %3145, 0, !dbg !4452
  br i1 %3146, label %3147, label %3194, !dbg !4452

; <label>:3147                                    ; preds = %3130
  %3148 = load i32* @PL_savestack_ix, align 4, !dbg !4453
  %3149 = load i32* %cp6, align 4, !dbg !4453
  %3150 = icmp sgt i32 %3148, %3149, !dbg !4453
  br i1 %3150, label %3151, label %3153, !dbg !4456

; <label>:3151                                    ; preds = %3147
  %3152 = load i32* %cp6, align 4, !dbg !4457
  call void @Perl_leave_scope(i32 %3152), !dbg !4457
  br label %3153, !dbg !4457

; <label>:3153                                    ; preds = %3151, %3147
  %3154 = load i32* %cache_offset, align 4, !dbg !4459
  %3155 = load i32* %cache_bit, align 4, !dbg !4459
  %3156 = or i32 %3154, %3155, !dbg !4459
  %3157 = icmp ne i32 %3156, 0, !dbg !4462
  br i1 %3157, label %3158, label %3193, !dbg !4462

; <label>:3158                                    ; preds = %3153
  %3159 = load i8** @PL_reg_poscache, align 8, !dbg !4463
  %3160 = getelementptr inbounds i8* %3159, i64 0, !dbg !4463
  %3161 = load i8* %3160, align 1, !dbg !4463
  %3162 = sext i8 %3161 to i32, !dbg !4463
  %3163 = and i32 %3162, 2, !dbg !4463
  %3164 = icmp ne i32 %3163, 0, !dbg !4467
  br i1 %3164, label %3172, label %3165, !dbg !4467

; <label>:3165                                    ; preds = %3158
  %3166 = load i8** @PL_reg_poscache, align 8, !dbg !4468
  %3167 = getelementptr inbounds i8* %3166, i64 0, !dbg !4468
  %3168 = load i8* %3167, align 1, !dbg !4468
  %3169 = sext i8 %3168 to i32, !dbg !4468
  %3170 = or i32 %3169, 1, !dbg !4468
  %3171 = trunc i32 %3170 to i8, !dbg !4468
  store i8 %3171, i8* %3167, align 1, !dbg !4468
  br label %3192, !dbg !4468

; <label>:3172                                    ; preds = %3158
  %3173 = load i8** @PL_reg_poscache, align 8, !dbg !4470
  %3174 = getelementptr inbounds i8* %3173, i64 0, !dbg !4470
  %3175 = load i8* %3174, align 1, !dbg !4470
  %3176 = sext i8 %3175 to i32, !dbg !4470
  %3177 = and i32 %3176, 1, !dbg !4470
  %3178 = icmp ne i32 %3177, 0, !dbg !4473
  br i1 %3178, label %3191, label %3179, !dbg !4473

; <label>:3179                                    ; preds = %3172
  %3180 = load i32* %cache_bit, align 4, !dbg !4474
  %3181 = shl i32 1, %3180, !dbg !4474
  %3182 = xor i32 %3181, -1, !dbg !4474
  %3183 = load i32* %cache_offset, align 4, !dbg !4474
  %3184 = sext i32 %3183 to i64, !dbg !4474
  %3185 = load i8** @PL_reg_poscache, align 8, !dbg !4474
  %3186 = getelementptr inbounds i8* %3185, i64 %3184, !dbg !4474
  %3187 = load i8* %3186, align 1, !dbg !4474
  %3188 = sext i8 %3187 to i32, !dbg !4474
  %3189 = and i32 %3188, %3182, !dbg !4474
  %3190 = trunc i32 %3189 to i8, !dbg !4474
  store i8 %3190, i8* %3186, align 1, !dbg !4474
  br label %3191, !dbg !4474

; <label>:3191                                    ; preds = %3179, %3172
  br label %3192

; <label>:3192                                    ; preds = %3191, %3165
  br label %3193, !dbg !4477

; <label>:3193                                    ; preds = %3192, %3153
  br label %6126, !dbg !4479

; <label>:3194                                    ; preds = %3130
  %3195 = load i32* @PL_savestack_ix, align 4, !dbg !4482
  %3196 = load i32* %lastcp7, align 4, !dbg !4482
  %3197 = icmp sgt i32 %3195, %3196, !dbg !4482
  br i1 %3197, label %3198, label %3200, !dbg !4484

; <label>:3198                                    ; preds = %3194
  %3199 = load i32* %lastcp7, align 4, !dbg !4485
  call void @Perl_leave_scope(i32 %3199), !dbg !4485
  br label %3200, !dbg !4485

; <label>:3200                                    ; preds = %3198, %3194
  %3201 = call i32 (...)* @regcppop(), !dbg !4487
  %3202 = load i8** %locinput, align 8, !dbg !4488
  store i8* %3202, i8** @PL_reginput, align 8, !dbg !4489
  br label %3203, !dbg !4490

; <label>:3203                                    ; preds = %3200, %3124
  %3204 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4491
  %3205 = getelementptr inbounds %struct.cop* %3204, i32 0, i32 14, !dbg !4491
  %3206 = load %struct.sv** %3205, align 8, !dbg !4491
  %3207 = icmp ne %struct.sv* %3206, null, !dbg !4491
  br i1 %3207, label %3208, label %3232, !dbg !4493

; <label>:3208                                    ; preds = %3203
  %3209 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4494
  %3210 = getelementptr inbounds %struct.cop* %3209, i32 0, i32 14, !dbg !4494
  %3211 = load %struct.sv** %3210, align 8, !dbg !4494
  %3212 = icmp ne %struct.sv* %3211, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !4494
  br i1 %3212, label %3213, label %3232, !dbg !4493

; <label>:3213                                    ; preds = %3208
  %3214 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4496
  %3215 = getelementptr inbounds %struct.cop* %3214, i32 0, i32 14, !dbg !4496
  %3216 = load %struct.sv** %3215, align 8, !dbg !4496
  %3217 = icmp eq %struct.sv* %3216, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !4496
  br i1 %3217, label %3242, label %3218, !dbg !4493

; <label>:3218                                    ; preds = %3213
  %3219 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4498
  %3220 = getelementptr inbounds %struct.cop* %3219, i32 0, i32 14, !dbg !4498
  %3221 = load %struct.sv** %3220, align 8, !dbg !4498
  %3222 = getelementptr inbounds %struct.sv* %3221, i32 0, i32 0, !dbg !4498
  %3223 = load i8** %3222, align 8, !dbg !4498
  %3224 = bitcast i8* %3223 to %struct.xpv*, !dbg !4498
  %3225 = getelementptr inbounds %struct.xpv* %3224, i32 0, i32 0, !dbg !4498
  %3226 = load i8** %3225, align 8, !dbg !4498
  %3227 = getelementptr inbounds i8* %3226, i64 5, !dbg !4498
  %3228 = load i8* %3227, align 1, !dbg !4498
  %3229 = sext i8 %3228 to i32, !dbg !4498
  %3230 = and i32 %3229, 1, !dbg !4498
  %3231 = icmp ne i32 %3230, 0, !dbg !4493
  br i1 %3231, label %3242, label %3232, !dbg !4493

; <label>:3232                                    ; preds = %3218, %3208, %3203
  %3233 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4500
  %3234 = getelementptr inbounds %struct.cop* %3233, i32 0, i32 14, !dbg !4500
  %3235 = load %struct.sv** %3234, align 8, !dbg !4500
  %3236 = icmp eq %struct.sv* %3235, null, !dbg !4500
  br i1 %3236, label %3237, label %3252, !dbg !4493

; <label>:3237                                    ; preds = %3232
  %3238 = load i8* @PL_dowarn, align 1, !dbg !4504
  %3239 = zext i8 %3238 to i32, !dbg !4504
  %3240 = and i32 %3239, 1, !dbg !4504
  %3241 = icmp ne i32 %3240, 0, !dbg !4493
  br i1 %3241, label %3242, label %3252, !dbg !4493

; <label>:3242                                    ; preds = %3237, %3218, %3213
  %3243 = load i32* %n, align 4, !dbg !4506
  %3244 = icmp sge i32 %3243, 32767, !dbg !4506
  br i1 %3244, label %3245, label %3252, !dbg !4493

; <label>:3245                                    ; preds = %3242
  %3246 = load i32* @PL_reg_flags, align 4, !dbg !4510
  %3247 = and i32 %3246, 2, !dbg !4510
  %3248 = icmp ne i32 %3247, 0, !dbg !4493
  br i1 %3248, label %3252, label %3249, !dbg !4493

; <label>:3249                                    ; preds = %3245
  %3250 = load i32* @PL_reg_flags, align 4, !dbg !4511
  %3251 = or i32 %3250, 2, !dbg !4511
  store i32 %3251, i32* @PL_reg_flags, align 4, !dbg !4511
  call void (i32, i8*, ...)* @Perl_warner(i32 20, i8* getelementptr inbounds ([23 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8]* @.str7, i32 0, i32 0), i32 32766), !dbg !4513
  br label %3252, !dbg !4514

; <label>:3252                                    ; preds = %3249, %3245, %3242, %3237, %3232
  %3253 = load %struct.curcur** %cc8, align 8, !dbg !4515
  %3254 = getelementptr inbounds %struct.curcur* %3253, i32 0, i32 8, !dbg !4515
  %3255 = load %struct.curcur** %3254, align 8, !dbg !4515
  store %struct.curcur* %3255, %struct.curcur** @PL_regcc, align 8, !dbg !4516
  %3256 = load %struct.curcur** @PL_regcc, align 8, !dbg !4517
  %3257 = icmp ne %struct.curcur* %3256, null, !dbg !4519
  br i1 %3257, label %3258, label %3262, !dbg !4519

; <label>:3258                                    ; preds = %3252
  %3259 = load %struct.curcur** @PL_regcc, align 8, !dbg !4520
  %3260 = getelementptr inbounds %struct.curcur* %3259, i32 0, i32 1, !dbg !4520
  %3261 = load i32* %3260, align 4, !dbg !4520
  store i32 %3261, i32* %ln, align 4, !dbg !4521
  br label %3262, !dbg !4521

; <label>:3262                                    ; preds = %3258, %3252
  %3263 = load %struct.curcur** %cc8, align 8, !dbg !4522
  %3264 = getelementptr inbounds %struct.curcur* %3263, i32 0, i32 6, !dbg !4522
  %3265 = load %struct.regnode** %3264, align 8, !dbg !4522
  %3266 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %3265), !dbg !4524
  %3267 = icmp ne i32 %3266, 0, !dbg !4525
  br i1 %3267, label %3268, label %3309, !dbg !4525

; <label>:3268                                    ; preds = %3262
  %3269 = load i32* %cache_offset, align 4, !dbg !4526
  %3270 = load i32* %cache_bit, align 4, !dbg !4526
  %3271 = or i32 %3269, %3270, !dbg !4526
  %3272 = icmp ne i32 %3271, 0, !dbg !4529
  br i1 %3272, label %3273, label %3308, !dbg !4529

; <label>:3273                                    ; preds = %3268
  %3274 = load i8** @PL_reg_poscache, align 8, !dbg !4530
  %3275 = getelementptr inbounds i8* %3274, i64 0, !dbg !4530
  %3276 = load i8* %3275, align 1, !dbg !4530
  %3277 = sext i8 %3276 to i32, !dbg !4530
  %3278 = and i32 %3277, 2, !dbg !4530
  %3279 = icmp ne i32 %3278, 0, !dbg !4534
  br i1 %3279, label %3287, label %3280, !dbg !4534

; <label>:3280                                    ; preds = %3273
  %3281 = load i8** @PL_reg_poscache, align 8, !dbg !4535
  %3282 = getelementptr inbounds i8* %3281, i64 0, !dbg !4535
  %3283 = load i8* %3282, align 1, !dbg !4535
  %3284 = sext i8 %3283 to i32, !dbg !4535
  %3285 = or i32 %3284, 1, !dbg !4535
  %3286 = trunc i32 %3285 to i8, !dbg !4535
  store i8 %3286, i8* %3282, align 1, !dbg !4535
  br label %3307, !dbg !4535

; <label>:3287                                    ; preds = %3273
  %3288 = load i8** @PL_reg_poscache, align 8, !dbg !4537
  %3289 = getelementptr inbounds i8* %3288, i64 0, !dbg !4537
  %3290 = load i8* %3289, align 1, !dbg !4537
  %3291 = sext i8 %3290 to i32, !dbg !4537
  %3292 = and i32 %3291, 1, !dbg !4537
  %3293 = icmp ne i32 %3292, 0, !dbg !4540
  br i1 %3293, label %3306, label %3294, !dbg !4540

; <label>:3294                                    ; preds = %3287
  %3295 = load i32* %cache_bit, align 4, !dbg !4541
  %3296 = shl i32 1, %3295, !dbg !4541
  %3297 = xor i32 %3296, -1, !dbg !4541
  %3298 = load i32* %cache_offset, align 4, !dbg !4541
  %3299 = sext i32 %3298 to i64, !dbg !4541
  %3300 = load i8** @PL_reg_poscache, align 8, !dbg !4541
  %3301 = getelementptr inbounds i8* %3300, i64 %3299, !dbg !4541
  %3302 = load i8* %3301, align 1, !dbg !4541
  %3303 = sext i8 %3302 to i32, !dbg !4541
  %3304 = and i32 %3303, %3297, !dbg !4541
  %3305 = trunc i32 %3304 to i8, !dbg !4541
  store i8 %3305, i8* %3301, align 1, !dbg !4541
  br label %3306, !dbg !4541

; <label>:3306                                    ; preds = %3294, %3287
  br label %3307

; <label>:3307                                    ; preds = %3306, %3280
  br label %3308, !dbg !4544

; <label>:3308                                    ; preds = %3307, %3268
  br label %6126, !dbg !4546

; <label>:3309                                    ; preds = %3262
  %3310 = load %struct.curcur** @PL_regcc, align 8, !dbg !4549
  %3311 = icmp ne %struct.curcur* %3310, null, !dbg !4551
  br i1 %3311, label %3312, label %3316, !dbg !4551

; <label>:3312                                    ; preds = %3309
  %3313 = load i32* %ln, align 4, !dbg !4552
  %3314 = load %struct.curcur** @PL_regcc, align 8, !dbg !4553
  %3315 = getelementptr inbounds %struct.curcur* %3314, i32 0, i32 1, !dbg !4553
  store i32 %3313, i32* %3315, align 4, !dbg !4553
  br label %3316, !dbg !4553

; <label>:3316                                    ; preds = %3312, %3309
  %3317 = load %struct.curcur** %cc8, align 8, !dbg !4554
  store %struct.curcur* %3317, %struct.curcur** @PL_regcc, align 8, !dbg !4555
  %3318 = load i32* %n, align 4, !dbg !4556
  %3319 = sub nsw i32 %3318, 1, !dbg !4556
  %3320 = load %struct.curcur** %cc8, align 8, !dbg !4557
  %3321 = getelementptr inbounds %struct.curcur* %3320, i32 0, i32 1, !dbg !4557
  store i32 %3319, i32* %3321, align 4, !dbg !4557
  %3322 = load i8** %lastloc, align 8, !dbg !4558
  %3323 = load %struct.curcur** %cc8, align 8, !dbg !4559
  %3324 = getelementptr inbounds %struct.curcur* %3323, i32 0, i32 7, !dbg !4559
  store i8* %3322, i8** %3324, align 8, !dbg !4559
  %3325 = load i32* %cache_offset, align 4, !dbg !4560
  %3326 = load i32* %cache_bit, align 4, !dbg !4560
  %3327 = or i32 %3325, %3326, !dbg !4560
  %3328 = icmp ne i32 %3327, 0, !dbg !4563
  br i1 %3328, label %3329, label %3364, !dbg !4563

; <label>:3329                                    ; preds = %3316
  %3330 = load i8** @PL_reg_poscache, align 8, !dbg !4564
  %3331 = getelementptr inbounds i8* %3330, i64 0, !dbg !4564
  %3332 = load i8* %3331, align 1, !dbg !4564
  %3333 = sext i8 %3332 to i32, !dbg !4564
  %3334 = and i32 %3333, 2, !dbg !4564
  %3335 = icmp ne i32 %3334, 0, !dbg !4568
  br i1 %3335, label %3343, label %3336, !dbg !4568

; <label>:3336                                    ; preds = %3329
  %3337 = load i8** @PL_reg_poscache, align 8, !dbg !4569
  %3338 = getelementptr inbounds i8* %3337, i64 0, !dbg !4569
  %3339 = load i8* %3338, align 1, !dbg !4569
  %3340 = sext i8 %3339 to i32, !dbg !4569
  %3341 = or i32 %3340, 2, !dbg !4569
  %3342 = trunc i32 %3341 to i8, !dbg !4569
  store i8 %3342, i8* %3338, align 1, !dbg !4569
  br label %3363, !dbg !4569

; <label>:3343                                    ; preds = %3329
  %3344 = load i8** @PL_reg_poscache, align 8, !dbg !4571
  %3345 = getelementptr inbounds i8* %3344, i64 0, !dbg !4571
  %3346 = load i8* %3345, align 1, !dbg !4571
  %3347 = sext i8 %3346 to i32, !dbg !4571
  %3348 = and i32 %3347, 1, !dbg !4571
  %3349 = icmp ne i32 %3348, 0, !dbg !4574
  br i1 %3349, label %3350, label %3362, !dbg !4574

; <label>:3350                                    ; preds = %3343
  %3351 = load i32* %cache_bit, align 4, !dbg !4575
  %3352 = shl i32 1, %3351, !dbg !4575
  %3353 = xor i32 %3352, -1, !dbg !4575
  %3354 = load i32* %cache_offset, align 4, !dbg !4575
  %3355 = sext i32 %3354 to i64, !dbg !4575
  %3356 = load i8** @PL_reg_poscache, align 8, !dbg !4575
  %3357 = getelementptr inbounds i8* %3356, i64 %3355, !dbg !4575
  %3358 = load i8* %3357, align 1, !dbg !4575
  %3359 = sext i8 %3358 to i32, !dbg !4575
  %3360 = and i32 %3359, %3353, !dbg !4575
  %3361 = trunc i32 %3360 to i8, !dbg !4575
  store i8 %3361, i8* %3357, align 1, !dbg !4575
  br label %3362, !dbg !4575

; <label>:3362                                    ; preds = %3350, %3343
  br label %3363

; <label>:3363                                    ; preds = %3362, %3336
  br label %3364, !dbg !4578

; <label>:3364                                    ; preds = %3363, %3316
  br label %6127, !dbg !4580

; <label>:3365                                    ; preds = %24
  %3366 = load %struct.regnode** %scan, align 8, !dbg !4583
  %3367 = load %struct.regnode** %scan, align 8, !dbg !4584
  %3368 = bitcast %struct.regnode* %3367 to %struct.regnode_1*, !dbg !4584
  %3369 = getelementptr inbounds %struct.regnode_1* %3368, i32 0, i32 3, !dbg !4584
  %3370 = load i32* %3369, align 4, !dbg !4584
  %3371 = zext i32 %3370 to i64, !dbg !4583
  %3372 = getelementptr inbounds %struct.regnode* %3366, i64 %3371, !dbg !4583
  store %struct.regnode* %3372, %struct.regnode** %next, align 8, !dbg !4585
  %3373 = load %struct.regnode** %next, align 8, !dbg !4586
  %3374 = load %struct.regnode** %scan, align 8, !dbg !4588
  %3375 = icmp eq %struct.regnode* %3373, %3374, !dbg !4586
  br i1 %3375, label %3376, label %3377, !dbg !4589

; <label>:3376                                    ; preds = %3365
  store %struct.regnode* null, %struct.regnode** %next, align 8, !dbg !4590
  br label %3377, !dbg !4590

; <label>:3377                                    ; preds = %3376, %3365
  %3378 = load %struct.regnode** %scan, align 8, !dbg !4591
  %3379 = getelementptr inbounds %struct.regnode* %3378, i64 1, !dbg !4591
  %3380 = getelementptr inbounds %struct.regnode* %3379, i64 1, !dbg !4591
  store %struct.regnode* %3380, %struct.regnode** %inner, align 8, !dbg !4592
  br label %3384, !dbg !4593

; <label>:3381                                    ; preds = %24
  %3382 = load %struct.regnode** %scan, align 8, !dbg !4594
  %3383 = getelementptr inbounds %struct.regnode* %3382, i64 1, !dbg !4594
  store %struct.regnode* %3383, %struct.regnode** %inner, align 8, !dbg !4595
  br label %3384, !dbg !4595

; <label>:3384                                    ; preds = %3381, %3377
  %3385 = load %struct.regnode** %scan, align 8, !dbg !4596
  %3386 = getelementptr inbounds %struct.regnode* %3385, i32 0, i32 1, !dbg !4596
  %3387 = load i8* %3386, align 1, !dbg !4596
  %3388 = zext i8 %3387 to i32, !dbg !4596
  store i32 %3388, i32* %c1, align 4, !dbg !4598
  %3389 = load %struct.regnode** %next, align 8, !dbg !4599
  %3390 = getelementptr inbounds %struct.regnode* %3389, i32 0, i32 1, !dbg !4599
  %3391 = load i8* %3390, align 1, !dbg !4599
  %3392 = zext i8 %3391 to i32, !dbg !4599
  %3393 = load i32* %c1, align 4, !dbg !4601
  %3394 = icmp ne i32 %3392, %3393, !dbg !4599
  br i1 %3394, label %3395, label %3397, !dbg !4602

; <label>:3395                                    ; preds = %3384
  %3396 = load %struct.regnode** %inner, align 8, !dbg !4603
  store %struct.regnode* %3396, %struct.regnode** %next, align 8, !dbg !4604
  br label %3432, !dbg !4604

; <label>:3397                                    ; preds = %3384
  call void @llvm.dbg.declare(metadata i32* %lastparen, metadata !4605, metadata !566), !dbg !4607
  %3398 = load i32** @PL_reglastparen, align 8, !dbg !4608
  %3399 = load i32* %3398, align 4, !dbg !4609
  store i32 %3399, i32* %lastparen, align 4, !dbg !4607
  call void @llvm.dbg.declare(metadata i32* %unwind1, metadata !4610, metadata !566), !dbg !4611
  call void @llvm.dbg.declare(metadata %struct.re_unwind_branch_t** %uw, metadata !4612, metadata !566), !dbg !4613
  %3400 = call i32 @Perl_save_alloc(i32 40, i32 0), !dbg !4614
  store i32 %3400, i32* %unwind1, align 4, !dbg !4615
  %3401 = load %union.any** @PL_savestack, align 8, !dbg !4616
  %3402 = bitcast %union.any* %3401 to i8*, !dbg !4616
  %3403 = load i32* %unwind1, align 4, !dbg !4616
  %3404 = sext i32 %3403 to i64, !dbg !4616
  %3405 = getelementptr inbounds i8* %3402, i64 %3404, !dbg !4616
  %3406 = bitcast i8* %3405 to %struct.re_unwind_branch_t*, !dbg !4616
  store %struct.re_unwind_branch_t* %3406, %struct.re_unwind_branch_t** %uw, align 8, !dbg !4617
  %3407 = load i32* %unwind, align 4, !dbg !4618
  %3408 = load %struct.re_unwind_branch_t** %uw, align 8, !dbg !4619
  %3409 = getelementptr inbounds %struct.re_unwind_branch_t* %3408, i32 0, i32 1, !dbg !4619
  store i32 %3407, i32* %3409, align 4, !dbg !4619
  %3410 = load i32* %unwind1, align 4, !dbg !4620
  store i32 %3410, i32* %unwind, align 4, !dbg !4621
  %3411 = load i32* %c1, align 4, !dbg !4622
  %3412 = icmp eq i32 %3411, 31, !dbg !4622
  %3413 = select i1 %3412, i32 1, i32 2, !dbg !4623
  %3414 = load %struct.re_unwind_branch_t** %uw, align 8, !dbg !4624
  %3415 = getelementptr inbounds %struct.re_unwind_branch_t* %3414, i32 0, i32 0, !dbg !4624
  store i32 %3413, i32* %3415, align 4, !dbg !4624
  %3416 = load i32* %lastparen, align 4, !dbg !4625
  %3417 = load %struct.re_unwind_branch_t** %uw, align 8, !dbg !4626
  %3418 = getelementptr inbounds %struct.re_unwind_branch_t* %3417, i32 0, i32 3, !dbg !4626
  store i32 %3416, i32* %3418, align 4, !dbg !4626
  %3419 = load %struct.regnode** %next, align 8, !dbg !4627
  %3420 = load %struct.re_unwind_branch_t** %uw, align 8, !dbg !4628
  %3421 = getelementptr inbounds %struct.re_unwind_branch_t* %3420, i32 0, i32 4, !dbg !4628
  store %struct.regnode* %3419, %struct.regnode** %3421, align 8, !dbg !4628
  %3422 = load i8** %locinput, align 8, !dbg !4629
  %3423 = load %struct.re_unwind_branch_t** %uw, align 8, !dbg !4630
  %3424 = getelementptr inbounds %struct.re_unwind_branch_t* %3423, i32 0, i32 5, !dbg !4630
  store i8* %3422, i8** %3424, align 8, !dbg !4630
  %3425 = load i32* %nextchr, align 4, !dbg !4631
  %3426 = load %struct.re_unwind_branch_t** %uw, align 8, !dbg !4632
  %3427 = getelementptr inbounds %struct.re_unwind_branch_t* %3426, i32 0, i32 6, !dbg !4632
  store i32 %3425, i32* %3427, align 4, !dbg !4632
  %3428 = load i32* @PL_savestack_ix, align 4, !dbg !4633
  %3429 = load %struct.re_unwind_branch_t** %uw, align 8, !dbg !4633
  %3430 = getelementptr inbounds %struct.re_unwind_branch_t* %3429, i32 0, i32 2, !dbg !4633
  store i32 %3428, i32* %3430, align 4, !dbg !4633
  %3431 = load %struct.regnode** %inner, align 8, !dbg !4634
  store %struct.regnode* %3431, %struct.regnode** %next, align 8, !dbg !4635
  br label %3432

; <label>:3432                                    ; preds = %3397, %3395
  br label %6120, !dbg !4636

; <label>:3433                                    ; preds = %24
  store i32 1, i32* %minmod, align 4, !dbg !4637
  br label %6120, !dbg !4638

; <label>:3434                                    ; preds = %24
  call void @llvm.dbg.declare(metadata i32* %l9, metadata !4639, metadata !566), !dbg !4641
  store i32 0, i32* %l9, align 4, !dbg !4641
  call void @llvm.dbg.declare(metadata i32* %lastcp10, metadata !4642, metadata !566), !dbg !4643
  %3435 = load %struct.regnode** %scan, align 8, !dbg !4644
  %3436 = bitcast %struct.regnode* %3435 to %struct.regnode_2*, !dbg !4644
  %3437 = getelementptr inbounds %struct.regnode_2* %3436, i32 0, i32 3, !dbg !4644
  %3438 = load i16* %3437, align 2, !dbg !4644
  %3439 = zext i16 %3438 to i32, !dbg !4644
  store i32 %3439, i32* %ln, align 4, !dbg !4645
  %3440 = load %struct.regnode** %scan, align 8, !dbg !4646
  %3441 = bitcast %struct.regnode* %3440 to %struct.regnode_2*, !dbg !4646
  %3442 = getelementptr inbounds %struct.regnode_2* %3441, i32 0, i32 4, !dbg !4646
  %3443 = load i16* %3442, align 2, !dbg !4646
  %3444 = zext i16 %3443 to i32, !dbg !4646
  store i32 %3444, i32* %n, align 4, !dbg !4647
  %3445 = load %struct.regnode** %scan, align 8, !dbg !4648
  %3446 = getelementptr inbounds %struct.regnode* %3445, i32 0, i32 0, !dbg !4648
  %3447 = load i8* %3446, align 1, !dbg !4648
  %3448 = zext i8 %3447 to i32, !dbg !4648
  store i32 %3448, i32* %paren, align 4, !dbg !4649
  %3449 = load i32* %paren, align 4, !dbg !4650
  %3450 = icmp ne i32 %3449, 0, !dbg !4652
  br i1 %3450, label %3451, label %3466, !dbg !4652

; <label>:3451                                    ; preds = %3434
  %3452 = load i32* %paren, align 4, !dbg !4653
  %3453 = load i32* @PL_regsize, align 4, !dbg !4656
  %3454 = icmp sgt i32 %3452, %3453, !dbg !4653
  br i1 %3454, label %3455, label %3457, !dbg !4657

; <label>:3455                                    ; preds = %3451
  %3456 = load i32* %paren, align 4, !dbg !4658
  store i32 %3456, i32* @PL_regsize, align 4, !dbg !4659
  br label %3457, !dbg !4659

; <label>:3457                                    ; preds = %3455, %3451
  %3458 = load i32* %paren, align 4, !dbg !4660
  %3459 = load i32** @PL_reglastparen, align 8, !dbg !4662
  %3460 = load i32* %3459, align 4, !dbg !4663
  %3461 = icmp sgt i32 %3458, %3460, !dbg !4660
  br i1 %3461, label %3462, label %3465, !dbg !4664

; <label>:3462                                    ; preds = %3457
  %3463 = load i32* %paren, align 4, !dbg !4665
  %3464 = load i32** @PL_reglastparen, align 8, !dbg !4666
  store i32 %3463, i32* %3464, align 4, !dbg !4667
  br label %3465, !dbg !4667

; <label>:3465                                    ; preds = %3462, %3457
  br label %3466, !dbg !4668

; <label>:3466                                    ; preds = %3465, %3434
  %3467 = load %struct.regnode** %scan, align 8, !dbg !4669
  %3468 = getelementptr inbounds %struct.regnode* %3467, i64 1, !dbg !4669
  %3469 = getelementptr inbounds %struct.regnode* %3468, i64 1, !dbg !4669
  store %struct.regnode* %3469, %struct.regnode** %scan, align 8, !dbg !4670
  %3470 = load i32* %paren, align 4, !dbg !4671
  %3471 = icmp ne i32 %3470, 0, !dbg !4673
  br i1 %3471, label %3472, label %3480, !dbg !4673

; <label>:3472                                    ; preds = %3466
  %3473 = load %struct.regnode** %scan, align 8, !dbg !4674
  %3474 = getelementptr inbounds %struct.regnode* %3473, i32 0, i32 2, !dbg !4674
  %3475 = load i16* %3474, align 2, !dbg !4674
  %3476 = zext i16 %3475 to i32, !dbg !4674
  %3477 = load %struct.regnode** %scan, align 8, !dbg !4675
  %3478 = sext i32 %3476 to i64, !dbg !4675
  %3479 = getelementptr inbounds %struct.regnode* %3477, i64 %3478, !dbg !4675
  store %struct.regnode* %3479, %struct.regnode** %scan, align 8, !dbg !4675
  br label %3480, !dbg !4675

; <label>:3480                                    ; preds = %3472, %3466
  %3481 = load i8** %locinput, align 8, !dbg !4676
  store i8* %3481, i8** @PL_reginput, align 8, !dbg !4677
  %3482 = load i32* %minmod, align 4, !dbg !4678
  %3483 = icmp ne i32 %3482, 0, !dbg !4680
  br i1 %3483, label %3484, label %3903, !dbg !4680

; <label>:3484                                    ; preds = %3480
  store i32 0, i32* %minmod, align 4, !dbg !4681
  %3485 = load i32* %ln, align 4, !dbg !4683
  %3486 = icmp ne i32 %3485, 0, !dbg !4685
  br i1 %3486, label %3487, label %3494, !dbg !4685

; <label>:3487                                    ; preds = %3484
  %3488 = load %struct.regnode** %scan, align 8, !dbg !4686
  %3489 = load i32* %ln, align 4, !dbg !4688
  %3490 = call i32 (%struct.regnode*, i32, i32*, ...)* bitcast (i32 (...)* @regrepeat_hard to i32 (%struct.regnode*, i32, i32*, ...)*)(%struct.regnode* %3488, i32 %3489, i32* %l9), !dbg !4689
  %3491 = load i32* %ln, align 4, !dbg !4690
  %3492 = icmp slt i32 %3490, %3491, !dbg !4689
  br i1 %3492, label %3493, label %3494, !dbg !4685

; <label>:3493                                    ; preds = %3487
  br label %6127, !dbg !4691

; <label>:3494                                    ; preds = %3487, %3484
  %3495 = load i8** @PL_reginput, align 8, !dbg !4692
  store i8* %3495, i8** %locinput, align 8, !dbg !4693
  %3496 = load %struct.regnode** %next, align 8, !dbg !4694
  %3497 = getelementptr inbounds %struct.regnode* %3496, i32 0, i32 1, !dbg !4694
  %3498 = load i8* %3497, align 1, !dbg !4694
  %3499 = zext i8 %3498 to i64, !dbg !4694
  %3500 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3499, !dbg !4694
  %3501 = load i8* %3500, align 1, !dbg !4694
  %3502 = zext i8 %3501 to i32, !dbg !4694
  %3503 = icmp eq i32 %3502, 33, !dbg !4694
  br i1 %3503, label %3571, label %3504, !dbg !4696

; <label>:3504                                    ; preds = %3494
  %3505 = load %struct.regnode** %next, align 8, !dbg !4697
  %3506 = getelementptr inbounds %struct.regnode* %3505, i32 0, i32 1, !dbg !4697
  %3507 = load i8* %3506, align 1, !dbg !4697
  %3508 = zext i8 %3507 to i64, !dbg !4697
  %3509 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3508, !dbg !4697
  %3510 = load i8* %3509, align 1, !dbg !4697
  %3511 = zext i8 %3510 to i32, !dbg !4697
  %3512 = icmp eq i32 %3511, 47, !dbg !4697
  br i1 %3512, label %3571, label %3513, !dbg !4696

; <label>:3513                                    ; preds = %3504
  %3514 = load %struct.regnode** %next, align 8, !dbg !4699
  %3515 = getelementptr inbounds %struct.regnode* %3514, i32 0, i32 1, !dbg !4699
  %3516 = load i8* %3515, align 1, !dbg !4699
  %3517 = zext i8 %3516 to i32, !dbg !4699
  %3518 = icmp eq i32 %3517, 45, !dbg !4699
  br i1 %3518, label %3571, label %3519, !dbg !4696

; <label>:3519                                    ; preds = %3513
  %3520 = load %struct.regnode** %next, align 8, !dbg !4701
  %3521 = getelementptr inbounds %struct.regnode* %3520, i32 0, i32 1, !dbg !4701
  %3522 = load i8* %3521, align 1, !dbg !4701
  %3523 = zext i8 %3522 to i32, !dbg !4701
  %3524 = icmp eq i32 %3523, 46, !dbg !4701
  br i1 %3524, label %3571, label %3525, !dbg !4696

; <label>:3525                                    ; preds = %3519
  %3526 = load %struct.regnode** %next, align 8, !dbg !4703
  %3527 = getelementptr inbounds %struct.regnode* %3526, i32 0, i32 1, !dbg !4703
  %3528 = load i8* %3527, align 1, !dbg !4703
  %3529 = zext i8 %3528 to i32, !dbg !4703
  %3530 = icmp eq i32 %3529, 57, !dbg !4703
  br i1 %3530, label %3571, label %3531, !dbg !4696

; <label>:3531                                    ; preds = %3525
  %3532 = load %struct.regnode** %next, align 8, !dbg !4705
  %3533 = getelementptr inbounds %struct.regnode* %3532, i32 0, i32 1, !dbg !4705
  %3534 = load i8* %3533, align 1, !dbg !4705
  %3535 = zext i8 %3534 to i32, !dbg !4705
  %3536 = icmp eq i32 %3535, 52, !dbg !4705
  br i1 %3536, label %3571, label %3537, !dbg !4696

; <label>:3537                                    ; preds = %3531
  %3538 = load %struct.regnode** %next, align 8, !dbg !4707
  %3539 = getelementptr inbounds %struct.regnode* %3538, i32 0, i32 1, !dbg !4707
  %3540 = load i8* %3539, align 1, !dbg !4707
  %3541 = zext i8 %3540 to i32, !dbg !4707
  %3542 = icmp eq i32 %3541, 50, !dbg !4707
  br i1 %3542, label %3571, label %3543, !dbg !4696

; <label>:3543                                    ; preds = %3537
  %3544 = load %struct.regnode** %next, align 8, !dbg !4709
  %3545 = getelementptr inbounds %struct.regnode* %3544, i32 0, i32 1, !dbg !4709
  %3546 = load i8* %3545, align 1, !dbg !4709
  %3547 = zext i8 %3546 to i32, !dbg !4709
  %3548 = icmp eq i32 %3547, 39, !dbg !4709
  br i1 %3548, label %3571, label %3549, !dbg !4696

; <label>:3549                                    ; preds = %3543
  %3550 = load %struct.regnode** %next, align 8, !dbg !4711
  %3551 = getelementptr inbounds %struct.regnode* %3550, i32 0, i32 1, !dbg !4711
  %3552 = load i8* %3551, align 1, !dbg !4711
  %3553 = zext i8 %3552 to i32, !dbg !4711
  %3554 = icmp eq i32 %3553, 58, !dbg !4711
  br i1 %3554, label %3571, label %3555, !dbg !4696

; <label>:3555                                    ; preds = %3549
  %3556 = load %struct.regnode** %next, align 8, !dbg !4713
  %3557 = getelementptr inbounds %struct.regnode* %3556, i32 0, i32 1, !dbg !4713
  %3558 = load i8* %3557, align 1, !dbg !4713
  %3559 = zext i8 %3558 to i64, !dbg !4713
  %3560 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3559, !dbg !4713
  %3561 = load i8* %3560, align 1, !dbg !4713
  %3562 = zext i8 %3561 to i32, !dbg !4713
  %3563 = icmp eq i32 %3562, 40, !dbg !4713
  br i1 %3563, label %3564, label %3796, !dbg !4696

; <label>:3564                                    ; preds = %3555
  %3565 = load %struct.regnode** %next, align 8, !dbg !4715
  %3566 = bitcast %struct.regnode* %3565 to %struct.regnode_2*, !dbg !4715
  %3567 = getelementptr inbounds %struct.regnode_2* %3566, i32 0, i32 3, !dbg !4715
  %3568 = load i16* %3567, align 2, !dbg !4715
  %3569 = zext i16 %3568 to i32, !dbg !4715
  %3570 = icmp sgt i32 %3569, 0, !dbg !4715
  br i1 %3570, label %3571, label %3796, !dbg !4696

; <label>:3571                                    ; preds = %3564, %3549, %3543, %3537, %3531, %3525, %3519, %3513, %3504, %3494
  call void @llvm.dbg.declare(metadata %struct.regnode** %text_node, metadata !4717, metadata !566), !dbg !4719
  %3572 = load %struct.regnode** %next, align 8, !dbg !4720
  store %struct.regnode* %3572, %struct.regnode** %text_node, align 8, !dbg !4719
  %3573 = load %struct.regnode** %text_node, align 8, !dbg !4721
  %3574 = getelementptr inbounds %struct.regnode* %3573, i32 0, i32 1, !dbg !4721
  %3575 = load i8* %3574, align 1, !dbg !4721
  %3576 = zext i8 %3575 to i64, !dbg !4721
  %3577 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3576, !dbg !4721
  %3578 = load i8* %3577, align 1, !dbg !4721
  %3579 = zext i8 %3578 to i32, !dbg !4721
  %3580 = icmp eq i32 %3579, 33, !dbg !4721
  br i1 %3580, label %3719, label %3581, !dbg !4723

; <label>:3581                                    ; preds = %3571
  %3582 = load %struct.regnode** %text_node, align 8, !dbg !4724
  %3583 = getelementptr inbounds %struct.regnode* %3582, i32 0, i32 1, !dbg !4724
  %3584 = load i8* %3583, align 1, !dbg !4724
  %3585 = zext i8 %3584 to i64, !dbg !4724
  %3586 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3585, !dbg !4724
  %3587 = load i8* %3586, align 1, !dbg !4724
  %3588 = zext i8 %3587 to i32, !dbg !4724
  %3589 = icmp eq i32 %3588, 47, !dbg !4724
  br i1 %3589, label %3719, label %3590, !dbg !4723

; <label>:3590                                    ; preds = %3581
  br label %3591, !dbg !4726

; <label>:3591                                    ; preds = %3717, %3590
  %3592 = load %struct.regnode** %text_node, align 8, !dbg !4729
  %3593 = getelementptr inbounds %struct.regnode* %3592, i32 0, i32 1, !dbg !4729
  %3594 = load i8* %3593, align 1, !dbg !4729
  %3595 = zext i8 %3594 to i32, !dbg !4729
  %3596 = icmp eq i32 %3595, 45, !dbg !4729
  br i1 %3596, label %3651, label %3597, !dbg !4729

; <label>:3597                                    ; preds = %3591
  %3598 = load %struct.regnode** %text_node, align 8, !dbg !4732
  %3599 = getelementptr inbounds %struct.regnode* %3598, i32 0, i32 1, !dbg !4732
  %3600 = load i8* %3599, align 1, !dbg !4732
  %3601 = zext i8 %3600 to i32, !dbg !4732
  %3602 = icmp eq i32 %3601, 46, !dbg !4732
  br i1 %3602, label %3651, label %3603, !dbg !4732

; <label>:3603                                    ; preds = %3597
  %3604 = load %struct.regnode** %text_node, align 8, !dbg !4734
  %3605 = getelementptr inbounds %struct.regnode* %3604, i32 0, i32 1, !dbg !4734
  %3606 = load i8* %3605, align 1, !dbg !4734
  %3607 = zext i8 %3606 to i32, !dbg !4734
  %3608 = icmp eq i32 %3607, 57, !dbg !4734
  br i1 %3608, label %3651, label %3609, !dbg !4734

; <label>:3609                                    ; preds = %3603
  %3610 = load %struct.regnode** %text_node, align 8, !dbg !4736
  %3611 = getelementptr inbounds %struct.regnode* %3610, i32 0, i32 1, !dbg !4736
  %3612 = load i8* %3611, align 1, !dbg !4736
  %3613 = zext i8 %3612 to i32, !dbg !4736
  %3614 = icmp eq i32 %3613, 52, !dbg !4736
  br i1 %3614, label %3651, label %3615, !dbg !4736

; <label>:3615                                    ; preds = %3609
  %3616 = load %struct.regnode** %text_node, align 8, !dbg !4738
  %3617 = getelementptr inbounds %struct.regnode* %3616, i32 0, i32 1, !dbg !4738
  %3618 = load i8* %3617, align 1, !dbg !4738
  %3619 = zext i8 %3618 to i32, !dbg !4738
  %3620 = icmp eq i32 %3619, 50, !dbg !4738
  br i1 %3620, label %3651, label %3621, !dbg !4738

; <label>:3621                                    ; preds = %3615
  %3622 = load %struct.regnode** %text_node, align 8, !dbg !4740
  %3623 = getelementptr inbounds %struct.regnode* %3622, i32 0, i32 1, !dbg !4740
  %3624 = load i8* %3623, align 1, !dbg !4740
  %3625 = zext i8 %3624 to i32, !dbg !4740
  %3626 = icmp eq i32 %3625, 39, !dbg !4740
  br i1 %3626, label %3651, label %3627, !dbg !4740

; <label>:3627                                    ; preds = %3621
  %3628 = load %struct.regnode** %text_node, align 8, !dbg !4742
  %3629 = getelementptr inbounds %struct.regnode* %3628, i32 0, i32 1, !dbg !4742
  %3630 = load i8* %3629, align 1, !dbg !4742
  %3631 = zext i8 %3630 to i32, !dbg !4742
  %3632 = icmp eq i32 %3631, 58, !dbg !4742
  br i1 %3632, label %3651, label %3633, !dbg !4742

; <label>:3633                                    ; preds = %3627
  %3634 = load %struct.regnode** %text_node, align 8, !dbg !4744
  %3635 = getelementptr inbounds %struct.regnode* %3634, i32 0, i32 1, !dbg !4744
  %3636 = load i8* %3635, align 1, !dbg !4744
  %3637 = zext i8 %3636 to i64, !dbg !4744
  %3638 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3637, !dbg !4744
  %3639 = load i8* %3638, align 1, !dbg !4744
  %3640 = zext i8 %3639 to i32, !dbg !4744
  %3641 = icmp eq i32 %3640, 40, !dbg !4744
  br i1 %3641, label %3642, label %3649, !dbg !4744

; <label>:3642                                    ; preds = %3633
  %3643 = load %struct.regnode** %text_node, align 8, !dbg !4746
  %3644 = bitcast %struct.regnode* %3643 to %struct.regnode_2*, !dbg !4746
  %3645 = getelementptr inbounds %struct.regnode_2* %3644, i32 0, i32 3, !dbg !4746
  %3646 = load i16* %3645, align 2, !dbg !4746
  %3647 = zext i16 %3646 to i32, !dbg !4746
  %3648 = icmp sgt i32 %3647, 0, !dbg !4746
  br label %3649

; <label>:3649                                    ; preds = %3642, %3633
  %3650 = phi i1 [ false, %3633 ], [ %3648, %3642 ]
  br label %3651, !dbg !4748

; <label>:3651                                    ; preds = %3649, %3627, %3621, %3615, %3609, %3603, %3597, %3591
  %3652 = phi i1 [ true, %3627 ], [ true, %3621 ], [ true, %3615 ], [ true, %3609 ], [ true, %3603 ], [ true, %3597 ], [ true, %3591 ], [ %3650, %3649 ]
  br i1 %3652, label %3653, label %3718, !dbg !4750

; <label>:3653                                    ; preds = %3651
  %3654 = load %struct.regnode** %text_node, align 8, !dbg !4759
  %3655 = getelementptr inbounds %struct.regnode* %3654, i32 0, i32 1, !dbg !4759
  %3656 = load i8* %3655, align 1, !dbg !4759
  %3657 = zext i8 %3656 to i32, !dbg !4759
  %3658 = icmp eq i32 %3657, 52, !dbg !4759
  br i1 %3658, label %3668, label %3659, !dbg !4762

; <label>:3659                                    ; preds = %3653
  %3660 = load %struct.regnode** %text_node, align 8, !dbg !4763
  %3661 = getelementptr inbounds %struct.regnode* %3660, i32 0, i32 1, !dbg !4763
  %3662 = load i8* %3661, align 1, !dbg !4763
  %3663 = zext i8 %3662 to i64, !dbg !4763
  %3664 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3663, !dbg !4763
  %3665 = load i8* %3664, align 1, !dbg !4763
  %3666 = zext i8 %3665 to i32, !dbg !4763
  %3667 = icmp eq i32 %3666, 40, !dbg !4763
  br i1 %3667, label %3668, label %3672, !dbg !4762

; <label>:3668                                    ; preds = %3659, %3653
  %3669 = load %struct.regnode** %text_node, align 8, !dbg !4765
  %3670 = getelementptr inbounds %struct.regnode* %3669, i64 1, !dbg !4765
  %3671 = getelementptr inbounds %struct.regnode* %3670, i64 1, !dbg !4765
  store %struct.regnode* %3671, %struct.regnode** %text_node, align 8, !dbg !4765
  br label %3717, !dbg !4765

; <label>:3672                                    ; preds = %3659
  %3673 = load %struct.regnode** %text_node, align 8, !dbg !4768
  %3674 = getelementptr inbounds %struct.regnode* %3673, i32 0, i32 1, !dbg !4768
  %3675 = load i8* %3674, align 1, !dbg !4768
  %3676 = zext i8 %3675 to i32, !dbg !4768
  %3677 = icmp eq i32 %3676, 39, !dbg !4768
  br i1 %3677, label %3678, label %3681, !dbg !4771

; <label>:3678                                    ; preds = %3672
  %3679 = load %struct.regnode** %text_node, align 8, !dbg !4772
  %3680 = getelementptr inbounds %struct.regnode* %3679, i64 1, !dbg !4772
  store %struct.regnode* %3680, %struct.regnode** %text_node, align 8, !dbg !4772
  br label %3716, !dbg !4772

; <label>:3681                                    ; preds = %3672
  %3682 = load %struct.regnode** %text_node, align 8, !dbg !4774
  %3683 = getelementptr inbounds %struct.regnode* %3682, i32 0, i32 1, !dbg !4774
  %3684 = load i8* %3683, align 1, !dbg !4774
  %3685 = zext i8 %3684 to i32, !dbg !4774
  %3686 = icmp eq i32 %3685, 50, !dbg !4774
  br i1 %3686, label %3687, label %3707, !dbg !4777

; <label>:3687                                    ; preds = %3681
  %3688 = load %struct.regnode** %text_node, align 8, !dbg !4778
  %3689 = getelementptr inbounds %struct.regnode* %3688, i32 0, i32 0, !dbg !4778
  %3690 = load i8* %3689, align 1, !dbg !4778
  %3691 = zext i8 %3690 to i32, !dbg !4778
  %3692 = icmp eq i32 %3691, 0, !dbg !4778
  br i1 %3692, label %3693, label %3697, !dbg !4778

; <label>:3693                                    ; preds = %3687
  %3694 = load %struct.regnode** %text_node, align 8, !dbg !4780
  %3695 = getelementptr inbounds %struct.regnode* %3694, i64 1, !dbg !4780
  %3696 = getelementptr inbounds %struct.regnode* %3695, i64 1, !dbg !4780
  br label %3705, !dbg !4780

; <label>:3697                                    ; preds = %3687
  %3698 = load %struct.regnode** %text_node, align 8, !dbg !4782
  %3699 = load %struct.regnode** %text_node, align 8, !dbg !4782
  %3700 = bitcast %struct.regnode* %3699 to %struct.regnode_1*, !dbg !4782
  %3701 = getelementptr inbounds %struct.regnode_1* %3700, i32 0, i32 3, !dbg !4782
  %3702 = load i32* %3701, align 4, !dbg !4782
  %3703 = zext i32 %3702 to i64, !dbg !4782
  %3704 = getelementptr inbounds %struct.regnode* %3698, i64 %3703, !dbg !4782
  br label %3705, !dbg !4782

; <label>:3705                                    ; preds = %3697, %3693
  %3706 = phi %struct.regnode* [ %3696, %3693 ], [ %3704, %3697 ], !dbg !4784
  store %struct.regnode* %3706, %struct.regnode** %text_node, align 8, !dbg !4785
  br label %3715, !dbg !4785

; <label>:3707                                    ; preds = %3681
  %3708 = load %struct.regnode** %text_node, align 8, !dbg !4788
  %3709 = getelementptr inbounds %struct.regnode* %3708, i32 0, i32 2, !dbg !4788
  %3710 = load i16* %3709, align 2, !dbg !4788
  %3711 = zext i16 %3710 to i32, !dbg !4788
  %3712 = load %struct.regnode** %text_node, align 8, !dbg !4788
  %3713 = sext i32 %3711 to i64, !dbg !4788
  %3714 = getelementptr inbounds %struct.regnode* %3712, i64 %3713, !dbg !4788
  store %struct.regnode* %3714, %struct.regnode** %text_node, align 8, !dbg !4788
  br label %3715

; <label>:3715                                    ; preds = %3707, %3705
  br label %3716

; <label>:3716                                    ; preds = %3715, %3678
  br label %3717

; <label>:3717                                    ; preds = %3716, %3668
  br label %3591, !dbg !4790

; <label>:3718                                    ; preds = %3651
  br label %3719, !dbg !4792

; <label>:3719                                    ; preds = %3718, %3581, %3571
  %3720 = load %struct.regnode** %text_node, align 8, !dbg !4794
  %3721 = getelementptr inbounds %struct.regnode* %3720, i32 0, i32 1, !dbg !4794
  %3722 = load i8* %3721, align 1, !dbg !4794
  %3723 = zext i8 %3722 to i64, !dbg !4794
  %3724 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3723, !dbg !4794
  %3725 = load i8* %3724, align 1, !dbg !4794
  %3726 = zext i8 %3725 to i32, !dbg !4794
  %3727 = icmp eq i32 %3726, 33, !dbg !4794
  br i1 %3727, label %3738, label %3728, !dbg !4796

; <label>:3728                                    ; preds = %3719
  %3729 = load %struct.regnode** %text_node, align 8, !dbg !4797
  %3730 = getelementptr inbounds %struct.regnode* %3729, i32 0, i32 1, !dbg !4797
  %3731 = load i8* %3730, align 1, !dbg !4797
  %3732 = zext i8 %3731 to i64, !dbg !4797
  %3733 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3732, !dbg !4797
  %3734 = load i8* %3733, align 1, !dbg !4797
  %3735 = zext i8 %3734 to i32, !dbg !4797
  %3736 = icmp eq i32 %3735, 47, !dbg !4797
  br i1 %3736, label %3738, label %3737, !dbg !4796

; <label>:3737                                    ; preds = %3728
  store i32 -1000, i32* %c2, align 4, !dbg !4799
  store i32 -1000, i32* %c1, align 4, !dbg !4801
  br label %3795, !dbg !4801

; <label>:3738                                    ; preds = %3728, %3719
  %3739 = load %struct.regnode** %text_node, align 8, !dbg !4802
  %3740 = getelementptr inbounds %struct.regnode* %3739, i32 0, i32 1, !dbg !4802
  %3741 = load i8* %3740, align 1, !dbg !4802
  %3742 = zext i8 %3741 to i64, !dbg !4805
  %3743 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3742, !dbg !4805
  %3744 = load i8* %3743, align 1, !dbg !4805
  %3745 = zext i8 %3744 to i32, !dbg !4805
  %3746 = icmp eq i32 %3745, 47, !dbg !4805
  br i1 %3746, label %3747, label %3748, !dbg !4806

; <label>:3747                                    ; preds = %3738
  store i32 -1000, i32* %c2, align 4, !dbg !4807
  store i32 -1000, i32* %c1, align 4, !dbg !4809
  br label %3798, !dbg !4810

; <label>:3748                                    ; preds = %3738
  %3749 = load %struct.regnode** %text_node, align 8, !dbg !4811
  %3750 = bitcast %struct.regnode* %3749 to %struct.regnode_string*, !dbg !4811
  %3751 = getelementptr inbounds %struct.regnode_string* %3750, i32 0, i32 3, !dbg !4811
  %3752 = getelementptr inbounds [1 x i8]* %3751, i32 0, i32 0, !dbg !4811
  %3753 = load i8* %3752, align 1, !dbg !4813
  %3754 = zext i8 %3753 to i32, !dbg !4814
  store i32 %3754, i32* %c1, align 4, !dbg !4815
  br label %3755

; <label>:3755                                    ; preds = %3748
  %3756 = load %struct.regnode** %text_node, align 8, !dbg !4816
  %3757 = getelementptr inbounds %struct.regnode* %3756, i32 0, i32 1, !dbg !4816
  %3758 = load i8* %3757, align 1, !dbg !4816
  %3759 = zext i8 %3758 to i32, !dbg !4816
  %3760 = icmp eq i32 %3759, 34, !dbg !4816
  br i1 %3760, label %3767, label %3761, !dbg !4818

; <label>:3761                                    ; preds = %3755
  %3762 = load %struct.regnode** %text_node, align 8, !dbg !4819
  %3763 = getelementptr inbounds %struct.regnode* %3762, i32 0, i32 1, !dbg !4819
  %3764 = load i8* %3763, align 1, !dbg !4819
  %3765 = zext i8 %3764 to i32, !dbg !4819
  %3766 = icmp eq i32 %3765, 48, !dbg !4819
  br i1 %3766, label %3767, label %3773, !dbg !4818

; <label>:3767                                    ; preds = %3761, %3755
  %3768 = load i32* %c1, align 4, !dbg !4821
  %3769 = sext i32 %3768 to i64, !dbg !4822
  %3770 = getelementptr inbounds [0 x i8]* @PL_fold, i32 0, i64 %3769, !dbg !4822
  %3771 = load i8* %3770, align 1, !dbg !4822
  %3772 = zext i8 %3771 to i32, !dbg !4822
  store i32 %3772, i32* %c2, align 4, !dbg !4823
  br label %3794, !dbg !4823

; <label>:3773                                    ; preds = %3761
  %3774 = load %struct.regnode** %text_node, align 8, !dbg !4824
  %3775 = getelementptr inbounds %struct.regnode* %3774, i32 0, i32 1, !dbg !4824
  %3776 = load i8* %3775, align 1, !dbg !4824
  %3777 = zext i8 %3776 to i32, !dbg !4824
  %3778 = icmp eq i32 %3777, 35, !dbg !4824
  br i1 %3778, label %3785, label %3779, !dbg !4826

; <label>:3779                                    ; preds = %3773
  %3780 = load %struct.regnode** %text_node, align 8, !dbg !4827
  %3781 = getelementptr inbounds %struct.regnode* %3780, i32 0, i32 1, !dbg !4827
  %3782 = load i8* %3781, align 1, !dbg !4827
  %3783 = zext i8 %3782 to i32, !dbg !4827
  %3784 = icmp eq i32 %3783, 49, !dbg !4827
  br i1 %3784, label %3785, label %3791, !dbg !4826

; <label>:3785                                    ; preds = %3779, %3773
  %3786 = load i32* %c1, align 4, !dbg !4829
  %3787 = sext i32 %3786 to i64, !dbg !4830
  %3788 = getelementptr inbounds [0 x i8]* @PL_fold_locale, i32 0, i64 %3787, !dbg !4830
  %3789 = load i8* %3788, align 1, !dbg !4830
  %3790 = zext i8 %3789 to i32, !dbg !4830
  store i32 %3790, i32* %c2, align 4, !dbg !4831
  br label %3793, !dbg !4831

; <label>:3791                                    ; preds = %3779
  %3792 = load i32* %c1, align 4, !dbg !4832
  store i32 %3792, i32* %c2, align 4, !dbg !4833
  br label %3793

; <label>:3793                                    ; preds = %3791, %3785
  br label %3794

; <label>:3794                                    ; preds = %3793, %3767
  br label %3795

; <label>:3795                                    ; preds = %3794, %3737
  br label %3797, !dbg !4834

; <label>:3796                                    ; preds = %3564, %3555
  store i32 -1000, i32* %c2, align 4, !dbg !4835
  store i32 -1000, i32* %c1, align 4, !dbg !4836
  br label %3797

; <label>:3797                                    ; preds = %3796, %3795
  br label %3798, !dbg !4837

; <label>:3798                                    ; preds = %3797, %3747
  %3799 = load i32* @PL_savestack_ix, align 4, !dbg !4838
  store i32 %3799, i32* %lastcp10, align 4, !dbg !4838
  br label %3800, !dbg !4839

; <label>:3800                                    ; preds = %3901, %3798
  %3801 = load i32* %n, align 4, !dbg !4840
  %3802 = load i32* %ln, align 4, !dbg !4843
  %3803 = icmp sge i32 %3801, %3802, !dbg !4844
  br i1 %3803, label %3812, label %3804, !dbg !4844

; <label>:3804                                    ; preds = %3800
  %3805 = load i32* %n, align 4, !dbg !4845
  %3806 = icmp eq i32 %3805, 32767, !dbg !4845
  br i1 %3806, label %3807, label %3810, !dbg !4845

; <label>:3807                                    ; preds = %3804
  %3808 = load i32* %ln, align 4, !dbg !4847
  %3809 = icmp sgt i32 %3808, 0, !dbg !4847
  br label %3810

; <label>:3810                                    ; preds = %3807, %3804
  %3811 = phi i1 [ false, %3804 ], [ %3809, %3807 ]
  br label %3812, !dbg !4849

; <label>:3812                                    ; preds = %3810, %3800
  %3813 = phi i1 [ true, %3800 ], [ %3811, %3810 ]
  br i1 %3813, label %3814, label %3902, !dbg !4851

; <label>:3814                                    ; preds = %3812
  %3815 = load i32* %c1, align 4, !dbg !4854
  %3816 = icmp eq i32 %3815, -1000, !dbg !4854
  br i1 %3816, label %3829, label %3817, !dbg !4857

; <label>:3817                                    ; preds = %3814
  %3818 = load i8** @PL_reginput, align 8, !dbg !4858
  %3819 = load i8* %3818, align 1, !dbg !4858
  %3820 = zext i8 %3819 to i32, !dbg !4858
  %3821 = load i32* %c1, align 4, !dbg !4859
  %3822 = icmp eq i32 %3820, %3821, !dbg !4858
  br i1 %3822, label %3829, label %3823, !dbg !4857

; <label>:3823                                    ; preds = %3817
  %3824 = load i8** @PL_reginput, align 8, !dbg !4860
  %3825 = load i8* %3824, align 1, !dbg !4860
  %3826 = zext i8 %3825 to i32, !dbg !4860
  %3827 = load i32* %c2, align 4, !dbg !4861
  %3828 = icmp eq i32 %3826, %3827, !dbg !4860
  br i1 %3828, label %3829, label %3891, !dbg !4857

; <label>:3829                                    ; preds = %3823, %3817, %3814
  %3830 = load i32* %paren, align 4, !dbg !4862
  %3831 = icmp ne i32 %3830, 0, !dbg !4865
  br i1 %3831, label %3832, label %3879, !dbg !4865

; <label>:3832                                    ; preds = %3829
  %3833 = load i32* %ln, align 4, !dbg !4866
  %3834 = icmp ne i32 %3833, 0, !dbg !4869
  br i1 %3834, label %3835, label %3873, !dbg !4869

; <label>:3835                                    ; preds = %3832
  %3836 = load i8* @PL_reg_match_utf8, align 1, !dbg !4870
  %3837 = sext i8 %3836 to i32, !dbg !4870
  %3838 = icmp ne i32 %3837, 0, !dbg !4870
  br i1 %3838, label %3839, label %3846, !dbg !4870

; <label>:3839                                    ; preds = %3835
  %3840 = load i8** @PL_reginput, align 8, !dbg !4872
  %3841 = load i32* %l9, align 4, !dbg !4872
  %3842 = sub nsw i32 0, %3841, !dbg !4872
  %3843 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %3840, i32 %3842), !dbg !4872
  %3844 = sext i32 %3843 to i64, !dbg !4872
  %3845 = inttoptr i64 %3844 to i8*, !dbg !4872
  br label %3852, !dbg !4872

; <label>:3846                                    ; preds = %3835
  %3847 = load i8** @PL_reginput, align 8, !dbg !4874
  %3848 = load i32* %l9, align 4, !dbg !4874
  %3849 = sub nsw i32 0, %3848, !dbg !4874
  %3850 = sext i32 %3849 to i64, !dbg !4874
  %3851 = getelementptr inbounds i8* %3847, i64 %3850, !dbg !4874
  br label %3852, !dbg !4874

; <label>:3852                                    ; preds = %3846, %3839
  %3853 = phi i8* [ %3845, %3839 ], [ %3851, %3846 ], !dbg !4870
  %3854 = load i8** @PL_bostr, align 8, !dbg !4876
  %3855 = ptrtoint i8* %3853 to i64, !dbg !4870
  %3856 = ptrtoint i8* %3854 to i64, !dbg !4870
  %3857 = sub i64 %3855, %3856, !dbg !4870
  %3858 = trunc i64 %3857 to i32, !dbg !4870
  %3859 = load i32* %paren, align 4, !dbg !4879
  %3860 = sext i32 %3859 to i64, !dbg !4880
  %3861 = load i32** @PL_regstartp, align 8, !dbg !4880
  %3862 = getelementptr inbounds i32* %3861, i64 %3860, !dbg !4880
  store i32 %3858, i32* %3862, align 4, !dbg !4880
  %3863 = load i8** @PL_reginput, align 8, !dbg !4881
  %3864 = load i8** @PL_bostr, align 8, !dbg !4882
  %3865 = ptrtoint i8* %3863 to i64, !dbg !4881
  %3866 = ptrtoint i8* %3864 to i64, !dbg !4881
  %3867 = sub i64 %3865, %3866, !dbg !4881
  %3868 = trunc i64 %3867 to i32, !dbg !4881
  %3869 = load i32* %paren, align 4, !dbg !4883
  %3870 = sext i32 %3869 to i64, !dbg !4884
  %3871 = load i32** @PL_regendp, align 8, !dbg !4884
  %3872 = getelementptr inbounds i32* %3871, i64 %3870, !dbg !4884
  store i32 %3868, i32* %3872, align 4, !dbg !4884
  br label %3878, !dbg !4885

; <label>:3873                                    ; preds = %3832
  %3874 = load i32* %paren, align 4, !dbg !4886
  %3875 = sext i32 %3874 to i64, !dbg !4887
  %3876 = load i32** @PL_regendp, align 8, !dbg !4887
  %3877 = getelementptr inbounds i32* %3876, i64 %3875, !dbg !4887
  store i32 -1, i32* %3877, align 4, !dbg !4887
  br label %3878

; <label>:3878                                    ; preds = %3873, %3852
  br label %3879, !dbg !4888

; <label>:3879                                    ; preds = %3878, %3829
  %3880 = load %struct.regnode** %next, align 8, !dbg !4889
  %3881 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %3880), !dbg !4891
  %3882 = icmp ne i32 %3881, 0, !dbg !4892
  br i1 %3882, label %3883, label %3884, !dbg !4892

; <label>:3883                                    ; preds = %3879
  br label %6126, !dbg !4893

; <label>:3884                                    ; preds = %3879
  %3885 = load i32* @PL_savestack_ix, align 4, !dbg !4894
  %3886 = load i32* %lastcp10, align 4, !dbg !4894
  %3887 = icmp sgt i32 %3885, %3886, !dbg !4894
  br i1 %3887, label %3888, label %3890, !dbg !4896

; <label>:3888                                    ; preds = %3884
  %3889 = load i32* %lastcp10, align 4, !dbg !4897
  call void @Perl_leave_scope(i32 %3889), !dbg !4897
  br label %3890, !dbg !4897

; <label>:3890                                    ; preds = %3888, %3884
  br label %3891, !dbg !4899

; <label>:3891                                    ; preds = %3890, %3823
  %3892 = load i8** %locinput, align 8, !dbg !4900
  store i8* %3892, i8** @PL_reginput, align 8, !dbg !4901
  %3893 = load %struct.regnode** %scan, align 8, !dbg !4902
  %3894 = call i32 (%struct.regnode*, i32, i32*, ...)* bitcast (i32 (...)* @regrepeat_hard to i32 (%struct.regnode*, i32, i32*, ...)*)(%struct.regnode* %3893, i32 1, i32* %l9), !dbg !4904
  %3895 = icmp ne i32 %3894, 0, !dbg !4905
  br i1 %3895, label %3896, label %3900, !dbg !4905

; <label>:3896                                    ; preds = %3891
  %3897 = load i32* %ln, align 4, !dbg !4906
  %3898 = add nsw i32 %3897, 1, !dbg !4906
  store i32 %3898, i32* %ln, align 4, !dbg !4906
  %3899 = load i8** @PL_reginput, align 8, !dbg !4908
  store i8* %3899, i8** %locinput, align 8, !dbg !4909
  br label %3901, !dbg !4910

; <label>:3900                                    ; preds = %3891
  br label %6127, !dbg !4911

; <label>:3901                                    ; preds = %3896
  br label %3800, !dbg !4839

; <label>:3902                                    ; preds = %3812
  br label %4321, !dbg !4912

; <label>:3903                                    ; preds = %3480
  %3904 = load %struct.regnode** %scan, align 8, !dbg !4913
  %3905 = load i32* %n, align 4, !dbg !4915
  %3906 = call i32 (%struct.regnode*, i32, i32*, ...)* bitcast (i32 (...)* @regrepeat_hard to i32 (%struct.regnode*, i32, i32*, ...)*)(%struct.regnode* %3904, i32 %3905, i32* %l9), !dbg !4916
  store i32 %3906, i32* %n, align 4, !dbg !4917
  %3907 = load i8** @PL_reginput, align 8, !dbg !4918
  store i8* %3907, i8** %locinput, align 8, !dbg !4919
  %3908 = load i32* %n, align 4, !dbg !4920
  %3909 = load i32* %ln, align 4, !dbg !4922
  %3910 = icmp sge i32 %3908, %3909, !dbg !4920
  br i1 %3910, label %3911, label %4214, !dbg !4923

; <label>:3911                                    ; preds = %3903
  %3912 = load %struct.regnode** %next, align 8, !dbg !4924
  %3913 = getelementptr inbounds %struct.regnode* %3912, i32 0, i32 1, !dbg !4924
  %3914 = load i8* %3913, align 1, !dbg !4924
  %3915 = zext i8 %3914 to i64, !dbg !4924
  %3916 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3915, !dbg !4924
  %3917 = load i8* %3916, align 1, !dbg !4924
  %3918 = zext i8 %3917 to i32, !dbg !4924
  %3919 = icmp eq i32 %3918, 33, !dbg !4924
  br i1 %3919, label %3987, label %3920, !dbg !4927

; <label>:3920                                    ; preds = %3911
  %3921 = load %struct.regnode** %next, align 8, !dbg !4928
  %3922 = getelementptr inbounds %struct.regnode* %3921, i32 0, i32 1, !dbg !4928
  %3923 = load i8* %3922, align 1, !dbg !4928
  %3924 = zext i8 %3923 to i64, !dbg !4928
  %3925 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3924, !dbg !4928
  %3926 = load i8* %3925, align 1, !dbg !4928
  %3927 = zext i8 %3926 to i32, !dbg !4928
  %3928 = icmp eq i32 %3927, 47, !dbg !4928
  br i1 %3928, label %3987, label %3929, !dbg !4927

; <label>:3929                                    ; preds = %3920
  %3930 = load %struct.regnode** %next, align 8, !dbg !4930
  %3931 = getelementptr inbounds %struct.regnode* %3930, i32 0, i32 1, !dbg !4930
  %3932 = load i8* %3931, align 1, !dbg !4930
  %3933 = zext i8 %3932 to i32, !dbg !4930
  %3934 = icmp eq i32 %3933, 45, !dbg !4930
  br i1 %3934, label %3987, label %3935, !dbg !4927

; <label>:3935                                    ; preds = %3929
  %3936 = load %struct.regnode** %next, align 8, !dbg !4932
  %3937 = getelementptr inbounds %struct.regnode* %3936, i32 0, i32 1, !dbg !4932
  %3938 = load i8* %3937, align 1, !dbg !4932
  %3939 = zext i8 %3938 to i32, !dbg !4932
  %3940 = icmp eq i32 %3939, 46, !dbg !4932
  br i1 %3940, label %3987, label %3941, !dbg !4927

; <label>:3941                                    ; preds = %3935
  %3942 = load %struct.regnode** %next, align 8, !dbg !4934
  %3943 = getelementptr inbounds %struct.regnode* %3942, i32 0, i32 1, !dbg !4934
  %3944 = load i8* %3943, align 1, !dbg !4934
  %3945 = zext i8 %3944 to i32, !dbg !4934
  %3946 = icmp eq i32 %3945, 57, !dbg !4934
  br i1 %3946, label %3987, label %3947, !dbg !4927

; <label>:3947                                    ; preds = %3941
  %3948 = load %struct.regnode** %next, align 8, !dbg !4936
  %3949 = getelementptr inbounds %struct.regnode* %3948, i32 0, i32 1, !dbg !4936
  %3950 = load i8* %3949, align 1, !dbg !4936
  %3951 = zext i8 %3950 to i32, !dbg !4936
  %3952 = icmp eq i32 %3951, 52, !dbg !4936
  br i1 %3952, label %3987, label %3953, !dbg !4927

; <label>:3953                                    ; preds = %3947
  %3954 = load %struct.regnode** %next, align 8, !dbg !4938
  %3955 = getelementptr inbounds %struct.regnode* %3954, i32 0, i32 1, !dbg !4938
  %3956 = load i8* %3955, align 1, !dbg !4938
  %3957 = zext i8 %3956 to i32, !dbg !4938
  %3958 = icmp eq i32 %3957, 50, !dbg !4938
  br i1 %3958, label %3987, label %3959, !dbg !4927

; <label>:3959                                    ; preds = %3953
  %3960 = load %struct.regnode** %next, align 8, !dbg !4940
  %3961 = getelementptr inbounds %struct.regnode* %3960, i32 0, i32 1, !dbg !4940
  %3962 = load i8* %3961, align 1, !dbg !4940
  %3963 = zext i8 %3962 to i32, !dbg !4940
  %3964 = icmp eq i32 %3963, 39, !dbg !4940
  br i1 %3964, label %3987, label %3965, !dbg !4927

; <label>:3965                                    ; preds = %3959
  %3966 = load %struct.regnode** %next, align 8, !dbg !4942
  %3967 = getelementptr inbounds %struct.regnode* %3966, i32 0, i32 1, !dbg !4942
  %3968 = load i8* %3967, align 1, !dbg !4942
  %3969 = zext i8 %3968 to i32, !dbg !4942
  %3970 = icmp eq i32 %3969, 58, !dbg !4942
  br i1 %3970, label %3987, label %3971, !dbg !4927

; <label>:3971                                    ; preds = %3965
  %3972 = load %struct.regnode** %next, align 8, !dbg !4944
  %3973 = getelementptr inbounds %struct.regnode* %3972, i32 0, i32 1, !dbg !4944
  %3974 = load i8* %3973, align 1, !dbg !4944
  %3975 = zext i8 %3974 to i64, !dbg !4944
  %3976 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3975, !dbg !4944
  %3977 = load i8* %3976, align 1, !dbg !4944
  %3978 = zext i8 %3977 to i32, !dbg !4944
  %3979 = icmp eq i32 %3978, 40, !dbg !4944
  br i1 %3979, label %3980, label %4212, !dbg !4927

; <label>:3980                                    ; preds = %3971
  %3981 = load %struct.regnode** %next, align 8, !dbg !4946
  %3982 = bitcast %struct.regnode* %3981 to %struct.regnode_2*, !dbg !4946
  %3983 = getelementptr inbounds %struct.regnode_2* %3982, i32 0, i32 3, !dbg !4946
  %3984 = load i16* %3983, align 2, !dbg !4946
  %3985 = zext i16 %3984 to i32, !dbg !4946
  %3986 = icmp sgt i32 %3985, 0, !dbg !4946
  br i1 %3986, label %3987, label %4212, !dbg !4927

; <label>:3987                                    ; preds = %3980, %3965, %3959, %3953, %3947, %3941, %3935, %3929, %3920, %3911
  call void @llvm.dbg.declare(metadata %struct.regnode** %text_node11, metadata !4948, metadata !566), !dbg !4950
  %3988 = load %struct.regnode** %next, align 8, !dbg !4951
  store %struct.regnode* %3988, %struct.regnode** %text_node11, align 8, !dbg !4950
  %3989 = load %struct.regnode** %text_node11, align 8, !dbg !4952
  %3990 = getelementptr inbounds %struct.regnode* %3989, i32 0, i32 1, !dbg !4952
  %3991 = load i8* %3990, align 1, !dbg !4952
  %3992 = zext i8 %3991 to i64, !dbg !4952
  %3993 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3992, !dbg !4952
  %3994 = load i8* %3993, align 1, !dbg !4952
  %3995 = zext i8 %3994 to i32, !dbg !4952
  %3996 = icmp eq i32 %3995, 33, !dbg !4952
  br i1 %3996, label %4135, label %3997, !dbg !4954

; <label>:3997                                    ; preds = %3987
  %3998 = load %struct.regnode** %text_node11, align 8, !dbg !4955
  %3999 = getelementptr inbounds %struct.regnode* %3998, i32 0, i32 1, !dbg !4955
  %4000 = load i8* %3999, align 1, !dbg !4955
  %4001 = zext i8 %4000 to i64, !dbg !4955
  %4002 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4001, !dbg !4955
  %4003 = load i8* %4002, align 1, !dbg !4955
  %4004 = zext i8 %4003 to i32, !dbg !4955
  %4005 = icmp eq i32 %4004, 47, !dbg !4955
  br i1 %4005, label %4135, label %4006, !dbg !4954

; <label>:4006                                    ; preds = %3997
  br label %4007, !dbg !4957

; <label>:4007                                    ; preds = %4133, %4006
  %4008 = load %struct.regnode** %text_node11, align 8, !dbg !4960
  %4009 = getelementptr inbounds %struct.regnode* %4008, i32 0, i32 1, !dbg !4960
  %4010 = load i8* %4009, align 1, !dbg !4960
  %4011 = zext i8 %4010 to i32, !dbg !4960
  %4012 = icmp eq i32 %4011, 45, !dbg !4960
  br i1 %4012, label %4067, label %4013, !dbg !4960

; <label>:4013                                    ; preds = %4007
  %4014 = load %struct.regnode** %text_node11, align 8, !dbg !4963
  %4015 = getelementptr inbounds %struct.regnode* %4014, i32 0, i32 1, !dbg !4963
  %4016 = load i8* %4015, align 1, !dbg !4963
  %4017 = zext i8 %4016 to i32, !dbg !4963
  %4018 = icmp eq i32 %4017, 46, !dbg !4963
  br i1 %4018, label %4067, label %4019, !dbg !4963

; <label>:4019                                    ; preds = %4013
  %4020 = load %struct.regnode** %text_node11, align 8, !dbg !4965
  %4021 = getelementptr inbounds %struct.regnode* %4020, i32 0, i32 1, !dbg !4965
  %4022 = load i8* %4021, align 1, !dbg !4965
  %4023 = zext i8 %4022 to i32, !dbg !4965
  %4024 = icmp eq i32 %4023, 57, !dbg !4965
  br i1 %4024, label %4067, label %4025, !dbg !4965

; <label>:4025                                    ; preds = %4019
  %4026 = load %struct.regnode** %text_node11, align 8, !dbg !4967
  %4027 = getelementptr inbounds %struct.regnode* %4026, i32 0, i32 1, !dbg !4967
  %4028 = load i8* %4027, align 1, !dbg !4967
  %4029 = zext i8 %4028 to i32, !dbg !4967
  %4030 = icmp eq i32 %4029, 52, !dbg !4967
  br i1 %4030, label %4067, label %4031, !dbg !4967

; <label>:4031                                    ; preds = %4025
  %4032 = load %struct.regnode** %text_node11, align 8, !dbg !4969
  %4033 = getelementptr inbounds %struct.regnode* %4032, i32 0, i32 1, !dbg !4969
  %4034 = load i8* %4033, align 1, !dbg !4969
  %4035 = zext i8 %4034 to i32, !dbg !4969
  %4036 = icmp eq i32 %4035, 50, !dbg !4969
  br i1 %4036, label %4067, label %4037, !dbg !4969

; <label>:4037                                    ; preds = %4031
  %4038 = load %struct.regnode** %text_node11, align 8, !dbg !4971
  %4039 = getelementptr inbounds %struct.regnode* %4038, i32 0, i32 1, !dbg !4971
  %4040 = load i8* %4039, align 1, !dbg !4971
  %4041 = zext i8 %4040 to i32, !dbg !4971
  %4042 = icmp eq i32 %4041, 39, !dbg !4971
  br i1 %4042, label %4067, label %4043, !dbg !4971

; <label>:4043                                    ; preds = %4037
  %4044 = load %struct.regnode** %text_node11, align 8, !dbg !4973
  %4045 = getelementptr inbounds %struct.regnode* %4044, i32 0, i32 1, !dbg !4973
  %4046 = load i8* %4045, align 1, !dbg !4973
  %4047 = zext i8 %4046 to i32, !dbg !4973
  %4048 = icmp eq i32 %4047, 58, !dbg !4973
  br i1 %4048, label %4067, label %4049, !dbg !4973

; <label>:4049                                    ; preds = %4043
  %4050 = load %struct.regnode** %text_node11, align 8, !dbg !4975
  %4051 = getelementptr inbounds %struct.regnode* %4050, i32 0, i32 1, !dbg !4975
  %4052 = load i8* %4051, align 1, !dbg !4975
  %4053 = zext i8 %4052 to i64, !dbg !4975
  %4054 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4053, !dbg !4975
  %4055 = load i8* %4054, align 1, !dbg !4975
  %4056 = zext i8 %4055 to i32, !dbg !4975
  %4057 = icmp eq i32 %4056, 40, !dbg !4975
  br i1 %4057, label %4058, label %4065, !dbg !4975

; <label>:4058                                    ; preds = %4049
  %4059 = load %struct.regnode** %text_node11, align 8, !dbg !4977
  %4060 = bitcast %struct.regnode* %4059 to %struct.regnode_2*, !dbg !4977
  %4061 = getelementptr inbounds %struct.regnode_2* %4060, i32 0, i32 3, !dbg !4977
  %4062 = load i16* %4061, align 2, !dbg !4977
  %4063 = zext i16 %4062 to i32, !dbg !4977
  %4064 = icmp sgt i32 %4063, 0, !dbg !4977
  br label %4065

; <label>:4065                                    ; preds = %4058, %4049
  %4066 = phi i1 [ false, %4049 ], [ %4064, %4058 ]
  br label %4067, !dbg !4979

; <label>:4067                                    ; preds = %4065, %4043, %4037, %4031, %4025, %4019, %4013, %4007
  %4068 = phi i1 [ true, %4043 ], [ true, %4037 ], [ true, %4031 ], [ true, %4025 ], [ true, %4019 ], [ true, %4013 ], [ true, %4007 ], [ %4066, %4065 ]
  br i1 %4068, label %4069, label %4134, !dbg !4981

; <label>:4069                                    ; preds = %4067
  %4070 = load %struct.regnode** %text_node11, align 8, !dbg !4990
  %4071 = getelementptr inbounds %struct.regnode* %4070, i32 0, i32 1, !dbg !4990
  %4072 = load i8* %4071, align 1, !dbg !4990
  %4073 = zext i8 %4072 to i32, !dbg !4990
  %4074 = icmp eq i32 %4073, 52, !dbg !4990
  br i1 %4074, label %4084, label %4075, !dbg !4993

; <label>:4075                                    ; preds = %4069
  %4076 = load %struct.regnode** %text_node11, align 8, !dbg !4994
  %4077 = getelementptr inbounds %struct.regnode* %4076, i32 0, i32 1, !dbg !4994
  %4078 = load i8* %4077, align 1, !dbg !4994
  %4079 = zext i8 %4078 to i64, !dbg !4994
  %4080 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4079, !dbg !4994
  %4081 = load i8* %4080, align 1, !dbg !4994
  %4082 = zext i8 %4081 to i32, !dbg !4994
  %4083 = icmp eq i32 %4082, 40, !dbg !4994
  br i1 %4083, label %4084, label %4088, !dbg !4993

; <label>:4084                                    ; preds = %4075, %4069
  %4085 = load %struct.regnode** %text_node11, align 8, !dbg !4996
  %4086 = getelementptr inbounds %struct.regnode* %4085, i64 1, !dbg !4996
  %4087 = getelementptr inbounds %struct.regnode* %4086, i64 1, !dbg !4996
  store %struct.regnode* %4087, %struct.regnode** %text_node11, align 8, !dbg !4996
  br label %4133, !dbg !4996

; <label>:4088                                    ; preds = %4075
  %4089 = load %struct.regnode** %text_node11, align 8, !dbg !4999
  %4090 = getelementptr inbounds %struct.regnode* %4089, i32 0, i32 1, !dbg !4999
  %4091 = load i8* %4090, align 1, !dbg !4999
  %4092 = zext i8 %4091 to i32, !dbg !4999
  %4093 = icmp eq i32 %4092, 39, !dbg !4999
  br i1 %4093, label %4094, label %4097, !dbg !5002

; <label>:4094                                    ; preds = %4088
  %4095 = load %struct.regnode** %text_node11, align 8, !dbg !5003
  %4096 = getelementptr inbounds %struct.regnode* %4095, i64 1, !dbg !5003
  store %struct.regnode* %4096, %struct.regnode** %text_node11, align 8, !dbg !5003
  br label %4132, !dbg !5003

; <label>:4097                                    ; preds = %4088
  %4098 = load %struct.regnode** %text_node11, align 8, !dbg !5005
  %4099 = getelementptr inbounds %struct.regnode* %4098, i32 0, i32 1, !dbg !5005
  %4100 = load i8* %4099, align 1, !dbg !5005
  %4101 = zext i8 %4100 to i32, !dbg !5005
  %4102 = icmp eq i32 %4101, 50, !dbg !5005
  br i1 %4102, label %4103, label %4123, !dbg !5008

; <label>:4103                                    ; preds = %4097
  %4104 = load %struct.regnode** %text_node11, align 8, !dbg !5009
  %4105 = getelementptr inbounds %struct.regnode* %4104, i32 0, i32 0, !dbg !5009
  %4106 = load i8* %4105, align 1, !dbg !5009
  %4107 = zext i8 %4106 to i32, !dbg !5009
  %4108 = icmp eq i32 %4107, 0, !dbg !5009
  br i1 %4108, label %4109, label %4113, !dbg !5009

; <label>:4109                                    ; preds = %4103
  %4110 = load %struct.regnode** %text_node11, align 8, !dbg !5011
  %4111 = getelementptr inbounds %struct.regnode* %4110, i64 1, !dbg !5011
  %4112 = getelementptr inbounds %struct.regnode* %4111, i64 1, !dbg !5011
  br label %4121, !dbg !5011

; <label>:4113                                    ; preds = %4103
  %4114 = load %struct.regnode** %text_node11, align 8, !dbg !5013
  %4115 = load %struct.regnode** %text_node11, align 8, !dbg !5013
  %4116 = bitcast %struct.regnode* %4115 to %struct.regnode_1*, !dbg !5013
  %4117 = getelementptr inbounds %struct.regnode_1* %4116, i32 0, i32 3, !dbg !5013
  %4118 = load i32* %4117, align 4, !dbg !5013
  %4119 = zext i32 %4118 to i64, !dbg !5013
  %4120 = getelementptr inbounds %struct.regnode* %4114, i64 %4119, !dbg !5013
  br label %4121, !dbg !5013

; <label>:4121                                    ; preds = %4113, %4109
  %4122 = phi %struct.regnode* [ %4112, %4109 ], [ %4120, %4113 ], !dbg !5015
  store %struct.regnode* %4122, %struct.regnode** %text_node11, align 8, !dbg !5016
  br label %4131, !dbg !5016

; <label>:4123                                    ; preds = %4097
  %4124 = load %struct.regnode** %text_node11, align 8, !dbg !5019
  %4125 = getelementptr inbounds %struct.regnode* %4124, i32 0, i32 2, !dbg !5019
  %4126 = load i16* %4125, align 2, !dbg !5019
  %4127 = zext i16 %4126 to i32, !dbg !5019
  %4128 = load %struct.regnode** %text_node11, align 8, !dbg !5019
  %4129 = sext i32 %4127 to i64, !dbg !5019
  %4130 = getelementptr inbounds %struct.regnode* %4128, i64 %4129, !dbg !5019
  store %struct.regnode* %4130, %struct.regnode** %text_node11, align 8, !dbg !5019
  br label %4131

; <label>:4131                                    ; preds = %4123, %4121
  br label %4132

; <label>:4132                                    ; preds = %4131, %4094
  br label %4133

; <label>:4133                                    ; preds = %4132, %4084
  br label %4007, !dbg !5021

; <label>:4134                                    ; preds = %4067
  br label %4135, !dbg !5023

; <label>:4135                                    ; preds = %4134, %3997, %3987
  %4136 = load %struct.regnode** %text_node11, align 8, !dbg !5025
  %4137 = getelementptr inbounds %struct.regnode* %4136, i32 0, i32 1, !dbg !5025
  %4138 = load i8* %4137, align 1, !dbg !5025
  %4139 = zext i8 %4138 to i64, !dbg !5025
  %4140 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4139, !dbg !5025
  %4141 = load i8* %4140, align 1, !dbg !5025
  %4142 = zext i8 %4141 to i32, !dbg !5025
  %4143 = icmp eq i32 %4142, 33, !dbg !5025
  br i1 %4143, label %4154, label %4144, !dbg !5027

; <label>:4144                                    ; preds = %4135
  %4145 = load %struct.regnode** %text_node11, align 8, !dbg !5028
  %4146 = getelementptr inbounds %struct.regnode* %4145, i32 0, i32 1, !dbg !5028
  %4147 = load i8* %4146, align 1, !dbg !5028
  %4148 = zext i8 %4147 to i64, !dbg !5028
  %4149 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4148, !dbg !5028
  %4150 = load i8* %4149, align 1, !dbg !5028
  %4151 = zext i8 %4150 to i32, !dbg !5028
  %4152 = icmp eq i32 %4151, 47, !dbg !5028
  br i1 %4152, label %4154, label %4153, !dbg !5027

; <label>:4153                                    ; preds = %4144
  store i32 -1000, i32* %c2, align 4, !dbg !5030
  store i32 -1000, i32* %c1, align 4, !dbg !5032
  br label %4211, !dbg !5032

; <label>:4154                                    ; preds = %4144, %4135
  %4155 = load %struct.regnode** %text_node11, align 8, !dbg !5033
  %4156 = getelementptr inbounds %struct.regnode* %4155, i32 0, i32 1, !dbg !5033
  %4157 = load i8* %4156, align 1, !dbg !5033
  %4158 = zext i8 %4157 to i64, !dbg !5036
  %4159 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4158, !dbg !5036
  %4160 = load i8* %4159, align 1, !dbg !5036
  %4161 = zext i8 %4160 to i32, !dbg !5036
  %4162 = icmp eq i32 %4161, 47, !dbg !5036
  br i1 %4162, label %4163, label %4164, !dbg !5037

; <label>:4163                                    ; preds = %4154
  store i32 -1000, i32* %c2, align 4, !dbg !5038
  store i32 -1000, i32* %c1, align 4, !dbg !5040
  br label %4215, !dbg !5041

; <label>:4164                                    ; preds = %4154
  %4165 = load %struct.regnode** %text_node11, align 8, !dbg !5042
  %4166 = bitcast %struct.regnode* %4165 to %struct.regnode_string*, !dbg !5042
  %4167 = getelementptr inbounds %struct.regnode_string* %4166, i32 0, i32 3, !dbg !5042
  %4168 = getelementptr inbounds [1 x i8]* %4167, i32 0, i32 0, !dbg !5042
  %4169 = load i8* %4168, align 1, !dbg !5044
  %4170 = zext i8 %4169 to i32, !dbg !5045
  store i32 %4170, i32* %c1, align 4, !dbg !5046
  br label %4171

; <label>:4171                                    ; preds = %4164
  %4172 = load %struct.regnode** %text_node11, align 8, !dbg !5047
  %4173 = getelementptr inbounds %struct.regnode* %4172, i32 0, i32 1, !dbg !5047
  %4174 = load i8* %4173, align 1, !dbg !5047
  %4175 = zext i8 %4174 to i32, !dbg !5047
  %4176 = icmp eq i32 %4175, 34, !dbg !5047
  br i1 %4176, label %4183, label %4177, !dbg !5049

; <label>:4177                                    ; preds = %4171
  %4178 = load %struct.regnode** %text_node11, align 8, !dbg !5050
  %4179 = getelementptr inbounds %struct.regnode* %4178, i32 0, i32 1, !dbg !5050
  %4180 = load i8* %4179, align 1, !dbg !5050
  %4181 = zext i8 %4180 to i32, !dbg !5050
  %4182 = icmp eq i32 %4181, 48, !dbg !5050
  br i1 %4182, label %4183, label %4189, !dbg !5049

; <label>:4183                                    ; preds = %4177, %4171
  %4184 = load i32* %c1, align 4, !dbg !5052
  %4185 = sext i32 %4184 to i64, !dbg !5053
  %4186 = getelementptr inbounds [0 x i8]* @PL_fold, i32 0, i64 %4185, !dbg !5053
  %4187 = load i8* %4186, align 1, !dbg !5053
  %4188 = zext i8 %4187 to i32, !dbg !5053
  store i32 %4188, i32* %c2, align 4, !dbg !5054
  br label %4210, !dbg !5054

; <label>:4189                                    ; preds = %4177
  %4190 = load %struct.regnode** %text_node11, align 8, !dbg !5055
  %4191 = getelementptr inbounds %struct.regnode* %4190, i32 0, i32 1, !dbg !5055
  %4192 = load i8* %4191, align 1, !dbg !5055
  %4193 = zext i8 %4192 to i32, !dbg !5055
  %4194 = icmp eq i32 %4193, 35, !dbg !5055
  br i1 %4194, label %4201, label %4195, !dbg !5057

; <label>:4195                                    ; preds = %4189
  %4196 = load %struct.regnode** %text_node11, align 8, !dbg !5058
  %4197 = getelementptr inbounds %struct.regnode* %4196, i32 0, i32 1, !dbg !5058
  %4198 = load i8* %4197, align 1, !dbg !5058
  %4199 = zext i8 %4198 to i32, !dbg !5058
  %4200 = icmp eq i32 %4199, 49, !dbg !5058
  br i1 %4200, label %4201, label %4207, !dbg !5057

; <label>:4201                                    ; preds = %4195, %4189
  %4202 = load i32* %c1, align 4, !dbg !5060
  %4203 = sext i32 %4202 to i64, !dbg !5061
  %4204 = getelementptr inbounds [0 x i8]* @PL_fold_locale, i32 0, i64 %4203, !dbg !5061
  %4205 = load i8* %4204, align 1, !dbg !5061
  %4206 = zext i8 %4205 to i32, !dbg !5061
  store i32 %4206, i32* %c2, align 4, !dbg !5062
  br label %4209, !dbg !5062

; <label>:4207                                    ; preds = %4195
  %4208 = load i32* %c1, align 4, !dbg !5063
  store i32 %4208, i32* %c2, align 4, !dbg !5064
  br label %4209

; <label>:4209                                    ; preds = %4207, %4201
  br label %4210

; <label>:4210                                    ; preds = %4209, %4183
  br label %4211

; <label>:4211                                    ; preds = %4210, %4153
  br label %4213, !dbg !5065

; <label>:4212                                    ; preds = %3980, %3971
  store i32 -1000, i32* %c2, align 4, !dbg !5066
  store i32 -1000, i32* %c1, align 4, !dbg !5067
  br label %4213

; <label>:4213                                    ; preds = %4212, %4211
  br label %4214, !dbg !5068

; <label>:4214                                    ; preds = %4213, %3903
  br label %4215, !dbg !5069

; <label>:4215                                    ; preds = %4214, %4163
  %4216 = load i32* @PL_savestack_ix, align 4, !dbg !5071
  store i32 %4216, i32* %lastcp10, align 4, !dbg !5071
  br label %4217, !dbg !5072

; <label>:4217                                    ; preds = %4317, %4215
  %4218 = load i32* %n, align 4, !dbg !5073
  %4219 = load i32* %ln, align 4, !dbg !5076
  %4220 = icmp sge i32 %4218, %4219, !dbg !5077
  br i1 %4220, label %4221, label %4320, !dbg !5072

; <label>:4221                                    ; preds = %4217
  %4222 = load i32* %c1, align 4, !dbg !5078
  %4223 = icmp eq i32 %4222, -1000, !dbg !5078
  br i1 %4223, label %4236, label %4224, !dbg !5081

; <label>:4224                                    ; preds = %4221
  %4225 = load i8** @PL_reginput, align 8, !dbg !5082
  %4226 = load i8* %4225, align 1, !dbg !5082
  %4227 = zext i8 %4226 to i32, !dbg !5082
  %4228 = load i32* %c1, align 4, !dbg !5083
  %4229 = icmp eq i32 %4227, %4228, !dbg !5082
  br i1 %4229, label %4236, label %4230, !dbg !5081

; <label>:4230                                    ; preds = %4224
  %4231 = load i8** @PL_reginput, align 8, !dbg !5084
  %4232 = load i8* %4231, align 1, !dbg !5084
  %4233 = zext i8 %4232 to i32, !dbg !5084
  %4234 = load i32* %c2, align 4, !dbg !5085
  %4235 = icmp eq i32 %4233, %4234, !dbg !5084
  br i1 %4235, label %4236, label %4298, !dbg !5081

; <label>:4236                                    ; preds = %4230, %4224, %4221
  %4237 = load i32* %paren, align 4, !dbg !5086
  %4238 = icmp ne i32 %4237, 0, !dbg !5089
  br i1 %4238, label %4239, label %4286, !dbg !5089

; <label>:4239                                    ; preds = %4236
  %4240 = load i32* %n, align 4, !dbg !5090
  %4241 = icmp ne i32 %4240, 0, !dbg !5093
  br i1 %4241, label %4242, label %4280, !dbg !5093

; <label>:4242                                    ; preds = %4239
  %4243 = load i8* @PL_reg_match_utf8, align 1, !dbg !5094
  %4244 = sext i8 %4243 to i32, !dbg !5094
  %4245 = icmp ne i32 %4244, 0, !dbg !5094
  br i1 %4245, label %4246, label %4253, !dbg !5094

; <label>:4246                                    ; preds = %4242
  %4247 = load i8** @PL_reginput, align 8, !dbg !5096
  %4248 = load i32* %l9, align 4, !dbg !5096
  %4249 = sub nsw i32 0, %4248, !dbg !5096
  %4250 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %4247, i32 %4249), !dbg !5096
  %4251 = sext i32 %4250 to i64, !dbg !5096
  %4252 = inttoptr i64 %4251 to i8*, !dbg !5096
  br label %4259, !dbg !5096

; <label>:4253                                    ; preds = %4242
  %4254 = load i8** @PL_reginput, align 8, !dbg !5098
  %4255 = load i32* %l9, align 4, !dbg !5098
  %4256 = sub nsw i32 0, %4255, !dbg !5098
  %4257 = sext i32 %4256 to i64, !dbg !5098
  %4258 = getelementptr inbounds i8* %4254, i64 %4257, !dbg !5098
  br label %4259, !dbg !5098

; <label>:4259                                    ; preds = %4253, %4246
  %4260 = phi i8* [ %4252, %4246 ], [ %4258, %4253 ], !dbg !5094
  %4261 = load i8** @PL_bostr, align 8, !dbg !5100
  %4262 = ptrtoint i8* %4260 to i64, !dbg !5094
  %4263 = ptrtoint i8* %4261 to i64, !dbg !5094
  %4264 = sub i64 %4262, %4263, !dbg !5094
  %4265 = trunc i64 %4264 to i32, !dbg !5094
  %4266 = load i32* %paren, align 4, !dbg !5103
  %4267 = sext i32 %4266 to i64, !dbg !5104
  %4268 = load i32** @PL_regstartp, align 8, !dbg !5104
  %4269 = getelementptr inbounds i32* %4268, i64 %4267, !dbg !5104
  store i32 %4265, i32* %4269, align 4, !dbg !5104
  %4270 = load i8** @PL_reginput, align 8, !dbg !5105
  %4271 = load i8** @PL_bostr, align 8, !dbg !5106
  %4272 = ptrtoint i8* %4270 to i64, !dbg !5105
  %4273 = ptrtoint i8* %4271 to i64, !dbg !5105
  %4274 = sub i64 %4272, %4273, !dbg !5105
  %4275 = trunc i64 %4274 to i32, !dbg !5105
  %4276 = load i32* %paren, align 4, !dbg !5107
  %4277 = sext i32 %4276 to i64, !dbg !5108
  %4278 = load i32** @PL_regendp, align 8, !dbg !5108
  %4279 = getelementptr inbounds i32* %4278, i64 %4277, !dbg !5108
  store i32 %4275, i32* %4279, align 4, !dbg !5108
  br label %4285, !dbg !5109

; <label>:4280                                    ; preds = %4239
  %4281 = load i32* %paren, align 4, !dbg !5110
  %4282 = sext i32 %4281 to i64, !dbg !5111
  %4283 = load i32** @PL_regendp, align 8, !dbg !5111
  %4284 = getelementptr inbounds i32* %4283, i64 %4282, !dbg !5111
  store i32 -1, i32* %4284, align 4, !dbg !5111
  br label %4285

; <label>:4285                                    ; preds = %4280, %4259
  br label %4286, !dbg !5112

; <label>:4286                                    ; preds = %4285, %4236
  %4287 = load %struct.regnode** %next, align 8, !dbg !5113
  %4288 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %4287), !dbg !5115
  %4289 = icmp ne i32 %4288, 0, !dbg !5116
  br i1 %4289, label %4290, label %4291, !dbg !5116

; <label>:4290                                    ; preds = %4286
  br label %6126, !dbg !5117

; <label>:4291                                    ; preds = %4286
  %4292 = load i32* @PL_savestack_ix, align 4, !dbg !5118
  %4293 = load i32* %lastcp10, align 4, !dbg !5118
  %4294 = icmp sgt i32 %4292, %4293, !dbg !5118
  br i1 %4294, label %4295, label %4297, !dbg !5120

; <label>:4295                                    ; preds = %4291
  %4296 = load i32* %lastcp10, align 4, !dbg !5121
  call void @Perl_leave_scope(i32 %4296), !dbg !5121
  br label %4297, !dbg !5121

; <label>:4297                                    ; preds = %4295, %4291
  br label %4298, !dbg !5123

; <label>:4298                                    ; preds = %4297, %4230
  %4299 = load i32* %n, align 4, !dbg !5124
  %4300 = add nsw i32 %4299, -1, !dbg !5124
  store i32 %4300, i32* %n, align 4, !dbg !5124
  %4301 = load i8* @PL_reg_match_utf8, align 1, !dbg !5125
  %4302 = sext i8 %4301 to i32, !dbg !5125
  %4303 = icmp ne i32 %4302, 0, !dbg !5125
  br i1 %4303, label %4304, label %4311, !dbg !5125

; <label>:4304                                    ; preds = %4298
  %4305 = load i8** %locinput, align 8, !dbg !5126
  %4306 = load i32* %l9, align 4, !dbg !5126
  %4307 = sub nsw i32 0, %4306, !dbg !5126
  %4308 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %4305, i32 %4307), !dbg !5126
  %4309 = sext i32 %4308 to i64, !dbg !5126
  %4310 = inttoptr i64 %4309 to i8*, !dbg !5126
  br label %4317, !dbg !5126

; <label>:4311                                    ; preds = %4298
  %4312 = load i8** %locinput, align 8, !dbg !5128
  %4313 = load i32* %l9, align 4, !dbg !5128
  %4314 = sub nsw i32 0, %4313, !dbg !5128
  %4315 = sext i32 %4314 to i64, !dbg !5128
  %4316 = getelementptr inbounds i8* %4312, i64 %4315, !dbg !5128
  br label %4317, !dbg !5128

; <label>:4317                                    ; preds = %4311, %4304
  %4318 = phi i8* [ %4310, %4304 ], [ %4316, %4311 ], !dbg !5125
  store i8* %4318, i8** %locinput, align 8, !dbg !5130
  %4319 = load i8** %locinput, align 8, !dbg !5133
  store i8* %4319, i8** @PL_reginput, align 8, !dbg !5134
  br label %4217, !dbg !5072

; <label>:4320                                    ; preds = %4217
  br label %4321

; <label>:4321                                    ; preds = %4320, %3902
  br label %6127, !dbg !5135

; <label>:4322                                    ; preds = %24
  %4323 = load %struct.regnode** %scan, align 8, !dbg !5136
  %4324 = getelementptr inbounds %struct.regnode* %4323, i32 0, i32 0, !dbg !5136
  %4325 = load i8* %4324, align 1, !dbg !5136
  %4326 = zext i8 %4325 to i32, !dbg !5136
  store i32 %4326, i32* %paren, align 4, !dbg !5137
  %4327 = load i32* %paren, align 4, !dbg !5138
  %4328 = load i32* @PL_regsize, align 4, !dbg !5140
  %4329 = icmp sgt i32 %4327, %4328, !dbg !5138
  br i1 %4329, label %4330, label %4332, !dbg !5141

; <label>:4330                                    ; preds = %4322
  %4331 = load i32* %paren, align 4, !dbg !5142
  store i32 %4331, i32* @PL_regsize, align 4, !dbg !5143
  br label %4332, !dbg !5143

; <label>:4332                                    ; preds = %4330, %4322
  %4333 = load i32* %paren, align 4, !dbg !5144
  %4334 = load i32** @PL_reglastparen, align 8, !dbg !5146
  %4335 = load i32* %4334, align 4, !dbg !5147
  %4336 = icmp sgt i32 %4333, %4335, !dbg !5144
  br i1 %4336, label %4337, label %4340, !dbg !5148

; <label>:4337                                    ; preds = %4332
  %4338 = load i32* %paren, align 4, !dbg !5149
  %4339 = load i32** @PL_reglastparen, align 8, !dbg !5150
  store i32 %4338, i32* %4339, align 4, !dbg !5151
  br label %4340, !dbg !5151

; <label>:4340                                    ; preds = %4337, %4332
  %4341 = load %struct.regnode** %scan, align 8, !dbg !5152
  %4342 = bitcast %struct.regnode* %4341 to %struct.regnode_2*, !dbg !5152
  %4343 = getelementptr inbounds %struct.regnode_2* %4342, i32 0, i32 3, !dbg !5152
  %4344 = load i16* %4343, align 2, !dbg !5152
  %4345 = zext i16 %4344 to i32, !dbg !5152
  store i32 %4345, i32* %ln, align 4, !dbg !5153
  %4346 = load %struct.regnode** %scan, align 8, !dbg !5154
  %4347 = bitcast %struct.regnode* %4346 to %struct.regnode_2*, !dbg !5154
  %4348 = getelementptr inbounds %struct.regnode_2* %4347, i32 0, i32 4, !dbg !5154
  %4349 = load i16* %4348, align 2, !dbg !5154
  %4350 = zext i16 %4349 to i32, !dbg !5154
  store i32 %4350, i32* %n, align 4, !dbg !5155
  %4351 = load %struct.regnode** %scan, align 8, !dbg !5156
  %4352 = getelementptr inbounds %struct.regnode* %4351, i64 1, !dbg !5156
  %4353 = getelementptr inbounds %struct.regnode* %4352, i64 1, !dbg !5156
  %4354 = call %struct.regnode* @Perl_regnext(%struct.regnode* %4353), !dbg !5157
  store %struct.regnode* %4354, %struct.regnode** %scan, align 8, !dbg !5158
  br label %4375, !dbg !5159

; <label>:4355                                    ; preds = %24
  store i32 0, i32* %paren, align 4, !dbg !5160
  %4356 = load %struct.regnode** %scan, align 8, !dbg !5161
  %4357 = bitcast %struct.regnode* %4356 to %struct.regnode_2*, !dbg !5161
  %4358 = getelementptr inbounds %struct.regnode_2* %4357, i32 0, i32 3, !dbg !5161
  %4359 = load i16* %4358, align 2, !dbg !5161
  %4360 = zext i16 %4359 to i32, !dbg !5161
  store i32 %4360, i32* %ln, align 4, !dbg !5162
  %4361 = load %struct.regnode** %scan, align 8, !dbg !5163
  %4362 = bitcast %struct.regnode* %4361 to %struct.regnode_2*, !dbg !5163
  %4363 = getelementptr inbounds %struct.regnode_2* %4362, i32 0, i32 4, !dbg !5163
  %4364 = load i16* %4363, align 2, !dbg !5163
  %4365 = zext i16 %4364 to i32, !dbg !5163
  store i32 %4365, i32* %n, align 4, !dbg !5164
  %4366 = load %struct.regnode** %scan, align 8, !dbg !5165
  %4367 = getelementptr inbounds %struct.regnode* %4366, i64 1, !dbg !5165
  %4368 = getelementptr inbounds %struct.regnode* %4367, i64 1, !dbg !5165
  store %struct.regnode* %4368, %struct.regnode** %scan, align 8, !dbg !5166
  br label %4375, !dbg !5167

; <label>:4369                                    ; preds = %24
  store i32 0, i32* %ln, align 4, !dbg !5168
  store i32 32767, i32* %n, align 4, !dbg !5169
  %4370 = load %struct.regnode** %scan, align 8, !dbg !5170
  %4371 = getelementptr inbounds %struct.regnode* %4370, i64 1, !dbg !5170
  store %struct.regnode* %4371, %struct.regnode** %scan, align 8, !dbg !5171
  store i32 0, i32* %paren, align 4, !dbg !5172
  br label %4375, !dbg !5173

; <label>:4372                                    ; preds = %24
  store i32 1, i32* %ln, align 4, !dbg !5174
  store i32 32767, i32* %n, align 4, !dbg !5175
  %4373 = load %struct.regnode** %scan, align 8, !dbg !5176
  %4374 = getelementptr inbounds %struct.regnode* %4373, i64 1, !dbg !5176
  store %struct.regnode* %4374, %struct.regnode** %scan, align 8, !dbg !5177
  store i32 0, i32* %paren, align 4, !dbg !5178
  br label %4375, !dbg !5178

; <label>:4375                                    ; preds = %4372, %4369, %4355, %4340
  %4376 = load %struct.regnode** %next, align 8, !dbg !5179
  %4377 = getelementptr inbounds %struct.regnode* %4376, i32 0, i32 1, !dbg !5179
  %4378 = load i8* %4377, align 1, !dbg !5179
  %4379 = zext i8 %4378 to i64, !dbg !5179
  %4380 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4379, !dbg !5179
  %4381 = load i8* %4380, align 1, !dbg !5179
  %4382 = zext i8 %4381 to i32, !dbg !5179
  %4383 = icmp eq i32 %4382, 33, !dbg !5179
  br i1 %4383, label %4451, label %4384, !dbg !5181

; <label>:4384                                    ; preds = %4375
  %4385 = load %struct.regnode** %next, align 8, !dbg !5182
  %4386 = getelementptr inbounds %struct.regnode* %4385, i32 0, i32 1, !dbg !5182
  %4387 = load i8* %4386, align 1, !dbg !5182
  %4388 = zext i8 %4387 to i64, !dbg !5182
  %4389 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4388, !dbg !5182
  %4390 = load i8* %4389, align 1, !dbg !5182
  %4391 = zext i8 %4390 to i32, !dbg !5182
  %4392 = icmp eq i32 %4391, 47, !dbg !5182
  br i1 %4392, label %4451, label %4393, !dbg !5181

; <label>:4393                                    ; preds = %4384
  %4394 = load %struct.regnode** %next, align 8, !dbg !5184
  %4395 = getelementptr inbounds %struct.regnode* %4394, i32 0, i32 1, !dbg !5184
  %4396 = load i8* %4395, align 1, !dbg !5184
  %4397 = zext i8 %4396 to i32, !dbg !5184
  %4398 = icmp eq i32 %4397, 45, !dbg !5184
  br i1 %4398, label %4451, label %4399, !dbg !5181

; <label>:4399                                    ; preds = %4393
  %4400 = load %struct.regnode** %next, align 8, !dbg !5186
  %4401 = getelementptr inbounds %struct.regnode* %4400, i32 0, i32 1, !dbg !5186
  %4402 = load i8* %4401, align 1, !dbg !5186
  %4403 = zext i8 %4402 to i32, !dbg !5186
  %4404 = icmp eq i32 %4403, 46, !dbg !5186
  br i1 %4404, label %4451, label %4405, !dbg !5181

; <label>:4405                                    ; preds = %4399
  %4406 = load %struct.regnode** %next, align 8, !dbg !5188
  %4407 = getelementptr inbounds %struct.regnode* %4406, i32 0, i32 1, !dbg !5188
  %4408 = load i8* %4407, align 1, !dbg !5188
  %4409 = zext i8 %4408 to i32, !dbg !5188
  %4410 = icmp eq i32 %4409, 57, !dbg !5188
  br i1 %4410, label %4451, label %4411, !dbg !5181

; <label>:4411                                    ; preds = %4405
  %4412 = load %struct.regnode** %next, align 8, !dbg !5190
  %4413 = getelementptr inbounds %struct.regnode* %4412, i32 0, i32 1, !dbg !5190
  %4414 = load i8* %4413, align 1, !dbg !5190
  %4415 = zext i8 %4414 to i32, !dbg !5190
  %4416 = icmp eq i32 %4415, 52, !dbg !5190
  br i1 %4416, label %4451, label %4417, !dbg !5181

; <label>:4417                                    ; preds = %4411
  %4418 = load %struct.regnode** %next, align 8, !dbg !5192
  %4419 = getelementptr inbounds %struct.regnode* %4418, i32 0, i32 1, !dbg !5192
  %4420 = load i8* %4419, align 1, !dbg !5192
  %4421 = zext i8 %4420 to i32, !dbg !5192
  %4422 = icmp eq i32 %4421, 50, !dbg !5192
  br i1 %4422, label %4451, label %4423, !dbg !5181

; <label>:4423                                    ; preds = %4417
  %4424 = load %struct.regnode** %next, align 8, !dbg !5194
  %4425 = getelementptr inbounds %struct.regnode* %4424, i32 0, i32 1, !dbg !5194
  %4426 = load i8* %4425, align 1, !dbg !5194
  %4427 = zext i8 %4426 to i32, !dbg !5194
  %4428 = icmp eq i32 %4427, 39, !dbg !5194
  br i1 %4428, label %4451, label %4429, !dbg !5181

; <label>:4429                                    ; preds = %4423
  %4430 = load %struct.regnode** %next, align 8, !dbg !5196
  %4431 = getelementptr inbounds %struct.regnode* %4430, i32 0, i32 1, !dbg !5196
  %4432 = load i8* %4431, align 1, !dbg !5196
  %4433 = zext i8 %4432 to i32, !dbg !5196
  %4434 = icmp eq i32 %4433, 58, !dbg !5196
  br i1 %4434, label %4451, label %4435, !dbg !5181

; <label>:4435                                    ; preds = %4429
  %4436 = load %struct.regnode** %next, align 8, !dbg !5198
  %4437 = getelementptr inbounds %struct.regnode* %4436, i32 0, i32 1, !dbg !5198
  %4438 = load i8* %4437, align 1, !dbg !5198
  %4439 = zext i8 %4438 to i64, !dbg !5198
  %4440 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4439, !dbg !5198
  %4441 = load i8* %4440, align 1, !dbg !5198
  %4442 = zext i8 %4441 to i32, !dbg !5198
  %4443 = icmp eq i32 %4442, 40, !dbg !5198
  br i1 %4443, label %4444, label %4839, !dbg !5181

; <label>:4444                                    ; preds = %4435
  %4445 = load %struct.regnode** %next, align 8, !dbg !5200
  %4446 = bitcast %struct.regnode* %4445 to %struct.regnode_2*, !dbg !5200
  %4447 = getelementptr inbounds %struct.regnode_2* %4446, i32 0, i32 3, !dbg !5200
  %4448 = load i16* %4447, align 2, !dbg !5200
  %4449 = zext i16 %4448 to i32, !dbg !5200
  %4450 = icmp sgt i32 %4449, 0, !dbg !5200
  br i1 %4450, label %4451, label %4839, !dbg !5181

; <label>:4451                                    ; preds = %4444, %4429, %4423, %4417, %4411, %4405, %4399, %4393, %4384, %4375
  call void @llvm.dbg.declare(metadata i8** %s12, metadata !5202, metadata !566), !dbg !5204
  call void @llvm.dbg.declare(metadata %struct.regnode** %text_node13, metadata !5205, metadata !566), !dbg !5206
  %4452 = load %struct.regnode** %next, align 8, !dbg !5207
  store %struct.regnode* %4452, %struct.regnode** %text_node13, align 8, !dbg !5206
  %4453 = load %struct.regnode** %text_node13, align 8, !dbg !5208
  %4454 = getelementptr inbounds %struct.regnode* %4453, i32 0, i32 1, !dbg !5208
  %4455 = load i8* %4454, align 1, !dbg !5208
  %4456 = zext i8 %4455 to i64, !dbg !5208
  %4457 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4456, !dbg !5208
  %4458 = load i8* %4457, align 1, !dbg !5208
  %4459 = zext i8 %4458 to i32, !dbg !5208
  %4460 = icmp eq i32 %4459, 33, !dbg !5208
  br i1 %4460, label %4599, label %4461, !dbg !5210

; <label>:4461                                    ; preds = %4451
  %4462 = load %struct.regnode** %text_node13, align 8, !dbg !5211
  %4463 = getelementptr inbounds %struct.regnode* %4462, i32 0, i32 1, !dbg !5211
  %4464 = load i8* %4463, align 1, !dbg !5211
  %4465 = zext i8 %4464 to i64, !dbg !5211
  %4466 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4465, !dbg !5211
  %4467 = load i8* %4466, align 1, !dbg !5211
  %4468 = zext i8 %4467 to i32, !dbg !5211
  %4469 = icmp eq i32 %4468, 47, !dbg !5211
  br i1 %4469, label %4599, label %4470, !dbg !5210

; <label>:4470                                    ; preds = %4461
  br label %4471, !dbg !5213

; <label>:4471                                    ; preds = %4597, %4470
  %4472 = load %struct.regnode** %text_node13, align 8, !dbg !5216
  %4473 = getelementptr inbounds %struct.regnode* %4472, i32 0, i32 1, !dbg !5216
  %4474 = load i8* %4473, align 1, !dbg !5216
  %4475 = zext i8 %4474 to i32, !dbg !5216
  %4476 = icmp eq i32 %4475, 45, !dbg !5216
  br i1 %4476, label %4531, label %4477, !dbg !5216

; <label>:4477                                    ; preds = %4471
  %4478 = load %struct.regnode** %text_node13, align 8, !dbg !5219
  %4479 = getelementptr inbounds %struct.regnode* %4478, i32 0, i32 1, !dbg !5219
  %4480 = load i8* %4479, align 1, !dbg !5219
  %4481 = zext i8 %4480 to i32, !dbg !5219
  %4482 = icmp eq i32 %4481, 46, !dbg !5219
  br i1 %4482, label %4531, label %4483, !dbg !5219

; <label>:4483                                    ; preds = %4477
  %4484 = load %struct.regnode** %text_node13, align 8, !dbg !5221
  %4485 = getelementptr inbounds %struct.regnode* %4484, i32 0, i32 1, !dbg !5221
  %4486 = load i8* %4485, align 1, !dbg !5221
  %4487 = zext i8 %4486 to i32, !dbg !5221
  %4488 = icmp eq i32 %4487, 57, !dbg !5221
  br i1 %4488, label %4531, label %4489, !dbg !5221

; <label>:4489                                    ; preds = %4483
  %4490 = load %struct.regnode** %text_node13, align 8, !dbg !5223
  %4491 = getelementptr inbounds %struct.regnode* %4490, i32 0, i32 1, !dbg !5223
  %4492 = load i8* %4491, align 1, !dbg !5223
  %4493 = zext i8 %4492 to i32, !dbg !5223
  %4494 = icmp eq i32 %4493, 52, !dbg !5223
  br i1 %4494, label %4531, label %4495, !dbg !5223

; <label>:4495                                    ; preds = %4489
  %4496 = load %struct.regnode** %text_node13, align 8, !dbg !5225
  %4497 = getelementptr inbounds %struct.regnode* %4496, i32 0, i32 1, !dbg !5225
  %4498 = load i8* %4497, align 1, !dbg !5225
  %4499 = zext i8 %4498 to i32, !dbg !5225
  %4500 = icmp eq i32 %4499, 50, !dbg !5225
  br i1 %4500, label %4531, label %4501, !dbg !5225

; <label>:4501                                    ; preds = %4495
  %4502 = load %struct.regnode** %text_node13, align 8, !dbg !5227
  %4503 = getelementptr inbounds %struct.regnode* %4502, i32 0, i32 1, !dbg !5227
  %4504 = load i8* %4503, align 1, !dbg !5227
  %4505 = zext i8 %4504 to i32, !dbg !5227
  %4506 = icmp eq i32 %4505, 39, !dbg !5227
  br i1 %4506, label %4531, label %4507, !dbg !5227

; <label>:4507                                    ; preds = %4501
  %4508 = load %struct.regnode** %text_node13, align 8, !dbg !5229
  %4509 = getelementptr inbounds %struct.regnode* %4508, i32 0, i32 1, !dbg !5229
  %4510 = load i8* %4509, align 1, !dbg !5229
  %4511 = zext i8 %4510 to i32, !dbg !5229
  %4512 = icmp eq i32 %4511, 58, !dbg !5229
  br i1 %4512, label %4531, label %4513, !dbg !5229

; <label>:4513                                    ; preds = %4507
  %4514 = load %struct.regnode** %text_node13, align 8, !dbg !5231
  %4515 = getelementptr inbounds %struct.regnode* %4514, i32 0, i32 1, !dbg !5231
  %4516 = load i8* %4515, align 1, !dbg !5231
  %4517 = zext i8 %4516 to i64, !dbg !5231
  %4518 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4517, !dbg !5231
  %4519 = load i8* %4518, align 1, !dbg !5231
  %4520 = zext i8 %4519 to i32, !dbg !5231
  %4521 = icmp eq i32 %4520, 40, !dbg !5231
  br i1 %4521, label %4522, label %4529, !dbg !5231

; <label>:4522                                    ; preds = %4513
  %4523 = load %struct.regnode** %text_node13, align 8, !dbg !5233
  %4524 = bitcast %struct.regnode* %4523 to %struct.regnode_2*, !dbg !5233
  %4525 = getelementptr inbounds %struct.regnode_2* %4524, i32 0, i32 3, !dbg !5233
  %4526 = load i16* %4525, align 2, !dbg !5233
  %4527 = zext i16 %4526 to i32, !dbg !5233
  %4528 = icmp sgt i32 %4527, 0, !dbg !5233
  br label %4529

; <label>:4529                                    ; preds = %4522, %4513
  %4530 = phi i1 [ false, %4513 ], [ %4528, %4522 ]
  br label %4531, !dbg !5235

; <label>:4531                                    ; preds = %4529, %4507, %4501, %4495, %4489, %4483, %4477, %4471
  %4532 = phi i1 [ true, %4507 ], [ true, %4501 ], [ true, %4495 ], [ true, %4489 ], [ true, %4483 ], [ true, %4477 ], [ true, %4471 ], [ %4530, %4529 ]
  br i1 %4532, label %4533, label %4598, !dbg !5237

; <label>:4533                                    ; preds = %4531
  %4534 = load %struct.regnode** %text_node13, align 8, !dbg !5246
  %4535 = getelementptr inbounds %struct.regnode* %4534, i32 0, i32 1, !dbg !5246
  %4536 = load i8* %4535, align 1, !dbg !5246
  %4537 = zext i8 %4536 to i32, !dbg !5246
  %4538 = icmp eq i32 %4537, 52, !dbg !5246
  br i1 %4538, label %4548, label %4539, !dbg !5249

; <label>:4539                                    ; preds = %4533
  %4540 = load %struct.regnode** %text_node13, align 8, !dbg !5250
  %4541 = getelementptr inbounds %struct.regnode* %4540, i32 0, i32 1, !dbg !5250
  %4542 = load i8* %4541, align 1, !dbg !5250
  %4543 = zext i8 %4542 to i64, !dbg !5250
  %4544 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4543, !dbg !5250
  %4545 = load i8* %4544, align 1, !dbg !5250
  %4546 = zext i8 %4545 to i32, !dbg !5250
  %4547 = icmp eq i32 %4546, 40, !dbg !5250
  br i1 %4547, label %4548, label %4552, !dbg !5249

; <label>:4548                                    ; preds = %4539, %4533
  %4549 = load %struct.regnode** %text_node13, align 8, !dbg !5252
  %4550 = getelementptr inbounds %struct.regnode* %4549, i64 1, !dbg !5252
  %4551 = getelementptr inbounds %struct.regnode* %4550, i64 1, !dbg !5252
  store %struct.regnode* %4551, %struct.regnode** %text_node13, align 8, !dbg !5252
  br label %4597, !dbg !5252

; <label>:4552                                    ; preds = %4539
  %4553 = load %struct.regnode** %text_node13, align 8, !dbg !5255
  %4554 = getelementptr inbounds %struct.regnode* %4553, i32 0, i32 1, !dbg !5255
  %4555 = load i8* %4554, align 1, !dbg !5255
  %4556 = zext i8 %4555 to i32, !dbg !5255
  %4557 = icmp eq i32 %4556, 39, !dbg !5255
  br i1 %4557, label %4558, label %4561, !dbg !5258

; <label>:4558                                    ; preds = %4552
  %4559 = load %struct.regnode** %text_node13, align 8, !dbg !5259
  %4560 = getelementptr inbounds %struct.regnode* %4559, i64 1, !dbg !5259
  store %struct.regnode* %4560, %struct.regnode** %text_node13, align 8, !dbg !5259
  br label %4596, !dbg !5259

; <label>:4561                                    ; preds = %4552
  %4562 = load %struct.regnode** %text_node13, align 8, !dbg !5261
  %4563 = getelementptr inbounds %struct.regnode* %4562, i32 0, i32 1, !dbg !5261
  %4564 = load i8* %4563, align 1, !dbg !5261
  %4565 = zext i8 %4564 to i32, !dbg !5261
  %4566 = icmp eq i32 %4565, 50, !dbg !5261
  br i1 %4566, label %4567, label %4587, !dbg !5264

; <label>:4567                                    ; preds = %4561
  %4568 = load %struct.regnode** %text_node13, align 8, !dbg !5265
  %4569 = getelementptr inbounds %struct.regnode* %4568, i32 0, i32 0, !dbg !5265
  %4570 = load i8* %4569, align 1, !dbg !5265
  %4571 = zext i8 %4570 to i32, !dbg !5265
  %4572 = icmp eq i32 %4571, 0, !dbg !5265
  br i1 %4572, label %4573, label %4577, !dbg !5265

; <label>:4573                                    ; preds = %4567
  %4574 = load %struct.regnode** %text_node13, align 8, !dbg !5267
  %4575 = getelementptr inbounds %struct.regnode* %4574, i64 1, !dbg !5267
  %4576 = getelementptr inbounds %struct.regnode* %4575, i64 1, !dbg !5267
  br label %4585, !dbg !5267

; <label>:4577                                    ; preds = %4567
  %4578 = load %struct.regnode** %text_node13, align 8, !dbg !5269
  %4579 = load %struct.regnode** %text_node13, align 8, !dbg !5269
  %4580 = bitcast %struct.regnode* %4579 to %struct.regnode_1*, !dbg !5269
  %4581 = getelementptr inbounds %struct.regnode_1* %4580, i32 0, i32 3, !dbg !5269
  %4582 = load i32* %4581, align 4, !dbg !5269
  %4583 = zext i32 %4582 to i64, !dbg !5269
  %4584 = getelementptr inbounds %struct.regnode* %4578, i64 %4583, !dbg !5269
  br label %4585, !dbg !5269

; <label>:4585                                    ; preds = %4577, %4573
  %4586 = phi %struct.regnode* [ %4576, %4573 ], [ %4584, %4577 ], !dbg !5271
  store %struct.regnode* %4586, %struct.regnode** %text_node13, align 8, !dbg !5272
  br label %4595, !dbg !5272

; <label>:4587                                    ; preds = %4561
  %4588 = load %struct.regnode** %text_node13, align 8, !dbg !5275
  %4589 = getelementptr inbounds %struct.regnode* %4588, i32 0, i32 2, !dbg !5275
  %4590 = load i16* %4589, align 2, !dbg !5275
  %4591 = zext i16 %4590 to i32, !dbg !5275
  %4592 = load %struct.regnode** %text_node13, align 8, !dbg !5275
  %4593 = sext i32 %4591 to i64, !dbg !5275
  %4594 = getelementptr inbounds %struct.regnode* %4592, i64 %4593, !dbg !5275
  store %struct.regnode* %4594, %struct.regnode** %text_node13, align 8, !dbg !5275
  br label %4595

; <label>:4595                                    ; preds = %4587, %4585
  br label %4596

; <label>:4596                                    ; preds = %4595, %4558
  br label %4597

; <label>:4597                                    ; preds = %4596, %4548
  br label %4471, !dbg !5277

; <label>:4598                                    ; preds = %4531
  br label %4599, !dbg !5279

; <label>:4599                                    ; preds = %4598, %4461, %4451
  %4600 = load %struct.regnode** %text_node13, align 8, !dbg !5281
  %4601 = getelementptr inbounds %struct.regnode* %4600, i32 0, i32 1, !dbg !5281
  %4602 = load i8* %4601, align 1, !dbg !5281
  %4603 = zext i8 %4602 to i64, !dbg !5281
  %4604 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4603, !dbg !5281
  %4605 = load i8* %4604, align 1, !dbg !5281
  %4606 = zext i8 %4605 to i32, !dbg !5281
  %4607 = icmp eq i32 %4606, 33, !dbg !5281
  br i1 %4607, label %4618, label %4608, !dbg !5283

; <label>:4608                                    ; preds = %4599
  %4609 = load %struct.regnode** %text_node13, align 8, !dbg !5284
  %4610 = getelementptr inbounds %struct.regnode* %4609, i32 0, i32 1, !dbg !5284
  %4611 = load i8* %4610, align 1, !dbg !5284
  %4612 = zext i8 %4611 to i64, !dbg !5284
  %4613 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4612, !dbg !5284
  %4614 = load i8* %4613, align 1, !dbg !5284
  %4615 = zext i8 %4614 to i32, !dbg !5284
  %4616 = icmp eq i32 %4615, 47, !dbg !5284
  br i1 %4616, label %4618, label %4617, !dbg !5283

; <label>:4617                                    ; preds = %4608
  store i32 -1000, i32* %c2, align 4, !dbg !5286
  store i32 -1000, i32* %c1, align 4, !dbg !5288
  br label %4838, !dbg !5288

; <label>:4618                                    ; preds = %4608, %4599
  %4619 = load %struct.regnode** %text_node13, align 8, !dbg !5289
  %4620 = getelementptr inbounds %struct.regnode* %4619, i32 0, i32 1, !dbg !5289
  %4621 = load i8* %4620, align 1, !dbg !5289
  %4622 = zext i8 %4621 to i64, !dbg !5292
  %4623 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4622, !dbg !5292
  %4624 = load i8* %4623, align 1, !dbg !5292
  %4625 = zext i8 %4624 to i32, !dbg !5292
  %4626 = icmp eq i32 %4625, 47, !dbg !5292
  br i1 %4626, label %4627, label %4628, !dbg !5293

; <label>:4627                                    ; preds = %4618
  store i32 -1000, i32* %c2, align 4, !dbg !5294
  store i32 -1000, i32* %c1, align 4, !dbg !5296
  br label %4841, !dbg !5297

; <label>:4628                                    ; preds = %4618
  %4629 = load %struct.regnode** %text_node13, align 8, !dbg !5298
  %4630 = bitcast %struct.regnode* %4629 to %struct.regnode_string*, !dbg !5298
  %4631 = getelementptr inbounds %struct.regnode_string* %4630, i32 0, i32 3, !dbg !5298
  %4632 = getelementptr inbounds [1 x i8]* %4631, i32 0, i32 0, !dbg !5298
  store i8* %4632, i8** %s12, align 8, !dbg !5300
  br label %4633

; <label>:4633                                    ; preds = %4628
  %4634 = load i32* @PL_reg_flags, align 4, !dbg !5301
  %4635 = and i32 %4634, 8, !dbg !5301
  %4636 = icmp ne i32 %4635, 0, !dbg !5301
  br i1 %4636, label %4678, label %4637, !dbg !5303

; <label>:4637                                    ; preds = %4633
  %4638 = load i8** %s12, align 8, !dbg !5304
  %4639 = load i8* %4638, align 1, !dbg !5306
  %4640 = zext i8 %4639 to i32, !dbg !5306
  store i32 %4640, i32* %c1, align 4, !dbg !5307
  store i32 %4640, i32* %c2, align 4, !dbg !5308
  %4641 = load %struct.regnode** %text_node13, align 8, !dbg !5309
  %4642 = getelementptr inbounds %struct.regnode* %4641, i32 0, i32 1, !dbg !5309
  %4643 = load i8* %4642, align 1, !dbg !5309
  %4644 = zext i8 %4643 to i32, !dbg !5309
  %4645 = icmp eq i32 %4644, 34, !dbg !5309
  br i1 %4645, label %4652, label %4646, !dbg !5311

; <label>:4646                                    ; preds = %4637
  %4647 = load %struct.regnode** %text_node13, align 8, !dbg !5312
  %4648 = getelementptr inbounds %struct.regnode* %4647, i32 0, i32 1, !dbg !5312
  %4649 = load i8* %4648, align 1, !dbg !5312
  %4650 = zext i8 %4649 to i32, !dbg !5312
  %4651 = icmp eq i32 %4650, 48, !dbg !5312
  br i1 %4651, label %4652, label %4658, !dbg !5311

; <label>:4652                                    ; preds = %4646, %4637
  %4653 = load i32* %c1, align 4, !dbg !5314
  %4654 = sext i32 %4653 to i64, !dbg !5315
  %4655 = getelementptr inbounds [0 x i8]* @PL_fold, i32 0, i64 %4654, !dbg !5315
  %4656 = load i8* %4655, align 1, !dbg !5315
  %4657 = zext i8 %4656 to i32, !dbg !5315
  store i32 %4657, i32* %c2, align 4, !dbg !5316
  br label %4677, !dbg !5316

; <label>:4658                                    ; preds = %4646
  %4659 = load %struct.regnode** %text_node13, align 8, !dbg !5317
  %4660 = getelementptr inbounds %struct.regnode* %4659, i32 0, i32 1, !dbg !5317
  %4661 = load i8* %4660, align 1, !dbg !5317
  %4662 = zext i8 %4661 to i32, !dbg !5317
  %4663 = icmp eq i32 %4662, 35, !dbg !5317
  br i1 %4663, label %4670, label %4664, !dbg !5319

; <label>:4664                                    ; preds = %4658
  %4665 = load %struct.regnode** %text_node13, align 8, !dbg !5320
  %4666 = getelementptr inbounds %struct.regnode* %4665, i32 0, i32 1, !dbg !5320
  %4667 = load i8* %4666, align 1, !dbg !5320
  %4668 = zext i8 %4667 to i32, !dbg !5320
  %4669 = icmp eq i32 %4668, 49, !dbg !5320
  br i1 %4669, label %4670, label %4676, !dbg !5319

; <label>:4670                                    ; preds = %4664, %4658
  %4671 = load i32* %c1, align 4, !dbg !5322
  %4672 = sext i32 %4671 to i64, !dbg !5323
  %4673 = getelementptr inbounds [0 x i8]* @PL_fold_locale, i32 0, i64 %4672, !dbg !5323
  %4674 = load i8* %4673, align 1, !dbg !5323
  %4675 = zext i8 %4674 to i32, !dbg !5323
  store i32 %4675, i32* %c2, align 4, !dbg !5324
  br label %4676, !dbg !5324

; <label>:4676                                    ; preds = %4670, %4664
  br label %4677

; <label>:4677                                    ; preds = %4676, %4652
  br label %4837, !dbg !5325

; <label>:4678                                    ; preds = %4633
  %4679 = load %struct.regnode** %text_node13, align 8, !dbg !5326
  %4680 = getelementptr inbounds %struct.regnode* %4679, i32 0, i32 1, !dbg !5326
  %4681 = load i8* %4680, align 1, !dbg !5326
  %4682 = zext i8 %4681 to i32, !dbg !5326
  %4683 = icmp eq i32 %4682, 34, !dbg !5326
  br i1 %4683, label %4690, label %4684, !dbg !5329

; <label>:4684                                    ; preds = %4678
  %4685 = load %struct.regnode** %text_node13, align 8, !dbg !5330
  %4686 = getelementptr inbounds %struct.regnode* %4685, i32 0, i32 1, !dbg !5330
  %4687 = load i8* %4686, align 1, !dbg !5330
  %4688 = zext i8 %4687 to i32, !dbg !5330
  %4689 = icmp eq i32 %4688, 48, !dbg !5330
  br i1 %4689, label %4690, label %4789, !dbg !5329

; <label>:4690                                    ; preds = %4684, %4678
  call void @llvm.dbg.declare(metadata i64* %ulen114, metadata !5332, metadata !566), !dbg !5334
  call void @llvm.dbg.declare(metadata i64* %ulen215, metadata !5335, metadata !566), !dbg !5336
  call void @llvm.dbg.declare(metadata [7 x i8]* %tmpbuf116, metadata !5337, metadata !566), !dbg !5338
  call void @llvm.dbg.declare(metadata [7 x i8]* %tmpbuf217, metadata !5339, metadata !566), !dbg !5340
  %4691 = load i8** %s12, align 8, !dbg !5341
  %4692 = getelementptr inbounds [7 x i8]* %tmpbuf116, i32 0, i32 0, !dbg !5342
  %4693 = call i64 @Perl_to_utf8_lower(i8* %4691, i8* %4692, i64* %ulen114), !dbg !5343
  %4694 = load i8** %s12, align 8, !dbg !5344
  %4695 = getelementptr inbounds [7 x i8]* %tmpbuf217, i32 0, i32 0, !dbg !5345
  %4696 = call i64 @Perl_to_utf8_upper(i8* %4694, i8* %4695, i64* %ulen215), !dbg !5346
  %4697 = getelementptr inbounds [7 x i8]* %tmpbuf116, i32 0, i32 0, !dbg !5347
  %4698 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5348
  %4699 = getelementptr inbounds %struct.cop* %4698, i32 0, i32 14, !dbg !5348
  %4700 = load %struct.sv** %4699, align 8, !dbg !5348
  %4701 = icmp ne %struct.sv* %4700, null, !dbg !5348
  br i1 %4701, label %4702, label %4726, !dbg !5348

; <label>:4702                                    ; preds = %4690
  %4703 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5349
  %4704 = getelementptr inbounds %struct.cop* %4703, i32 0, i32 14, !dbg !5349
  %4705 = load %struct.sv** %4704, align 8, !dbg !5349
  %4706 = icmp ne %struct.sv* %4705, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !5349
  br i1 %4706, label %4707, label %4726, !dbg !5349

; <label>:4707                                    ; preds = %4702
  %4708 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5351
  %4709 = getelementptr inbounds %struct.cop* %4708, i32 0, i32 14, !dbg !5351
  %4710 = load %struct.sv** %4709, align 8, !dbg !5351
  %4711 = icmp eq %struct.sv* %4710, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !5351
  br i1 %4711, label %4738, label %4712, !dbg !5351

; <label>:4712                                    ; preds = %4707
  %4713 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5353
  %4714 = getelementptr inbounds %struct.cop* %4713, i32 0, i32 14, !dbg !5353
  %4715 = load %struct.sv** %4714, align 8, !dbg !5353
  %4716 = getelementptr inbounds %struct.sv* %4715, i32 0, i32 0, !dbg !5353
  %4717 = load i8** %4716, align 8, !dbg !5353
  %4718 = bitcast i8* %4717 to %struct.xpv*, !dbg !5353
  %4719 = getelementptr inbounds %struct.xpv* %4718, i32 0, i32 0, !dbg !5353
  %4720 = load i8** %4719, align 8, !dbg !5353
  %4721 = getelementptr inbounds i8* %4720, i64 11, !dbg !5353
  %4722 = load i8* %4721, align 1, !dbg !5353
  %4723 = sext i8 %4722 to i32, !dbg !5353
  %4724 = and i32 %4723, 1, !dbg !5353
  %4725 = icmp ne i32 %4724, 0, !dbg !5353
  br i1 %4725, label %4738, label %4726, !dbg !5353

; <label>:4726                                    ; preds = %4712, %4702, %4690
  %4727 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5355
  %4728 = getelementptr inbounds %struct.cop* %4727, i32 0, i32 14, !dbg !5355
  %4729 = load %struct.sv** %4728, align 8, !dbg !5355
  %4730 = icmp eq %struct.sv* %4729, null, !dbg !5355
  br i1 %4730, label %4731, label %4736, !dbg !5355

; <label>:4731                                    ; preds = %4726
  %4732 = load i8* @PL_dowarn, align 1, !dbg !5359
  %4733 = zext i8 %4732 to i32, !dbg !5359
  %4734 = and i32 %4733, 1, !dbg !5359
  %4735 = icmp ne i32 %4734, 0, !dbg !5359
  br label %4736

; <label>:4736                                    ; preds = %4731, %4726
  %4737 = phi i1 [ false, %4726 ], [ %4735, %4731 ]
  br label %4738, !dbg !5361

; <label>:4738                                    ; preds = %4736, %4712, %4707
  %4739 = phi i1 [ true, %4712 ], [ true, %4707 ], [ %4737, %4736 ]
  %4740 = select i1 %4739, i32 0, i32 255, !dbg !5363
  %4741 = call i64 @Perl_utf8n_to_uvuni(i8* %4697, i64 13, i64* null, i32 %4740), !dbg !5367
  %4742 = trunc i64 %4741 to i32, !dbg !5367
  store i32 %4742, i32* %c1, align 4, !dbg !5368
  %4743 = getelementptr inbounds [7 x i8]* %tmpbuf217, i32 0, i32 0, !dbg !5369
  %4744 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5370
  %4745 = getelementptr inbounds %struct.cop* %4744, i32 0, i32 14, !dbg !5370
  %4746 = load %struct.sv** %4745, align 8, !dbg !5370
  %4747 = icmp ne %struct.sv* %4746, null, !dbg !5370
  br i1 %4747, label %4748, label %4772, !dbg !5370

; <label>:4748                                    ; preds = %4738
  %4749 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5371
  %4750 = getelementptr inbounds %struct.cop* %4749, i32 0, i32 14, !dbg !5371
  %4751 = load %struct.sv** %4750, align 8, !dbg !5371
  %4752 = icmp ne %struct.sv* %4751, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !5371
  br i1 %4752, label %4753, label %4772, !dbg !5371

; <label>:4753                                    ; preds = %4748
  %4754 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5372
  %4755 = getelementptr inbounds %struct.cop* %4754, i32 0, i32 14, !dbg !5372
  %4756 = load %struct.sv** %4755, align 8, !dbg !5372
  %4757 = icmp eq %struct.sv* %4756, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !5372
  br i1 %4757, label %4784, label %4758, !dbg !5372

; <label>:4758                                    ; preds = %4753
  %4759 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5373
  %4760 = getelementptr inbounds %struct.cop* %4759, i32 0, i32 14, !dbg !5373
  %4761 = load %struct.sv** %4760, align 8, !dbg !5373
  %4762 = getelementptr inbounds %struct.sv* %4761, i32 0, i32 0, !dbg !5373
  %4763 = load i8** %4762, align 8, !dbg !5373
  %4764 = bitcast i8* %4763 to %struct.xpv*, !dbg !5373
  %4765 = getelementptr inbounds %struct.xpv* %4764, i32 0, i32 0, !dbg !5373
  %4766 = load i8** %4765, align 8, !dbg !5373
  %4767 = getelementptr inbounds i8* %4766, i64 11, !dbg !5373
  %4768 = load i8* %4767, align 1, !dbg !5373
  %4769 = sext i8 %4768 to i32, !dbg !5373
  %4770 = and i32 %4769, 1, !dbg !5373
  %4771 = icmp ne i32 %4770, 0, !dbg !5373
  br i1 %4771, label %4784, label %4772, !dbg !5373

; <label>:4772                                    ; preds = %4758, %4748, %4738
  %4773 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5374
  %4774 = getelementptr inbounds %struct.cop* %4773, i32 0, i32 14, !dbg !5374
  %4775 = load %struct.sv** %4774, align 8, !dbg !5374
  %4776 = icmp eq %struct.sv* %4775, null, !dbg !5374
  br i1 %4776, label %4777, label %4782, !dbg !5374

; <label>:4777                                    ; preds = %4772
  %4778 = load i8* @PL_dowarn, align 1, !dbg !5375
  %4779 = zext i8 %4778 to i32, !dbg !5375
  %4780 = and i32 %4779, 1, !dbg !5375
  %4781 = icmp ne i32 %4780, 0, !dbg !5375
  br label %4782

; <label>:4782                                    ; preds = %4777, %4772
  %4783 = phi i1 [ false, %4772 ], [ %4781, %4777 ]
  br label %4784, !dbg !5376

; <label>:4784                                    ; preds = %4782, %4758, %4753
  %4785 = phi i1 [ true, %4758 ], [ true, %4753 ], [ %4783, %4782 ]
  %4786 = select i1 %4785, i32 0, i32 255, !dbg !5377
  %4787 = call i64 @Perl_utf8n_to_uvuni(i8* %4743, i64 13, i64* null, i32 %4786), !dbg !5378
  %4788 = trunc i64 %4787 to i32, !dbg !5378
  store i32 %4788, i32* %c2, align 4, !dbg !5379
  br label %4836, !dbg !5380

; <label>:4789                                    ; preds = %4684
  %4790 = load i8** %s12, align 8, !dbg !5381
  %4791 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5383
  %4792 = getelementptr inbounds %struct.cop* %4791, i32 0, i32 14, !dbg !5383
  %4793 = load %struct.sv** %4792, align 8, !dbg !5383
  %4794 = icmp ne %struct.sv* %4793, null, !dbg !5383
  br i1 %4794, label %4795, label %4819, !dbg !5383

; <label>:4795                                    ; preds = %4789
  %4796 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5384
  %4797 = getelementptr inbounds %struct.cop* %4796, i32 0, i32 14, !dbg !5384
  %4798 = load %struct.sv** %4797, align 8, !dbg !5384
  %4799 = icmp ne %struct.sv* %4798, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !5384
  br i1 %4799, label %4800, label %4819, !dbg !5384

; <label>:4800                                    ; preds = %4795
  %4801 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5386
  %4802 = getelementptr inbounds %struct.cop* %4801, i32 0, i32 14, !dbg !5386
  %4803 = load %struct.sv** %4802, align 8, !dbg !5386
  %4804 = icmp eq %struct.sv* %4803, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !5386
  br i1 %4804, label %4831, label %4805, !dbg !5386

; <label>:4805                                    ; preds = %4800
  %4806 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5388
  %4807 = getelementptr inbounds %struct.cop* %4806, i32 0, i32 14, !dbg !5388
  %4808 = load %struct.sv** %4807, align 8, !dbg !5388
  %4809 = getelementptr inbounds %struct.sv* %4808, i32 0, i32 0, !dbg !5388
  %4810 = load i8** %4809, align 8, !dbg !5388
  %4811 = bitcast i8* %4810 to %struct.xpv*, !dbg !5388
  %4812 = getelementptr inbounds %struct.xpv* %4811, i32 0, i32 0, !dbg !5388
  %4813 = load i8** %4812, align 8, !dbg !5388
  %4814 = getelementptr inbounds i8* %4813, i64 11, !dbg !5388
  %4815 = load i8* %4814, align 1, !dbg !5388
  %4816 = sext i8 %4815 to i32, !dbg !5388
  %4817 = and i32 %4816, 1, !dbg !5388
  %4818 = icmp ne i32 %4817, 0, !dbg !5388
  br i1 %4818, label %4831, label %4819, !dbg !5388

; <label>:4819                                    ; preds = %4805, %4795, %4789
  %4820 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5390
  %4821 = getelementptr inbounds %struct.cop* %4820, i32 0, i32 14, !dbg !5390
  %4822 = load %struct.sv** %4821, align 8, !dbg !5390
  %4823 = icmp eq %struct.sv* %4822, null, !dbg !5390
  br i1 %4823, label %4824, label %4829, !dbg !5390

; <label>:4824                                    ; preds = %4819
  %4825 = load i8* @PL_dowarn, align 1, !dbg !5394
  %4826 = zext i8 %4825 to i32, !dbg !5394
  %4827 = and i32 %4826, 1, !dbg !5394
  %4828 = icmp ne i32 %4827, 0, !dbg !5394
  br label %4829

; <label>:4829                                    ; preds = %4824, %4819
  %4830 = phi i1 [ false, %4819 ], [ %4828, %4824 ]
  br label %4831, !dbg !5396

; <label>:4831                                    ; preds = %4829, %4805, %4800
  %4832 = phi i1 [ true, %4805 ], [ true, %4800 ], [ %4830, %4829 ]
  %4833 = select i1 %4832, i32 0, i32 255, !dbg !5398
  %4834 = call i64 @Perl_utf8n_to_uvuni(i8* %4790, i64 13, i64* null, i32 %4833), !dbg !5402
  %4835 = trunc i64 %4834 to i32, !dbg !5402
  store i32 %4835, i32* %c1, align 4, !dbg !5403
  store i32 %4835, i32* %c2, align 4, !dbg !5404
  br label %4836

; <label>:4836                                    ; preds = %4831, %4784
  br label %4837

; <label>:4837                                    ; preds = %4836, %4677
  br label %4838

; <label>:4838                                    ; preds = %4837, %4617
  br label %4840, !dbg !5405

; <label>:4839                                    ; preds = %4444, %4435
  store i32 -1000, i32* %c2, align 4, !dbg !5406
  store i32 -1000, i32* %c1, align 4, !dbg !5407
  br label %4840

; <label>:4840                                    ; preds = %4839, %4838
  br label %4841, !dbg !5408

; <label>:4841                                    ; preds = %4840, %4627
  %4842 = load i8** %locinput, align 8, !dbg !5409
  store i8* %4842, i8** @PL_reginput, align 8, !dbg !5410
  %4843 = load i32* %minmod, align 4, !dbg !5411
  %4844 = icmp ne i32 %4843, 0, !dbg !5413
  br i1 %4844, label %4845, label %5473, !dbg !5413

; <label>:4845                                    ; preds = %4841
  call void @llvm.dbg.declare(metadata i32* %lastcp18, metadata !5414, metadata !566), !dbg !5416
  store i32 0, i32* %minmod, align 4, !dbg !5417
  %4846 = load i32* %ln, align 4, !dbg !5418
  %4847 = icmp ne i32 %4846, 0, !dbg !5420
  br i1 %4847, label %4848, label %4855, !dbg !5420

; <label>:4848                                    ; preds = %4845
  %4849 = load %struct.regnode** %scan, align 8, !dbg !5421
  %4850 = load i32* %ln, align 4, !dbg !5423
  %4851 = call i32 (%struct.regnode*, i32, ...)* bitcast (i32 (...)* @regrepeat to i32 (%struct.regnode*, i32, ...)*)(%struct.regnode* %4849, i32 %4850), !dbg !5424
  %4852 = load i32* %ln, align 4, !dbg !5425
  %4853 = icmp slt i32 %4851, %4852, !dbg !5424
  br i1 %4853, label %4854, label %4855, !dbg !5420

; <label>:4854                                    ; preds = %4848
  br label %6127, !dbg !5426

; <label>:4855                                    ; preds = %4848, %4845
  %4856 = load i8** @PL_reginput, align 8, !dbg !5427
  store i8* %4856, i8** %locinput, align 8, !dbg !5428
  %4857 = load i32* @PL_savestack_ix, align 4, !dbg !5429
  store i32 %4857, i32* %lastcp18, align 4, !dbg !5429
  %4858 = load i32* %c1, align 4, !dbg !5430
  %4859 = icmp ne i32 %4858, -1000, !dbg !5430
  br i1 %4859, label %4860, label %5237, !dbg !5432

; <label>:4860                                    ; preds = %4855
  call void @llvm.dbg.declare(metadata i8** %e19, metadata !5433, metadata !566), !dbg !5435
  call void @llvm.dbg.declare(metadata i8** %old, metadata !5436, metadata !566), !dbg !5437
  %4861 = load i8** %locinput, align 8, !dbg !5438
  store i8* %4861, i8** %old, align 8, !dbg !5437
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5439, metadata !566), !dbg !5440
  store i32 0, i32* %count, align 4, !dbg !5440
  %4862 = load i32* %n, align 4, !dbg !5441
  %4863 = icmp eq i32 %4862, 32767, !dbg !5441
  br i1 %4863, label %4864, label %4887, !dbg !5443

; <label>:4864                                    ; preds = %4860
  %4865 = load i8** @PL_regeol, align 8, !dbg !5444
  %4866 = getelementptr inbounds i8* %4865, i64 -1, !dbg !5444
  store i8* %4866, i8** %e19, align 8, !dbg !5446
  %4867 = load i8* %do_utf8, align 1, !dbg !5447
  %4868 = icmp ne i8 %4867, 0, !dbg !5449
  br i1 %4868, label %4869, label %4886, !dbg !5449

; <label>:4869                                    ; preds = %4864
  br label %4870, !dbg !5450

; <label>:4870                                    ; preds = %4882, %4869
  %4871 = load i8** %e19, align 8, !dbg !5451
  %4872 = load i8* %4871, align 1, !dbg !5451
  %4873 = zext i8 %4872 to i32, !dbg !5451
  %4874 = icmp sge i32 %4873, 128, !dbg !5451
  br i1 %4874, label %4875, label %4880, !dbg !5451

; <label>:4875                                    ; preds = %4870
  %4876 = load i8** %e19, align 8, !dbg !5454
  %4877 = load i8* %4876, align 1, !dbg !5454
  %4878 = zext i8 %4877 to i32, !dbg !5454
  %4879 = icmp sle i32 %4878, 191, !dbg !5454
  br label %4880

; <label>:4880                                    ; preds = %4875, %4870
  %4881 = phi i1 [ false, %4870 ], [ %4879, %4875 ]
  br i1 %4881, label %4882, label %4885, !dbg !5456

; <label>:4882                                    ; preds = %4880
  %4883 = load i8** %e19, align 8, !dbg !5458
  %4884 = getelementptr inbounds i8* %4883, i32 -1, !dbg !5458
  store i8* %4884, i8** %e19, align 8, !dbg !5458
  br label %4870, !dbg !5450

; <label>:4885                                    ; preds = %4880
  br label %4886, !dbg !5459

; <label>:4886                                    ; preds = %4885, %4864
  br label %4943, !dbg !5461

; <label>:4887                                    ; preds = %4860
  %4888 = load i8* %do_utf8, align 1, !dbg !5462
  %4889 = icmp ne i8 %4888, 0, !dbg !5464
  br i1 %4889, label %4890, label %4926, !dbg !5464

; <label>:4890                                    ; preds = %4887
  call void @llvm.dbg.declare(metadata i32* %m, metadata !5465, metadata !566), !dbg !5467
  %4891 = load i32* %n, align 4, !dbg !5468
  %4892 = load i32* %ln, align 4, !dbg !5469
  %4893 = sub nsw i32 %4891, %4892, !dbg !5468
  store i32 %4893, i32* %m, align 4, !dbg !5467
  %4894 = load i8** %locinput, align 8, !dbg !5470
  store i8* %4894, i8** %e19, align 8, !dbg !5472
  br label %4895, !dbg !5472

; <label>:4895                                    ; preds = %4922, %4890
  %4896 = load i32* %m, align 4, !dbg !5473
  %4897 = icmp sgt i32 %4896, 0, !dbg !5473
  br i1 %4897, label %4898, label %4910, !dbg !5473

; <label>:4898                                    ; preds = %4895
  %4899 = load i8** %e19, align 8, !dbg !5475
  %4900 = load i8** %e19, align 8, !dbg !5477
  %4901 = load i8* %4900, align 1, !dbg !5477
  %4902 = zext i8 %4901 to i64, !dbg !5477
  %4903 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %4902, !dbg !5477
  %4904 = load i8* %4903, align 1, !dbg !5477
  %4905 = zext i8 %4904 to i32, !dbg !5477
  %4906 = sext i32 %4905 to i64, !dbg !5478
  %4907 = getelementptr inbounds i8* %4899, i64 %4906, !dbg !5478
  %4908 = load i8** @PL_regeol, align 8, !dbg !5479
  %4909 = icmp ule i8* %4907, %4908, !dbg !5478
  br label %4910

; <label>:4910                                    ; preds = %4898, %4895
  %4911 = phi i1 [ false, %4895 ], [ %4909, %4898 ]
  br i1 %4911, label %4912, label %4925, !dbg !5480

; <label>:4912                                    ; preds = %4910
  %4913 = load i8** %e19, align 8, !dbg !5481
  %4914 = load i8* %4913, align 1, !dbg !5481
  %4915 = zext i8 %4914 to i64, !dbg !5481
  %4916 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %4915, !dbg !5481
  %4917 = load i8* %4916, align 1, !dbg !5481
  %4918 = zext i8 %4917 to i32, !dbg !5481
  %4919 = load i8** %e19, align 8, !dbg !5482
  %4920 = sext i32 %4918 to i64, !dbg !5482
  %4921 = getelementptr inbounds i8* %4919, i64 %4920, !dbg !5482
  store i8* %4921, i8** %e19, align 8, !dbg !5482
  br label %4922, !dbg !5482

; <label>:4922                                    ; preds = %4912
  %4923 = load i32* %m, align 4, !dbg !5483
  %4924 = add nsw i32 %4923, -1, !dbg !5483
  store i32 %4924, i32* %m, align 4, !dbg !5483
  br label %4895, !dbg !5484

; <label>:4925                                    ; preds = %4910
  br label %4942, !dbg !5485

; <label>:4926                                    ; preds = %4887
  %4927 = load i8** %locinput, align 8, !dbg !5486
  %4928 = load i32* %n, align 4, !dbg !5488
  %4929 = sext i32 %4928 to i64, !dbg !5486
  %4930 = getelementptr inbounds i8* %4927, i64 %4929, !dbg !5486
  %4931 = load i32* %ln, align 4, !dbg !5489
  %4932 = sext i32 %4931 to i64, !dbg !5486
  %4933 = sub i64 0, %4932, !dbg !5486
  %4934 = getelementptr inbounds i8* %4930, i64 %4933, !dbg !5486
  store i8* %4934, i8** %e19, align 8, !dbg !5490
  %4935 = load i8** %e19, align 8, !dbg !5491
  %4936 = load i8** @PL_regeol, align 8, !dbg !5493
  %4937 = icmp uge i8* %4935, %4936, !dbg !5491
  br i1 %4937, label %4938, label %4941, !dbg !5494

; <label>:4938                                    ; preds = %4926
  %4939 = load i8** @PL_regeol, align 8, !dbg !5495
  %4940 = getelementptr inbounds i8* %4939, i64 -1, !dbg !5495
  store i8* %4940, i8** %e19, align 8, !dbg !5496
  br label %4941, !dbg !5496

; <label>:4941                                    ; preds = %4938, %4926
  br label %4942

; <label>:4942                                    ; preds = %4941, %4925
  br label %4943

; <label>:4943                                    ; preds = %4942, %4886
  br label %4944, !dbg !5497

; <label>:4944                                    ; preds = %4943, %5236
  %4945 = load i8* %do_utf8, align 1, !dbg !5498
  %4946 = icmp ne i8 %4945, 0, !dbg !5501
  br i1 %4946, label %4998, label %4947, !dbg !5501

; <label>:4947                                    ; preds = %4944
  %4948 = load i32* %c1, align 4, !dbg !5502
  %4949 = load i32* %c2, align 4, !dbg !5505
  %4950 = icmp eq i32 %4948, %4949, !dbg !5502
  br i1 %4950, label %4951, label %4968, !dbg !5506

; <label>:4951                                    ; preds = %4947
  br label %4952, !dbg !5507

; <label>:4952                                    ; preds = %4964, %4951
  %4953 = load i8** %locinput, align 8, !dbg !5509
  %4954 = load i8** %e19, align 8, !dbg !5512
  %4955 = icmp ule i8* %4953, %4954, !dbg !5513
  br i1 %4955, label %4956, label %4962, !dbg !5513

; <label>:4956                                    ; preds = %4952
  %4957 = load i8** %locinput, align 8, !dbg !5514
  %4958 = load i8* %4957, align 1, !dbg !5514
  %4959 = zext i8 %4958 to i32, !dbg !5514
  %4960 = load i32* %c1, align 4, !dbg !5515
  %4961 = icmp ne i32 %4959, %4960, !dbg !5514
  br label %4962

; <label>:4962                                    ; preds = %4956, %4952
  %4963 = phi i1 [ false, %4952 ], [ %4961, %4956 ]
  br i1 %4963, label %4964, label %4967, !dbg !5516

; <label>:4964                                    ; preds = %4962
  %4965 = load i8** %locinput, align 8, !dbg !5518
  %4966 = getelementptr inbounds i8* %4965, i32 1, !dbg !5518
  store i8* %4966, i8** %locinput, align 8, !dbg !5518
  br label %4952, !dbg !5507

; <label>:4967                                    ; preds = %4962
  br label %4991, !dbg !5519

; <label>:4968                                    ; preds = %4947
  br label %4969, !dbg !5520

; <label>:4969                                    ; preds = %4987, %4968
  %4970 = load i8** %locinput, align 8, !dbg !5522
  %4971 = load i8** %e19, align 8, !dbg !5525
  %4972 = icmp ule i8* %4970, %4971, !dbg !5526
  br i1 %4972, label %4973, label %4985, !dbg !5526

; <label>:4973                                    ; preds = %4969
  %4974 = load i8** %locinput, align 8, !dbg !5527
  %4975 = load i8* %4974, align 1, !dbg !5527
  %4976 = zext i8 %4975 to i32, !dbg !5527
  %4977 = load i32* %c1, align 4, !dbg !5528
  %4978 = icmp ne i32 %4976, %4977, !dbg !5527
  br i1 %4978, label %4979, label %4985, !dbg !5526

; <label>:4979                                    ; preds = %4973
  %4980 = load i8** %locinput, align 8, !dbg !5529
  %4981 = load i8* %4980, align 1, !dbg !5529
  %4982 = zext i8 %4981 to i32, !dbg !5529
  %4983 = load i32* %c2, align 4, !dbg !5530
  %4984 = icmp ne i32 %4982, %4983, !dbg !5529
  br label %4985

; <label>:4985                                    ; preds = %4979, %4973, %4969
  %4986 = phi i1 [ false, %4973 ], [ false, %4969 ], [ %4984, %4979 ]
  br i1 %4986, label %4987, label %4990, !dbg !5531

; <label>:4987                                    ; preds = %4985
  %4988 = load i8** %locinput, align 8, !dbg !5534
  %4989 = getelementptr inbounds i8* %4988, i32 1, !dbg !5534
  store i8* %4989, i8** %locinput, align 8, !dbg !5534
  br label %4969, !dbg !5520

; <label>:4990                                    ; preds = %4985
  br label %4991

; <label>:4991                                    ; preds = %4990, %4967
  %4992 = load i8** %locinput, align 8, !dbg !5535
  %4993 = load i8** %old, align 8, !dbg !5536
  %4994 = ptrtoint i8* %4992 to i64, !dbg !5535
  %4995 = ptrtoint i8* %4993 to i64, !dbg !5535
  %4996 = sub i64 %4994, %4995, !dbg !5535
  %4997 = trunc i64 %4996 to i32, !dbg !5535
  store i32 %4997, i32* %count, align 4, !dbg !5537
  br label %5134, !dbg !5538

; <label>:4998                                    ; preds = %4944
  call void @llvm.dbg.declare(metadata i64* %len20, metadata !5539, metadata !566), !dbg !5541
  %4999 = load i32* %c1, align 4, !dbg !5542
  %5000 = load i32* %c2, align 4, !dbg !5544
  %5001 = icmp eq i32 %4999, %5000, !dbg !5542
  br i1 %5001, label %5002, label %5065, !dbg !5545

; <label>:5002                                    ; preds = %4998
  br label %5003, !dbg !5546

; <label>:5003                                    ; preds = %5058, %5002
  %5004 = load i8** %locinput, align 8, !dbg !5548
  %5005 = load i8** %e19, align 8, !dbg !5551
  %5006 = icmp ule i8* %5004, %5005, !dbg !5552
  br i1 %5006, label %5007, label %5056, !dbg !5552

; <label>:5007                                    ; preds = %5003
  %5008 = load i8** %locinput, align 8, !dbg !5553
  %5009 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5554
  %5010 = getelementptr inbounds %struct.cop* %5009, i32 0, i32 14, !dbg !5554
  %5011 = load %struct.sv** %5010, align 8, !dbg !5554
  %5012 = icmp ne %struct.sv* %5011, null, !dbg !5554
  br i1 %5012, label %5013, label %5037, !dbg !5554

; <label>:5013                                    ; preds = %5007
  %5014 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5555
  %5015 = getelementptr inbounds %struct.cop* %5014, i32 0, i32 14, !dbg !5555
  %5016 = load %struct.sv** %5015, align 8, !dbg !5555
  %5017 = icmp ne %struct.sv* %5016, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !5555
  br i1 %5017, label %5018, label %5037, !dbg !5555

; <label>:5018                                    ; preds = %5013
  %5019 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5556
  %5020 = getelementptr inbounds %struct.cop* %5019, i32 0, i32 14, !dbg !5556
  %5021 = load %struct.sv** %5020, align 8, !dbg !5556
  %5022 = icmp eq %struct.sv* %5021, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !5556
  br i1 %5022, label %5049, label %5023, !dbg !5556

; <label>:5023                                    ; preds = %5018
  %5024 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5558
  %5025 = getelementptr inbounds %struct.cop* %5024, i32 0, i32 14, !dbg !5558
  %5026 = load %struct.sv** %5025, align 8, !dbg !5558
  %5027 = getelementptr inbounds %struct.sv* %5026, i32 0, i32 0, !dbg !5558
  %5028 = load i8** %5027, align 8, !dbg !5558
  %5029 = bitcast i8* %5028 to %struct.xpv*, !dbg !5558
  %5030 = getelementptr inbounds %struct.xpv* %5029, i32 0, i32 0, !dbg !5558
  %5031 = load i8** %5030, align 8, !dbg !5558
  %5032 = getelementptr inbounds i8* %5031, i64 11, !dbg !5558
  %5033 = load i8* %5032, align 1, !dbg !5558
  %5034 = sext i8 %5033 to i32, !dbg !5558
  %5035 = and i32 %5034, 1, !dbg !5558
  %5036 = icmp ne i32 %5035, 0, !dbg !5558
  br i1 %5036, label %5049, label %5037, !dbg !5558

; <label>:5037                                    ; preds = %5023, %5013, %5007
  %5038 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5560
  %5039 = getelementptr inbounds %struct.cop* %5038, i32 0, i32 14, !dbg !5560
  %5040 = load %struct.sv** %5039, align 8, !dbg !5560
  %5041 = icmp eq %struct.sv* %5040, null, !dbg !5560
  br i1 %5041, label %5042, label %5047, !dbg !5560

; <label>:5042                                    ; preds = %5037
  %5043 = load i8* @PL_dowarn, align 1, !dbg !5564
  %5044 = zext i8 %5043 to i32, !dbg !5564
  %5045 = and i32 %5044, 1, !dbg !5564
  %5046 = icmp ne i32 %5045, 0, !dbg !5564
  br label %5047

; <label>:5047                                    ; preds = %5042, %5037
  %5048 = phi i1 [ false, %5037 ], [ %5046, %5042 ]
  br label %5049, !dbg !5566

; <label>:5049                                    ; preds = %5047, %5023, %5018
  %5050 = phi i1 [ true, %5023 ], [ true, %5018 ], [ %5048, %5047 ]
  %5051 = select i1 %5050, i32 0, i32 255, !dbg !5568
  %5052 = call i64 @Perl_utf8n_to_uvuni(i8* %5008, i64 13, i64* %len20, i32 %5051), !dbg !5572
  %5053 = load i32* %c1, align 4, !dbg !5573
  %5054 = sext i32 %5053 to i64, !dbg !5574
  %5055 = icmp ne i64 %5052, %5054, !dbg !5572
  br label %5056

; <label>:5056                                    ; preds = %5049, %5003
  %5057 = phi i1 [ false, %5003 ], [ %5055, %5049 ]
  br i1 %5057, label %5058, label %5064, !dbg !5575

; <label>:5058                                    ; preds = %5056
  %5059 = load i64* %len20, align 8, !dbg !5576
  %5060 = load i8** %locinput, align 8, !dbg !5578
  %5061 = getelementptr inbounds i8* %5060, i64 %5059, !dbg !5578
  store i8* %5061, i8** %locinput, align 8, !dbg !5578
  %5062 = load i32* %count, align 4, !dbg !5579
  %5063 = add nsw i32 %5062, 1, !dbg !5579
  store i32 %5063, i32* %count, align 4, !dbg !5579
  br label %5003, !dbg !5546

; <label>:5064                                    ; preds = %5056
  br label %5133, !dbg !5580

; <label>:5065                                    ; preds = %4998
  br label %5066, !dbg !5581

; <label>:5066                                    ; preds = %5126, %5065
  %5067 = load i8** %locinput, align 8, !dbg !5583
  %5068 = load i8** %e19, align 8, !dbg !5586
  %5069 = icmp ule i8* %5067, %5068, !dbg !5587
  br i1 %5069, label %5070, label %5132, !dbg !5581

; <label>:5070                                    ; preds = %5066
  call void @llvm.dbg.declare(metadata i64* %c, metadata !5588, metadata !566), !dbg !5590
  %5071 = load i8** %locinput, align 8, !dbg !5591
  %5072 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5592
  %5073 = getelementptr inbounds %struct.cop* %5072, i32 0, i32 14, !dbg !5592
  %5074 = load %struct.sv** %5073, align 8, !dbg !5592
  %5075 = icmp ne %struct.sv* %5074, null, !dbg !5592
  br i1 %5075, label %5076, label %5100, !dbg !5592

; <label>:5076                                    ; preds = %5070
  %5077 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5593
  %5078 = getelementptr inbounds %struct.cop* %5077, i32 0, i32 14, !dbg !5593
  %5079 = load %struct.sv** %5078, align 8, !dbg !5593
  %5080 = icmp ne %struct.sv* %5079, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !5593
  br i1 %5080, label %5081, label %5100, !dbg !5593

; <label>:5081                                    ; preds = %5076
  %5082 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5595
  %5083 = getelementptr inbounds %struct.cop* %5082, i32 0, i32 14, !dbg !5595
  %5084 = load %struct.sv** %5083, align 8, !dbg !5595
  %5085 = icmp eq %struct.sv* %5084, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !5595
  br i1 %5085, label %5112, label %5086, !dbg !5595

; <label>:5086                                    ; preds = %5081
  %5087 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5597
  %5088 = getelementptr inbounds %struct.cop* %5087, i32 0, i32 14, !dbg !5597
  %5089 = load %struct.sv** %5088, align 8, !dbg !5597
  %5090 = getelementptr inbounds %struct.sv* %5089, i32 0, i32 0, !dbg !5597
  %5091 = load i8** %5090, align 8, !dbg !5597
  %5092 = bitcast i8* %5091 to %struct.xpv*, !dbg !5597
  %5093 = getelementptr inbounds %struct.xpv* %5092, i32 0, i32 0, !dbg !5597
  %5094 = load i8** %5093, align 8, !dbg !5597
  %5095 = getelementptr inbounds i8* %5094, i64 11, !dbg !5597
  %5096 = load i8* %5095, align 1, !dbg !5597
  %5097 = sext i8 %5096 to i32, !dbg !5597
  %5098 = and i32 %5097, 1, !dbg !5597
  %5099 = icmp ne i32 %5098, 0, !dbg !5597
  br i1 %5099, label %5112, label %5100, !dbg !5597

; <label>:5100                                    ; preds = %5086, %5076, %5070
  %5101 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5599
  %5102 = getelementptr inbounds %struct.cop* %5101, i32 0, i32 14, !dbg !5599
  %5103 = load %struct.sv** %5102, align 8, !dbg !5599
  %5104 = icmp eq %struct.sv* %5103, null, !dbg !5599
  br i1 %5104, label %5105, label %5110, !dbg !5599

; <label>:5105                                    ; preds = %5100
  %5106 = load i8* @PL_dowarn, align 1, !dbg !5603
  %5107 = zext i8 %5106 to i32, !dbg !5603
  %5108 = and i32 %5107, 1, !dbg !5603
  %5109 = icmp ne i32 %5108, 0, !dbg !5603
  br label %5110

; <label>:5110                                    ; preds = %5105, %5100
  %5111 = phi i1 [ false, %5100 ], [ %5109, %5105 ]
  br label %5112, !dbg !5605

; <label>:5112                                    ; preds = %5110, %5086, %5081
  %5113 = phi i1 [ true, %5086 ], [ true, %5081 ], [ %5111, %5110 ]
  %5114 = select i1 %5113, i32 0, i32 255, !dbg !5607
  %5115 = call i64 @Perl_utf8n_to_uvuni(i8* %5071, i64 13, i64* %len20, i32 %5114), !dbg !5611
  store i64 %5115, i64* %c, align 8, !dbg !5590
  %5116 = load i64* %c, align 8, !dbg !5612
  %5117 = load i32* %c1, align 4, !dbg !5614
  %5118 = sext i32 %5117 to i64, !dbg !5615
  %5119 = icmp eq i64 %5116, %5118, !dbg !5612
  br i1 %5119, label %5125, label %5120, !dbg !5616

; <label>:5120                                    ; preds = %5112
  %5121 = load i64* %c, align 8, !dbg !5617
  %5122 = load i32* %c2, align 4, !dbg !5619
  %5123 = sext i32 %5122 to i64, !dbg !5620
  %5124 = icmp eq i64 %5121, %5123, !dbg !5621
  br i1 %5124, label %5125, label %5126, !dbg !5616

; <label>:5125                                    ; preds = %5120, %5112
  br label %5132, !dbg !5622

; <label>:5126                                    ; preds = %5120
  %5127 = load i64* %len20, align 8, !dbg !5623
  %5128 = load i8** %locinput, align 8, !dbg !5624
  %5129 = getelementptr inbounds i8* %5128, i64 %5127, !dbg !5624
  store i8* %5129, i8** %locinput, align 8, !dbg !5624
  %5130 = load i32* %count, align 4, !dbg !5625
  %5131 = add nsw i32 %5130, 1, !dbg !5625
  store i32 %5131, i32* %count, align 4, !dbg !5625
  br label %5066, !dbg !5581

; <label>:5132                                    ; preds = %5125, %5066
  br label %5133

; <label>:5133                                    ; preds = %5132, %5064
  br label %5134

; <label>:5134                                    ; preds = %5133, %4991
  %5135 = load i8** %locinput, align 8, !dbg !5626
  %5136 = load i8** %e19, align 8, !dbg !5628
  %5137 = icmp ugt i8* %5135, %5136, !dbg !5626
  br i1 %5137, label %5138, label %5139, !dbg !5629

; <label>:5138                                    ; preds = %5134
  br label %6127, !dbg !5630

; <label>:5139                                    ; preds = %5134
  %5140 = load i8** %locinput, align 8, !dbg !5631
  %5141 = load i8** %old, align 8, !dbg !5633
  %5142 = icmp ne i8* %5140, %5141, !dbg !5631
  br i1 %5142, label %5143, label %5151, !dbg !5634

; <label>:5143                                    ; preds = %5139
  store i32 1, i32* %ln, align 4, !dbg !5635
  %5144 = load %struct.regnode** %scan, align 8, !dbg !5637
  %5145 = load i32* %count, align 4, !dbg !5639
  %5146 = call i32 (%struct.regnode*, i32, ...)* bitcast (i32 (...)* @regrepeat to i32 (%struct.regnode*, i32, ...)*)(%struct.regnode* %5144, i32 %5145), !dbg !5640
  %5147 = load i32* %count, align 4, !dbg !5641
  %5148 = icmp slt i32 %5146, %5147, !dbg !5640
  br i1 %5148, label %5149, label %5150, !dbg !5642

; <label>:5149                                    ; preds = %5143
  br label %6127, !dbg !5643

; <label>:5150                                    ; preds = %5143
  br label %5151, !dbg !5644

; <label>:5151                                    ; preds = %5150, %5139
  %5152 = load i32* %paren, align 4, !dbg !5645
  %5153 = icmp ne i32 %5152, 0, !dbg !5648
  br i1 %5153, label %5154, label %5196, !dbg !5648

; <label>:5154                                    ; preds = %5151
  %5155 = load i32* %ln, align 4, !dbg !5649
  %5156 = icmp ne i32 %5155, 0, !dbg !5653
  br i1 %5156, label %5157, label %5190, !dbg !5653

; <label>:5157                                    ; preds = %5154
  %5158 = load i8* @PL_reg_match_utf8, align 1, !dbg !5654
  %5159 = sext i8 %5158 to i32, !dbg !5654
  %5160 = icmp ne i32 %5159, 0, !dbg !5654
  br i1 %5160, label %5161, label %5166, !dbg !5654

; <label>:5161                                    ; preds = %5157
  %5162 = load i8** %locinput, align 8, !dbg !5657
  %5163 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %5162, i32 -1), !dbg !5657
  %5164 = sext i32 %5163 to i64, !dbg !5657
  %5165 = inttoptr i64 %5164 to i8*, !dbg !5657
  br label %5169, !dbg !5657

; <label>:5166                                    ; preds = %5157
  %5167 = load i8** %locinput, align 8, !dbg !5659
  %5168 = getelementptr inbounds i8* %5167, i64 -1, !dbg !5659
  br label %5169, !dbg !5659

; <label>:5169                                    ; preds = %5166, %5161
  %5170 = phi i8* [ %5165, %5161 ], [ %5168, %5166 ], !dbg !5661
  %5171 = load i8** @PL_bostr, align 8, !dbg !5662
  %5172 = ptrtoint i8* %5170 to i64, !dbg !5662
  %5173 = ptrtoint i8* %5171 to i64, !dbg !5662
  %5174 = sub i64 %5172, %5173, !dbg !5662
  %5175 = trunc i64 %5174 to i32, !dbg !5662
  %5176 = load i32* %paren, align 4, !dbg !5662
  %5177 = sext i32 %5176 to i64, !dbg !5662
  %5178 = load i32** @PL_regstartp, align 8, !dbg !5662
  %5179 = getelementptr inbounds i32* %5178, i64 %5177, !dbg !5662
  store i32 %5175, i32* %5179, align 4, !dbg !5662
  %5180 = load i8** %locinput, align 8, !dbg !5662
  %5181 = load i8** @PL_bostr, align 8, !dbg !5662
  %5182 = ptrtoint i8* %5180 to i64, !dbg !5662
  %5183 = ptrtoint i8* %5181 to i64, !dbg !5662
  %5184 = sub i64 %5182, %5183, !dbg !5662
  %5185 = trunc i64 %5184 to i32, !dbg !5662
  %5186 = load i32* %paren, align 4, !dbg !5662
  %5187 = sext i32 %5186 to i64, !dbg !5662
  %5188 = load i32** @PL_regendp, align 8, !dbg !5662
  %5189 = getelementptr inbounds i32* %5188, i64 %5187, !dbg !5662
  store i32 %5185, i32* %5189, align 4, !dbg !5662
  br label %5195, !dbg !5662

; <label>:5190                                    ; preds = %5154
  %5191 = load i32* %paren, align 4, !dbg !5665
  %5192 = sext i32 %5191 to i64, !dbg !5665
  %5193 = load i32** @PL_regendp, align 8, !dbg !5665
  %5194 = getelementptr inbounds i32* %5193, i64 %5192, !dbg !5665
  store i32 -1, i32* %5194, align 4, !dbg !5665
  br label %5195

; <label>:5195                                    ; preds = %5190, %5169
  br label %5196, !dbg !5667

; <label>:5196                                    ; preds = %5195, %5151
  %5197 = load %struct.regnode** %next, align 8, !dbg !5669
  %5198 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %5197), !dbg !5669
  %5199 = icmp ne i32 %5198, 0, !dbg !5648
  br i1 %5199, label %5200, label %5201, !dbg !5648

; <label>:5200                                    ; preds = %5196
  br label %6126, !dbg !5673

; <label>:5201                                    ; preds = %5196
  %5202 = load i32* %paren, align 4, !dbg !5675
  %5203 = icmp ne i32 %5202, 0, !dbg !5648
  br i1 %5203, label %5204, label %5212, !dbg !5648

; <label>:5204                                    ; preds = %5201
  %5205 = load i32* %ln, align 4, !dbg !5678
  %5206 = icmp ne i32 %5205, 0, !dbg !5648
  br i1 %5206, label %5207, label %5212, !dbg !5648

; <label>:5207                                    ; preds = %5204
  %5208 = load i32* %paren, align 4, !dbg !5680
  %5209 = sext i32 %5208 to i64, !dbg !5680
  %5210 = load i32** @PL_regendp, align 8, !dbg !5680
  %5211 = getelementptr inbounds i32* %5210, i64 %5209, !dbg !5680
  store i32 -1, i32* %5211, align 4, !dbg !5680
  br label %5212, !dbg !5680

; <label>:5212                                    ; preds = %5207, %5204, %5201
  %5213 = load i8** %locinput, align 8, !dbg !5682
  store i8* %5213, i8** @PL_reginput, align 8, !dbg !5683
  %5214 = load i32* @PL_savestack_ix, align 4, !dbg !5684
  %5215 = load i32* %lastcp18, align 4, !dbg !5684
  %5216 = icmp sgt i32 %5214, %5215, !dbg !5684
  br i1 %5216, label %5217, label %5219, !dbg !5686

; <label>:5217                                    ; preds = %5212
  %5218 = load i32* %lastcp18, align 4, !dbg !5687
  call void @Perl_leave_scope(i32 %5218), !dbg !5687
  br label %5219, !dbg !5687

; <label>:5219                                    ; preds = %5217, %5212
  %5220 = load i8** %locinput, align 8, !dbg !5689
  store i8* %5220, i8** %old, align 8, !dbg !5690
  %5221 = load i8* %do_utf8, align 1, !dbg !5691
  %5222 = icmp ne i8 %5221, 0, !dbg !5693
  br i1 %5222, label %5223, label %5233, !dbg !5693

; <label>:5223                                    ; preds = %5219
  %5224 = load i8** %locinput, align 8, !dbg !5694
  %5225 = load i8* %5224, align 1, !dbg !5694
  %5226 = zext i8 %5225 to i64, !dbg !5694
  %5227 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %5226, !dbg !5694
  %5228 = load i8* %5227, align 1, !dbg !5694
  %5229 = zext i8 %5228 to i32, !dbg !5694
  %5230 = load i8** %locinput, align 8, !dbg !5695
  %5231 = sext i32 %5229 to i64, !dbg !5695
  %5232 = getelementptr inbounds i8* %5230, i64 %5231, !dbg !5695
  store i8* %5232, i8** %locinput, align 8, !dbg !5695
  br label %5236, !dbg !5695

; <label>:5233                                    ; preds = %5219
  %5234 = load i8** %locinput, align 8, !dbg !5696
  %5235 = getelementptr inbounds i8* %5234, i32 1, !dbg !5696
  store i8* %5235, i8** %locinput, align 8, !dbg !5696
  br label %5236

; <label>:5236                                    ; preds = %5233, %5223
  store i32 1, i32* %count, align 4, !dbg !5697
  br label %4944, !dbg !5497

; <label>:5237                                    ; preds = %4855
  br label %5238, !dbg !5698

; <label>:5238                                    ; preds = %5470, %5237
  %5239 = load i32* %n, align 4, !dbg !5699
  %5240 = load i32* %ln, align 4, !dbg !5702
  %5241 = icmp sge i32 %5239, %5240, !dbg !5703
  br i1 %5241, label %5250, label %5242, !dbg !5703

; <label>:5242                                    ; preds = %5238
  %5243 = load i32* %n, align 4, !dbg !5704
  %5244 = icmp eq i32 %5243, 32767, !dbg !5704
  br i1 %5244, label %5245, label %5248, !dbg !5704

; <label>:5245                                    ; preds = %5242
  %5246 = load i32* %ln, align 4, !dbg !5706
  %5247 = icmp sgt i32 %5246, 0, !dbg !5706
  br label %5248

; <label>:5248                                    ; preds = %5245, %5242
  %5249 = phi i1 [ false, %5242 ], [ %5247, %5245 ]
  br label %5250, !dbg !5708

; <label>:5250                                    ; preds = %5248, %5238
  %5251 = phi i1 [ true, %5238 ], [ %5249, %5248 ]
  br i1 %5251, label %5252, label %5471, !dbg !5710

; <label>:5252                                    ; preds = %5250
  call void @llvm.dbg.declare(metadata i64* %c21, metadata !5713, metadata !566), !dbg !5715
  %5253 = load i32* %c1, align 4, !dbg !5716
  %5254 = icmp ne i32 %5253, -1000, !dbg !5716
  br i1 %5254, label %5255, label %5388, !dbg !5718

; <label>:5255                                    ; preds = %5252
  %5256 = load i8* %do_utf8, align 1, !dbg !5719
  %5257 = icmp ne i8 %5256, 0, !dbg !5722
  br i1 %5257, label %5258, label %5304, !dbg !5722

; <label>:5258                                    ; preds = %5255
  %5259 = load i8** @PL_reginput, align 8, !dbg !5723
  %5260 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5724
  %5261 = getelementptr inbounds %struct.cop* %5260, i32 0, i32 14, !dbg !5724
  %5262 = load %struct.sv** %5261, align 8, !dbg !5724
  %5263 = icmp ne %struct.sv* %5262, null, !dbg !5724
  br i1 %5263, label %5264, label %5288, !dbg !5724

; <label>:5264                                    ; preds = %5258
  %5265 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5725
  %5266 = getelementptr inbounds %struct.cop* %5265, i32 0, i32 14, !dbg !5725
  %5267 = load %struct.sv** %5266, align 8, !dbg !5725
  %5268 = icmp ne %struct.sv* %5267, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !5725
  br i1 %5268, label %5269, label %5288, !dbg !5725

; <label>:5269                                    ; preds = %5264
  %5270 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5727
  %5271 = getelementptr inbounds %struct.cop* %5270, i32 0, i32 14, !dbg !5727
  %5272 = load %struct.sv** %5271, align 8, !dbg !5727
  %5273 = icmp eq %struct.sv* %5272, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !5727
  br i1 %5273, label %5300, label %5274, !dbg !5727

; <label>:5274                                    ; preds = %5269
  %5275 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5729
  %5276 = getelementptr inbounds %struct.cop* %5275, i32 0, i32 14, !dbg !5729
  %5277 = load %struct.sv** %5276, align 8, !dbg !5729
  %5278 = getelementptr inbounds %struct.sv* %5277, i32 0, i32 0, !dbg !5729
  %5279 = load i8** %5278, align 8, !dbg !5729
  %5280 = bitcast i8* %5279 to %struct.xpv*, !dbg !5729
  %5281 = getelementptr inbounds %struct.xpv* %5280, i32 0, i32 0, !dbg !5729
  %5282 = load i8** %5281, align 8, !dbg !5729
  %5283 = getelementptr inbounds i8* %5282, i64 11, !dbg !5729
  %5284 = load i8* %5283, align 1, !dbg !5729
  %5285 = sext i8 %5284 to i32, !dbg !5729
  %5286 = and i32 %5285, 1, !dbg !5729
  %5287 = icmp ne i32 %5286, 0, !dbg !5729
  br i1 %5287, label %5300, label %5288, !dbg !5729

; <label>:5288                                    ; preds = %5274, %5264, %5258
  %5289 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5731
  %5290 = getelementptr inbounds %struct.cop* %5289, i32 0, i32 14, !dbg !5731
  %5291 = load %struct.sv** %5290, align 8, !dbg !5731
  %5292 = icmp eq %struct.sv* %5291, null, !dbg !5731
  br i1 %5292, label %5293, label %5298, !dbg !5731

; <label>:5293                                    ; preds = %5288
  %5294 = load i8* @PL_dowarn, align 1, !dbg !5735
  %5295 = zext i8 %5294 to i32, !dbg !5735
  %5296 = and i32 %5295, 1, !dbg !5735
  %5297 = icmp ne i32 %5296, 0, !dbg !5735
  br label %5298

; <label>:5298                                    ; preds = %5293, %5288
  %5299 = phi i1 [ false, %5288 ], [ %5297, %5293 ]
  br label %5300, !dbg !5737

; <label>:5300                                    ; preds = %5298, %5274, %5269
  %5301 = phi i1 [ true, %5274 ], [ true, %5269 ], [ %5299, %5298 ]
  %5302 = select i1 %5301, i32 0, i32 255, !dbg !5739
  %5303 = call i64 @Perl_utf8n_to_uvuni(i8* %5259, i64 13, i64* null, i32 %5302), !dbg !5743
  store i64 %5303, i64* %c21, align 8, !dbg !5744
  br label %5309, !dbg !5744

; <label>:5304                                    ; preds = %5255
  %5305 = load i8** @PL_reginput, align 8, !dbg !5745
  %5306 = load i8* %5305, align 1, !dbg !5745
  %5307 = zext i8 %5306 to i32, !dbg !5745
  %5308 = sext i32 %5307 to i64, !dbg !5745
  store i64 %5308, i64* %c21, align 8, !dbg !5746
  br label %5309

; <label>:5309                                    ; preds = %5304, %5300
  %5310 = load i64* %c21, align 8, !dbg !5747
  %5311 = load i32* %c1, align 4, !dbg !5749
  %5312 = sext i32 %5311 to i64, !dbg !5750
  %5313 = icmp eq i64 %5310, %5312, !dbg !5747
  br i1 %5313, label %5319, label %5314, !dbg !5751

; <label>:5314                                    ; preds = %5309
  %5315 = load i64* %c21, align 8, !dbg !5752
  %5316 = load i32* %c2, align 4, !dbg !5754
  %5317 = sext i32 %5316 to i64, !dbg !5755
  %5318 = icmp eq i64 %5315, %5317, !dbg !5756
  br i1 %5318, label %5319, label %5387, !dbg !5751

; <label>:5319                                    ; preds = %5314, %5309
  %5320 = load i32* %paren, align 4, !dbg !5757
  %5321 = icmp ne i32 %5320, 0, !dbg !5761
  br i1 %5321, label %5322, label %5364, !dbg !5761

; <label>:5322                                    ; preds = %5319
  %5323 = load i32* %ln, align 4, !dbg !5762
  %5324 = icmp ne i32 %5323, 0, !dbg !5766
  br i1 %5324, label %5325, label %5358, !dbg !5766

; <label>:5325                                    ; preds = %5322
  %5326 = load i8* @PL_reg_match_utf8, align 1, !dbg !5767
  %5327 = sext i8 %5326 to i32, !dbg !5767
  %5328 = icmp ne i32 %5327, 0, !dbg !5767
  br i1 %5328, label %5329, label %5334, !dbg !5767

; <label>:5329                                    ; preds = %5325
  %5330 = load i8** @PL_reginput, align 8, !dbg !5770
  %5331 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %5330, i32 -1), !dbg !5770
  %5332 = sext i32 %5331 to i64, !dbg !5770
  %5333 = inttoptr i64 %5332 to i8*, !dbg !5770
  br label %5337, !dbg !5770

; <label>:5334                                    ; preds = %5325
  %5335 = load i8** @PL_reginput, align 8, !dbg !5772
  %5336 = getelementptr inbounds i8* %5335, i64 -1, !dbg !5772
  br label %5337, !dbg !5772

; <label>:5337                                    ; preds = %5334, %5329
  %5338 = phi i8* [ %5333, %5329 ], [ %5336, %5334 ], !dbg !5774
  %5339 = load i8** @PL_bostr, align 8, !dbg !5775
  %5340 = ptrtoint i8* %5338 to i64, !dbg !5775
  %5341 = ptrtoint i8* %5339 to i64, !dbg !5775
  %5342 = sub i64 %5340, %5341, !dbg !5775
  %5343 = trunc i64 %5342 to i32, !dbg !5775
  %5344 = load i32* %paren, align 4, !dbg !5775
  %5345 = sext i32 %5344 to i64, !dbg !5775
  %5346 = load i32** @PL_regstartp, align 8, !dbg !5775
  %5347 = getelementptr inbounds i32* %5346, i64 %5345, !dbg !5775
  store i32 %5343, i32* %5347, align 4, !dbg !5775
  %5348 = load i8** @PL_reginput, align 8, !dbg !5775
  %5349 = load i8** @PL_bostr, align 8, !dbg !5775
  %5350 = ptrtoint i8* %5348 to i64, !dbg !5775
  %5351 = ptrtoint i8* %5349 to i64, !dbg !5775
  %5352 = sub i64 %5350, %5351, !dbg !5775
  %5353 = trunc i64 %5352 to i32, !dbg !5775
  %5354 = load i32* %paren, align 4, !dbg !5775
  %5355 = sext i32 %5354 to i64, !dbg !5775
  %5356 = load i32** @PL_regendp, align 8, !dbg !5775
  %5357 = getelementptr inbounds i32* %5356, i64 %5355, !dbg !5775
  store i32 %5353, i32* %5357, align 4, !dbg !5775
  br label %5363, !dbg !5775

; <label>:5358                                    ; preds = %5322
  %5359 = load i32* %paren, align 4, !dbg !5778
  %5360 = sext i32 %5359 to i64, !dbg !5778
  %5361 = load i32** @PL_regendp, align 8, !dbg !5778
  %5362 = getelementptr inbounds i32* %5361, i64 %5360, !dbg !5778
  store i32 -1, i32* %5362, align 4, !dbg !5778
  br label %5363

; <label>:5363                                    ; preds = %5358, %5337
  br label %5364, !dbg !5780

; <label>:5364                                    ; preds = %5363, %5319
  %5365 = load %struct.regnode** %next, align 8, !dbg !5782
  %5366 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %5365), !dbg !5782
  %5367 = icmp ne i32 %5366, 0, !dbg !5761
  br i1 %5367, label %5368, label %5369, !dbg !5761

; <label>:5368                                    ; preds = %5364
  br label %6126, !dbg !5786

; <label>:5369                                    ; preds = %5364
  %5370 = load i32* %paren, align 4, !dbg !5788
  %5371 = icmp ne i32 %5370, 0, !dbg !5761
  br i1 %5371, label %5372, label %5380, !dbg !5761

; <label>:5372                                    ; preds = %5369
  %5373 = load i32* %ln, align 4, !dbg !5791
  %5374 = icmp ne i32 %5373, 0, !dbg !5761
  br i1 %5374, label %5375, label %5380, !dbg !5761

; <label>:5375                                    ; preds = %5372
  %5376 = load i32* %paren, align 4, !dbg !5793
  %5377 = sext i32 %5376 to i64, !dbg !5793
  %5378 = load i32** @PL_regendp, align 8, !dbg !5793
  %5379 = getelementptr inbounds i32* %5378, i64 %5377, !dbg !5793
  store i32 -1, i32* %5379, align 4, !dbg !5793
  br label %5380, !dbg !5793

; <label>:5380                                    ; preds = %5375, %5372, %5369
  %5381 = load i32* @PL_savestack_ix, align 4, !dbg !5795
  %5382 = load i32* %lastcp18, align 4, !dbg !5795
  %5383 = icmp sgt i32 %5381, %5382, !dbg !5795
  br i1 %5383, label %5384, label %5386, !dbg !5797

; <label>:5384                                    ; preds = %5380
  %5385 = load i32* %lastcp18, align 4, !dbg !5798
  call void @Perl_leave_scope(i32 %5385), !dbg !5798
  br label %5386, !dbg !5798

; <label>:5386                                    ; preds = %5384, %5380
  br label %5387, !dbg !5800

; <label>:5387                                    ; preds = %5386, %5314
  br label %5460, !dbg !5801

; <label>:5388                                    ; preds = %5252
  %5389 = load i32* %c1, align 4, !dbg !5802
  %5390 = icmp eq i32 %5389, -1000, !dbg !5802
  br i1 %5390, label %5391, label %5459, !dbg !5804

; <label>:5391                                    ; preds = %5388
  %5392 = load i32* %paren, align 4, !dbg !5805
  %5393 = icmp ne i32 %5392, 0, !dbg !5809
  br i1 %5393, label %5394, label %5436, !dbg !5809

; <label>:5394                                    ; preds = %5391
  %5395 = load i32* %ln, align 4, !dbg !5810
  %5396 = icmp ne i32 %5395, 0, !dbg !5814
  br i1 %5396, label %5397, label %5430, !dbg !5814

; <label>:5397                                    ; preds = %5394
  %5398 = load i8* @PL_reg_match_utf8, align 1, !dbg !5815
  %5399 = sext i8 %5398 to i32, !dbg !5815
  %5400 = icmp ne i32 %5399, 0, !dbg !5815
  br i1 %5400, label %5401, label %5406, !dbg !5815

; <label>:5401                                    ; preds = %5397
  %5402 = load i8** @PL_reginput, align 8, !dbg !5818
  %5403 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %5402, i32 -1), !dbg !5818
  %5404 = sext i32 %5403 to i64, !dbg !5818
  %5405 = inttoptr i64 %5404 to i8*, !dbg !5818
  br label %5409, !dbg !5818

; <label>:5406                                    ; preds = %5397
  %5407 = load i8** @PL_reginput, align 8, !dbg !5820
  %5408 = getelementptr inbounds i8* %5407, i64 -1, !dbg !5820
  br label %5409, !dbg !5820

; <label>:5409                                    ; preds = %5406, %5401
  %5410 = phi i8* [ %5405, %5401 ], [ %5408, %5406 ], !dbg !5822
  %5411 = load i8** @PL_bostr, align 8, !dbg !5823
  %5412 = ptrtoint i8* %5410 to i64, !dbg !5823
  %5413 = ptrtoint i8* %5411 to i64, !dbg !5823
  %5414 = sub i64 %5412, %5413, !dbg !5823
  %5415 = trunc i64 %5414 to i32, !dbg !5823
  %5416 = load i32* %paren, align 4, !dbg !5823
  %5417 = sext i32 %5416 to i64, !dbg !5823
  %5418 = load i32** @PL_regstartp, align 8, !dbg !5823
  %5419 = getelementptr inbounds i32* %5418, i64 %5417, !dbg !5823
  store i32 %5415, i32* %5419, align 4, !dbg !5823
  %5420 = load i8** @PL_reginput, align 8, !dbg !5823
  %5421 = load i8** @PL_bostr, align 8, !dbg !5823
  %5422 = ptrtoint i8* %5420 to i64, !dbg !5823
  %5423 = ptrtoint i8* %5421 to i64, !dbg !5823
  %5424 = sub i64 %5422, %5423, !dbg !5823
  %5425 = trunc i64 %5424 to i32, !dbg !5823
  %5426 = load i32* %paren, align 4, !dbg !5823
  %5427 = sext i32 %5426 to i64, !dbg !5823
  %5428 = load i32** @PL_regendp, align 8, !dbg !5823
  %5429 = getelementptr inbounds i32* %5428, i64 %5427, !dbg !5823
  store i32 %5425, i32* %5429, align 4, !dbg !5823
  br label %5435, !dbg !5823

; <label>:5430                                    ; preds = %5394
  %5431 = load i32* %paren, align 4, !dbg !5826
  %5432 = sext i32 %5431 to i64, !dbg !5826
  %5433 = load i32** @PL_regendp, align 8, !dbg !5826
  %5434 = getelementptr inbounds i32* %5433, i64 %5432, !dbg !5826
  store i32 -1, i32* %5434, align 4, !dbg !5826
  br label %5435

; <label>:5435                                    ; preds = %5430, %5409
  br label %5436, !dbg !5828

; <label>:5436                                    ; preds = %5435, %5391
  %5437 = load %struct.regnode** %next, align 8, !dbg !5830
  %5438 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %5437), !dbg !5830
  %5439 = icmp ne i32 %5438, 0, !dbg !5809
  br i1 %5439, label %5440, label %5441, !dbg !5809

; <label>:5440                                    ; preds = %5436
  br label %6126, !dbg !5834

; <label>:5441                                    ; preds = %5436
  %5442 = load i32* %paren, align 4, !dbg !5836
  %5443 = icmp ne i32 %5442, 0, !dbg !5809
  br i1 %5443, label %5444, label %5452, !dbg !5809

; <label>:5444                                    ; preds = %5441
  %5445 = load i32* %ln, align 4, !dbg !5839
  %5446 = icmp ne i32 %5445, 0, !dbg !5809
  br i1 %5446, label %5447, label %5452, !dbg !5809

; <label>:5447                                    ; preds = %5444
  %5448 = load i32* %paren, align 4, !dbg !5841
  %5449 = sext i32 %5448 to i64, !dbg !5841
  %5450 = load i32** @PL_regendp, align 8, !dbg !5841
  %5451 = getelementptr inbounds i32* %5450, i64 %5449, !dbg !5841
  store i32 -1, i32* %5451, align 4, !dbg !5841
  br label %5452, !dbg !5841

; <label>:5452                                    ; preds = %5447, %5444, %5441
  %5453 = load i32* @PL_savestack_ix, align 4, !dbg !5843
  %5454 = load i32* %lastcp18, align 4, !dbg !5843
  %5455 = icmp sgt i32 %5453, %5454, !dbg !5843
  br i1 %5455, label %5456, label %5458, !dbg !5845

; <label>:5456                                    ; preds = %5452
  %5457 = load i32* %lastcp18, align 4, !dbg !5846
  call void @Perl_leave_scope(i32 %5457), !dbg !5846
  br label %5458, !dbg !5846

; <label>:5458                                    ; preds = %5456, %5452
  br label %5459, !dbg !5848

; <label>:5459                                    ; preds = %5458, %5388
  br label %5460

; <label>:5460                                    ; preds = %5459, %5387
  %5461 = load i8** %locinput, align 8, !dbg !5849
  store i8* %5461, i8** @PL_reginput, align 8, !dbg !5850
  %5462 = load %struct.regnode** %scan, align 8, !dbg !5851
  %5463 = call i32 (%struct.regnode*, i32, ...)* bitcast (i32 (...)* @regrepeat to i32 (%struct.regnode*, i32, ...)*)(%struct.regnode* %5462, i32 1), !dbg !5853
  %5464 = icmp ne i32 %5463, 0, !dbg !5854
  br i1 %5464, label %5465, label %5469, !dbg !5854

; <label>:5465                                    ; preds = %5460
  %5466 = load i32* %ln, align 4, !dbg !5855
  %5467 = add nsw i32 %5466, 1, !dbg !5855
  store i32 %5467, i32* %ln, align 4, !dbg !5855
  %5468 = load i8** @PL_reginput, align 8, !dbg !5857
  store i8* %5468, i8** %locinput, align 8, !dbg !5858
  br label %5470, !dbg !5859

; <label>:5469                                    ; preds = %5460
  br label %6127, !dbg !5860

; <label>:5470                                    ; preds = %5465
  br label %5238, !dbg !5698

; <label>:5471                                    ; preds = %5250
  br label %5472

; <label>:5472                                    ; preds = %5471
  br label %5855, !dbg !5861

; <label>:5473                                    ; preds = %4841
  call void @llvm.dbg.declare(metadata i32* %lastcp22, metadata !5862, metadata !566), !dbg !5864
  %5474 = load %struct.regnode** %scan, align 8, !dbg !5865
  %5475 = load i32* %n, align 4, !dbg !5866
  %5476 = call i32 (%struct.regnode*, i32, ...)* bitcast (i32 (...)* @regrepeat to i32 (%struct.regnode*, i32, ...)*)(%struct.regnode* %5474, i32 %5475), !dbg !5867
  store i32 %5476, i32* %n, align 4, !dbg !5868
  %5477 = load i8** @PL_reginput, align 8, !dbg !5869
  store i8* %5477, i8** %locinput, align 8, !dbg !5870
  %5478 = load i32* %ln, align 4, !dbg !5871
  %5479 = load i32* %n, align 4, !dbg !5873
  %5480 = icmp slt i32 %5478, %5479, !dbg !5871
  br i1 %5480, label %5481, label %5528, !dbg !5874

; <label>:5481                                    ; preds = %5473
  %5482 = load %struct.regnode** %next, align 8, !dbg !5875
  %5483 = getelementptr inbounds %struct.regnode* %5482, i32 0, i32 1, !dbg !5875
  %5484 = load i8* %5483, align 1, !dbg !5875
  %5485 = zext i8 %5484 to i64, !dbg !5877
  %5486 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %5485, !dbg !5877
  %5487 = load i8* %5486, align 1, !dbg !5877
  %5488 = zext i8 %5487 to i32, !dbg !5877
  %5489 = icmp eq i32 %5488, 6, !dbg !5877
  br i1 %5489, label %5490, label %5528, !dbg !5874

; <label>:5490                                    ; preds = %5481
  %5491 = load i32* @PL_multiline, align 4, !dbg !5878
  %5492 = icmp ne i32 %5491, 0, !dbg !5874
  br i1 %5492, label %5499, label %5493, !dbg !5874

; <label>:5493                                    ; preds = %5490
  %5494 = load %struct.regnode** %next, align 8, !dbg !5879
  %5495 = getelementptr inbounds %struct.regnode* %5494, i32 0, i32 1, !dbg !5879
  %5496 = load i8* %5495, align 1, !dbg !5879
  %5497 = zext i8 %5496 to i32, !dbg !5879
  %5498 = icmp ne i32 %5497, 7, !dbg !5879
  br i1 %5498, label %5511, label %5499, !dbg !5874

; <label>:5499                                    ; preds = %5493, %5490
  %5500 = load %struct.regnode** %next, align 8, !dbg !5880
  %5501 = getelementptr inbounds %struct.regnode* %5500, i32 0, i32 1, !dbg !5880
  %5502 = load i8* %5501, align 1, !dbg !5880
  %5503 = zext i8 %5502 to i32, !dbg !5880
  %5504 = icmp eq i32 %5503, 8, !dbg !5880
  br i1 %5504, label %5511, label %5505, !dbg !5874

; <label>:5505                                    ; preds = %5499
  %5506 = load %struct.regnode** %next, align 8, !dbg !5881
  %5507 = getelementptr inbounds %struct.regnode* %5506, i32 0, i32 1, !dbg !5881
  %5508 = load i8* %5507, align 1, !dbg !5881
  %5509 = zext i8 %5508 to i32, !dbg !5881
  %5510 = icmp eq i32 %5509, 5, !dbg !5881
  br i1 %5510, label %5511, label %5528, !dbg !5874

; <label>:5511                                    ; preds = %5505, %5499, %5493
  %5512 = load i32* %n, align 4, !dbg !5882
  store i32 %5512, i32* %ln, align 4, !dbg !5884
  %5513 = load i8** @PL_reginput, align 8, !dbg !5885
  %5514 = getelementptr inbounds i8* %5513, i64 -1, !dbg !5885
  %5515 = load i8* %5514, align 1, !dbg !5885
  %5516 = zext i8 %5515 to i32, !dbg !5885
  %5517 = icmp eq i32 %5516, 10, !dbg !5885
  br i1 %5517, label %5518, label %5527, !dbg !5887

; <label>:5518                                    ; preds = %5511
  %5519 = load %struct.regnode** %next, align 8, !dbg !5888
  %5520 = getelementptr inbounds %struct.regnode* %5519, i32 0, i32 1, !dbg !5888
  %5521 = load i8* %5520, align 1, !dbg !5888
  %5522 = zext i8 %5521 to i32, !dbg !5888
  %5523 = icmp ne i32 %5522, 5, !dbg !5888
  br i1 %5523, label %5524, label %5527, !dbg !5887

; <label>:5524                                    ; preds = %5518
  %5525 = load i32* %ln, align 4, !dbg !5890
  %5526 = add nsw i32 %5525, -1, !dbg !5890
  store i32 %5526, i32* %ln, align 4, !dbg !5890
  br label %5527, !dbg !5890

; <label>:5527                                    ; preds = %5524, %5518, %5511
  br label %5528, !dbg !5891

; <label>:5528                                    ; preds = %5527, %5505, %5481, %5473
  %5529 = load i32* @PL_savestack_ix, align 4, !dbg !5892
  store i32 %5529, i32* %lastcp22, align 4, !dbg !5892
  %5530 = load i32* %paren, align 4, !dbg !5893
  %5531 = icmp ne i32 %5530, 0, !dbg !5895
  br i1 %5531, label %5532, label %5693, !dbg !5895

; <label>:5532                                    ; preds = %5528
  call void @llvm.dbg.declare(metadata i64* %c23, metadata !5896, metadata !566), !dbg !5898
  store i64 0, i64* %c23, align 8, !dbg !5898
  br label %5533, !dbg !5899

; <label>:5533                                    ; preds = %5690, %5532
  %5534 = load i32* %n, align 4, !dbg !5900
  %5535 = load i32* %ln, align 4, !dbg !5903
  %5536 = icmp sge i32 %5534, %5535, !dbg !5904
  br i1 %5536, label %5537, label %5692, !dbg !5899

; <label>:5537                                    ; preds = %5533
  %5538 = load i32* %c1, align 4, !dbg !5905
  %5539 = icmp ne i32 %5538, -1000, !dbg !5905
  br i1 %5539, label %5540, label %5595, !dbg !5908

; <label>:5540                                    ; preds = %5537
  %5541 = load i8* %do_utf8, align 1, !dbg !5909
  %5542 = icmp ne i8 %5541, 0, !dbg !5912
  br i1 %5542, label %5543, label %5589, !dbg !5912

; <label>:5543                                    ; preds = %5540
  %5544 = load i8** @PL_reginput, align 8, !dbg !5913
  %5545 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5914
  %5546 = getelementptr inbounds %struct.cop* %5545, i32 0, i32 14, !dbg !5914
  %5547 = load %struct.sv** %5546, align 8, !dbg !5914
  %5548 = icmp ne %struct.sv* %5547, null, !dbg !5914
  br i1 %5548, label %5549, label %5573, !dbg !5914

; <label>:5549                                    ; preds = %5543
  %5550 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5915
  %5551 = getelementptr inbounds %struct.cop* %5550, i32 0, i32 14, !dbg !5915
  %5552 = load %struct.sv** %5551, align 8, !dbg !5915
  %5553 = icmp ne %struct.sv* %5552, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !5915
  br i1 %5553, label %5554, label %5573, !dbg !5915

; <label>:5554                                    ; preds = %5549
  %5555 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5917
  %5556 = getelementptr inbounds %struct.cop* %5555, i32 0, i32 14, !dbg !5917
  %5557 = load %struct.sv** %5556, align 8, !dbg !5917
  %5558 = icmp eq %struct.sv* %5557, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !5917
  br i1 %5558, label %5585, label %5559, !dbg !5917

; <label>:5559                                    ; preds = %5554
  %5560 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5919
  %5561 = getelementptr inbounds %struct.cop* %5560, i32 0, i32 14, !dbg !5919
  %5562 = load %struct.sv** %5561, align 8, !dbg !5919
  %5563 = getelementptr inbounds %struct.sv* %5562, i32 0, i32 0, !dbg !5919
  %5564 = load i8** %5563, align 8, !dbg !5919
  %5565 = bitcast i8* %5564 to %struct.xpv*, !dbg !5919
  %5566 = getelementptr inbounds %struct.xpv* %5565, i32 0, i32 0, !dbg !5919
  %5567 = load i8** %5566, align 8, !dbg !5919
  %5568 = getelementptr inbounds i8* %5567, i64 11, !dbg !5919
  %5569 = load i8* %5568, align 1, !dbg !5919
  %5570 = sext i8 %5569 to i32, !dbg !5919
  %5571 = and i32 %5570, 1, !dbg !5919
  %5572 = icmp ne i32 %5571, 0, !dbg !5919
  br i1 %5572, label %5585, label %5573, !dbg !5919

; <label>:5573                                    ; preds = %5559, %5549, %5543
  %5574 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5921
  %5575 = getelementptr inbounds %struct.cop* %5574, i32 0, i32 14, !dbg !5921
  %5576 = load %struct.sv** %5575, align 8, !dbg !5921
  %5577 = icmp eq %struct.sv* %5576, null, !dbg !5921
  br i1 %5577, label %5578, label %5583, !dbg !5921

; <label>:5578                                    ; preds = %5573
  %5579 = load i8* @PL_dowarn, align 1, !dbg !5925
  %5580 = zext i8 %5579 to i32, !dbg !5925
  %5581 = and i32 %5580, 1, !dbg !5925
  %5582 = icmp ne i32 %5581, 0, !dbg !5925
  br label %5583

; <label>:5583                                    ; preds = %5578, %5573
  %5584 = phi i1 [ false, %5573 ], [ %5582, %5578 ]
  br label %5585, !dbg !5927

; <label>:5585                                    ; preds = %5583, %5559, %5554
  %5586 = phi i1 [ true, %5559 ], [ true, %5554 ], [ %5584, %5583 ]
  %5587 = select i1 %5586, i32 0, i32 255, !dbg !5929
  %5588 = call i64 @Perl_utf8n_to_uvuni(i8* %5544, i64 13, i64* null, i32 %5587), !dbg !5933
  store i64 %5588, i64* %c23, align 8, !dbg !5934
  br label %5594, !dbg !5934

; <label>:5589                                    ; preds = %5540
  %5590 = load i8** @PL_reginput, align 8, !dbg !5935
  %5591 = load i8* %5590, align 1, !dbg !5935
  %5592 = zext i8 %5591 to i32, !dbg !5935
  %5593 = sext i32 %5592 to i64, !dbg !5935
  store i64 %5593, i64* %c23, align 8, !dbg !5936
  br label %5594

; <label>:5594                                    ; preds = %5589, %5585
  br label %5595, !dbg !5937

; <label>:5595                                    ; preds = %5594, %5537
  %5596 = load i32* %c1, align 4, !dbg !5938
  %5597 = icmp eq i32 %5596, -1000, !dbg !5938
  br i1 %5597, label %5608, label %5598, !dbg !5940

; <label>:5598                                    ; preds = %5595
  %5599 = load i64* %c23, align 8, !dbg !5941
  %5600 = load i32* %c1, align 4, !dbg !5943
  %5601 = sext i32 %5600 to i64, !dbg !5944
  %5602 = icmp eq i64 %5599, %5601, !dbg !5945
  br i1 %5602, label %5608, label %5603, !dbg !5940

; <label>:5603                                    ; preds = %5598
  %5604 = load i64* %c23, align 8, !dbg !5946
  %5605 = load i32* %c2, align 4, !dbg !5948
  %5606 = sext i32 %5605 to i64, !dbg !5949
  %5607 = icmp eq i64 %5604, %5606, !dbg !5950
  br i1 %5607, label %5608, label %5676, !dbg !5940

; <label>:5608                                    ; preds = %5603, %5598, %5595
  %5609 = load i32* %paren, align 4, !dbg !5951
  %5610 = icmp ne i32 %5609, 0, !dbg !5955
  br i1 %5610, label %5611, label %5653, !dbg !5955

; <label>:5611                                    ; preds = %5608
  %5612 = load i32* %n, align 4, !dbg !5956
  %5613 = icmp ne i32 %5612, 0, !dbg !5960
  br i1 %5613, label %5614, label %5647, !dbg !5960

; <label>:5614                                    ; preds = %5611
  %5615 = load i8* @PL_reg_match_utf8, align 1, !dbg !5961
  %5616 = sext i8 %5615 to i32, !dbg !5961
  %5617 = icmp ne i32 %5616, 0, !dbg !5961
  br i1 %5617, label %5618, label %5623, !dbg !5961

; <label>:5618                                    ; preds = %5614
  %5619 = load i8** @PL_reginput, align 8, !dbg !5964
  %5620 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %5619, i32 -1), !dbg !5964
  %5621 = sext i32 %5620 to i64, !dbg !5964
  %5622 = inttoptr i64 %5621 to i8*, !dbg !5964
  br label %5626, !dbg !5964

; <label>:5623                                    ; preds = %5614
  %5624 = load i8** @PL_reginput, align 8, !dbg !5966
  %5625 = getelementptr inbounds i8* %5624, i64 -1, !dbg !5966
  br label %5626, !dbg !5966

; <label>:5626                                    ; preds = %5623, %5618
  %5627 = phi i8* [ %5622, %5618 ], [ %5625, %5623 ], !dbg !5968
  %5628 = load i8** @PL_bostr, align 8, !dbg !5969
  %5629 = ptrtoint i8* %5627 to i64, !dbg !5969
  %5630 = ptrtoint i8* %5628 to i64, !dbg !5969
  %5631 = sub i64 %5629, %5630, !dbg !5969
  %5632 = trunc i64 %5631 to i32, !dbg !5969
  %5633 = load i32* %paren, align 4, !dbg !5969
  %5634 = sext i32 %5633 to i64, !dbg !5969
  %5635 = load i32** @PL_regstartp, align 8, !dbg !5969
  %5636 = getelementptr inbounds i32* %5635, i64 %5634, !dbg !5969
  store i32 %5632, i32* %5636, align 4, !dbg !5969
  %5637 = load i8** @PL_reginput, align 8, !dbg !5969
  %5638 = load i8** @PL_bostr, align 8, !dbg !5969
  %5639 = ptrtoint i8* %5637 to i64, !dbg !5969
  %5640 = ptrtoint i8* %5638 to i64, !dbg !5969
  %5641 = sub i64 %5639, %5640, !dbg !5969
  %5642 = trunc i64 %5641 to i32, !dbg !5969
  %5643 = load i32* %paren, align 4, !dbg !5969
  %5644 = sext i32 %5643 to i64, !dbg !5969
  %5645 = load i32** @PL_regendp, align 8, !dbg !5969
  %5646 = getelementptr inbounds i32* %5645, i64 %5644, !dbg !5969
  store i32 %5642, i32* %5646, align 4, !dbg !5969
  br label %5652, !dbg !5969

; <label>:5647                                    ; preds = %5611
  %5648 = load i32* %paren, align 4, !dbg !5972
  %5649 = sext i32 %5648 to i64, !dbg !5972
  %5650 = load i32** @PL_regendp, align 8, !dbg !5972
  %5651 = getelementptr inbounds i32* %5650, i64 %5649, !dbg !5972
  store i32 -1, i32* %5651, align 4, !dbg !5972
  br label %5652

; <label>:5652                                    ; preds = %5647, %5626
  br label %5653, !dbg !5974

; <label>:5653                                    ; preds = %5652, %5608
  %5654 = load %struct.regnode** %next, align 8, !dbg !5976
  %5655 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %5654), !dbg !5976
  %5656 = icmp ne i32 %5655, 0, !dbg !5955
  br i1 %5656, label %5657, label %5658, !dbg !5955

; <label>:5657                                    ; preds = %5653
  br label %6126, !dbg !5980

; <label>:5658                                    ; preds = %5653
  %5659 = load i32* %paren, align 4, !dbg !5982
  %5660 = icmp ne i32 %5659, 0, !dbg !5955
  br i1 %5660, label %5661, label %5669, !dbg !5955

; <label>:5661                                    ; preds = %5658
  %5662 = load i32* %n, align 4, !dbg !5985
  %5663 = icmp ne i32 %5662, 0, !dbg !5955
  br i1 %5663, label %5664, label %5669, !dbg !5955

; <label>:5664                                    ; preds = %5661
  %5665 = load i32* %paren, align 4, !dbg !5987
  %5666 = sext i32 %5665 to i64, !dbg !5987
  %5667 = load i32** @PL_regendp, align 8, !dbg !5987
  %5668 = getelementptr inbounds i32* %5667, i64 %5666, !dbg !5987
  store i32 -1, i32* %5668, align 4, !dbg !5987
  br label %5669, !dbg !5987

; <label>:5669                                    ; preds = %5664, %5661, %5658
  %5670 = load i32* @PL_savestack_ix, align 4, !dbg !5989
  %5671 = load i32* %lastcp22, align 4, !dbg !5989
  %5672 = icmp sgt i32 %5670, %5671, !dbg !5989
  br i1 %5672, label %5673, label %5675, !dbg !5991

; <label>:5673                                    ; preds = %5669
  %5674 = load i32* %lastcp22, align 4, !dbg !5992
  call void @Perl_leave_scope(i32 %5674), !dbg !5992
  br label %5675, !dbg !5992

; <label>:5675                                    ; preds = %5673, %5669
  br label %5676, !dbg !5994

; <label>:5676                                    ; preds = %5675, %5603
  %5677 = load i32* %n, align 4, !dbg !5995
  %5678 = add nsw i32 %5677, -1, !dbg !5995
  store i32 %5678, i32* %n, align 4, !dbg !5995
  %5679 = load i8* @PL_reg_match_utf8, align 1, !dbg !5996
  %5680 = sext i8 %5679 to i32, !dbg !5996
  %5681 = icmp ne i32 %5680, 0, !dbg !5996
  br i1 %5681, label %5682, label %5687, !dbg !5996

; <label>:5682                                    ; preds = %5676
  %5683 = load i8** %locinput, align 8, !dbg !5997
  %5684 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %5683, i32 -1), !dbg !5997
  %5685 = sext i32 %5684 to i64, !dbg !5997
  %5686 = inttoptr i64 %5685 to i8*, !dbg !5997
  br label %5690, !dbg !5997

; <label>:5687                                    ; preds = %5676
  %5688 = load i8** %locinput, align 8, !dbg !5999
  %5689 = getelementptr inbounds i8* %5688, i64 -1, !dbg !5999
  br label %5690, !dbg !5999

; <label>:5690                                    ; preds = %5687, %5682
  %5691 = phi i8* [ %5686, %5682 ], [ %5689, %5687 ], !dbg !5996
  store i8* %5691, i8** %locinput, align 8, !dbg !6001
  store i8* %5691, i8** @PL_reginput, align 8, !dbg !6004
  br label %5533, !dbg !5899

; <label>:5692                                    ; preds = %5533
  br label %5854, !dbg !6005

; <label>:5693                                    ; preds = %5528
  call void @llvm.dbg.declare(metadata i64* %c24, metadata !6006, metadata !566), !dbg !6008
  store i64 0, i64* %c24, align 8, !dbg !6008
  br label %5694, !dbg !6009

; <label>:5694                                    ; preds = %5851, %5693
  %5695 = load i32* %n, align 4, !dbg !6010
  %5696 = load i32* %ln, align 4, !dbg !6013
  %5697 = icmp sge i32 %5695, %5696, !dbg !6014
  br i1 %5697, label %5698, label %5853, !dbg !6009

; <label>:5698                                    ; preds = %5694
  %5699 = load i32* %c1, align 4, !dbg !6015
  %5700 = icmp ne i32 %5699, -1000, !dbg !6015
  br i1 %5700, label %5701, label %5756, !dbg !6018

; <label>:5701                                    ; preds = %5698
  %5702 = load i8* %do_utf8, align 1, !dbg !6019
  %5703 = icmp ne i8 %5702, 0, !dbg !6022
  br i1 %5703, label %5704, label %5750, !dbg !6022

; <label>:5704                                    ; preds = %5701
  %5705 = load i8** @PL_reginput, align 8, !dbg !6023
  %5706 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !6024
  %5707 = getelementptr inbounds %struct.cop* %5706, i32 0, i32 14, !dbg !6024
  %5708 = load %struct.sv** %5707, align 8, !dbg !6024
  %5709 = icmp ne %struct.sv* %5708, null, !dbg !6024
  br i1 %5709, label %5710, label %5734, !dbg !6024

; <label>:5710                                    ; preds = %5704
  %5711 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !6025
  %5712 = getelementptr inbounds %struct.cop* %5711, i32 0, i32 14, !dbg !6025
  %5713 = load %struct.sv** %5712, align 8, !dbg !6025
  %5714 = icmp ne %struct.sv* %5713, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !6025
  br i1 %5714, label %5715, label %5734, !dbg !6025

; <label>:5715                                    ; preds = %5710
  %5716 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !6027
  %5717 = getelementptr inbounds %struct.cop* %5716, i32 0, i32 14, !dbg !6027
  %5718 = load %struct.sv** %5717, align 8, !dbg !6027
  %5719 = icmp eq %struct.sv* %5718, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !6027
  br i1 %5719, label %5746, label %5720, !dbg !6027

; <label>:5720                                    ; preds = %5715
  %5721 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !6029
  %5722 = getelementptr inbounds %struct.cop* %5721, i32 0, i32 14, !dbg !6029
  %5723 = load %struct.sv** %5722, align 8, !dbg !6029
  %5724 = getelementptr inbounds %struct.sv* %5723, i32 0, i32 0, !dbg !6029
  %5725 = load i8** %5724, align 8, !dbg !6029
  %5726 = bitcast i8* %5725 to %struct.xpv*, !dbg !6029
  %5727 = getelementptr inbounds %struct.xpv* %5726, i32 0, i32 0, !dbg !6029
  %5728 = load i8** %5727, align 8, !dbg !6029
  %5729 = getelementptr inbounds i8* %5728, i64 11, !dbg !6029
  %5730 = load i8* %5729, align 1, !dbg !6029
  %5731 = sext i8 %5730 to i32, !dbg !6029
  %5732 = and i32 %5731, 1, !dbg !6029
  %5733 = icmp ne i32 %5732, 0, !dbg !6029
  br i1 %5733, label %5746, label %5734, !dbg !6029

; <label>:5734                                    ; preds = %5720, %5710, %5704
  %5735 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !6031
  %5736 = getelementptr inbounds %struct.cop* %5735, i32 0, i32 14, !dbg !6031
  %5737 = load %struct.sv** %5736, align 8, !dbg !6031
  %5738 = icmp eq %struct.sv* %5737, null, !dbg !6031
  br i1 %5738, label %5739, label %5744, !dbg !6031

; <label>:5739                                    ; preds = %5734
  %5740 = load i8* @PL_dowarn, align 1, !dbg !6035
  %5741 = zext i8 %5740 to i32, !dbg !6035
  %5742 = and i32 %5741, 1, !dbg !6035
  %5743 = icmp ne i32 %5742, 0, !dbg !6035
  br label %5744

; <label>:5744                                    ; preds = %5739, %5734
  %5745 = phi i1 [ false, %5734 ], [ %5743, %5739 ]
  br label %5746, !dbg !6037

; <label>:5746                                    ; preds = %5744, %5720, %5715
  %5747 = phi i1 [ true, %5720 ], [ true, %5715 ], [ %5745, %5744 ]
  %5748 = select i1 %5747, i32 0, i32 255, !dbg !6039
  %5749 = call i64 @Perl_utf8n_to_uvuni(i8* %5705, i64 13, i64* null, i32 %5748), !dbg !6043
  store i64 %5749, i64* %c24, align 8, !dbg !6044
  br label %5755, !dbg !6044

; <label>:5750                                    ; preds = %5701
  %5751 = load i8** @PL_reginput, align 8, !dbg !6045
  %5752 = load i8* %5751, align 1, !dbg !6045
  %5753 = zext i8 %5752 to i32, !dbg !6045
  %5754 = sext i32 %5753 to i64, !dbg !6045
  store i64 %5754, i64* %c24, align 8, !dbg !6046
  br label %5755

; <label>:5755                                    ; preds = %5750, %5746
  br label %5756, !dbg !6047

; <label>:5756                                    ; preds = %5755, %5698
  %5757 = load i32* %c1, align 4, !dbg !6048
  %5758 = icmp eq i32 %5757, -1000, !dbg !6048
  br i1 %5758, label %5769, label %5759, !dbg !6050

; <label>:5759                                    ; preds = %5756
  %5760 = load i64* %c24, align 8, !dbg !6051
  %5761 = load i32* %c1, align 4, !dbg !6053
  %5762 = sext i32 %5761 to i64, !dbg !6054
  %5763 = icmp eq i64 %5760, %5762, !dbg !6055
  br i1 %5763, label %5769, label %5764, !dbg !6050

; <label>:5764                                    ; preds = %5759
  %5765 = load i64* %c24, align 8, !dbg !6056
  %5766 = load i32* %c2, align 4, !dbg !6058
  %5767 = sext i32 %5766 to i64, !dbg !6059
  %5768 = icmp eq i64 %5765, %5767, !dbg !6060
  br i1 %5768, label %5769, label %5837, !dbg !6050

; <label>:5769                                    ; preds = %5764, %5759, %5756
  %5770 = load i32* %paren, align 4, !dbg !6061
  %5771 = icmp ne i32 %5770, 0, !dbg !6065
  br i1 %5771, label %5772, label %5814, !dbg !6065

; <label>:5772                                    ; preds = %5769
  %5773 = load i32* %n, align 4, !dbg !6066
  %5774 = icmp ne i32 %5773, 0, !dbg !6070
  br i1 %5774, label %5775, label %5808, !dbg !6070

; <label>:5775                                    ; preds = %5772
  %5776 = load i8* @PL_reg_match_utf8, align 1, !dbg !6071
  %5777 = sext i8 %5776 to i32, !dbg !6071
  %5778 = icmp ne i32 %5777, 0, !dbg !6071
  br i1 %5778, label %5779, label %5784, !dbg !6071

; <label>:5779                                    ; preds = %5775
  %5780 = load i8** @PL_reginput, align 8, !dbg !6074
  %5781 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %5780, i32 -1), !dbg !6074
  %5782 = sext i32 %5781 to i64, !dbg !6074
  %5783 = inttoptr i64 %5782 to i8*, !dbg !6074
  br label %5787, !dbg !6074

; <label>:5784                                    ; preds = %5775
  %5785 = load i8** @PL_reginput, align 8, !dbg !6076
  %5786 = getelementptr inbounds i8* %5785, i64 -1, !dbg !6076
  br label %5787, !dbg !6076

; <label>:5787                                    ; preds = %5784, %5779
  %5788 = phi i8* [ %5783, %5779 ], [ %5786, %5784 ], !dbg !6078
  %5789 = load i8** @PL_bostr, align 8, !dbg !6079
  %5790 = ptrtoint i8* %5788 to i64, !dbg !6079
  %5791 = ptrtoint i8* %5789 to i64, !dbg !6079
  %5792 = sub i64 %5790, %5791, !dbg !6079
  %5793 = trunc i64 %5792 to i32, !dbg !6079
  %5794 = load i32* %paren, align 4, !dbg !6079
  %5795 = sext i32 %5794 to i64, !dbg !6079
  %5796 = load i32** @PL_regstartp, align 8, !dbg !6079
  %5797 = getelementptr inbounds i32* %5796, i64 %5795, !dbg !6079
  store i32 %5793, i32* %5797, align 4, !dbg !6079
  %5798 = load i8** @PL_reginput, align 8, !dbg !6079
  %5799 = load i8** @PL_bostr, align 8, !dbg !6079
  %5800 = ptrtoint i8* %5798 to i64, !dbg !6079
  %5801 = ptrtoint i8* %5799 to i64, !dbg !6079
  %5802 = sub i64 %5800, %5801, !dbg !6079
  %5803 = trunc i64 %5802 to i32, !dbg !6079
  %5804 = load i32* %paren, align 4, !dbg !6079
  %5805 = sext i32 %5804 to i64, !dbg !6079
  %5806 = load i32** @PL_regendp, align 8, !dbg !6079
  %5807 = getelementptr inbounds i32* %5806, i64 %5805, !dbg !6079
  store i32 %5803, i32* %5807, align 4, !dbg !6079
  br label %5813, !dbg !6079

; <label>:5808                                    ; preds = %5772
  %5809 = load i32* %paren, align 4, !dbg !6082
  %5810 = sext i32 %5809 to i64, !dbg !6082
  %5811 = load i32** @PL_regendp, align 8, !dbg !6082
  %5812 = getelementptr inbounds i32* %5811, i64 %5810, !dbg !6082
  store i32 -1, i32* %5812, align 4, !dbg !6082
  br label %5813

; <label>:5813                                    ; preds = %5808, %5787
  br label %5814, !dbg !6084

; <label>:5814                                    ; preds = %5813, %5769
  %5815 = load %struct.regnode** %next, align 8, !dbg !6086
  %5816 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %5815), !dbg !6086
  %5817 = icmp ne i32 %5816, 0, !dbg !6065
  br i1 %5817, label %5818, label %5819, !dbg !6065

; <label>:5818                                    ; preds = %5814
  br label %6126, !dbg !6090

; <label>:5819                                    ; preds = %5814
  %5820 = load i32* %paren, align 4, !dbg !6092
  %5821 = icmp ne i32 %5820, 0, !dbg !6065
  br i1 %5821, label %5822, label %5830, !dbg !6065

; <label>:5822                                    ; preds = %5819
  %5823 = load i32* %n, align 4, !dbg !6095
  %5824 = icmp ne i32 %5823, 0, !dbg !6065
  br i1 %5824, label %5825, label %5830, !dbg !6065

; <label>:5825                                    ; preds = %5822
  %5826 = load i32* %paren, align 4, !dbg !6097
  %5827 = sext i32 %5826 to i64, !dbg !6097
  %5828 = load i32** @PL_regendp, align 8, !dbg !6097
  %5829 = getelementptr inbounds i32* %5828, i64 %5827, !dbg !6097
  store i32 -1, i32* %5829, align 4, !dbg !6097
  br label %5830, !dbg !6097

; <label>:5830                                    ; preds = %5825, %5822, %5819
  %5831 = load i32* @PL_savestack_ix, align 4, !dbg !6099
  %5832 = load i32* %lastcp22, align 4, !dbg !6099
  %5833 = icmp sgt i32 %5831, %5832, !dbg !6099
  br i1 %5833, label %5834, label %5836, !dbg !6101

; <label>:5834                                    ; preds = %5830
  %5835 = load i32* %lastcp22, align 4, !dbg !6102
  call void @Perl_leave_scope(i32 %5835), !dbg !6102
  br label %5836, !dbg !6102

; <label>:5836                                    ; preds = %5834, %5830
  br label %5837, !dbg !6104

; <label>:5837                                    ; preds = %5836, %5764
  %5838 = load i32* %n, align 4, !dbg !6105
  %5839 = add nsw i32 %5838, -1, !dbg !6105
  store i32 %5839, i32* %n, align 4, !dbg !6105
  %5840 = load i8* @PL_reg_match_utf8, align 1, !dbg !6106
  %5841 = sext i8 %5840 to i32, !dbg !6106
  %5842 = icmp ne i32 %5841, 0, !dbg !6106
  br i1 %5842, label %5843, label %5848, !dbg !6106

; <label>:5843                                    ; preds = %5837
  %5844 = load i8** %locinput, align 8, !dbg !6107
  %5845 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %5844, i32 -1), !dbg !6107
  %5846 = sext i32 %5845 to i64, !dbg !6107
  %5847 = inttoptr i64 %5846 to i8*, !dbg !6107
  br label %5851, !dbg !6107

; <label>:5848                                    ; preds = %5837
  %5849 = load i8** %locinput, align 8, !dbg !6109
  %5850 = getelementptr inbounds i8* %5849, i64 -1, !dbg !6109
  br label %5851, !dbg !6109

; <label>:5851                                    ; preds = %5848, %5843
  %5852 = phi i8* [ %5847, %5843 ], [ %5850, %5848 ], !dbg !6106
  store i8* %5852, i8** %locinput, align 8, !dbg !6111
  store i8* %5852, i8** @PL_reginput, align 8, !dbg !6114
  br label %5694, !dbg !6009

; <label>:5853                                    ; preds = %5694
  br label %5854

; <label>:5854                                    ; preds = %5853, %5692
  br label %5855

; <label>:5855                                    ; preds = %5854, %5472
  br label %6127, !dbg !6115

; <label>:5856                                    ; preds = %24
  %5857 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !6116
  %5858 = icmp ne %struct.re_cc_state* %5857, null, !dbg !6118
  br i1 %5858, label %5859, label %5906, !dbg !6118

; <label>:5859                                    ; preds = %5856
  call void @llvm.dbg.declare(metadata %struct.re_cc_state** %cur_call_cc, metadata !6119, metadata !566), !dbg !6122
  %5860 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !6123
  store %struct.re_cc_state* %5860, %struct.re_cc_state** %cur_call_cc, align 8, !dbg !6122
  call void @llvm.dbg.declare(metadata %struct.curcur** %cctmp, metadata !6124, metadata !566), !dbg !6125
  %5861 = load %struct.curcur** @PL_regcc, align 8, !dbg !6126
  store %struct.curcur* %5861, %struct.curcur** %cctmp, align 8, !dbg !6125
  call void @llvm.dbg.declare(metadata %struct.regexp** %re25, metadata !6127, metadata !566), !dbg !6128
  %5862 = load %struct.regexp** @PL_reg_re, align 8, !dbg !6129
  store %struct.regexp* %5862, %struct.regexp** %re25, align 8, !dbg !6128
  call void @llvm.dbg.declare(metadata i32* %cp26, metadata !6130, metadata !566), !dbg !6131
  call void @llvm.dbg.declare(metadata i32* %lastcp27, metadata !6132, metadata !566), !dbg !6133
  %5863 = call i32 (i32, ...)* bitcast (i32 (...)* @regcppush to i32 (i32, ...)*)(i32 0), !dbg !6134
  store i32 %5863, i32* %cp26, align 4, !dbg !6135
  %5864 = load i32* @PL_savestack_ix, align 4, !dbg !6136
  store i32 %5864, i32* %lastcp27, align 4, !dbg !6136
  %5865 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !6137
  %5866 = getelementptr inbounds %struct.re_cc_state* %5865, i32 0, i32 0, !dbg !6137
  %5867 = load i32* %5866, align 4, !dbg !6137
  %5868 = call i32 (i32, ...)* bitcast (i32 (...)* @regcp_set_to to i32 (i32, ...)*)(i32 %5867), !dbg !6138
  %5869 = load i8** %locinput, align 8, !dbg !6139
  store i8* %5869, i8** @PL_reginput, align 8, !dbg !6140
  %5870 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !6141
  %5871 = getelementptr inbounds %struct.re_cc_state* %5870, i32 0, i32 4, !dbg !6141
  %5872 = load %struct.regexp** %5871, align 8, !dbg !6141
  %5873 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %5872), !dbg !6142
  %5874 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !6143
  %5875 = getelementptr inbounds %struct.re_cc_state* %5874, i32 0, i32 3, !dbg !6143
  %5876 = load %struct.curcur** %5875, align 8, !dbg !6143
  store %struct.curcur* %5876, %struct.curcur** @PL_regcc, align 8, !dbg !6144
  %5877 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !6145
  %5878 = getelementptr inbounds %struct.re_cc_state* %5877, i32 0, i32 2, !dbg !6145
  %5879 = load %struct.re_cc_state** %5878, align 8, !dbg !6145
  store %struct.re_cc_state* %5879, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !6146
  %5880 = load %struct.re_cc_state** %cur_call_cc, align 8, !dbg !6147
  %5881 = getelementptr inbounds %struct.re_cc_state* %5880, i32 0, i32 1, !dbg !6147
  %5882 = load %struct.regnode** %5881, align 8, !dbg !6147
  %5883 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %5882), !dbg !6149
  %5884 = icmp ne i32 %5883, 0, !dbg !6150
  br i1 %5884, label %5885, label %5893, !dbg !6150

; <label>:5885                                    ; preds = %5859
  %5886 = load %struct.re_cc_state** %cur_call_cc, align 8, !dbg !6151
  store %struct.re_cc_state* %5886, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !6153
  %5887 = load i32* @PL_savestack_ix, align 4, !dbg !6154
  %5888 = load i32* %cp26, align 4, !dbg !6154
  %5889 = icmp sgt i32 %5887, %5888, !dbg !6154
  br i1 %5889, label %5890, label %5892, !dbg !6156

; <label>:5890                                    ; preds = %5885
  %5891 = load i32* %cp26, align 4, !dbg !6157
  call void @Perl_leave_scope(i32 %5891), !dbg !6157
  br label %5892, !dbg !6157

; <label>:5892                                    ; preds = %5890, %5885
  br label %6126, !dbg !6159

; <label>:5893                                    ; preds = %5859
  %5894 = load i32* @PL_savestack_ix, align 4, !dbg !6160
  %5895 = load i32* %lastcp27, align 4, !dbg !6160
  %5896 = icmp sgt i32 %5894, %5895, !dbg !6160
  br i1 %5896, label %5897, label %5899, !dbg !6162

; <label>:5897                                    ; preds = %5893
  %5898 = load i32* %lastcp27, align 4, !dbg !6163
  call void @Perl_leave_scope(i32 %5898), !dbg !6163
  br label %5899, !dbg !6163

; <label>:5899                                    ; preds = %5897, %5893
  %5900 = call i32 (...)* @regcppop(), !dbg !6165
  %5901 = load %struct.re_cc_state** %cur_call_cc, align 8, !dbg !6166
  store %struct.re_cc_state* %5901, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !6167
  %5902 = load %struct.curcur** %cctmp, align 8, !dbg !6168
  store %struct.curcur* %5902, %struct.curcur** @PL_regcc, align 8, !dbg !6169
  %5903 = load %struct.regexp** %re25, align 8, !dbg !6170
  store %struct.regexp* %5903, %struct.regexp** @PL_reg_re, align 8, !dbg !6171
  %5904 = load %struct.regexp** %re25, align 8, !dbg !6172
  %5905 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %5904), !dbg !6173
  br label %6129, !dbg !6174

; <label>:5906                                    ; preds = %5856
  %5907 = load i8** %locinput, align 8, !dbg !6175
  %5908 = load i8** @PL_regtill, align 8, !dbg !6177
  %5909 = icmp ult i8* %5907, %5908, !dbg !6175
  br i1 %5909, label %5910, label %5911, !dbg !6178

; <label>:5910                                    ; preds = %5906
  br label %6128, !dbg !6179

; <label>:5911                                    ; preds = %5906
  %5912 = load i8** %locinput, align 8, !dbg !6181
  store i8* %5912, i8** @PL_reginput, align 8, !dbg !6182
  br label %6125, !dbg !6183

; <label>:5913                                    ; preds = %24
  %5914 = load i8** %locinput, align 8, !dbg !6184
  store i8* %5914, i8** @PL_reginput, align 8, !dbg !6185
  br label %6124, !dbg !6186

; <label>:5915                                    ; preds = %24
  store i32 1, i32* %n, align 4, !dbg !6187
  %5916 = load i8** %locinput, align 8, !dbg !6188
  store i8* %5916, i8** @PL_reginput, align 8, !dbg !6189
  br label %6021, !dbg !6190

; <label>:5917                                    ; preds = %24
  store i32 0, i32* %n, align 4, !dbg !6191
  %5918 = load %struct.regnode** %scan, align 8, !dbg !6192
  %5919 = getelementptr inbounds %struct.regnode* %5918, i32 0, i32 0, !dbg !6192
  %5920 = load i8* %5919, align 1, !dbg !6192
  %5921 = icmp ne i8 %5920, 0, !dbg !6194
  br i1 %5921, label %5922, label %5966, !dbg !6194

; <label>:5922                                    ; preds = %5917
  %5923 = load i8* @PL_reg_match_utf8, align 1, !dbg !6195
  %5924 = sext i8 %5923 to i32, !dbg !6195
  %5925 = icmp ne i32 %5924, 0, !dbg !6195
  br i1 %5925, label %5926, label %5936, !dbg !6195

; <label>:5926                                    ; preds = %5922
  %5927 = load i8** %locinput, align 8, !dbg !6197
  %5928 = load %struct.regnode** %scan, align 8, !dbg !6197
  %5929 = getelementptr inbounds %struct.regnode* %5928, i32 0, i32 0, !dbg !6197
  %5930 = load i8* %5929, align 1, !dbg !6197
  %5931 = zext i8 %5930 to i32, !dbg !6197
  %5932 = sub nsw i32 0, %5931, !dbg !6197
  %5933 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghopmaybe to i32 (i8*, i32, ...)*)(i8* %5927, i32 %5932), !dbg !6197
  %5934 = sext i32 %5933 to i64, !dbg !6197
  %5935 = inttoptr i64 %5934 to i8*, !dbg !6197
  br label %5959, !dbg !6197

; <label>:5936                                    ; preds = %5922
  %5937 = load i8** %locinput, align 8, !dbg !6199
  %5938 = load %struct.regnode** %scan, align 8, !dbg !6199
  %5939 = getelementptr inbounds %struct.regnode* %5938, i32 0, i32 0, !dbg !6199
  %5940 = load i8* %5939, align 1, !dbg !6199
  %5941 = zext i8 %5940 to i32, !dbg !6199
  %5942 = sext i32 %5941 to i64, !dbg !6199
  %5943 = sub i64 0, %5942, !dbg !6199
  %5944 = getelementptr inbounds i8* %5937, i64 %5943, !dbg !6199
  %5945 = load i8** @PL_bostr, align 8, !dbg !6199
  %5946 = icmp uge i8* %5944, %5945, !dbg !6199
  br i1 %5946, label %5947, label %5956, !dbg !6199

; <label>:5947                                    ; preds = %5936
  %5948 = load i8** %locinput, align 8, !dbg !6201
  %5949 = load %struct.regnode** %scan, align 8, !dbg !6201
  %5950 = getelementptr inbounds %struct.regnode* %5949, i32 0, i32 0, !dbg !6201
  %5951 = load i8* %5950, align 1, !dbg !6201
  %5952 = zext i8 %5951 to i32, !dbg !6201
  %5953 = sext i32 %5952 to i64, !dbg !6201
  %5954 = sub i64 0, %5953, !dbg !6201
  %5955 = getelementptr inbounds i8* %5948, i64 %5954, !dbg !6201
  br label %5957, !dbg !6201

; <label>:5956                                    ; preds = %5936
  br label %5957, !dbg !6203

; <label>:5957                                    ; preds = %5956, %5947
  %5958 = phi i8* [ %5955, %5947 ], [ null, %5956 ], !dbg !6195
  br label %5959, !dbg !6205

; <label>:5959                                    ; preds = %5957, %5926
  %5960 = phi i8* [ %5935, %5926 ], [ %5958, %5957 ], !dbg !6195
  store i8* %5960, i8** %s, align 8, !dbg !6208
  %5961 = load i8** %s, align 8, !dbg !6211
  %5962 = icmp ne i8* %5961, null, !dbg !6213
  br i1 %5962, label %5964, label %5963, !dbg !6213

; <label>:5963                                    ; preds = %5959
  br label %6036, !dbg !6214

; <label>:5964                                    ; preds = %5959
  %5965 = load i8** %s, align 8, !dbg !6215
  store i8* %5965, i8** @PL_reginput, align 8, !dbg !6216
  br label %5968, !dbg !6217

; <label>:5966                                    ; preds = %5917
  %5967 = load i8** %locinput, align 8, !dbg !6218
  store i8* %5967, i8** @PL_reginput, align 8, !dbg !6219
  br label %5968

; <label>:5968                                    ; preds = %5966, %5964
  br label %6021, !dbg !6220

; <label>:5969                                    ; preds = %24
  store i32 1, i32* %n, align 4, !dbg !6221
  %5970 = load %struct.regnode** %scan, align 8, !dbg !6222
  %5971 = getelementptr inbounds %struct.regnode* %5970, i32 0, i32 0, !dbg !6222
  %5972 = load i8* %5971, align 1, !dbg !6222
  %5973 = icmp ne i8 %5972, 0, !dbg !6224
  br i1 %5973, label %5974, label %6018, !dbg !6224

; <label>:5974                                    ; preds = %5969
  %5975 = load i8* @PL_reg_match_utf8, align 1, !dbg !6225
  %5976 = sext i8 %5975 to i32, !dbg !6225
  %5977 = icmp ne i32 %5976, 0, !dbg !6225
  br i1 %5977, label %5978, label %5988, !dbg !6225

; <label>:5978                                    ; preds = %5974
  %5979 = load i8** %locinput, align 8, !dbg !6227
  %5980 = load %struct.regnode** %scan, align 8, !dbg !6227
  %5981 = getelementptr inbounds %struct.regnode* %5980, i32 0, i32 0, !dbg !6227
  %5982 = load i8* %5981, align 1, !dbg !6227
  %5983 = zext i8 %5982 to i32, !dbg !6227
  %5984 = sub nsw i32 0, %5983, !dbg !6227
  %5985 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghopmaybe to i32 (i8*, i32, ...)*)(i8* %5979, i32 %5984), !dbg !6227
  %5986 = sext i32 %5985 to i64, !dbg !6227
  %5987 = inttoptr i64 %5986 to i8*, !dbg !6227
  br label %6011, !dbg !6227

; <label>:5988                                    ; preds = %5974
  %5989 = load i8** %locinput, align 8, !dbg !6229
  %5990 = load %struct.regnode** %scan, align 8, !dbg !6229
  %5991 = getelementptr inbounds %struct.regnode* %5990, i32 0, i32 0, !dbg !6229
  %5992 = load i8* %5991, align 1, !dbg !6229
  %5993 = zext i8 %5992 to i32, !dbg !6229
  %5994 = sext i32 %5993 to i64, !dbg !6229
  %5995 = sub i64 0, %5994, !dbg !6229
  %5996 = getelementptr inbounds i8* %5989, i64 %5995, !dbg !6229
  %5997 = load i8** @PL_bostr, align 8, !dbg !6229
  %5998 = icmp uge i8* %5996, %5997, !dbg !6229
  br i1 %5998, label %5999, label %6008, !dbg !6229

; <label>:5999                                    ; preds = %5988
  %6000 = load i8** %locinput, align 8, !dbg !6231
  %6001 = load %struct.regnode** %scan, align 8, !dbg !6231
  %6002 = getelementptr inbounds %struct.regnode* %6001, i32 0, i32 0, !dbg !6231
  %6003 = load i8* %6002, align 1, !dbg !6231
  %6004 = zext i8 %6003 to i32, !dbg !6231
  %6005 = sext i32 %6004 to i64, !dbg !6231
  %6006 = sub i64 0, %6005, !dbg !6231
  %6007 = getelementptr inbounds i8* %6000, i64 %6006, !dbg !6231
  br label %6009, !dbg !6231

; <label>:6008                                    ; preds = %5988
  br label %6009, !dbg !6233

; <label>:6009                                    ; preds = %6008, %5999
  %6010 = phi i8* [ %6007, %5999 ], [ null, %6008 ], !dbg !6225
  br label %6011, !dbg !6235

; <label>:6011                                    ; preds = %6009, %5978
  %6012 = phi i8* [ %5987, %5978 ], [ %6010, %6009 ], !dbg !6225
  store i8* %6012, i8** %s, align 8, !dbg !6238
  %6013 = load i8** %s, align 8, !dbg !6241
  %6014 = icmp ne i8* %6013, null, !dbg !6243
  br i1 %6014, label %6016, label %6015, !dbg !6243

; <label>:6015                                    ; preds = %6011
  br label %6030, !dbg !6244

; <label>:6016                                    ; preds = %6011
  %6017 = load i8** %s, align 8, !dbg !6245
  store i8* %6017, i8** @PL_reginput, align 8, !dbg !6246
  br label %6020, !dbg !6247

; <label>:6018                                    ; preds = %5969
  %6019 = load i8** %locinput, align 8, !dbg !6248
  store i8* %6019, i8** @PL_reginput, align 8, !dbg !6249
  br label %6020

; <label>:6020                                    ; preds = %6018, %6016
  br label %6021, !dbg !6250

; <label>:6021                                    ; preds = %6020, %5968, %5915
  %6022 = load %struct.regnode** %scan, align 8, !dbg !6251
  %6023 = getelementptr inbounds %struct.regnode* %6022, i64 1, !dbg !6251
  %6024 = getelementptr inbounds %struct.regnode* %6023, i64 1, !dbg !6251
  store %struct.regnode* %6024, %struct.regnode** %inner, align 8, !dbg !6252
  %6025 = load %struct.regnode** %inner, align 8, !dbg !6253
  %6026 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %6025), !dbg !6255
  %6027 = load i32* %n, align 4, !dbg !6256
  %6028 = icmp ne i32 %6026, %6027, !dbg !6255
  br i1 %6028, label %6029, label %6035, !dbg !6257

; <label>:6029                                    ; preds = %6021
  br label %6030, !dbg !6258

; <label>:6030                                    ; preds = %6029, %6015
  %6031 = load i32* %logical, align 4, !dbg !6260
  %6032 = icmp ne i32 %6031, 0, !dbg !6263
  br i1 %6032, label %6033, label %6034, !dbg !6263

; <label>:6033                                    ; preds = %6030
  store i32 0, i32* %logical, align 4, !dbg !6264
  store i32 0, i32* %sw, align 4, !dbg !6266
  br label %6053, !dbg !6267

; <label>:6034                                    ; preds = %6030
  br label %6127, !dbg !6268

; <label>:6035                                    ; preds = %6021
  br label %6036, !dbg !6269

; <label>:6036                                    ; preds = %6035, %5963
  %6037 = load i32* %logical, align 4, !dbg !6271
  %6038 = icmp ne i32 %6037, 0, !dbg !6273
  br i1 %6038, label %6039, label %6040, !dbg !6273

; <label>:6039                                    ; preds = %6036
  store i32 0, i32* %logical, align 4, !dbg !6274
  store i32 1, i32* %sw, align 4, !dbg !6276
  br label %6040, !dbg !6277

; <label>:6040                                    ; preds = %6039, %6036
  %6041 = load %struct.regnode** %scan, align 8, !dbg !6278
  %6042 = getelementptr inbounds %struct.regnode* %6041, i32 0, i32 1, !dbg !6278
  %6043 = load i8* %6042, align 1, !dbg !6278
  %6044 = zext i8 %6043 to i32, !dbg !6278
  %6045 = icmp eq i32 %6044, 52, !dbg !6278
  br i1 %6045, label %6046, label %6051, !dbg !6280

; <label>:6046                                    ; preds = %6040
  %6047 = load i8** @PL_reginput, align 8, !dbg !6281
  store i8* %6047, i8** %locinput, align 8, !dbg !6283
  %6048 = load i8** %locinput, align 8, !dbg !6284
  %6049 = load i8* %6048, align 1, !dbg !6284
  %6050 = zext i8 %6049 to i32, !dbg !6284
  store i32 %6050, i32* %nextchr, align 4, !dbg !6285
  br label %6051, !dbg !6286

; <label>:6051                                    ; preds = %6046, %6040
  br label %6052, !dbg !6287

; <label>:6052                                    ; preds = %24, %6051
  br label %6053, !dbg !6289

; <label>:6053                                    ; preds = %6052, %6033
  %6054 = load %struct.regnode** %scan, align 8, !dbg !6291
  %6055 = load %struct.regnode** %scan, align 8, !dbg !6292
  %6056 = bitcast %struct.regnode* %6055 to %struct.regnode_1*, !dbg !6292
  %6057 = getelementptr inbounds %struct.regnode_1* %6056, i32 0, i32 3, !dbg !6292
  %6058 = load i32* %6057, align 4, !dbg !6292
  %6059 = zext i32 %6058 to i64, !dbg !6291
  %6060 = getelementptr inbounds %struct.regnode* %6054, i64 %6059, !dbg !6291
  store %struct.regnode* %6060, %struct.regnode** %next, align 8, !dbg !6293
  %6061 = load %struct.regnode** %next, align 8, !dbg !6294
  %6062 = load %struct.regnode** %scan, align 8, !dbg !6296
  %6063 = icmp eq %struct.regnode* %6061, %6062, !dbg !6294
  br i1 %6063, label %6064, label %6065, !dbg !6297

; <label>:6064                                    ; preds = %6053
  store %struct.regnode* null, %struct.regnode** %next, align 8, !dbg !6298
  br label %6065, !dbg !6298

; <label>:6065                                    ; preds = %6064, %6053
  br label %6120, !dbg !6299

; <label>:6066                                    ; preds = %24
  %6067 = load %struct.gv** @PL_stderrgv, align 8, !dbg !6300
  %6068 = icmp ne %struct.gv* %6067, null, !dbg !6300
  br i1 %6068, label %6069, label %6109, !dbg !6300

; <label>:6069                                    ; preds = %6066
  %6070 = load %struct.gv** @PL_stderrgv, align 8, !dbg !6301
  %6071 = getelementptr inbounds %struct.gv* %6070, i32 0, i32 2, !dbg !6301
  %6072 = load i32* %6071, align 4, !dbg !6301
  %6073 = and i32 %6072, 255, !dbg !6301
  %6074 = icmp eq i32 %6073, 13, !dbg !6301
  br i1 %6074, label %6075, label %6109, !dbg !6301

; <label>:6075                                    ; preds = %6069
  %6076 = load %struct.gv** @PL_stderrgv, align 8, !dbg !6302
  %6077 = getelementptr inbounds %struct.gv* %6076, i32 0, i32 0, !dbg !6302
  %6078 = load %struct.xpvgv** %6077, align 8, !dbg !6302
  %6079 = getelementptr inbounds %struct.xpvgv* %6078, i32 0, i32 7, !dbg !6302
  %6080 = load %struct.gp** %6079, align 8, !dbg !6302
  %6081 = getelementptr inbounds %struct.gp* %6080, i32 0, i32 2, !dbg !6302
  %6082 = load %struct.io** %6081, align 8, !dbg !6302
  %6083 = icmp ne %struct.io* %6082, null, !dbg !6302
  br i1 %6083, label %6084, label %6109, !dbg !6302

; <label>:6084                                    ; preds = %6075
  %6085 = load %struct.gv** @PL_stderrgv, align 8, !dbg !6304
  %6086 = getelementptr inbounds %struct.gv* %6085, i32 0, i32 0, !dbg !6304
  %6087 = load %struct.xpvgv** %6086, align 8, !dbg !6304
  %6088 = getelementptr inbounds %struct.xpvgv* %6087, i32 0, i32 7, !dbg !6304
  %6089 = load %struct.gp** %6088, align 8, !dbg !6304
  %6090 = getelementptr inbounds %struct.gp* %6089, i32 0, i32 2, !dbg !6304
  %6091 = load %struct.io** %6090, align 8, !dbg !6304
  %6092 = getelementptr inbounds %struct.io* %6091, i32 0, i32 0, !dbg !6304
  %6093 = load %struct.xpvio** %6092, align 8, !dbg !6304
  %6094 = getelementptr inbounds %struct.xpvio* %6093, i32 0, i32 8, !dbg !6304
  %6095 = load %struct._PerlIO*** %6094, align 8, !dbg !6304
  %6096 = icmp ne %struct._PerlIO** %6095, null, !dbg !6304
  br i1 %6096, label %6097, label %6109, !dbg !6304

; <label>:6097                                    ; preds = %6084
  %6098 = load %struct.gv** @PL_stderrgv, align 8, !dbg !6306
  %6099 = getelementptr inbounds %struct.gv* %6098, i32 0, i32 0, !dbg !6306
  %6100 = load %struct.xpvgv** %6099, align 8, !dbg !6306
  %6101 = getelementptr inbounds %struct.xpvgv* %6100, i32 0, i32 7, !dbg !6306
  %6102 = load %struct.gp** %6101, align 8, !dbg !6306
  %6103 = getelementptr inbounds %struct.gp* %6102, i32 0, i32 2, !dbg !6306
  %6104 = load %struct.io** %6103, align 8, !dbg !6306
  %6105 = getelementptr inbounds %struct.io* %6104, i32 0, i32 0, !dbg !6306
  %6106 = load %struct.xpvio** %6105, align 8, !dbg !6306
  %6107 = getelementptr inbounds %struct.xpvio* %6106, i32 0, i32 8, !dbg !6306
  %6108 = load %struct._PerlIO*** %6107, align 8, !dbg !6306
  br label %6111, !dbg !6306

; <label>:6109                                    ; preds = %6084, %6075, %6069, %6066
  %6110 = call %struct._PerlIO** @Perl_PerlIO_stderr(), !dbg !6308
  br label %6111, !dbg !6308

; <label>:6111                                    ; preds = %6109, %6097
  %6112 = phi %struct._PerlIO** [ %6108, %6097 ], [ %6110, %6109 ], !dbg !6300
  %6113 = load %struct.regnode** %scan, align 8, !dbg !6312
  %6114 = ptrtoint %struct.regnode* %6113 to i64, !dbg !6312
  %6115 = load %struct.regnode** %scan, align 8, !dbg !6313
  %6116 = getelementptr inbounds %struct.regnode* %6115, i32 0, i32 1, !dbg !6313
  %6117 = load i8* %6116, align 1, !dbg !6313
  %6118 = zext i8 %6117 to i32, !dbg !6313
  %6119 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %6112, i8* getelementptr inbounds ([8 x i8]* @.str8, i32 0, i32 0), i64 %6114, i32 %6118), !dbg !6314
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([25 x i8]* @.str9, i32 0, i32 0)), !dbg !6315
  br label %6120, !dbg !6316

; <label>:6120                                    ; preds = %6111, %6065, %3433, %3432, %2545, %2544, %2515, %2496, %2459, %2443, %2048, %2047, %2039, %1955, %1890, %1856, %1791, %1752, %1682, %1643, %1577, %1529, %1463, %1369, %1301, %1033, %976, %900, %843, %775, %683, %629, %588, %528, %405, %372, %210, %169, %160, %126, %120, %99, %80, %74, %68, %49
  br label %6121, !dbg !6317

; <label>:6121                                    ; preds = %6232, %6120
  %6122 = load %struct.regnode** %next, align 8, !dbg !6318
  store %struct.regnode* %6122, %struct.regnode** %scan, align 8, !dbg !6319
  br label %9, !dbg !2491

; <label>:6123                                    ; preds = %9
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([26 x i8]* @.str10, i32 0, i32 0)), !dbg !6320
  br label %6127, !dbg !6321

; <label>:6124                                    ; preds = %5913
  br label %6126, !dbg !6322

; <label>:6125                                    ; preds = %5911
  br label %6126, !dbg !6322

; <label>:6126                                    ; preds = %6125, %6124, %5892, %5818, %5657, %5440, %5368, %5200, %4290, %3883, %3308, %3193, %3068, %2892, %2806, %2686, %2658, %2619, %2330
  store i32 1, i32* %1, !dbg !6323
  br label %6242, !dbg !6323

; <label>:6127                                    ; preds = %6123, %6034, %5855, %5469, %5149, %5138, %4854, %4321, %3900, %3493, %3364, %3123, %3003, %2687, %2666, %2620, %2354, %2038, %2003, %1988, %1946, %1929, %1881, %1851, %1815, %1800, %1790, %1751, %1697, %1681, %1642, %1588, %1576, %1528, %1474, %1457, %1416, %1368, %1308, %1300, %1032, %975, %915, %899, %842, %782, %774, %682, %616, %587, %565, %555, %526, %404, %393, %383, %364, %313, %296, %245, %200, %184, %168, %150, %134, %125, %119, %111, %98, %81, %75, %69, %50
  br label %6129, !dbg !6324

; <label>:6128                                    ; preds = %5910
  br label %6129, !dbg !6324

; <label>:6129                                    ; preds = %6191, %6128, %6127, %5899, %2807
  %6130 = load i32* %unwind, align 4, !dbg !6325
  %6131 = icmp ne i32 %6130, 0, !dbg !6327
  br i1 %6131, label %6132, label %6241, !dbg !6327

; <label>:6132                                    ; preds = %6129
  call void @llvm.dbg.declare(metadata %union.re_unwind_t** %uw28, metadata !6328, metadata !566), !dbg !6330
  %6133 = load %union.any** @PL_savestack, align 8, !dbg !6331
  %6134 = bitcast %union.any* %6133 to i8*, !dbg !6331
  %6135 = load i32* %unwind, align 4, !dbg !6331
  %6136 = sext i32 %6135 to i64, !dbg !6331
  %6137 = getelementptr inbounds i8* %6134, i64 %6136, !dbg !6331
  %6138 = bitcast i8* %6137 to %union.re_unwind_t*, !dbg !6331
  store %union.re_unwind_t* %6138, %union.re_unwind_t** %uw28, align 8, !dbg !6330
  %6139 = load %union.re_unwind_t** %uw28, align 8, !dbg !6332
  %6140 = bitcast %union.re_unwind_t* %6139 to i32*, !dbg !6332
  %6141 = load i32* %6140, align 4, !dbg !6332
  switch i32 %6141, label %6239 [
    i32 1, label %6142
    i32 2, label %6142
  ], !dbg !6333

; <label>:6142                                    ; preds = %6132, %6132
  call void @llvm.dbg.declare(metadata %struct.re_unwind_branch_t** %uwb, metadata !6334, metadata !566), !dbg !6337
  %6143 = load %union.re_unwind_t** %uw28, align 8, !dbg !6338
  %6144 = bitcast %union.re_unwind_t* %6143 to %struct.re_unwind_branch_t*, !dbg !6339
  store %struct.re_unwind_branch_t* %6144, %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6337
  call void @llvm.dbg.declare(metadata i32* %lastparen29, metadata !6340, metadata !566), !dbg !6341
  %6145 = load %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6342
  %6146 = getelementptr inbounds %struct.re_unwind_branch_t* %6145, i32 0, i32 3, !dbg !6342
  %6147 = load i32* %6146, align 4, !dbg !6342
  store i32 %6147, i32* %lastparen29, align 4, !dbg !6341
  %6148 = load i32* @PL_savestack_ix, align 4, !dbg !6343
  %6149 = load %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6343
  %6150 = getelementptr inbounds %struct.re_unwind_branch_t* %6149, i32 0, i32 2, !dbg !6343
  %6151 = load i32* %6150, align 4, !dbg !6343
  %6152 = icmp sgt i32 %6148, %6151, !dbg !6343
  br i1 %6152, label %6153, label %6157, !dbg !6345

; <label>:6153                                    ; preds = %6142
  %6154 = load %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6346
  %6155 = getelementptr inbounds %struct.re_unwind_branch_t* %6154, i32 0, i32 2, !dbg !6346
  %6156 = load i32* %6155, align 4, !dbg !6346
  call void @Perl_leave_scope(i32 %6156), !dbg !6346
  br label %6157, !dbg !6346

; <label>:6157                                    ; preds = %6153, %6142
  %6158 = load i32** @PL_reglastparen, align 8, !dbg !6348
  %6159 = load i32* %6158, align 4, !dbg !6350
  store i32 %6159, i32* %n, align 4, !dbg !6351
  br label %6160, !dbg !6351

; <label>:6160                                    ; preds = %6169, %6157
  %6161 = load i32* %n, align 4, !dbg !6352
  %6162 = load i32* %lastparen29, align 4, !dbg !6356
  %6163 = icmp sgt i32 %6161, %6162, !dbg !6357
  br i1 %6163, label %6164, label %6172, !dbg !6358

; <label>:6164                                    ; preds = %6160
  %6165 = load i32* %n, align 4, !dbg !6359
  %6166 = sext i32 %6165 to i64, !dbg !6360
  %6167 = load i32** @PL_regendp, align 8, !dbg !6360
  %6168 = getelementptr inbounds i32* %6167, i64 %6166, !dbg !6360
  store i32 -1, i32* %6168, align 4, !dbg !6360
  br label %6169, !dbg !6360

; <label>:6169                                    ; preds = %6164
  %6170 = load i32* %n, align 4, !dbg !6361
  %6171 = add nsw i32 %6170, -1, !dbg !6361
  store i32 %6171, i32* %n, align 4, !dbg !6361
  br label %6160, !dbg !6362

; <label>:6172                                    ; preds = %6160
  %6173 = load i32* %n, align 4, !dbg !6363
  %6174 = load i32** @PL_reglastparen, align 8, !dbg !6364
  store i32 %6173, i32* %6174, align 4, !dbg !6365
  %6175 = load %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6366
  %6176 = getelementptr inbounds %struct.re_unwind_branch_t* %6175, i32 0, i32 4, !dbg !6366
  %6177 = load %struct.regnode** %6176, align 8, !dbg !6366
  store %struct.regnode* %6177, %struct.regnode** %next, align 8, !dbg !6367
  store %struct.regnode* %6177, %struct.regnode** %scan, align 8, !dbg !6368
  %6178 = load %struct.regnode** %scan, align 8, !dbg !6369
  %6179 = icmp ne %struct.regnode* %6178, null, !dbg !6371
  br i1 %6179, label %6180, label %6191, !dbg !6371

; <label>:6180                                    ; preds = %6172
  %6181 = load %struct.regnode** %scan, align 8, !dbg !6372
  %6182 = getelementptr inbounds %struct.regnode* %6181, i32 0, i32 1, !dbg !6372
  %6183 = load i8* %6182, align 1, !dbg !6372
  %6184 = zext i8 %6183 to i32, !dbg !6372
  %6185 = load %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6373
  %6186 = getelementptr inbounds %struct.re_unwind_branch_t* %6185, i32 0, i32 0, !dbg !6373
  %6187 = load i32* %6186, align 4, !dbg !6373
  %6188 = icmp eq i32 %6187, 1, !dbg !6373
  %6189 = select i1 %6188, i32 31, i32 56, !dbg !6373
  %6190 = icmp ne i32 %6184, %6189, !dbg !6372
  br i1 %6190, label %6191, label %6195, !dbg !6371

; <label>:6191                                    ; preds = %6180, %6172
  %6192 = load %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6374
  %6193 = getelementptr inbounds %struct.re_unwind_branch_t* %6192, i32 0, i32 1, !dbg !6374
  %6194 = load i32* %6193, align 4, !dbg !6374
  store i32 %6194, i32* %unwind, align 4, !dbg !6376
  br label %6129, !dbg !6377

; <label>:6195                                    ; preds = %6180
  %6196 = load %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6378
  %6197 = getelementptr inbounds %struct.re_unwind_branch_t* %6196, i32 0, i32 0, !dbg !6378
  %6198 = load i32* %6197, align 4, !dbg !6378
  %6199 = icmp eq i32 %6198, 1, !dbg !6378
  br i1 %6199, label %6200, label %6205, !dbg !6378

; <label>:6200                                    ; preds = %6195
  %6201 = load %struct.regnode** %next, align 8, !dbg !6380
  %6202 = getelementptr inbounds %struct.regnode* %6201, i32 0, i32 2, !dbg !6380
  %6203 = load i16* %6202, align 2, !dbg !6380
  %6204 = zext i16 %6203 to i32, !dbg !6380
  br label %6210, !dbg !6378

; <label>:6205                                    ; preds = %6195
  %6206 = load %struct.regnode** %next, align 8, !dbg !6381
  %6207 = bitcast %struct.regnode* %6206 to %struct.regnode_1*, !dbg !6381
  %6208 = getelementptr inbounds %struct.regnode_1* %6207, i32 0, i32 3, !dbg !6381
  %6209 = load i32* %6208, align 4, !dbg !6381
  br label %6210, !dbg !6378

; <label>:6210                                    ; preds = %6205, %6200
  %6211 = phi i32 [ %6204, %6200 ], [ %6209, %6205 ], !dbg !6378
  store i32 %6211, i32* %n, align 4, !dbg !6382
  %6212 = icmp ne i32 %6211, 0, !dbg !6385
  br i1 %6212, label %6213, label %6218, !dbg !6385

; <label>:6213                                    ; preds = %6210
  %6214 = load i32* %n, align 4, !dbg !6386
  %6215 = load %struct.regnode** %next, align 8, !dbg !6387
  %6216 = sext i32 %6214 to i64, !dbg !6387
  %6217 = getelementptr inbounds %struct.regnode* %6215, i64 %6216, !dbg !6387
  store %struct.regnode* %6217, %struct.regnode** %next, align 8, !dbg !6387
  br label %6219, !dbg !6387

; <label>:6218                                    ; preds = %6210
  store %struct.regnode* null, %struct.regnode** %next, align 8, !dbg !6388
  br label %6219

; <label>:6219                                    ; preds = %6218, %6213
  %6220 = load %struct.regnode** %next, align 8, !dbg !6389
  %6221 = load %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6390
  %6222 = getelementptr inbounds %struct.re_unwind_branch_t* %6221, i32 0, i32 4, !dbg !6390
  store %struct.regnode* %6220, %struct.regnode** %6222, align 8, !dbg !6390
  %6223 = load %struct.regnode** %scan, align 8, !dbg !6391
  %6224 = getelementptr inbounds %struct.regnode* %6223, i64 1, !dbg !6391
  store %struct.regnode* %6224, %struct.regnode** %next, align 8, !dbg !6392
  %6225 = load %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6393
  %6226 = getelementptr inbounds %struct.re_unwind_branch_t* %6225, i32 0, i32 0, !dbg !6393
  %6227 = load i32* %6226, align 4, !dbg !6393
  %6228 = icmp eq i32 %6227, 2, !dbg !6393
  br i1 %6228, label %6229, label %6232, !dbg !6395

; <label>:6229                                    ; preds = %6219
  %6230 = load %struct.regnode** %next, align 8, !dbg !6396
  %6231 = getelementptr inbounds %struct.regnode* %6230, i64 1, !dbg !6396
  store %struct.regnode* %6231, %struct.regnode** %next, align 8, !dbg !6397
  br label %6232, !dbg !6397

; <label>:6232                                    ; preds = %6229, %6219
  %6233 = load %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6398
  %6234 = getelementptr inbounds %struct.re_unwind_branch_t* %6233, i32 0, i32 5, !dbg !6398
  %6235 = load i8** %6234, align 8, !dbg !6398
  store i8* %6235, i8** %locinput, align 8, !dbg !6399
  %6236 = load %struct.re_unwind_branch_t** %uwb, align 8, !dbg !6400
  %6237 = getelementptr inbounds %struct.re_unwind_branch_t* %6236, i32 0, i32 6, !dbg !6400
  %6238 = load i32* %6237, align 4, !dbg !6400
  store i32 %6238, i32* %nextchr, align 4, !dbg !6401
  br label %6121, !dbg !6402

; <label>:6239                                    ; preds = %6132
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([32 x i8]* @.str11, i32 0, i32 0)), !dbg !6403
  br label %6240, !dbg !6404

; <label>:6240                                    ; preds = %6239
  br label %6241, !dbg !6405

; <label>:6241                                    ; preds = %6240, %6129
  store i32 0, i32* %1, !dbg !6406
  br label %6242, !dbg !6406

; <label>:6242                                    ; preds = %6241, %6126
  %6243 = load i32* %1, !dbg !6407
  ret i32 %6243, !dbg !6407
}

declare i64 @Perl_utf8n_to_uvuni(i8*, i64, i64*, i32) #2

declare i32 @Perl_ibcmp_utf8(i8*, i8**, i64, i8 signext, i8*, i8**, i64, i8 signext) #2

declare i32 @Perl_ibcmp(i8*, i8*, i32) #2

declare i32 @Perl_ibcmp_locale(i8*, i8*, i32) #2

declare i32 @reginclass(...) #2

declare void @Perl_push_scope() #2

declare void @Perl_save_re_context() #2

declare signext i8 @Perl_is_utf8_alnum(i8*) #2

declare void @Perl_pop_scope() #2

declare i64 @Perl_swash_fetch(%struct.sv*, i8*, i8 signext) #2

declare i64 @Perl_utf8_to_uvchr(i8*, i64*) #2

declare i16** @__ctype_b_loc() #2

declare signext i8 @Perl_is_uni_alnum_lc(i64) #2

declare signext i8 @Perl_is_uni_alnum(i64) #2

declare signext i8 @Perl_is_utf8_space(i8*) #2

declare signext i8 @Perl_is_uni_space_lc(i64) #2

declare signext i8 @Perl_is_utf8_digit(i8*) #2

declare signext i8 @Perl_is_uni_digit_lc(i64) #2

declare signext i8 @Perl_is_utf8_mark(i8*) #2

declare i64 @Perl_to_utf8_lower(i8*, i8*, i64*) #2

declare i32 @Perl_sv_unmagic(%struct.sv*, i32) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

declare void @Perl_sv_magic(%struct.sv*, %struct.sv*, i32, i8*, i32) #2

declare i32 @regcppush(...) #2

declare i32 @regmatch(...) #2

declare void @Perl_leave_scope(i32) #2

declare i32 @regcppop(...) #2

declare signext i8 @Perl_sv_2bool(%struct.sv*) #2

declare %struct.sv* @Perl_save_scalar(%struct.gv*) #2

declare i8* @Perl_safesysrealloc(i8*, i64) #2

declare i8* @Perl_safesysmalloc(i64) #2

declare void @Perl_warner(i32, i8*, ...) #2

declare i32 @Perl_save_alloc(i32, i32) #2

declare i32 @regrepeat_hard(...) #2

declare %struct.regnode* @Perl_regnext(%struct.regnode*) #2

declare i64 @Perl_to_utf8_upper(i8*, i8*, i64*) #2

declare i32 @regrepeat(...) #2

declare i32 @regcp_set_to(...) #2

declare i32 @reghopmaybe(...) #2

declare i32 @PerlIO_printf(%struct._PerlIO**, i8*, ...) #2

declare %struct._PerlIO** @Perl_PerlIO_stderr() #2

; Function Attrs: nounwind uwtable
define %struct.sv* @Perl_regclass_swash(%struct.regnode* %node, i8 signext %doinit, %struct.sv** %listsvp, %struct.sv** %altsvp) #0 {
  %1 = alloca %struct.regnode*, align 8
  %2 = alloca i8, align 1
  %3 = alloca %struct.sv**, align 8
  %4 = alloca %struct.sv**, align 8
  %sw = alloca %struct.sv*, align 8
  %si = alloca %struct.sv*, align 8
  %alt = alloca %struct.sv*, align 8
  %n = alloca i32, align 4
  %rv = alloca %struct.sv*, align 8
  %av = alloca %struct.av*, align 8
  %ary = alloca %struct.sv**, align 8
  %a = alloca %struct.sv**, align 8
  %b = alloca %struct.sv**, align 8
  store %struct.regnode* %node, %struct.regnode** %1, align 8
  call void @llvm.dbg.declare(metadata %struct.regnode** %1, metadata !6408, metadata !566), !dbg !6409
  store i8 %doinit, i8* %2, align 1
  call void @llvm.dbg.declare(metadata i8* %2, metadata !6410, metadata !566), !dbg !6411
  store %struct.sv** %listsvp, %struct.sv*** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.sv*** %3, metadata !6412, metadata !566), !dbg !6413
  store %struct.sv** %altsvp, %struct.sv*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.sv*** %4, metadata !6414, metadata !566), !dbg !6415
  call void @llvm.dbg.declare(metadata %struct.sv** %sw, metadata !6416, metadata !566), !dbg !6417
  store %struct.sv* null, %struct.sv** %sw, align 8, !dbg !6417
  call void @llvm.dbg.declare(metadata %struct.sv** %si, metadata !6418, metadata !566), !dbg !6419
  store %struct.sv* null, %struct.sv** %si, align 8, !dbg !6419
  call void @llvm.dbg.declare(metadata %struct.sv** %alt, metadata !6420, metadata !566), !dbg !6421
  store %struct.sv* null, %struct.sv** %alt, align 8, !dbg !6421
  %5 = load %struct.reg_data** @PL_regdata, align 8, !dbg !6422
  %6 = icmp ne %struct.reg_data* %5, null, !dbg !6424
  br i1 %6, label %7, label %102, !dbg !6424

; <label>:7                                       ; preds = %0
  %8 = load %struct.reg_data** @PL_regdata, align 8, !dbg !6425
  %9 = getelementptr inbounds %struct.reg_data* %8, i32 0, i32 0, !dbg !6425
  %10 = load i32* %9, align 4, !dbg !6425
  %11 = icmp ne i32 %10, 0, !dbg !6424
  br i1 %11, label %12, label %102, !dbg !6424

; <label>:12                                      ; preds = %7
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6427, metadata !566), !dbg !6429
  %13 = load %struct.regnode** %1, align 8, !dbg !6430
  %14 = bitcast %struct.regnode* %13 to %struct.regnode_1*, !dbg !6430
  %15 = getelementptr inbounds %struct.regnode_1* %14, i32 0, i32 3, !dbg !6430
  %16 = load i32* %15, align 4, !dbg !6430
  store i32 %16, i32* %n, align 4, !dbg !6429
  %17 = load i32* %n, align 4, !dbg !6431
  %18 = zext i32 %17 to i64, !dbg !6433
  %19 = load %struct.reg_data** @PL_regdata, align 8, !dbg !6433
  %20 = getelementptr inbounds %struct.reg_data* %19, i32 0, i32 1, !dbg !6433
  %21 = load i8** %20, align 8, !dbg !6433
  %22 = getelementptr inbounds i8* %21, i64 %18, !dbg !6433
  %23 = load i8* %22, align 1, !dbg !6433
  %24 = zext i8 %23 to i32, !dbg !6433
  %25 = icmp eq i32 %24, 115, !dbg !6433
  br i1 %25, label %26, label %101, !dbg !6434

; <label>:26                                      ; preds = %12
  call void @llvm.dbg.declare(metadata %struct.sv** %rv, metadata !6435, metadata !566), !dbg !6437
  %27 = load i32* %n, align 4, !dbg !6438
  %28 = zext i32 %27 to i64, !dbg !6439
  %29 = load %struct.reg_data** @PL_regdata, align 8, !dbg !6439
  %30 = getelementptr inbounds %struct.reg_data* %29, i32 0, i32 2, !dbg !6439
  %31 = getelementptr inbounds [1 x i8*]* %30, i32 0, i64 %28, !dbg !6439
  %32 = load i8** %31, align 8, !dbg !6439
  %33 = bitcast i8* %32 to %struct.sv*, !dbg !6440
  store %struct.sv* %33, %struct.sv** %rv, align 8, !dbg !6437
  call void @llvm.dbg.declare(metadata %struct.av** %av, metadata !6441, metadata !566), !dbg !6442
  %34 = load %struct.sv** %rv, align 8, !dbg !6443
  %35 = getelementptr inbounds %struct.sv* %34, i32 0, i32 0, !dbg !6443
  %36 = load i8** %35, align 8, !dbg !6443
  %37 = bitcast i8* %36 to %struct.xrv*, !dbg !6443
  %38 = getelementptr inbounds %struct.xrv* %37, i32 0, i32 0, !dbg !6443
  %39 = load %struct.sv** %38, align 8, !dbg !6443
  %40 = bitcast %struct.sv* %39 to %struct.av*, !dbg !6444
  store %struct.av* %40, %struct.av** %av, align 8, !dbg !6442
  call void @llvm.dbg.declare(metadata %struct.sv*** %ary, metadata !6445, metadata !566), !dbg !6446
  %41 = load %struct.av** %av, align 8, !dbg !6447
  %42 = getelementptr inbounds %struct.av* %41, i32 0, i32 0, !dbg !6447
  %43 = load %struct.xpvav** %42, align 8, !dbg !6447
  %44 = getelementptr inbounds %struct.xpvav* %43, i32 0, i32 0, !dbg !6447
  %45 = load i8** %44, align 8, !dbg !6447
  %46 = bitcast i8* %45 to %struct.sv**, !dbg !6447
  store %struct.sv** %46, %struct.sv*** %ary, align 8, !dbg !6446
  call void @llvm.dbg.declare(metadata %struct.sv*** %a, metadata !6448, metadata !566), !dbg !6449
  call void @llvm.dbg.declare(metadata %struct.sv*** %b, metadata !6450, metadata !566), !dbg !6451
  %47 = load %struct.sv*** %ary, align 8, !dbg !6452
  %48 = load %struct.sv** %47, align 8, !dbg !6453
  store %struct.sv* %48, %struct.sv** %si, align 8, !dbg !6454
  %49 = load %struct.sv*** %ary, align 8, !dbg !6455
  %50 = getelementptr inbounds %struct.sv** %49, i64 1, !dbg !6455
  %51 = load %struct.sv** %50, align 8, !dbg !6455
  %52 = getelementptr inbounds %struct.sv* %51, i32 0, i32 2, !dbg !6455
  %53 = load i32* %52, align 4, !dbg !6455
  %54 = and i32 %53, 255, !dbg !6455
  %55 = icmp eq i32 %54, 3, !dbg !6455
  br i1 %55, label %56, label %59, !dbg !6455

; <label>:56                                      ; preds = %26
  %57 = load %struct.sv*** %ary, align 8, !dbg !6456
  %58 = getelementptr inbounds %struct.sv** %57, i64 1, !dbg !6458
  br label %60, !dbg !6455

; <label>:59                                      ; preds = %26
  br label %60, !dbg !6459

; <label>:60                                      ; preds = %59, %56
  %61 = phi %struct.sv** [ %58, %56 ], [ null, %59 ], !dbg !6455
  store %struct.sv** %61, %struct.sv*** %a, align 8, !dbg !6461
  %62 = load %struct.sv*** %ary, align 8, !dbg !6464
  %63 = getelementptr inbounds %struct.sv** %62, i64 2, !dbg !6464
  %64 = load %struct.sv** %63, align 8, !dbg !6464
  %65 = getelementptr inbounds %struct.sv* %64, i32 0, i32 2, !dbg !6464
  %66 = load i32* %65, align 4, !dbg !6464
  %67 = and i32 %66, 255, !dbg !6464
  %68 = icmp eq i32 %67, 10, !dbg !6464
  br i1 %68, label %69, label %72, !dbg !6464

; <label>:69                                      ; preds = %60
  %70 = load %struct.sv*** %ary, align 8, !dbg !6465
  %71 = getelementptr inbounds %struct.sv** %70, i64 2, !dbg !6466
  br label %73, !dbg !6464

; <label>:72                                      ; preds = %60
  br label %73, !dbg !6467

; <label>:73                                      ; preds = %72, %69
  %74 = phi %struct.sv** [ %71, %69 ], [ null, %72 ], !dbg !6464
  store %struct.sv** %74, %struct.sv*** %b, align 8, !dbg !6468
  %75 = load %struct.sv*** %a, align 8, !dbg !6469
  %76 = icmp ne %struct.sv** %75, null, !dbg !6471
  br i1 %76, label %77, label %80, !dbg !6471

; <label>:77                                      ; preds = %73
  %78 = load %struct.sv*** %a, align 8, !dbg !6472
  %79 = load %struct.sv** %78, align 8, !dbg !6473
  store %struct.sv* %79, %struct.sv** %sw, align 8, !dbg !6474
  br label %94, !dbg !6474

; <label>:80                                      ; preds = %73
  %81 = load %struct.sv** %si, align 8, !dbg !6475
  %82 = icmp ne %struct.sv* %81, null, !dbg !6477
  br i1 %82, label %83, label %93, !dbg !6477

; <label>:83                                      ; preds = %80
  %84 = load i8* %2, align 1, !dbg !6478
  %85 = sext i8 %84 to i32, !dbg !6478
  %86 = icmp ne i32 %85, 0, !dbg !6477
  br i1 %86, label %87, label %93, !dbg !6477

; <label>:87                                      ; preds = %83
  %88 = load %struct.sv** %si, align 8, !dbg !6480
  %89 = call %struct.sv* @Perl_swash_init(i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str13, i32 0, i32 0), %struct.sv* %88, i32 1, i32 0), !dbg !6482
  store %struct.sv* %89, %struct.sv** %sw, align 8, !dbg !6483
  %90 = load %struct.av** %av, align 8, !dbg !6484
  %91 = load %struct.sv** %sw, align 8, !dbg !6485
  %92 = call %struct.sv** @Perl_av_store(%struct.av* %90, i32 1, %struct.sv* %91), !dbg !6486
  br label %93, !dbg !6487

; <label>:93                                      ; preds = %87, %83, %80
  br label %94

; <label>:94                                      ; preds = %93, %77
  %95 = load %struct.sv*** %b, align 8, !dbg !6488
  %96 = icmp ne %struct.sv** %95, null, !dbg !6490
  br i1 %96, label %97, label %100, !dbg !6490

; <label>:97                                      ; preds = %94
  %98 = load %struct.sv*** %b, align 8, !dbg !6491
  %99 = load %struct.sv** %98, align 8, !dbg !6492
  store %struct.sv* %99, %struct.sv** %alt, align 8, !dbg !6493
  br label %100, !dbg !6493

; <label>:100                                     ; preds = %97, %94
  br label %101, !dbg !6494

; <label>:101                                     ; preds = %100, %12
  br label %102, !dbg !6495

; <label>:102                                     ; preds = %101, %7, %0
  %103 = load %struct.sv*** %3, align 8, !dbg !6496
  %104 = icmp ne %struct.sv** %103, null, !dbg !6498
  br i1 %104, label %105, label %108, !dbg !6498

; <label>:105                                     ; preds = %102
  %106 = load %struct.sv** %si, align 8, !dbg !6499
  %107 = load %struct.sv*** %3, align 8, !dbg !6500
  store %struct.sv* %106, %struct.sv** %107, align 8, !dbg !6501
  br label %108, !dbg !6501

; <label>:108                                     ; preds = %105, %102
  %109 = load %struct.sv*** %4, align 8, !dbg !6502
  %110 = icmp ne %struct.sv** %109, null, !dbg !6504
  br i1 %110, label %111, label %114, !dbg !6504

; <label>:111                                     ; preds = %108
  %112 = load %struct.sv** %alt, align 8, !dbg !6505
  %113 = load %struct.sv*** %4, align 8, !dbg !6506
  store %struct.sv* %112, %struct.sv** %113, align 8, !dbg !6507
  br label %114, !dbg !6507

; <label>:114                                     ; preds = %111, %108
  %115 = load %struct.sv** %sw, align 8, !dbg !6508
  ret %struct.sv* %115, !dbg !6509
}

declare %struct.sv* @Perl_swash_init(i8*, i8*, %struct.sv*, i32, i32) #2

declare %struct.sv** @Perl_av_store(%struct.av*, i32, %struct.sv*) #2

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!562, !563}
!llvm.ident = !{!564}

!0 = !{!"0x11\0012\00clang version 3.6.2 (tags/RELEASE_362/final)\000\00\000\00\001", !1, !2, !37, !536, !541, !541} ; [ DW_TAG_compile_unit ] [/tmp/perlbench/regexec.c] [DW_LANG_C99]
!1 = !{!"regexec.c", !"/tmp/perlbench"}
!2 = !{!3, !22}
!3 = !{!"0x4\00\0046\0032\0032\000\000\000", !4, null, null, !5, null, null, null} ; [ DW_TAG_enumeration_type ] [line 46, size 32, align 32, offset 0] [def] [from ]
!4 = !{!"./sv.h", !"/tmp/perlbench"}
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21}
!6 = !{!"0x28\00SVt_NULL\000"}                    ; [ DW_TAG_enumerator ] [SVt_NULL :: 0]
!7 = !{!"0x28\00SVt_IV\001"}                      ; [ DW_TAG_enumerator ] [SVt_IV :: 1]
!8 = !{!"0x28\00SVt_NV\002"}                      ; [ DW_TAG_enumerator ] [SVt_NV :: 2]
!9 = !{!"0x28\00SVt_RV\003"}                      ; [ DW_TAG_enumerator ] [SVt_RV :: 3]
!10 = !{!"0x28\00SVt_PV\004"}                     ; [ DW_TAG_enumerator ] [SVt_PV :: 4]
!11 = !{!"0x28\00SVt_PVIV\005"}                   ; [ DW_TAG_enumerator ] [SVt_PVIV :: 5]
!12 = !{!"0x28\00SVt_PVNV\006"}                   ; [ DW_TAG_enumerator ] [SVt_PVNV :: 6]
!13 = !{!"0x28\00SVt_PVMG\007"}                   ; [ DW_TAG_enumerator ] [SVt_PVMG :: 7]
!14 = !{!"0x28\00SVt_PVBM\008"}                   ; [ DW_TAG_enumerator ] [SVt_PVBM :: 8]
!15 = !{!"0x28\00SVt_PVLV\009"}                   ; [ DW_TAG_enumerator ] [SVt_PVLV :: 9]
!16 = !{!"0x28\00SVt_PVAV\0010"}                  ; [ DW_TAG_enumerator ] [SVt_PVAV :: 10]
!17 = !{!"0x28\00SVt_PVHV\0011"}                  ; [ DW_TAG_enumerator ] [SVt_PVHV :: 11]
!18 = !{!"0x28\00SVt_PVCV\0012"}                  ; [ DW_TAG_enumerator ] [SVt_PVCV :: 12]
!19 = !{!"0x28\00SVt_PVGV\0013"}                  ; [ DW_TAG_enumerator ] [SVt_PVGV :: 13]
!20 = !{!"0x28\00SVt_PVFM\0014"}                  ; [ DW_TAG_enumerator ] [SVt_PVFM :: 14]
!21 = !{!"0x28\00SVt_PVIO\0015"}                  ; [ DW_TAG_enumerator ] [SVt_PVIO :: 15]
!22 = !{!"0x4\00\0046\0032\0032\000\000\000", !23, null, null, !24, null, null, null} ; [ DW_TAG_enumeration_type ] [line 46, size 32, align 32, offset 0] [def] [from ]
!23 = !{!"/usr/include/ctype.h", !"/tmp/perlbench"}
!24 = !{!25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!25 = !{!"0x28\00_ISupper\00256"}                 ; [ DW_TAG_enumerator ] [_ISupper :: 256]
!26 = !{!"0x28\00_ISlower\00512"}                 ; [ DW_TAG_enumerator ] [_ISlower :: 512]
!27 = !{!"0x28\00_ISalpha\001024"}                ; [ DW_TAG_enumerator ] [_ISalpha :: 1024]
!28 = !{!"0x28\00_ISdigit\002048"}                ; [ DW_TAG_enumerator ] [_ISdigit :: 2048]
!29 = !{!"0x28\00_ISxdigit\004096"}               ; [ DW_TAG_enumerator ] [_ISxdigit :: 4096]
!30 = !{!"0x28\00_ISspace\008192"}                ; [ DW_TAG_enumerator ] [_ISspace :: 8192]
!31 = !{!"0x28\00_ISprint\0016384"}               ; [ DW_TAG_enumerator ] [_ISprint :: 16384]
!32 = !{!"0x28\00_ISgraph\0032768"}               ; [ DW_TAG_enumerator ] [_ISgraph :: 32768]
!33 = !{!"0x28\00_ISblank\001"}                   ; [ DW_TAG_enumerator ] [_ISblank :: 1]
!34 = !{!"0x28\00_IScntrl\002"}                   ; [ DW_TAG_enumerator ] [_IScntrl :: 2]
!35 = !{!"0x28\00_ISpunct\004"}                   ; [ DW_TAG_enumerator ] [_ISpunct :: 4]
!36 = !{!"0x28\00_ISalnum\008"}                   ; [ DW_TAG_enumerator ] [_ISalnum :: 8]
!37 = !{!38, !39, !41, !53, !57, !299, !87, !300, !54, !307, !86, !446, !157, !40, !457, null, !198, !468, !475, !477, !276, !123, !71, !479, !484, !486, !494, !503, !49, !511, !282, !331, !523, !118}
!38 = !{!"0xf\00\000\0064\0064\000\000", null, null, null} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!39 = !{!"0xf\00\000\0064\0064\000\000", null, null, !40} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from char]
!40 = !{!"0x24\00char\000\008\008\000\000\006", null, null} ; [ DW_TAG_base_type ] [char] [line 0, size 8, align 8, offset 0, enc DW_ATE_signed_char]
!41 = !{!"0xf\00\000\0064\0064\000\000", null, null, !42} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPV]
!42 = !{!"0x16\00XPV\002039\000\000\000\000", !43, null, !44} ; [ DW_TAG_typedef ] [XPV] [line 2039, size 0, align 0, offset 0] [from xpv]
!43 = !{!"./perl.h", !"/tmp/perlbench"}
!44 = !{!"0x13\00xpv\00249\00192\0064\000\000\000", !4, null, null, !45, null, null, null} ; [ DW_TAG_structure_type ] [xpv] [line 249, size 192, align 64, offset 0] [def] [from ]
!45 = !{!46, !47, !52}
!46 = !{!"0xd\00xpv_pv\00250\0064\0064\000\000", !4, !44, !39} ; [ DW_TAG_member ] [xpv_pv] [line 250, size 64, align 64, offset 0] [from ]
!47 = !{!"0xd\00xpv_cur\00251\0064\0064\0064\000", !4, !44, !48} ; [ DW_TAG_member ] [xpv_cur] [line 251, size 64, align 64, offset 64] [from STRLEN]
!48 = !{!"0x16\00STRLEN\002003\000\000\000\000", !43, null, !49} ; [ DW_TAG_typedef ] [STRLEN] [line 2003, size 0, align 0, offset 0] [from size_t]
!49 = !{!"0x16\00size_t\0062\000\000\000\000", !50, null, !51} ; [ DW_TAG_typedef ] [size_t] [line 62, size 0, align 0, offset 0] [from long unsigned int]
!50 = !{!"/usr/local/bin/../lib/clang/3.6.2/include/stddef.h", !"/tmp/perlbench"}
!51 = !{!"0x24\00long unsigned int\000\0064\0064\000\000\007", null, null} ; [ DW_TAG_base_type ] [long unsigned int] [line 0, size 64, align 64, offset 0, enc DW_ATE_unsigned]
!52 = !{!"0xd\00xpv_len\00252\0064\0064\00128\000", !4, !44, !48} ; [ DW_TAG_member ] [xpv_len] [line 252, size 64, align 64, offset 128] [from STRLEN]
!53 = !{!"0xf\00\000\0064\0064\000\000", null, null, !54} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from U8]
!54 = !{!"0x16\00U8\00133\000\000\000\000", !55, null, !56} ; [ DW_TAG_typedef ] [U8] [line 133, size 0, align 0, offset 0] [from unsigned char]
!55 = !{!"./handy.h", !"/tmp/perlbench"}
!56 = !{!"0x24\00unsigned char\000\008\008\000\000\008", null, null} ; [ DW_TAG_base_type ] [unsigned char] [line 0, size 8, align 8, offset 0, enc DW_ATE_unsigned_char]
!57 = !{!"0xf\00\000\0064\0064\000\000", null, null, !58} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVBM]
!58 = !{!"0x16\00XPVBM\002049\000\000\000\000", !43, null, !59} ; [ DW_TAG_typedef ] [XPVBM] [line 2049, size 0, align 0, offset 0] [from xpvbm]
!59 = !{!"0x13\00xpvbm\00320\00512\0064\000\000\000", !4, null, null, !60, null, null, null} ; [ DW_TAG_structure_type ] [xpvbm] [line 320, size 512, align 64, offset 0] [def] [from ]
!60 = !{!61, !62, !63, !64, !67, !70, !295, !296, !297, !298}
!61 = !{!"0xd\00xpv_pv\00321\0064\0064\000\000", !4, !59, !39} ; [ DW_TAG_member ] [xpv_pv] [line 321, size 64, align 64, offset 0] [from ]
!62 = !{!"0xd\00xpv_cur\00322\0064\0064\0064\000", !4, !59, !48} ; [ DW_TAG_member ] [xpv_cur] [line 322, size 64, align 64, offset 64] [from STRLEN]
!63 = !{!"0xd\00xpv_len\00323\0064\0064\00128\000", !4, !59, !48} ; [ DW_TAG_member ] [xpv_len] [line 323, size 64, align 64, offset 128] [from STRLEN]
!64 = !{!"0xd\00xiv_iv\00324\0064\0064\00192\000", !4, !59, !65} ; [ DW_TAG_member ] [xiv_iv] [line 324, size 64, align 64, offset 192] [from IV]
!65 = !{!"0x16\00IV\001323\000\000\000\000", !43, null, !66} ; [ DW_TAG_typedef ] [IV] [line 1323, size 0, align 0, offset 0] [from long int]
!66 = !{!"0x24\00long int\000\0064\0064\000\000\005", null, null} ; [ DW_TAG_base_type ] [long int] [line 0, size 64, align 64, offset 0, enc DW_ATE_signed]
!67 = !{!"0xd\00xnv_nv\00325\0064\0064\00256\000", !4, !59, !68} ; [ DW_TAG_member ] [xnv_nv] [line 325, size 64, align 64, offset 256] [from NV]
!68 = !{!"0x16\00NV\001523\000\000\000\000", !43, null, !69} ; [ DW_TAG_typedef ] [NV] [line 1523, size 0, align 0, offset 0] [from double]
!69 = !{!"0x24\00double\000\0064\0064\000\000\004", null, null} ; [ DW_TAG_base_type ] [double] [line 0, size 64, align 64, offset 0, enc DW_ATE_float]
!70 = !{!"0xd\00xmg_magic\00326\0064\0064\00320\000", !4, !59, !71} ; [ DW_TAG_member ] [xmg_magic] [line 326, size 64, align 64, offset 320] [from ]
!71 = !{!"0xf\00\000\0064\0064\000\000", null, null, !72} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from MAGIC]
!72 = !{!"0x16\00MAGIC\002037\000\000\000\000", !43, null, !73} ; [ DW_TAG_typedef ] [MAGIC] [line 2037, size 0, align 0, offset 0] [from magic]
!73 = !{!"0x13\00magic\0026\00384\0064\000\000\000", !74, null, null, !75, null, null, null} ; [ DW_TAG_structure_type ] [magic] [line 26, size 384, align 64, offset 0] [def] [from ]
!74 = !{!"./mg.h", !"/tmp/perlbench"}
!75 = !{!76, !77, !289, !290, !291, !292, !293, !294}
!76 = !{!"0xd\00mg_moremagic\0027\0064\0064\000\000", !74, !73, !71} ; [ DW_TAG_member ] [mg_moremagic] [line 27, size 64, align 64, offset 0] [from ]
!77 = !{!"0xd\00mg_virtual\0028\0064\0064\0064\000", !74, !73, !78} ; [ DW_TAG_member ] [mg_virtual] [line 28, size 64, align 64, offset 64] [from ]
!78 = !{!"0xf\00\000\0064\0064\000\000", null, null, !79} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from MGVTBL]
!79 = !{!"0x16\00MGVTBL\002052\000\000\000\000", !43, null, !80} ; [ DW_TAG_typedef ] [MGVTBL] [line 2052, size 0, align 0, offset 0] [from mgvtbl]
!80 = !{!"0x13\00mgvtbl\0014\00448\0064\000\000\000", !74, null, null, !81, null, null, null} ; [ DW_TAG_structure_type ] [mgvtbl] [line 14, size 448, align 64, offset 0] [def] [from ]
!81 = !{!82, !96, !97, !101, !102, !103, !109}
!82 = !{!"0xd\00svt_get\0015\0064\0064\000\000", !74, !80, !83} ; [ DW_TAG_member ] [svt_get] [line 15, size 64, align 64, offset 0] [from ]
!83 = !{!"0xf\00\000\0064\0064\000\000", null, null, !84} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!84 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !85, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!85 = !{!86, !87, !71}
!86 = !{!"0x24\00int\000\0032\0032\000\000\005", null, null} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
!87 = !{!"0xf\00\000\0064\0064\000\000", null, null, !88} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from SV]
!88 = !{!"0x16\00SV\002026\000\000\000\000", !43, null, !89} ; [ DW_TAG_typedef ] [SV] [line 2026, size 0, align 0, offset 0] [from sv]
!89 = !{!"0x13\00sv\0067\00128\0064\000\000\000", !4, null, null, !90, null, null, null} ; [ DW_TAG_structure_type ] [sv] [line 67, size 128, align 64, offset 0] [def] [from ]
!90 = !{!91, !92, !95}
!91 = !{!"0xd\00sv_any\0068\0064\0064\000\000", !4, !89, !38} ; [ DW_TAG_member ] [sv_any] [line 68, size 64, align 64, offset 0] [from ]
!92 = !{!"0xd\00sv_refcnt\0069\0032\0032\0064\000", !4, !89, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 69, size 32, align 32, offset 64] [from U32]
!93 = !{!"0x16\00U32\00137\000\000\000\000", !55, null, !94} ; [ DW_TAG_typedef ] [U32] [line 137, size 0, align 0, offset 0] [from unsigned int]
!94 = !{!"0x24\00unsigned int\000\0032\0032\000\000\007", null, null} ; [ DW_TAG_base_type ] [unsigned int] [line 0, size 32, align 32, offset 0, enc DW_ATE_unsigned]
!95 = !{!"0xd\00sv_flags\0070\0032\0032\0096\000", !4, !89, !93} ; [ DW_TAG_member ] [sv_flags] [line 70, size 32, align 32, offset 96] [from U32]
!96 = !{!"0xd\00svt_set\0016\0064\0064\0064\000", !74, !80, !83} ; [ DW_TAG_member ] [svt_set] [line 16, size 64, align 64, offset 64] [from ]
!97 = !{!"0xd\00svt_len\0017\0064\0064\00128\000", !74, !80, !98} ; [ DW_TAG_member ] [svt_len] [line 17, size 64, align 64, offset 128] [from ]
!98 = !{!"0xf\00\000\0064\0064\000\000", null, null, !99} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!99 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !100, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!100 = !{!93, !87, !71}
!101 = !{!"0xd\00svt_clear\0018\0064\0064\00192\000", !74, !80, !83} ; [ DW_TAG_member ] [svt_clear] [line 18, size 64, align 64, offset 192] [from ]
!102 = !{!"0xd\00svt_free\0019\0064\0064\00256\000", !74, !80, !83} ; [ DW_TAG_member ] [svt_free] [line 19, size 64, align 64, offset 256] [from ]
!103 = !{!"0xd\00svt_copy\0020\0064\0064\00320\000", !74, !80, !104} ; [ DW_TAG_member ] [svt_copy] [line 20, size 64, align 64, offset 320] [from ]
!104 = !{!"0xf\00\000\0064\0064\000\000", null, null, !105} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!105 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !106, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!106 = !{!86, !87, !71, !87, !107, !86}
!107 = !{!"0xf\00\000\0064\0064\000\000", null, null, !108} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!108 = !{!"0x26\00\000\000\000\000\000", null, null, !40} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from char]
!109 = !{!"0xd\00svt_dup\0022\0064\0064\00384\000", !74, !80, !110} ; [ DW_TAG_member ] [svt_dup] [line 22, size 64, align 64, offset 384] [from ]
!110 = !{!"0xf\00\000\0064\0064\000\000", null, null, !111} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!111 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !112, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!112 = !{!86, !71, !113}
!113 = !{!"0xf\00\000\0064\0064\000\000", null, null, !114} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from CLONE_PARAMS]
!114 = !{!"0x16\00CLONE_PARAMS\002056\000\000\000\000", !43, null, !115} ; [ DW_TAG_typedef ] [CLONE_PARAMS] [line 2056, size 0, align 0, offset 0] [from clone_params]
!115 = !{!"0x13\00clone_params\001261\00192\0064\000\000\000", !4, null, null, !116, null, null, null} ; [ DW_TAG_structure_type ] [clone_params] [line 1261, size 192, align 64, offset 0] [def] [from ]
!116 = !{!117, !281, !283}
!117 = !{!"0xd\00stashes\001262\0064\0064\000\000", !4, !115, !118} ; [ DW_TAG_member ] [stashes] [line 1262, size 64, align 64, offset 0] [from ]
!118 = !{!"0xf\00\000\0064\0064\000\000", null, null, !119} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from AV]
!119 = !{!"0x16\00AV\002027\000\000\000\000", !43, null, !120} ; [ DW_TAG_typedef ] [AV] [line 2027, size 0, align 0, offset 0] [from av]
!120 = !{!"0x13\00av\0085\00128\0064\000\000\000", !4, null, null, !121, null, null, null} ; [ DW_TAG_structure_type ] [av] [line 85, size 128, align 64, offset 0] [def] [from ]
!121 = !{!122, !279, !280}
!122 = !{!"0xd\00sv_any\0086\0064\0064\000\000", !4, !120, !123} ; [ DW_TAG_member ] [sv_any] [line 86, size 64, align 64, offset 0] [from ]
!123 = !{!"0xf\00\000\0064\0064\000\000", null, null, !124} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVAV]
!124 = !{!"0x16\00XPVAV\002045\000\000\000\000", !43, null, !125} ; [ DW_TAG_typedef ] [XPVAV] [line 2045, size 0, align 0, offset 0] [from xpvav]
!125 = !{!"0x13\00xpvav\0011\00640\0064\000\000\000", !126, null, null, !127, null, null, null} ; [ DW_TAG_structure_type ] [xpvav] [line 11, size 640, align 64, offset 0] [def] [from ]
!126 = !{!"./av.h", !"/tmp/perlbench"}
!127 = !{!128, !129, !134, !135, !136, !137, !138, !275, !277, !278}
!128 = !{!"0xd\00xav_array\0012\0064\0064\000\000", !126, !125, !39} ; [ DW_TAG_member ] [xav_array] [line 12, size 64, align 64, offset 0] [from ]
!129 = !{!"0xd\00xav_fill\0013\0064\0064\0064\000", !126, !125, !130} ; [ DW_TAG_member ] [xav_fill] [line 13, size 64, align 64, offset 64] [from ssize_t]
!130 = !{!"0x16\00ssize_t\00109\000\000\000\000", !131, null, !132} ; [ DW_TAG_typedef ] [ssize_t] [line 109, size 0, align 0, offset 0] [from __ssize_t]
!131 = !{!"/usr/include/x86_64-linux-gnu/sys/types.h", !"/tmp/perlbench"}
!132 = !{!"0x16\00__ssize_t\00172\000\000\000\000", !133, null, !66} ; [ DW_TAG_typedef ] [__ssize_t] [line 172, size 0, align 0, offset 0] [from long int]
!133 = !{!"/usr/include/x86_64-linux-gnu/bits/types.h", !"/tmp/perlbench"}
!134 = !{!"0xd\00xav_max\0014\0064\0064\00128\000", !126, !125, !130} ; [ DW_TAG_member ] [xav_max] [line 14, size 64, align 64, offset 128] [from ssize_t]
!135 = !{!"0xd\00xof_off\0015\0064\0064\00192\000", !126, !125, !65} ; [ DW_TAG_member ] [xof_off] [line 15, size 64, align 64, offset 192] [from IV]
!136 = !{!"0xd\00xnv_nv\0016\0064\0064\00256\000", !126, !125, !68} ; [ DW_TAG_member ] [xnv_nv] [line 16, size 64, align 64, offset 256] [from NV]
!137 = !{!"0xd\00xmg_magic\0017\0064\0064\00320\000", !126, !125, !71} ; [ DW_TAG_member ] [xmg_magic] [line 17, size 64, align 64, offset 320] [from ]
!138 = !{!"0xd\00xmg_stash\0018\0064\0064\00384\000", !126, !125, !139} ; [ DW_TAG_member ] [xmg_stash] [line 18, size 64, align 64, offset 384] [from ]
!139 = !{!"0xf\00\000\0064\0064\000\000", null, null, !140} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from HV]
!140 = !{!"0x16\00HV\002028\000\000\000\000", !43, null, !141} ; [ DW_TAG_typedef ] [HV] [line 2028, size 0, align 0, offset 0] [from hv]
!141 = !{!"0x13\00hv\0091\00128\0064\000\000\000", !4, null, null, !142, null, null, null} ; [ DW_TAG_structure_type ] [hv] [line 91, size 128, align 64, offset 0] [def] [from ]
!142 = !{!143, !273, !274}
!143 = !{!"0xd\00sv_any\0092\0064\0064\000\000", !4, !141, !144} ; [ DW_TAG_member ] [sv_any] [line 92, size 64, align 64, offset 0] [from ]
!144 = !{!"0xf\00\000\0064\0064\000\000", null, null, !145} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVHV]
!145 = !{!"0x16\00XPVHV\002046\000\000\000\000", !43, null, !146} ; [ DW_TAG_typedef ] [XPVHV] [line 2046, size 0, align 0, offset 0] [from xpvhv]
!146 = !{!"0x13\00xpvhv\0034\00704\0064\000\000\000", !147, null, null, !148, null, null, null} ; [ DW_TAG_structure_type ] [xpvhv] [line 34, size 704, align 64, offset 0] [def] [from ]
!147 = !{!"./hv.h", !"/tmp/perlbench"}
!148 = !{!149, !150, !151, !152, !153, !154, !155, !156, !158, !176, !272}
!149 = !{!"0xd\00xhv_array\0035\0064\0064\000\000", !147, !146, !39} ; [ DW_TAG_member ] [xhv_array] [line 35, size 64, align 64, offset 0] [from ]
!150 = !{!"0xd\00xhv_fill\0036\0064\0064\0064\000", !147, !146, !48} ; [ DW_TAG_member ] [xhv_fill] [line 36, size 64, align 64, offset 64] [from STRLEN]
!151 = !{!"0xd\00xhv_max\0037\0064\0064\00128\000", !147, !146, !48} ; [ DW_TAG_member ] [xhv_max] [line 37, size 64, align 64, offset 128] [from STRLEN]
!152 = !{!"0xd\00xhv_keys\0038\0064\0064\00192\000", !147, !146, !65} ; [ DW_TAG_member ] [xhv_keys] [line 38, size 64, align 64, offset 192] [from IV]
!153 = !{!"0xd\00xnv_nv\0039\0064\0064\00256\000", !147, !146, !68} ; [ DW_TAG_member ] [xnv_nv] [line 39, size 64, align 64, offset 256] [from NV]
!154 = !{!"0xd\00xmg_magic\0041\0064\0064\00320\000", !147, !146, !71} ; [ DW_TAG_member ] [xmg_magic] [line 41, size 64, align 64, offset 320] [from ]
!155 = !{!"0xd\00xmg_stash\0042\0064\0064\00384\000", !147, !146, !139} ; [ DW_TAG_member ] [xmg_stash] [line 42, size 64, align 64, offset 384] [from ]
!156 = !{!"0xd\00xhv_riter\0044\0032\0032\00448\000", !147, !146, !157} ; [ DW_TAG_member ] [xhv_riter] [line 44, size 32, align 32, offset 448] [from I32]
!157 = !{!"0x16\00I32\00136\000\000\000\000", !55, null, !86} ; [ DW_TAG_typedef ] [I32] [line 136, size 0, align 0, offset 0] [from int]
!158 = !{!"0xd\00xhv_eiter\0045\0064\0064\00512\000", !147, !146, !159} ; [ DW_TAG_member ] [xhv_eiter] [line 45, size 64, align 64, offset 512] [from ]
!159 = !{!"0xf\00\000\0064\0064\000\000", null, null, !160} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from HE]
!160 = !{!"0x16\00HE\0012\000\000\000\000", !147, null, !161} ; [ DW_TAG_typedef ] [HE] [line 12, size 0, align 0, offset 0] [from he]
!161 = !{!"0x13\00he\0016\00192\0064\000\000\000", !147, null, null, !162, null, null, null} ; [ DW_TAG_structure_type ] [he] [line 16, size 192, align 64, offset 0] [def] [from ]
!162 = !{!163, !164, !175}
!163 = !{!"0xd\00hent_next\0017\0064\0064\000\000", !147, !161, !159} ; [ DW_TAG_member ] [hent_next] [line 17, size 64, align 64, offset 0] [from ]
!164 = !{!"0xd\00hent_hek\0018\0064\0064\0064\000", !147, !161, !165} ; [ DW_TAG_member ] [hent_hek] [line 18, size 64, align 64, offset 64] [from ]
!165 = !{!"0xf\00\000\0064\0064\000\000", null, null, !166} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from HEK]
!166 = !{!"0x16\00HEK\0013\000\000\000\000", !147, null, !167} ; [ DW_TAG_typedef ] [HEK] [line 13, size 0, align 0, offset 0] [from hek]
!167 = !{!"0x13\00hek\0023\0096\0032\000\000\000", !147, null, null, !168, null, null, null} ; [ DW_TAG_structure_type ] [hek] [line 23, size 96, align 32, offset 0] [def] [from ]
!168 = !{!169, !170, !171}
!169 = !{!"0xd\00hek_hash\0024\0032\0032\000\000", !147, !167, !93} ; [ DW_TAG_member ] [hek_hash] [line 24, size 32, align 32, offset 0] [from U32]
!170 = !{!"0xd\00hek_len\0025\0032\0032\0032\000", !147, !167, !157} ; [ DW_TAG_member ] [hek_len] [line 25, size 32, align 32, offset 32] [from I32]
!171 = !{!"0xd\00hek_key\0026\008\008\0064\000", !147, !167, !172} ; [ DW_TAG_member ] [hek_key] [line 26, size 8, align 8, offset 64] [from ]
!172 = !{!"0x1\00\000\008\008\000\000\000", null, null, !40, !173, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 8, align 8, offset 0] [from char]
!173 = !{!174}
!174 = !{!"0x21\000\001"}                         ; [ DW_TAG_subrange_type ] [0, 0]
!175 = !{!"0xd\00hent_val\0019\0064\0064\00128\000", !147, !161, !87} ; [ DW_TAG_member ] [hent_val] [line 19, size 64, align 64, offset 128] [from ]
!176 = !{!"0xd\00xhv_pmroot\0046\0064\0064\00576\000", !147, !146, !177} ; [ DW_TAG_member ] [xhv_pmroot] [line 46, size 64, align 64, offset 576] [from ]
!177 = !{!"0xf\00\000\0064\0064\000\000", null, null, !178} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PMOP]
!178 = !{!"0x16\00PMOP\002011\000\000\000\000", !43, null, !179} ; [ DW_TAG_typedef ] [PMOP] [line 2011, size 0, align 0, offset 0] [from pmop]
!179 = !{!"0x13\00pmop\00253\00896\0064\000\000\000", !180, null, null, !181, null, null, null} ; [ DW_TAG_structure_type ] [pmop] [line 253, size 896, align 64, offset 0] [def] [from ]
!180 = !{!"./op.h", !"/tmp/perlbench"}
!181 = !{!182, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !268, !269, !270, !271}
!182 = !{!"0xd\00op_next\00254\0064\0064\000\000", !180, !179, !183} ; [ DW_TAG_member ] [op_next] [line 254, size 64, align 64, offset 0] [from ]
!183 = !{!"0xf\00\000\0064\0064\000\000", null, null, !184} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from OP]
!184 = !{!"0x16\00OP\002005\000\000\000\000", !43, null, !185} ; [ DW_TAG_typedef ] [OP] [line 2005, size 0, align 0, offset 0] [from op]
!185 = !{!"0x13\00op\00226\00320\0064\000\000\000", !180, null, null, !186, null, null, null} ; [ DW_TAG_structure_type ] [op] [line 226, size 320, align 64, offset 0] [def] [from ]
!186 = !{!187, !188, !189, !193, !196, !199, !200, !201}
!187 = !{!"0xd\00op_next\00227\0064\0064\000\000", !180, !185, !183} ; [ DW_TAG_member ] [op_next] [line 227, size 64, align 64, offset 0] [from ]
!188 = !{!"0xd\00op_sibling\00227\0064\0064\0064\000", !180, !185, !183} ; [ DW_TAG_member ] [op_sibling] [line 227, size 64, align 64, offset 64] [from ]
!189 = !{!"0xd\00op_ppaddr\00227\0064\0064\00128\000", !180, !185, !190} ; [ DW_TAG_member ] [op_ppaddr] [line 227, size 64, align 64, offset 128] [from ]
!190 = !{!"0xf\00\000\0064\0064\000\000", null, null, !191} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!191 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !192, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!192 = !{!183}
!193 = !{!"0xd\00op_targ\00227\0064\0064\00192\000", !180, !185, !194} ; [ DW_TAG_member ] [op_targ] [line 227, size 64, align 64, offset 192] [from PADOFFSET]
!194 = !{!"0x16\00PADOFFSET\0029\000\000\000\000", !195, null, !51} ; [ DW_TAG_typedef ] [PADOFFSET] [line 29, size 0, align 0, offset 0] [from long unsigned int]
!195 = !{!"./pad.h", !"/tmp/perlbench"}
!196 = !{!"0xd\00op_type\00227\0016\0016\00256\000", !180, !185, !197} ; [ DW_TAG_member ] [op_type] [line 227, size 16, align 16, offset 256] [from U16]
!197 = !{!"0x16\00U16\00135\000\000\000\000", !55, null, !198} ; [ DW_TAG_typedef ] [U16] [line 135, size 0, align 0, offset 0] [from unsigned short]
!198 = !{!"0x24\00unsigned short\000\0016\0016\000\000\007", null, null} ; [ DW_TAG_base_type ] [unsigned short] [line 0, size 16, align 16, offset 0, enc DW_ATE_unsigned]
!199 = !{!"0xd\00op_seq\00227\0016\0016\00272\000", !180, !185, !197} ; [ DW_TAG_member ] [op_seq] [line 227, size 16, align 16, offset 272] [from U16]
!200 = !{!"0xd\00op_flags\00227\008\008\00288\000", !180, !185, !54} ; [ DW_TAG_member ] [op_flags] [line 227, size 8, align 8, offset 288] [from U8]
!201 = !{!"0xd\00op_private\00227\008\008\00296\000", !180, !185, !54} ; [ DW_TAG_member ] [op_private] [line 227, size 8, align 8, offset 296] [from U8]
!202 = !{!"0xd\00op_sibling\00254\0064\0064\0064\000", !180, !179, !183} ; [ DW_TAG_member ] [op_sibling] [line 254, size 64, align 64, offset 64] [from ]
!203 = !{!"0xd\00op_ppaddr\00254\0064\0064\00128\000", !180, !179, !190} ; [ DW_TAG_member ] [op_ppaddr] [line 254, size 64, align 64, offset 128] [from ]
!204 = !{!"0xd\00op_targ\00254\0064\0064\00192\000", !180, !179, !194} ; [ DW_TAG_member ] [op_targ] [line 254, size 64, align 64, offset 192] [from PADOFFSET]
!205 = !{!"0xd\00op_type\00254\0016\0016\00256\000", !180, !179, !197} ; [ DW_TAG_member ] [op_type] [line 254, size 16, align 16, offset 256] [from U16]
!206 = !{!"0xd\00op_seq\00254\0016\0016\00272\000", !180, !179, !197} ; [ DW_TAG_member ] [op_seq] [line 254, size 16, align 16, offset 272] [from U16]
!207 = !{!"0xd\00op_flags\00254\008\008\00288\000", !180, !179, !54} ; [ DW_TAG_member ] [op_flags] [line 254, size 8, align 8, offset 288] [from U8]
!208 = !{!"0xd\00op_private\00254\008\008\00296\000", !180, !179, !54} ; [ DW_TAG_member ] [op_private] [line 254, size 8, align 8, offset 296] [from U8]
!209 = !{!"0xd\00op_first\00255\0064\0064\00320\000", !180, !179, !183} ; [ DW_TAG_member ] [op_first] [line 255, size 64, align 64, offset 320] [from ]
!210 = !{!"0xd\00op_last\00256\0064\0064\00384\000", !180, !179, !183} ; [ DW_TAG_member ] [op_last] [line 256, size 64, align 64, offset 384] [from ]
!211 = !{!"0xd\00op_pmreplroot\00257\0064\0064\00448\000", !180, !179, !183} ; [ DW_TAG_member ] [op_pmreplroot] [line 257, size 64, align 64, offset 448] [from ]
!212 = !{!"0xd\00op_pmreplstart\00258\0064\0064\00512\000", !180, !179, !183} ; [ DW_TAG_member ] [op_pmreplstart] [line 258, size 64, align 64, offset 512] [from ]
!213 = !{!"0xd\00op_pmnext\00259\0064\0064\00576\000", !180, !179, !177} ; [ DW_TAG_member ] [op_pmnext] [line 259, size 64, align 64, offset 576] [from ]
!214 = !{!"0xd\00op_pmregexp\00263\0064\0064\00640\000", !180, !179, !215} ; [ DW_TAG_member ] [op_pmregexp] [line 263, size 64, align 64, offset 640] [from ]
!215 = !{!"0xf\00\000\0064\0064\000\000", null, null, !216} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from REGEXP]
!216 = !{!"0x16\00REGEXP\002030\000\000\000\000", !43, null, !217} ; [ DW_TAG_typedef ] [REGEXP] [line 2030, size 0, align 0, offset 0] [from regexp]
!217 = !{!"0x13\00regexp\0031\00832\0064\000\000\000", !218, null, null, !219, null, null, null} ; [ DW_TAG_structure_type ] [regexp] [line 31, size 832, align 64, offset 0] [def] [from ]
!218 = !{!"./regexp.h", !"/tmp/perlbench"}
!219 = !{!220, !222, !223, !231, !246, !247, !255, !256, !258, !259, !260, !261, !262, !263, !264, !265, !266}
!220 = !{!"0xd\00startp\0032\0064\0064\000\000", !218, !217, !221} ; [ DW_TAG_member ] [startp] [line 32, size 64, align 64, offset 0] [from ]
!221 = !{!"0xf\00\000\0064\0064\000\000", null, null, !157} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from I32]
!222 = !{!"0xd\00endp\0033\0064\0064\0064\000", !218, !217, !221} ; [ DW_TAG_member ] [endp] [line 33, size 64, align 64, offset 64] [from ]
!223 = !{!"0xd\00regstclass\0034\0064\0064\00128\000", !218, !217, !224} ; [ DW_TAG_member ] [regstclass] [line 34, size 64, align 64, offset 128] [from ]
!224 = !{!"0xf\00\000\0064\0064\000\000", null, null, !225} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regnode]
!225 = !{!"0x16\00regnode\0025\000\000\000\000", !218, null, !226} ; [ DW_TAG_typedef ] [regnode] [line 25, size 0, align 0, offset 0] [from regnode]
!226 = !{!"0x13\00regnode\0019\0032\0016\000\000\000", !218, null, null, !227, null, null, null} ; [ DW_TAG_structure_type ] [regnode] [line 19, size 32, align 16, offset 0] [def] [from ]
!227 = !{!228, !229, !230}
!228 = !{!"0xd\00flags\0020\008\008\000\000", !218, !226, !54} ; [ DW_TAG_member ] [flags] [line 20, size 8, align 8, offset 0] [from U8]
!229 = !{!"0xd\00type\0021\008\008\008\000", !218, !226, !54} ; [ DW_TAG_member ] [type] [line 21, size 8, align 8, offset 8] [from U8]
!230 = !{!"0xd\00next_off\0022\0016\0016\0016\000", !218, !226, !197} ; [ DW_TAG_member ] [next_off] [line 22, size 16, align 16, offset 16] [from U16]
!231 = !{!"0xd\00substrs\0035\0064\0064\00192\000", !218, !217, !232} ; [ DW_TAG_member ] [substrs] [line 35, size 64, align 64, offset 192] [from ]
!232 = !{!"0xf\00\000\0064\0064\000\000", null, null, !233} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from reg_substr_data]
!233 = !{!"0x13\00reg_substr_data\00394\00576\0064\000\000\000", !234, null, null, !235, null, null, null} ; [ DW_TAG_structure_type ] [reg_substr_data] [line 394, size 576, align 64, offset 0] [def] [from ]
!234 = !{!"./regcomp.h", !"/tmp/perlbench"}
!235 = !{!236}
!236 = !{!"0xd\00data\00395\00576\0064\000\000", !234, !233, !237} ; [ DW_TAG_member ] [data] [line 395, size 576, align 64, offset 0] [from ]
!237 = !{!"0x1\00\000\00576\0064\000\000\000", null, null, !238, !244, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 576, align 64, offset 0] [from reg_substr_datum]
!238 = !{!"0x13\00reg_substr_datum\00387\00192\0064\000\000\000", !234, null, null, !239, null, null, null} ; [ DW_TAG_structure_type ] [reg_substr_datum] [line 387, size 192, align 64, offset 0] [def] [from ]
!239 = !{!240, !241, !242, !243}
!240 = !{!"0xd\00min_offset\00388\0032\0032\000\000", !234, !238, !157} ; [ DW_TAG_member ] [min_offset] [line 388, size 32, align 32, offset 0] [from I32]
!241 = !{!"0xd\00max_offset\00389\0032\0032\0032\000", !234, !238, !157} ; [ DW_TAG_member ] [max_offset] [line 389, size 32, align 32, offset 32] [from I32]
!242 = !{!"0xd\00substr\00390\0064\0064\0064\000", !234, !238, !87} ; [ DW_TAG_member ] [substr] [line 390, size 64, align 64, offset 64] [from ]
!243 = !{!"0xd\00utf8_substr\00391\0064\0064\00128\000", !234, !238, !87} ; [ DW_TAG_member ] [utf8_substr] [line 391, size 64, align 64, offset 128] [from ]
!244 = !{!245}
!245 = !{!"0x21\000\003"}                         ; [ DW_TAG_subrange_type ] [0, 2]
!246 = !{!"0xd\00precomp\0036\0064\0064\00256\000", !218, !217, !39} ; [ DW_TAG_member ] [precomp] [line 36, size 64, align 64, offset 256] [from ]
!247 = !{!"0xd\00data\0037\0064\0064\00320\000", !218, !217, !248} ; [ DW_TAG_member ] [data] [line 37, size 64, align 64, offset 320] [from ]
!248 = !{!"0xf\00\000\0064\0064\000\000", null, null, !249} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from reg_data]
!249 = !{!"0x13\00reg_data\00381\00192\0064\000\000\000", !234, null, null, !250, null, null, null} ; [ DW_TAG_structure_type ] [reg_data] [line 381, size 192, align 64, offset 0] [def] [from ]
!250 = !{!251, !252, !253}
!251 = !{!"0xd\00count\00382\0032\0032\000\000", !234, !249, !93} ; [ DW_TAG_member ] [count] [line 382, size 32, align 32, offset 0] [from U32]
!252 = !{!"0xd\00what\00383\0064\0064\0064\000", !234, !249, !53} ; [ DW_TAG_member ] [what] [line 383, size 64, align 64, offset 64] [from ]
!253 = !{!"0xd\00data\00384\0064\0064\00128\000", !234, !249, !254} ; [ DW_TAG_member ] [data] [line 384, size 64, align 64, offset 128] [from ]
!254 = !{!"0x1\00\000\0064\0064\000\000\000", null, null, !38, !173, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 64, align 64, offset 0] [from ]
!255 = !{!"0xd\00subbeg\0038\0064\0064\00384\000", !218, !217, !39} ; [ DW_TAG_member ] [subbeg] [line 38, size 64, align 64, offset 384] [from ]
!256 = !{!"0xd\00offsets\0040\0064\0064\00448\000", !218, !217, !257} ; [ DW_TAG_member ] [offsets] [line 40, size 64, align 64, offset 448] [from ]
!257 = !{!"0xf\00\000\0064\0064\000\000", null, null, !93} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from U32]
!258 = !{!"0xd\00sublen\0041\0032\0032\00512\000", !218, !217, !157} ; [ DW_TAG_member ] [sublen] [line 41, size 32, align 32, offset 512] [from I32]
!259 = !{!"0xd\00refcnt\0042\0032\0032\00544\000", !218, !217, !157} ; [ DW_TAG_member ] [refcnt] [line 42, size 32, align 32, offset 544] [from I32]
!260 = !{!"0xd\00minlen\0043\0032\0032\00576\000", !218, !217, !157} ; [ DW_TAG_member ] [minlen] [line 43, size 32, align 32, offset 576] [from I32]
!261 = !{!"0xd\00prelen\0044\0032\0032\00608\000", !218, !217, !157} ; [ DW_TAG_member ] [prelen] [line 44, size 32, align 32, offset 608] [from I32]
!262 = !{!"0xd\00nparens\0045\0032\0032\00640\000", !218, !217, !93} ; [ DW_TAG_member ] [nparens] [line 45, size 32, align 32, offset 640] [from U32]
!263 = !{!"0xd\00lastparen\0046\0032\0032\00672\000", !218, !217, !93} ; [ DW_TAG_member ] [lastparen] [line 46, size 32, align 32, offset 672] [from U32]
!264 = !{!"0xd\00lastcloseparen\0047\0032\0032\00704\000", !218, !217, !93} ; [ DW_TAG_member ] [lastcloseparen] [line 47, size 32, align 32, offset 704] [from U32]
!265 = !{!"0xd\00reganch\0048\0032\0032\00736\000", !218, !217, !93} ; [ DW_TAG_member ] [reganch] [line 48, size 32, align 32, offset 736] [from U32]
!266 = !{!"0xd\00program\0050\0032\0016\00768\000", !218, !217, !267} ; [ DW_TAG_member ] [program] [line 50, size 32, align 16, offset 768] [from ]
!267 = !{!"0x1\00\000\0032\0016\000\000\000", null, null, !225, !173, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 32, align 16, offset 0] [from regnode]
!268 = !{!"0xd\00op_pmflags\00265\0032\0032\00704\000", !180, !179, !93} ; [ DW_TAG_member ] [op_pmflags] [line 265, size 32, align 32, offset 704] [from U32]
!269 = !{!"0xd\00op_pmpermflags\00266\0032\0032\00736\000", !180, !179, !93} ; [ DW_TAG_member ] [op_pmpermflags] [line 266, size 32, align 32, offset 736] [from U32]
!270 = !{!"0xd\00op_pmdynflags\00267\008\008\00768\000", !180, !179, !54} ; [ DW_TAG_member ] [op_pmdynflags] [line 267, size 8, align 8, offset 768] [from U8]
!271 = !{!"0xd\00op_pmstash\00271\0064\0064\00832\000", !180, !179, !139} ; [ DW_TAG_member ] [op_pmstash] [line 271, size 64, align 64, offset 832] [from ]
!272 = !{!"0xd\00xhv_name\0047\0064\0064\00640\000", !147, !146, !39} ; [ DW_TAG_member ] [xhv_name] [line 47, size 64, align 64, offset 640] [from ]
!273 = !{!"0xd\00sv_refcnt\0093\0032\0032\0064\000", !4, !141, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 93, size 32, align 32, offset 64] [from U32]
!274 = !{!"0xd\00sv_flags\0094\0032\0032\0096\000", !4, !141, !93} ; [ DW_TAG_member ] [sv_flags] [line 94, size 32, align 32, offset 96] [from U32]
!275 = !{!"0xd\00xav_alloc\0020\0064\0064\00448\000", !126, !125, !276} ; [ DW_TAG_member ] [xav_alloc] [line 20, size 64, align 64, offset 448] [from ]
!276 = !{!"0xf\00\000\0064\0064\000\000", null, null, !87} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!277 = !{!"0xd\00xav_arylen\0021\0064\0064\00512\000", !126, !125, !87} ; [ DW_TAG_member ] [xav_arylen] [line 21, size 64, align 64, offset 512] [from ]
!278 = !{!"0xd\00xav_flags\0022\008\008\00576\000", !126, !125, !54} ; [ DW_TAG_member ] [xav_flags] [line 22, size 8, align 8, offset 576] [from U8]
!279 = !{!"0xd\00sv_refcnt\0087\0032\0032\0064\000", !4, !120, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 87, size 32, align 32, offset 64] [from U32]
!280 = !{!"0xd\00sv_flags\0088\0032\0032\0096\000", !4, !120, !93} ; [ DW_TAG_member ] [sv_flags] [line 88, size 32, align 32, offset 96] [from U32]
!281 = !{!"0xd\00flags\001263\0064\0064\0064\000", !4, !115, !282} ; [ DW_TAG_member ] [flags] [line 1263, size 64, align 64, offset 64] [from UV]
!282 = !{!"0x16\00UV\001324\000\000\000\000", !43, null, !51} ; [ DW_TAG_typedef ] [UV] [line 1324, size 0, align 0, offset 0] [from long unsigned int]
!283 = !{!"0xd\00proto_perl\001264\0064\0064\00128\000", !4, !115, !284} ; [ DW_TAG_member ] [proto_perl] [line 1264, size 64, align 64, offset 128] [from ]
!284 = !{!"0xf\00\000\0064\0064\000\000", null, null, !285} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PerlInterpreter]
!285 = !{!"0x16\00PerlInterpreter\002017\000\000\000\000", !43, null, !286} ; [ DW_TAG_typedef ] [PerlInterpreter] [line 2017, size 0, align 0, offset 0] [from interpreter]
!286 = !{!"0x13\00interpreter\003751\008\008\000\000\000", !43, null, null, !287, null, null, null} ; [ DW_TAG_structure_type ] [interpreter] [line 3751, size 8, align 8, offset 0] [def] [from ]
!287 = !{!288}
!288 = !{!"0xd\00broiled\003752\008\008\000\000", !43, !286, !40} ; [ DW_TAG_member ] [broiled] [line 3752, size 8, align 8, offset 0] [from char]
!289 = !{!"0xd\00mg_private\0029\0016\0016\00128\000", !74, !73, !197} ; [ DW_TAG_member ] [mg_private] [line 29, size 16, align 16, offset 128] [from U16]
!290 = !{!"0xd\00mg_type\0030\008\008\00144\000", !74, !73, !40} ; [ DW_TAG_member ] [mg_type] [line 30, size 8, align 8, offset 144] [from char]
!291 = !{!"0xd\00mg_flags\0031\008\008\00152\000", !74, !73, !54} ; [ DW_TAG_member ] [mg_flags] [line 31, size 8, align 8, offset 152] [from U8]
!292 = !{!"0xd\00mg_obj\0032\0064\0064\00192\000", !74, !73, !87} ; [ DW_TAG_member ] [mg_obj] [line 32, size 64, align 64, offset 192] [from ]
!293 = !{!"0xd\00mg_ptr\0033\0064\0064\00256\000", !74, !73, !39} ; [ DW_TAG_member ] [mg_ptr] [line 33, size 64, align 64, offset 256] [from ]
!294 = !{!"0xd\00mg_len\0034\0032\0032\00320\000", !74, !73, !157} ; [ DW_TAG_member ] [mg_len] [line 34, size 32, align 32, offset 320] [from I32]
!295 = !{!"0xd\00xmg_stash\00327\0064\0064\00384\000", !4, !59, !139} ; [ DW_TAG_member ] [xmg_stash] [line 327, size 64, align 64, offset 384] [from ]
!296 = !{!"0xd\00xbm_useful\00329\0032\0032\00448\000", !4, !59, !157} ; [ DW_TAG_member ] [xbm_useful] [line 329, size 32, align 32, offset 448] [from I32]
!297 = !{!"0xd\00xbm_previous\00330\0016\0016\00480\000", !4, !59, !197} ; [ DW_TAG_member ] [xbm_previous] [line 330, size 16, align 16, offset 480] [from U16]
!298 = !{!"0xd\00xbm_rare\00331\008\008\00496\000", !4, !59, !54} ; [ DW_TAG_member ] [xbm_rare] [line 331, size 8, align 8, offset 496] [from U8]
!299 = !{!"0xf\00\000\0064\0064\000\000", null, null, !56} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from unsigned char]
!300 = !{!"0xf\00\000\0064\0064\000\000", null, null, !301} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regnode_string]
!301 = !{!"0x13\00regnode_string\0075\0048\0016\000\000\000", !234, null, null, !302, null, null, null} ; [ DW_TAG_structure_type ] [regnode_string] [line 75, size 48, align 16, offset 0] [def] [from ]
!302 = !{!303, !304, !305, !306}
!303 = !{!"0xd\00str_len\0076\008\008\000\000", !234, !301, !54} ; [ DW_TAG_member ] [str_len] [line 76, size 8, align 8, offset 0] [from U8]
!304 = !{!"0xd\00type\0077\008\008\008\000", !234, !301, !54} ; [ DW_TAG_member ] [type] [line 77, size 8, align 8, offset 8] [from U8]
!305 = !{!"0xd\00next_off\0078\0016\0016\0016\000", !234, !301, !197} ; [ DW_TAG_member ] [next_off] [line 78, size 16, align 16, offset 16] [from U16]
!306 = !{!"0xd\00string\0079\008\008\0032\000", !234, !301, !172} ; [ DW_TAG_member ] [string] [line 79, size 8, align 8, offset 32] [from ]
!307 = !{!"0xf\00\000\0064\0064\000\000", null, null, !308} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVGV]
!308 = !{!"0x16\00XPVGV\002047\000\000\000\000", !43, null, !309} ; [ DW_TAG_typedef ] [XPVGV] [line 2047, size 0, align 0, offset 0] [from xpvgv]
!309 = !{!"0x13\00xpvgv\00304\00768\0064\000\000\000", !4, null, null, !310, null, null, null} ; [ DW_TAG_structure_type ] [xpvgv] [line 304, size 768, align 64, offset 0] [def] [from ]
!310 = !{!311, !312, !313, !314, !315, !316, !317, !318, !442, !443, !444, !445}
!311 = !{!"0xd\00xpv_pv\00305\0064\0064\000\000", !4, !309, !39} ; [ DW_TAG_member ] [xpv_pv] [line 305, size 64, align 64, offset 0] [from ]
!312 = !{!"0xd\00xpv_cur\00306\0064\0064\0064\000", !4, !309, !48} ; [ DW_TAG_member ] [xpv_cur] [line 306, size 64, align 64, offset 64] [from STRLEN]
!313 = !{!"0xd\00xpv_len\00307\0064\0064\00128\000", !4, !309, !48} ; [ DW_TAG_member ] [xpv_len] [line 307, size 64, align 64, offset 128] [from STRLEN]
!314 = !{!"0xd\00xiv_iv\00308\0064\0064\00192\000", !4, !309, !65} ; [ DW_TAG_member ] [xiv_iv] [line 308, size 64, align 64, offset 192] [from IV]
!315 = !{!"0xd\00xnv_nv\00309\0064\0064\00256\000", !4, !309, !68} ; [ DW_TAG_member ] [xnv_nv] [line 309, size 64, align 64, offset 256] [from NV]
!316 = !{!"0xd\00xmg_magic\00310\0064\0064\00320\000", !4, !309, !71} ; [ DW_TAG_member ] [xmg_magic] [line 310, size 64, align 64, offset 320] [from ]
!317 = !{!"0xd\00xmg_stash\00311\0064\0064\00384\000", !4, !309, !139} ; [ DW_TAG_member ] [xmg_stash] [line 311, size 64, align 64, offset 384] [from ]
!318 = !{!"0xd\00xgv_gp\00313\0064\0064\00448\000", !4, !309, !319} ; [ DW_TAG_member ] [xgv_gp] [line 313, size 64, align 64, offset 448] [from ]
!319 = !{!"0xf\00\000\0064\0064\000\000", null, null, !320} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from GP]
!320 = !{!"0x16\00GP\002031\000\000\000\000", !43, null, !321} ; [ DW_TAG_typedef ] [GP] [line 2031, size 0, align 0, offset 0] [from gp]
!321 = !{!"0x13\00gp\0011\00704\0064\000\000\000", !322, null, null, !323, null, null, null} ; [ DW_TAG_structure_type ] [gp] [line 11, size 704, align 64, offset 0] [def] [from ]
!322 = !{!"./gv.h", !"/tmp/perlbench"}
!323 = !{!324, !325, !326, !382, !433, !434, !435, !436, !437, !438, !439, !441}
!324 = !{!"0xd\00gp_sv\0012\0064\0064\000\000", !322, !321, !87} ; [ DW_TAG_member ] [gp_sv] [line 12, size 64, align 64, offset 0] [from ]
!325 = !{!"0xd\00gp_refcnt\0013\0032\0032\0064\000", !322, !321, !93} ; [ DW_TAG_member ] [gp_refcnt] [line 13, size 32, align 32, offset 64] [from U32]
!326 = !{!"0xd\00gp_io\0014\0064\0064\00128\000", !322, !321, !327} ; [ DW_TAG_member ] [gp_io] [line 14, size 64, align 64, offset 128] [from ]
!327 = !{!"0xf\00\000\0064\0064\000\000", null, null, !328} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from io]
!328 = !{!"0x13\00io\0097\00128\0064\000\000\000", !4, null, null, !329, null, null, null} ; [ DW_TAG_structure_type ] [io] [line 97, size 128, align 64, offset 0] [def] [from ]
!329 = !{!330, !380, !381}
!330 = !{!"0xd\00sv_any\0098\0064\0064\000\000", !4, !328, !331} ; [ DW_TAG_member ] [sv_any] [line 98, size 64, align 64, offset 0] [from ]
!331 = !{!"0xf\00\000\0064\0064\000\000", null, null, !332} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVIO]
!332 = !{!"0x16\00XPVIO\002051\000\000\000\000", !43, null, !333} ; [ DW_TAG_typedef ] [XPVIO] [line 2051, size 0, align 0, offset 0] [from xpvio]
!333 = !{!"0x13\00xpvio\00368\001344\0064\000\000\000", !4, null, null, !334, null, null, null} ; [ DW_TAG_structure_type ] [xpvio] [line 368, size 1344, align 64, offset 0] [def] [from ]
!334 = !{!335, !336, !337, !338, !339, !340, !341, !342, !349, !350, !359, !360, !361, !362, !363, !364, !372, !373, !374, !375, !376, !378, !379}
!335 = !{!"0xd\00xpv_pv\00369\0064\0064\000\000", !4, !333, !39} ; [ DW_TAG_member ] [xpv_pv] [line 369, size 64, align 64, offset 0] [from ]
!336 = !{!"0xd\00xpv_cur\00370\0064\0064\0064\000", !4, !333, !48} ; [ DW_TAG_member ] [xpv_cur] [line 370, size 64, align 64, offset 64] [from STRLEN]
!337 = !{!"0xd\00xpv_len\00371\0064\0064\00128\000", !4, !333, !48} ; [ DW_TAG_member ] [xpv_len] [line 371, size 64, align 64, offset 128] [from STRLEN]
!338 = !{!"0xd\00xiv_iv\00372\0064\0064\00192\000", !4, !333, !65} ; [ DW_TAG_member ] [xiv_iv] [line 372, size 64, align 64, offset 192] [from IV]
!339 = !{!"0xd\00xnv_nv\00373\0064\0064\00256\000", !4, !333, !68} ; [ DW_TAG_member ] [xnv_nv] [line 373, size 64, align 64, offset 256] [from NV]
!340 = !{!"0xd\00xmg_magic\00374\0064\0064\00320\000", !4, !333, !71} ; [ DW_TAG_member ] [xmg_magic] [line 374, size 64, align 64, offset 320] [from ]
!341 = !{!"0xd\00xmg_stash\00375\0064\0064\00384\000", !4, !333, !139} ; [ DW_TAG_member ] [xmg_stash] [line 375, size 64, align 64, offset 384] [from ]
!342 = !{!"0xd\00xio_ifp\00377\0064\0064\00448\000", !4, !333, !343} ; [ DW_TAG_member ] [xio_ifp] [line 377, size 64, align 64, offset 448] [from ]
!343 = !{!"0xf\00\000\0064\0064\000\000", null, null, !344} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PerlIO]
!344 = !{!"0x16\00PerlIO\00101\000\000\000\000", !345, null, !346} ; [ DW_TAG_typedef ] [PerlIO] [line 101, size 0, align 0, offset 0] [from ]
!345 = !{!"./perlio.h", !"/tmp/perlbench"}
!346 = !{!"0xf\00\000\0064\0064\000\000", null, null, !347} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PerlIOl]
!347 = !{!"0x16\00PerlIOl\0099\000\000\000\000", !345, null, !348} ; [ DW_TAG_typedef ] [PerlIOl] [line 99, size 0, align 0, offset 0] [from _PerlIO]
!348 = !{!"0x13\00_PerlIO\0099\000\000\000\004\000", !345, null, null, null, null, null, null} ; [ DW_TAG_structure_type ] [_PerlIO] [line 99, size 0, align 0, offset 0] [decl] [from ]
!349 = !{!"0xd\00xio_ofp\00378\0064\0064\00512\000", !4, !333, !343} ; [ DW_TAG_member ] [xio_ofp] [line 378, size 64, align 64, offset 512] [from ]
!350 = !{!"0xd\00xio_dirpu\00391\0064\0064\00576\000", !4, !333, !351} ; [ DW_TAG_member ] [xio_dirpu] [line 391, size 64, align 64, offset 576] [from ]
!351 = !{!"0x17\00\00388\0064\0064\000\000\000", !4, !333, null, !352, null, null, null} ; [ DW_TAG_union_type ] [line 388, size 64, align 64, offset 0] [def] [from ]
!352 = !{!353, !358}
!353 = !{!"0xd\00xiou_dirp\00389\0064\0064\000\000", !4, !351, !354} ; [ DW_TAG_member ] [xiou_dirp] [line 389, size 64, align 64, offset 0] [from ]
!354 = !{!"0xf\00\000\0064\0064\000\000", null, null, !355} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from DIR]
!355 = !{!"0x16\00DIR\00127\000\000\000\000", !356, null, !357} ; [ DW_TAG_typedef ] [DIR] [line 127, size 0, align 0, offset 0] [from __dirstream]
!356 = !{!"/usr/include/dirent.h", !"/tmp/perlbench"}
!357 = !{!"0x13\00__dirstream\00127\000\000\000\004\000", !356, null, null, null, null, null, null} ; [ DW_TAG_structure_type ] [__dirstream] [line 127, size 0, align 0, offset 0] [decl] [from ]
!358 = !{!"0xd\00xiou_any\00390\0064\0064\000\000", !4, !351, !38} ; [ DW_TAG_member ] [xiou_any] [line 390, size 64, align 64, offset 0] [from ]
!359 = !{!"0xd\00xio_lines\00392\0064\0064\00640\000", !4, !333, !65} ; [ DW_TAG_member ] [xio_lines] [line 392, size 64, align 64, offset 640] [from IV]
!360 = !{!"0xd\00xio_page\00393\0064\0064\00704\000", !4, !333, !65} ; [ DW_TAG_member ] [xio_page] [line 393, size 64, align 64, offset 704] [from IV]
!361 = !{!"0xd\00xio_page_len\00394\0064\0064\00768\000", !4, !333, !65} ; [ DW_TAG_member ] [xio_page_len] [line 394, size 64, align 64, offset 768] [from IV]
!362 = !{!"0xd\00xio_lines_left\00395\0064\0064\00832\000", !4, !333, !65} ; [ DW_TAG_member ] [xio_lines_left] [line 395, size 64, align 64, offset 832] [from IV]
!363 = !{!"0xd\00xio_top_name\00396\0064\0064\00896\000", !4, !333, !39} ; [ DW_TAG_member ] [xio_top_name] [line 396, size 64, align 64, offset 896] [from ]
!364 = !{!"0xd\00xio_top_gv\00397\0064\0064\00960\000", !4, !333, !365} ; [ DW_TAG_member ] [xio_top_gv] [line 397, size 64, align 64, offset 960] [from ]
!365 = !{!"0xf\00\000\0064\0064\000\000", null, null, !366} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from GV]
!366 = !{!"0x16\00GV\002032\000\000\000\000", !43, null, !367} ; [ DW_TAG_typedef ] [GV] [line 2032, size 0, align 0, offset 0] [from gv]
!367 = !{!"0x13\00gv\0073\00128\0064\000\000\000", !4, null, null, !368, null, null, null} ; [ DW_TAG_structure_type ] [gv] [line 73, size 128, align 64, offset 0] [def] [from ]
!368 = !{!369, !370, !371}
!369 = !{!"0xd\00sv_any\0074\0064\0064\000\000", !4, !367, !307} ; [ DW_TAG_member ] [sv_any] [line 74, size 64, align 64, offset 0] [from ]
!370 = !{!"0xd\00sv_refcnt\0075\0032\0032\0064\000", !4, !367, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 75, size 32, align 32, offset 64] [from U32]
!371 = !{!"0xd\00sv_flags\0076\0032\0032\0096\000", !4, !367, !93} ; [ DW_TAG_member ] [sv_flags] [line 76, size 32, align 32, offset 96] [from U32]
!372 = !{!"0xd\00xio_fmt_name\00398\0064\0064\001024\000", !4, !333, !39} ; [ DW_TAG_member ] [xio_fmt_name] [line 398, size 64, align 64, offset 1024] [from ]
!373 = !{!"0xd\00xio_fmt_gv\00399\0064\0064\001088\000", !4, !333, !365} ; [ DW_TAG_member ] [xio_fmt_gv] [line 399, size 64, align 64, offset 1088] [from ]
!374 = !{!"0xd\00xio_bottom_name\00400\0064\0064\001152\000", !4, !333, !39} ; [ DW_TAG_member ] [xio_bottom_name] [line 400, size 64, align 64, offset 1152] [from ]
!375 = !{!"0xd\00xio_bottom_gv\00401\0064\0064\001216\000", !4, !333, !365} ; [ DW_TAG_member ] [xio_bottom_gv] [line 401, size 64, align 64, offset 1216] [from ]
!376 = !{!"0xd\00xio_subprocess\00402\0016\0016\001280\000", !4, !333, !377} ; [ DW_TAG_member ] [xio_subprocess] [line 402, size 16, align 16, offset 1280] [from short]
!377 = !{!"0x24\00short\000\0016\0016\000\000\005", null, null} ; [ DW_TAG_base_type ] [short] [line 0, size 16, align 16, offset 0, enc DW_ATE_signed]
!378 = !{!"0xd\00xio_type\00403\008\008\001296\000", !4, !333, !40} ; [ DW_TAG_member ] [xio_type] [line 403, size 8, align 8, offset 1296] [from char]
!379 = !{!"0xd\00xio_flags\00404\008\008\001304\000", !4, !333, !40} ; [ DW_TAG_member ] [xio_flags] [line 404, size 8, align 8, offset 1304] [from char]
!380 = !{!"0xd\00sv_refcnt\0099\0032\0032\0064\000", !4, !328, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 99, size 32, align 32, offset 64] [from U32]
!381 = !{!"0xd\00sv_flags\00100\0032\0032\0096\000", !4, !328, !93} ; [ DW_TAG_member ] [sv_flags] [line 100, size 32, align 32, offset 96] [from U32]
!382 = !{!"0xd\00gp_form\0015\0064\0064\00192\000", !322, !321, !383} ; [ DW_TAG_member ] [gp_form] [line 15, size 64, align 64, offset 192] [from ]
!383 = !{!"0xf\00\000\0064\0064\000\000", null, null, !384} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from CV]
!384 = !{!"0x16\00CV\002029\000\000\000\000", !43, null, !385} ; [ DW_TAG_typedef ] [CV] [line 2029, size 0, align 0, offset 0] [from cv]
!385 = !{!"0x13\00cv\0079\00128\0064\000\000\000", !4, null, null, !386, null, null, null} ; [ DW_TAG_structure_type ] [cv] [line 79, size 128, align 64, offset 0] [def] [from ]
!386 = !{!387, !431, !432}
!387 = !{!"0xd\00sv_any\0080\0064\0064\000\000", !4, !385, !388} ; [ DW_TAG_member ] [sv_any] [line 80, size 64, align 64, offset 0] [from ]
!388 = !{!"0xf\00\000\0064\0064\000\000", null, null, !389} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVCV]
!389 = !{!"0x16\00XPVCV\002048\000\000\000\000", !43, null, !390} ; [ DW_TAG_typedef ] [XPVCV] [line 2048, size 0, align 0, offset 0] [from xpvcv]
!390 = !{!"0x13\00xpvcv\0014\001152\0064\000\000\000", !391, null, null, !392, null, null, null} ; [ DW_TAG_structure_type ] [xpvcv] [line 14, size 1152, align 64, offset 0] [def] [from ]
!391 = !{!"./cv.h", !"/tmp/perlbench"}
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !407, !421, !422, !423, !424, !427, !428, !430}
!393 = !{!"0xd\00xpv_pv\0015\0064\0064\000\000", !391, !390, !39} ; [ DW_TAG_member ] [xpv_pv] [line 15, size 64, align 64, offset 0] [from ]
!394 = !{!"0xd\00xpv_cur\0016\0064\0064\0064\000", !391, !390, !48} ; [ DW_TAG_member ] [xpv_cur] [line 16, size 64, align 64, offset 64] [from STRLEN]
!395 = !{!"0xd\00xpv_len\0017\0064\0064\00128\000", !391, !390, !48} ; [ DW_TAG_member ] [xpv_len] [line 17, size 64, align 64, offset 128] [from STRLEN]
!396 = !{!"0xd\00xof_off\0018\0064\0064\00192\000", !391, !390, !65} ; [ DW_TAG_member ] [xof_off] [line 18, size 64, align 64, offset 192] [from IV]
!397 = !{!"0xd\00xnv_nv\0019\0064\0064\00256\000", !391, !390, !68} ; [ DW_TAG_member ] [xnv_nv] [line 19, size 64, align 64, offset 256] [from NV]
!398 = !{!"0xd\00xmg_magic\0020\0064\0064\00320\000", !391, !390, !71} ; [ DW_TAG_member ] [xmg_magic] [line 20, size 64, align 64, offset 320] [from ]
!399 = !{!"0xd\00xmg_stash\0021\0064\0064\00384\000", !391, !390, !139} ; [ DW_TAG_member ] [xmg_stash] [line 21, size 64, align 64, offset 384] [from ]
!400 = !{!"0xd\00xcv_stash\0023\0064\0064\00448\000", !391, !390, !139} ; [ DW_TAG_member ] [xcv_stash] [line 23, size 64, align 64, offset 448] [from ]
!401 = !{!"0xd\00xcv_start\0024\0064\0064\00512\000", !391, !390, !183} ; [ DW_TAG_member ] [xcv_start] [line 24, size 64, align 64, offset 512] [from ]
!402 = !{!"0xd\00xcv_root\0025\0064\0064\00576\000", !391, !390, !183} ; [ DW_TAG_member ] [xcv_root] [line 25, size 64, align 64, offset 576] [from ]
!403 = !{!"0xd\00xcv_xsub\0026\0064\0064\00640\000", !391, !390, !404} ; [ DW_TAG_member ] [xcv_xsub] [line 26, size 64, align 64, offset 640] [from ]
!404 = !{!"0xf\00\000\0064\0064\000\000", null, null, !405} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!405 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !406, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!406 = !{null, !383}
!407 = !{!"0xd\00xcv_xsubany\0027\0064\0064\00704\000", !391, !390, !408} ; [ DW_TAG_member ] [xcv_xsubany] [line 27, size 64, align 64, offset 704] [from ANY]
!408 = !{!"0x16\00ANY\002053\000\000\000\000", !43, null, !409} ; [ DW_TAG_typedef ] [ANY] [line 2053, size 0, align 0, offset 0] [from any]
!409 = !{!"0x17\00any\002545\0064\0064\000\000\000", !43, null, null, !410, null, null, null} ; [ DW_TAG_union_type ] [any] [line 2545, size 64, align 64, offset 0] [def] [from ]
!410 = !{!411, !412, !413, !414, !415, !416, !420}
!411 = !{!"0xd\00any_ptr\002546\0064\0064\000\000", !43, !409, !38} ; [ DW_TAG_member ] [any_ptr] [line 2546, size 64, align 64, offset 0] [from ]
!412 = !{!"0xd\00any_i32\002547\0032\0032\000\000", !43, !409, !157} ; [ DW_TAG_member ] [any_i32] [line 2547, size 32, align 32, offset 0] [from I32]
!413 = !{!"0xd\00any_iv\002548\0064\0064\000\000", !43, !409, !65} ; [ DW_TAG_member ] [any_iv] [line 2548, size 64, align 64, offset 0] [from IV]
!414 = !{!"0xd\00any_long\002549\0064\0064\000\000", !43, !409, !66} ; [ DW_TAG_member ] [any_long] [line 2549, size 64, align 64, offset 0] [from long int]
!415 = !{!"0xd\00any_bool\002550\008\008\000\000", !43, !409, !40} ; [ DW_TAG_member ] [any_bool] [line 2550, size 8, align 8, offset 0] [from char]
!416 = !{!"0xd\00any_dptr\002551\0064\0064\000\000", !43, !409, !417} ; [ DW_TAG_member ] [any_dptr] [line 2551, size 64, align 64, offset 0] [from ]
!417 = !{!"0xf\00\000\0064\0064\000\000", null, null, !418} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!418 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !419, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!419 = !{null, !38}
!420 = !{!"0xd\00any_dxptr\002552\0064\0064\000\000", !43, !409, !417} ; [ DW_TAG_member ] [any_dxptr] [line 2552, size 64, align 64, offset 0] [from ]
!421 = !{!"0xd\00xcv_gv\0028\0064\0064\00768\000", !391, !390, !365} ; [ DW_TAG_member ] [xcv_gv] [line 28, size 64, align 64, offset 768] [from ]
!422 = !{!"0xd\00xcv_file\0029\0064\0064\00832\000", !391, !390, !39} ; [ DW_TAG_member ] [xcv_file] [line 29, size 64, align 64, offset 832] [from ]
!423 = !{!"0xd\00xcv_depth\0030\0064\0064\00896\000", !391, !390, !66} ; [ DW_TAG_member ] [xcv_depth] [line 30, size 64, align 64, offset 896] [from long int]
!424 = !{!"0xd\00xcv_padlist\0031\0064\0064\00960\000", !391, !390, !425} ; [ DW_TAG_member ] [xcv_padlist] [line 31, size 64, align 64, offset 960] [from ]
!425 = !{!"0xf\00\000\0064\0064\000\000", null, null, !426} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PADLIST]
!426 = !{!"0x16\00PADLIST\0019\000\000\000\000", !195, null, !119} ; [ DW_TAG_typedef ] [PADLIST] [line 19, size 0, align 0, offset 0] [from AV]
!427 = !{!"0xd\00xcv_outside\0032\0064\0064\001024\000", !391, !390, !383} ; [ DW_TAG_member ] [xcv_outside] [line 32, size 64, align 64, offset 1024] [from ]
!428 = !{!"0xd\00xcv_flags\0037\0016\0016\001088\000", !391, !390, !429} ; [ DW_TAG_member ] [xcv_flags] [line 37, size 16, align 16, offset 1088] [from cv_flags_t]
!429 = !{!"0x16\00cv_flags_t\00336\000\000\000\000", !4, null, !197} ; [ DW_TAG_typedef ] [cv_flags_t] [line 336, size 0, align 0, offset 0] [from U16]
!430 = !{!"0xd\00xcv_outside_seq\0038\0032\0032\001120\000", !391, !390, !93} ; [ DW_TAG_member ] [xcv_outside_seq] [line 38, size 32, align 32, offset 1120] [from U32]
!431 = !{!"0xd\00sv_refcnt\0081\0032\0032\0064\000", !4, !385, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 81, size 32, align 32, offset 64] [from U32]
!432 = !{!"0xd\00sv_flags\0082\0032\0032\0096\000", !4, !385, !93} ; [ DW_TAG_member ] [sv_flags] [line 82, size 32, align 32, offset 96] [from U32]
!433 = !{!"0xd\00gp_av\0016\0064\0064\00256\000", !322, !321, !118} ; [ DW_TAG_member ] [gp_av] [line 16, size 64, align 64, offset 256] [from ]
!434 = !{!"0xd\00gp_hv\0017\0064\0064\00320\000", !322, !321, !139} ; [ DW_TAG_member ] [gp_hv] [line 17, size 64, align 64, offset 320] [from ]
!435 = !{!"0xd\00gp_egv\0018\0064\0064\00384\000", !322, !321, !365} ; [ DW_TAG_member ] [gp_egv] [line 18, size 64, align 64, offset 384] [from ]
!436 = !{!"0xd\00gp_cv\0019\0064\0064\00448\000", !322, !321, !383} ; [ DW_TAG_member ] [gp_cv] [line 19, size 64, align 64, offset 448] [from ]
!437 = !{!"0xd\00gp_cvgen\0020\0032\0032\00512\000", !322, !321, !93} ; [ DW_TAG_member ] [gp_cvgen] [line 20, size 32, align 32, offset 512] [from U32]
!438 = !{!"0xd\00gp_flags\0021\0032\0032\00544\000", !322, !321, !93} ; [ DW_TAG_member ] [gp_flags] [line 21, size 32, align 32, offset 544] [from U32]
!439 = !{!"0xd\00gp_line\0022\0032\0032\00576\000", !322, !321, !440} ; [ DW_TAG_member ] [gp_line] [line 22, size 32, align 32, offset 576] [from line_t]
!440 = !{!"0x16\00line_t\00521\000\000\000\000", !55, null, !93} ; [ DW_TAG_typedef ] [line_t] [line 521, size 0, align 0, offset 0] [from U32]
!441 = !{!"0xd\00gp_file\0023\0064\0064\00640\000", !322, !321, !39} ; [ DW_TAG_member ] [gp_file] [line 23, size 64, align 64, offset 640] [from ]
!442 = !{!"0xd\00xgv_name\00314\0064\0064\00512\000", !4, !309, !39} ; [ DW_TAG_member ] [xgv_name] [line 314, size 64, align 64, offset 512] [from ]
!443 = !{!"0xd\00xgv_namelen\00315\0064\0064\00576\000", !4, !309, !48} ; [ DW_TAG_member ] [xgv_namelen] [line 315, size 64, align 64, offset 576] [from STRLEN]
!444 = !{!"0xd\00xgv_stash\00316\0064\0064\00640\000", !4, !309, !139} ; [ DW_TAG_member ] [xgv_stash] [line 316, size 64, align 64, offset 640] [from ]
!445 = !{!"0xd\00xgv_flags\00317\008\008\00704\000", !4, !309, !54} ; [ DW_TAG_member ] [xgv_flags] [line 317, size 8, align 8, offset 704] [from U8]
!446 = !{!"0xf\00\000\0064\0064\000\000", null, null, !447} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVMG]
!447 = !{!"0x16\00XPVMG\002043\000\000\000\000", !43, null, !448} ; [ DW_TAG_typedef ] [XPVMG] [line 2043, size 0, align 0, offset 0] [from xpvmg]
!448 = !{!"0x13\00xpvmg\00278\00448\0064\000\000\000", !4, null, null, !449, null, null, null} ; [ DW_TAG_structure_type ] [xpvmg] [line 278, size 448, align 64, offset 0] [def] [from ]
!449 = !{!450, !451, !452, !453, !454, !455, !456}
!450 = !{!"0xd\00xpv_pv\00279\0064\0064\000\000", !4, !448, !39} ; [ DW_TAG_member ] [xpv_pv] [line 279, size 64, align 64, offset 0] [from ]
!451 = !{!"0xd\00xpv_cur\00280\0064\0064\0064\000", !4, !448, !48} ; [ DW_TAG_member ] [xpv_cur] [line 280, size 64, align 64, offset 64] [from STRLEN]
!452 = !{!"0xd\00xpv_len\00281\0064\0064\00128\000", !4, !448, !48} ; [ DW_TAG_member ] [xpv_len] [line 281, size 64, align 64, offset 128] [from STRLEN]
!453 = !{!"0xd\00xiv_iv\00282\0064\0064\00192\000", !4, !448, !65} ; [ DW_TAG_member ] [xiv_iv] [line 282, size 64, align 64, offset 192] [from IV]
!454 = !{!"0xd\00xnv_nv\00283\0064\0064\00256\000", !4, !448, !68} ; [ DW_TAG_member ] [xnv_nv] [line 283, size 64, align 64, offset 256] [from NV]
!455 = !{!"0xd\00xmg_magic\00284\0064\0064\00320\000", !4, !448, !71} ; [ DW_TAG_member ] [xmg_magic] [line 284, size 64, align 64, offset 320] [from ]
!456 = !{!"0xd\00xmg_stash\00285\0064\0064\00384\000", !4, !448, !139} ; [ DW_TAG_member ] [xmg_stash] [line 285, size 64, align 64, offset 384] [from ]
!457 = !{!"0xf\00\000\0064\0064\000\000", null, null, !458} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regnode_charclass]
!458 = !{!"0x13\00regnode_charclass\00100\00320\0032\000\000\000", !234, null, null, !459, null, null, null} ; [ DW_TAG_structure_type ] [regnode_charclass] [line 100, size 320, align 32, offset 0] [def] [from ]
!459 = !{!460, !461, !462, !463, !464}
!460 = !{!"0xd\00flags\00101\008\008\000\000", !234, !458, !54} ; [ DW_TAG_member ] [flags] [line 101, size 8, align 8, offset 0] [from U8]
!461 = !{!"0xd\00type\00102\008\008\008\000", !234, !458, !54} ; [ DW_TAG_member ] [type] [line 102, size 8, align 8, offset 8] [from U8]
!462 = !{!"0xd\00next_off\00103\0016\0016\0016\000", !234, !458, !197} ; [ DW_TAG_member ] [next_off] [line 103, size 16, align 16, offset 16] [from U16]
!463 = !{!"0xd\00arg1\00104\0032\0032\0032\000", !234, !458, !93} ; [ DW_TAG_member ] [arg1] [line 104, size 32, align 32, offset 32] [from U32]
!464 = !{!"0xd\00bitmap\00105\00256\008\0064\000", !234, !458, !465} ; [ DW_TAG_member ] [bitmap] [line 105, size 256, align 8, offset 64] [from ]
!465 = !{!"0x1\00\000\00256\008\000\000\000", null, null, !40, !466, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 256, align 8, offset 0] [from char]
!466 = !{!467}
!467 = !{!"0x21\000\0032"}                        ; [ DW_TAG_subrange_type ] [0, 31]
!468 = !{!"0xf\00\000\0064\0064\000\000", null, null, !469} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regnode_1]
!469 = !{!"0x13\00regnode_1\0082\0064\0032\000\000\000", !234, null, null, !470, null, null, null} ; [ DW_TAG_structure_type ] [regnode_1] [line 82, size 64, align 32, offset 0] [def] [from ]
!470 = !{!471, !472, !473, !474}
!471 = !{!"0xd\00flags\0083\008\008\000\000", !234, !469, !54} ; [ DW_TAG_member ] [flags] [line 83, size 8, align 8, offset 0] [from U8]
!472 = !{!"0xd\00type\0084\008\008\008\000", !234, !469, !54} ; [ DW_TAG_member ] [type] [line 84, size 8, align 8, offset 8] [from U8]
!473 = !{!"0xd\00next_off\0085\0016\0016\0016\000", !234, !469, !197} ; [ DW_TAG_member ] [next_off] [line 85, size 16, align 16, offset 16] [from U16]
!474 = !{!"0xd\00arg1\0086\0032\0032\0032\000", !234, !469, !93} ; [ DW_TAG_member ] [arg1] [line 86, size 32, align 32, offset 32] [from U32]
!475 = !{!"0xf\00\000\0064\0064\000\000", null, null, !476} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from OP_4tree]
!476 = !{!"0x16\00OP_4tree\0011\000\000\000\000", !234, null, !184} ; [ DW_TAG_typedef ] [OP_4tree] [line 11, size 0, align 0, offset 0] [from OP]
!477 = !{!"0xf\00\000\0064\0064\000\000", null, null, !478} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PAD]
!478 = !{!"0x16\00PAD\0020\000\000\000\000", !195, null, !119} ; [ DW_TAG_typedef ] [PAD] [line 20, size 0, align 0, offset 0] [from AV]
!479 = !{!"0xf\00\000\0064\0064\000\000", null, null, !480} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XRV]
!480 = !{!"0x16\00XRV\002038\000\000\000\000", !43, null, !481} ; [ DW_TAG_typedef ] [XRV] [line 2038, size 0, align 0, offset 0] [from xrv]
!481 = !{!"0x13\00xrv\00245\0064\0064\000\000\000", !4, null, null, !482, null, null, null} ; [ DW_TAG_structure_type ] [xrv] [line 245, size 64, align 64, offset 0] [def] [from ]
!482 = !{!483}
!483 = !{!"0xd\00xrv_rv\00246\0064\0064\000\000", !4, !481, !87} ; [ DW_TAG_member ] [xrv_rv] [line 246, size 64, align 64, offset 0] [from ]
!484 = !{!"0xf\00\000\0064\0064\000\000", null, null, !485} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regexp]
!485 = !{!"0x16\00regexp\0051\000\000\000\000", !218, null, !217} ; [ DW_TAG_typedef ] [regexp] [line 51, size 0, align 0, offset 0] [from regexp]
!486 = !{!"0xf\00\000\0064\0064\000\000", null, null, !487} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVIV]
!487 = !{!"0x16\00XPVIV\002040\000\000\000\000", !43, null, !488} ; [ DW_TAG_typedef ] [XPVIV] [line 2040, size 0, align 0, offset 0] [from xpviv]
!488 = !{!"0x13\00xpviv\00255\00256\0064\000\000\000", !4, null, null, !489, null, null, null} ; [ DW_TAG_structure_type ] [xpviv] [line 255, size 256, align 64, offset 0] [def] [from ]
!489 = !{!490, !491, !492, !493}
!490 = !{!"0xd\00xpv_pv\00256\0064\0064\000\000", !4, !488, !39} ; [ DW_TAG_member ] [xpv_pv] [line 256, size 64, align 64, offset 0] [from ]
!491 = !{!"0xd\00xpv_cur\00257\0064\0064\0064\000", !4, !488, !48} ; [ DW_TAG_member ] [xpv_cur] [line 257, size 64, align 64, offset 64] [from STRLEN]
!492 = !{!"0xd\00xpv_len\00258\0064\0064\00128\000", !4, !488, !48} ; [ DW_TAG_member ] [xpv_len] [line 258, size 64, align 64, offset 128] [from STRLEN]
!493 = !{!"0xd\00xiv_iv\00259\0064\0064\00192\000", !4, !488, !65} ; [ DW_TAG_member ] [xiv_iv] [line 259, size 64, align 64, offset 192] [from IV]
!494 = !{!"0xf\00\000\0064\0064\000\000", null, null, !495} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVNV]
!495 = !{!"0x16\00XPVNV\002042\000\000\000\000", !43, null, !496} ; [ DW_TAG_typedef ] [XPVNV] [line 2042, size 0, align 0, offset 0] [from xpvnv]
!496 = !{!"0x13\00xpvnv\00269\00320\0064\000\000\000", !4, null, null, !497, null, null, null} ; [ DW_TAG_structure_type ] [xpvnv] [line 269, size 320, align 64, offset 0] [def] [from ]
!497 = !{!498, !499, !500, !501, !502}
!498 = !{!"0xd\00xpv_pv\00270\0064\0064\000\000", !4, !496, !39} ; [ DW_TAG_member ] [xpv_pv] [line 270, size 64, align 64, offset 0] [from ]
!499 = !{!"0xd\00xpv_cur\00271\0064\0064\0064\000", !4, !496, !48} ; [ DW_TAG_member ] [xpv_cur] [line 271, size 64, align 64, offset 64] [from STRLEN]
!500 = !{!"0xd\00xpv_len\00272\0064\0064\00128\000", !4, !496, !48} ; [ DW_TAG_member ] [xpv_len] [line 272, size 64, align 64, offset 128] [from STRLEN]
!501 = !{!"0xd\00xiv_iv\00273\0064\0064\00192\000", !4, !496, !65} ; [ DW_TAG_member ] [xiv_iv] [line 273, size 64, align 64, offset 192] [from IV]
!502 = !{!"0xd\00xnv_nv\00274\0064\0064\00256\000", !4, !496, !68} ; [ DW_TAG_member ] [xnv_nv] [line 274, size 64, align 64, offset 256] [from NV]
!503 = !{!"0xf\00\000\0064\0064\000\000", null, null, !504} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regnode_2]
!504 = !{!"0x13\00regnode_2\0089\0064\0016\000\000\000", !234, null, null, !505, null, null, null} ; [ DW_TAG_structure_type ] [regnode_2] [line 89, size 64, align 16, offset 0] [def] [from ]
!505 = !{!506, !507, !508, !509, !510}
!506 = !{!"0xd\00flags\0090\008\008\000\000", !234, !504, !54} ; [ DW_TAG_member ] [flags] [line 90, size 8, align 8, offset 0] [from U8]
!507 = !{!"0xd\00type\0091\008\008\008\000", !234, !504, !54} ; [ DW_TAG_member ] [type] [line 91, size 8, align 8, offset 8] [from U8]
!508 = !{!"0xd\00next_off\0092\0016\0016\0016\000", !234, !504, !197} ; [ DW_TAG_member ] [next_off] [line 92, size 16, align 16, offset 16] [from U16]
!509 = !{!"0xd\00arg1\0093\0016\0016\0032\000", !234, !504, !197} ; [ DW_TAG_member ] [arg1] [line 93, size 16, align 16, offset 32] [from U16]
!510 = !{!"0xd\00arg2\0094\0016\0016\0048\000", !234, !504, !197} ; [ DW_TAG_member ] [arg2] [line 94, size 16, align 16, offset 48] [from U16]
!511 = !{!"0xf\00\000\0064\0064\000\000", null, null, !512} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from re_unwind_branch_t]
!512 = !{!"0x16\00re_unwind_branch_t\002226\000\000\000\000", !1, null, !513} ; [ DW_TAG_typedef ] [re_unwind_branch_t] [line 2226, size 0, align 0, offset 0] [from ]
!513 = !{!"0x13\00\002215\00320\0064\000\000\000", !1, null, null, !514, null, null, null} ; [ DW_TAG_structure_type ] [line 2215, size 320, align 64, offset 0] [def] [from ]
!514 = !{!515, !516, !517, !519, !520, !521, !522}
!515 = !{!"0xd\00type\002216\0032\0032\000\000", !1, !513, !157} ; [ DW_TAG_member ] [type] [line 2216, size 32, align 32, offset 0] [from I32]
!516 = !{!"0xd\00prev\002217\0032\0032\0032\000", !1, !513, !157} ; [ DW_TAG_member ] [prev] [line 2217, size 32, align 32, offset 32] [from I32]
!517 = !{!"0xd\00lastcp\002218\0032\0032\0064\000", !1, !513, !518} ; [ DW_TAG_member ] [lastcp] [line 2218, size 32, align 32, offset 64] [from CHECKPOINT]
!518 = !{!"0x16\00CHECKPOINT\002643\000\000\000\000", !43, null, !157} ; [ DW_TAG_typedef ] [CHECKPOINT] [line 2643, size 0, align 0, offset 0] [from I32]
!519 = !{!"0xd\00lastparen\002219\0032\0032\0096\000", !1, !513, !157} ; [ DW_TAG_member ] [lastparen] [line 2219, size 32, align 32, offset 96] [from I32]
!520 = !{!"0xd\00next\002220\0064\0064\00128\000", !1, !513, !224} ; [ DW_TAG_member ] [next] [line 2220, size 64, align 64, offset 128] [from ]
!521 = !{!"0xd\00locinput\002221\0064\0064\00192\000", !1, !513, !39} ; [ DW_TAG_member ] [locinput] [line 2221, size 64, align 64, offset 192] [from ]
!522 = !{!"0xd\00nextchr\002222\0032\0032\00256\000", !1, !513, !157} ; [ DW_TAG_member ] [nextchr] [line 2222, size 32, align 32, offset 256] [from I32]
!523 = !{!"0xf\00\000\0064\0064\000\000", null, null, !524} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from re_unwind_t]
!524 = !{!"0x16\00re_unwind_t\002232\000\000\000\000", !1, null, !525} ; [ DW_TAG_typedef ] [re_unwind_t] [line 2232, size 0, align 0, offset 0] [from re_unwind_t]
!525 = !{!"0x17\00re_unwind_t\002228\00320\0064\000\000\000", !1, null, null, !526, null, null, null} ; [ DW_TAG_union_type ] [re_unwind_t] [line 2228, size 320, align 64, offset 0] [def] [from ]
!526 = !{!527, !528, !535}
!527 = !{!"0xd\00type\002229\0032\0032\000\000", !1, !525, !157} ; [ DW_TAG_member ] [type] [line 2229, size 32, align 32, offset 0] [from I32]
!528 = !{!"0xd\00generic\002230\0096\0032\000\000", !1, !525, !529} ; [ DW_TAG_member ] [generic] [line 2230, size 96, align 32, offset 0] [from re_unwind_generic_t]
!529 = !{!"0x16\00re_unwind_generic_t\002213\000\000\000\000", !1, null, !530} ; [ DW_TAG_typedef ] [re_unwind_generic_t] [line 2213, size 0, align 0, offset 0] [from ]
!530 = !{!"0x13\00\002209\0096\0032\000\000\000", !1, null, null, !531, null, null, null} ; [ DW_TAG_structure_type ] [line 2209, size 96, align 32, offset 0] [def] [from ]
!531 = !{!532, !533, !534}
!532 = !{!"0xd\00type\002210\0032\0032\000\000", !1, !530, !157} ; [ DW_TAG_member ] [type] [line 2210, size 32, align 32, offset 0] [from I32]
!533 = !{!"0xd\00prev\002211\0032\0032\0032\000", !1, !530, !157} ; [ DW_TAG_member ] [prev] [line 2211, size 32, align 32, offset 32] [from I32]
!534 = !{!"0xd\00lastcp\002212\0032\0032\0064\000", !1, !530, !518} ; [ DW_TAG_member ] [lastcp] [line 2212, size 32, align 32, offset 64] [from CHECKPOINT]
!535 = !{!"0xd\00branch\002231\00320\0064\000\000", !1, !525, !512} ; [ DW_TAG_member ] [branch] [line 2231, size 320, align 64, offset 0] [from re_unwind_branch_t]
!536 = !{!537, !542, !552, !555, !558, !561}
!537 = !{!"0x2e\00Perl_pregexec\00Perl_pregexec\00\00326\000\001\000\000\00256\000\00332", !1, !538, !539, null, i32 (%struct.regexp*, i8*, i8*, i8*, i32, %struct.sv*, i32)* @Perl_pregexec, null, null, !541} ; [ DW_TAG_subprogram ] [line 326] [def] [scope 332] [Perl_pregexec]
!538 = !{!"0x29", !1}                             ; [ DW_TAG_file_type ] [/tmp/perlbench/regexec.c]
!539 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !540, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!540 = !{!157, !484, !39, !39, !39, !157, !87, !93}
!541 = !{}
!542 = !{!"0x2e\00Perl_re_intuit_start\00Perl_re_intuit_start\00\00397\000\001\000\000\00256\000\00399", !1, !538, !543, null, i8* (%struct.regexp*, %struct.sv*, i8*, i8*, i32, %struct.re_scream_pos_data_s*)* @Perl_re_intuit_start, null, null, !541} ; [ DW_TAG_subprogram ] [line 397] [def] [scope 399] [Perl_re_intuit_start]
!543 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !544, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!544 = !{!39, !484, !87, !39, !39, !93, !545}
!545 = !{!"0xf\00\000\0064\0064\000\000", null, null, !546} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from re_scream_pos_data]
!546 = !{!"0x16\00re_scream_pos_data\00367\000\000\000\000", !234, null, !547} ; [ DW_TAG_typedef ] [re_scream_pos_data] [line 367, size 0, align 0, offset 0] [from re_scream_pos_data_s]
!547 = !{!"0x13\00re_scream_pos_data_s\00363\00128\0064\000\000\000", !234, null, null, !548, null, null, null} ; [ DW_TAG_structure_type ] [re_scream_pos_data_s] [line 363, size 128, align 64, offset 0] [def] [from ]
!548 = !{!549, !551}
!549 = !{!"0xd\00scream_olds\00365\0064\0064\000\000", !234, !547, !550} ; [ DW_TAG_member ] [scream_olds] [line 365, size 64, align 64, offset 0] [from ]
!550 = !{!"0xf\00\000\0064\0064\000\000", null, null, !39} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!551 = !{!"0xd\00scream_pos\00366\0064\0064\0064\000", !234, !547, !221} ; [ DW_TAG_member ] [scream_pos] [line 366, size 64, align 64, offset 64] [from ]
!552 = !{!"0x2e\00Perl_regexec_flags\00Perl_regexec_flags\00\001616\000\001\000\000\00256\000\001623", !1, !538, !553, null, i32 (%struct.regexp*, i8*, i8*, i8*, i32, %struct.sv*, i8*, i32)* @Perl_regexec_flags, null, null, !541} ; [ DW_TAG_subprogram ] [line 1616] [def] [scope 1623] [Perl_regexec_flags]
!553 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !554, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!554 = !{!157, !484, !39, !39, !39, !157, !87, !38, !93}
!555 = !{!"0x2e\00S_regmatch\00S_regmatch\00\002296\000\001\000\000\00256\000\002297", !1, !538, !556, null, i32 (%struct.regnode*)* @S_regmatch, null, null, !541} ; [ DW_TAG_subprogram ] [line 2296] [def] [scope 2297] [S_regmatch]
!556 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !557, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!557 = !{!157, !224}
!558 = !{!"0x2e\00Perl_regclass_swash\00Perl_regclass_swash\00\004336\000\001\000\000\00256\000\004337", !1, !538, !559, null, %struct.sv* (%struct.regnode*, i8, %struct.sv**, %struct.sv**)* @Perl_regclass_swash, null, null, !541} ; [ DW_TAG_subprogram ] [line 4336] [def] [scope 4337] [Perl_regclass_swash]
!559 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !560, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!560 = !{!87, !224, !40, !276, !276}
!561 = !{!"0x2e\00restore_pos\00restore_pos\00\004573\001\001\000\000\00256\000\004574", !1, !538, !418, null, void (i8*)* @restore_pos, null, null, !541} ; [ DW_TAG_subprogram ] [line 4573] [local] [def] [scope 4574] [restore_pos]
!562 = !{i32 2, !"Dwarf Version", i32 4}
!563 = !{i32 2, !"Debug Info Version", i32 2}
!564 = !{!"clang version 3.6.2 (tags/RELEASE_362/final)"}
!565 = !{!"0x101\00prog\0016777542\000", !537, !538, !484} ; [ DW_TAG_arg_variable ] [prog] [line 326]
!566 = !{!"0x102"}                                ; [ DW_TAG_expression ]
!567 = !MDLocation(line: 326, column: 38, scope: !537)
!568 = !{!"0x101\00stringarg\0033554758\000", !537, !538, !39} ; [ DW_TAG_arg_variable ] [stringarg] [line 326]
!569 = !MDLocation(line: 326, column: 50, scope: !537)
!570 = !{!"0x101\00strend\0050331974\000", !537, !538, !39} ; [ DW_TAG_arg_variable ] [strend] [line 326]
!571 = !MDLocation(line: 326, column: 76, scope: !537)
!572 = !{!"0x101\00strbeg\0067109191\000", !537, !538, !39} ; [ DW_TAG_arg_variable ] [strbeg] [line 327]
!573 = !MDLocation(line: 327, column: 9, scope: !537)
!574 = !{!"0x101\00minend\0083886407\000", !537, !538, !157} ; [ DW_TAG_arg_variable ] [minend] [line 327]
!575 = !MDLocation(line: 327, column: 21, scope: !537)
!576 = !{!"0x101\00screamer\00100663623\000", !537, !538, !87} ; [ DW_TAG_arg_variable ] [screamer] [line 327]
!577 = !MDLocation(line: 327, column: 33, scope: !537)
!578 = !{!"0x101\00nosave\00117440839\000", !537, !538, !93} ; [ DW_TAG_arg_variable ] [nosave] [line 327]
!579 = !MDLocation(line: 327, column: 47, scope: !537)
!580 = !MDLocation(line: 334, column: 16, scope: !537)
!581 = !MDLocation(line: 334, column: 22, scope: !537)
!582 = !MDLocation(line: 334, column: 33, scope: !537)
!583 = !MDLocation(line: 334, column: 41, scope: !537)
!584 = !MDLocation(line: 334, column: 49, scope: !537)
!585 = !MDLocation(line: 334, column: 57, scope: !537)
!586 = !MDLocation(line: 335, column: 9, scope: !537)
!587 = !MDLocation(line: 334, column: 2, scope: !537)
!588 = !MDLocation(line: 333, column: 5, scope: !537)
!589 = !{!"0x101\00prog\0016778832\000", !552, !538, !484} ; [ DW_TAG_arg_variable ] [prog] [line 1616]
!590 = !MDLocation(line: 1616, column: 43, scope: !552)
!591 = !{!"0x101\00stringarg\0033556048\000", !552, !538, !39} ; [ DW_TAG_arg_variable ] [stringarg] [line 1616]
!592 = !MDLocation(line: 1616, column: 55, scope: !552)
!593 = !{!"0x101\00strend\0050333264\000", !552, !538, !39} ; [ DW_TAG_arg_variable ] [strend] [line 1616]
!594 = !MDLocation(line: 1616, column: 81, scope: !552)
!595 = !{!"0x101\00strbeg\0067110481\000", !552, !538, !39} ; [ DW_TAG_arg_variable ] [strbeg] [line 1617]
!596 = !MDLocation(line: 1617, column: 14, scope: !552)
!597 = !{!"0x101\00minend\0083887697\000", !552, !538, !157} ; [ DW_TAG_arg_variable ] [minend] [line 1617]
!598 = !MDLocation(line: 1617, column: 26, scope: !552)
!599 = !{!"0x101\00sv\00100664913\000", !552, !538, !87} ; [ DW_TAG_arg_variable ] [sv] [line 1617]
!600 = !MDLocation(line: 1617, column: 38, scope: !552)
!601 = !{!"0x101\00data\00117442129\000", !552, !538, !38} ; [ DW_TAG_arg_variable ] [data] [line 1617]
!602 = !MDLocation(line: 1617, column: 48, scope: !552)
!603 = !{!"0x101\00flags\00134219345\000", !552, !538, !93} ; [ DW_TAG_arg_variable ] [flags] [line 1617]
!604 = !MDLocation(line: 1617, column: 58, scope: !552)
!605 = !{!"0x100\00s\001624\000", !552, !538, !39} ; [ DW_TAG_auto_variable ] [s] [line 1624]
!606 = !MDLocation(line: 1624, column: 20, scope: !552)
!607 = !{!"0x100\00c\001625\000", !552, !538, !224} ; [ DW_TAG_auto_variable ] [c] [line 1625]
!608 = !MDLocation(line: 1625, column: 23, scope: !552)
!609 = !{!"0x100\00startpos\001626\000", !552, !538, !39} ; [ DW_TAG_auto_variable ] [startpos] [line 1626]
!610 = !MDLocation(line: 1626, column: 20, scope: !552)
!611 = !MDLocation(line: 1626, column: 31, scope: !552)
!612 = !{!"0x100\00minlen\001627\000", !552, !538, !157} ; [ DW_TAG_auto_variable ] [minlen] [line 1627]
!613 = !MDLocation(line: 1627, column: 9, scope: !552)
!614 = !{!"0x100\00dontbother\001628\000", !552, !538, !157} ; [ DW_TAG_auto_variable ] [dontbother] [line 1628]
!615 = !MDLocation(line: 1628, column: 9, scope: !552)
!616 = !{!"0x100\00end_shift\001631\000", !552, !538, !157} ; [ DW_TAG_auto_variable ] [end_shift] [line 1631]
!617 = !MDLocation(line: 1631, column: 9, scope: !552)
!618 = !{!"0x100\00scream_pos\001632\000", !552, !538, !157} ; [ DW_TAG_auto_variable ] [scream_pos] [line 1632]
!619 = !MDLocation(line: 1632, column: 9, scope: !552)
!620 = !{!"0x100\00scream_olds\001633\000", !552, !538, !39} ; [ DW_TAG_auto_variable ] [scream_olds] [line 1633]
!621 = !MDLocation(line: 1633, column: 11, scope: !552)
!622 = !{!"0x100\00oreplsv\001634\000", !552, !538, !87} ; [ DW_TAG_auto_variable ] [oreplsv] [line 1634]
!623 = !MDLocation(line: 1634, column: 9, scope: !552)
!624 = !MDLocation(line: 1634, column: 19, scope: !552)
!625 = !{!"0x100\00do_utf8\001635\000", !552, !538, !40} ; [ DW_TAG_auto_variable ] [do_utf8] [line 1635]
!626 = !MDLocation(line: 1635, column: 10, scope: !552)
!627 = !MDLocation(line: 1635, column: 20, scope: !552)
!628 = !MDLocation(line: 1635, column: 20, scope: !629)
!629 = !{!"0xb\001", !1, !552}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!630 = !MDLocation(line: 1635, column: 20, scope: !631)
!631 = !{!"0xb\002", !1, !552}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!632 = !MDLocation(line: 1640, column: 5, scope: !552)
!633 = !MDLocation(line: 1640, column: 5, scope: !629)
!634 = !MDLocation(line: 1640, column: 5, scope: !631)
!635 = !MDLocation(line: 1642, column: 5, scope: !552)
!636 = !MDLocation(line: 1644, column: 14, scope: !552)
!637 = !MDLocation(line: 1644, column: 5, scope: !552)
!638 = !MDLocation(line: 1650, column: 9, scope: !639)
!639 = !{!"0xb\001650\009\00107", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!640 = !MDLocation(line: 1650, column: 9, scope: !552)
!641 = !MDLocation(line: 1650, column: 25, scope: !642)
!642 = !{!"0xb\001", !1, !639}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!643 = !MDLocation(line: 1651, column: 2, scope: !644)
!644 = !{!"0xb\001650\0043\00108", !1, !639}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!645 = !MDLocation(line: 1652, column: 2, scope: !644)
!646 = !MDLocation(line: 1655, column: 14, scope: !552)
!647 = !MDLocation(line: 1655, column: 5, scope: !552)
!648 = !MDLocation(line: 1656, column: 9, scope: !649)
!649 = !{!"0xb\001656\009\00109", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!650 = !MDLocation(line: 1656, column: 18, scope: !649)
!651 = !MDLocation(line: 1656, column: 29, scope: !649)
!652 = !MDLocation(line: 1656, column: 9, scope: !552)
!653 = !MDLocation(line: 1659, column: 2, scope: !654)
!654 = !{!"0xb\001656\0037\00110", !1, !649}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!655 = !MDLocation(line: 1663, column: 9, scope: !656)
!656 = !{!"0xb\001663\009\00111", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!657 = !MDLocation(line: 1663, column: 9, scope: !552)
!658 = !MDLocation(line: 1664, column: 2, scope: !659)
!659 = !{!"0xb\001663\0046\00112", !1, !656}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!660 = !MDLocation(line: 1665, column: 5, scope: !659)
!661 = !MDLocation(line: 1667, column: 5, scope: !552)
!662 = !MDLocation(line: 1668, column: 5, scope: !552)
!663 = !MDLocation(line: 1669, column: 5, scope: !552)
!664 = !MDLocation(line: 1671, column: 9, scope: !665)
!665 = !{!"0xb\001671\009\00113", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!666 = !MDLocation(line: 1671, column: 9, scope: !552)
!667 = !MDLocation(line: 1672, column: 2, scope: !665)
!668 = !MDLocation(line: 1675, column: 17, scope: !552)
!669 = !MDLocation(line: 1675, column: 5, scope: !552)
!670 = !MDLocation(line: 1676, column: 17, scope: !552)
!671 = !MDLocation(line: 1676, column: 5, scope: !552)
!672 = !MDLocation(line: 1677, column: 17, scope: !552)
!673 = !MDLocation(line: 1677, column: 5, scope: !552)
!674 = !MDLocation(line: 1680, column: 17, scope: !552)
!675 = !MDLocation(line: 1680, column: 5, scope: !552)
!676 = !MDLocation(line: 1683, column: 18, scope: !552)
!677 = !MDLocation(line: 1683, column: 27, scope: !552)
!678 = !MDLocation(line: 1683, column: 5, scope: !552)
!679 = !MDLocation(line: 1686, column: 5, scope: !552)
!680 = !MDLocation(line: 1689, column: 9, scope: !552)
!681 = !MDLocation(line: 1689, column: 5, scope: !552)
!682 = !MDLocation(line: 1691, column: 9, scope: !683)
!683 = !{!"0xb\001691\009\00114", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!684 = !MDLocation(line: 1691, column: 9, scope: !552)
!685 = !{!"0x100\00mg\001692\000", !686, !538, !71} ; [ DW_TAG_auto_variable ] [mg] [line 1692]
!686 = !{!"0xb\001691\0041\00115", !1, !683}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!687 = !MDLocation(line: 1692, column: 9, scope: !686)
!688 = !MDLocation(line: 1694, column: 6, scope: !689)
!689 = !{!"0xb\001694\006\00116", !1, !686}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!690 = !MDLocation(line: 1694, column: 6, scope: !686)
!691 = !MDLocation(line: 1695, column: 21, scope: !689)
!692 = !MDLocation(line: 1695, column: 6, scope: !689)
!693 = !MDLocation(line: 1696, column: 11, scope: !694)
!694 = !{!"0xb\001696\0011\00117", !1, !689}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!695 = !MDLocation(line: 1696, column: 11, scope: !689)
!696 = !MDLocation(line: 1696, column: 17, scope: !697)
!697 = !{!"0xb\001", !1, !694}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!698 = !MDLocation(line: 1697, column: 8, scope: !694)
!699 = !MDLocation(line: 1698, column: 22, scope: !694)
!700 = !MDLocation(line: 1698, column: 14, scope: !694)
!701 = !MDLocation(line: 1698, column: 9, scope: !694)
!702 = !MDLocation(line: 1699, column: 8, scope: !694)
!703 = !MDLocation(line: 1700, column: 21, scope: !704)
!704 = !{!"0xb\001699\0025\00118", !1, !694}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!705 = !MDLocation(line: 1700, column: 30, scope: !704)
!706 = !MDLocation(line: 1700, column: 6, scope: !704)
!707 = !MDLocation(line: 1701, column: 10, scope: !708)
!708 = !{!"0xb\001701\0010\00119", !1, !704}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!709 = !MDLocation(line: 1701, column: 10, scope: !704)
!710 = !MDLocation(line: 1702, column: 14, scope: !711)
!711 = !{!"0xb\001702\0014\00121", !1, !712}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!712 = !{!"0xb\001701\0042\00120", !1, !708}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!713 = !MDLocation(line: 1702, column: 18, scope: !711)
!714 = !MDLocation(line: 1702, column: 14, scope: !712)
!715 = !MDLocation(line: 1703, column: 7, scope: !711)
!716 = !MDLocation(line: 1704, column: 7, scope: !712)
!717 = !MDLocation(line: 1704, column: 3, scope: !712)
!718 = !MDLocation(line: 1705, column: 6, scope: !712)
!719 = !MDLocation(line: 1706, column: 2, scope: !704)
!720 = !MDLocation(line: 1708, column: 21, scope: !694)
!721 = !MDLocation(line: 1708, column: 6, scope: !694)
!722 = !MDLocation(line: 1709, column: 5, scope: !686)
!723 = !MDLocation(line: 1711, column: 11, scope: !724)
!724 = !{!"0xb\001711\009\00122", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!725 = !MDLocation(line: 1711, column: 9, scope: !552)
!726 = !MDLocation(line: 1711, column: 38, scope: !727)
!727 = !{!"0xb\001", !1, !724}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!728 = !MDLocation(line: 1711, column: 70, scope: !729)
!729 = !{!"0xb\002", !1, !724}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!730 = !{!"0x100\00d\001712\000", !731, !538, !546} ; [ DW_TAG_auto_variable ] [d] [line 1712]
!731 = !{!"0xb\001711\0099\00123", !1, !724}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!732 = !MDLocation(line: 1712, column: 21, scope: !731)
!733 = !MDLocation(line: 1714, column: 2, scope: !731)
!734 = !MDLocation(line: 1715, column: 2, scope: !731)
!735 = !MDLocation(line: 1716, column: 22, scope: !731)
!736 = !MDLocation(line: 1716, column: 28, scope: !731)
!737 = !MDLocation(line: 1716, column: 32, scope: !731)
!738 = !MDLocation(line: 1716, column: 35, scope: !731)
!739 = !MDLocation(line: 1716, column: 43, scope: !731)
!740 = !MDLocation(line: 1716, column: 6, scope: !731)
!741 = !MDLocation(line: 1716, column: 2, scope: !731)
!742 = !MDLocation(line: 1717, column: 7, scope: !743)
!743 = !{!"0xb\001717\006\00124", !1, !731}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!744 = !MDLocation(line: 1717, column: 6, scope: !731)
!745 = !MDLocation(line: 1719, column: 6, scope: !746)
!746 = !{!"0xb\001717\0010\00125", !1, !743}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!747 = !MDLocation(line: 1721, column: 5, scope: !731)
!748 = !MDLocation(line: 1749, column: 9, scope: !749)
!749 = !{!"0xb\001749\009\00126", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!750 = !MDLocation(line: 1749, column: 9, scope: !552)
!751 = !MDLocation(line: 1750, column: 6, scope: !752)
!752 = !{!"0xb\001750\006\00128", !1, !753}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!753 = !{!"0xb\001749\0056\00127", !1, !749}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!754 = !MDLocation(line: 1750, column: 11, scope: !752)
!755 = !MDLocation(line: 1750, column: 6, scope: !753)
!756 = !MDLocation(line: 1750, column: 30, scope: !757)
!757 = !{!"0xb\001", !1, !752}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!758 = !MDLocation(line: 1750, column: 36, scope: !752)
!759 = !MDLocation(line: 1750, column: 23, scope: !752)
!760 = !MDLocation(line: 1751, column: 6, scope: !752)
!761 = !MDLocation(line: 1752, column: 11, scope: !762)
!762 = !{!"0xb\001752\0011\00129", !1, !752}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!763 = !MDLocation(line: 1752, column: 11, scope: !752)
!764 = !MDLocation(line: 1752, column: 28, scope: !765)
!765 = !{!"0xb\001", !1, !762}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!766 = !MDLocation(line: 1753, column: 8, scope: !762)
!767 = !{!"0x100\00end\001755\000", !768, !538, !39} ; [ DW_TAG_auto_variable ] [end] [line 1755]
!768 = !{!"0xb\001754\002\00130", !1, !762}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!769 = !MDLocation(line: 1755, column: 12, scope: !768)
!770 = !MDLocation(line: 1757, column: 10, scope: !771)
!771 = !{!"0xb\001757\0010\00131", !1, !768}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!772 = !MDLocation(line: 1757, column: 10, scope: !768)
!773 = !MDLocation(line: 1758, column: 16, scope: !771)
!774 = !MDLocation(line: 1758, column: 3, scope: !771)
!775 = !MDLocation(line: 1759, column: 12, scope: !768)
!776 = !MDLocation(line: 1759, column: 12, scope: !777)
!777 = !{!"0xb\001", !1, !768}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!778 = !MDLocation(line: 1759, column: 12, scope: !779)
!779 = !{!"0xb\002", !1, !768}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!780 = !MDLocation(line: 1759, column: 12, scope: !781)
!781 = !{!"0xb\004", !1, !782}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!782 = !{!"0xb\003", !1, !768}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!783 = !MDLocation(line: 1759, column: 6, scope: !768)
!784 = !MDLocation(line: 1761, column: 10, scope: !785)
!785 = !{!"0xb\001761\0010\00132", !1, !768}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!786 = !MDLocation(line: 1761, column: 10, scope: !768)
!787 = !MDLocation(line: 1761, column: 32, scope: !788)
!788 = !{!"0xb\001", !1, !785}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!789 = !MDLocation(line: 1762, column: 7, scope: !790)
!790 = !{!"0xb\001762\007\00134", !1, !791}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!791 = !{!"0xb\001761\0050\00133", !1, !785}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!792 = !MDLocation(line: 1762, column: 12, scope: !790)
!793 = !MDLocation(line: 1762, column: 7, scope: !791)
!794 = !MDLocation(line: 1763, column: 7, scope: !790)
!795 = !MDLocation(line: 1764, column: 3, scope: !791)
!796 = !MDLocation(line: 1765, column: 18, scope: !797)
!797 = !{!"0xb\001765\0011\00136", !1, !798}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!798 = !{!"0xb\001764\0013\00135", !1, !791}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!799 = !MDLocation(line: 1765, column: 24, scope: !797)
!800 = !MDLocation(line: 1765, column: 11, scope: !797)
!801 = !MDLocation(line: 1765, column: 11, scope: !798)
!802 = !MDLocation(line: 1766, column: 4, scope: !797)
!803 = !MDLocation(line: 1765, column: 25, scope: !804)
!804 = !{!"0xb\001", !1, !797}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!805 = !MDLocation(line: 1768, column: 11, scope: !806)
!806 = !{!"0xb\001768\0011\00137", !1, !798}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!807 = !MDLocation(line: 1768, column: 16, scope: !806)
!808 = !MDLocation(line: 1768, column: 11, scope: !798)
!809 = !MDLocation(line: 1769, column: 4, scope: !806)
!810 = !MDLocation(line: 1770, column: 11, scope: !811)
!811 = !{!"0xb\001770\0011\00138", !1, !798}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!812 = !MDLocation(line: 1770, column: 11, scope: !798)
!813 = !MDLocation(line: 1771, column: 24, scope: !814)
!814 = !{!"0xb\001770\0042\00139", !1, !811}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!815 = !MDLocation(line: 1771, column: 30, scope: !814)
!816 = !MDLocation(line: 1771, column: 34, scope: !814)
!817 = !MDLocation(line: 1771, column: 41, scope: !814)
!818 = !MDLocation(line: 1771, column: 49, scope: !814)
!819 = !MDLocation(line: 1771, column: 8, scope: !814)
!820 = !MDLocation(line: 1771, column: 4, scope: !814)
!821 = !MDLocation(line: 1772, column: 9, scope: !822)
!822 = !{!"0xb\001772\008\00140", !1, !814}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!823 = !MDLocation(line: 1772, column: 8, scope: !814)
!824 = !MDLocation(line: 1773, column: 8, scope: !822)
!825 = !MDLocation(line: 1774, column: 7, scope: !814)
!826 = !MDLocation(line: 1776, column: 4, scope: !811)
!827 = !MDLocation(line: 1779, column: 7, scope: !828)
!828 = !{!"0xb\001779\007\00142", !1, !829}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!829 = !{!"0xb\001778\0013\00141", !1, !785}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!830 = !MDLocation(line: 1779, column: 11, scope: !828)
!831 = !MDLocation(line: 1779, column: 7, scope: !829)
!832 = !MDLocation(line: 1780, column: 7, scope: !828)
!833 = !MDLocation(line: 1781, column: 3, scope: !829)
!834 = !MDLocation(line: 1781, column: 10, scope: !835)
!835 = !{!"0xb\002", !1, !836}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!836 = !{!"0xb\001", !1, !829}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!837 = !MDLocation(line: 1781, column: 14, scope: !829)
!838 = !MDLocation(line: 1781, column: 10, scope: !829)
!839 = !MDLocation(line: 1782, column: 12, scope: !840)
!840 = !{!"0xb\001782\0011\00144", !1, !841}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!841 = !{!"0xb\001781\0019\00143", !1, !829}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!842 = !MDLocation(line: 1782, column: 11, scope: !840)
!843 = !MDLocation(line: 1782, column: 11, scope: !841)
!844 = !MDLocation(line: 1783, column: 15, scope: !845)
!845 = !{!"0xb\001783\008\00146", !1, !846}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!846 = !{!"0xb\001782\0025\00145", !1, !840}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!847 = !MDLocation(line: 1783, column: 21, scope: !845)
!848 = !MDLocation(line: 1783, column: 8, scope: !845)
!849 = !MDLocation(line: 1783, column: 8, scope: !846)
!850 = !MDLocation(line: 1784, column: 8, scope: !845)
!851 = !MDLocation(line: 1785, column: 7, scope: !846)
!852 = !MDLocation(line: 1788, column: 2, scope: !768)
!853 = !MDLocation(line: 1789, column: 2, scope: !753)
!854 = !MDLocation(line: 1790, column: 16, scope: !855)
!855 = !{!"0xb\001790\0016\00147", !1, !749}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!856 = !MDLocation(line: 1790, column: 16, scope: !749)
!857 = !MDLocation(line: 1791, column: 13, scope: !858)
!858 = !{!"0xb\001791\006\00149", !1, !859}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!859 = !{!"0xb\001790\0048\00148", !1, !855}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!860 = !MDLocation(line: 1791, column: 19, scope: !858)
!861 = !MDLocation(line: 1791, column: 6, scope: !858)
!862 = !MDLocation(line: 1791, column: 6, scope: !859)
!863 = !MDLocation(line: 1792, column: 6, scope: !858)
!864 = !MDLocation(line: 1793, column: 2, scope: !859)
!865 = !MDLocation(line: 1797, column: 10, scope: !866)
!866 = !{!"0xb\001797\009\00150", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!867 = !MDLocation(line: 1797, column: 9, scope: !552)
!868 = !MDLocation(line: 1797, column: 35, scope: !869)
!869 = !{!"0xb\002", !1, !866}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!870 = !MDLocation(line: 1797, column: 59, scope: !871)
!871 = !{!"0xb\003", !1, !872}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!872 = !{!"0xb\001", !1, !866}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!873 = !{!"0x100\00ch\001800\000", !874, !538, !40} ; [ DW_TAG_auto_variable ] [ch] [line 1800]
!874 = !{!"0xb\001797\0086\00151", !1, !866}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!875 = !MDLocation(line: 1800, column: 7, scope: !874)
!876 = !MDLocation(line: 1804, column: 8, scope: !877)
!877 = !{!"0xb\001804\006\00152", !1, !874}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!878 = !MDLocation(line: 1804, column: 6, scope: !874)
!879 = !MDLocation(line: 1804, column: 18, scope: !880)
!880 = !{!"0xb\001", !1, !877}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!881 = !MDLocation(line: 1804, column: 40, scope: !882)
!882 = !{!"0xb\002", !1, !877}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!883 = !MDLocation(line: 1805, column: 6, scope: !877)
!884 = !MDLocation(line: 1805, column: 31, scope: !880)
!885 = !MDLocation(line: 1805, column: 16, scope: !877)
!886 = !MDLocation(line: 1805, column: 54, scope: !882)
!887 = !MDLocation(line: 1805, column: 39, scope: !877)
!888 = !MDLocation(line: 1805, column: 6, scope: !889)
!889 = !{!"0xb\004", !1, !890}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!890 = !{!"0xb\003", !1, !877}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!891 = !MDLocation(line: 1806, column: 7, scope: !874)
!892 = !MDLocation(line: 1806, column: 7, scope: !893)
!893 = !{!"0xb\001", !1, !874}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!894 = !MDLocation(line: 1806, column: 7, scope: !895)
!895 = !{!"0xb\002", !1, !874}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!896 = !MDLocation(line: 1806, column: 7, scope: !897)
!897 = !{!"0xb\004", !1, !898}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!898 = !{!"0xb\003", !1, !874}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!899 = !MDLocation(line: 1806, column: 2, scope: !874)
!900 = !MDLocation(line: 1808, column: 6, scope: !901)
!901 = !{!"0xb\001808\006\00153", !1, !874}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!902 = !MDLocation(line: 1808, column: 6, scope: !874)
!903 = !MDLocation(line: 1809, column: 6, scope: !904)
!904 = !{!"0xb\001808\0015\00154", !1, !901}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!905 = !MDLocation(line: 1809, column: 13, scope: !906)
!906 = !{!"0xb\002", !1, !907}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!907 = !{!"0xb\001", !1, !904}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!908 = !MDLocation(line: 1809, column: 17, scope: !904)
!909 = !MDLocation(line: 1809, column: 13, scope: !904)
!910 = !MDLocation(line: 1810, column: 8, scope: !911)
!911 = !{!"0xb\001810\007\00156", !1, !912}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!912 = !{!"0xb\001809\0025\00155", !1, !904}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!913 = !MDLocation(line: 1810, column: 7, scope: !911)
!914 = !MDLocation(line: 1810, column: 13, scope: !911)
!915 = !MDLocation(line: 1810, column: 7, scope: !912)
!916 = !MDLocation(line: 1812, column: 18, scope: !917)
!917 = !{!"0xb\001812\0011\00158", !1, !918}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!918 = !{!"0xb\001810\0017\00157", !1, !911}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!919 = !MDLocation(line: 1812, column: 24, scope: !917)
!920 = !MDLocation(line: 1812, column: 11, scope: !917)
!921 = !MDLocation(line: 1812, column: 11, scope: !918)
!922 = !MDLocation(line: 1812, column: 28, scope: !923)
!923 = !{!"0xb\001", !1, !917}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!924 = !MDLocation(line: 1813, column: 12, scope: !918)
!925 = !MDLocation(line: 1813, column: 7, scope: !918)
!926 = !MDLocation(line: 1814, column: 7, scope: !918)
!927 = !MDLocation(line: 1814, column: 14, scope: !928)
!928 = !{!"0xb\004", !1, !929}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!929 = !{!"0xb\001", !1, !918}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!930 = !MDLocation(line: 1814, column: 18, scope: !918)
!931 = !MDLocation(line: 1814, column: 14, scope: !918)
!932 = !MDLocation(line: 1814, column: 29, scope: !933)
!933 = !{!"0xb\002", !1, !918}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!934 = !MDLocation(line: 1814, column: 28, scope: !918)
!935 = !MDLocation(line: 1814, column: 34, scope: !918)
!936 = !MDLocation(line: 1814, column: 7, scope: !937)
!937 = !{!"0xb\003", !1, !918}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!938 = !MDLocation(line: 1815, column: 9, scope: !918)
!939 = !MDLocation(line: 1815, column: 4, scope: !918)
!940 = !MDLocation(line: 1816, column: 3, scope: !918)
!941 = !MDLocation(line: 1817, column: 8, scope: !912)
!942 = !MDLocation(line: 1817, column: 3, scope: !912)
!943 = !MDLocation(line: 1819, column: 2, scope: !904)
!944 = !MDLocation(line: 1821, column: 6, scope: !945)
!945 = !{!"0xb\001820\007\00159", !1, !901}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!946 = !MDLocation(line: 1821, column: 13, scope: !947)
!947 = !{!"0xb\002", !1, !948}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!948 = !{!"0xb\001", !1, !945}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!949 = !MDLocation(line: 1821, column: 17, scope: !945)
!950 = !MDLocation(line: 1821, column: 13, scope: !945)
!951 = !MDLocation(line: 1822, column: 8, scope: !952)
!952 = !{!"0xb\001822\007\00161", !1, !953}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!953 = !{!"0xb\001821\0025\00160", !1, !945}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!954 = !MDLocation(line: 1822, column: 7, scope: !952)
!955 = !MDLocation(line: 1822, column: 13, scope: !952)
!956 = !MDLocation(line: 1822, column: 7, scope: !953)
!957 = !MDLocation(line: 1824, column: 18, scope: !958)
!958 = !{!"0xb\001824\0011\00163", !1, !959}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!959 = !{!"0xb\001822\0017\00162", !1, !952}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!960 = !MDLocation(line: 1824, column: 24, scope: !958)
!961 = !MDLocation(line: 1824, column: 11, scope: !958)
!962 = !MDLocation(line: 1824, column: 11, scope: !959)
!963 = !MDLocation(line: 1824, column: 28, scope: !964)
!964 = !{!"0xb\001", !1, !958}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!965 = !MDLocation(line: 1825, column: 7, scope: !959)
!966 = !MDLocation(line: 1826, column: 7, scope: !959)
!967 = !MDLocation(line: 1826, column: 14, scope: !968)
!968 = !{!"0xb\004", !1, !969}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!969 = !{!"0xb\001", !1, !959}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!970 = !MDLocation(line: 1826, column: 18, scope: !959)
!971 = !MDLocation(line: 1826, column: 14, scope: !959)
!972 = !MDLocation(line: 1826, column: 29, scope: !973)
!973 = !{!"0xb\002", !1, !959}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!974 = !MDLocation(line: 1826, column: 28, scope: !959)
!975 = !MDLocation(line: 1826, column: 34, scope: !959)
!976 = !MDLocation(line: 1826, column: 7, scope: !977)
!977 = !{!"0xb\003", !1, !959}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!978 = !MDLocation(line: 1827, column: 4, scope: !959)
!979 = !MDLocation(line: 1828, column: 3, scope: !959)
!980 = !MDLocation(line: 1829, column: 3, scope: !953)
!981 = !MDLocation(line: 1836, column: 5, scope: !874)
!982 = !MDLocation(line: 1838, column: 14, scope: !983)
!983 = !{!"0xb\001838\0014\00164", !1, !866}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!984 = !MDLocation(line: 1838, column: 14, scope: !866)
!985 = !MDLocation(line: 1839, column: 11, scope: !983)
!986 = !MDLocation(line: 1840, column: 13, scope: !983)
!987 = !MDLocation(line: 1840, column: 45, scope: !983)
!988 = !MDLocation(line: 1841, column: 8, scope: !983)
!989 = !MDLocation(line: 1841, column: 33, scope: !983)
!990 = !MDLocation(line: 1841, column: 42, scope: !983)
!991 = !{!"0x100\00must\001842\000", !992, !538, !87} ; [ DW_TAG_auto_variable ] [must] [line 1842]
!992 = !{!"0xb\001841\0046\00165", !1, !983}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!993 = !MDLocation(line: 1842, column: 6, scope: !992)
!994 = !{!"0x100\00back_max\001843\000", !992, !538, !157} ; [ DW_TAG_auto_variable ] [back_max] [line 1843]
!995 = !MDLocation(line: 1843, column: 6, scope: !992)
!996 = !{!"0x100\00back_min\001844\000", !992, !538, !157} ; [ DW_TAG_auto_variable ] [back_min] [line 1844]
!997 = !MDLocation(line: 1844, column: 6, scope: !992)
!998 = !{!"0x100\00last\001845\000", !992, !538, !39} ; [ DW_TAG_auto_variable ] [last] [line 1845]
!999 = !MDLocation(line: 1845, column: 8, scope: !992)
!1000 = !{!"0x100\00last1\001846\000", !992, !538, !39} ; [ DW_TAG_auto_variable ] [last1] [line 1846]
!1001 = !MDLocation(line: 1846, column: 8, scope: !992)
!1002 = !MDLocation(line: 1850, column: 6, scope: !1003)
!1003 = !{!"0xb\001850\006\00166", !1, !992}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1004 = !MDLocation(line: 1850, column: 6, scope: !992)
!1005 = !MDLocation(line: 1850, column: 31, scope: !1006)
!1006 = !{!"0xb\001", !1, !1003}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1007 = !MDLocation(line: 1851, column: 12, scope: !1008)
!1008 = !{!"0xb\001851\0010\00168", !1, !1009}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1009 = !{!"0xb\001850\0052\00167", !1, !1003}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1010 = !MDLocation(line: 1851, column: 10, scope: !1009)
!1011 = !MDLocation(line: 1851, column: 22, scope: !1012)
!1012 = !{!"0xb\001", !1, !1008}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1013 = !MDLocation(line: 1851, column: 44, scope: !1014)
!1014 = !{!"0xb\002", !1, !1008}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1015 = !MDLocation(line: 1852, column: 3, scope: !1008)
!1016 = !MDLocation(line: 1852, column: 28, scope: !1012)
!1017 = !MDLocation(line: 1852, column: 13, scope: !1008)
!1018 = !MDLocation(line: 1852, column: 51, scope: !1014)
!1019 = !MDLocation(line: 1852, column: 36, scope: !1008)
!1020 = !MDLocation(line: 1852, column: 3, scope: !1021)
!1021 = !{!"0xb\004", !1, !1022}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1022 = !{!"0xb\003", !1, !1008}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1023 = !MDLocation(line: 1853, column: 13, scope: !1009)
!1024 = !MDLocation(line: 1853, column: 23, scope: !1025)
!1025 = !{!"0xb\001", !1, !1009}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1026 = !MDLocation(line: 1853, column: 45, scope: !1027)
!1027 = !{!"0xb\002", !1, !1009}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1028 = !MDLocation(line: 1853, column: 6, scope: !1029)
!1029 = !{!"0xb\004", !1, !1030}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1030 = !{!"0xb\003", !1, !1009}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1031 = !MDLocation(line: 1854, column: 28, scope: !1009)
!1032 = !MDLocation(line: 1854, column: 17, scope: !1009)
!1033 = !MDLocation(line: 1854, column: 6, scope: !1009)
!1034 = !MDLocation(line: 1855, column: 2, scope: !1009)
!1035 = !MDLocation(line: 1856, column: 12, scope: !1036)
!1036 = !{!"0xb\001856\0010\00170", !1, !1037}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1037 = !{!"0xb\001855\009\00169", !1, !1003}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1038 = !MDLocation(line: 1856, column: 10, scope: !1037)
!1039 = !MDLocation(line: 1856, column: 22, scope: !1040)
!1040 = !{!"0xb\001", !1, !1036}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1041 = !MDLocation(line: 1856, column: 41, scope: !1042)
!1042 = !{!"0xb\002", !1, !1036}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1043 = !MDLocation(line: 1857, column: 3, scope: !1036)
!1044 = !MDLocation(line: 1857, column: 28, scope: !1040)
!1045 = !MDLocation(line: 1857, column: 13, scope: !1036)
!1046 = !MDLocation(line: 1857, column: 51, scope: !1042)
!1047 = !MDLocation(line: 1857, column: 36, scope: !1036)
!1048 = !MDLocation(line: 1857, column: 3, scope: !1049)
!1049 = !{!"0xb\004", !1, !1050}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1050 = !{!"0xb\003", !1, !1036}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1051 = !MDLocation(line: 1858, column: 13, scope: !1037)
!1052 = !MDLocation(line: 1858, column: 23, scope: !1053)
!1053 = !{!"0xb\001", !1, !1037}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1054 = !MDLocation(line: 1858, column: 42, scope: !1055)
!1055 = !{!"0xb\002", !1, !1037}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1056 = !MDLocation(line: 1858, column: 6, scope: !1057)
!1057 = !{!"0xb\004", !1, !1058}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1058 = !{!"0xb\003", !1, !1037}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1059 = !MDLocation(line: 1859, column: 17, scope: !1037)
!1060 = !MDLocation(line: 1859, column: 6, scope: !1037)
!1061 = !MDLocation(line: 1860, column: 17, scope: !1037)
!1062 = !MDLocation(line: 1860, column: 6, scope: !1037)
!1063 = !MDLocation(line: 1862, column: 6, scope: !1064)
!1064 = !{!"0xb\001862\006\00171", !1, !992}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1065 = !MDLocation(line: 1862, column: 6, scope: !992)
!1066 = !MDLocation(line: 1864, column: 6, scope: !1064)
!1067 = !MDLocation(line: 1866, column: 9, scope: !992)
!1068 = !MDLocation(line: 1866, column: 9, scope: !1069)
!1069 = !{!"0xb\001", !1, !992}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1070 = !MDLocation(line: 1866, column: 9, scope: !1071)
!1071 = !{!"0xb\003", !1, !992}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1072 = !MDLocation(line: 1866, column: 9, scope: !1073)
!1073 = !{!"0xb\004", !1, !992}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1074 = !MDLocation(line: 1866, column: 9, scope: !1075)
!1075 = !{!"0xb\006", !1, !1076}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1076 = !{!"0xb\005", !1, !992}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1077 = !MDLocation(line: 1866, column: 9, scope: !1078)
!1078 = !{!"0xb\002", !1, !992}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1079 = !MDLocation(line: 1866, column: 9, scope: !1080)
!1080 = !{!"0xb\008", !1, !992}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1081 = !MDLocation(line: 1866, column: 9, scope: !1082)
!1082 = !{!"0xb\009", !1, !992}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1083 = !MDLocation(line: 1866, column: 9, scope: !1084)
!1084 = !{!"0xb\0011", !1, !1085}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1085 = !{!"0xb\0010", !1, !992}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1086 = !MDLocation(line: 1866, column: 2, scope: !1087)
!1087 = !{!"0xb\0012", !1, !1088}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1088 = !{!"0xb\007", !1, !992}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1089 = !MDLocation(line: 1870, column: 6, scope: !1090)
!1090 = !{!"0xb\001870\006\00172", !1, !992}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1091 = !MDLocation(line: 1870, column: 10, scope: !1090)
!1092 = !MDLocation(line: 1870, column: 6, scope: !992)
!1093 = !MDLocation(line: 1871, column: 14, scope: !1090)
!1094 = !MDLocation(line: 1871, column: 14, scope: !1095)
!1095 = !{!"0xb\001", !1, !1090}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1096 = !MDLocation(line: 1871, column: 14, scope: !1097)
!1097 = !{!"0xb\002", !1, !1090}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1098 = !MDLocation(line: 1871, column: 6, scope: !1099)
!1099 = !{!"0xb\004", !1, !1100}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1100 = !{!"0xb\003", !1, !1090}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1101 = !MDLocation(line: 1873, column: 14, scope: !1090)
!1102 = !MDLocation(line: 1873, column: 6, scope: !1090)
!1103 = !MDLocation(line: 1877, column: 2, scope: !992)
!1104 = !MDLocation(line: 1878, column: 15, scope: !992)
!1105 = !MDLocation(line: 1878, column: 2, scope: !992)
!1106 = !MDLocation(line: 1879, column: 11, scope: !992)
!1107 = !MDLocation(line: 1879, column: 11, scope: !1069)
!1108 = !MDLocation(line: 1879, column: 11, scope: !1078)
!1109 = !MDLocation(line: 1879, column: 2, scope: !1110)
!1110 = !{!"0xb\004", !1, !1071}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1111 = !MDLocation(line: 1880, column: 2, scope: !992)
!1112 = !MDLocation(line: 1880, column: 11, scope: !1113)
!1113 = !{!"0xb\003", !1, !1069}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1114 = !MDLocation(line: 1880, column: 16, scope: !992)
!1115 = !MDLocation(line: 1880, column: 11, scope: !992)
!1116 = !MDLocation(line: 1880, column: 10, scope: !992)
!1117 = !MDLocation(line: 1881, column: 5, scope: !992)
!1118 = !MDLocation(line: 1881, column: 4, scope: !992)
!1119 = !MDLocation(line: 1882, column: 23, scope: !992)
!1120 = !MDLocation(line: 1882, column: 27, scope: !992)
!1121 = !MDLocation(line: 1882, column: 33, scope: !992)
!1122 = !MDLocation(line: 1882, column: 33, scope: !1069)
!1123 = !MDLocation(line: 1882, column: 33, scope: !1078)
!1124 = !MDLocation(line: 1882, column: 62, scope: !1110)
!1125 = !MDLocation(line: 1883, column: 9, scope: !992)
!1126 = !MDLocation(line: 1882, column: 11, scope: !992)
!1127 = !MDLocation(line: 1882, column: 7, scope: !992)
!1128 = !MDLocation(line: 1884, column: 37, scope: !992)
!1129 = !MDLocation(line: 1884, column: 37, scope: !1069)
!1130 = !MDLocation(line: 1884, column: 37, scope: !1078)
!1131 = !MDLocation(line: 1885, column: 23, scope: !992)
!1132 = !MDLocation(line: 1885, column: 31, scope: !992)
!1133 = !MDLocation(line: 1886, column: 7, scope: !992)
!1134 = !MDLocation(line: 1884, column: 11, scope: !992)
!1135 = !MDLocation(line: 1884, column: 7, scope: !992)
!1136 = !MDLocation(line: 1880, column: 2, scope: !1078)
!1137 = !MDLocation(line: 1888, column: 11, scope: !1138)
!1138 = !{!"0xb\001888\0010\00174", !1, !1139}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1139 = !{!"0xb\001886\0047\00173", !1, !992}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1140 = !MDLocation(line: 1888, column: 10, scope: !1139)
!1141 = !MDLocation(line: 1888, column: 36, scope: !1142)
!1142 = !{!"0xb\001", !1, !1138}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1143 = !MDLocation(line: 1889, column: 7, scope: !1138)
!1144 = !MDLocation(line: 1889, column: 17, scope: !1138)
!1145 = !MDLocation(line: 1889, column: 21, scope: !1138)
!1146 = !MDLocation(line: 1889, column: 3, scope: !1138)
!1147 = !MDLocation(line: 1891, column: 10, scope: !1148)
!1148 = !{!"0xb\001891\0010\00175", !1, !1139}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1149 = !MDLocation(line: 1891, column: 10, scope: !1150)
!1150 = !{!"0xb\001", !1, !1148}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1151 = !MDLocation(line: 1891, column: 10, scope: !1152)
!1152 = !{!"0xb\002", !1, !1148}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1153 = !MDLocation(line: 1891, column: 31, scope: !1154)
!1154 = !{!"0xb\004", !1, !1155}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1155 = !{!"0xb\003", !1, !1148}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1156 = !MDLocation(line: 1891, column: 10, scope: !1139)
!1157 = !MDLocation(line: 1892, column: 11, scope: !1158)
!1158 = !{!"0xb\001891\0038\00176", !1, !1148}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1159 = !MDLocation(line: 1892, column: 11, scope: !1160)
!1160 = !{!"0xb\001", !1, !1158}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1161 = !MDLocation(line: 1892, column: 11, scope: !1162)
!1162 = !{!"0xb\002", !1, !1158}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1163 = !MDLocation(line: 1892, column: 3, scope: !1164)
!1164 = !{!"0xb\004", !1, !1165}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1165 = !{!"0xb\003", !1, !1158}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1166 = !MDLocation(line: 1893, column: 7, scope: !1158)
!1167 = !MDLocation(line: 1893, column: 7, scope: !1160)
!1168 = !MDLocation(line: 1893, column: 7, scope: !1162)
!1169 = !MDLocation(line: 1893, column: 3, scope: !1164)
!1170 = !MDLocation(line: 1894, column: 6, scope: !1158)
!1171 = !{!"0x100\00t\001896\000", !1172, !538, !39} ; [ DW_TAG_auto_variable ] [t] [line 1896]
!1172 = !{!"0xb\001895\0011\00177", !1, !1148}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1173 = !MDLocation(line: 1896, column: 9, scope: !1172)
!1174 = !MDLocation(line: 1896, column: 14, scope: !1172)
!1175 = !MDLocation(line: 1896, column: 23, scope: !1172)
!1176 = !MDLocation(line: 1896, column: 13, scope: !1172)
!1177 = !MDLocation(line: 1896, column: 35, scope: !1178)
!1178 = !{!"0xb\001", !1, !1172}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1179 = !MDLocation(line: 1896, column: 35, scope: !1180)
!1180 = !{!"0xb\003", !1, !1172}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1181 = !MDLocation(line: 1896, column: 35, scope: !1182)
!1182 = !{!"0xb\004", !1, !1172}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1183 = !MDLocation(line: 1896, column: 35, scope: !1172)
!1184 = !MDLocation(line: 1896, column: 13, scope: !1185)
!1185 = !{!"0xb\006", !1, !1186}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1186 = !{!"0xb\005", !1, !1172}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1187 = !MDLocation(line: 1896, column: 52, scope: !1188)
!1188 = !{!"0xb\002", !1, !1172}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1189 = !MDLocation(line: 1896, column: 9, scope: !1190)
!1190 = !{!"0xb\008", !1, !1191}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1191 = !{!"0xb\007", !1, !1172}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1192 = !MDLocation(line: 1898, column: 11, scope: !1172)
!1193 = !MDLocation(line: 1898, column: 11, scope: !1178)
!1194 = !MDLocation(line: 1898, column: 11, scope: !1188)
!1195 = !MDLocation(line: 1898, column: 3, scope: !1196)
!1196 = !{!"0xb\004", !1, !1180}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1197 = !MDLocation(line: 1899, column: 7, scope: !1172)
!1198 = !MDLocation(line: 1899, column: 3, scope: !1172)
!1199 = !MDLocation(line: 1901, column: 10, scope: !1200)
!1200 = !{!"0xb\001901\0010\00178", !1, !1139}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1201 = !MDLocation(line: 1901, column: 10, scope: !1139)
!1202 = !MDLocation(line: 1902, column: 3, scope: !1203)
!1203 = !{!"0xb\001901\0019\00179", !1, !1200}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1204 = !MDLocation(line: 1902, column: 10, scope: !1205)
!1205 = !{!"0xb\002", !1, !1206}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1206 = !{!"0xb\001", !1, !1203}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1207 = !MDLocation(line: 1902, column: 15, scope: !1203)
!1208 = !MDLocation(line: 1902, column: 10, scope: !1203)
!1209 = !MDLocation(line: 1903, column: 18, scope: !1210)
!1210 = !{!"0xb\001903\0011\00181", !1, !1211}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1211 = !{!"0xb\001902\0022\00180", !1, !1203}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1212 = !MDLocation(line: 1903, column: 24, scope: !1210)
!1213 = !MDLocation(line: 1903, column: 11, scope: !1210)
!1214 = !MDLocation(line: 1903, column: 11, scope: !1211)
!1215 = !MDLocation(line: 1904, column: 4, scope: !1210)
!1216 = !MDLocation(line: 1905, column: 12, scope: !1211)
!1217 = !MDLocation(line: 1905, column: 7, scope: !1211)
!1218 = !MDLocation(line: 1907, column: 6, scope: !1203)
!1219 = !MDLocation(line: 1909, column: 3, scope: !1220)
!1220 = !{!"0xb\001908\0011\00182", !1, !1200}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1221 = !MDLocation(line: 1909, column: 10, scope: !1222)
!1222 = !{!"0xb\002", !1, !1223}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1223 = !{!"0xb\001", !1, !1220}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1224 = !MDLocation(line: 1909, column: 15, scope: !1220)
!1225 = !MDLocation(line: 1909, column: 10, scope: !1220)
!1226 = !MDLocation(line: 1910, column: 18, scope: !1227)
!1227 = !{!"0xb\001910\0011\00184", !1, !1228}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1228 = !{!"0xb\001909\0022\00183", !1, !1220}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1229 = !MDLocation(line: 1910, column: 24, scope: !1227)
!1230 = !MDLocation(line: 1910, column: 11, scope: !1227)
!1231 = !MDLocation(line: 1910, column: 11, scope: !1228)
!1232 = !MDLocation(line: 1911, column: 4, scope: !1227)
!1233 = !MDLocation(line: 1912, column: 7, scope: !1228)
!1234 = !MDLocation(line: 1926, column: 2, scope: !992)
!1235 = !MDLocation(line: 1928, column: 19, scope: !1236)
!1236 = !{!"0xb\001928\0014\00185", !1, !983}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1237 = !MDLocation(line: 1928, column: 15, scope: !1236)
!1238 = !MDLocation(line: 1928, column: 14, scope: !983)
!1239 = !MDLocation(line: 1929, column: 6, scope: !1240)
!1240 = !{!"0xb\001929\006\00187", !1, !1241}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1241 = !{!"0xb\001928\0038\00186", !1, !1236}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1242 = !MDLocation(line: 1929, column: 6, scope: !1241)
!1243 = !{!"0x100\00op\001930\000", !1244, !538, !157} ; [ DW_TAG_auto_variable ] [op] [line 1930]
!1244 = !{!"0xb\001929\0014\00188", !1, !1240}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1245 = !MDLocation(line: 1930, column: 10, scope: !1244)
!1246 = !MDLocation(line: 1930, column: 19, scope: !1244)
!1247 = !MDLocation(line: 1930, column: 15, scope: !1244)
!1248 = !MDLocation(line: 1932, column: 21, scope: !1249)
!1249 = !{!"0xb\001932\0010\00189", !1, !1244}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1250 = !MDLocation(line: 1932, column: 10, scope: !1249)
!1251 = !MDLocation(line: 1932, column: 10, scope: !1244)
!1252 = !MDLocation(line: 1932, column: 37, scope: !1253)
!1253 = !{!"0xb\001", !1, !1249}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1254 = !MDLocation(line: 1933, column: 19, scope: !1249)
!1255 = !MDLocation(line: 1933, column: 19, scope: !1253)
!1256 = !MDLocation(line: 1933, column: 19, scope: !1257)
!1257 = !{!"0xb\002", !1, !1249}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1258 = !MDLocation(line: 1933, column: 10, scope: !1259)
!1259 = !{!"0xb\004", !1, !1260}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1260 = !{!"0xb\003", !1, !1249}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1261 = !MDLocation(line: 1934, column: 2, scope: !1244)
!1262 = !MDLocation(line: 1956, column: 21, scope: !1263)
!1263 = !{!"0xb\001956\008\00190", !1, !1241}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1264 = !MDLocation(line: 1956, column: 27, scope: !1263)
!1265 = !MDLocation(line: 1956, column: 30, scope: !1263)
!1266 = !MDLocation(line: 1956, column: 33, scope: !1263)
!1267 = !MDLocation(line: 1956, column: 41, scope: !1263)
!1268 = !MDLocation(line: 1956, column: 8, scope: !1263)
!1269 = !MDLocation(line: 1956, column: 8, scope: !1241)
!1270 = !MDLocation(line: 1957, column: 6, scope: !1263)
!1271 = !MDLocation(line: 1959, column: 5, scope: !1241)
!1272 = !MDLocation(line: 1961, column: 2, scope: !1273)
!1273 = !{!"0xb\001960\0010\00191", !1, !1236}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1274 = !MDLocation(line: 1962, column: 6, scope: !1275)
!1275 = !{!"0xb\001962\006\00192", !1, !1273}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1276 = !MDLocation(line: 1962, column: 6, scope: !1273)
!1277 = !MDLocation(line: 1962, column: 38, scope: !1278)
!1278 = !{!"0xb\001", !1, !1275}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1279 = !{!"0x100\00last\001964\000", !1280, !538, !39} ; [ DW_TAG_auto_variable ] [last] [line 1964]
!1280 = !{!"0xb\001962\0066\00193", !1, !1275}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1281 = !MDLocation(line: 1964, column: 12, scope: !1280)
!1282 = !{!"0x100\00float_real\001965\000", !1280, !538, !87} ; [ DW_TAG_auto_variable ] [float_real] [line 1965]
!1283 = !MDLocation(line: 1965, column: 10, scope: !1280)
!1284 = !MDLocation(line: 1967, column: 12, scope: !1285)
!1285 = !{!"0xb\001967\0010\00194", !1, !1280}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1286 = !MDLocation(line: 1967, column: 10, scope: !1280)
!1287 = !MDLocation(line: 1967, column: 22, scope: !1288)
!1288 = !{!"0xb\001", !1, !1285}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1289 = !MDLocation(line: 1967, column: 41, scope: !1290)
!1290 = !{!"0xb\002", !1, !1285}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1291 = !MDLocation(line: 1968, column: 3, scope: !1285)
!1292 = !MDLocation(line: 1968, column: 28, scope: !1288)
!1293 = !MDLocation(line: 1968, column: 13, scope: !1285)
!1294 = !MDLocation(line: 1968, column: 51, scope: !1290)
!1295 = !MDLocation(line: 1968, column: 36, scope: !1285)
!1296 = !MDLocation(line: 1968, column: 3, scope: !1297)
!1297 = !{!"0xb\004", !1, !1298}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1298 = !{!"0xb\003", !1, !1285}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1299 = !MDLocation(line: 1969, column: 19, scope: !1280)
!1300 = !MDLocation(line: 1969, column: 29, scope: !1301)
!1301 = !{!"0xb\001", !1, !1280}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1302 = !MDLocation(line: 1969, column: 48, scope: !1303)
!1303 = !{!"0xb\002", !1, !1280}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1304 = !MDLocation(line: 1969, column: 6, scope: !1305)
!1305 = !{!"0xb\004", !1, !1306}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1306 = !{!"0xb\003", !1, !1280}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1307 = !MDLocation(line: 1971, column: 10, scope: !1308)
!1308 = !{!"0xb\001971\0010\00195", !1, !1280}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1309 = !MDLocation(line: 1971, column: 10, scope: !1280)
!1310 = !MDLocation(line: 1972, column: 22, scope: !1311)
!1311 = !{!"0xb\001971\0032\00196", !1, !1308}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1312 = !MDLocation(line: 1972, column: 26, scope: !1311)
!1313 = !MDLocation(line: 1972, column: 38, scope: !1311)
!1314 = !MDLocation(line: 1972, column: 42, scope: !1311)
!1315 = !MDLocation(line: 1973, column: 8, scope: !1311)
!1316 = !MDLocation(line: 1972, column: 10, scope: !1311)
!1317 = !MDLocation(line: 1972, column: 3, scope: !1311)
!1318 = !MDLocation(line: 1974, column: 8, scope: !1319)
!1319 = !{!"0xb\001974\007\00197", !1, !1311}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1320 = !MDLocation(line: 1974, column: 7, scope: !1311)
!1321 = !MDLocation(line: 1975, column: 14, scope: !1319)
!1322 = !MDLocation(line: 1975, column: 7, scope: !1319)
!1323 = !MDLocation(line: 1977, column: 12, scope: !1324)
!1324 = !{!"0xb\001977\0012\00198", !1, !1319}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1325 = !MDLocation(line: 1977, column: 12, scope: !1319)
!1326 = !MDLocation(line: 1978, column: 11, scope: !1324)
!1327 = !MDLocation(line: 1978, column: 21, scope: !1324)
!1328 = !MDLocation(line: 1978, column: 25, scope: !1324)
!1329 = !MDLocation(line: 1978, column: 7, scope: !1324)
!1330 = !MDLocation(line: 1979, column: 6, scope: !1311)
!1331 = !{!"0x100\00len\001981\000", !1332, !538, !48} ; [ DW_TAG_auto_variable ] [len] [line 1981]
!1332 = !{!"0xb\001980\0011\00199", !1, !1308}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1333 = !MDLocation(line: 1981, column: 10, scope: !1332)
!1334 = !{!"0x100\00little\001982\000", !1332, !538, !39} ; [ DW_TAG_auto_variable ] [little] [line 1982]
!1335 = !MDLocation(line: 1982, column: 9, scope: !1332)
!1336 = !MDLocation(line: 1982, column: 18, scope: !1332)
!1337 = !MDLocation(line: 1982, column: 18, scope: !1338)
!1338 = !{!"0xb\001", !1, !1332}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1339 = !MDLocation(line: 1982, column: 18, scope: !1340)
!1340 = !{!"0xb\002", !1, !1332}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1341 = !MDLocation(line: 1982, column: 9, scope: !1342)
!1342 = !{!"0xb\004", !1, !1343}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1343 = !{!"0xb\003", !1, !1332}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1344 = !MDLocation(line: 1984, column: 7, scope: !1345)
!1345 = !{!"0xb\001984\007\00200", !1, !1332}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1346 = !MDLocation(line: 1984, column: 7, scope: !1332)
!1347 = !MDLocation(line: 1985, column: 11, scope: !1348)
!1348 = !{!"0xb\001985\0011\00202", !1, !1349}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1349 = !{!"0xb\001984\0027\00201", !1, !1345}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1350 = !MDLocation(line: 1985, column: 11, scope: !1349)
!1351 = !MDLocation(line: 1986, column: 11, scope: !1348)
!1352 = !MDLocation(line: 1986, column: 20, scope: !1348)
!1353 = !MDLocation(line: 1986, column: 4, scope: !1348)
!1354 = !MDLocation(line: 1987, column: 17, scope: !1355)
!1355 = !{!"0xb\001987\0016\00203", !1, !1348}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1356 = !MDLocation(line: 1987, column: 16, scope: !1348)
!1357 = !MDLocation(line: 1988, column: 11, scope: !1355)
!1358 = !MDLocation(line: 1989, column: 10, scope: !1355)
!1359 = !MDLocation(line: 1989, column: 19, scope: !1355)
!1360 = !MDLocation(line: 1988, column: 11, scope: !1361)
!1361 = !{!"0xb\001", !1, !1355}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1362 = !MDLocation(line: 1988, column: 4, scope: !1363)
!1363 = !{!"0xb\003", !1, !1364}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1364 = !{!"0xb\002", !1, !1355}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1365 = !MDLocation(line: 1991, column: 4, scope: !1355)
!1366 = !MDLocation(line: 1992, column: 3, scope: !1349)
!1367 = !MDLocation(line: 1992, column: 10, scope: !1345)
!1368 = !MDLocation(line: 1994, column: 11, scope: !1369)
!1369 = !{!"0xb\001994\0011\00205", !1, !1370}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1370 = !{!"0xb\001992\0010\00204", !1, !1345}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1371 = !MDLocation(line: 1994, column: 11, scope: !1370)
!1372 = !MDLocation(line: 1995, column: 19, scope: !1369)
!1373 = !MDLocation(line: 1995, column: 22, scope: !1369)
!1374 = !MDLocation(line: 1995, column: 30, scope: !1369)
!1375 = !MDLocation(line: 1995, column: 38, scope: !1369)
!1376 = !MDLocation(line: 1995, column: 47, scope: !1369)
!1377 = !MDLocation(line: 1995, column: 11, scope: !1369)
!1378 = !MDLocation(line: 1995, column: 4, scope: !1369)
!1379 = !MDLocation(line: 1997, column: 11, scope: !1369)
!1380 = !MDLocation(line: 1997, column: 4, scope: !1369)
!1381 = !MDLocation(line: 2000, column: 10, scope: !1382)
!1382 = !{!"0xb\002000\0010\00206", !1, !1280}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1383 = !MDLocation(line: 2000, column: 10, scope: !1280)
!1384 = !MDLocation(line: 2004, column: 3, scope: !1385)
!1385 = !{!"0xb\002000\0024\00207", !1, !1382}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1386 = !MDLocation(line: 2006, column: 19, scope: !1280)
!1387 = !MDLocation(line: 2006, column: 28, scope: !1280)
!1388 = !MDLocation(line: 2006, column: 35, scope: !1280)
!1389 = !MDLocation(line: 2006, column: 6, scope: !1280)
!1390 = !MDLocation(line: 2007, column: 2, scope: !1280)
!1391 = !MDLocation(line: 2008, column: 6, scope: !1392)
!1392 = !{!"0xb\002008\006\00208", !1, !1273}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1393 = !MDLocation(line: 2008, column: 6, scope: !1273)
!1394 = !MDLocation(line: 2008, column: 17, scope: !1395)
!1395 = !{!"0xb\001", !1, !1392}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1396 = !MDLocation(line: 2008, column: 30, scope: !1392)
!1397 = !MDLocation(line: 2008, column: 17, scope: !1392)
!1398 = !MDLocation(line: 2009, column: 19, scope: !1392)
!1399 = !MDLocation(line: 2009, column: 6, scope: !1392)
!1400 = !MDLocation(line: 2010, column: 12, scope: !1273)
!1401 = !MDLocation(line: 2010, column: 2, scope: !1273)
!1402 = !MDLocation(line: 2012, column: 6, scope: !1403)
!1403 = !{!"0xb\002012\006\00209", !1, !1273}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1404 = !MDLocation(line: 2012, column: 6, scope: !1273)
!1405 = !MDLocation(line: 2013, column: 6, scope: !1406)
!1406 = !{!"0xb\002012\0015\00210", !1, !1403}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1407 = !MDLocation(line: 2014, column: 14, scope: !1408)
!1408 = !{!"0xb\002014\007\00214", !1, !1409}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1409 = !{!"0xb\002013\0015\00213", !1, !1410}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1410 = !{!"0xb\002013\006\00212", !1, !1411}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1411 = !{!"0xb\002013\006\00211", !1, !1406}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1412 = !MDLocation(line: 2014, column: 20, scope: !1408)
!1413 = !MDLocation(line: 2014, column: 7, scope: !1408)
!1414 = !MDLocation(line: 2014, column: 7, scope: !1409)
!1415 = !MDLocation(line: 2015, column: 7, scope: !1408)
!1416 = !MDLocation(line: 2016, column: 7, scope: !1417)
!1417 = !{!"0xb\002016\007\00215", !1, !1409}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1418 = !MDLocation(line: 2016, column: 12, scope: !1417)
!1419 = !MDLocation(line: 2016, column: 7, scope: !1409)
!1420 = !MDLocation(line: 2017, column: 7, scope: !1417)
!1421 = !MDLocation(line: 2018, column: 8, scope: !1409)
!1422 = !MDLocation(line: 2018, column: 3, scope: !1409)
!1423 = !MDLocation(line: 2013, column: 6, scope: !1410)
!1424 = !MDLocation(line: 2020, column: 2, scope: !1406)
!1425 = !MDLocation(line: 2022, column: 6, scope: !1426)
!1426 = !{!"0xb\002021\007\00216", !1, !1403}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1427 = !MDLocation(line: 2023, column: 14, scope: !1428)
!1428 = !{!"0xb\002023\007\00218", !1, !1429}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1429 = !{!"0xb\002022\009\00217", !1, !1426}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1430 = !MDLocation(line: 2023, column: 20, scope: !1428)
!1431 = !MDLocation(line: 2023, column: 7, scope: !1428)
!1432 = !MDLocation(line: 2023, column: 7, scope: !1429)
!1433 = !MDLocation(line: 2024, column: 7, scope: !1428)
!1434 = !MDLocation(line: 2025, column: 6, scope: !1429)
!1435 = !MDLocation(line: 2025, column: 15, scope: !1436)
!1436 = !{!"0xb\001", !1, !1426}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1437 = !MDLocation(line: 2025, column: 21, scope: !1426)
!1438 = !MDLocation(line: 2025, column: 15, scope: !1426)
!1439 = !MDLocation(line: 2030, column: 5, scope: !552)
!1440 = !MDLocation(line: 2033, column: 5, scope: !552)
!1441 = !MDLocation(line: 2033, column: 5, scope: !629)
!1442 = !MDLocation(line: 2033, column: 5, scope: !631)
!1443 = !MDLocation(line: 2035, column: 9, scope: !1444)
!1444 = !{!"0xb\002035\009\00219", !1, !552}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1445 = !MDLocation(line: 2035, column: 9, scope: !552)
!1446 = !MDLocation(line: 2037, column: 6, scope: !1447)
!1447 = !{!"0xb\002037\006\00221", !1, !1448}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1448 = !{!"0xb\002035\0026\00220", !1, !1444}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1449 = !MDLocation(line: 2037, column: 17, scope: !1447)
!1450 = !MDLocation(line: 2037, column: 6, scope: !1448)
!1451 = !MDLocation(line: 2038, column: 6, scope: !1447)
!1452 = !MDLocation(line: 2041, column: 2, scope: !1448)
!1453 = !MDLocation(line: 2042, column: 5, scope: !1448)
!1454 = !MDLocation(line: 2045, column: 12, scope: !1455)
!1455 = !{!"0xb\002045\0010\00222", !1, !552}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1456 = !MDLocation(line: 2045, column: 10, scope: !552)
!1457 = !MDLocation(line: 2046, column: 6, scope: !1458)
!1458 = !{!"0xb\002046\006\00224", !1, !1459}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1459 = !{!"0xb\002045\0039\00223", !1, !1455}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1460 = !MDLocation(line: 2046, column: 6, scope: !1459)
!1461 = !MDLocation(line: 2047, column: 6, scope: !1462)
!1462 = !{!"0xb\002046\0029\00225", !1, !1458}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1463 = !MDLocation(line: 2048, column: 6, scope: !1462)
!1464 = !MDLocation(line: 2049, column: 2, scope: !1462)
!1465 = !MDLocation(line: 2050, column: 6, scope: !1466)
!1466 = !{!"0xb\002050\006\00226", !1, !1459}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1467 = !MDLocation(line: 2050, column: 6, scope: !1459)
!1468 = !{!"0x100\00i\002051\000", !1469, !538, !157} ; [ DW_TAG_auto_variable ] [i] [line 2051]
!1469 = !{!"0xb\002050\0030\00227", !1, !1466}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1470 = !MDLocation(line: 2051, column: 10, scope: !1469)
!1471 = !MDLocation(line: 2051, column: 14, scope: !1469)
!1472 = !MDLocation(line: 2051, column: 26, scope: !1469)
!1473 = !MDLocation(line: 2051, column: 38, scope: !1469)
!1474 = !MDLocation(line: 2051, column: 50, scope: !1469)
!1475 = !MDLocation(line: 2053, column: 18, scope: !1469)
!1476 = !MDLocation(line: 2053, column: 26, scope: !1469)
!1477 = !MDLocation(line: 2053, column: 10, scope: !1469)
!1478 = !MDLocation(line: 2053, column: 6, scope: !1469)
!1479 = !MDLocation(line: 2054, column: 21, scope: !1469)
!1480 = !MDLocation(line: 2054, column: 6, scope: !1469)
!1481 = !MDLocation(line: 2055, column: 21, scope: !1469)
!1482 = !MDLocation(line: 2055, column: 6, scope: !1469)
!1483 = !MDLocation(line: 2056, column: 6, scope: !1469)
!1484 = !MDLocation(line: 2057, column: 2, scope: !1469)
!1485 = !MDLocation(line: 2059, column: 21, scope: !1486)
!1486 = !{!"0xb\002058\007\00228", !1, !1466}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1487 = !MDLocation(line: 2059, column: 6, scope: !1486)
!1488 = !MDLocation(line: 2060, column: 21, scope: !1486)
!1489 = !MDLocation(line: 2060, column: 33, scope: !1486)
!1490 = !MDLocation(line: 2060, column: 6, scope: !1486)
!1491 = !MDLocation(line: 2062, column: 5, scope: !1459)
!1492 = !MDLocation(line: 2064, column: 5, scope: !552)
!1493 = !MDLocation(line: 2069, column: 9, scope: !1494)
!1494 = !{!"0xb\002069\009\00229", !1, !552}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1495 = !MDLocation(line: 2069, column: 9, scope: !552)
!1496 = !MDLocation(line: 2070, column: 2, scope: !1494)
!1497 = !MDLocation(line: 2071, column: 5, scope: !552)
!1498 = !MDLocation(line: 2072, column: 1, scope: !552)
!1499 = !{!"0x101\00prog\0016777613\000", !542, !538, !484} ; [ DW_TAG_arg_variable ] [prog] [line 397]
!1500 = !MDLocation(line: 397, column: 36, scope: !542)
!1501 = !{!"0x101\00sv\0033554829\000", !542, !538, !87} ; [ DW_TAG_arg_variable ] [sv] [line 397]
!1502 = !MDLocation(line: 397, column: 46, scope: !542)
!1503 = !{!"0x101\00strpos\0050332045\000", !542, !538, !39} ; [ DW_TAG_arg_variable ] [strpos] [line 397]
!1504 = !MDLocation(line: 397, column: 56, scope: !542)
!1505 = !{!"0x101\00strend\0067109262\000", !542, !538, !39} ; [ DW_TAG_arg_variable ] [strend] [line 398]
!1506 = !MDLocation(line: 398, column: 14, scope: !542)
!1507 = !{!"0x101\00flags\0083886478\000", !542, !538, !93} ; [ DW_TAG_arg_variable ] [flags] [line 398]
!1508 = !MDLocation(line: 398, column: 26, scope: !542)
!1509 = !{!"0x101\00data\00100663694\000", !542, !538, !545} ; [ DW_TAG_arg_variable ] [data] [line 398]
!1510 = !MDLocation(line: 398, column: 53, scope: !542)
!1511 = !{!"0x100\00start_shift\00400\000", !542, !538, !157} ; [ DW_TAG_auto_variable ] [start_shift] [line 400]
!1512 = !MDLocation(line: 400, column: 18, scope: !542)
!1513 = !{!"0x100\00end_shift\00402\000", !542, !538, !157} ; [ DW_TAG_auto_variable ] [end_shift] [line 402]
!1514 = !MDLocation(line: 402, column: 18, scope: !542)
!1515 = !{!"0x100\00s\00403\000", !542, !538, !39} ; [ DW_TAG_auto_variable ] [s] [line 403]
!1516 = !MDLocation(line: 403, column: 20, scope: !542)
!1517 = !{!"0x100\00check\00404\000", !542, !538, !87} ; [ DW_TAG_auto_variable ] [check] [line 404]
!1518 = !MDLocation(line: 404, column: 18, scope: !542)
!1519 = !{!"0x100\00strbeg\00405\000", !542, !538, !39} ; [ DW_TAG_auto_variable ] [strbeg] [line 405]
!1520 = !MDLocation(line: 405, column: 11, scope: !542)
!1521 = !{!"0x100\00t\00406\000", !542, !538, !39} ; [ DW_TAG_auto_variable ] [t] [line 406]
!1522 = !MDLocation(line: 406, column: 11, scope: !542)
!1523 = !{!"0x100\00do_utf8\00407\000", !542, !538, !86} ; [ DW_TAG_auto_variable ] [do_utf8] [line 407]
!1524 = !MDLocation(line: 407, column: 9, scope: !542)
!1525 = !MDLocation(line: 407, column: 19, scope: !542)
!1526 = !MDLocation(line: 407, column: 24, scope: !1527)
!1527 = !{!"0xb\001", !1, !542}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1528 = !MDLocation(line: 407, column: 19, scope: !1529)
!1529 = !{!"0xb\002", !1, !542}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1530 = !MDLocation(line: 407, column: 9, scope: !1531)
!1531 = !{!"0xb\004", !1, !1532}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1532 = !{!"0xb\003", !1, !542}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1533 = !{!"0x100\00ml_anch\00408\000", !542, !538, !157} ; [ DW_TAG_auto_variable ] [ml_anch] [line 408]
!1534 = !MDLocation(line: 408, column: 9, scope: !542)
!1535 = !{!"0x100\00other_last\00409\000", !542, !538, !39} ; [ DW_TAG_auto_variable ] [other_last] [line 409]
!1536 = !MDLocation(line: 409, column: 20, scope: !542)
!1537 = !{!"0x100\00check_at\00410\000", !542, !538, !39} ; [ DW_TAG_auto_variable ] [check_at] [line 410]
!1538 = !MDLocation(line: 410, column: 11, scope: !542)
!1539 = !MDLocation(line: 415, column: 5, scope: !542)
!1540 = !MDLocation(line: 415, column: 5, scope: !1527)
!1541 = !MDLocation(line: 415, column: 5, scope: !1529)
!1542 = !MDLocation(line: 417, column: 9, scope: !1543)
!1543 = !{!"0xb\00417\009\000", !1, !542}         ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1544 = !MDLocation(line: 417, column: 9, scope: !542)
!1545 = !MDLocation(line: 420, column: 2, scope: !1546)
!1546 = !{!"0xb\00417\0036\001", !1, !1543}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1547 = !MDLocation(line: 421, column: 5, scope: !1546)
!1548 = !MDLocation(line: 448, column: 9, scope: !1549)
!1549 = !{!"0xb\00448\009\002", !1, !542}         ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1550 = !MDLocation(line: 448, column: 24, scope: !1549)
!1551 = !MDLocation(line: 448, column: 33, scope: !1549)
!1552 = !MDLocation(line: 448, column: 9, scope: !542)
!1553 = !MDLocation(line: 451, column: 2, scope: !1554)
!1554 = !{!"0xb\00448\0041\003", !1, !1549}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1555 = !MDLocation(line: 453, column: 15, scope: !542)
!1556 = !MDLocation(line: 453, column: 14, scope: !542)
!1557 = !MDLocation(line: 453, column: 21, scope: !1527)
!1558 = !MDLocation(line: 453, column: 34, scope: !1532)
!1559 = !MDLocation(line: 453, column: 43, scope: !542)
!1560 = !MDLocation(line: 453, column: 34, scope: !542)
!1561 = !MDLocation(line: 453, column: 55, scope: !1562)
!1562 = !{!"0xb\004", !1, !1529}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1563 = !MDLocation(line: 453, column: 5, scope: !1564)
!1564 = !{!"0xb\006", !1, !1565}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1565 = !{!"0xb\005", !1, !542}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1566 = !MDLocation(line: 454, column: 17, scope: !542)
!1567 = !MDLocation(line: 454, column: 5, scope: !542)
!1568 = !MDLocation(line: 455, column: 9, scope: !1569)
!1569 = !{!"0xb\00455\009\004", !1, !542}         ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1570 = !MDLocation(line: 455, column: 9, scope: !542)
!1571 = !MDLocation(line: 456, column: 7, scope: !1572)
!1572 = !{!"0xb\00456\006\006", !1, !1573}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1573 = !{!"0xb\00455\0018\005", !1, !1569}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1574 = !MDLocation(line: 456, column: 6, scope: !1573)
!1575 = !MDLocation(line: 456, column: 27, scope: !1576)
!1576 = !{!"0xb\001", !1, !1572}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1577 = !MDLocation(line: 457, column: 21, scope: !1572)
!1578 = !MDLocation(line: 457, column: 6, scope: !1572)
!1579 = !MDLocation(line: 458, column: 10, scope: !1573)
!1580 = !MDLocation(line: 458, column: 2, scope: !1573)
!1581 = !MDLocation(line: 459, column: 5, scope: !1573)
!1582 = !MDLocation(line: 460, column: 7, scope: !1583)
!1583 = !{!"0xb\00460\006\008", !1, !1584}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1584 = !{!"0xb\00459\0012\007", !1, !1569}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1585 = !MDLocation(line: 460, column: 6, scope: !1584)
!1586 = !MDLocation(line: 460, column: 29, scope: !1587)
!1587 = !{!"0xb\001", !1, !1583}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1588 = !MDLocation(line: 461, column: 21, scope: !1583)
!1589 = !MDLocation(line: 461, column: 6, scope: !1583)
!1590 = !MDLocation(line: 462, column: 10, scope: !1584)
!1591 = !MDLocation(line: 462, column: 2, scope: !1584)
!1592 = !MDLocation(line: 464, column: 8, scope: !1593)
!1593 = !{!"0xb\00464\008\009", !1, !542}         ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1594 = !MDLocation(line: 464, column: 8, scope: !542)
!1595 = !MDLocation(line: 467, column: 2, scope: !1596)
!1596 = !{!"0xb\00464\0031\0010", !1, !1593}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1597 = !MDLocation(line: 469, column: 9, scope: !1598)
!1598 = !{!"0xb\00469\009\0011", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1599 = !MDLocation(line: 469, column: 9, scope: !542)
!1600 = !MDLocation(line: 470, column: 16, scope: !1601)
!1601 = !{!"0xb\00469\0036\0012", !1, !1598}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1602 = !MDLocation(line: 470, column: 15, scope: !1601)
!1603 = !MDLocation(line: 471, column: 14, scope: !1601)
!1604 = !MDLocation(line: 471, column: 13, scope: !1601)
!1605 = !MDLocation(line: 472, column: 10, scope: !1601)
!1606 = !MDLocation(line: 472, column: 9, scope: !1601)
!1607 = !MDLocation(line: 470, column: 12, scope: !1608)
!1608 = !{!"0xb\002", !1, !1609}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1609 = !{!"0xb\001", !1, !1601}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1610 = !MDLocation(line: 470, column: 2, scope: !1601)
!1611 = !MDLocation(line: 474, column: 7, scope: !1612)
!1612 = !{!"0xb\00474\006\0013", !1, !1601}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1613 = !MDLocation(line: 474, column: 6, scope: !1601)
!1614 = !MDLocation(line: 475, column: 11, scope: !1615)
!1615 = !{!"0xb\00475\009\0015", !1, !1616}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1616 = !{!"0xb\00474\0016\0014", !1, !1612}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1617 = !MDLocation(line: 475, column: 9, scope: !1616)
!1618 = !MDLocation(line: 478, column: 12, scope: !1615)
!1619 = !MDLocation(line: 478, column: 19, scope: !1615)
!1620 = !MDLocation(line: 479, column: 13, scope: !1615)
!1621 = !MDLocation(line: 479, column: 23, scope: !1615)
!1622 = !MDLocation(line: 481, column: 8, scope: !1623)
!1623 = !{!"0xb\00479\0032\0016", !1, !1615}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1624 = !MDLocation(line: 483, column: 8, scope: !1625)
!1625 = !{!"0xb\00483\008\0017", !1, !1616}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1626 = !MDLocation(line: 483, column: 34, scope: !1625)
!1627 = !MDLocation(line: 483, column: 8, scope: !1616)
!1628 = !MDLocation(line: 484, column: 10, scope: !1625)
!1629 = !{!"0x100\00slen\00486\000", !1630, !538, !157} ; [ DW_TAG_auto_variable ] [slen] [line 486]
!1630 = !{!"0xb\00484\0043\0018", !1, !1625}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1631 = !MDLocation(line: 486, column: 10, scope: !1630)
!1632 = !MDLocation(line: 488, column: 10, scope: !1630)
!1633 = !MDLocation(line: 488, column: 10, scope: !1634)
!1634 = !{!"0xb\001", !1, !1630}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1635 = !MDLocation(line: 488, column: 10, scope: !1636)
!1636 = !{!"0xb\002", !1, !1630}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1637 = !MDLocation(line: 488, column: 6, scope: !1638)
!1638 = !{!"0xb\004", !1, !1639}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1639 = !{!"0xb\003", !1, !1630}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1640 = !MDLocation(line: 489, column: 10, scope: !1641)
!1641 = !{!"0xb\00489\0010\0019", !1, !1630}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1642 = !MDLocation(line: 489, column: 10, scope: !1630)
!1643 = !MDLocation(line: 490, column: 10, scope: !1644)
!1644 = !{!"0xb\00489\0025\0020", !1, !1641}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1645 = !MDLocation(line: 490, column: 3, scope: !1644)
!1646 = !MDLocation(line: 492, column: 8, scope: !1647)
!1647 = !{!"0xb\00492\008\0021", !1, !1644}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1648 = !MDLocation(line: 492, column: 17, scope: !1647)
!1649 = !MDLocation(line: 492, column: 21, scope: !1647)
!1650 = !MDLocation(line: 492, column: 8, scope: !1644)
!1651 = !MDLocation(line: 492, column: 29, scope: !1652)
!1652 = !{!"0xb\001", !1, !1647}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1653 = !MDLocation(line: 492, column: 38, scope: !1647)
!1654 = !MDLocation(line: 492, column: 29, scope: !1647)
!1655 = !MDLocation(line: 492, column: 42, scope: !1647)
!1656 = !MDLocation(line: 493, column: 12, scope: !1647)
!1657 = !MDLocation(line: 493, column: 21, scope: !1647)
!1658 = !MDLocation(line: 493, column: 26, scope: !1647)
!1659 = !MDLocation(line: 493, column: 34, scope: !1647)
!1660 = !MDLocation(line: 495, column: 7, scope: !1661)
!1661 = !{!"0xb\00493\0055\0022", !1, !1647}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1662 = !MDLocation(line: 498, column: 3, scope: !1644)
!1663 = !MDLocation(line: 499, column: 7, scope: !1664)
!1664 = !{!"0xb\00499\007\0023", !1, !1644}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1665 = !MDLocation(line: 499, column: 7, scope: !1644)
!1666 = !MDLocation(line: 499, column: 17, scope: !1667)
!1667 = !{!"0xb\001", !1, !1664}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1668 = !MDLocation(line: 499, column: 16, scope: !1664)
!1669 = !MDLocation(line: 499, column: 34, scope: !1664)
!1670 = !MDLocation(line: 499, column: 33, scope: !1664)
!1671 = !MDLocation(line: 500, column: 13, scope: !1664)
!1672 = !MDLocation(line: 501, column: 9, scope: !1664)
!1673 = !MDLocation(line: 501, column: 41, scope: !1664)
!1674 = !MDLocation(line: 504, column: 7, scope: !1675)
!1675 = !{!"0xb\00501\0041\0024", !1, !1664}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1676 = !MDLocation(line: 506, column: 6, scope: !1644)
!1677 = !MDLocation(line: 507, column: 16, scope: !1678)
!1678 = !{!"0xb\00507\0015\0025", !1, !1641}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1679 = !MDLocation(line: 507, column: 15, scope: !1678)
!1680 = !MDLocation(line: 507, column: 33, scope: !1678)
!1681 = !MDLocation(line: 507, column: 32, scope: !1678)
!1682 = !MDLocation(line: 507, column: 15, scope: !1641)
!1683 = !MDLocation(line: 508, column: 20, scope: !1678)
!1684 = !MDLocation(line: 508, column: 13, scope: !1678)
!1685 = !MDLocation(line: 508, column: 12, scope: !1678)
!1686 = !MDLocation(line: 509, column: 8, scope: !1678)
!1687 = !MDLocation(line: 510, column: 3, scope: !1678)
!1688 = !MDLocation(line: 511, column: 6, scope: !1630)
!1689 = !MDLocation(line: 513, column: 2, scope: !1616)
!1690 = !MDLocation(line: 515, column: 6, scope: !1601)
!1691 = !MDLocation(line: 515, column: 2, scope: !1601)
!1692 = !MDLocation(line: 516, column: 16, scope: !1601)
!1693 = !MDLocation(line: 516, column: 2, scope: !1601)
!1694 = !MDLocation(line: 517, column: 14, scope: !1601)
!1695 = !MDLocation(line: 517, column: 29, scope: !1601)
!1696 = !MDLocation(line: 518, column: 6, scope: !1601)
!1697 = !MDLocation(line: 518, column: 6, scope: !1609)
!1698 = !MDLocation(line: 518, column: 6, scope: !1699)
!1699 = !{!"0xb\002", !1, !1601}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1700 = !MDLocation(line: 518, column: 26, scope: !1601)
!1701 = !MDLocation(line: 518, column: 25, scope: !1601)
!1702 = !MDLocation(line: 517, column: 2, scope: !1601)
!1703 = !MDLocation(line: 519, column: 7, scope: !1704)
!1704 = !{!"0xb\00519\006\0026", !1, !1601}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1705 = !MDLocation(line: 519, column: 6, scope: !1601)
!1706 = !{!"0x100\00end\00520\000", !1707, !538, !157} ; [ DW_TAG_auto_variable ] [end] [line 520]
!1707 = !{!"0xb\00519\0016\0027", !1, !1704}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1708 = !MDLocation(line: 520, column: 10, scope: !1707)
!1709 = !MDLocation(line: 520, column: 16, scope: !1707)
!1710 = !MDLocation(line: 520, column: 41, scope: !1707)
!1711 = !MDLocation(line: 520, column: 41, scope: !1712)
!1712 = !{!"0xb\001", !1, !1707}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1713 = !MDLocation(line: 520, column: 41, scope: !1714)
!1714 = !{!"0xb\002", !1, !1707}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1715 = !MDLocation(line: 520, column: 16, scope: !1716)
!1716 = !{!"0xb\004", !1, !1717}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1717 = !{!"0xb\003", !1, !1707}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1718 = !MDLocation(line: 521, column: 10, scope: !1707)
!1719 = !MDLocation(line: 521, column: 9, scope: !1707)
!1720 = !{!"0x100\00eshift\00522\000", !1707, !538, !157} ; [ DW_TAG_auto_variable ] [eshift] [line 522]
!1721 = !MDLocation(line: 522, column: 10, scope: !1707)
!1722 = !MDLocation(line: 522, column: 19, scope: !1707)
!1723 = !MDLocation(line: 522, column: 19, scope: !1712)
!1724 = !MDLocation(line: 522, column: 19, scope: !1714)
!1725 = !MDLocation(line: 522, column: 51, scope: !1716)
!1726 = !MDLocation(line: 524, column: 10, scope: !1727)
!1727 = !{!"0xb\00524\0010\0028", !1, !1707}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1728 = !MDLocation(line: 524, column: 22, scope: !1727)
!1729 = !MDLocation(line: 524, column: 10, scope: !1707)
!1730 = !MDLocation(line: 525, column: 15, scope: !1727)
!1731 = !MDLocation(line: 525, column: 3, scope: !1727)
!1732 = !MDLocation(line: 526, column: 2, scope: !1707)
!1733 = !MDLocation(line: 527, column: 5, scope: !1601)
!1734 = !MDLocation(line: 529, column: 2, scope: !1735)
!1735 = !{!"0xb\00528\0010\0029", !1, !1598}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1736 = !MDLocation(line: 530, column: 6, scope: !1735)
!1737 = !MDLocation(line: 530, column: 2, scope: !1735)
!1738 = !MDLocation(line: 531, column: 16, scope: !1735)
!1739 = !MDLocation(line: 531, column: 2, scope: !1735)
!1740 = !MDLocation(line: 533, column: 14, scope: !1735)
!1741 = !MDLocation(line: 533, column: 29, scope: !1735)
!1742 = !MDLocation(line: 534, column: 6, scope: !1735)
!1743 = !MDLocation(line: 534, column: 6, scope: !1744)
!1744 = !{!"0xb\001", !1, !1735}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1745 = !MDLocation(line: 534, column: 6, scope: !1746)
!1746 = !{!"0xb\002", !1, !1735}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1747 = !MDLocation(line: 534, column: 26, scope: !1735)
!1748 = !MDLocation(line: 534, column: 25, scope: !1735)
!1749 = !MDLocation(line: 533, column: 2, scope: !1735)
!1750 = !MDLocation(line: 469, column: 25, scope: !1598)
!1751 = !MDLocation(line: 545, column: 9, scope: !1752)
!1752 = !{!"0xb\00545\009\0030", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1753 = !MDLocation(line: 545, column: 9, scope: !542)
!1754 = !{!"0x100\00p\00546\000", !1755, !538, !157} ; [ DW_TAG_auto_variable ] [p] [line 546]
!1755 = !{!"0xb\00545\0031\0031", !1, !1752}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1756 = !MDLocation(line: 546, column: 6, scope: !1755)
!1757 = !{!"0x100\00pp\00547\000", !1755, !538, !221} ; [ DW_TAG_auto_variable ] [pp] [line 547]
!1758 = !MDLocation(line: 547, column: 7, scope: !1755)
!1759 = !MDLocation(line: 547, column: 12, scope: !1755)
!1760 = !MDLocation(line: 547, column: 19, scope: !1761)
!1761 = !{!"0xb\001", !1, !1755}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1762 = !MDLocation(line: 547, column: 12, scope: !1763)
!1763 = !{!"0xb\002", !1, !1755}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1764 = !MDLocation(line: 547, column: 7, scope: !1765)
!1765 = !{!"0xb\004", !1, !1766}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1766 = !{!"0xb\003", !1, !1755}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1767 = !MDLocation(line: 549, column: 21, scope: !1768)
!1768 = !{!"0xb\00549\006\0032", !1, !1755}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1769 = !MDLocation(line: 549, column: 6, scope: !1768)
!1770 = !MDLocation(line: 549, column: 6, scope: !1755)
!1771 = !MDLocation(line: 550, column: 11, scope: !1768)
!1772 = !MDLocation(line: 551, column: 8, scope: !1768)
!1773 = !MDLocation(line: 551, column: 29, scope: !1768)
!1774 = !MDLocation(line: 552, column: 7, scope: !1768)
!1775 = !MDLocation(line: 553, column: 22, scope: !1768)
!1776 = !MDLocation(line: 553, column: 26, scope: !1768)
!1777 = !MDLocation(line: 554, column: 8, scope: !1768)
!1778 = !MDLocation(line: 554, column: 23, scope: !1768)
!1779 = !MDLocation(line: 554, column: 27, scope: !1768)
!1780 = !MDLocation(line: 554, column: 36, scope: !1768)
!1781 = !MDLocation(line: 554, column: 47, scope: !1768)
!1782 = !MDLocation(line: 553, column: 10, scope: !1768)
!1783 = !MDLocation(line: 553, column: 6, scope: !1768)
!1784 = !MDLocation(line: 556, column: 6, scope: !1768)
!1785 = !MDLocation(line: 558, column: 6, scope: !1786)
!1786 = !{!"0xb\00558\006\0033", !1, !1755}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1787 = !MDLocation(line: 558, column: 6, scope: !1755)
!1788 = !MDLocation(line: 558, column: 11, scope: !1789)
!1789 = !{!"0xb\001", !1, !1786}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1790 = !MDLocation(line: 559, column: 10, scope: !1786)
!1791 = !MDLocation(line: 559, column: 20, scope: !1786)
!1792 = !MDLocation(line: 559, column: 24, scope: !1786)
!1793 = !MDLocation(line: 559, column: 6, scope: !1786)
!1794 = !MDLocation(line: 560, column: 6, scope: !1795)
!1795 = !{!"0xb\00560\006\0034", !1, !1755}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1796 = !MDLocation(line: 560, column: 6, scope: !1755)
!1797 = !MDLocation(line: 561, column: 27, scope: !1795)
!1798 = !MDLocation(line: 561, column: 7, scope: !1795)
!1799 = !MDLocation(line: 561, column: 6, scope: !1795)
!1800 = !MDLocation(line: 562, column: 5, scope: !1755)
!1801 = !MDLocation(line: 563, column: 14, scope: !1802)
!1802 = !{!"0xb\00563\0014\0035", !1, !1752}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1803 = !MDLocation(line: 563, column: 14, scope: !1752)
!1804 = !MDLocation(line: 564, column: 22, scope: !1802)
!1805 = !MDLocation(line: 564, column: 26, scope: !1802)
!1806 = !MDLocation(line: 565, column: 15, scope: !1802)
!1807 = !MDLocation(line: 565, column: 24, scope: !1802)
!1808 = !MDLocation(line: 566, column: 9, scope: !1802)
!1809 = !MDLocation(line: 566, column: 16, scope: !1802)
!1810 = !MDLocation(line: 564, column: 6, scope: !1802)
!1811 = !MDLocation(line: 564, column: 2, scope: !1802)
!1812 = !MDLocation(line: 568, column: 16, scope: !1802)
!1813 = !MDLocation(line: 568, column: 16, scope: !1814)
!1814 = !{!"0xb\001", !1, !1802}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1815 = !MDLocation(line: 568, column: 16, scope: !1816)
!1816 = !{!"0xb\002", !1, !1802}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1817 = !MDLocation(line: 569, column: 9, scope: !1802)
!1818 = !MDLocation(line: 569, column: 9, scope: !1814)
!1819 = !MDLocation(line: 569, column: 9, scope: !1816)
!1820 = !MDLocation(line: 570, column: 9, scope: !1802)
!1821 = !MDLocation(line: 570, column: 16, scope: !1802)
!1822 = !MDLocation(line: 568, column: 6, scope: !1802)
!1823 = !MDLocation(line: 568, column: 2, scope: !1802)
!1824 = !MDLocation(line: 584, column: 10, scope: !1825)
!1825 = !{!"0xb\00584\009\0036", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1826 = !MDLocation(line: 584, column: 9, scope: !542)
!1827 = !MDLocation(line: 585, column: 2, scope: !1825)
!1828 = !MDLocation(line: 587, column: 16, scope: !542)
!1829 = !MDLocation(line: 587, column: 5, scope: !542)
!1830 = !MDLocation(line: 600, column: 9, scope: !1831)
!1831 = !{!"0xb\00600\009\0037", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1832 = !MDLocation(line: 600, column: 9, scope: !542)
!1833 = !MDLocation(line: 600, column: 20, scope: !1834)
!1834 = !{!"0xb\001", !1, !1831}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1835 = !MDLocation(line: 600, column: 40, scope: !1836)
!1836 = !{!"0xb\003", !1, !1831}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1837 = !MDLocation(line: 600, column: 64, scope: !1838)
!1838 = !{!"0xb\002", !1, !1831}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1839 = !MDLocation(line: 600, column: 86, scope: !1840)
!1840 = !{!"0xb\004", !1, !1831}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1841 = !MDLocation(line: 603, column: 7, scope: !1842)
!1842 = !{!"0xb\00603\006\0039", !1, !1843}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1843 = !{!"0xb\00600\00110\0038", !1, !1831}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1844 = !MDLocation(line: 603, column: 6, scope: !1843)
!1845 = !MDLocation(line: 604, column: 19, scope: !1842)
!1846 = !MDLocation(line: 604, column: 6, scope: !1842)
!1847 = !MDLocation(line: 605, column: 6, scope: !1848)
!1848 = !{!"0xb\00605\006\0040", !1, !1843}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1849 = !MDLocation(line: 605, column: 16, scope: !1848)
!1850 = !MDLocation(line: 605, column: 26, scope: !1851)
!1851 = !{!"0xb\001", !1, !1848}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1852 = !MDLocation(line: 605, column: 45, scope: !1853)
!1853 = !{!"0xb\002", !1, !1848}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1854 = !MDLocation(line: 605, column: 6, scope: !1855)
!1855 = !{!"0xb\004", !1, !1856}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1856 = !{!"0xb\003", !1, !1848}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1857 = !MDLocation(line: 605, column: 6, scope: !1843)
!1858 = !MDLocation(line: 605, column: 66, scope: !1859)
!1859 = !{!"0xb\005", !1, !1848}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1860 = !{!"0x100\00last\00608\000", !1861, !538, !39} ; [ DW_TAG_auto_variable ] [last] [line 608]
!1861 = !{!"0xb\00607\006\0042", !1, !1862}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1862 = !{!"0xb\00605\0066\0041", !1, !1848}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1863 = !MDLocation(line: 608, column: 9, scope: !1861)
!1864 = !MDLocation(line: 608, column: 16, scope: !1861)
!1865 = !MDLocation(line: 608, column: 16, scope: !1866)
!1866 = !{!"0xb\001", !1, !1861}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1867 = !MDLocation(line: 608, column: 16, scope: !1868)
!1868 = !{!"0xb\002", !1, !1861}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1869 = !MDLocation(line: 608, column: 9, scope: !1870)
!1870 = !{!"0xb\004", !1, !1871}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1871 = !{!"0xb\003", !1, !1861}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1872 = !{!"0x100\00last1\00608\000", !1861, !538, !39} ; [ DW_TAG_auto_variable ] [last1] [line 608]
!1873 = !MDLocation(line: 608, column: 49, scope: !1861)
!1874 = !{!"0x100\00last2\00608\000", !1861, !538, !39} ; [ DW_TAG_auto_variable ] [last2] [line 608]
!1875 = !MDLocation(line: 608, column: 57, scope: !1861)
!1876 = !{!"0x100\00s1\00609\000", !1861, !538, !39} ; [ DW_TAG_auto_variable ] [s1] [line 609]
!1877 = !MDLocation(line: 609, column: 9, scope: !1861)
!1878 = !MDLocation(line: 609, column: 14, scope: !1861)
!1879 = !{!"0x100\00must\00610\000", !1861, !538, !87} ; [ DW_TAG_auto_variable ] [must] [line 610]
!1880 = !MDLocation(line: 610, column: 7, scope: !1861)
!1881 = !MDLocation(line: 612, column: 7, scope: !1861)
!1882 = !MDLocation(line: 612, column: 11, scope: !1861)
!1883 = !MDLocation(line: 612, column: 3, scope: !1861)
!1884 = !MDLocation(line: 613, column: 7, scope: !1885)
!1885 = !{!"0xb\00613\007\0043", !1, !1861}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1886 = !MDLocation(line: 613, column: 11, scope: !1885)
!1887 = !MDLocation(line: 613, column: 20, scope: !1885)
!1888 = !MDLocation(line: 613, column: 7, scope: !1861)
!1889 = !MDLocation(line: 614, column: 12, scope: !1885)
!1890 = !MDLocation(line: 615, column: 13, scope: !1885)
!1891 = !MDLocation(line: 615, column: 9, scope: !1885)
!1892 = !MDLocation(line: 616, column: 11, scope: !1885)
!1893 = !MDLocation(line: 616, column: 15, scope: !1885)
!1894 = !MDLocation(line: 613, column: 7, scope: !1895)
!1895 = !{!"0xb\002", !1, !1866}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1896 = !MDLocation(line: 619, column: 11, scope: !1885)
!1897 = !MDLocation(line: 619, column: 7, scope: !1885)
!1898 = !MDLocation(line: 620, column: 7, scope: !1861)
!1899 = !MDLocation(line: 620, column: 7, scope: !1866)
!1900 = !MDLocation(line: 620, column: 7, scope: !1868)
!1901 = !MDLocation(line: 620, column: 3, scope: !1870)
!1902 = !MDLocation(line: 621, column: 7, scope: !1903)
!1903 = !{!"0xb\00621\007\0044", !1, !1861}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1904 = !MDLocation(line: 621, column: 11, scope: !1903)
!1905 = !MDLocation(line: 621, column: 7, scope: !1861)
!1906 = !MDLocation(line: 622, column: 11, scope: !1903)
!1907 = !MDLocation(line: 622, column: 7, scope: !1903)
!1908 = !MDLocation(line: 623, column: 19, scope: !1861)
!1909 = !MDLocation(line: 623, column: 19, scope: !1866)
!1910 = !MDLocation(line: 623, column: 19, scope: !1868)
!1911 = !MDLocation(line: 623, column: 11, scope: !1870)
!1912 = !MDLocation(line: 623, column: 3, scope: !1861)
!1913 = !MDLocation(line: 624, column: 7, scope: !1914)
!1914 = !{!"0xb\00624\007\0045", !1, !1861}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1915 = !MDLocation(line: 624, column: 14, scope: !1914)
!1916 = !MDLocation(line: 624, column: 7, scope: !1861)
!1917 = !MDLocation(line: 625, column: 15, scope: !1914)
!1918 = !MDLocation(line: 625, column: 7, scope: !1914)
!1919 = !MDLocation(line: 628, column: 10, scope: !1861)
!1920 = !MDLocation(line: 628, column: 20, scope: !1866)
!1921 = !MDLocation(line: 628, column: 42, scope: !1868)
!1922 = !MDLocation(line: 628, column: 3, scope: !1870)
!1923 = !MDLocation(line: 629, column: 7, scope: !1924)
!1924 = !{!"0xb\00629\007\0046", !1, !1861}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1925 = !MDLocation(line: 629, column: 7, scope: !1861)
!1926 = !MDLocation(line: 630, column: 7, scope: !1927)
!1927 = !{!"0xb\00629\0029\0047", !1, !1924}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1928 = !MDLocation(line: 632, column: 3, scope: !1927)
!1929 = !MDLocation(line: 635, column: 20, scope: !1924)
!1930 = !MDLocation(line: 636, column: 4, scope: !1924)
!1931 = !MDLocation(line: 636, column: 4, scope: !1932)
!1932 = !{!"0xb\001", !1, !1924}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1933 = !MDLocation(line: 636, column: 4, scope: !1934)
!1934 = !{!"0xb\003", !1, !1924}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1935 = !MDLocation(line: 636, column: 4, scope: !1936)
!1936 = !{!"0xb\004", !1, !1924}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1937 = !MDLocation(line: 636, column: 4, scope: !1938)
!1938 = !{!"0xb\006", !1, !1939}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1939 = !{!"0xb\005", !1, !1924}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1940 = !MDLocation(line: 636, column: 4, scope: !1941)
!1941 = !{!"0xb\002", !1, !1924}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1942 = !MDLocation(line: 636, column: 4, scope: !1943)
!1943 = !{!"0xb\007", !1, !1924}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1944 = !MDLocation(line: 636, column: 4, scope: !1945)
!1945 = !{!"0xb\008", !1, !1924}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1946 = !MDLocation(line: 636, column: 4, scope: !1947)
!1947 = !{!"0xb\0010", !1, !1948}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1948 = !{!"0xb\009", !1, !1924}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1949 = !MDLocation(line: 638, column: 4, scope: !1924)
!1950 = !MDLocation(line: 639, column: 4, scope: !1924)
!1951 = !MDLocation(line: 634, column: 11, scope: !1924)
!1952 = !MDLocation(line: 634, column: 7, scope: !1924)
!1953 = !MDLocation(line: 649, column: 8, scope: !1954)
!1954 = !{!"0xb\00649\007\0048", !1, !1861}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1955 = !MDLocation(line: 649, column: 7, scope: !1861)
!1956 = !MDLocation(line: 650, column: 11, scope: !1957)
!1957 = !{!"0xb\00650\0011\0050", !1, !1958}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1958 = !{!"0xb\00649\0011\0049", !1, !1954}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1959 = !MDLocation(line: 650, column: 20, scope: !1957)
!1960 = !MDLocation(line: 650, column: 11, scope: !1958)
!1961 = !MDLocation(line: 653, column: 4, scope: !1962)
!1962 = !{!"0xb\00650\0027\0051", !1, !1957}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1963 = !MDLocation(line: 658, column: 20, scope: !1958)
!1964 = !MDLocation(line: 658, column: 20, scope: !1965)
!1965 = !{!"0xb\001", !1, !1958}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1966 = !MDLocation(line: 658, column: 20, scope: !1967)
!1967 = !{!"0xb\002", !1, !1958}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1968 = !MDLocation(line: 658, column: 7, scope: !1969)
!1969 = !{!"0xb\004", !1, !1970}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1970 = !{!"0xb\003", !1, !1958}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1971 = !MDLocation(line: 659, column: 11, scope: !1958)
!1972 = !MDLocation(line: 659, column: 11, scope: !1965)
!1973 = !MDLocation(line: 659, column: 11, scope: !1967)
!1974 = !MDLocation(line: 659, column: 7, scope: !1969)
!1975 = !MDLocation(line: 660, column: 7, scope: !1958)
!1976 = !MDLocation(line: 665, column: 11, scope: !1977)
!1977 = !{!"0xb\00662\008\0052", !1, !1954}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1978 = !MDLocation(line: 665, column: 11, scope: !1979)
!1979 = !{!"0xb\001", !1, !1977}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1980 = !MDLocation(line: 665, column: 11, scope: !1981)
!1981 = !{!"0xb\002", !1, !1977}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1982 = !MDLocation(line: 665, column: 7, scope: !1983)
!1983 = !{!"0xb\004", !1, !1984}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1984 = !{!"0xb\003", !1, !1977}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1985 = !MDLocation(line: 666, column: 20, scope: !1977)
!1986 = !MDLocation(line: 666, column: 20, scope: !1979)
!1987 = !MDLocation(line: 666, column: 20, scope: !1981)
!1988 = !MDLocation(line: 666, column: 7, scope: !1983)
!1989 = !MDLocation(line: 667, column: 11, scope: !1977)
!1990 = !MDLocation(line: 667, column: 7, scope: !1977)
!1991 = !MDLocation(line: 668, column: 11, scope: !1992)
!1992 = !{!"0xb\00668\0011\0053", !1, !1977}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1993 = !MDLocation(line: 668, column: 16, scope: !1992)
!1994 = !MDLocation(line: 668, column: 11, scope: !1977)
!1995 = !MDLocation(line: 669, column: 4, scope: !1992)
!1996 = !MDLocation(line: 670, column: 7, scope: !1977)
!1997 = !{!"0x100\00last\00675\000", !1998, !538, !39} ; [ DW_TAG_auto_variable ] [last] [line 675]
!1998 = !{!"0xb\00674\007\0054", !1, !1848}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1999 = !MDLocation(line: 675, column: 12, scope: !1998)
!2000 = !{!"0x100\00last1\00675\000", !1998, !538, !39} ; [ DW_TAG_auto_variable ] [last1] [line 675]
!2001 = !MDLocation(line: 675, column: 19, scope: !1998)
!2002 = !{!"0x100\00s1\00676\000", !1998, !538, !39} ; [ DW_TAG_auto_variable ] [s1] [line 676]
!2003 = !MDLocation(line: 676, column: 12, scope: !1998)
!2004 = !MDLocation(line: 676, column: 17, scope: !1998)
!2005 = !{!"0x100\00must\00677\000", !1998, !538, !87} ; [ DW_TAG_auto_variable ] [must] [line 677]
!2006 = !MDLocation(line: 677, column: 10, scope: !1998)
!2007 = !MDLocation(line: 679, column: 10, scope: !1998)
!2008 = !MDLocation(line: 679, column: 10, scope: !2009)
!2009 = !{!"0xb\001", !1, !1998}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2010 = !MDLocation(line: 679, column: 10, scope: !2011)
!2011 = !{!"0xb\002", !1, !1998}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2012 = !MDLocation(line: 679, column: 6, scope: !2013)
!2013 = !{!"0xb\004", !1, !2014}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2014 = !{!"0xb\003", !1, !1998}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2015 = !MDLocation(line: 681, column: 3, scope: !1998)
!2016 = !MDLocation(line: 681, column: 3, scope: !2009)
!2017 = !MDLocation(line: 681, column: 3, scope: !2011)
!2018 = !MDLocation(line: 680, column: 14, scope: !1998)
!2019 = !MDLocation(line: 680, column: 6, scope: !1998)
!2020 = !MDLocation(line: 682, column: 10, scope: !2021)
!2021 = !{!"0xb\00682\0010\0055", !1, !1998}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2022 = !MDLocation(line: 682, column: 10, scope: !2023)
!2023 = !{!"0xb\001", !1, !2021}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2024 = !MDLocation(line: 682, column: 10, scope: !2025)
!2025 = !{!"0xb\002", !1, !2021}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2026 = !MDLocation(line: 682, column: 40, scope: !2027)
!2027 = !{!"0xb\004", !1, !2028}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2028 = !{!"0xb\003", !1, !2021}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2029 = !MDLocation(line: 682, column: 10, scope: !1998)
!2030 = !MDLocation(line: 683, column: 10, scope: !2021)
!2031 = !MDLocation(line: 683, column: 10, scope: !2023)
!2032 = !MDLocation(line: 683, column: 10, scope: !2025)
!2033 = !MDLocation(line: 683, column: 3, scope: !2027)
!2034 = !MDLocation(line: 684, column: 10, scope: !1998)
!2035 = !MDLocation(line: 684, column: 10, scope: !2009)
!2036 = !MDLocation(line: 684, column: 10, scope: !2011)
!2037 = !MDLocation(line: 684, column: 6, scope: !2013)
!2038 = !MDLocation(line: 685, column: 10, scope: !2039)
!2039 = !{!"0xb\00685\0010\0056", !1, !1998}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2040 = !MDLocation(line: 685, column: 14, scope: !2039)
!2041 = !MDLocation(line: 685, column: 10, scope: !1998)
!2042 = !MDLocation(line: 686, column: 7, scope: !2039)
!2043 = !MDLocation(line: 686, column: 3, scope: !2039)
!2044 = !MDLocation(line: 688, column: 13, scope: !1998)
!2045 = !MDLocation(line: 688, column: 23, scope: !2009)
!2046 = !MDLocation(line: 688, column: 42, scope: !2011)
!2047 = !MDLocation(line: 688, column: 6, scope: !2013)
!2048 = !MDLocation(line: 692, column: 10, scope: !2049)
!2049 = !{!"0xb\00692\0010\0057", !1, !1998}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2050 = !MDLocation(line: 692, column: 10, scope: !1998)
!2051 = !MDLocation(line: 693, column: 3, scope: !2052)
!2052 = !{!"0xb\00692\0032\0058", !1, !2049}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2053 = !MDLocation(line: 695, column: 6, scope: !2052)
!2054 = !MDLocation(line: 697, column: 33, scope: !2049)
!2055 = !MDLocation(line: 698, column: 26, scope: !2049)
!2056 = !MDLocation(line: 698, column: 33, scope: !2049)
!2057 = !MDLocation(line: 698, column: 10, scope: !2049)
!2058 = !MDLocation(line: 699, column: 10, scope: !2049)
!2059 = !MDLocation(line: 700, column: 10, scope: !2049)
!2060 = !MDLocation(line: 700, column: 16, scope: !2049)
!2061 = !MDLocation(line: 697, column: 7, scope: !2049)
!2062 = !MDLocation(line: 697, column: 3, scope: !2049)
!2063 = !MDLocation(line: 707, column: 11, scope: !2064)
!2064 = !{!"0xb\00707\0010\0059", !1, !1998}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2065 = !MDLocation(line: 707, column: 10, scope: !1998)
!2066 = !MDLocation(line: 708, column: 7, scope: !2067)
!2067 = !{!"0xb\00708\007\0061", !1, !2068}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2068 = !{!"0xb\00707\0014\0060", !1, !2064}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2069 = !MDLocation(line: 708, column: 16, scope: !2067)
!2070 = !MDLocation(line: 708, column: 7, scope: !2068)
!2071 = !MDLocation(line: 711, column: 7, scope: !2072)
!2072 = !{!"0xb\00708\0022\0062", !1, !2067}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2073 = !MDLocation(line: 716, column: 16, scope: !2068)
!2074 = !MDLocation(line: 716, column: 3, scope: !2068)
!2075 = !MDLocation(line: 717, column: 7, scope: !2068)
!2076 = !MDLocation(line: 717, column: 7, scope: !2077)
!2077 = !{!"0xb\001", !1, !2068}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2078 = !MDLocation(line: 717, column: 7, scope: !2079)
!2079 = !{!"0xb\002", !1, !2068}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2080 = !MDLocation(line: 717, column: 3, scope: !2081)
!2081 = !{!"0xb\004", !1, !2082}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2082 = !{!"0xb\003", !1, !2068}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2083 = !MDLocation(line: 718, column: 3, scope: !2068)
!2084 = !MDLocation(line: 723, column: 16, scope: !2085)
!2085 = !{!"0xb\00720\0011\0063", !1, !2064}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2086 = !MDLocation(line: 723, column: 3, scope: !2085)
!2087 = !MDLocation(line: 724, column: 7, scope: !2085)
!2088 = !MDLocation(line: 724, column: 3, scope: !2085)
!2089 = !MDLocation(line: 725, column: 7, scope: !2090)
!2090 = !{!"0xb\00725\007\0064", !1, !2085}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2091 = !MDLocation(line: 725, column: 12, scope: !2090)
!2092 = !MDLocation(line: 725, column: 7, scope: !2085)
!2093 = !MDLocation(line: 726, column: 7, scope: !2090)
!2094 = !MDLocation(line: 727, column: 3, scope: !2085)
!2095 = !MDLocation(line: 732, column: 9, scope: !542)
!2096 = !MDLocation(line: 732, column: 13, scope: !542)
!2097 = !MDLocation(line: 732, column: 5, scope: !542)
!2098 = !MDLocation(line: 733, column: 9, scope: !2099)
!2099 = !{!"0xb\00733\009\0065", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2100 = !MDLocation(line: 733, column: 13, scope: !2099)
!2101 = !MDLocation(line: 733, column: 22, scope: !2099)
!2102 = !MDLocation(line: 733, column: 9, scope: !542)
!2103 = !MDLocation(line: 734, column: 14, scope: !2099)
!2104 = !MDLocation(line: 735, column: 15, scope: !2099)
!2105 = !MDLocation(line: 735, column: 11, scope: !2099)
!2106 = !MDLocation(line: 736, column: 7, scope: !2099)
!2107 = !MDLocation(line: 736, column: 11, scope: !2099)
!2108 = !MDLocation(line: 736, column: 21, scope: !2099)
!2109 = !MDLocation(line: 740, column: 6, scope: !2110)
!2110 = !{!"0xb\00740\006\0067", !1, !2111}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2111 = !{!"0xb\00736\0021\0066", !1, !2099}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2112 = !MDLocation(line: 740, column: 6, scope: !2111)
!2113 = !MDLocation(line: 740, column: 17, scope: !2114)
!2114 = !{!"0xb\001", !1, !2110}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2115 = !MDLocation(line: 740, column: 32, scope: !2116)
!2116 = !{!"0xb\002", !1, !2110}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2117 = !MDLocation(line: 748, column: 6, scope: !2118)
!2118 = !{!"0xb\00740\0032\0068", !1, !2110}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2119 = !MDLocation(line: 748, column: 13, scope: !2120)
!2120 = !{!"0xb\002", !1, !2121}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2121 = !{!"0xb\001", !1, !2118}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2122 = !MDLocation(line: 748, column: 17, scope: !2118)
!2123 = !MDLocation(line: 748, column: 26, scope: !2118)
!2124 = !MDLocation(line: 748, column: 13, scope: !2118)
!2125 = !MDLocation(line: 749, column: 8, scope: !2126)
!2126 = !{!"0xb\00749\007\0070", !1, !2127}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2127 = !{!"0xb\00748\0040\0069", !1, !2118}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2128 = !MDLocation(line: 749, column: 7, scope: !2126)
!2129 = !MDLocation(line: 749, column: 7, scope: !2127)
!2130 = !MDLocation(line: 750, column: 11, scope: !2131)
!2131 = !{!"0xb\00750\0011\0072", !1, !2132}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2132 = !{!"0xb\00749\0019\0071", !1, !2126}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2133 = !MDLocation(line: 750, column: 15, scope: !2131)
!2134 = !MDLocation(line: 750, column: 26, scope: !2131)
!2135 = !MDLocation(line: 750, column: 11, scope: !2132)
!2136 = !MDLocation(line: 751, column: 8, scope: !2137)
!2137 = !{!"0xb\00751\008\0074", !1, !2138}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2138 = !{!"0xb\00750\0050\0073", !1, !2131}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2139 = !MDLocation(line: 751, column: 8, scope: !2138)
!2140 = !MDLocation(line: 751, column: 18, scope: !2141)
!2141 = !{!"0xb\001", !1, !2137}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2142 = !MDLocation(line: 751, column: 40, scope: !2143)
!2143 = !{!"0xb\002", !1, !2137}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2144 = !MDLocation(line: 759, column: 17, scope: !2145)
!2145 = !{!"0xb\00751\0063\0075", !1, !2137}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2146 = !MDLocation(line: 759, column: 8, scope: !2145)
!2147 = !MDLocation(line: 762, column: 8, scope: !2145)
!2148 = !MDLocation(line: 766, column: 8, scope: !2138)
!2149 = !MDLocation(line: 766, column: 4, scope: !2138)
!2150 = !MDLocation(line: 769, column: 4, scope: !2138)
!2151 = !MDLocation(line: 776, column: 33, scope: !2132)
!2152 = !MDLocation(line: 776, column: 29, scope: !2132)
!2153 = !MDLocation(line: 776, column: 20, scope: !2132)
!2154 = !MDLocation(line: 776, column: 7, scope: !2132)
!2155 = !MDLocation(line: 777, column: 7, scope: !2132)
!2156 = !MDLocation(line: 779, column: 3, scope: !2127)
!2157 = !MDLocation(line: 783, column: 6, scope: !2118)
!2158 = !MDLocation(line: 789, column: 6, scope: !2111)
!2159 = !MDLocation(line: 789, column: 2, scope: !2111)
!2160 = !MDLocation(line: 791, column: 4, scope: !2111)
!2161 = !MDLocation(line: 791, column: 4, scope: !2162)
!2162 = !{!"0xb\001", !1, !2111}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2163 = !MDLocation(line: 791, column: 4, scope: !2164)
!2164 = !{!"0xb\002", !1, !2111}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2165 = !MDLocation(line: 791, column: 4, scope: !2166)
!2166 = !{!"0xb\004", !1, !2167}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2167 = !{!"0xb\003", !1, !2111}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2168 = !MDLocation(line: 791, column: 2, scope: !2111)
!2169 = !MDLocation(line: 792, column: 5, scope: !2111)
!2170 = !MDLocation(line: 793, column: 10, scope: !2099)
!2171 = !MDLocation(line: 801, column: 6, scope: !2172)
!2172 = !{!"0xb\00801\006\0078", !1, !2173}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2173 = !{!"0xb\00793\0010\0077", !1, !2099}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2174 = !MDLocation(line: 801, column: 6, scope: !2173)
!2175 = !MDLocation(line: 801, column: 17, scope: !2176)
!2176 = !{!"0xb\001", !1, !2172}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2177 = !MDLocation(line: 801, column: 24, scope: !2178)
!2178 = !{!"0xb\002", !1, !2172}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2179 = !MDLocation(line: 802, column: 10, scope: !2172)
!2180 = !MDLocation(line: 802, column: 20, scope: !2172)
!2181 = !MDLocation(line: 802, column: 31, scope: !2172)
!2182 = !MDLocation(line: 804, column: 11, scope: !2172)
!2183 = !MDLocation(line: 806, column: 10, scope: !2184)
!2184 = !{!"0xb\00805\002\0079", !1, !2172}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2185 = !MDLocation(line: 806, column: 6, scope: !2184)
!2186 = !MDLocation(line: 807, column: 6, scope: !2184)
!2187 = !MDLocation(line: 804, column: 40, scope: !2172)
!2188 = !MDLocation(line: 814, column: 8, scope: !2189)
!2189 = !{!"0xb\00814\006\0080", !1, !2173}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2190 = !MDLocation(line: 814, column: 6, scope: !2173)
!2191 = !MDLocation(line: 815, column: 10, scope: !2189)
!2192 = !MDLocation(line: 816, column: 3, scope: !2189)
!2193 = !MDLocation(line: 817, column: 8, scope: !2189)
!2194 = !MDLocation(line: 817, column: 6, scope: !2189)
!2195 = !MDLocation(line: 818, column: 7, scope: !2189)
!2196 = !MDLocation(line: 818, column: 27, scope: !2189)
!2197 = !MDLocation(line: 820, column: 3, scope: !2189)
!2198 = !MDLocation(line: 821, column: 8, scope: !2189)
!2199 = !MDLocation(line: 821, column: 6, scope: !2189)
!2200 = !MDLocation(line: 822, column: 7, scope: !2189)
!2201 = !MDLocation(line: 822, column: 29, scope: !2189)
!2202 = !MDLocation(line: 827, column: 6, scope: !2203)
!2203 = !{!"0xb\00824\002\0081", !1, !2189}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2204 = !MDLocation(line: 827, column: 6, scope: !2205)
!2205 = !{!"0xb\001", !1, !2203}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2206 = !MDLocation(line: 827, column: 6, scope: !2207)
!2207 = !{!"0xb\002", !1, !2203}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2208 = !MDLocation(line: 827, column: 6, scope: !2209)
!2209 = !{!"0xb\004", !1, !2210}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2210 = !{!"0xb\003", !1, !2203}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2211 = !MDLocation(line: 828, column: 10, scope: !2212)
!2212 = !{!"0xb\00828\0010\0082", !1, !2203}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2213 = !MDLocation(line: 828, column: 10, scope: !2203)
!2214 = !MDLocation(line: 828, column: 20, scope: !2215)
!2215 = !{!"0xb\001", !1, !2212}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2216 = !MDLocation(line: 828, column: 41, scope: !2217)
!2217 = !{!"0xb\002", !1, !2212}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2218 = !MDLocation(line: 829, column: 3, scope: !2212)
!2219 = !MDLocation(line: 829, column: 3, scope: !2215)
!2220 = !MDLocation(line: 829, column: 3, scope: !2217)
!2221 = !MDLocation(line: 829, column: 3, scope: !2222)
!2222 = !{!"0xb\004", !1, !2223}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2223 = !{!"0xb\003", !1, !2212}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2224 = !MDLocation(line: 830, column: 27, scope: !2203)
!2225 = !MDLocation(line: 830, column: 6, scope: !2203)
!2226 = !MDLocation(line: 831, column: 27, scope: !2203)
!2227 = !MDLocation(line: 831, column: 6, scope: !2203)
!2228 = !MDLocation(line: 832, column: 6, scope: !2203)
!2229 = !MDLocation(line: 833, column: 10, scope: !2203)
!2230 = !MDLocation(line: 833, column: 6, scope: !2203)
!2231 = !MDLocation(line: 837, column: 6, scope: !2203)
!2232 = !MDLocation(line: 838, column: 2, scope: !2203)
!2233 = !MDLocation(line: 840, column: 10, scope: !2189)
!2234 = !MDLocation(line: 840, column: 6, scope: !2189)
!2235 = !MDLocation(line: 845, column: 9, scope: !2236)
!2236 = !{!"0xb\00845\009\0083", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2237 = !MDLocation(line: 845, column: 9, scope: !542)
!2238 = !{!"0x100\00str\00854\000", !2239, !538, !53} ; [ DW_TAG_auto_variable ] [str] [line 854]
!2239 = !{!"0xb\00845\0027\0084", !1, !2236}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2240 = !MDLocation(line: 854, column: 6, scope: !2239)
!2241 = !MDLocation(line: 854, column: 17, scope: !2239)
!2242 = !{!"0x100\00cl_l\00855\000", !2239, !538, !86} ; [ DW_TAG_auto_variable ] [cl_l] [line 855]
!2243 = !MDLocation(line: 855, column: 6, scope: !2239)
!2244 = !MDLocation(line: 855, column: 29, scope: !2239)
!2245 = !MDLocation(line: 855, column: 14, scope: !2239)
!2246 = !MDLocation(line: 856, column: 9, scope: !2239)
!2247 = !MDLocation(line: 856, column: 9, scope: !2248)
!2248 = !{!"0xb\001", !1, !2239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2249 = !MDLocation(line: 856, column: 9, scope: !2250)
!2250 = !{!"0xb\002", !1, !2239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2251 = !MDLocation(line: 855, column: 14, scope: !2248)
!2252 = !MDLocation(line: 855, column: 13, scope: !2253)
!2253 = !{!"0xb\003", !1, !2250}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2254 = !{!"0x100\00endpos\00858\000", !2239, !538, !39} ; [ DW_TAG_auto_variable ] [endpos] [line 858]
!2255 = !MDLocation(line: 858, column: 8, scope: !2239)
!2256 = !MDLocation(line: 858, column: 18, scope: !2239)
!2257 = !MDLocation(line: 858, column: 17, scope: !2239)
!2258 = !MDLocation(line: 858, column: 43, scope: !2248)
!2259 = !MDLocation(line: 858, column: 66, scope: !2250)
!2260 = !MDLocation(line: 859, column: 5, scope: !2239)
!2261 = !MDLocation(line: 859, column: 5, scope: !2248)
!2262 = !MDLocation(line: 859, column: 5, scope: !2263)
!2263 = !{!"0xb\003", !1, !2239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2264 = !MDLocation(line: 859, column: 5, scope: !2265)
!2265 = !{!"0xb\004", !1, !2239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2266 = !MDLocation(line: 859, column: 5, scope: !2267)
!2267 = !{!"0xb\006", !1, !2268}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2268 = !{!"0xb\005", !1, !2239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2269 = !MDLocation(line: 859, column: 5, scope: !2250)
!2270 = !MDLocation(line: 859, column: 5, scope: !2271)
!2271 = !{!"0xb\007", !1, !2239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2272 = !MDLocation(line: 859, column: 5, scope: !2273)
!2273 = !{!"0xb\008", !1, !2239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2274 = !MDLocation(line: 859, column: 5, scope: !2275)
!2275 = !{!"0xb\0010", !1, !2276}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2276 = !{!"0xb\009", !1, !2239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2277 = !MDLocation(line: 860, column: 6, scope: !2239)
!2278 = !MDLocation(line: 860, column: 28, scope: !2248)
!2279 = !MDLocation(line: 861, column: 8, scope: !2239)
!2280 = !MDLocation(line: 861, column: 8, scope: !2248)
!2281 = !MDLocation(line: 861, column: 8, scope: !2263)
!2282 = !MDLocation(line: 861, column: 8, scope: !2265)
!2283 = !MDLocation(line: 861, column: 8, scope: !2267)
!2284 = !MDLocation(line: 861, column: 8, scope: !2250)
!2285 = !MDLocation(line: 861, column: 8, scope: !2271)
!2286 = !MDLocation(line: 861, column: 8, scope: !2273)
!2287 = !MDLocation(line: 861, column: 8, scope: !2275)
!2288 = !MDLocation(line: 863, column: 8, scope: !2239)
!2289 = !MDLocation(line: 858, column: 8, scope: !2290)
!2290 = !{!"0xb\004", !1, !2263}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2291 = !{!"0x100\00startpos\00864\000", !2239, !538, !39} ; [ DW_TAG_auto_variable ] [startpos] [line 864]
!2292 = !MDLocation(line: 864, column: 8, scope: !2239)
!2293 = !MDLocation(line: 864, column: 19, scope: !2239)
!2294 = !MDLocation(line: 866, column: 6, scope: !2239)
!2295 = !MDLocation(line: 866, column: 2, scope: !2239)
!2296 = !MDLocation(line: 867, column: 11, scope: !2239)
!2297 = !MDLocation(line: 867, column: 2, scope: !2239)
!2298 = !MDLocation(line: 868, column: 19, scope: !2239)
!2299 = !MDLocation(line: 868, column: 25, scope: !2239)
!2300 = !MDLocation(line: 868, column: 43, scope: !2239)
!2301 = !MDLocation(line: 868, column: 46, scope: !2239)
!2302 = !MDLocation(line: 868, column: 54, scope: !2239)
!2303 = !MDLocation(line: 868, column: 6, scope: !2239)
!2304 = !MDLocation(line: 868, column: 2, scope: !2239)
!2305 = !MDLocation(line: 869, column: 7, scope: !2306)
!2306 = !{!"0xb\00869\006\0085", !1, !2239}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2307 = !MDLocation(line: 869, column: 6, scope: !2239)
!2308 = !MDLocation(line: 873, column: 10, scope: !2309)
!2309 = !{!"0xb\00873\0010\0087", !1, !2310}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2310 = !{!"0xb\00869\0010\0086", !1, !2306}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2311 = !MDLocation(line: 873, column: 20, scope: !2309)
!2312 = !MDLocation(line: 873, column: 10, scope: !2310)
!2313 = !MDLocation(line: 876, column: 3, scope: !2314)
!2314 = !{!"0xb\00873\0028\0088", !1, !2309}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2315 = !MDLocation(line: 880, column: 11, scope: !2316)
!2316 = !{!"0xb\00880\0010\0089", !1, !2310}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2317 = !MDLocation(line: 880, column: 10, scope: !2310)
!2318 = !MDLocation(line: 880, column: 42, scope: !2319)
!2319 = !{!"0xb\001", !1, !2316}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2320 = !MDLocation(line: 881, column: 3, scope: !2316)
!2321 = !MDLocation(line: 883, column: 10, scope: !2322)
!2322 = !{!"0xb\00883\0010\0090", !1, !2310}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2323 = !MDLocation(line: 883, column: 10, scope: !2310)
!2324 = !MDLocation(line: 883, column: 35, scope: !2325)
!2325 = !{!"0xb\001", !1, !2322}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2326 = !MDLocation(line: 884, column: 8, scope: !2327)
!2327 = !{!"0xb\00884\007\0092", !1, !2328}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2328 = !{!"0xb\00883\0056\0091", !1, !2322}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2329 = !MDLocation(line: 884, column: 18, scope: !2330)
!2330 = !{!"0xb\001", !1, !2327}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2331 = !MDLocation(line: 884, column: 40, scope: !2332)
!2332 = !{!"0xb\002", !1, !2327}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2333 = !MDLocation(line: 884, column: 66, scope: !2334)
!2334 = !{!"0xb\004", !1, !2335}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2335 = !{!"0xb\003", !1, !2327}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2336 = !MDLocation(line: 884, column: 7, scope: !2327)
!2337 = !MDLocation(line: 884, column: 7, scope: !2328)
!2338 = !MDLocation(line: 884, column: 73, scope: !2339)
!2339 = !{!"0xb\005", !1, !2327}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2340 = !MDLocation(line: 887, column: 11, scope: !2341)
!2341 = !{!"0xb\00884\0073\0093", !1, !2327}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2342 = !MDLocation(line: 887, column: 11, scope: !2343)
!2343 = !{!"0xb\001", !1, !2341}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2344 = !MDLocation(line: 887, column: 11, scope: !2345)
!2345 = !{!"0xb\002", !1, !2341}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2346 = !MDLocation(line: 887, column: 7, scope: !2347)
!2347 = !{!"0xb\004", !1, !2348}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2348 = !{!"0xb\003", !1, !2341}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2349 = !MDLocation(line: 888, column: 11, scope: !2350)
!2350 = !{!"0xb\00888\0011\0094", !1, !2341}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2351 = !MDLocation(line: 888, column: 15, scope: !2350)
!2352 = !MDLocation(line: 888, column: 29, scope: !2350)
!2353 = !MDLocation(line: 888, column: 41, scope: !2350)
!2354 = !MDLocation(line: 888, column: 11, scope: !2341)
!2355 = !MDLocation(line: 892, column: 4, scope: !2356)
!2356 = !{!"0xb\00888\0049\0095", !1, !2350}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2357 = !MDLocation(line: 894, column: 12, scope: !2358)
!2358 = !{!"0xb\00894\0011\0096", !1, !2341}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2359 = !MDLocation(line: 894, column: 11, scope: !2341)
!2360 = !MDLocation(line: 895, column: 4, scope: !2358)
!2361 = !MDLocation(line: 899, column: 7, scope: !2341)
!2362 = !MDLocation(line: 902, column: 7, scope: !2363)
!2363 = !{!"0xb\00902\007\0097", !1, !2328}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2364 = !MDLocation(line: 902, column: 11, scope: !2363)
!2365 = !MDLocation(line: 902, column: 26, scope: !2363)
!2366 = !MDLocation(line: 902, column: 7, scope: !2328)
!2367 = !MDLocation(line: 903, column: 7, scope: !2363)
!2368 = !MDLocation(line: 905, column: 7, scope: !2328)
!2369 = !MDLocation(line: 905, column: 3, scope: !2328)
!2370 = !MDLocation(line: 906, column: 8, scope: !2371)
!2371 = !{!"0xb\00906\007\0098", !1, !2328}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2372 = !MDLocation(line: 906, column: 7, scope: !2328)
!2373 = !MDLocation(line: 907, column: 7, scope: !2371)
!2374 = !MDLocation(line: 911, column: 3, scope: !2328)
!2375 = !MDLocation(line: 915, column: 10, scope: !2376)
!2376 = !{!"0xb\00915\0010\0099", !1, !2310}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2377 = !MDLocation(line: 915, column: 10, scope: !2310)
!2378 = !MDLocation(line: 916, column: 11, scope: !2379)
!2379 = !{!"0xb\00915\0019\00100", !1, !2376}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2380 = !MDLocation(line: 916, column: 7, scope: !2379)
!2381 = !MDLocation(line: 916, column: 3, scope: !2379)
!2382 = !MDLocation(line: 917, column: 8, scope: !2383)
!2383 = !{!"0xb\00917\007\00101", !1, !2379}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2384 = !MDLocation(line: 917, column: 7, scope: !2379)
!2385 = !MDLocation(line: 918, column: 7, scope: !2383)
!2386 = !MDLocation(line: 922, column: 3, scope: !2379)
!2387 = !MDLocation(line: 924, column: 12, scope: !2388)
!2388 = !{!"0xb\00924\0010\00102", !1, !2310}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2389 = !MDLocation(line: 924, column: 10, scope: !2310)
!2390 = !MDLocation(line: 924, column: 22, scope: !2391)
!2391 = !{!"0xb\001", !1, !2388}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2392 = !MDLocation(line: 924, column: 41, scope: !2393)
!2393 = !{!"0xb\002", !1, !2388}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2394 = !MDLocation(line: 925, column: 3, scope: !2388)
!2395 = !MDLocation(line: 924, column: 59, scope: !2396)
!2396 = !{!"0xb\004", !1, !2397}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2397 = !{!"0xb\003", !1, !2388}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2398 = !MDLocation(line: 928, column: 10, scope: !2310)
!2399 = !MDLocation(line: 928, column: 21, scope: !2310)
!2400 = !MDLocation(line: 928, column: 6, scope: !2310)
!2401 = !MDLocation(line: 930, column: 6, scope: !2310)
!2402 = !MDLocation(line: 932, column: 6, scope: !2403)
!2403 = !{!"0xb\00932\006\00103", !1, !2239}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2404 = !MDLocation(line: 932, column: 11, scope: !2403)
!2405 = !MDLocation(line: 932, column: 6, scope: !2239)
!2406 = !MDLocation(line: 937, column: 9, scope: !2407)
!2407 = !{!"0xb\00932\0014\00104", !1, !2403}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2408 = !MDLocation(line: 943, column: 5, scope: !2239)
!2409 = !MDLocation(line: 845, column: 15, scope: !2410)
!2410 = !{!"0xb\001", !1, !2236}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2411 = !MDLocation(line: 948, column: 12, scope: !542)
!2412 = !MDLocation(line: 948, column: 5, scope: !542)
!2413 = !MDLocation(line: 951, column: 9, scope: !2414)
!2414 = !{!"0xb\00951\009\00106", !1, !542}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2415 = !MDLocation(line: 951, column: 9, scope: !542)
!2416 = !MDLocation(line: 951, column: 31, scope: !2417)
!2417 = !{!"0xb\001", !1, !2414}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2418 = !MDLocation(line: 952, column: 2, scope: !2414)
!2419 = !MDLocation(line: 952, column: 2, scope: !2417)
!2420 = !MDLocation(line: 952, column: 2, scope: !2421)
!2421 = !{!"0xb\002", !1, !2414}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2422 = !MDLocation(line: 952, column: 2, scope: !2423)
!2423 = !{!"0xb\004", !1, !2424}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2424 = !{!"0xb\003", !1, !2414}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2425 = !MDLocation(line: 951, column: 37, scope: !2421)
!2426 = !MDLocation(line: 956, column: 5, scope: !542)
!2427 = !MDLocation(line: 957, column: 1, scope: !542)
!2428 = !{!"0x101\00arg\0016781789\000", !561, !538, !38} ; [ DW_TAG_arg_variable ] [arg] [line 4573]
!2429 = !MDLocation(line: 4573, column: 25, scope: !561)
!2430 = !MDLocation(line: 4575, column: 9, scope: !2431)
!2431 = !{!"0xb\004575\009\00738", !1, !561}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2432 = !MDLocation(line: 4575, column: 9, scope: !561)
!2433 = !MDLocation(line: 4576, column: 6, scope: !2434)
!2434 = !{!"0xb\004576\006\00740", !1, !2435}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2435 = !{!"0xb\004575\0026\00739", !1, !2431}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2436 = !MDLocation(line: 4576, column: 6, scope: !2435)
!2437 = !MDLocation(line: 4577, column: 26, scope: !2438)
!2438 = !{!"0xb\004576\0023\00741", !1, !2434}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2439 = !MDLocation(line: 4577, column: 6, scope: !2438)
!2440 = !MDLocation(line: 4578, column: 26, scope: !2438)
!2441 = !MDLocation(line: 4578, column: 6, scope: !2438)
!2442 = !MDLocation(line: 4579, column: 6, scope: !2438)
!2443 = !MDLocation(line: 4580, column: 2, scope: !2438)
!2444 = !MDLocation(line: 4581, column: 25, scope: !2435)
!2445 = !MDLocation(line: 4581, column: 2, scope: !2435)
!2446 = !MDLocation(line: 4582, column: 2, scope: !2435)
!2447 = !MDLocation(line: 4583, column: 13, scope: !2435)
!2448 = !MDLocation(line: 4583, column: 2, scope: !2435)
!2449 = !MDLocation(line: 4584, column: 5, scope: !2435)
!2450 = !MDLocation(line: 4585, column: 1, scope: !561)
!2451 = !{!"0x101\00prog\0016779512\000", !555, !538, !224} ; [ DW_TAG_arg_variable ] [prog] [line 2296]
!2452 = !MDLocation(line: 2296, column: 27, scope: !555)
!2453 = !{!"0x100\00scan\002298\000", !555, !538, !224} ; [ DW_TAG_auto_variable ] [scan] [line 2298]
!2454 = !MDLocation(line: 2298, column: 23, scope: !555)
!2455 = !{!"0x100\00next\002299\000", !555, !538, !224} ; [ DW_TAG_auto_variable ] [next] [line 2299]
!2456 = !MDLocation(line: 2299, column: 14, scope: !555)
!2457 = !{!"0x100\00inner\002300\000", !555, !538, !224} ; [ DW_TAG_auto_variable ] [inner] [line 2300]
!2458 = !MDLocation(line: 2300, column: 14, scope: !555)
!2459 = !{!"0x100\00nextchr\002301\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [nextchr] [line 2301]
!2460 = !MDLocation(line: 2301, column: 18, scope: !555)
!2461 = !{!"0x100\00n\002303\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [n] [line 2303]
!2462 = !MDLocation(line: 2303, column: 18, scope: !555)
!2463 = !{!"0x100\00ln\002304\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [ln] [line 2304]
!2464 = !MDLocation(line: 2304, column: 18, scope: !555)
!2465 = !{!"0x100\00s\002305\000", !555, !538, !39} ; [ DW_TAG_auto_variable ] [s] [line 2305]
!2466 = !MDLocation(line: 2305, column: 20, scope: !555)
!2467 = !{!"0x100\00locinput\002306\000", !555, !538, !39} ; [ DW_TAG_auto_variable ] [locinput] [line 2306]
!2468 = !MDLocation(line: 2306, column: 20, scope: !555)
!2469 = !MDLocation(line: 2306, column: 31, scope: !555)
!2470 = !{!"0x100\00c1\002307\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [c1] [line 2307]
!2471 = !MDLocation(line: 2307, column: 18, scope: !555)
!2472 = !{!"0x100\00c2\002307\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [c2] [line 2307]
!2473 = !MDLocation(line: 2307, column: 26, scope: !555)
!2474 = !{!"0x100\00paren\002307\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [paren] [line 2307]
!2475 = !MDLocation(line: 2307, column: 34, scope: !555)
!2476 = !{!"0x100\00minmod\002308\000", !555, !538, !86} ; [ DW_TAG_auto_variable ] [minmod] [line 2308]
!2477 = !MDLocation(line: 2308, column: 9, scope: !555)
!2478 = !{!"0x100\00sw\002308\000", !555, !538, !86} ; [ DW_TAG_auto_variable ] [sw] [line 2308]
!2479 = !MDLocation(line: 2308, column: 21, scope: !555)
!2480 = !{!"0x100\00logical\002308\000", !555, !538, !86} ; [ DW_TAG_auto_variable ] [logical] [line 2308]
!2481 = !MDLocation(line: 2308, column: 29, scope: !555)
!2482 = !{!"0x100\00unwind\002309\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [unwind] [line 2309]
!2483 = !MDLocation(line: 2309, column: 9, scope: !555)
!2484 = !{!"0x100\00do_utf8\002313\000", !555, !538, !40} ; [ DW_TAG_auto_variable ] [do_utf8] [line 2313]
!2485 = !MDLocation(line: 2313, column: 19, scope: !555)
!2486 = !MDLocation(line: 2313, column: 29, scope: !555)
!2487 = !MDLocation(line: 2325, column: 15, scope: !555)
!2488 = !MDLocation(line: 2325, column: 5, scope: !555)
!2489 = !MDLocation(line: 2326, column: 12, scope: !555)
!2490 = !MDLocation(line: 2326, column: 5, scope: !555)
!2491 = !MDLocation(line: 2327, column: 5, scope: !555)
!2492 = !MDLocation(line: 2327, column: 12, scope: !2493)
!2493 = !{!"0xb\002", !1, !2494}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2494 = !{!"0xb\001", !1, !555}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2495 = !MDLocation(line: 2394, column: 9, scope: !2496)
!2496 = !{!"0xb\002327\0026\00230", !1, !555}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2497 = !MDLocation(line: 2394, column: 16, scope: !2496)
!2498 = !MDLocation(line: 2394, column: 2, scope: !2496)
!2499 = !MDLocation(line: 2395, column: 6, scope: !2500)
!2500 = !{!"0xb\002395\006\00231", !1, !2496}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2501 = !MDLocation(line: 2395, column: 14, scope: !2500)
!2502 = !MDLocation(line: 2395, column: 6, scope: !2496)
!2503 = !MDLocation(line: 2396, column: 6, scope: !2500)
!2504 = !MDLocation(line: 2398, column: 10, scope: !2496)
!2505 = !MDLocation(line: 2398, column: 2, scope: !2496)
!2506 = !MDLocation(line: 2400, column: 10, scope: !2507)
!2507 = !{!"0xb\002400\0010\00233", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2508 = !{!"0xb\002398\0020\00232", !1, !2496}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2509 = !MDLocation(line: 2400, column: 22, scope: !2507)
!2510 = !MDLocation(line: 2400, column: 10, scope: !2508)
!2511 = !MDLocation(line: 2400, column: 35, scope: !2512)
!2512 = !{!"0xb\001", !1, !2507}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2513 = !MDLocation(line: 2401, column: 4, scope: !2507)
!2514 = !MDLocation(line: 2401, column: 15, scope: !2507)
!2515 = !MDLocation(line: 2401, column: 26, scope: !2507)
!2516 = !MDLocation(line: 2401, column: 40, scope: !2507)
!2517 = !MDLocation(line: 2404, column: 3, scope: !2518)
!2518 = !{!"0xb\002402\006\00234", !1, !2507}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2519 = !MDLocation(line: 2406, column: 6, scope: !2508)
!2520 = !MDLocation(line: 2408, column: 10, scope: !2521)
!2521 = !{!"0xb\002408\0010\00235", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2522 = !MDLocation(line: 2408, column: 22, scope: !2521)
!2523 = !MDLocation(line: 2408, column: 10, scope: !2508)
!2524 = !MDLocation(line: 2409, column: 5, scope: !2521)
!2525 = !MDLocation(line: 2409, column: 16, scope: !2521)
!2526 = !MDLocation(line: 2409, column: 27, scope: !2521)
!2527 = !MDLocation(line: 2409, column: 41, scope: !2521)
!2528 = !MDLocation(line: 2411, column: 3, scope: !2529)
!2529 = !{!"0xb\002410\006\00236", !1, !2521}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2530 = !MDLocation(line: 2413, column: 6, scope: !2508)
!2531 = !MDLocation(line: 2415, column: 10, scope: !2532)
!2532 = !{!"0xb\002415\0010\00237", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2533 = !MDLocation(line: 2415, column: 22, scope: !2532)
!2534 = !MDLocation(line: 2415, column: 10, scope: !2508)
!2535 = !MDLocation(line: 2416, column: 3, scope: !2532)
!2536 = !MDLocation(line: 2417, column: 6, scope: !2508)
!2537 = !MDLocation(line: 2419, column: 10, scope: !2538)
!2538 = !{!"0xb\002419\0010\00238", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2539 = !MDLocation(line: 2419, column: 22, scope: !2538)
!2540 = !MDLocation(line: 2419, column: 10, scope: !2508)
!2541 = !MDLocation(line: 2420, column: 3, scope: !2538)
!2542 = !MDLocation(line: 2421, column: 6, scope: !2508)
!2543 = !MDLocation(line: 2423, column: 10, scope: !2544)
!2544 = !{!"0xb\002423\0010\00239", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2545 = !MDLocation(line: 2423, column: 10, scope: !2508)
!2546 = !MDLocation(line: 2424, column: 3, scope: !2544)
!2547 = !MDLocation(line: 2426, column: 3, scope: !2544)
!2548 = !MDLocation(line: 2429, column: 11, scope: !2549)
!2549 = !{!"0xb\002429\0010\00240", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2550 = !MDLocation(line: 2429, column: 10, scope: !2508)
!2551 = !MDLocation(line: 2429, column: 22, scope: !2552)
!2552 = !{!"0xb\002", !1, !2549}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2553 = !MDLocation(line: 2429, column: 33, scope: !2549)
!2554 = !MDLocation(line: 2429, column: 22, scope: !2549)
!2555 = !MDLocation(line: 2429, column: 47, scope: !2556)
!2556 = !{!"0xb\003", !1, !2557}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2557 = !{!"0xb\001", !1, !2549}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2558 = !MDLocation(line: 2430, column: 3, scope: !2549)
!2559 = !MDLocation(line: 2431, column: 6, scope: !2508)
!2560 = !MDLocation(line: 2434, column: 11, scope: !2561)
!2561 = !{!"0xb\002434\0010\00241", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2562 = !MDLocation(line: 2434, column: 10, scope: !2508)
!2563 = !MDLocation(line: 2434, column: 22, scope: !2564)
!2564 = !{!"0xb\002", !1, !2561}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2565 = !MDLocation(line: 2434, column: 33, scope: !2561)
!2566 = !MDLocation(line: 2434, column: 22, scope: !2561)
!2567 = !MDLocation(line: 2434, column: 47, scope: !2568)
!2568 = !{!"0xb\003", !1, !2569}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2569 = !{!"0xb\001", !1, !2561}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2570 = !MDLocation(line: 2435, column: 3, scope: !2561)
!2571 = !MDLocation(line: 2436, column: 10, scope: !2572)
!2572 = !{!"0xb\002436\0010\00242", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2573 = !MDLocation(line: 2436, column: 22, scope: !2572)
!2574 = !MDLocation(line: 2436, column: 10, scope: !2508)
!2575 = !MDLocation(line: 2437, column: 3, scope: !2572)
!2576 = !MDLocation(line: 2438, column: 6, scope: !2508)
!2577 = !MDLocation(line: 2440, column: 10, scope: !2578)
!2578 = !{!"0xb\002440\0010\00243", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2579 = !MDLocation(line: 2440, column: 23, scope: !2578)
!2580 = !MDLocation(line: 2440, column: 10, scope: !2508)
!2581 = !MDLocation(line: 2441, column: 3, scope: !2578)
!2582 = !MDLocation(line: 2442, column: 6, scope: !2508)
!2583 = !MDLocation(line: 2444, column: 11, scope: !2584)
!2584 = !{!"0xb\002444\0010\00244", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2585 = !MDLocation(line: 2444, column: 10, scope: !2508)
!2586 = !MDLocation(line: 2444, column: 22, scope: !2587)
!2587 = !{!"0xb\001", !1, !2584}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2588 = !MDLocation(line: 2444, column: 34, scope: !2584)
!2589 = !MDLocation(line: 2444, column: 22, scope: !2584)
!2590 = !MDLocation(line: 2445, column: 3, scope: !2584)
!2591 = !MDLocation(line: 2446, column: 11, scope: !2592)
!2592 = !{!"0xb\002446\0011\00245", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2593 = !MDLocation(line: 2446, column: 11, scope: !2508)
!2594 = !MDLocation(line: 2447, column: 34, scope: !2595)
!2595 = !{!"0xb\002446\0020\00246", !1, !2592}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2596 = !MDLocation(line: 2447, column: 22, scope: !2595)
!2597 = !MDLocation(line: 2447, column: 10, scope: !2595)
!2598 = !MDLocation(line: 2448, column: 7, scope: !2599)
!2599 = !{!"0xb\002448\007\00247", !1, !2595}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2600 = !MDLocation(line: 2448, column: 18, scope: !2599)
!2601 = !MDLocation(line: 2448, column: 7, scope: !2595)
!2602 = !MDLocation(line: 2449, column: 8, scope: !2599)
!2603 = !MDLocation(line: 2450, column: 14, scope: !2595)
!2604 = !MDLocation(line: 2450, column: 4, scope: !2595)
!2605 = !MDLocation(line: 2451, column: 7, scope: !2595)
!2606 = !MDLocation(line: 2453, column: 14, scope: !2592)
!2607 = !MDLocation(line: 2453, column: 4, scope: !2592)
!2608 = !MDLocation(line: 2454, column: 6, scope: !2508)
!2609 = !MDLocation(line: 2456, column: 11, scope: !2610)
!2610 = !{!"0xb\002456\0010\00248", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2611 = !MDLocation(line: 2456, column: 10, scope: !2508)
!2612 = !MDLocation(line: 2456, column: 22, scope: !2613)
!2613 = !{!"0xb\001", !1, !2610}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2614 = !MDLocation(line: 2456, column: 34, scope: !2610)
!2615 = !MDLocation(line: 2456, column: 22, scope: !2610)
!2616 = !MDLocation(line: 2457, column: 3, scope: !2610)
!2617 = !MDLocation(line: 2458, column: 16, scope: !2508)
!2618 = !MDLocation(line: 2458, column: 6, scope: !2508)
!2619 = !MDLocation(line: 2459, column: 6, scope: !2508)
!2620 = !MDLocation(line: 2461, column: 12, scope: !2621)
!2621 = !{!"0xb\002461\0010\00249", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2622 = !MDLocation(line: 2461, column: 10, scope: !2508)
!2623 = !MDLocation(line: 2461, column: 23, scope: !2624)
!2624 = !{!"0xb\002", !1, !2621}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2625 = !MDLocation(line: 2461, column: 35, scope: !2621)
!2626 = !MDLocation(line: 2461, column: 23, scope: !2621)
!2627 = !MDLocation(line: 2461, column: 49, scope: !2628)
!2628 = !{!"0xb\003", !1, !2629}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2629 = !{!"0xb\001", !1, !2621}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2630 = !MDLocation(line: 2462, column: 3, scope: !2621)
!2631 = !MDLocation(line: 2463, column: 10, scope: !2632)
!2632 = !{!"0xb\002463\0010\00250", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2633 = !MDLocation(line: 2463, column: 10, scope: !2508)
!2634 = !MDLocation(line: 2464, column: 27, scope: !2635)
!2635 = !{!"0xb\002463\0019\00251", !1, !2632}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2636 = !MDLocation(line: 2464, column: 15, scope: !2635)
!2637 = !MDLocation(line: 2464, column: 3, scope: !2635)
!2638 = !MDLocation(line: 2465, column: 7, scope: !2639)
!2639 = !{!"0xb\002465\007\00252", !1, !2635}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2640 = !MDLocation(line: 2465, column: 18, scope: !2639)
!2641 = !MDLocation(line: 2465, column: 7, scope: !2635)
!2642 = !MDLocation(line: 2466, column: 7, scope: !2639)
!2643 = !MDLocation(line: 2467, column: 13, scope: !2635)
!2644 = !MDLocation(line: 2467, column: 3, scope: !2635)
!2645 = !MDLocation(line: 2468, column: 6, scope: !2635)
!2646 = !MDLocation(line: 2470, column: 13, scope: !2632)
!2647 = !MDLocation(line: 2470, column: 3, scope: !2632)
!2648 = !MDLocation(line: 2471, column: 6, scope: !2508)
!2649 = !MDLocation(line: 2473, column: 10, scope: !2508)
!2650 = !MDLocation(line: 2473, column: 6, scope: !2508)
!2651 = !MDLocation(line: 2474, column: 11, scope: !2508)
!2652 = !MDLocation(line: 2474, column: 6, scope: !2508)
!2653 = !MDLocation(line: 2475, column: 10, scope: !2654)
!2654 = !{!"0xb\002475\0010\00253", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2655 = !MDLocation(line: 2475, column: 21, scope: !2654)
!2656 = !MDLocation(line: 2475, column: 10, scope: !2508)
!2657 = !{!"0x100\00l\002477\000", !2658, !538, !39} ; [ DW_TAG_auto_variable ] [l] [line 2477]
!2658 = !{!"0xb\002475\0026\00254", !1, !2654}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2659 = !MDLocation(line: 2477, column: 9, scope: !2658)
!2660 = !MDLocation(line: 2477, column: 13, scope: !2658)
!2661 = !{!"0x100\00e\002478\000", !2658, !538, !39} ; [ DW_TAG_auto_variable ] [e] [line 2478]
!2662 = !MDLocation(line: 2478, column: 9, scope: !2658)
!2663 = !MDLocation(line: 2478, column: 13, scope: !2658)
!2664 = !MDLocation(line: 2478, column: 17, scope: !2658)
!2665 = !{!"0x100\00ulen\002479\000", !2658, !538, !48} ; [ DW_TAG_auto_variable ] [ulen] [line 2479]
!2666 = !MDLocation(line: 2479, column: 10, scope: !2658)
!2667 = !MDLocation(line: 2481, column: 7, scope: !2668)
!2668 = !{!"0xb\002481\007\00255", !1, !2658}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2669 = !MDLocation(line: 2481, column: 7, scope: !2658)
!2670 = !MDLocation(line: 2483, column: 7, scope: !2671)
!2671 = !{!"0xb\002481\0016\00256", !1, !2668}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2672 = !MDLocation(line: 2483, column: 14, scope: !2673)
!2673 = !{!"0xb\002", !1, !2674}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2674 = !{!"0xb\001", !1, !2671}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2675 = !MDLocation(line: 2483, column: 18, scope: !2671)
!2676 = !MDLocation(line: 2483, column: 14, scope: !2671)
!2677 = !MDLocation(line: 2484, column: 8, scope: !2678)
!2678 = !{!"0xb\002484\008\00258", !1, !2679}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2679 = !{!"0xb\002483\0021\00257", !1, !2671}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2680 = !MDLocation(line: 2484, column: 13, scope: !2678)
!2681 = !MDLocation(line: 2484, column: 8, scope: !2679)
!2682 = !MDLocation(line: 2485, column: 9, scope: !2678)
!2683 = !MDLocation(line: 2486, column: 8, scope: !2684)
!2684 = !{!"0xb\002486\008\00259", !1, !2679}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2685 = !MDLocation(line: 2487, column: 28, scope: !2684)
!2686 = !MDLocation(line: 2488, column: 9, scope: !2684)
!2687 = !MDLocation(line: 2488, column: 9, scope: !2688)
!2688 = !{!"0xb\001", !1, !2684}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2689 = !MDLocation(line: 2488, column: 9, scope: !2690)
!2690 = !{!"0xb\003", !1, !2684}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2691 = !MDLocation(line: 2488, column: 9, scope: !2692)
!2692 = !{!"0xb\006", !1, !2684}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2693 = !MDLocation(line: 2488, column: 9, scope: !2694)
!2694 = !{!"0xb\008", !1, !2695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2695 = !{!"0xb\004", !1, !2696}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2696 = !{!"0xb\002", !1, !2684}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2697 = !MDLocation(line: 2488, column: 9, scope: !2698)
!2698 = !{!"0xb\009", !1, !2684}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2699 = !MDLocation(line: 2488, column: 9, scope: !2700)
!2700 = !{!"0xb\0010", !1, !2684}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2701 = !MDLocation(line: 2488, column: 9, scope: !2702)
!2702 = !{!"0xb\0011", !1, !2703}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2703 = !{!"0xb\007", !1, !2704}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2704 = !{!"0xb\005", !1, !2684}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2705 = !MDLocation(line: 2487, column: 8, scope: !2684)
!2706 = !MDLocation(line: 2486, column: 8, scope: !2679)
!2707 = !MDLocation(line: 2490, column: 9, scope: !2684)
!2708 = !MDLocation(line: 2491, column: 9, scope: !2679)
!2709 = !MDLocation(line: 2491, column: 4, scope: !2679)
!2710 = !MDLocation(line: 2492, column: 4, scope: !2679)
!2711 = !MDLocation(line: 2494, column: 3, scope: !2671)
!2712 = !MDLocation(line: 2497, column: 7, scope: !2713)
!2713 = !{!"0xb\002495\008\00260", !1, !2668}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2714 = !MDLocation(line: 2497, column: 14, scope: !2715)
!2715 = !{!"0xb\002", !1, !2716}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2716 = !{!"0xb\001", !1, !2713}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2717 = !MDLocation(line: 2497, column: 18, scope: !2713)
!2718 = !MDLocation(line: 2497, column: 14, scope: !2713)
!2719 = !MDLocation(line: 2498, column: 8, scope: !2720)
!2720 = !{!"0xb\002498\008\00262", !1, !2721}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2721 = !{!"0xb\002497\0021\00261", !1, !2713}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2722 = !MDLocation(line: 2498, column: 13, scope: !2720)
!2723 = !MDLocation(line: 2498, column: 8, scope: !2721)
!2724 = !MDLocation(line: 2499, column: 8, scope: !2720)
!2725 = !MDLocation(line: 2500, column: 8, scope: !2726)
!2726 = !{!"0xb\002500\008\00263", !1, !2721}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2727 = !MDLocation(line: 2501, column: 28, scope: !2726)
!2728 = !MDLocation(line: 2502, column: 9, scope: !2726)
!2729 = !MDLocation(line: 2502, column: 9, scope: !2730)
!2730 = !{!"0xb\001", !1, !2726}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2731 = !MDLocation(line: 2502, column: 9, scope: !2732)
!2732 = !{!"0xb\003", !1, !2726}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2733 = !MDLocation(line: 2502, column: 9, scope: !2734)
!2734 = !{!"0xb\006", !1, !2726}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2735 = !MDLocation(line: 2502, column: 9, scope: !2736)
!2736 = !{!"0xb\008", !1, !2737}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2737 = !{!"0xb\004", !1, !2738}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2738 = !{!"0xb\002", !1, !2726}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2739 = !MDLocation(line: 2502, column: 9, scope: !2740)
!2740 = !{!"0xb\009", !1, !2726}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2741 = !MDLocation(line: 2502, column: 9, scope: !2742)
!2742 = !{!"0xb\0010", !1, !2726}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2743 = !MDLocation(line: 2502, column: 9, scope: !2744)
!2744 = !{!"0xb\0011", !1, !2745}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2745 = !{!"0xb\007", !1, !2746}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2746 = !{!"0xb\005", !1, !2726}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2747 = !MDLocation(line: 2501, column: 8, scope: !2726)
!2748 = !MDLocation(line: 2500, column: 8, scope: !2721)
!2749 = !MDLocation(line: 2504, column: 8, scope: !2726)
!2750 = !MDLocation(line: 2505, column: 9, scope: !2721)
!2751 = !MDLocation(line: 2505, column: 4, scope: !2721)
!2752 = !MDLocation(line: 2506, column: 4, scope: !2721)
!2753 = !MDLocation(line: 2509, column: 14, scope: !2658)
!2754 = !MDLocation(line: 2509, column: 3, scope: !2658)
!2755 = !MDLocation(line: 2510, column: 13, scope: !2658)
!2756 = !MDLocation(line: 2510, column: 3, scope: !2658)
!2757 = !MDLocation(line: 2511, column: 3, scope: !2658)
!2758 = !MDLocation(line: 2515, column: 10, scope: !2759)
!2759 = !{!"0xb\002515\0010\00264", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2760 = !MDLocation(line: 2515, column: 24, scope: !2759)
!2761 = !MDLocation(line: 2515, column: 10, scope: !2508)
!2762 = !MDLocation(line: 2516, column: 3, scope: !2759)
!2763 = !MDLocation(line: 2517, column: 10, scope: !2764)
!2764 = !{!"0xb\002517\0010\00265", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2765 = !MDLocation(line: 2517, column: 22, scope: !2764)
!2766 = !MDLocation(line: 2517, column: 33, scope: !2764)
!2767 = !MDLocation(line: 2517, column: 10, scope: !2508)
!2768 = !MDLocation(line: 2518, column: 3, scope: !2764)
!2769 = !MDLocation(line: 2519, column: 10, scope: !2770)
!2770 = !{!"0xb\002519\0010\00266", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2771 = !MDLocation(line: 2519, column: 10, scope: !2508)
!2772 = !MDLocation(line: 2519, column: 20, scope: !2773)
!2773 = !{!"0xb\001", !1, !2770}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2774 = !MDLocation(line: 2520, column: 3, scope: !2770)
!2775 = !MDLocation(line: 2521, column: 18, scope: !2508)
!2776 = !MDLocation(line: 2521, column: 6, scope: !2508)
!2777 = !MDLocation(line: 2522, column: 16, scope: !2508)
!2778 = !MDLocation(line: 2522, column: 6, scope: !2508)
!2779 = !MDLocation(line: 2523, column: 6, scope: !2508)
!2780 = !MDLocation(line: 2525, column: 6, scope: !2508)
!2781 = !MDLocation(line: 2528, column: 10, scope: !2508)
!2782 = !MDLocation(line: 2528, column: 6, scope: !2508)
!2783 = !MDLocation(line: 2529, column: 11, scope: !2508)
!2784 = !MDLocation(line: 2529, column: 6, scope: !2508)
!2785 = !MDLocation(line: 2531, column: 10, scope: !2786)
!2786 = !{!"0xb\002531\0010\00267", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2787 = !MDLocation(line: 2531, column: 10, scope: !2508)
!2788 = !MDLocation(line: 2531, column: 21, scope: !2789)
!2789 = !{!"0xb\001", !1, !2786}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2790 = !{!"0x100\00l\002533\000", !2791, !538, !39} ; [ DW_TAG_auto_variable ] [l] [line 2533]
!2791 = !{!"0xb\002531\0026\00268", !1, !2786}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2792 = !MDLocation(line: 2533, column: 9, scope: !2791)
!2793 = !MDLocation(line: 2533, column: 13, scope: !2791)
!2794 = !{!"0x100\00e\002534\000", !2791, !538, !39} ; [ DW_TAG_auto_variable ] [e] [line 2534]
!2795 = !MDLocation(line: 2534, column: 9, scope: !2791)
!2796 = !MDLocation(line: 2534, column: 13, scope: !2791)
!2797 = !MDLocation(line: 2536, column: 18, scope: !2798)
!2798 = !{!"0xb\002536\007\00269", !1, !2791}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2799 = !MDLocation(line: 2536, column: 25, scope: !2798)
!2800 = !MDLocation(line: 2536, column: 35, scope: !2798)
!2801 = !MDLocation(line: 2536, column: 29, scope: !2798)
!2802 = !MDLocation(line: 2537, column: 11, scope: !2798)
!2803 = !MDLocation(line: 2537, column: 22, scope: !2798)
!2804 = !MDLocation(line: 2536, column: 7, scope: !2798)
!2805 = !MDLocation(line: 2536, column: 7, scope: !2791)
!2806 = !MDLocation(line: 2542, column: 14, scope: !2807)
!2807 = !{!"0xb\002542\0012\00271", !1, !2808}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2808 = !{!"0xb\002537\0032\00270", !1, !2798}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2809 = !MDLocation(line: 2542, column: 12, scope: !2808)
!2810 = !MDLocation(line: 2543, column: 7, scope: !2807)
!2811 = !MDLocation(line: 2543, column: 7, scope: !2812)
!2812 = !{!"0xb\001", !1, !2807}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2813 = !MDLocation(line: 2543, column: 7, scope: !2814)
!2814 = !{!"0xb\003", !1, !2807}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2815 = !MDLocation(line: 2543, column: 7, scope: !2816)
!2816 = !{!"0xb\004", !1, !2817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2817 = !{!"0xb\002", !1, !2807}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2818 = !MDLocation(line: 2543, column: 7, scope: !2819)
!2819 = !{!"0xb\006", !1, !2820}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2820 = !{!"0xb\005", !1, !2807}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2821 = !MDLocation(line: 2544, column: 7, scope: !2807)
!2822 = !MDLocation(line: 2545, column: 7, scope: !2807)
!2823 = !MDLocation(line: 2545, column: 7, scope: !2812)
!2824 = !MDLocation(line: 2545, column: 7, scope: !2814)
!2825 = !MDLocation(line: 2545, column: 7, scope: !2816)
!2826 = !MDLocation(line: 2545, column: 7, scope: !2819)
!2827 = !MDLocation(line: 2546, column: 11, scope: !2807)
!2828 = !MDLocation(line: 2546, column: 7, scope: !2807)
!2829 = !MDLocation(line: 2547, column: 7, scope: !2807)
!2830 = !MDLocation(line: 2547, column: 11, scope: !2807)
!2831 = !MDLocation(line: 2548, column: 11, scope: !2807)
!2832 = !MDLocation(line: 2548, column: 7, scope: !2807)
!2833 = !MDLocation(line: 2549, column: 6, scope: !2807)
!2834 = !MDLocation(line: 2550, column: 3, scope: !2808)
!2835 = !MDLocation(line: 2551, column: 14, scope: !2791)
!2836 = !MDLocation(line: 2551, column: 3, scope: !2791)
!2837 = !MDLocation(line: 2552, column: 13, scope: !2791)
!2838 = !MDLocation(line: 2552, column: 3, scope: !2791)
!2839 = !MDLocation(line: 2553, column: 3, scope: !2791)
!2840 = !MDLocation(line: 2559, column: 10, scope: !2841)
!2841 = !{!"0xb\002559\0010\00272", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2842 = !MDLocation(line: 2559, column: 24, scope: !2841)
!2843 = !MDLocation(line: 2559, column: 10, scope: !2508)
!2844 = !MDLocation(line: 2560, column: 3, scope: !2841)
!2845 = !MDLocation(line: 2561, column: 39, scope: !2841)
!2846 = !MDLocation(line: 2560, column: 17, scope: !2841)
!2847 = !MDLocation(line: 2560, column: 19, scope: !2841)
!2848 = !MDLocation(line: 2560, column: 18, scope: !2841)
!2849 = !MDLocation(line: 2562, column: 3, scope: !2841)
!2850 = !MDLocation(line: 2563, column: 10, scope: !2851)
!2851 = !{!"0xb\002563\0010\00273", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2852 = !MDLocation(line: 2563, column: 22, scope: !2851)
!2853 = !MDLocation(line: 2563, column: 33, scope: !2851)
!2854 = !MDLocation(line: 2563, column: 10, scope: !2508)
!2855 = !MDLocation(line: 2564, column: 3, scope: !2851)
!2856 = !MDLocation(line: 2565, column: 10, scope: !2857)
!2857 = !{!"0xb\002565\0010\00274", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2858 = !MDLocation(line: 2565, column: 10, scope: !2508)
!2859 = !MDLocation(line: 2565, column: 21, scope: !2860)
!2860 = !{!"0xb\001", !1, !2857}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2861 = !MDLocation(line: 2566, column: 15, scope: !2857)
!2862 = !MDLocation(line: 2566, column: 18, scope: !2857)
!2863 = !MDLocation(line: 2566, column: 28, scope: !2857)
!2864 = !MDLocation(line: 2566, column: 9, scope: !2857)
!2865 = !MDLocation(line: 2567, column: 22, scope: !2857)
!2866 = !MDLocation(line: 2567, column: 25, scope: !2857)
!2867 = !MDLocation(line: 2567, column: 35, scope: !2857)
!2868 = !MDLocation(line: 2567, column: 9, scope: !2857)
!2869 = !MDLocation(line: 2568, column: 3, scope: !2857)
!2870 = !MDLocation(line: 2569, column: 18, scope: !2508)
!2871 = !MDLocation(line: 2569, column: 6, scope: !2508)
!2872 = !MDLocation(line: 2570, column: 16, scope: !2508)
!2873 = !MDLocation(line: 2570, column: 6, scope: !2508)
!2874 = !MDLocation(line: 2571, column: 6, scope: !2508)
!2875 = !MDLocation(line: 2573, column: 10, scope: !2876)
!2876 = !{!"0xb\002573\0010\00275", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2877 = !MDLocation(line: 2573, column: 10, scope: !2508)
!2878 = !{!"0x100\00inclasslen\002574\000", !2879, !538, !48} ; [ DW_TAG_auto_variable ] [inclasslen] [line 2574]
!2879 = !{!"0xb\002573\0019\00276", !1, !2876}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2880 = !MDLocation(line: 2574, column: 17, scope: !2879)
!2881 = !MDLocation(line: 2574, column: 30, scope: !2879)
!2882 = !MDLocation(line: 2574, column: 42, scope: !2879)
!2883 = !MDLocation(line: 2576, column: 26, scope: !2884)
!2884 = !{!"0xb\002576\0014\00277", !1, !2879}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2885 = !MDLocation(line: 2576, column: 37, scope: !2884)
!2886 = !MDLocation(line: 2576, column: 60, scope: !2884)
!2887 = !MDLocation(line: 2576, column: 15, scope: !2884)
!2888 = !MDLocation(line: 2576, column: 14, scope: !2879)
!2889 = !MDLocation(line: 2577, column: 7, scope: !2884)
!2890 = !MDLocation(line: 2578, column: 7, scope: !2891)
!2891 = !{!"0xb\002578\007\00278", !1, !2879}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2892 = !MDLocation(line: 2578, column: 19, scope: !2891)
!2893 = !MDLocation(line: 2578, column: 7, scope: !2879)
!2894 = !MDLocation(line: 2579, column: 7, scope: !2891)
!2895 = !MDLocation(line: 2580, column: 15, scope: !2879)
!2896 = !MDLocation(line: 2580, column: 28, scope: !2897)
!2897 = !{!"0xb\001", !1, !2879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2898 = !MDLocation(line: 2580, column: 41, scope: !2899)
!2899 = !{!"0xb\002", !1, !2879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2900 = !MDLocation(line: 2580, column: 3, scope: !2901)
!2901 = !{!"0xb\004", !1, !2902}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2902 = !{!"0xb\003", !1, !2879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2903 = !MDLocation(line: 2581, column: 13, scope: !2879)
!2904 = !MDLocation(line: 2581, column: 3, scope: !2879)
!2905 = !MDLocation(line: 2582, column: 3, scope: !2879)
!2906 = !MDLocation(line: 2585, column: 7, scope: !2907)
!2907 = !{!"0xb\002585\007\00280", !1, !2908}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2908 = !{!"0xb\002584\0011\00279", !1, !2876}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2909 = !MDLocation(line: 2585, column: 7, scope: !2908)
!2910 = !MDLocation(line: 2586, column: 17, scope: !2907)
!2911 = !MDLocation(line: 2586, column: 7, scope: !2907)
!2912 = !MDLocation(line: 2587, column: 8, scope: !2913)
!2913 = !{!"0xb\002587\007\00281", !1, !2908}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2914 = !MDLocation(line: 2587, column: 7, scope: !2908)
!2915 = !MDLocation(line: 2587, column: 8, scope: !2916)
!2916 = !{!"0xb\001", !1, !2913}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2917 = !MDLocation(line: 2587, column: 8, scope: !2918)
!2918 = !{!"0xb\002", !1, !2913}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2919 = !MDLocation(line: 2588, column: 7, scope: !2913)
!2920 = !MDLocation(line: 2589, column: 8, scope: !2921)
!2921 = !{!"0xb\002589\007\00282", !1, !2908}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2922 = !MDLocation(line: 2589, column: 7, scope: !2908)
!2923 = !MDLocation(line: 2589, column: 19, scope: !2924)
!2924 = !{!"0xb\001", !1, !2921}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2925 = !MDLocation(line: 2589, column: 31, scope: !2921)
!2926 = !MDLocation(line: 2589, column: 19, scope: !2921)
!2927 = !MDLocation(line: 2590, column: 7, scope: !2921)
!2928 = !MDLocation(line: 2591, column: 13, scope: !2908)
!2929 = !MDLocation(line: 2591, column: 3, scope: !2908)
!2930 = !MDLocation(line: 2592, column: 3, scope: !2908)
!2931 = !MDLocation(line: 2598, column: 10, scope: !2932)
!2932 = !{!"0xb\002598\0010\00283", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2933 = !MDLocation(line: 2598, column: 10, scope: !2508)
!2934 = !MDLocation(line: 2598, column: 10, scope: !2935)
!2935 = !{!"0xb\001", !1, !2932}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2936 = !MDLocation(line: 2598, column: 10, scope: !2937)
!2937 = !{!"0xb\002", !1, !2932}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2938 = !MDLocation(line: 2598, column: 10, scope: !2939)
!2939 = !{!"0xb\003", !1, !2932}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2940 = !MDLocation(line: 2598, column: 10, scope: !2941)
!2941 = !{!"0xb\004", !1, !2932}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2942 = !MDLocation(line: 2598, column: 10, scope: !2943)
!2943 = !{!"0xb\005", !1, !2932}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2944 = !MDLocation(line: 2598, column: 10, scope: !2945)
!2945 = !{!"0xb\007", !1, !2932}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2946 = !MDLocation(line: 2598, column: 10, scope: !2947)
!2947 = !{!"0xb\008", !1, !2948}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2948 = !{!"0xb\006", !1, !2932}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2949 = !MDLocation(line: 2598, column: 10, scope: !2950)
!2950 = !{!"0xb\0010", !1, !2951}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2951 = !{!"0xb\009", !1, !2932}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2952 = !MDLocation(line: 2598, column: 10, scope: !2953)
!2953 = !{!"0xb\0011", !1, !2932}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2954 = !MDLocation(line: 2598, column: 10, scope: !2955)
!2955 = !{!"0xb\0012", !1, !2932}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2956 = !MDLocation(line: 2598, column: 10, scope: !2957)
!2957 = !{!"0xb\0014", !1, !2932}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2958 = !MDLocation(line: 2598, column: 10, scope: !2959)
!2959 = !{!"0xb\0015", !1, !2960}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2960 = !{!"0xb\0013", !1, !2932}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2961 = !MDLocation(line: 2598, column: 10, scope: !2962)
!2962 = !{!"0xb\0017", !1, !2963}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2963 = !{!"0xb\0016", !1, !2932}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2964 = !MDLocation(line: 2599, column: 4, scope: !2965)
!2965 = !{!"0xb\002598\0057\00284", !1, !2932}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2966 = !MDLocation(line: 2600, column: 14, scope: !2965)
!2967 = !MDLocation(line: 2600, column: 4, scope: !2965)
!2968 = !MDLocation(line: 2601, column: 6, scope: !2965)
!2969 = !MDLocation(line: 2603, column: 4, scope: !2932)
!2970 = !MDLocation(line: 2604, column: 6, scope: !2508)
!2971 = !MDLocation(line: 2606, column: 6, scope: !2508)
!2972 = !MDLocation(line: 2609, column: 11, scope: !2973)
!2973 = !{!"0xb\002609\0010\00285", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2974 = !MDLocation(line: 2609, column: 10, scope: !2508)
!2975 = !MDLocation(line: 2610, column: 3, scope: !2973)
!2976 = !MDLocation(line: 2611, column: 10, scope: !2977)
!2977 = !{!"0xb\002611\0010\00286", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2978 = !MDLocation(line: 2611, column: 10, scope: !2508)
!2979 = !MDLocation(line: 2612, column: 3, scope: !2980)
!2980 = !{!"0xb\002612\003\00289", !1, !2981}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2981 = !{!"0xb\002612\003\00288", !1, !2982}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2982 = !{!"0xb\002611\0019\00287", !1, !2977}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2983 = !MDLocation(line: 2612, column: 3, scope: !2981)
!2984 = !MDLocation(line: 2612, column: 3, scope: !2985)
!2985 = !{!"0xb\001", !1, !2986}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2986 = !{!"0xb\002612\003\00290", !1, !2980}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2987 = !MDLocation(line: 2613, column: 9, scope: !2988)
!2988 = !{!"0xb\002613\007\00291", !1, !2982}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2989 = !MDLocation(line: 2613, column: 7, scope: !2982)
!2990 = !MDLocation(line: 2614, column: 23, scope: !2988)
!2991 = !MDLocation(line: 2614, column: 43, scope: !2988)
!2992 = !MDLocation(line: 2614, column: 53, scope: !2988)
!2993 = !MDLocation(line: 2614, column: 11, scope: !2988)
!2994 = !MDLocation(line: 2615, column: 11, scope: !2988)
!2995 = !MDLocation(line: 2615, column: 11, scope: !2996)
!2996 = !{!"0xb\001", !1, !2988}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2997 = !MDLocation(line: 2615, column: 11, scope: !2998)
!2998 = !{!"0xb\003", !1, !2988}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2999 = !MDLocation(line: 2615, column: 11, scope: !3000)
!3000 = !{!"0xb\005", !1, !2988}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3001 = !MDLocation(line: 2615, column: 11, scope: !3002)
!3002 = !{!"0xb\004", !1, !2988}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3003 = !MDLocation(line: 2615, column: 11, scope: !3004)
!3004 = !{!"0xb\002", !1, !2988}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3005 = !MDLocation(line: 2615, column: 11, scope: !3006)
!3006 = !{!"0xb\007", !1, !3007}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3007 = !{!"0xb\006", !1, !2988}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3008 = !MDLocation(line: 2617, column: 7, scope: !3009)
!3009 = !{!"0xb\002616\003\00292", !1, !2988}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3010 = !MDLocation(line: 2619, column: 27, scope: !2982)
!3011 = !MDLocation(line: 2619, column: 15, scope: !2982)
!3012 = !MDLocation(line: 2619, column: 3, scope: !2982)
!3013 = !MDLocation(line: 2620, column: 13, scope: !2982)
!3014 = !MDLocation(line: 2620, column: 3, scope: !2982)
!3015 = !MDLocation(line: 2621, column: 3, scope: !2982)
!3016 = !MDLocation(line: 2623, column: 12, scope: !3017)
!3017 = !{!"0xb\002623\0010\00293", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3018 = !MDLocation(line: 2623, column: 10, scope: !2508)
!3019 = !MDLocation(line: 2624, column: 7, scope: !3017)
!3020 = !MDLocation(line: 2624, column: 26, scope: !3017)
!3021 = !MDLocation(line: 2625, column: 3, scope: !3017)
!3022 = !MDLocation(line: 2626, column: 16, scope: !2508)
!3023 = !MDLocation(line: 2626, column: 6, scope: !2508)
!3024 = !MDLocation(line: 2627, column: 6, scope: !2508)
!3025 = !MDLocation(line: 2629, column: 6, scope: !2508)
!3026 = !MDLocation(line: 2632, column: 11, scope: !3027)
!3027 = !{!"0xb\002632\0010\00294", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3028 = !MDLocation(line: 2632, column: 10, scope: !2508)
!3029 = !MDLocation(line: 2632, column: 22, scope: !3030)
!3030 = !{!"0xb\001", !1, !3027}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3031 = !MDLocation(line: 2632, column: 34, scope: !3027)
!3032 = !MDLocation(line: 2632, column: 22, scope: !3027)
!3033 = !MDLocation(line: 2633, column: 3, scope: !3027)
!3034 = !MDLocation(line: 2634, column: 10, scope: !3035)
!3035 = !{!"0xb\002634\0010\00295", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3036 = !MDLocation(line: 2634, column: 10, scope: !2508)
!3037 = !MDLocation(line: 2635, column: 3, scope: !3038)
!3038 = !{!"0xb\002635\003\00298", !1, !3039}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3039 = !{!"0xb\002635\003\00297", !1, !3040}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3040 = !{!"0xb\002634\0019\00296", !1, !3035}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3041 = !MDLocation(line: 2635, column: 3, scope: !3039)
!3042 = !MDLocation(line: 2635, column: 3, scope: !3043)
!3043 = !{!"0xb\001", !1, !3044}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3044 = !{!"0xb\002635\003\00299", !1, !3038}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3045 = !MDLocation(line: 2636, column: 7, scope: !3046)
!3046 = !{!"0xb\002636\007\00300", !1, !3040}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3047 = !MDLocation(line: 2636, column: 7, scope: !3040)
!3048 = !MDLocation(line: 2637, column: 21, scope: !3046)
!3049 = !MDLocation(line: 2637, column: 41, scope: !3046)
!3050 = !MDLocation(line: 2637, column: 51, scope: !3046)
!3051 = !MDLocation(line: 2637, column: 9, scope: !3046)
!3052 = !MDLocation(line: 2638, column: 9, scope: !3046)
!3053 = !MDLocation(line: 2638, column: 9, scope: !3054)
!3054 = !{!"0xb\001", !1, !3046}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3055 = !MDLocation(line: 2638, column: 9, scope: !3056)
!3056 = !{!"0xb\003", !1, !3046}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3057 = !MDLocation(line: 2638, column: 9, scope: !3058)
!3058 = !{!"0xb\005", !1, !3046}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3059 = !MDLocation(line: 2638, column: 9, scope: !3060)
!3060 = !{!"0xb\004", !1, !3046}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3061 = !MDLocation(line: 2638, column: 9, scope: !3062)
!3062 = !{!"0xb\002", !1, !3046}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3063 = !MDLocation(line: 2638, column: 9, scope: !3064)
!3064 = !{!"0xb\007", !1, !3065}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3065 = !{!"0xb\006", !1, !3046}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3066 = !MDLocation(line: 2640, column: 7, scope: !3067)
!3067 = !{!"0xb\002639\003\00301", !1, !3046}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3068 = !MDLocation(line: 2642, column: 27, scope: !3040)
!3069 = !MDLocation(line: 2642, column: 15, scope: !3040)
!3070 = !MDLocation(line: 2642, column: 3, scope: !3040)
!3071 = !MDLocation(line: 2643, column: 13, scope: !3040)
!3072 = !MDLocation(line: 2643, column: 3, scope: !3040)
!3073 = !MDLocation(line: 2644, column: 3, scope: !3040)
!3074 = !MDLocation(line: 2646, column: 10, scope: !3075)
!3075 = !{!"0xb\002646\0010\00302", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3076 = !MDLocation(line: 2646, column: 10, scope: !2508)
!3077 = !MDLocation(line: 2647, column: 5, scope: !3075)
!3078 = !MDLocation(line: 2647, column: 24, scope: !3075)
!3079 = !MDLocation(line: 2648, column: 3, scope: !3075)
!3080 = !MDLocation(line: 2649, column: 16, scope: !2508)
!3081 = !MDLocation(line: 2649, column: 6, scope: !2508)
!3082 = !MDLocation(line: 2650, column: 6, scope: !2508)
!3083 = !MDLocation(line: 2653, column: 6, scope: !2508)
!3084 = !MDLocation(line: 2658, column: 10, scope: !3085)
!3085 = !{!"0xb\002658\0010\00303", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3086 = !MDLocation(line: 2658, column: 10, scope: !2508)
!3087 = !MDLocation(line: 2659, column: 7, scope: !3088)
!3088 = !{!"0xb\002659\007\00305", !1, !3089}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3089 = !{!"0xb\002658\0019\00304", !1, !3085}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3090 = !MDLocation(line: 2659, column: 19, scope: !3088)
!3091 = !MDLocation(line: 2659, column: 7, scope: !3089)
!3092 = !MDLocation(line: 2660, column: 7, scope: !3088)
!3093 = !{!"0x100\00r\002662\000", !3094, !538, !53} ; [ DW_TAG_auto_variable ] [r] [line 2662]
!3094 = !{!"0xb\002661\008\00306", !1, !3088}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3095 = !MDLocation(line: 2662, column: 11, scope: !3094)
!3096 = !MDLocation(line: 2662, column: 28, scope: !3094)
!3097 = !MDLocation(line: 2662, column: 47, scope: !3094)
!3098 = !MDLocation(line: 2662, column: 15, scope: !3094)
!3099 = !MDLocation(line: 2664, column: 27, scope: !3094)
!3100 = !MDLocation(line: 2664, column: 30, scope: !3094)
!3101 = !MDLocation(line: 2664, column: 12, scope: !3094)
!3102 = !MDLocation(line: 2664, column: 7, scope: !3094)
!3103 = !MDLocation(line: 2666, column: 7, scope: !3104)
!3104 = !{!"0xb\002666\007\00307", !1, !3089}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3105 = !MDLocation(line: 2666, column: 7, scope: !3089)
!3106 = !MDLocation(line: 2666, column: 28, scope: !3107)
!3107 = !{!"0xb\001", !1, !3104}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3108 = !MDLocation(line: 2667, column: 12, scope: !3109)
!3109 = !{!"0xb\002666\0048\00308", !1, !3104}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3110 = !MDLocation(line: 2667, column: 7, scope: !3109)
!3111 = !MDLocation(line: 2668, column: 7, scope: !3112)
!3112 = !{!"0xb\002668\007\00310", !1, !3113}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3113 = !{!"0xb\002668\007\00309", !1, !3109}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3114 = !MDLocation(line: 2668, column: 7, scope: !3113)
!3115 = !MDLocation(line: 2668, column: 7, scope: !3116)
!3116 = !{!"0xb\001", !1, !3117}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3117 = !{!"0xb\002668\007\00311", !1, !3112}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3118 = !MDLocation(line: 2669, column: 23, scope: !3109)
!3119 = !MDLocation(line: 2669, column: 43, scope: !3109)
!3120 = !MDLocation(line: 2669, column: 53, scope: !3109)
!3121 = !MDLocation(line: 2669, column: 11, scope: !3109)
!3122 = !MDLocation(line: 2669, column: 7, scope: !3109)
!3123 = !MDLocation(line: 2670, column: 3, scope: !3109)
!3124 = !MDLocation(line: 2672, column: 12, scope: !3125)
!3125 = !{!"0xb\002671\008\00312", !1, !3104}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3126 = !MDLocation(line: 2672, column: 12, scope: !3127)
!3127 = !{!"0xb\001", !1, !3125}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3128 = !MDLocation(line: 2672, column: 12, scope: !3129)
!3129 = !{!"0xb\003", !1, !3125}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3130 = !MDLocation(line: 2672, column: 12, scope: !3131)
!3131 = !{!"0xb\005", !1, !3125}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3132 = !MDLocation(line: 2672, column: 12, scope: !3133)
!3133 = !{!"0xb\004", !1, !3125}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3134 = !MDLocation(line: 2672, column: 12, scope: !3135)
!3135 = !{!"0xb\002", !1, !3125}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3136 = !MDLocation(line: 2672, column: 7, scope: !3137)
!3137 = !{!"0xb\007", !1, !3138}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3138 = !{!"0xb\006", !1, !3125}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3139 = !MDLocation(line: 2673, column: 11, scope: !3125)
!3140 = !MDLocation(line: 2673, column: 11, scope: !3127)
!3141 = !MDLocation(line: 2673, column: 11, scope: !3129)
!3142 = !MDLocation(line: 2673, column: 11, scope: !3131)
!3143 = !MDLocation(line: 2673, column: 11, scope: !3133)
!3144 = !MDLocation(line: 2673, column: 11, scope: !3135)
!3145 = !MDLocation(line: 2673, column: 7, scope: !3137)
!3146 = !MDLocation(line: 2675, column: 6, scope: !3089)
!3147 = !MDLocation(line: 2677, column: 9, scope: !3148)
!3148 = !{!"0xb\002676\0011\00313", !1, !3085}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3149 = !MDLocation(line: 2677, column: 21, scope: !3148)
!3150 = !MDLocation(line: 2677, column: 8, scope: !3148)
!3151 = !MDLocation(line: 2678, column: 7, scope: !3148)
!3152 = !MDLocation(line: 2677, column: 8, scope: !3153)
!3153 = !{!"0xb\001", !1, !3148}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3154 = !MDLocation(line: 2677, column: 3, scope: !3155)
!3155 = !{!"0xb\003", !1, !3156}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3156 = !{!"0xb\002", !1, !3148}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3157 = !MDLocation(line: 2679, column: 7, scope: !3158)
!3158 = !{!"0xb\002679\007\00314", !1, !3148}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3159 = !MDLocation(line: 2679, column: 7, scope: !3148)
!3160 = !MDLocation(line: 2679, column: 28, scope: !3161)
!3161 = !{!"0xb\001", !1, !3158}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3162 = !MDLocation(line: 2680, column: 12, scope: !3163)
!3163 = !{!"0xb\002679\0048\00315", !1, !3158}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3164 = !MDLocation(line: 2680, column: 12, scope: !3165)
!3165 = !{!"0xb\001", !1, !3163}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3166 = !MDLocation(line: 2680, column: 12, scope: !3167)
!3167 = !{!"0xb\004", !1, !3168}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3168 = !{!"0xb\002", !1, !3163}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3169 = !MDLocation(line: 2680, column: 12, scope: !3170)
!3170 = !{!"0xb\005", !1, !3163}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3171 = !MDLocation(line: 2680, column: 12, scope: !3172)
!3172 = !{!"0xb\008", !1, !3173}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3173 = !{!"0xb\006", !1, !3163}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3174 = !MDLocation(line: 2680, column: 12, scope: !3175)
!3175 = !{!"0xb\009", !1, !3163}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3176 = !MDLocation(line: 2680, column: 12, scope: !3177)
!3177 = !{!"0xb\0012", !1, !3178}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3178 = !{!"0xb\0010", !1, !3163}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3179 = !MDLocation(line: 2680, column: 12, scope: !3180)
!3180 = !{!"0xb\0013", !1, !3181}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3181 = !{!"0xb\0011", !1, !3182}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3182 = !{!"0xb\007", !1, !3183}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3183 = !{!"0xb\003", !1, !3163}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3184 = !MDLocation(line: 2680, column: 7, scope: !3163)
!3185 = !MDLocation(line: 2681, column: 11, scope: !3163)
!3186 = !MDLocation(line: 2681, column: 11, scope: !3165)
!3187 = !MDLocation(line: 2681, column: 11, scope: !3167)
!3188 = !MDLocation(line: 2681, column: 11, scope: !3170)
!3189 = !MDLocation(line: 2681, column: 11, scope: !3172)
!3190 = !MDLocation(line: 2681, column: 11, scope: !3175)
!3191 = !MDLocation(line: 2681, column: 11, scope: !3177)
!3192 = !MDLocation(line: 2681, column: 11, scope: !3180)
!3193 = !MDLocation(line: 2681, column: 7, scope: !3163)
!3194 = !MDLocation(line: 2682, column: 3, scope: !3163)
!3195 = !MDLocation(line: 2684, column: 12, scope: !3196)
!3196 = !{!"0xb\002683\008\00316", !1, !3158}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3197 = !MDLocation(line: 2684, column: 12, scope: !3198)
!3198 = !{!"0xb\001", !1, !3196}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3199 = !MDLocation(line: 2684, column: 12, scope: !3200)
!3200 = !{!"0xb\003", !1, !3196}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3201 = !MDLocation(line: 2684, column: 12, scope: !3202)
!3202 = !{!"0xb\002", !1, !3196}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3203 = !MDLocation(line: 2684, column: 7, scope: !3196)
!3204 = !MDLocation(line: 2685, column: 11, scope: !3196)
!3205 = !MDLocation(line: 2685, column: 11, scope: !3198)
!3206 = !MDLocation(line: 2685, column: 11, scope: !3200)
!3207 = !MDLocation(line: 2685, column: 11, scope: !3202)
!3208 = !MDLocation(line: 2685, column: 7, scope: !3196)
!3209 = !MDLocation(line: 2688, column: 13, scope: !3210)
!3210 = !{!"0xb\002688\0010\00317", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3211 = !MDLocation(line: 2688, column: 12, scope: !3210)
!3212 = !MDLocation(line: 2688, column: 22, scope: !3210)
!3213 = !MDLocation(line: 2688, column: 21, scope: !3210)
!3214 = !MDLocation(line: 2688, column: 11, scope: !3210)
!3215 = !MDLocation(line: 2688, column: 30, scope: !3210)
!3216 = !MDLocation(line: 2689, column: 9, scope: !3210)
!3217 = !MDLocation(line: 2688, column: 30, scope: !3218)
!3218 = !{!"0xb\002", !1, !3219}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3219 = !{!"0xb\001", !1, !3210}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3220 = !MDLocation(line: 2688, column: 10, scope: !3210)
!3221 = !MDLocation(line: 2688, column: 10, scope: !2508)
!3222 = !MDLocation(line: 2690, column: 7, scope: !3210)
!3223 = !MDLocation(line: 2691, column: 6, scope: !2508)
!3224 = !MDLocation(line: 2693, column: 6, scope: !2508)
!3225 = !MDLocation(line: 2696, column: 11, scope: !3226)
!3226 = !{!"0xb\002696\0010\00318", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3227 = !MDLocation(line: 2696, column: 10, scope: !2508)
!3228 = !MDLocation(line: 2697, column: 3, scope: !3226)
!3229 = !MDLocation(line: 2698, column: 10, scope: !3230)
!3230 = !{!"0xb\002698\0010\00319", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3231 = !MDLocation(line: 2698, column: 10, scope: !2508)
!3232 = !MDLocation(line: 2699, column: 7, scope: !3233)
!3233 = !{!"0xb\002699\007\00321", !1, !3234}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3234 = !{!"0xb\002698\0019\00320", !1, !3230}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3235 = !MDLocation(line: 2699, column: 7, scope: !3234)
!3236 = !MDLocation(line: 2700, column: 7, scope: !3237)
!3237 = !{!"0xb\002700\007\00324", !1, !3238}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3238 = !{!"0xb\002700\007\00323", !1, !3239}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3239 = !{!"0xb\002699\0035\00322", !1, !3233}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3240 = !MDLocation(line: 2700, column: 7, scope: !3238)
!3241 = !MDLocation(line: 2700, column: 7, scope: !3242)
!3242 = !{!"0xb\001", !1, !3243}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3243 = !{!"0xb\002700\007\00325", !1, !3237}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3244 = !MDLocation(line: 2701, column: 13, scope: !3245)
!3245 = !{!"0xb\002701\0011\00326", !1, !3239}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3246 = !MDLocation(line: 2701, column: 11, scope: !3239)
!3247 = !MDLocation(line: 2702, column: 20, scope: !3245)
!3248 = !MDLocation(line: 2702, column: 40, scope: !3245)
!3249 = !MDLocation(line: 2702, column: 50, scope: !3245)
!3250 = !MDLocation(line: 2702, column: 8, scope: !3245)
!3251 = !MDLocation(line: 2703, column: 8, scope: !3245)
!3252 = !MDLocation(line: 2703, column: 8, scope: !3253)
!3253 = !{!"0xb\001", !1, !3245}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3254 = !MDLocation(line: 2703, column: 8, scope: !3255)
!3255 = !{!"0xb\003", !1, !3245}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3256 = !MDLocation(line: 2703, column: 8, scope: !3257)
!3257 = !{!"0xb\004", !1, !3245}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3258 = !MDLocation(line: 2703, column: 8, scope: !3259)
!3259 = !{!"0xb\002", !1, !3245}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3260 = !MDLocation(line: 2703, column: 8, scope: !3261)
!3261 = !{!"0xb\006", !1, !3262}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3262 = !{!"0xb\005", !1, !3245}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3263 = !MDLocation(line: 2705, column: 4, scope: !3264)
!3264 = !{!"0xb\002704\007\00327", !1, !3245}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3265 = !MDLocation(line: 2707, column: 31, scope: !3239)
!3266 = !MDLocation(line: 2707, column: 19, scope: !3239)
!3267 = !MDLocation(line: 2707, column: 7, scope: !3239)
!3268 = !MDLocation(line: 2708, column: 17, scope: !3239)
!3269 = !MDLocation(line: 2708, column: 7, scope: !3239)
!3270 = !MDLocation(line: 2709, column: 7, scope: !3239)
!3271 = !MDLocation(line: 2711, column: 9, scope: !3272)
!3272 = !{!"0xb\002711\007\00328", !1, !3234}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3273 = !MDLocation(line: 2711, column: 7, scope: !3234)
!3274 = !MDLocation(line: 2712, column: 11, scope: !3272)
!3275 = !MDLocation(line: 2712, column: 30, scope: !3272)
!3276 = !MDLocation(line: 2713, column: 7, scope: !3272)
!3277 = !MDLocation(line: 2714, column: 13, scope: !3234)
!3278 = !MDLocation(line: 2714, column: 3, scope: !3234)
!3279 = !MDLocation(line: 2715, column: 6, scope: !3234)
!3280 = !MDLocation(line: 2717, column: 9, scope: !3281)
!3281 = !{!"0xb\002717\007\00330", !1, !3282}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3282 = !{!"0xb\002716\0011\00329", !1, !3230}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3283 = !MDLocation(line: 2717, column: 7, scope: !3282)
!3284 = !MDLocation(line: 2718, column: 11, scope: !3281)
!3285 = !MDLocation(line: 2718, column: 30, scope: !3281)
!3286 = !MDLocation(line: 2719, column: 7, scope: !3281)
!3287 = !MDLocation(line: 2720, column: 13, scope: !3282)
!3288 = !MDLocation(line: 2720, column: 3, scope: !3282)
!3289 = !MDLocation(line: 2722, column: 6, scope: !2508)
!3290 = !MDLocation(line: 2724, column: 6, scope: !2508)
!3291 = !MDLocation(line: 2727, column: 11, scope: !3292)
!3292 = !{!"0xb\002727\0010\00331", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3293 = !MDLocation(line: 2727, column: 10, scope: !2508)
!3294 = !MDLocation(line: 2727, column: 22, scope: !3295)
!3295 = !{!"0xb\001", !1, !3292}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3296 = !MDLocation(line: 2727, column: 34, scope: !3292)
!3297 = !MDLocation(line: 2727, column: 22, scope: !3292)
!3298 = !MDLocation(line: 2728, column: 3, scope: !3292)
!3299 = !MDLocation(line: 2729, column: 10, scope: !3300)
!3300 = !{!"0xb\002729\0010\00332", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3301 = !MDLocation(line: 2729, column: 10, scope: !2508)
!3302 = !MDLocation(line: 2730, column: 3, scope: !3303)
!3303 = !{!"0xb\002730\003\00335", !1, !3304}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3304 = !{!"0xb\002730\003\00334", !1, !3305}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3305 = !{!"0xb\002729\0019\00333", !1, !3300}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3306 = !MDLocation(line: 2730, column: 3, scope: !3304)
!3307 = !MDLocation(line: 2730, column: 3, scope: !3308)
!3308 = !{!"0xb\001", !1, !3309}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3309 = !{!"0xb\002730\003\00336", !1, !3303}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3310 = !MDLocation(line: 2731, column: 7, scope: !3311)
!3311 = !{!"0xb\002731\007\00337", !1, !3305}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3312 = !MDLocation(line: 2731, column: 7, scope: !3305)
!3313 = !MDLocation(line: 2732, column: 21, scope: !3311)
!3314 = !MDLocation(line: 2732, column: 41, scope: !3311)
!3315 = !MDLocation(line: 2732, column: 51, scope: !3311)
!3316 = !MDLocation(line: 2732, column: 9, scope: !3311)
!3317 = !MDLocation(line: 2733, column: 9, scope: !3311)
!3318 = !MDLocation(line: 2733, column: 9, scope: !3319)
!3319 = !{!"0xb\001", !1, !3311}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3320 = !MDLocation(line: 2733, column: 9, scope: !3321)
!3321 = !{!"0xb\003", !1, !3311}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3322 = !MDLocation(line: 2733, column: 9, scope: !3323)
!3323 = !{!"0xb\004", !1, !3311}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3324 = !MDLocation(line: 2733, column: 9, scope: !3325)
!3325 = !{!"0xb\002", !1, !3311}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3326 = !MDLocation(line: 2733, column: 9, scope: !3327)
!3327 = !{!"0xb\006", !1, !3328}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3328 = !{!"0xb\005", !1, !3311}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3329 = !MDLocation(line: 2735, column: 7, scope: !3330)
!3330 = !{!"0xb\002734\003\00338", !1, !3311}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3331 = !MDLocation(line: 2737, column: 27, scope: !3305)
!3332 = !MDLocation(line: 2737, column: 15, scope: !3305)
!3333 = !MDLocation(line: 2737, column: 3, scope: !3305)
!3334 = !MDLocation(line: 2738, column: 13, scope: !3305)
!3335 = !MDLocation(line: 2738, column: 3, scope: !3305)
!3336 = !MDLocation(line: 2739, column: 3, scope: !3305)
!3337 = !MDLocation(line: 2741, column: 10, scope: !3338)
!3338 = !{!"0xb\002741\0010\00339", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3339 = !MDLocation(line: 2741, column: 10, scope: !2508)
!3340 = !MDLocation(line: 2742, column: 5, scope: !3338)
!3341 = !MDLocation(line: 2742, column: 24, scope: !3338)
!3342 = !MDLocation(line: 2743, column: 3, scope: !3338)
!3343 = !MDLocation(line: 2744, column: 16, scope: !2508)
!3344 = !MDLocation(line: 2744, column: 6, scope: !2508)
!3345 = !MDLocation(line: 2745, column: 6, scope: !2508)
!3346 = !MDLocation(line: 2747, column: 6, scope: !2508)
!3347 = !MDLocation(line: 2750, column: 11, scope: !3348)
!3348 = !{!"0xb\002750\0010\00340", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3349 = !MDLocation(line: 2750, column: 10, scope: !2508)
!3350 = !MDLocation(line: 2751, column: 3, scope: !3348)
!3351 = !MDLocation(line: 2752, column: 10, scope: !3352)
!3352 = !{!"0xb\002752\0010\00341", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3353 = !MDLocation(line: 2752, column: 10, scope: !2508)
!3354 = !MDLocation(line: 2753, column: 3, scope: !3355)
!3355 = !{!"0xb\002753\003\00344", !1, !3356}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3356 = !{!"0xb\002753\003\00343", !1, !3357}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3357 = !{!"0xb\002752\0019\00342", !1, !3352}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3358 = !MDLocation(line: 2753, column: 3, scope: !3356)
!3359 = !MDLocation(line: 2753, column: 3, scope: !3360)
!3360 = !{!"0xb\001", !1, !3361}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3361 = !{!"0xb\002753\003\00345", !1, !3355}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3362 = !MDLocation(line: 2754, column: 9, scope: !3363)
!3363 = !{!"0xb\002754\007\00346", !1, !3357}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3364 = !MDLocation(line: 2754, column: 7, scope: !3357)
!3365 = !MDLocation(line: 2755, column: 23, scope: !3363)
!3366 = !MDLocation(line: 2755, column: 43, scope: !3363)
!3367 = !MDLocation(line: 2755, column: 53, scope: !3363)
!3368 = !MDLocation(line: 2755, column: 11, scope: !3363)
!3369 = !MDLocation(line: 2756, column: 11, scope: !3363)
!3370 = !MDLocation(line: 2756, column: 11, scope: !3371)
!3371 = !{!"0xb\001", !1, !3363}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3372 = !MDLocation(line: 2756, column: 11, scope: !3373)
!3373 = !{!"0xb\003", !1, !3363}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3374 = !MDLocation(line: 2756, column: 11, scope: !3375)
!3375 = !{!"0xb\004", !1, !3363}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3376 = !MDLocation(line: 2756, column: 11, scope: !3377)
!3377 = !{!"0xb\002", !1, !3363}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3378 = !MDLocation(line: 2756, column: 11, scope: !3379)
!3379 = !{!"0xb\006", !1, !3380}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3380 = !{!"0xb\005", !1, !3363}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3381 = !MDLocation(line: 2758, column: 7, scope: !3382)
!3382 = !{!"0xb\002757\003\00347", !1, !3363}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3383 = !MDLocation(line: 2760, column: 27, scope: !3357)
!3384 = !MDLocation(line: 2760, column: 15, scope: !3357)
!3385 = !MDLocation(line: 2760, column: 3, scope: !3357)
!3386 = !MDLocation(line: 2761, column: 13, scope: !3357)
!3387 = !MDLocation(line: 2761, column: 3, scope: !3357)
!3388 = !MDLocation(line: 2762, column: 3, scope: !3357)
!3389 = !MDLocation(line: 2764, column: 12, scope: !3390)
!3390 = !{!"0xb\002764\0010\00348", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3391 = !MDLocation(line: 2764, column: 10, scope: !2508)
!3392 = !MDLocation(line: 2765, column: 7, scope: !3390)
!3393 = !MDLocation(line: 2765, column: 26, scope: !3390)
!3394 = !MDLocation(line: 2766, column: 3, scope: !3390)
!3395 = !MDLocation(line: 2767, column: 16, scope: !2508)
!3396 = !MDLocation(line: 2767, column: 6, scope: !2508)
!3397 = !MDLocation(line: 2768, column: 6, scope: !2508)
!3398 = !MDLocation(line: 2770, column: 6, scope: !2508)
!3399 = !MDLocation(line: 2773, column: 11, scope: !3400)
!3400 = !{!"0xb\002773\0010\00349", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3401 = !MDLocation(line: 2773, column: 10, scope: !2508)
!3402 = !MDLocation(line: 2773, column: 22, scope: !3403)
!3403 = !{!"0xb\001", !1, !3400}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3404 = !MDLocation(line: 2773, column: 34, scope: !3400)
!3405 = !MDLocation(line: 2773, column: 22, scope: !3400)
!3406 = !MDLocation(line: 2774, column: 3, scope: !3400)
!3407 = !MDLocation(line: 2775, column: 10, scope: !3408)
!3408 = !{!"0xb\002775\0010\00350", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3409 = !MDLocation(line: 2775, column: 10, scope: !2508)
!3410 = !MDLocation(line: 2776, column: 3, scope: !3411)
!3411 = !{!"0xb\002776\003\00353", !1, !3412}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3412 = !{!"0xb\002776\003\00352", !1, !3413}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3413 = !{!"0xb\002775\0019\00351", !1, !3408}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3414 = !MDLocation(line: 2776, column: 3, scope: !3412)
!3415 = !MDLocation(line: 2776, column: 3, scope: !3416)
!3416 = !{!"0xb\001", !1, !3417}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3417 = !{!"0xb\002776\003\00354", !1, !3411}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3418 = !MDLocation(line: 2777, column: 7, scope: !3419)
!3419 = !{!"0xb\002777\007\00355", !1, !3413}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3420 = !MDLocation(line: 2777, column: 7, scope: !3413)
!3421 = !MDLocation(line: 2778, column: 21, scope: !3419)
!3422 = !MDLocation(line: 2778, column: 41, scope: !3419)
!3423 = !MDLocation(line: 2778, column: 51, scope: !3419)
!3424 = !MDLocation(line: 2778, column: 9, scope: !3419)
!3425 = !MDLocation(line: 2779, column: 9, scope: !3419)
!3426 = !MDLocation(line: 2779, column: 9, scope: !3427)
!3427 = !{!"0xb\001", !1, !3419}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3428 = !MDLocation(line: 2779, column: 9, scope: !3429)
!3429 = !{!"0xb\003", !1, !3419}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3430 = !MDLocation(line: 2779, column: 9, scope: !3431)
!3431 = !{!"0xb\004", !1, !3419}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3432 = !MDLocation(line: 2779, column: 9, scope: !3433)
!3433 = !{!"0xb\002", !1, !3419}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3434 = !MDLocation(line: 2779, column: 9, scope: !3435)
!3435 = !{!"0xb\006", !1, !3436}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3436 = !{!"0xb\005", !1, !3419}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3437 = !MDLocation(line: 2781, column: 7, scope: !3438)
!3438 = !{!"0xb\002780\003\00356", !1, !3419}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3439 = !MDLocation(line: 2783, column: 27, scope: !3413)
!3440 = !MDLocation(line: 2783, column: 15, scope: !3413)
!3441 = !MDLocation(line: 2783, column: 3, scope: !3413)
!3442 = !MDLocation(line: 2784, column: 13, scope: !3413)
!3443 = !MDLocation(line: 2784, column: 3, scope: !3413)
!3444 = !MDLocation(line: 2785, column: 3, scope: !3413)
!3445 = !MDLocation(line: 2787, column: 10, scope: !3446)
!3446 = !{!"0xb\002787\0010\00357", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3447 = !MDLocation(line: 2787, column: 10, scope: !2508)
!3448 = !MDLocation(line: 2788, column: 5, scope: !3446)
!3449 = !MDLocation(line: 2788, column: 24, scope: !3446)
!3450 = !MDLocation(line: 2789, column: 3, scope: !3446)
!3451 = !MDLocation(line: 2790, column: 16, scope: !2508)
!3452 = !MDLocation(line: 2790, column: 6, scope: !2508)
!3453 = !MDLocation(line: 2791, column: 6, scope: !2508)
!3454 = !MDLocation(line: 2793, column: 10, scope: !3455)
!3455 = !{!"0xb\002793\0010\00358", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3456 = !MDLocation(line: 2793, column: 22, scope: !3455)
!3457 = !MDLocation(line: 2793, column: 10, scope: !2508)
!3458 = !MDLocation(line: 2794, column: 3, scope: !3455)
!3459 = !MDLocation(line: 2795, column: 11, scope: !3460)
!3460 = !{!"0xb\002795\0011\00359", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3461 = !MDLocation(line: 2795, column: 11, scope: !2508)
!3462 = !MDLocation(line: 2796, column: 3, scope: !3463)
!3463 = !{!"0xb\002796\003\00362", !1, !3464}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3464 = !{!"0xb\002796\003\00361", !1, !3465}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3465 = !{!"0xb\002795\0020\00360", !1, !3460}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3466 = !MDLocation(line: 2796, column: 3, scope: !3464)
!3467 = !MDLocation(line: 2796, column: 3, scope: !3468)
!3468 = !{!"0xb\001", !1, !3469}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3469 = !{!"0xb\002796\003\00363", !1, !3463}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3470 = !MDLocation(line: 2797, column: 19, scope: !3471)
!3471 = !{!"0xb\002797\007\00364", !1, !3465}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3472 = !MDLocation(line: 2797, column: 37, scope: !3471)
!3473 = !MDLocation(line: 2797, column: 47, scope: !3471)
!3474 = !MDLocation(line: 2797, column: 7, scope: !3471)
!3475 = !MDLocation(line: 2797, column: 7, scope: !3465)
!3476 = !MDLocation(line: 2798, column: 7, scope: !3471)
!3477 = !MDLocation(line: 2799, column: 27, scope: !3465)
!3478 = !MDLocation(line: 2799, column: 15, scope: !3465)
!3479 = !MDLocation(line: 2799, column: 3, scope: !3465)
!3480 = !MDLocation(line: 2800, column: 3, scope: !3465)
!3481 = !MDLocation(line: 2800, column: 10, scope: !3482)
!3482 = !{!"0xb\003", !1, !3483}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3483 = !{!"0xb\001", !1, !3465}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3484 = !MDLocation(line: 2800, column: 21, scope: !3465)
!3485 = !MDLocation(line: 2800, column: 10, scope: !3465)
!3486 = !MDLocation(line: 2801, column: 22, scope: !3465)
!3487 = !MDLocation(line: 2801, column: 40, scope: !3465)
!3488 = !MDLocation(line: 2801, column: 50, scope: !3465)
!3489 = !MDLocation(line: 2801, column: 10, scope: !3465)
!3490 = !MDLocation(line: 2800, column: 3, scope: !3491)
!3491 = !{!"0xb\002", !1, !3465}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3492 = !MDLocation(line: 2802, column: 19, scope: !3465)
!3493 = !MDLocation(line: 2802, column: 7, scope: !3465)
!3494 = !MDLocation(line: 2803, column: 7, scope: !3495)
!3495 = !{!"0xb\002803\007\00365", !1, !3465}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3496 = !MDLocation(line: 2803, column: 18, scope: !3495)
!3497 = !MDLocation(line: 2803, column: 7, scope: !3465)
!3498 = !MDLocation(line: 2804, column: 7, scope: !3495)
!3499 = !MDLocation(line: 2805, column: 6, scope: !3465)
!3500 = !MDLocation(line: 2807, column: 9, scope: !3460)
!3501 = !MDLocation(line: 2808, column: 16, scope: !2508)
!3502 = !MDLocation(line: 2808, column: 6, scope: !2508)
!3503 = !MDLocation(line: 2809, column: 6, scope: !2508)
!3504 = !MDLocation(line: 2811, column: 6, scope: !2508)
!3505 = !MDLocation(line: 2815, column: 10, scope: !2508)
!3506 = !MDLocation(line: 2815, column: 6, scope: !2508)
!3507 = !MDLocation(line: 2816, column: 24, scope: !2508)
!3508 = !MDLocation(line: 2816, column: 11, scope: !2508)
!3509 = !MDLocation(line: 2816, column: 6, scope: !2508)
!3510 = !MDLocation(line: 2817, column: 24, scope: !2508)
!3511 = !MDLocation(line: 2817, column: 6, scope: !2508)
!3512 = !MDLocation(line: 2818, column: 16, scope: !3513)
!3513 = !{!"0xb\002818\0010\00366", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3514 = !MDLocation(line: 2818, column: 15, scope: !3513)
!3515 = !MDLocation(line: 2818, column: 34, scope: !3513)
!3516 = !MDLocation(line: 2818, column: 10, scope: !3513)
!3517 = !MDLocation(line: 2818, column: 10, scope: !2508)
!3518 = !MDLocation(line: 2818, column: 39, scope: !3519)
!3519 = !{!"0xb\001", !1, !3513}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3520 = !MDLocation(line: 2819, column: 3, scope: !3513)
!3521 = !MDLocation(line: 2820, column: 10, scope: !3522)
!3522 = !{!"0xb\002820\0010\00367", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3523 = !MDLocation(line: 2820, column: 27, scope: !3522)
!3524 = !MDLocation(line: 2820, column: 16, scope: !3522)
!3525 = !MDLocation(line: 2820, column: 10, scope: !2508)
!3526 = !MDLocation(line: 2821, column: 3, scope: !3522)
!3527 = !MDLocation(line: 2823, column: 10, scope: !2508)
!3528 = !MDLocation(line: 2823, column: 21, scope: !2508)
!3529 = !MDLocation(line: 2823, column: 6, scope: !2508)
!3530 = !MDLocation(line: 2824, column: 10, scope: !3531)
!3531 = !{!"0xb\002824\0010\00368", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3532 = !MDLocation(line: 2824, column: 10, scope: !2508)
!3533 = !MDLocation(line: 2824, column: 21, scope: !3534)
!3534 = !{!"0xb\001", !1, !3531}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3535 = !{!"0x100\00l\002825\000", !3536, !538, !39} ; [ DW_TAG_auto_variable ] [l] [line 2825]
!3536 = !{!"0xb\002824\0038\00369", !1, !3531}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3537 = !MDLocation(line: 2825, column: 9, scope: !3536)
!3538 = !MDLocation(line: 2825, column: 13, scope: !3536)
!3539 = !{!"0x100\00e\002826\000", !3536, !538, !39} ; [ DW_TAG_auto_variable ] [e] [line 2826]
!3540 = !MDLocation(line: 2826, column: 9, scope: !3536)
!3541 = !MDLocation(line: 2826, column: 13, scope: !3536)
!3542 = !MDLocation(line: 2826, column: 35, scope: !3536)
!3543 = !MDLocation(line: 2826, column: 24, scope: !3536)
!3544 = !MDLocation(line: 2832, column: 7, scope: !3545)
!3545 = !{!"0xb\002832\007\00370", !1, !3536}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3546 = !MDLocation(line: 2832, column: 7, scope: !3536)
!3547 = !{!"0x100\00ulen1\002833\000", !3548, !538, !48} ; [ DW_TAG_auto_variable ] [ulen1] [line 2833]
!3548 = !{!"0xb\002832\0025\00371", !1, !3545}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3549 = !MDLocation(line: 2833, column: 14, scope: !3548)
!3550 = !{!"0x100\00ulen2\002833\000", !3548, !538, !48} ; [ DW_TAG_auto_variable ] [ulen2] [line 2833]
!3551 = !MDLocation(line: 2833, column: 21, scope: !3548)
!3552 = !{!"0x100\00tmpbuf1\002834\000", !3548, !538, !3553} ; [ DW_TAG_auto_variable ] [tmpbuf1] [line 2834]
!3553 = !{!"0x1\00\000\0056\008\000\000\000", null, null, !54, !3554, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 56, align 8, offset 0] [from U8]
!3554 = !{!3555}
!3555 = !{!"0x21\000\007"}                        ; [ DW_TAG_subrange_type ] [0, 6]
!3556 = !MDLocation(line: 2834, column: 10, scope: !3548)
!3557 = !{!"0x100\00tmpbuf2\002835\000", !3548, !538, !3553} ; [ DW_TAG_auto_variable ] [tmpbuf2] [line 2835]
!3558 = !MDLocation(line: 2835, column: 10, scope: !3548)
!3559 = !MDLocation(line: 2836, column: 7, scope: !3548)
!3560 = !MDLocation(line: 2836, column: 14, scope: !3561)
!3561 = !{!"0xb\002", !1, !3562}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3562 = !{!"0xb\001", !1, !3548}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3563 = !MDLocation(line: 2836, column: 18, scope: !3548)
!3564 = !MDLocation(line: 2836, column: 14, scope: !3548)
!3565 = !MDLocation(line: 2837, column: 8, scope: !3566)
!3566 = !{!"0xb\002837\008\00373", !1, !3567}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3567 = !{!"0xb\002836\0021\00372", !1, !3548}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3568 = !MDLocation(line: 2837, column: 13, scope: !3566)
!3569 = !MDLocation(line: 2837, column: 8, scope: !3567)
!3570 = !MDLocation(line: 2838, column: 8, scope: !3566)
!3571 = !MDLocation(line: 2839, column: 4, scope: !3567)
!3572 = !MDLocation(line: 2840, column: 4, scope: !3567)
!3573 = !MDLocation(line: 2841, column: 8, scope: !3574)
!3574 = !{!"0xb\002841\008\00374", !1, !3567}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3575 = !MDLocation(line: 2841, column: 17, scope: !3574)
!3576 = !MDLocation(line: 2841, column: 8, scope: !3567)
!3577 = !MDLocation(line: 2841, column: 26, scope: !3578)
!3578 = !{!"0xb\001", !1, !3574}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3579 = !MDLocation(line: 2842, column: 8, scope: !3574)
!3580 = !MDLocation(line: 2843, column: 9, scope: !3567)
!3581 = !MDLocation(line: 2843, column: 4, scope: !3567)
!3582 = !MDLocation(line: 2844, column: 9, scope: !3567)
!3583 = !MDLocation(line: 2844, column: 4, scope: !3567)
!3584 = !MDLocation(line: 2846, column: 3, scope: !3548)
!3585 = !MDLocation(line: 2847, column: 14, scope: !3536)
!3586 = !MDLocation(line: 2847, column: 3, scope: !3536)
!3587 = !MDLocation(line: 2848, column: 13, scope: !3536)
!3588 = !MDLocation(line: 2848, column: 3, scope: !3536)
!3589 = !MDLocation(line: 2849, column: 3, scope: !3536)
!3590 = !MDLocation(line: 2853, column: 10, scope: !3591)
!3591 = !{!"0xb\002853\0010\00375", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3592 = !MDLocation(line: 2853, column: 24, scope: !3591)
!3593 = !MDLocation(line: 2853, column: 10, scope: !2508)
!3594 = !MDLocation(line: 2854, column: 4, scope: !3591)
!3595 = !MDLocation(line: 2855, column: 5, scope: !3591)
!3596 = !MDLocation(line: 2856, column: 35, scope: !3591)
!3597 = !MDLocation(line: 2855, column: 20, scope: !3591)
!3598 = !MDLocation(line: 2855, column: 21, scope: !3591)
!3599 = !MDLocation(line: 2855, column: 19, scope: !3591)
!3600 = !MDLocation(line: 2857, column: 3, scope: !3591)
!3601 = !MDLocation(line: 2858, column: 22, scope: !2508)
!3602 = !MDLocation(line: 2858, column: 11, scope: !2508)
!3603 = !MDLocation(line: 2858, column: 27, scope: !2508)
!3604 = !MDLocation(line: 2858, column: 6, scope: !2508)
!3605 = !MDLocation(line: 2859, column: 10, scope: !3606)
!3606 = !{!"0xb\002859\0010\00376", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3607 = !MDLocation(line: 2859, column: 21, scope: !3606)
!3608 = !MDLocation(line: 2859, column: 26, scope: !3606)
!3609 = !MDLocation(line: 2859, column: 10, scope: !2508)
!3610 = !MDLocation(line: 2860, column: 3, scope: !3606)
!3611 = !MDLocation(line: 2861, column: 10, scope: !3612)
!3612 = !{!"0xb\002861\0010\00377", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3613 = !MDLocation(line: 2861, column: 10, scope: !2508)
!3614 = !MDLocation(line: 2861, column: 21, scope: !3615)
!3615 = !{!"0xb\001", !1, !3612}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3616 = !MDLocation(line: 2862, column: 9, scope: !3612)
!3617 = !MDLocation(line: 2863, column: 10, scope: !3612)
!3618 = !MDLocation(line: 2864, column: 18, scope: !3612)
!3619 = !MDLocation(line: 2864, column: 21, scope: !3612)
!3620 = !MDLocation(line: 2864, column: 31, scope: !3612)
!3621 = !MDLocation(line: 2864, column: 12, scope: !3612)
!3622 = !MDLocation(line: 2865, column: 25, scope: !3612)
!3623 = !MDLocation(line: 2865, column: 28, scope: !3612)
!3624 = !MDLocation(line: 2865, column: 38, scope: !3612)
!3625 = !MDLocation(line: 2865, column: 12, scope: !3612)
!3626 = !MDLocation(line: 2866, column: 3, scope: !3612)
!3627 = !MDLocation(line: 2867, column: 18, scope: !2508)
!3628 = !MDLocation(line: 2867, column: 6, scope: !2508)
!3629 = !MDLocation(line: 2868, column: 16, scope: !2508)
!3630 = !MDLocation(line: 2868, column: 6, scope: !2508)
!3631 = !MDLocation(line: 2869, column: 6, scope: !2508)
!3632 = !MDLocation(line: 2873, column: 6, scope: !2508)
!3633 = !MDLocation(line: 2875, column: 6, scope: !2508)
!3634 = !{!"0x100\00sp\002878\000", !3635, !538, !276} ; [ DW_TAG_auto_variable ] [sp] [line 2878]
!3635 = !{!"0xb\002877\002\00378", !1, !2508}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3636 = !MDLocation(line: 2878, column: 6, scope: !3635)
!3637 = !{!"0x100\00oop\002879\000", !3635, !538, !475} ; [ DW_TAG_auto_variable ] [oop] [line 2879]
!3638 = !MDLocation(line: 2879, column: 16, scope: !3635)
!3639 = !MDLocation(line: 2879, column: 22, scope: !3635)
!3640 = !{!"0x100\00ocurcop\002880\000", !3635, !538, !3641} ; [ DW_TAG_auto_variable ] [ocurcop] [line 2880]
!3641 = !{!"0xf\00\000\0064\0064\000\000", null, null, !3642} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from COP]
!3642 = !{!"0x16\00COP\002006\000\000\000\000", !43, null, !3643} ; [ DW_TAG_typedef ] [COP] [line 2006, size 0, align 0, offset 0] [from cop]
!3643 = !{!"0x13\00cop\0016\00768\0064\000\000\000", !3644, null, null, !3645, null, null, null} ; [ DW_TAG_structure_type ] [cop] [line 16, size 768, align 64, offset 0] [def] [from ]
!3644 = !{!"./cop.h", !"/tmp/perlbench"}
!3645 = !{!3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661}
!3646 = !{!"0xd\00op_next\0017\0064\0064\000\000", !3644, !3643, !183} ; [ DW_TAG_member ] [op_next] [line 17, size 64, align 64, offset 0] [from ]
!3647 = !{!"0xd\00op_sibling\0017\0064\0064\0064\000", !3644, !3643, !183} ; [ DW_TAG_member ] [op_sibling] [line 17, size 64, align 64, offset 64] [from ]
!3648 = !{!"0xd\00op_ppaddr\0017\0064\0064\00128\000", !3644, !3643, !190} ; [ DW_TAG_member ] [op_ppaddr] [line 17, size 64, align 64, offset 128] [from ]
!3649 = !{!"0xd\00op_targ\0017\0064\0064\00192\000", !3644, !3643, !194} ; [ DW_TAG_member ] [op_targ] [line 17, size 64, align 64, offset 192] [from PADOFFSET]
!3650 = !{!"0xd\00op_type\0017\0016\0016\00256\000", !3644, !3643, !197} ; [ DW_TAG_member ] [op_type] [line 17, size 16, align 16, offset 256] [from U16]
!3651 = !{!"0xd\00op_seq\0017\0016\0016\00272\000", !3644, !3643, !197} ; [ DW_TAG_member ] [op_seq] [line 17, size 16, align 16, offset 272] [from U16]
!3652 = !{!"0xd\00op_flags\0017\008\008\00288\000", !3644, !3643, !54} ; [ DW_TAG_member ] [op_flags] [line 17, size 8, align 8, offset 288] [from U8]
!3653 = !{!"0xd\00op_private\0017\008\008\00296\000", !3644, !3643, !54} ; [ DW_TAG_member ] [op_private] [line 17, size 8, align 8, offset 296] [from U8]
!3654 = !{!"0xd\00cop_label\0018\0064\0064\00320\000", !3644, !3643, !39} ; [ DW_TAG_member ] [cop_label] [line 18, size 64, align 64, offset 320] [from ]
!3655 = !{!"0xd\00cop_stash\0023\0064\0064\00384\000", !3644, !3643, !139} ; [ DW_TAG_member ] [cop_stash] [line 23, size 64, align 64, offset 384] [from ]
!3656 = !{!"0xd\00cop_filegv\0024\0064\0064\00448\000", !3644, !3643, !365} ; [ DW_TAG_member ] [cop_filegv] [line 24, size 64, align 64, offset 448] [from ]
!3657 = !{!"0xd\00cop_seq\0026\0032\0032\00512\000", !3644, !3643, !93} ; [ DW_TAG_member ] [cop_seq] [line 26, size 32, align 32, offset 512] [from U32]
!3658 = !{!"0xd\00cop_arybase\0027\0032\0032\00544\000", !3644, !3643, !157} ; [ DW_TAG_member ] [cop_arybase] [line 27, size 32, align 32, offset 544] [from I32]
!3659 = !{!"0xd\00cop_line\0028\0032\0032\00576\000", !3644, !3643, !440} ; [ DW_TAG_member ] [cop_line] [line 28, size 32, align 32, offset 576] [from line_t]
!3660 = !{!"0xd\00cop_warnings\0029\0064\0064\00640\000", !3644, !3643, !87} ; [ DW_TAG_member ] [cop_warnings] [line 29, size 64, align 64, offset 640] [from ]
!3661 = !{!"0xd\00cop_io\0030\0064\0064\00704\000", !3644, !3643, !87} ; [ DW_TAG_member ] [cop_io] [line 30, size 64, align 64, offset 704] [from ]
!3662 = !MDLocation(line: 2880, column: 11, scope: !3635)
!3663 = !MDLocation(line: 2880, column: 21, scope: !3635)
!3664 = !{!"0x100\00old_comppad\002881\000", !3635, !538, !477} ; [ DW_TAG_auto_variable ] [old_comppad] [line 2881]
!3665 = !MDLocation(line: 2881, column: 11, scope: !3635)
!3666 = !{!"0x100\00ret\002882\000", !3635, !538, !87} ; [ DW_TAG_auto_variable ] [ret] [line 2882]
!3667 = !MDLocation(line: 2882, column: 10, scope: !3635)
!3668 = !{!"0x100\00oreg\002883\000", !3635, !538, !3669} ; [ DW_TAG_auto_variable ] [oreg] [line 2883]
!3669 = !{!"0xf\00\000\0064\0064\000\000", null, null, !217} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regexp]
!3670 = !MDLocation(line: 2883, column: 21, scope: !3635)
!3671 = !MDLocation(line: 2883, column: 28, scope: !3635)
!3672 = !MDLocation(line: 2885, column: 10, scope: !3635)
!3673 = !MDLocation(line: 2885, column: 6, scope: !3635)
!3674 = !MDLocation(line: 2886, column: 42, scope: !3635)
!3675 = !MDLocation(line: 2886, column: 25, scope: !3635)
!3676 = !MDLocation(line: 2886, column: 14, scope: !3635)
!3677 = !MDLocation(line: 2886, column: 6, scope: !3635)
!3678 = !MDLocation(line: 2888, column: 6, scope: !3635)
!3679 = !MDLocation(line: 2888, column: 6, scope: !3680)
!3680 = !{!"0xb\001", !1, !3635}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3681 = !MDLocation(line: 2888, column: 6, scope: !3682)
!3682 = !{!"0xb\002", !1, !3635}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3683 = !MDLocation(line: 2888, column: 6, scope: !3684)
!3684 = !{!"0xb\004", !1, !3685}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3685 = !{!"0xb\003", !1, !3635}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3686 = !MDLocation(line: 2889, column: 45, scope: !3635)
!3687 = !MDLocation(line: 2889, column: 56, scope: !3635)
!3688 = !MDLocation(line: 2889, column: 22, scope: !3635)
!3689 = !MDLocation(line: 2889, column: 6, scope: !3635)
!3690 = !{!"0x100\00before\002892\000", !3691, !538, !276} ; [ DW_TAG_auto_variable ] [before] [line 2892]
!3691 = !{!"0xb\002891\006\00379", !1, !3635}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3692 = !MDLocation(line: 2892, column: 8, scope: !3691)
!3693 = !MDLocation(line: 2892, column: 17, scope: !3691)
!3694 = !MDLocation(line: 2893, column: 3, scope: !3691)
!3695 = !MDLocation(line: 2894, column: 3, scope: !3691)
!3696 = !MDLocation(line: 2895, column: 7, scope: !3697)
!3697 = !{!"0xb\002895\007\00380", !1, !3691}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3698 = !MDLocation(line: 2895, column: 13, scope: !3697)
!3699 = !MDLocation(line: 2895, column: 7, scope: !3691)
!3700 = !MDLocation(line: 2896, column: 7, scope: !3697)
!3701 = !MDLocation(line: 2898, column: 13, scope: !3702)
!3702 = !{!"0xb\002897\008\00381", !1, !3697}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3703 = !MDLocation(line: 2898, column: 7, scope: !3702)
!3704 = !MDLocation(line: 2899, column: 7, scope: !3702)
!3705 = !MDLocation(line: 2903, column: 14, scope: !3635)
!3706 = !MDLocation(line: 2903, column: 6, scope: !3635)
!3707 = !MDLocation(line: 2904, column: 6, scope: !3635)
!3708 = !MDLocation(line: 2904, column: 6, scope: !3680)
!3709 = !MDLocation(line: 2904, column: 6, scope: !3682)
!3710 = !MDLocation(line: 2904, column: 6, scope: !3684)
!3711 = !MDLocation(line: 2905, column: 18, scope: !3635)
!3712 = !MDLocation(line: 2905, column: 6, scope: !3635)
!3713 = !MDLocation(line: 2906, column: 10, scope: !3714)
!3714 = !{!"0xb\002906\0010\00382", !1, !3635}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3715 = !MDLocation(line: 2906, column: 10, scope: !3635)
!3716 = !MDLocation(line: 2907, column: 7, scope: !3717)
!3717 = !{!"0xb\002907\007\00384", !1, !3718}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3718 = !{!"0xb\002906\0019\00383", !1, !3714}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3719 = !MDLocation(line: 2907, column: 7, scope: !3718)
!3720 = !{!"0x100\00re\002908\000", !3721, !538, !484} ; [ DW_TAG_auto_variable ] [re] [line 2908]
!3721 = !{!"0xb\002907\0021\00385", !1, !3717}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3722 = !MDLocation(line: 2908, column: 15, scope: !3721)
!3723 = !{!"0x100\00mg\002909\000", !3721, !538, !71} ; [ DW_TAG_auto_variable ] [mg] [line 2909]
!3724 = !MDLocation(line: 2909, column: 14, scope: !3721)
!3725 = !{!"0x100\00state\002910\000", !3721, !538, !3726} ; [ DW_TAG_auto_variable ] [state] [line 2910]
!3726 = !{!"0x16\00re_cc_state\00298\000\000\000\000", !1, null, !3727} ; [ DW_TAG_typedef ] [re_cc_state] [line 298, size 0, align 0, offset 0] [from re_cc_state]
!3727 = !{!"0x13\00re_cc_state\00291\00320\0064\000\000\000", !1, null, null, !3728, null, null, null} ; [ DW_TAG_structure_type ] [re_cc_state] [line 291, size 320, align 64, offset 0] [def] [from ]
!3728 = !{!3729, !3730, !3731, !3733, !3747}
!3729 = !{!"0xd\00ss\00293\0032\0032\000\000", !1, !3727, !157} ; [ DW_TAG_member ] [ss] [line 293, size 32, align 32, offset 0] [from I32]
!3730 = !{!"0xd\00node\00294\0064\0064\0064\000", !1, !3727, !224} ; [ DW_TAG_member ] [node] [line 294, size 64, align 64, offset 64] [from ]
!3731 = !{!"0xd\00prev\00295\0064\0064\00128\000", !1, !3727, !3732} ; [ DW_TAG_member ] [prev] [line 295, size 64, align 64, offset 128] [from ]
!3732 = !{!"0xf\00\000\0064\0064\000\000", null, null, !3727} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from re_cc_state]
!3733 = !{!"0xd\00cc\00296\0064\0064\00192\000", !1, !3727, !3734} ; [ DW_TAG_member ] [cc] [line 296, size 64, align 64, offset 192] [from ]
!3734 = !{!"0xf\00\000\0064\0064\000\000", null, null, !3735} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from CURCUR]
!3735 = !{!"0x16\00CURCUR\002616\000\000\000\000", !43, null, !3736} ; [ DW_TAG_typedef ] [CURCUR] [line 2616, size 0, align 0, offset 0] [from curcur]
!3736 = !{!"0x13\00curcur\002617\00448\0064\000\000\000", !43, null, null, !3737, null, null, null} ; [ DW_TAG_structure_type ] [curcur] [line 2617, size 448, align 64, offset 0] [def] [from ]
!3737 = !{!3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746}
!3738 = !{!"0xd\00parenfloor\002618\0032\0032\000\000", !43, !3736, !86} ; [ DW_TAG_member ] [parenfloor] [line 2618, size 32, align 32, offset 0] [from int]
!3739 = !{!"0xd\00cur\002619\0032\0032\0032\000", !43, !3736, !86} ; [ DW_TAG_member ] [cur] [line 2619, size 32, align 32, offset 32] [from int]
!3740 = !{!"0xd\00min\002620\0032\0032\0064\000", !43, !3736, !86} ; [ DW_TAG_member ] [min] [line 2620, size 32, align 32, offset 64] [from int]
!3741 = !{!"0xd\00max\002621\0032\0032\0096\000", !43, !3736, !86} ; [ DW_TAG_member ] [max] [line 2621, size 32, align 32, offset 96] [from int]
!3742 = !{!"0xd\00minmod\002622\0032\0032\00128\000", !43, !3736, !86} ; [ DW_TAG_member ] [minmod] [line 2622, size 32, align 32, offset 128] [from int]
!3743 = !{!"0xd\00scan\002623\0064\0064\00192\000", !43, !3736, !224} ; [ DW_TAG_member ] [scan] [line 2623, size 64, align 64, offset 192] [from ]
!3744 = !{!"0xd\00next\002624\0064\0064\00256\000", !43, !3736, !224} ; [ DW_TAG_member ] [next] [line 2624, size 64, align 64, offset 256] [from ]
!3745 = !{!"0xd\00lastloc\002625\0064\0064\00320\000", !43, !3736, !39} ; [ DW_TAG_member ] [lastloc] [line 2625, size 64, align 64, offset 320] [from ]
!3746 = !{!"0xd\00oldcc\002626\0064\0064\00384\000", !43, !3736, !3734} ; [ DW_TAG_member ] [oldcc] [line 2626, size 64, align 64, offset 384] [from ]
!3747 = !{!"0xd\00re\00297\0064\0064\00256\000", !1, !3727, !484} ; [ DW_TAG_member ] [re] [line 297, size 64, align 64, offset 256] [from ]
!3748 = !MDLocation(line: 2910, column: 19, scope: !3721)
!3749 = !{!"0x100\00cp\002911\000", !3721, !538, !518} ; [ DW_TAG_auto_variable ] [cp] [line 2911]
!3750 = !MDLocation(line: 2911, column: 18, scope: !3721)
!3751 = !{!"0x100\00lastcp\002911\000", !3721, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 2911]
!3752 = !MDLocation(line: 2911, column: 22, scope: !3721)
!3753 = !{!"0x100\00toggleutf\002912\000", !3721, !538, !86} ; [ DW_TAG_auto_variable ] [toggleutf] [line 2912]
!3754 = !MDLocation(line: 2912, column: 25, scope: !3721)
!3755 = !{!"0x100\00sv\002913\000", !3721, !538, !87} ; [ DW_TAG_auto_variable ] [sv] [line 2913]
!3756 = !MDLocation(line: 2913, column: 20, scope: !3721)
!3757 = !MDLocation(line: 2915, column: 10, scope: !3758)
!3758 = !{!"0xb\002915\0010\00386", !1, !3721}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3759 = !MDLocation(line: 2915, column: 10, scope: !3721)
!3760 = !MDLocation(line: 2915, column: 24, scope: !3761)
!3761 = !{!"0xb\001", !1, !3758}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3762 = !MDLocation(line: 2916, column: 17, scope: !3758)
!3763 = !MDLocation(line: 2916, column: 9, scope: !3758)
!3764 = !MDLocation(line: 2916, column: 4, scope: !3758)
!3765 = !MDLocation(line: 2917, column: 16, scope: !3766)
!3766 = !{!"0xb\002917\0016\00387", !1, !3758}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3767 = !MDLocation(line: 2917, column: 16, scope: !3758)
!3768 = !MDLocation(line: 2918, column: 8, scope: !3769)
!3769 = !{!"0xb\002918\008\00389", !1, !3770}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3770 = !{!"0xb\002917\0033\00388", !1, !3766}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3771 = !MDLocation(line: 2918, column: 8, scope: !3770)
!3772 = !MDLocation(line: 2919, column: 19, scope: !3769)
!3773 = !MDLocation(line: 2919, column: 8, scope: !3769)
!3774 = !MDLocation(line: 2921, column: 21, scope: !3769)
!3775 = !MDLocation(line: 2921, column: 13, scope: !3769)
!3776 = !MDLocation(line: 2921, column: 8, scope: !3769)
!3777 = !MDLocation(line: 2922, column: 7, scope: !3770)
!3778 = !MDLocation(line: 2924, column: 11, scope: !3779)
!3779 = !{!"0xb\002924\0011\00390", !1, !3721}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3780 = !MDLocation(line: 2924, column: 11, scope: !3721)
!3781 = !MDLocation(line: 2925, column: 19, scope: !3782)
!3782 = !{!"0xb\002924\0015\00391", !1, !3779}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3783 = !MDLocation(line: 2925, column: 9, scope: !3782)
!3784 = !MDLocation(line: 2925, column: 4, scope: !3782)
!3785 = !MDLocation(line: 2926, column: 10, scope: !3782)
!3786 = !MDLocation(line: 2926, column: 10, scope: !3787)
!3787 = !{!"0xb\001", !1, !3782}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3788 = !MDLocation(line: 2926, column: 10, scope: !3789)
!3789 = !{!"0xb\002", !1, !3782}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3790 = !MDLocation(line: 2927, column: 7, scope: !3782)
!3791 = !{!"0x100\00len\002929\000", !3792, !538, !48} ; [ DW_TAG_auto_variable ] [len] [line 2929]
!3792 = !{!"0xb\002928\0012\00392", !1, !3779}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3793 = !MDLocation(line: 2929, column: 11, scope: !3792)
!3794 = !{!"0x100\00t\002930\000", !3792, !538, !39} ; [ DW_TAG_auto_variable ] [t] [line 2930]
!3795 = !MDLocation(line: 2930, column: 10, scope: !3792)
!3796 = !MDLocation(line: 2930, column: 14, scope: !3792)
!3797 = !MDLocation(line: 2930, column: 14, scope: !3798)
!3798 = !{!"0xb\001", !1, !3792}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3799 = !MDLocation(line: 2930, column: 14, scope: !3800)
!3800 = !{!"0xb\002", !1, !3792}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3801 = !MDLocation(line: 2930, column: 10, scope: !3802)
!3802 = !{!"0xb\004", !1, !3803}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3803 = !{!"0xb\003", !1, !3792}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3804 = !{!"0x100\00pm\002931\000", !3792, !538, !178} ; [ DW_TAG_auto_variable ] [pm] [line 2931]
!3805 = !MDLocation(line: 2931, column: 9, scope: !3792)
!3806 = !{!"0x100\00oprecomp\002932\000", !3792, !538, !39} ; [ DW_TAG_auto_variable ] [oprecomp] [line 2932]
!3807 = !MDLocation(line: 2932, column: 10, scope: !3792)
!3808 = !MDLocation(line: 2932, column: 21, scope: !3792)
!3809 = !{!"0x100\00osize\002933\000", !3792, !538, !157} ; [ DW_TAG_auto_variable ] [osize] [line 2933]
!3810 = !MDLocation(line: 2933, column: 8, scope: !3792)
!3811 = !MDLocation(line: 2933, column: 16, scope: !3792)
!3812 = !{!"0x100\00onpar\002934\000", !3792, !538, !157} ; [ DW_TAG_auto_variable ] [onpar] [line 2934]
!3813 = !MDLocation(line: 2934, column: 8, scope: !3792)
!3814 = !MDLocation(line: 2934, column: 16, scope: !3792)
!3815 = !MDLocation(line: 2936, column: 4, scope: !3792)
!3816 = !MDLocation(line: 2937, column: 29, scope: !3817)
!3817 = !{!"0xb\002937\0029\00393", !1, !3792}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3818 = !MDLocation(line: 2937, column: 29, scope: !3792)
!3819 = !MDLocation(line: 2937, column: 29, scope: !3820)
!3820 = !{!"0xb\001", !1, !3817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3821 = !MDLocation(line: 2937, column: 43, scope: !3822)
!3822 = !{!"0xb\002", !1, !3817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3823 = !MDLocation(line: 2938, column: 9, scope: !3792)
!3824 = !MDLocation(line: 2938, column: 27, scope: !3792)
!3825 = !MDLocation(line: 2938, column: 30, scope: !3792)
!3826 = !MDLocation(line: 2938, column: 34, scope: !3792)
!3827 = !MDLocation(line: 2938, column: 4, scope: !3792)
!3828 = !MDLocation(line: 2939, column: 10, scope: !3829)
!3829 = !{!"0xb\002939\008\00394", !1, !3792}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3830 = !MDLocation(line: 2939, column: 8, scope: !3792)
!3831 = !MDLocation(line: 2942, column: 17, scope: !3829)
!3832 = !MDLocation(line: 2942, column: 26, scope: !3829)
!3833 = !MDLocation(line: 2942, column: 26, scope: !3834)
!3834 = !{!"0xb\001", !1, !3829}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3835 = !MDLocation(line: 2942, column: 26, scope: !3836)
!3836 = !{!"0xb\002", !1, !3829}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3837 = !MDLocation(line: 2942, column: 21, scope: !3829)
!3838 = !MDLocation(line: 2942, column: 8, scope: !3829)
!3839 = !MDLocation(line: 2944, column: 20, scope: !3792)
!3840 = !MDLocation(line: 2944, column: 4, scope: !3792)
!3841 = !MDLocation(line: 2945, column: 17, scope: !3792)
!3842 = !MDLocation(line: 2945, column: 4, scope: !3792)
!3843 = !MDLocation(line: 2946, column: 17, scope: !3792)
!3844 = !MDLocation(line: 2946, column: 4, scope: !3792)
!3845 = !MDLocation(line: 2956, column: 20, scope: !3721)
!3846 = !MDLocation(line: 2956, column: 7, scope: !3721)
!3847 = !MDLocation(line: 2957, column: 20, scope: !3721)
!3848 = !MDLocation(line: 2957, column: 7, scope: !3721)
!3849 = !MDLocation(line: 2958, column: 18, scope: !3721)
!3850 = !MDLocation(line: 2958, column: 7, scope: !3721)
!3851 = !MDLocation(line: 2959, column: 18, scope: !3721)
!3852 = !MDLocation(line: 2959, column: 7, scope: !3721)
!3853 = !MDLocation(line: 2961, column: 7, scope: !3721)
!3854 = !MDLocation(line: 2963, column: 12, scope: !3721)
!3855 = !MDLocation(line: 2963, column: 7, scope: !3721)
!3856 = !MDLocation(line: 2964, column: 7, scope: !3721)
!3857 = !MDLocation(line: 2965, column: 16, scope: !3721)
!3858 = !MDLocation(line: 2965, column: 7, scope: !3721)
!3859 = !MDLocation(line: 2966, column: 18, scope: !3721)
!3860 = !MDLocation(line: 2966, column: 7, scope: !3721)
!3861 = !MDLocation(line: 2967, column: 8, scope: !3721)
!3862 = !MDLocation(line: 2967, column: 7, scope: !3721)
!3863 = !MDLocation(line: 2968, column: 8, scope: !3721)
!3864 = !MDLocation(line: 2968, column: 7, scope: !3721)
!3865 = !MDLocation(line: 2969, column: 7, scope: !3721)
!3866 = !MDLocation(line: 2970, column: 21, scope: !3721)
!3867 = !MDLocation(line: 2970, column: 7, scope: !3721)
!3868 = !MDLocation(line: 2971, column: 21, scope: !3721)
!3869 = !MDLocation(line: 2971, column: 20, scope: !3721)
!3870 = !MDLocation(line: 2972, column: 7, scope: !3721)
!3871 = !MDLocation(line: 2972, column: 6, scope: !3721)
!3872 = !MDLocation(line: 2971, column: 19, scope: !3721)
!3873 = !MDLocation(line: 2971, column: 7, scope: !3721)
!3874 = !MDLocation(line: 2973, column: 11, scope: !3875)
!3875 = !{!"0xb\002973\0011\00395", !1, !3721}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3876 = !MDLocation(line: 2973, column: 11, scope: !3721)
!3877 = !MDLocation(line: 2973, column: 22, scope: !3878)
!3878 = !{!"0xb\001", !1, !3875}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3879 = !MDLocation(line: 2976, column: 7, scope: !3721)
!3880 = !MDLocation(line: 2978, column: 20, scope: !3881)
!3881 = !{!"0xb\002978\0011\00396", !1, !3721}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3882 = !MDLocation(line: 2978, column: 11, scope: !3881)
!3883 = !MDLocation(line: 2978, column: 11, scope: !3721)
!3884 = !MDLocation(line: 2984, column: 21, scope: !3885)
!3885 = !{!"0xb\002978\0038\00397", !1, !3881}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3886 = !MDLocation(line: 2984, column: 4, scope: !3885)
!3887 = !MDLocation(line: 2985, column: 15, scope: !3885)
!3888 = !MDLocation(line: 2985, column: 4, scope: !3885)
!3889 = !MDLocation(line: 2986, column: 16, scope: !3885)
!3890 = !MDLocation(line: 2986, column: 4, scope: !3885)
!3891 = !MDLocation(line: 2987, column: 13, scope: !3885)
!3892 = !MDLocation(line: 2987, column: 4, scope: !3885)
!3893 = !MDLocation(line: 2988, column: 8, scope: !3894)
!3894 = !{!"0xb\002988\008\00398", !1, !3885}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3895 = !MDLocation(line: 2988, column: 8, scope: !3885)
!3896 = !MDLocation(line: 2988, column: 19, scope: !3897)
!3897 = !{!"0xb\001", !1, !3894}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3898 = !MDLocation(line: 2991, column: 4, scope: !3885)
!3899 = !MDLocation(line: 2994, column: 4, scope: !3885)
!3900 = !MDLocation(line: 2995, column: 4, scope: !3901)
!3901 = !{!"0xb\002995\004\00399", !1, !3885}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3902 = !MDLocation(line: 2995, column: 4, scope: !3885)
!3903 = !MDLocation(line: 2995, column: 4, scope: !3904)
!3904 = !{!"0xb\001", !1, !3901}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3905 = !MDLocation(line: 2996, column: 4, scope: !3885)
!3906 = !MDLocation(line: 2998, column: 7, scope: !3721)
!3907 = !MDLocation(line: 2999, column: 7, scope: !3908)
!3908 = !{!"0xb\002999\007\00400", !1, !3721}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3909 = !MDLocation(line: 2999, column: 7, scope: !3721)
!3910 = !MDLocation(line: 2999, column: 7, scope: !3911)
!3911 = !{!"0xb\001", !1, !3908}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3912 = !MDLocation(line: 3000, column: 7, scope: !3721)
!3913 = !MDLocation(line: 3001, column: 24, scope: !3721)
!3914 = !MDLocation(line: 3001, column: 7, scope: !3721)
!3915 = !MDLocation(line: 3002, column: 18, scope: !3721)
!3916 = !MDLocation(line: 3002, column: 7, scope: !3721)
!3917 = !MDLocation(line: 3003, column: 19, scope: !3721)
!3918 = !MDLocation(line: 3003, column: 7, scope: !3721)
!3919 = !MDLocation(line: 3004, column: 16, scope: !3721)
!3920 = !MDLocation(line: 3004, column: 7, scope: !3721)
!3921 = !MDLocation(line: 3005, column: 11, scope: !3922)
!3922 = !{!"0xb\003005\0011\00401", !1, !3721}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3923 = !MDLocation(line: 3005, column: 11, scope: !3721)
!3924 = !MDLocation(line: 3005, column: 22, scope: !3925)
!3925 = !{!"0xb\001", !1, !3922}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3926 = !MDLocation(line: 3008, column: 7, scope: !3721)
!3927 = !MDLocation(line: 3010, column: 7, scope: !3721)
!3928 = !MDLocation(line: 3011, column: 7, scope: !3721)
!3929 = !MDLocation(line: 3013, column: 8, scope: !3718)
!3930 = !MDLocation(line: 3013, column: 8, scope: !3931)
!3931 = !{!"0xb\002", !1, !3718}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3932 = !MDLocation(line: 3013, column: 8, scope: !3933)
!3933 = !{!"0xb\001", !1, !3718}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3934 = !MDLocation(line: 3013, column: 8, scope: !3935)
!3935 = !{!"0xb\004", !1, !3718}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3936 = !MDLocation(line: 3013, column: 8, scope: !3937)
!3937 = !{!"0xb\006", !1, !3718}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3938 = !MDLocation(line: 3013, column: 8, scope: !3939)
!3939 = !{!"0xb\008", !1, !3718}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3940 = !MDLocation(line: 3013, column: 8, scope: !3941)
!3941 = !{!"0xb\009", !1, !3718}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3942 = !MDLocation(line: 3013, column: 8, scope: !3943)
!3943 = !{!"0xb\0010", !1, !3718}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3944 = !MDLocation(line: 3013, column: 8, scope: !3945)
!3945 = !{!"0xb\007", !1, !3718}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3946 = !MDLocation(line: 3013, column: 8, scope: !3947)
!3947 = !{!"0xb\005", !1, !3718}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3948 = !MDLocation(line: 3013, column: 8, scope: !3949)
!3949 = !{!"0xb\0012", !1, !3718}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3950 = !MDLocation(line: 3013, column: 8, scope: !3951)
!3951 = !{!"0xb\0013", !1, !3718}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3952 = !MDLocation(line: 3013, column: 8, scope: !3953)
!3953 = !{!"0xb\0015", !1, !3718}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3954 = !MDLocation(line: 3013, column: 8, scope: !3955)
!3955 = !{!"0xb\0016", !1, !3718}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3956 = !MDLocation(line: 3013, column: 8, scope: !3957)
!3957 = !{!"0xb\0018", !1, !3958}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3958 = !{!"0xb\0017", !1, !3718}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3959 = !MDLocation(line: 3013, column: 8, scope: !3960)
!3960 = !{!"0xb\0019", !1, !3961}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3961 = !{!"0xb\0014", !1, !3718}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3962 = !MDLocation(line: 3013, column: 8, scope: !3963)
!3963 = !{!"0xb\0020", !1, !3964}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3964 = !{!"0xb\0011", !1, !3718}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3965 = !MDLocation(line: 3013, column: 3, scope: !3966)
!3966 = !{!"0xb\0021", !1, !3967}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3967 = !{!"0xb\003", !1, !3718}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3968 = !MDLocation(line: 3014, column: 3, scope: !3718)
!3969 = !MDLocation(line: 3015, column: 6, scope: !3718)
!3970 = !MDLocation(line: 3017, column: 3, scope: !3971)
!3971 = !{!"0xb\003016\0011\00402", !1, !3714}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3972 = !MDLocation(line: 3018, column: 12, scope: !3971)
!3973 = !MDLocation(line: 3018, column: 3, scope: !3971)
!3974 = !MDLocation(line: 3020, column: 6, scope: !3635)
!3975 = !MDLocation(line: 3023, column: 10, scope: !2508)
!3976 = !MDLocation(line: 3023, column: 6, scope: !2508)
!3977 = !MDLocation(line: 3024, column: 28, scope: !2508)
!3978 = !MDLocation(line: 3024, column: 23, scope: !2508)
!3979 = !MDLocation(line: 3024, column: 6, scope: !2508)
!3980 = !MDLocation(line: 3025, column: 10, scope: !3981)
!3981 = !{!"0xb\003025\0010\00403", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3982 = !MDLocation(line: 3025, column: 14, scope: !3981)
!3983 = !MDLocation(line: 3025, column: 10, scope: !2508)
!3984 = !MDLocation(line: 3026, column: 16, scope: !3981)
!3985 = !MDLocation(line: 3026, column: 3, scope: !3981)
!3986 = !MDLocation(line: 3027, column: 6, scope: !2508)
!3987 = !MDLocation(line: 3029, column: 10, scope: !2508)
!3988 = !MDLocation(line: 3029, column: 6, scope: !2508)
!3989 = !MDLocation(line: 3030, column: 41, scope: !2508)
!3990 = !MDLocation(line: 3030, column: 24, scope: !2508)
!3991 = !MDLocation(line: 3030, column: 46, scope: !2508)
!3992 = !MDLocation(line: 3030, column: 19, scope: !2508)
!3993 = !MDLocation(line: 3030, column: 6, scope: !2508)
!3994 = !MDLocation(line: 3031, column: 22, scope: !2508)
!3995 = !MDLocation(line: 3031, column: 33, scope: !2508)
!3996 = !MDLocation(line: 3031, column: 17, scope: !2508)
!3997 = !MDLocation(line: 3031, column: 6, scope: !2508)
!3998 = !MDLocation(line: 3032, column: 10, scope: !3999)
!3999 = !{!"0xb\003032\0010\00404", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4000 = !MDLocation(line: 3032, column: 20, scope: !3999)
!4001 = !MDLocation(line: 3032, column: 19, scope: !3999)
!4002 = !MDLocation(line: 3032, column: 10, scope: !2508)
!4003 = !MDLocation(line: 3033, column: 22, scope: !3999)
!4004 = !MDLocation(line: 3033, column: 4, scope: !3999)
!4005 = !MDLocation(line: 3033, column: 3, scope: !3999)
!4006 = !MDLocation(line: 3034, column: 30, scope: !2508)
!4007 = !MDLocation(line: 3034, column: 7, scope: !2508)
!4008 = !MDLocation(line: 3034, column: 6, scope: !2508)
!4009 = !MDLocation(line: 3035, column: 6, scope: !2508)
!4010 = !MDLocation(line: 3037, column: 10, scope: !2508)
!4011 = !MDLocation(line: 3037, column: 6, scope: !2508)
!4012 = !MDLocation(line: 3038, column: 18, scope: !2508)
!4013 = !MDLocation(line: 3038, column: 17, scope: !2508)
!4014 = !MDLocation(line: 3038, column: 37, scope: !2508)
!4015 = !MDLocation(line: 3038, column: 12, scope: !2508)
!4016 = !MDLocation(line: 3038, column: 53, scope: !4017)
!4017 = !{!"0xb\001", !1, !2508}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4018 = !MDLocation(line: 3038, column: 42, scope: !2508)
!4019 = !MDLocation(line: 3038, column: 12, scope: !4020)
!4020 = !{!"0xb\002", !1, !2508}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4021 = !MDLocation(line: 3038, column: 6, scope: !2508)
!4022 = !MDLocation(line: 3039, column: 6, scope: !2508)
!4023 = !MDLocation(line: 3041, column: 24, scope: !2508)
!4024 = !MDLocation(line: 3041, column: 6, scope: !2508)
!4025 = !MDLocation(line: 3042, column: 10, scope: !4026)
!4026 = !{!"0xb\003042\0010\00405", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4027 = !MDLocation(line: 3042, column: 10, scope: !2508)
!4028 = !MDLocation(line: 3043, column: 10, scope: !4026)
!4029 = !MDLocation(line: 3043, column: 3, scope: !4026)
!4030 = !MDLocation(line: 3045, column: 10, scope: !4031)
!4031 = !{!"0xb\003044\0011\00406", !1, !4026}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4032 = !MDLocation(line: 3045, column: 17, scope: !4031)
!4033 = !MDLocation(line: 3045, column: 3, scope: !4031)
!4034 = !MDLocation(line: 3046, column: 7, scope: !4035)
!4035 = !{!"0xb\003046\007\00407", !1, !4031}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4036 = !MDLocation(line: 3046, column: 7, scope: !4031)
!4037 = !MDLocation(line: 3047, column: 14, scope: !4035)
!4038 = !MDLocation(line: 3047, column: 7, scope: !4035)
!4039 = !MDLocation(line: 3049, column: 6, scope: !2508)
!4040 = !MDLocation(line: 3051, column: 16, scope: !2508)
!4041 = !MDLocation(line: 3051, column: 6, scope: !2508)
!4042 = !MDLocation(line: 3052, column: 6, scope: !2508)
!4043 = !{!"0x100\00cc\003129\000", !4044, !538, !3735} ; [ DW_TAG_auto_variable ] [cc] [line 3129]
!4044 = !{!"0xb\003128\0015\00408", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4045 = !MDLocation(line: 3129, column: 10, scope: !4044)
!4046 = !{!"0x100\00cp\003130\000", !4044, !538, !518} ; [ DW_TAG_auto_variable ] [cp] [line 3130]
!4047 = !MDLocation(line: 3130, column: 14, scope: !4044)
!4048 = !MDLocation(line: 3130, column: 19, scope: !4044)
!4049 = !{!"0x100\00parenfloor\003132\000", !4044, !538, !157} ; [ DW_TAG_auto_variable ] [parenfloor] [line 3132]
!4050 = !MDLocation(line: 3132, column: 7, scope: !4044)
!4051 = !MDLocation(line: 3132, column: 20, scope: !4044)
!4052 = !MDLocation(line: 3134, column: 7, scope: !4053)
!4053 = !{!"0xb\003134\007\00409", !1, !4044}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4054 = !MDLocation(line: 3134, column: 7, scope: !4044)
!4055 = !MDLocation(line: 3135, column: 15, scope: !4053)
!4056 = !MDLocation(line: 3135, column: 7, scope: !4053)
!4057 = !MDLocation(line: 3136, column: 14, scope: !4044)
!4058 = !MDLocation(line: 3136, column: 3, scope: !4044)
!4059 = !MDLocation(line: 3137, column: 3, scope: !4044)
!4060 = !MDLocation(line: 3140, column: 7, scope: !4061)
!4061 = !{!"0xb\003140\007\00410", !1, !4044}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4062 = !MDLocation(line: 3140, column: 26, scope: !4061)
!4063 = !MDLocation(line: 3140, column: 25, scope: !4061)
!4064 = !MDLocation(line: 3140, column: 7, scope: !4044)
!4065 = !MDLocation(line: 3141, column: 21, scope: !4061)
!4066 = !MDLocation(line: 3141, column: 20, scope: !4061)
!4067 = !MDLocation(line: 3141, column: 7, scope: !4061)
!4068 = !MDLocation(line: 3142, column: 19, scope: !4044)
!4069 = !MDLocation(line: 3142, column: 3, scope: !4044)
!4070 = !MDLocation(line: 3143, column: 3, scope: !4044)
!4071 = !MDLocation(line: 3144, column: 12, scope: !4044)
!4072 = !MDLocation(line: 3144, column: 3, scope: !4044)
!4073 = !MDLocation(line: 3145, column: 13, scope: !4044)
!4074 = !MDLocation(line: 3145, column: 3, scope: !4044)
!4075 = !MDLocation(line: 3146, column: 13, scope: !4044)
!4076 = !MDLocation(line: 3146, column: 3, scope: !4044)
!4077 = !MDLocation(line: 3147, column: 13, scope: !4044)
!4078 = !MDLocation(line: 3147, column: 3, scope: !4044)
!4079 = !MDLocation(line: 3148, column: 15, scope: !4044)
!4080 = !MDLocation(line: 3148, column: 3, scope: !4044)
!4081 = !MDLocation(line: 3149, column: 3, scope: !4044)
!4082 = !MDLocation(line: 3150, column: 17, scope: !4044)
!4083 = !MDLocation(line: 3150, column: 3, scope: !4044)
!4084 = !MDLocation(line: 3151, column: 16, scope: !4044)
!4085 = !MDLocation(line: 3151, column: 7, scope: !4044)
!4086 = !MDLocation(line: 3151, column: 3, scope: !4044)
!4087 = !MDLocation(line: 3152, column: 3, scope: !4088)
!4088 = !{!"0xb\003152\003\00411", !1, !4044}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4089 = !MDLocation(line: 3152, column: 3, scope: !4044)
!4090 = !MDLocation(line: 3152, column: 3, scope: !4091)
!4091 = !{!"0xb\001", !1, !4088}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4092 = !MDLocation(line: 3153, column: 14, scope: !4044)
!4093 = !MDLocation(line: 3153, column: 3, scope: !4044)
!4094 = !MDLocation(line: 3154, column: 3, scope: !4095)
!4095 = !{!"0xb\003154\003\00412", !1, !4044}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4096 = !MDLocation(line: 3154, column: 3, scope: !4044)
!4097 = !MDLocation(line: 3154, column: 3, scope: !4098)
!4098 = !{!"0xb\001", !1, !4095}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4099 = !MDLocation(line: 3154, column: 3, scope: !4100)
!4100 = !{!"0xb\002", !1, !4095}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4101 = !{!"0x100\00cp\003167\000", !4102, !538, !518} ; [ DW_TAG_auto_variable ] [cp] [line 3167]
!4102 = !{!"0xb\003157\0015\00413", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4103 = !MDLocation(line: 3167, column: 14, scope: !4102)
!4104 = !{!"0x100\00lastcp\003167\000", !4102, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 3167]
!4105 = !MDLocation(line: 3167, column: 18, scope: !4102)
!4106 = !{!"0x100\00cc\003168\000", !4102, !538, !3734} ; [ DW_TAG_auto_variable ] [cc] [line 3168]
!4107 = !MDLocation(line: 3168, column: 11, scope: !4102)
!4108 = !MDLocation(line: 3168, column: 16, scope: !4102)
!4109 = !{!"0x100\00lastloc\003169\000", !4102, !538, !39} ; [ DW_TAG_auto_variable ] [lastloc] [line 3169]
!4110 = !MDLocation(line: 3169, column: 9, scope: !4102)
!4111 = !MDLocation(line: 3169, column: 19, scope: !4102)
!4112 = !{!"0x100\00cache_offset\003170\000", !4102, !538, !157} ; [ DW_TAG_auto_variable ] [cache_offset] [line 3170]
!4113 = !MDLocation(line: 3170, column: 7, scope: !4102)
!4114 = !{!"0x100\00cache_bit\003170\000", !4102, !538, !157} ; [ DW_TAG_auto_variable ] [cache_bit] [line 3170]
!4115 = !MDLocation(line: 3170, column: 25, scope: !4102)
!4116 = !MDLocation(line: 3172, column: 7, scope: !4102)
!4117 = !MDLocation(line: 3172, column: 3, scope: !4102)
!4118 = !MDLocation(line: 3173, column: 17, scope: !4102)
!4119 = !MDLocation(line: 3173, column: 3, scope: !4102)
!4120 = !MDLocation(line: 3185, column: 7, scope: !4121)
!4121 = !{!"0xb\003185\007\00414", !1, !4102}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4122 = !MDLocation(line: 3185, column: 19, scope: !4121)
!4123 = !MDLocation(line: 3185, column: 7, scope: !4102)
!4124 = !MDLocation(line: 3185, column: 34, scope: !4125)
!4125 = !{!"0xb\001", !1, !4121}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4126 = !MDLocation(line: 3185, column: 39, scope: !4121)
!4127 = !MDLocation(line: 3185, column: 34, scope: !4121)
!4128 = !MDLocation(line: 3186, column: 18, scope: !4129)
!4129 = !{!"0xb\003185\0048\00415", !1, !4121}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4130 = !MDLocation(line: 3186, column: 7, scope: !4129)
!4131 = !MDLocation(line: 3187, column: 11, scope: !4132)
!4132 = !{!"0xb\003187\0011\00416", !1, !4129}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4133 = !MDLocation(line: 3187, column: 11, scope: !4129)
!4134 = !MDLocation(line: 3188, column: 9, scope: !4132)
!4135 = !MDLocation(line: 3188, column: 4, scope: !4132)
!4136 = !MDLocation(line: 3194, column: 20, scope: !4137)
!4137 = !{!"0xb\003194\0011\00417", !1, !4129}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4138 = !MDLocation(line: 3194, column: 11, scope: !4137)
!4139 = !MDLocation(line: 3194, column: 11, scope: !4129)
!4140 = !MDLocation(line: 3195, column: 4, scope: !4137)
!4141 = !MDLocation(line: 3196, column: 11, scope: !4142)
!4142 = !{!"0xb\003196\0011\00418", !1, !4129}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4143 = !MDLocation(line: 3196, column: 11, scope: !4129)
!4144 = !MDLocation(line: 3197, column: 20, scope: !4142)
!4145 = !MDLocation(line: 3197, column: 4, scope: !4142)
!4146 = !MDLocation(line: 3198, column: 18, scope: !4129)
!4147 = !MDLocation(line: 3198, column: 7, scope: !4129)
!4148 = !MDLocation(line: 3199, column: 7, scope: !4129)
!4149 = !MDLocation(line: 3204, column: 7, scope: !4150)
!4150 = !{!"0xb\003204\007\00419", !1, !4102}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4151 = !MDLocation(line: 3204, column: 11, scope: !4150)
!4152 = !MDLocation(line: 3204, column: 7, scope: !4102)
!4153 = !MDLocation(line: 3205, column: 17, scope: !4154)
!4154 = !{!"0xb\003204\0020\00420", !1, !4150}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4155 = !MDLocation(line: 3205, column: 7, scope: !4154)
!4156 = !MDLocation(line: 3206, column: 21, scope: !4154)
!4157 = !MDLocation(line: 3206, column: 7, scope: !4154)
!4158 = !MDLocation(line: 3207, column: 20, scope: !4159)
!4159 = !{!"0xb\003207\0011\00421", !1, !4154}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4160 = !MDLocation(line: 3207, column: 11, scope: !4159)
!4161 = !MDLocation(line: 3207, column: 11, scope: !4154)
!4162 = !MDLocation(line: 3208, column: 4, scope: !4159)
!4163 = !MDLocation(line: 3209, column: 17, scope: !4154)
!4164 = !MDLocation(line: 3209, column: 7, scope: !4154)
!4165 = !MDLocation(line: 3210, column: 21, scope: !4154)
!4166 = !MDLocation(line: 3210, column: 7, scope: !4154)
!4167 = !MDLocation(line: 3211, column: 7, scope: !4154)
!4168 = !MDLocation(line: 3214, column: 7, scope: !4169)
!4169 = !{!"0xb\003214\007\00422", !1, !4102}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4170 = !MDLocation(line: 3214, column: 7, scope: !4102)
!4171 = !MDLocation(line: 3218, column: 8, scope: !4172)
!4172 = !{!"0xb\003218\007\00424", !1, !4173}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4173 = !{!"0xb\003214\0020\00423", !1, !4169}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4174 = !MDLocation(line: 3218, column: 7, scope: !4173)
!4175 = !MDLocation(line: 3219, column: 25, scope: !4176)
!4176 = !{!"0xb\003218\0024\00425", !1, !4172}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4177 = !MDLocation(line: 3219, column: 37, scope: !4176)
!4178 = !MDLocation(line: 3219, column: 54, scope: !4176)
!4179 = !MDLocation(line: 3219, column: 53, scope: !4176)
!4180 = !MDLocation(line: 3219, column: 24, scope: !4176)
!4181 = !MDLocation(line: 3219, column: 7, scope: !4176)
!4182 = !MDLocation(line: 3220, column: 25, scope: !4176)
!4183 = !MDLocation(line: 3220, column: 7, scope: !4176)
!4184 = !MDLocation(line: 3221, column: 3, scope: !4176)
!4185 = !MDLocation(line: 3222, column: 7, scope: !4186)
!4186 = !{!"0xb\003222\007\00426", !1, !4173}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4187 = !MDLocation(line: 3222, column: 7, scope: !4173)
!4188 = !{!"0x100\00size\003223\000", !4189, !538, !157} ; [ DW_TAG_auto_variable ] [size] [line 3223]
!4189 = !{!"0xb\003222\0031\00427", !1, !4186}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4190 = !MDLocation(line: 3223, column: 11, scope: !4189)
!4191 = !MDLocation(line: 3223, column: 19, scope: !4189)
!4192 = !MDLocation(line: 3223, column: 18, scope: !4189)
!4193 = !MDLocation(line: 3224, column: 11, scope: !4194)
!4194 = !{!"0xb\003224\0011\00428", !1, !4189}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4195 = !MDLocation(line: 3224, column: 11, scope: !4189)
!4196 = !MDLocation(line: 3225, column: 13, scope: !4197)
!4197 = !{!"0xb\003225\008\00430", !1, !4198}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4198 = !{!"0xb\003224\0028\00429", !1, !4194}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4199 = !MDLocation(line: 3225, column: 8, scope: !4197)
!4200 = !MDLocation(line: 3225, column: 36, scope: !4197)
!4201 = !MDLocation(line: 3225, column: 8, scope: !4198)
!4202 = !MDLocation(line: 3226, column: 8, scope: !4203)
!4203 = !{!"0xb\003225\0042\00431", !1, !4197}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4204 = !MDLocation(line: 3227, column: 31, scope: !4203)
!4205 = !MDLocation(line: 3227, column: 8, scope: !4203)
!4206 = !MDLocation(line: 3228, column: 4, scope: !4203)
!4207 = !MDLocation(line: 3229, column: 4, scope: !4198)
!4208 = !MDLocation(line: 3230, column: 7, scope: !4198)
!4209 = !MDLocation(line: 3232, column: 27, scope: !4210)
!4210 = !{!"0xb\003231\0012\00432", !1, !4194}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4211 = !MDLocation(line: 3232, column: 4, scope: !4210)
!4212 = !MDLocation(line: 3233, column: 4, scope: !4210)
!4213 = !MDLocation(line: 3240, column: 3, scope: !4189)
!4214 = !MDLocation(line: 3241, column: 7, scope: !4215)
!4215 = !{!"0xb\003241\007\00433", !1, !4173}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4216 = !MDLocation(line: 3241, column: 7, scope: !4173)
!4217 = !MDLocation(line: 3242, column: 22, scope: !4218)
!4218 = !{!"0xb\003241\0028\00434", !1, !4215}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4219 = !MDLocation(line: 3242, column: 33, scope: !4218)
!4220 = !MDLocation(line: 3242, column: 7, scope: !4218)
!4221 = !MDLocation(line: 3244, column: 23, scope: !4218)
!4222 = !MDLocation(line: 3244, column: 22, scope: !4218)
!4223 = !MDLocation(line: 3245, column: 10, scope: !4218)
!4224 = !MDLocation(line: 3245, column: 26, scope: !4218)
!4225 = !MDLocation(line: 3244, column: 7, scope: !4218)
!4226 = !MDLocation(line: 3246, column: 19, scope: !4218)
!4227 = !MDLocation(line: 3246, column: 7, scope: !4218)
!4228 = !MDLocation(line: 3247, column: 7, scope: !4218)
!4229 = !MDLocation(line: 3248, column: 27, scope: !4230)
!4230 = !{!"0xb\003248\0011\00435", !1, !4218}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4231 = !MDLocation(line: 3248, column: 11, scope: !4230)
!4232 = !MDLocation(line: 3248, column: 47, scope: !4230)
!4233 = !MDLocation(line: 3248, column: 44, scope: !4230)
!4234 = !MDLocation(line: 3248, column: 11, scope: !4218)
!4235 = !MDLocation(line: 3254, column: 8, scope: !4236)
!4236 = !{!"0xb\003254\008\00437", !1, !4237}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4237 = !{!"0xb\003248\0059\00436", !1, !4230}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4238 = !MDLocation(line: 3254, column: 8, scope: !4237)
!4239 = !MDLocation(line: 3256, column: 8, scope: !4236)
!4240 = !MDLocation(line: 3259, column: 8, scope: !4236)
!4241 = !MDLocation(line: 3261, column: 44, scope: !4218)
!4242 = !MDLocation(line: 3261, column: 41, scope: !4218)
!4243 = !MDLocation(line: 3261, column: 23, scope: !4218)
!4244 = !MDLocation(line: 3261, column: 7, scope: !4218)
!4245 = !MDLocation(line: 3262, column: 3, scope: !4218)
!4246 = !MDLocation(line: 3263, column: 3, scope: !4173)
!4247 = !MDLocation(line: 3267, column: 7, scope: !4248)
!4248 = !{!"0xb\003267\007\00438", !1, !4102}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4249 = !MDLocation(line: 3267, column: 7, scope: !4102)
!4250 = !MDLocation(line: 3268, column: 18, scope: !4251)
!4251 = !{!"0xb\003267\0019\00439", !1, !4248}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4252 = !MDLocation(line: 3268, column: 7, scope: !4251)
!4253 = !MDLocation(line: 3269, column: 11, scope: !4254)
!4254 = !{!"0xb\003269\0011\00440", !1, !4251}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4255 = !MDLocation(line: 3269, column: 11, scope: !4251)
!4256 = !MDLocation(line: 3270, column: 9, scope: !4254)
!4257 = !MDLocation(line: 3270, column: 4, scope: !4254)
!4258 = !MDLocation(line: 3271, column: 22, scope: !4251)
!4259 = !MDLocation(line: 3271, column: 12, scope: !4251)
!4260 = !MDLocation(line: 3271, column: 7, scope: !4251)
!4261 = !MDLocation(line: 3272, column: 7, scope: !4251)
!4262 = !MDLocation(line: 3273, column: 20, scope: !4263)
!4263 = !{!"0xb\003273\0011\00441", !1, !4251}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4264 = !MDLocation(line: 3273, column: 11, scope: !4263)
!4265 = !MDLocation(line: 3273, column: 11, scope: !4251)
!4266 = !MDLocation(line: 3274, column: 4, scope: !4267)
!4267 = !{!"0xb\003274\004\00443", !1, !4268}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4268 = !{!"0xb\003273\0031\00442", !1, !4263}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4269 = !MDLocation(line: 3274, column: 4, scope: !4268)
!4270 = !MDLocation(line: 3274, column: 4, scope: !4271)
!4271 = !{!"0xb\001", !1, !4267}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4272 = !MDLocation(line: 3275, column: 4, scope: !4273)
!4273 = !{!"0xb\003275\004\00445", !1, !4274}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4274 = !{!"0xb\003275\004\00444", !1, !4268}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4275 = !MDLocation(line: 3275, column: 4, scope: !4274)
!4276 = !MDLocation(line: 3275, column: 4, scope: !4277)
!4277 = !{!"0xb\001", !1, !4278}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4278 = !{!"0xb\003275\004\00447", !1, !4279}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4279 = !{!"0xb\003275\004\00446", !1, !4273}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4280 = !MDLocation(line: 3275, column: 4, scope: !4279)
!4281 = !MDLocation(line: 3275, column: 4, scope: !4282)
!4282 = !{!"0xb\004", !1, !4278}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4283 = !MDLocation(line: 3275, column: 4, scope: !4284)
!4284 = !{!"0xb\003", !1, !4285}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4285 = !{!"0xb\003275\004\00448", !1, !4278}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4286 = !MDLocation(line: 3275, column: 4, scope: !4278)
!4287 = !MDLocation(line: 3275, column: 4, scope: !4288)
!4288 = !{!"0xb\006", !1, !4289}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4289 = !{!"0xb\003275\004\00449", !1, !4285}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4290 = !MDLocation(line: 3275, column: 4, scope: !4291)
!4291 = !{!"0xb\005", !1, !4279}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4292 = !MDLocation(line: 3275, column: 4, scope: !4293)
!4293 = !{!"0xb\007", !1, !4294}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4294 = !{!"0xb\002", !1, !4274}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4295 = !MDLocation(line: 3277, column: 7, scope: !4296)
!4296 = !{!"0xb\003277\007\00450", !1, !4251}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4297 = !MDLocation(line: 3277, column: 7, scope: !4251)
!4298 = !MDLocation(line: 3277, column: 7, scope: !4299)
!4299 = !{!"0xb\001", !1, !4296}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4300 = !MDLocation(line: 3278, column: 7, scope: !4251)
!4301 = !MDLocation(line: 3279, column: 11, scope: !4302)
!4302 = !{!"0xb\003279\0011\00451", !1, !4251}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4303 = !MDLocation(line: 3279, column: 11, scope: !4251)
!4304 = !MDLocation(line: 3280, column: 20, scope: !4302)
!4305 = !MDLocation(line: 3280, column: 4, scope: !4302)
!4306 = !MDLocation(line: 3281, column: 18, scope: !4251)
!4307 = !MDLocation(line: 3281, column: 7, scope: !4251)
!4308 = !MDLocation(line: 3283, column: 11, scope: !4309)
!4309 = !{!"0xb\003283\0011\00452", !1, !4251}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4310 = !MDLocation(line: 3283, column: 16, scope: !4309)
!4311 = !MDLocation(line: 3283, column: 11, scope: !4251)
!4312 = !MDLocation(line: 3284, column: 8, scope: !4313)
!4313 = !{!"0xb\003284\008\00454", !1, !4314}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4314 = !{!"0xb\003283\0025\00453", !1, !4309}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4315 = !MDLocation(line: 3284, column: 8, scope: !4314)
!4316 = !MDLocation(line: 3284, column: 8, scope: !4317)
!4317 = !{!"0xb\001", !1, !4313}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4318 = !MDLocation(line: 3284, column: 8, scope: !4319)
!4319 = !{!"0xb\003", !1, !4313}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4320 = !MDLocation(line: 3284, column: 8, scope: !4321)
!4321 = !{!"0xb\006", !1, !4313}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4322 = !MDLocation(line: 3284, column: 8, scope: !4323)
!4323 = !{!"0xb\008", !1, !4324}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4324 = !{!"0xb\004", !1, !4325}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4325 = !{!"0xb\002", !1, !4313}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4326 = !MDLocation(line: 3284, column: 8, scope: !4327)
!4327 = !{!"0xb\009", !1, !4313}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4328 = !MDLocation(line: 3284, column: 31, scope: !4329)
!4329 = !{!"0xb\0010", !1, !4330}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4330 = !{!"0xb\007", !1, !4331}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4331 = !{!"0xb\005", !1, !4313}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4332 = !MDLocation(line: 3285, column: 13, scope: !4313)
!4333 = !MDLocation(line: 3286, column: 8, scope: !4334)
!4334 = !{!"0xb\003285\0040\00455", !1, !4313}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4335 = !MDLocation(line: 3287, column: 8, scope: !4334)
!4336 = !MDLocation(line: 3290, column: 4, scope: !4334)
!4337 = !MDLocation(line: 3291, column: 4, scope: !4338)
!4338 = !{!"0xb\003291\004\00457", !1, !4339}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4339 = !{!"0xb\003291\004\00456", !1, !4314}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4340 = !MDLocation(line: 3291, column: 4, scope: !4339)
!4341 = !MDLocation(line: 3291, column: 4, scope: !4342)
!4342 = !{!"0xb\001", !1, !4343}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4343 = !{!"0xb\003291\004\00459", !1, !4344}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4344 = !{!"0xb\003291\004\00458", !1, !4338}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4345 = !MDLocation(line: 3291, column: 4, scope: !4344)
!4346 = !MDLocation(line: 3291, column: 4, scope: !4347)
!4347 = !{!"0xb\004", !1, !4343}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4348 = !MDLocation(line: 3291, column: 4, scope: !4349)
!4349 = !{!"0xb\003", !1, !4350}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4350 = !{!"0xb\003291\004\00460", !1, !4343}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4351 = !MDLocation(line: 3291, column: 4, scope: !4343)
!4352 = !MDLocation(line: 3291, column: 4, scope: !4353)
!4353 = !{!"0xb\006", !1, !4354}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4354 = !{!"0xb\003291\004\00461", !1, !4350}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4355 = !MDLocation(line: 3291, column: 4, scope: !4356)
!4356 = !{!"0xb\005", !1, !4344}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4357 = !MDLocation(line: 3291, column: 4, scope: !4358)
!4358 = !{!"0xb\007", !1, !4359}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4359 = !{!"0xb\002", !1, !4339}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4360 = !MDLocation(line: 3300, column: 21, scope: !4251)
!4361 = !MDLocation(line: 3300, column: 7, scope: !4251)
!4362 = !MDLocation(line: 3301, column: 17, scope: !4251)
!4363 = !MDLocation(line: 3301, column: 7, scope: !4251)
!4364 = !MDLocation(line: 3302, column: 21, scope: !4251)
!4365 = !MDLocation(line: 3302, column: 7, scope: !4251)
!4366 = !MDLocation(line: 3303, column: 22, scope: !4251)
!4367 = !MDLocation(line: 3303, column: 12, scope: !4251)
!4368 = !MDLocation(line: 3303, column: 7, scope: !4251)
!4369 = !MDLocation(line: 3304, column: 7, scope: !4251)
!4370 = !MDLocation(line: 3305, column: 20, scope: !4371)
!4371 = !{!"0xb\003305\0011\00462", !1, !4251}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4372 = !MDLocation(line: 3305, column: 11, scope: !4371)
!4373 = !MDLocation(line: 3305, column: 11, scope: !4251)
!4374 = !MDLocation(line: 3306, column: 4, scope: !4375)
!4375 = !{!"0xb\003306\004\00464", !1, !4376}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4376 = !{!"0xb\003305\0031\00463", !1, !4371}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4377 = !MDLocation(line: 3306, column: 4, scope: !4376)
!4378 = !MDLocation(line: 3306, column: 4, scope: !4379)
!4379 = !{!"0xb\001", !1, !4375}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4380 = !MDLocation(line: 3307, column: 4, scope: !4381)
!4381 = !{!"0xb\003307\004\00466", !1, !4382}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4382 = !{!"0xb\003307\004\00465", !1, !4376}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4383 = !MDLocation(line: 3307, column: 4, scope: !4382)
!4384 = !MDLocation(line: 3307, column: 4, scope: !4385)
!4385 = !{!"0xb\001", !1, !4386}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4386 = !{!"0xb\003307\004\00468", !1, !4387}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4387 = !{!"0xb\003307\004\00467", !1, !4381}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4388 = !MDLocation(line: 3307, column: 4, scope: !4387)
!4389 = !MDLocation(line: 3307, column: 4, scope: !4390)
!4390 = !{!"0xb\004", !1, !4386}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4391 = !MDLocation(line: 3307, column: 4, scope: !4392)
!4392 = !{!"0xb\003", !1, !4393}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4393 = !{!"0xb\003307\004\00469", !1, !4386}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4394 = !MDLocation(line: 3307, column: 4, scope: !4386)
!4395 = !MDLocation(line: 3307, column: 4, scope: !4396)
!4396 = !{!"0xb\006", !1, !4397}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4397 = !{!"0xb\003307\004\00470", !1, !4393}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4398 = !MDLocation(line: 3307, column: 4, scope: !4399)
!4399 = !{!"0xb\005", !1, !4387}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4400 = !MDLocation(line: 3307, column: 4, scope: !4401)
!4401 = !{!"0xb\007", !1, !4402}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4402 = !{!"0xb\002", !1, !4382}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4403 = !MDLocation(line: 3309, column: 7, scope: !4404)
!4404 = !{!"0xb\003309\007\00471", !1, !4251}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4405 = !MDLocation(line: 3309, column: 7, scope: !4251)
!4406 = !MDLocation(line: 3309, column: 7, scope: !4407)
!4407 = !{!"0xb\001", !1, !4404}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4408 = !MDLocation(line: 3310, column: 7, scope: !4251)
!4409 = !MDLocation(line: 3311, column: 17, scope: !4251)
!4410 = !MDLocation(line: 3311, column: 7, scope: !4251)
!4411 = !MDLocation(line: 3312, column: 21, scope: !4251)
!4412 = !MDLocation(line: 3312, column: 7, scope: !4251)
!4413 = !MDLocation(line: 3313, column: 7, scope: !4414)
!4414 = !{!"0xb\003313\007\00473", !1, !4415}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4415 = !{!"0xb\003313\007\00472", !1, !4251}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4416 = !MDLocation(line: 3313, column: 7, scope: !4415)
!4417 = !MDLocation(line: 3313, column: 7, scope: !4418)
!4418 = !{!"0xb\001", !1, !4419}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4419 = !{!"0xb\003313\007\00475", !1, !4420}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4420 = !{!"0xb\003313\007\00474", !1, !4414}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4421 = !MDLocation(line: 3313, column: 7, scope: !4420)
!4422 = !MDLocation(line: 3313, column: 7, scope: !4423)
!4423 = !{!"0xb\004", !1, !4419}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4424 = !MDLocation(line: 3313, column: 7, scope: !4425)
!4425 = !{!"0xb\003", !1, !4426}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4426 = !{!"0xb\003313\007\00476", !1, !4419}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4427 = !MDLocation(line: 3313, column: 7, scope: !4419)
!4428 = !MDLocation(line: 3313, column: 7, scope: !4429)
!4429 = !{!"0xb\006", !1, !4430}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4430 = !{!"0xb\003313\007\00477", !1, !4426}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4431 = !MDLocation(line: 3313, column: 7, scope: !4432)
!4432 = !{!"0xb\005", !1, !4420}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4433 = !MDLocation(line: 3313, column: 7, scope: !4434)
!4434 = !{!"0xb\007", !1, !4435}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4435 = !{!"0xb\002", !1, !4415}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4436 = !MDLocation(line: 3318, column: 7, scope: !4437)
!4437 = !{!"0xb\003318\007\00478", !1, !4102}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4438 = !MDLocation(line: 3318, column: 11, scope: !4437)
!4439 = !MDLocation(line: 3318, column: 7, scope: !4102)
!4440 = !MDLocation(line: 3319, column: 22, scope: !4441)
!4441 = !{!"0xb\003318\0020\00479", !1, !4437}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4442 = !MDLocation(line: 3319, column: 12, scope: !4441)
!4443 = !MDLocation(line: 3319, column: 7, scope: !4441)
!4444 = !MDLocation(line: 3320, column: 17, scope: !4441)
!4445 = !MDLocation(line: 3320, column: 7, scope: !4441)
!4446 = !MDLocation(line: 3321, column: 21, scope: !4441)
!4447 = !MDLocation(line: 3321, column: 7, scope: !4441)
!4448 = !MDLocation(line: 3322, column: 7, scope: !4441)
!4449 = !MDLocation(line: 3323, column: 20, scope: !4450)
!4450 = !{!"0xb\003323\0011\00480", !1, !4441}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4451 = !MDLocation(line: 3323, column: 11, scope: !4450)
!4452 = !MDLocation(line: 3323, column: 11, scope: !4441)
!4453 = !MDLocation(line: 3324, column: 4, scope: !4454)
!4454 = !{!"0xb\003324\004\00482", !1, !4455}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4455 = !{!"0xb\003323\0031\00481", !1, !4450}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4456 = !MDLocation(line: 3324, column: 4, scope: !4455)
!4457 = !MDLocation(line: 3324, column: 4, scope: !4458)
!4458 = !{!"0xb\001", !1, !4454}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4459 = !MDLocation(line: 3325, column: 4, scope: !4460)
!4460 = !{!"0xb\003325\004\00484", !1, !4461}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4461 = !{!"0xb\003325\004\00483", !1, !4455}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4462 = !MDLocation(line: 3325, column: 4, scope: !4461)
!4463 = !MDLocation(line: 3325, column: 4, scope: !4464)
!4464 = !{!"0xb\001", !1, !4465}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4465 = !{!"0xb\003325\004\00486", !1, !4466}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4466 = !{!"0xb\003325\004\00485", !1, !4460}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4467 = !MDLocation(line: 3325, column: 4, scope: !4466)
!4468 = !MDLocation(line: 3325, column: 4, scope: !4469)
!4469 = !{!"0xb\004", !1, !4465}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4470 = !MDLocation(line: 3325, column: 4, scope: !4471)
!4471 = !{!"0xb\003", !1, !4472}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4472 = !{!"0xb\003325\004\00487", !1, !4465}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4473 = !MDLocation(line: 3325, column: 4, scope: !4465)
!4474 = !MDLocation(line: 3325, column: 4, scope: !4475)
!4475 = !{!"0xb\006", !1, !4476}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4476 = !{!"0xb\003325\004\00488", !1, !4472}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4477 = !MDLocation(line: 3325, column: 4, scope: !4478)
!4478 = !{!"0xb\005", !1, !4466}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4479 = !MDLocation(line: 3325, column: 4, scope: !4480)
!4480 = !{!"0xb\007", !1, !4481}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4481 = !{!"0xb\002", !1, !4461}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4482 = !MDLocation(line: 3327, column: 7, scope: !4483)
!4483 = !{!"0xb\003327\007\00489", !1, !4441}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4484 = !MDLocation(line: 3327, column: 7, scope: !4441)
!4485 = !MDLocation(line: 3327, column: 7, scope: !4486)
!4486 = !{!"0xb\001", !1, !4483}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4487 = !MDLocation(line: 3328, column: 7, scope: !4441)
!4488 = !MDLocation(line: 3329, column: 21, scope: !4441)
!4489 = !MDLocation(line: 3329, column: 7, scope: !4441)
!4490 = !MDLocation(line: 3335, column: 3, scope: !4441)
!4491 = !MDLocation(line: 3336, column: 7, scope: !4492)
!4492 = !{!"0xb\003336\007\00490", !1, !4102}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4493 = !MDLocation(line: 3336, column: 7, scope: !4102)
!4494 = !MDLocation(line: 3336, column: 7, scope: !4495)
!4495 = !{!"0xb\001", !1, !4492}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4496 = !MDLocation(line: 3336, column: 7, scope: !4497)
!4497 = !{!"0xb\003", !1, !4492}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4498 = !MDLocation(line: 3336, column: 7, scope: !4499)
!4499 = !{!"0xb\006", !1, !4492}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4500 = !MDLocation(line: 3336, column: 7, scope: !4501)
!4501 = !{!"0xb\008", !1, !4502}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4502 = !{!"0xb\004", !1, !4503}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4503 = !{!"0xb\002", !1, !4492}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4504 = !MDLocation(line: 3336, column: 7, scope: !4505)
!4505 = !{!"0xb\009", !1, !4492}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4506 = !MDLocation(line: 3336, column: 30, scope: !4507)
!4507 = !{!"0xb\0010", !1, !4508}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4508 = !{!"0xb\007", !1, !4509}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4509 = !{!"0xb\005", !1, !4492}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4510 = !MDLocation(line: 3337, column: 9, scope: !4492)
!4511 = !MDLocation(line: 3338, column: 7, scope: !4512)
!4512 = !{!"0xb\003337\0036\00491", !1, !4492}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4513 = !MDLocation(line: 3339, column: 7, scope: !4512)
!4514 = !MDLocation(line: 3342, column: 3, scope: !4512)
!4515 = !MDLocation(line: 3345, column: 14, scope: !4102)
!4516 = !MDLocation(line: 3345, column: 3, scope: !4102)
!4517 = !MDLocation(line: 3346, column: 7, scope: !4518)
!4518 = !{!"0xb\003346\007\00492", !1, !4102}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4519 = !MDLocation(line: 3346, column: 7, scope: !4102)
!4520 = !MDLocation(line: 3347, column: 12, scope: !4518)
!4521 = !MDLocation(line: 3347, column: 7, scope: !4518)
!4522 = !MDLocation(line: 3348, column: 16, scope: !4523)
!4523 = !{!"0xb\003348\007\00493", !1, !4102}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4524 = !MDLocation(line: 3348, column: 7, scope: !4523)
!4525 = !MDLocation(line: 3348, column: 7, scope: !4102)
!4526 = !MDLocation(line: 3349, column: 7, scope: !4527)
!4527 = !{!"0xb\003349\007\00495", !1, !4528}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4528 = !{!"0xb\003349\007\00494", !1, !4523}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4529 = !MDLocation(line: 3349, column: 7, scope: !4528)
!4530 = !MDLocation(line: 3349, column: 7, scope: !4531)
!4531 = !{!"0xb\001", !1, !4532}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4532 = !{!"0xb\003349\007\00497", !1, !4533}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4533 = !{!"0xb\003349\007\00496", !1, !4527}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4534 = !MDLocation(line: 3349, column: 7, scope: !4533)
!4535 = !MDLocation(line: 3349, column: 7, scope: !4536)
!4536 = !{!"0xb\004", !1, !4532}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4537 = !MDLocation(line: 3349, column: 7, scope: !4538)
!4538 = !{!"0xb\003", !1, !4539}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4539 = !{!"0xb\003349\007\00498", !1, !4532}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4540 = !MDLocation(line: 3349, column: 7, scope: !4532)
!4541 = !MDLocation(line: 3349, column: 7, scope: !4542)
!4542 = !{!"0xb\006", !1, !4543}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4543 = !{!"0xb\003349\007\00499", !1, !4539}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4544 = !MDLocation(line: 3349, column: 7, scope: !4545)
!4545 = !{!"0xb\005", !1, !4533}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4546 = !MDLocation(line: 3349, column: 7, scope: !4547)
!4547 = !{!"0xb\007", !1, !4548}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4548 = !{!"0xb\002", !1, !4528}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4549 = !MDLocation(line: 3350, column: 7, scope: !4550)
!4550 = !{!"0xb\003350\007\00500", !1, !4102}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4551 = !MDLocation(line: 3350, column: 7, scope: !4102)
!4552 = !MDLocation(line: 3351, column: 23, scope: !4550)
!4553 = !MDLocation(line: 3351, column: 7, scope: !4550)
!4554 = !MDLocation(line: 3352, column: 14, scope: !4102)
!4555 = !MDLocation(line: 3352, column: 3, scope: !4102)
!4556 = !MDLocation(line: 3353, column: 13, scope: !4102)
!4557 = !MDLocation(line: 3353, column: 3, scope: !4102)
!4558 = !MDLocation(line: 3354, column: 17, scope: !4102)
!4559 = !MDLocation(line: 3354, column: 3, scope: !4102)
!4560 = !MDLocation(line: 3355, column: 3, scope: !4561)
!4561 = !{!"0xb\003355\003\00502", !1, !4562}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4562 = !{!"0xb\003355\003\00501", !1, !4102}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4563 = !MDLocation(line: 3355, column: 3, scope: !4562)
!4564 = !MDLocation(line: 3355, column: 3, scope: !4565)
!4565 = !{!"0xb\001", !1, !4566}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4566 = !{!"0xb\003355\003\00504", !1, !4567}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4567 = !{!"0xb\003355\003\00503", !1, !4561}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4568 = !MDLocation(line: 3355, column: 3, scope: !4567)
!4569 = !MDLocation(line: 3355, column: 3, scope: !4570)
!4570 = !{!"0xb\004", !1, !4566}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4571 = !MDLocation(line: 3355, column: 3, scope: !4572)
!4572 = !{!"0xb\003", !1, !4573}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4573 = !{!"0xb\003355\003\00505", !1, !4566}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4574 = !MDLocation(line: 3355, column: 3, scope: !4566)
!4575 = !MDLocation(line: 3355, column: 3, scope: !4576)
!4576 = !{!"0xb\006", !1, !4577}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4577 = !{!"0xb\003355\003\00506", !1, !4573}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4578 = !MDLocation(line: 3355, column: 3, scope: !4579)
!4579 = !{!"0xb\005", !1, !4567}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4580 = !MDLocation(line: 3355, column: 3, scope: !4581)
!4581 = !{!"0xb\007", !1, !4582}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4582 = !{!"0xb\002", !1, !4562}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4583 = !MDLocation(line: 3359, column: 13, scope: !2508)
!4584 = !MDLocation(line: 3359, column: 20, scope: !2508)
!4585 = !MDLocation(line: 3359, column: 6, scope: !2508)
!4586 = !MDLocation(line: 3360, column: 10, scope: !4587)
!4587 = !{!"0xb\003360\0010\00507", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4588 = !MDLocation(line: 3360, column: 18, scope: !4587)
!4589 = !MDLocation(line: 3360, column: 10, scope: !2508)
!4590 = !MDLocation(line: 3361, column: 3, scope: !4587)
!4591 = !MDLocation(line: 3362, column: 14, scope: !2508)
!4592 = !MDLocation(line: 3362, column: 6, scope: !2508)
!4593 = !MDLocation(line: 3363, column: 6, scope: !2508)
!4594 = !MDLocation(line: 3365, column: 14, scope: !2508)
!4595 = !MDLocation(line: 3365, column: 6, scope: !2508)
!4596 = !MDLocation(line: 3368, column: 8, scope: !4597)
!4597 = !{!"0xb\003367\006\00508", !1, !2508}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4598 = !MDLocation(line: 3368, column: 3, scope: !4597)
!4599 = !MDLocation(line: 3369, column: 7, scope: !4600)
!4600 = !{!"0xb\003369\007\00509", !1, !4597}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4601 = !MDLocation(line: 3369, column: 19, scope: !4600)
!4602 = !MDLocation(line: 3369, column: 7, scope: !4597)
!4603 = !MDLocation(line: 3370, column: 14, scope: !4600)
!4604 = !MDLocation(line: 3370, column: 7, scope: !4600)
!4605 = !{!"0x100\00lastparen\003372\000", !4606, !538, !157} ; [ DW_TAG_auto_variable ] [lastparen] [line 3372]
!4606 = !{!"0xb\003371\008\00510", !1, !4600}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4607 = !MDLocation(line: 3372, column: 11, scope: !4606)
!4608 = !MDLocation(line: 3372, column: 24, scope: !4606)
!4609 = !MDLocation(line: 3372, column: 23, scope: !4606)
!4610 = !{!"0x100\00unwind1\003373\000", !4606, !538, !157} ; [ DW_TAG_auto_variable ] [unwind1] [line 3373]
!4611 = !MDLocation(line: 3373, column: 11, scope: !4606)
!4612 = !{!"0x100\00uw\003374\000", !4606, !538, !511} ; [ DW_TAG_auto_variable ] [uw] [line 3374]
!4613 = !MDLocation(line: 3374, column: 27, scope: !4606)
!4614 = !MDLocation(line: 3377, column: 17, scope: !4606)
!4615 = !MDLocation(line: 3377, column: 7, scope: !4606)
!4616 = !MDLocation(line: 3378, column: 12, scope: !4606)
!4617 = !MDLocation(line: 3378, column: 7, scope: !4606)
!4618 = !MDLocation(line: 3379, column: 18, scope: !4606)
!4619 = !MDLocation(line: 3379, column: 7, scope: !4606)
!4620 = !MDLocation(line: 3380, column: 16, scope: !4606)
!4621 = !MDLocation(line: 3380, column: 7, scope: !4606)
!4622 = !MDLocation(line: 3381, column: 20, scope: !4606)
!4623 = !MDLocation(line: 3381, column: 19, scope: !4606)
!4624 = !MDLocation(line: 3381, column: 7, scope: !4606)
!4625 = !MDLocation(line: 3384, column: 23, scope: !4606)
!4626 = !MDLocation(line: 3384, column: 7, scope: !4606)
!4627 = !MDLocation(line: 3385, column: 18, scope: !4606)
!4628 = !MDLocation(line: 3385, column: 7, scope: !4606)
!4629 = !MDLocation(line: 3386, column: 22, scope: !4606)
!4630 = !MDLocation(line: 3386, column: 7, scope: !4606)
!4631 = !MDLocation(line: 3387, column: 21, scope: !4606)
!4632 = !MDLocation(line: 3387, column: 7, scope: !4606)
!4633 = !MDLocation(line: 3392, column: 7, scope: !4606)
!4634 = !MDLocation(line: 3395, column: 14, scope: !4606)
!4635 = !MDLocation(line: 3395, column: 7, scope: !4606)
!4636 = !MDLocation(line: 3398, column: 6, scope: !2508)
!4637 = !MDLocation(line: 3400, column: 6, scope: !2508)
!4638 = !MDLocation(line: 3401, column: 6, scope: !2508)
!4639 = !{!"0x100\00l\003404\000", !4640, !538, !157} ; [ DW_TAG_auto_variable ] [l] [line 3404]
!4640 = !{!"0xb\003403\002\00511", !1, !2508}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4641 = !MDLocation(line: 3404, column: 10, scope: !4640)
!4642 = !{!"0x100\00lastcp\003405\000", !4640, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 3405]
!4643 = !MDLocation(line: 3405, column: 17, scope: !4640)
!4644 = !MDLocation(line: 3410, column: 11, scope: !4640)
!4645 = !MDLocation(line: 3410, column: 6, scope: !4640)
!4646 = !MDLocation(line: 3411, column: 11, scope: !4640)
!4647 = !MDLocation(line: 3411, column: 6, scope: !4640)
!4648 = !MDLocation(line: 3412, column: 14, scope: !4640)
!4649 = !MDLocation(line: 3412, column: 6, scope: !4640)
!4650 = !MDLocation(line: 3413, column: 10, scope: !4651)
!4651 = !{!"0xb\003413\0010\00512", !1, !4640}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4652 = !MDLocation(line: 3413, column: 10, scope: !4640)
!4653 = !MDLocation(line: 3414, column: 7, scope: !4654)
!4654 = !{!"0xb\003414\007\00514", !1, !4655}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4655 = !{!"0xb\003413\0017\00513", !1, !4651}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4656 = !MDLocation(line: 3414, column: 15, scope: !4654)
!4657 = !MDLocation(line: 3414, column: 7, scope: !4655)
!4658 = !MDLocation(line: 3415, column: 20, scope: !4654)
!4659 = !MDLocation(line: 3415, column: 7, scope: !4654)
!4660 = !MDLocation(line: 3416, column: 7, scope: !4661)
!4661 = !{!"0xb\003416\007\00515", !1, !4655}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4662 = !MDLocation(line: 3416, column: 21, scope: !4661)
!4663 = !MDLocation(line: 3416, column: 20, scope: !4661)
!4664 = !MDLocation(line: 3416, column: 7, scope: !4655)
!4665 = !MDLocation(line: 3417, column: 26, scope: !4661)
!4666 = !MDLocation(line: 3417, column: 8, scope: !4661)
!4667 = !MDLocation(line: 3417, column: 7, scope: !4661)
!4668 = !MDLocation(line: 3418, column: 6, scope: !4655)
!4669 = !MDLocation(line: 3419, column: 13, scope: !4640)
!4670 = !MDLocation(line: 3419, column: 6, scope: !4640)
!4671 = !MDLocation(line: 3420, column: 10, scope: !4672)
!4672 = !{!"0xb\003420\0010\00516", !1, !4640}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4673 = !MDLocation(line: 3420, column: 10, scope: !4640)
!4674 = !MDLocation(line: 3421, column: 11, scope: !4672)
!4675 = !MDLocation(line: 3421, column: 3, scope: !4672)
!4676 = !MDLocation(line: 3422, column: 20, scope: !4640)
!4677 = !MDLocation(line: 3422, column: 6, scope: !4640)
!4678 = !MDLocation(line: 3423, column: 10, scope: !4679)
!4679 = !{!"0xb\003423\0010\00517", !1, !4640}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4680 = !MDLocation(line: 3423, column: 10, scope: !4640)
!4681 = !MDLocation(line: 3424, column: 3, scope: !4682)
!4682 = !{!"0xb\003423\0018\00518", !1, !4679}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4683 = !MDLocation(line: 3425, column: 7, scope: !4684)
!4684 = !{!"0xb\003425\007\00519", !1, !4682}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4685 = !MDLocation(line: 3425, column: 7, scope: !4682)
!4686 = !MDLocation(line: 3425, column: 28, scope: !4687)
!4687 = !{!"0xb\001", !1, !4684}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4688 = !MDLocation(line: 3425, column: 34, scope: !4684)
!4689 = !MDLocation(line: 3425, column: 13, scope: !4684)
!4690 = !MDLocation(line: 3425, column: 44, scope: !4684)
!4691 = !MDLocation(line: 3426, column: 7, scope: !4684)
!4692 = !MDLocation(line: 3427, column: 14, scope: !4682)
!4693 = !MDLocation(line: 3427, column: 3, scope: !4682)
!4694 = !MDLocation(line: 3428, column: 7, scope: !4695)
!4695 = !{!"0xb\003428\007\00520", !1, !4682}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4696 = !MDLocation(line: 3428, column: 7, scope: !4682)
!4697 = !MDLocation(line: 3428, column: 7, scope: !4698)
!4698 = !{!"0xb\001", !1, !4695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4699 = !MDLocation(line: 3428, column: 25, scope: !4700)
!4700 = !{!"0xb\002", !1, !4695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4701 = !MDLocation(line: 3428, column: 25, scope: !4702)
!4702 = !{!"0xb\003", !1, !4695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4703 = !MDLocation(line: 3428, column: 25, scope: !4704)
!4704 = !{!"0xb\004", !1, !4695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4705 = !MDLocation(line: 3428, column: 25, scope: !4706)
!4706 = !{!"0xb\005", !1, !4695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4707 = !MDLocation(line: 3428, column: 25, scope: !4708)
!4708 = !{!"0xb\006", !1, !4695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4709 = !MDLocation(line: 3428, column: 25, scope: !4710)
!4710 = !{!"0xb\007", !1, !4695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4711 = !MDLocation(line: 3428, column: 25, scope: !4712)
!4712 = !{!"0xb\008", !1, !4695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4713 = !MDLocation(line: 3428, column: 25, scope: !4714)
!4714 = !{!"0xb\009", !1, !4695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4715 = !MDLocation(line: 3428, column: 25, scope: !4716)
!4716 = !{!"0xb\0010", !1, !4695}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4717 = !{!"0x100\00text_node\003429\000", !4718, !538, !224} ; [ DW_TAG_auto_variable ] [text_node] [line 3429]
!4718 = !{!"0xb\003428\0041\00521", !1, !4695}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4719 = !MDLocation(line: 3429, column: 16, scope: !4718)
!4720 = !MDLocation(line: 3429, column: 28, scope: !4718)
!4721 = !MDLocation(line: 3431, column: 13, scope: !4722)
!4722 = !{!"0xb\003431\0011\00522", !1, !4718}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4723 = !MDLocation(line: 3431, column: 11, scope: !4718)
!4724 = !MDLocation(line: 3431, column: 13, scope: !4725)
!4725 = !{!"0xb\001", !1, !4722}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4726 = !MDLocation(line: 3431, column: 34, scope: !4727)
!4727 = !{!"0xb\002", !1, !4728}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4728 = !{!"0xb\003431\0034\00523", !1, !4722}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4729 = !MDLocation(line: 3431, column: 34, scope: !4730)
!4730 = !{!"0xb\0036", !1, !4731}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4731 = !{!"0xb\003", !1, !4728}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4732 = !MDLocation(line: 3431, column: 34, scope: !4733)
!4733 = !{!"0xb\005", !1, !4728}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4734 = !MDLocation(line: 3431, column: 34, scope: !4735)
!4735 = !{!"0xb\007", !1, !4728}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4736 = !MDLocation(line: 3431, column: 34, scope: !4737)
!4737 = !{!"0xb\009", !1, !4728}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4738 = !MDLocation(line: 3431, column: 34, scope: !4739)
!4739 = !{!"0xb\0011", !1, !4728}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4740 = !MDLocation(line: 3431, column: 34, scope: !4741)
!4741 = !{!"0xb\0013", !1, !4728}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4742 = !MDLocation(line: 3431, column: 34, scope: !4743)
!4743 = !{!"0xb\0015", !1, !4728}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4744 = !MDLocation(line: 3431, column: 34, scope: !4745)
!4745 = !{!"0xb\0017", !1, !4728}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4746 = !MDLocation(line: 3431, column: 34, scope: !4747)
!4747 = !{!"0xb\0018", !1, !4728}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4748 = !MDLocation(line: 3431, column: 34, scope: !4749)
!4749 = !{!"0xb\0019", !1, !4728}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4750 = !MDLocation(line: 3431, column: 34, scope: !4751)
!4751 = !{!"0xb\0020", !1, !4752}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4752 = !{!"0xb\0016", !1, !4753}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4753 = !{!"0xb\0014", !1, !4754}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4754 = !{!"0xb\0012", !1, !4755}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4755 = !{!"0xb\0010", !1, !4756}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4756 = !{!"0xb\008", !1, !4757}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4757 = !{!"0xb\006", !1, !4758}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4758 = !{!"0xb\004", !1, !4728}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4759 = !MDLocation(line: 3431, column: 34, scope: !4760)
!4760 = !{!"0xb\0021", !1, !4761}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4761 = !{!"0xb\003431\0034\00524", !1, !4728}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4762 = !MDLocation(line: 3431, column: 34, scope: !4728)
!4763 = !MDLocation(line: 3431, column: 34, scope: !4764)
!4764 = !{!"0xb\0024", !1, !4761}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4765 = !MDLocation(line: 3431, column: 34, scope: !4766)
!4766 = !{!"0xb\0025", !1, !4767}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4767 = !{!"0xb\0023", !1, !4761}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4768 = !MDLocation(line: 3431, column: 34, scope: !4769)
!4769 = !{!"0xb\0026", !1, !4770}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4770 = !{!"0xb\003431\0034\00525", !1, !4761}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4771 = !MDLocation(line: 3431, column: 34, scope: !4761)
!4772 = !MDLocation(line: 3431, column: 34, scope: !4773)
!4773 = !{!"0xb\0028", !1, !4770}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4774 = !MDLocation(line: 3431, column: 34, scope: !4775)
!4775 = !{!"0xb\0029", !1, !4776}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4776 = !{!"0xb\003431\0034\00526", !1, !4770}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4777 = !MDLocation(line: 3431, column: 34, scope: !4770)
!4778 = !MDLocation(line: 3431, column: 34, scope: !4779)
!4779 = !{!"0xb\0030", !1, !4776}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4780 = !MDLocation(line: 3431, column: 34, scope: !4781)
!4781 = !{!"0xb\0032", !1, !4776}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4782 = !MDLocation(line: 3431, column: 34, scope: !4783)
!4783 = !{!"0xb\0033", !1, !4776}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4784 = !MDLocation(line: 3431, column: 34, scope: !4776)
!4785 = !MDLocation(line: 3431, column: 34, scope: !4786)
!4786 = !{!"0xb\0035", !1, !4787}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4787 = !{!"0xb\0034", !1, !4776}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4788 = !MDLocation(line: 3431, column: 34, scope: !4789)
!4789 = !{!"0xb\0031", !1, !4776}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4790 = !MDLocation(line: 3431, column: 34, scope: !4791)
!4791 = !{!"0xb\0027", !1, !4728}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4792 = !MDLocation(line: 3431, column: 34, scope: !4793)
!4793 = !{!"0xb\0022", !1, !4722}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4794 = !MDLocation(line: 3433, column: 13, scope: !4795)
!4795 = !{!"0xb\003433\0011\00527", !1, !4718}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4796 = !MDLocation(line: 3433, column: 11, scope: !4718)
!4797 = !MDLocation(line: 3433, column: 13, scope: !4798)
!4798 = !{!"0xb\001", !1, !4795}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4799 = !MDLocation(line: 3433, column: 39, scope: !4800)
!4800 = !{!"0xb\002", !1, !4795}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4801 = !MDLocation(line: 3433, column: 34, scope: !4795)
!4802 = !MDLocation(line: 3435, column: 23, scope: !4803)
!4803 = !{!"0xb\003435\008\00529", !1, !4804}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4804 = !{!"0xb\003434\0012\00528", !1, !4795}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4805 = !MDLocation(line: 3435, column: 8, scope: !4803)
!4806 = !MDLocation(line: 3435, column: 8, scope: !4804)
!4807 = !MDLocation(line: 3436, column: 13, scope: !4808)
!4808 = !{!"0xb\003435\0046\00530", !1, !4803}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4809 = !MDLocation(line: 3436, column: 8, scope: !4808)
!4810 = !MDLocation(line: 3437, column: 8, scope: !4808)
!4811 = !MDLocation(line: 3439, column: 21, scope: !4812)
!4812 = !{!"0xb\003439\009\00531", !1, !4803}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4813 = !MDLocation(line: 3439, column: 20, scope: !4812)
!4814 = !MDLocation(line: 3439, column: 16, scope: !4812)
!4815 = !MDLocation(line: 3439, column: 11, scope: !4812)
!4816 = !MDLocation(line: 3440, column: 8, scope: !4817)
!4817 = !{!"0xb\003440\008\00532", !1, !4804}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4818 = !MDLocation(line: 3440, column: 8, scope: !4804)
!4819 = !MDLocation(line: 3440, column: 35, scope: !4820)
!4820 = !{!"0xb\001", !1, !4817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4821 = !MDLocation(line: 3441, column: 21, scope: !4817)
!4822 = !MDLocation(line: 3441, column: 13, scope: !4817)
!4823 = !MDLocation(line: 3441, column: 8, scope: !4817)
!4824 = !MDLocation(line: 3442, column: 13, scope: !4825)
!4825 = !{!"0xb\003442\0013\00533", !1, !4817}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4826 = !MDLocation(line: 3442, column: 13, scope: !4817)
!4827 = !MDLocation(line: 3442, column: 41, scope: !4828)
!4828 = !{!"0xb\001", !1, !4825}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4829 = !MDLocation(line: 3443, column: 28, scope: !4825)
!4830 = !MDLocation(line: 3443, column: 13, scope: !4825)
!4831 = !MDLocation(line: 3443, column: 8, scope: !4825)
!4832 = !MDLocation(line: 3445, column: 13, scope: !4825)
!4833 = !MDLocation(line: 3445, column: 8, scope: !4825)
!4834 = !MDLocation(line: 3447, column: 3, scope: !4718)
!4835 = !MDLocation(line: 3449, column: 12, scope: !4695)
!4836 = !MDLocation(line: 3449, column: 7, scope: !4695)
!4837 = !MDLocation(line: 3428, column: 25, scope: !4695)
!4838 = !MDLocation(line: 3451, column: 3, scope: !4682)
!4839 = !MDLocation(line: 3452, column: 3, scope: !4682)
!4840 = !MDLocation(line: 3452, column: 10, scope: !4841)
!4841 = !{!"0xb\007", !1, !4842}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4842 = !{!"0xb\001", !1, !4682}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4843 = !MDLocation(line: 3452, column: 15, scope: !4682)
!4844 = !MDLocation(line: 3452, column: 10, scope: !4682)
!4845 = !MDLocation(line: 3452, column: 22, scope: !4846)
!4846 = !{!"0xb\003", !1, !4682}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4847 = !MDLocation(line: 3452, column: 40, scope: !4848)
!4848 = !{!"0xb\004", !1, !4682}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4849 = !MDLocation(line: 3452, column: 10, scope: !4850)
!4850 = !{!"0xb\005", !1, !4682}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4851 = !MDLocation(line: 3452, column: 3, scope: !4852)
!4852 = !{!"0xb\006", !1, !4853}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4853 = !{!"0xb\002", !1, !4682}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4854 = !MDLocation(line: 3454, column: 11, scope: !4855)
!4855 = !{!"0xb\003454\0011\00535", !1, !4856}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4856 = !{!"0xb\003452\0049\00534", !1, !4682}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4857 = !MDLocation(line: 3454, column: 11, scope: !4856)
!4858 = !MDLocation(line: 3455, column: 4, scope: !4855)
!4859 = !MDLocation(line: 3455, column: 28, scope: !4855)
!4860 = !MDLocation(line: 3456, column: 4, scope: !4855)
!4861 = !MDLocation(line: 3456, column: 28, scope: !4855)
!4862 = !MDLocation(line: 3458, column: 8, scope: !4863)
!4863 = !{!"0xb\003458\008\00537", !1, !4864}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4864 = !{!"0xb\003457\007\00536", !1, !4855}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4865 = !MDLocation(line: 3458, column: 8, scope: !4864)
!4866 = !MDLocation(line: 3459, column: 12, scope: !4867)
!4867 = !{!"0xb\003459\0012\00539", !1, !4868}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4868 = !{!"0xb\003458\0015\00538", !1, !4863}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4869 = !MDLocation(line: 3459, column: 12, scope: !4868)
!4870 = !MDLocation(line: 3461, column: 9, scope: !4871)
!4871 = !{!"0xb\003459\0016\00540", !1, !4867}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4872 = !MDLocation(line: 3461, column: 9, scope: !4873)
!4873 = !{!"0xb\001", !1, !4871}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4874 = !MDLocation(line: 3461, column: 9, scope: !4875)
!4875 = !{!"0xb\002", !1, !4871}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4876 = !MDLocation(line: 3461, column: 33, scope: !4877)
!4877 = !{!"0xb\004", !1, !4878}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4878 = !{!"0xb\003", !1, !4871}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4879 = !MDLocation(line: 3460, column: 18, scope: !4871)
!4880 = !MDLocation(line: 3460, column: 5, scope: !4871)
!4881 = !MDLocation(line: 3462, column: 25, scope: !4871)
!4882 = !MDLocation(line: 3462, column: 39, scope: !4871)
!4883 = !MDLocation(line: 3462, column: 16, scope: !4871)
!4884 = !MDLocation(line: 3462, column: 5, scope: !4871)
!4885 = !MDLocation(line: 3463, column: 8, scope: !4871)
!4886 = !MDLocation(line: 3465, column: 16, scope: !4867)
!4887 = !MDLocation(line: 3465, column: 5, scope: !4867)
!4888 = !MDLocation(line: 3466, column: 4, scope: !4868)
!4889 = !MDLocation(line: 3467, column: 17, scope: !4890)
!4890 = !{!"0xb\003467\008\00541", !1, !4864}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4891 = !MDLocation(line: 3467, column: 8, scope: !4890)
!4892 = !MDLocation(line: 3467, column: 8, scope: !4864)
!4893 = !MDLocation(line: 3468, column: 8, scope: !4890)
!4894 = !MDLocation(line: 3469, column: 4, scope: !4895)
!4895 = !{!"0xb\003469\004\00542", !1, !4864}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4896 = !MDLocation(line: 3469, column: 4, scope: !4864)
!4897 = !MDLocation(line: 3469, column: 4, scope: !4898)
!4898 = !{!"0xb\001", !1, !4895}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4899 = !MDLocation(line: 3470, column: 7, scope: !4864)
!4900 = !MDLocation(line: 3472, column: 21, scope: !4856)
!4901 = !MDLocation(line: 3472, column: 7, scope: !4856)
!4902 = !MDLocation(line: 3473, column: 26, scope: !4903)
!4903 = !{!"0xb\003473\0011\00543", !1, !4856}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4904 = !MDLocation(line: 3473, column: 11, scope: !4903)
!4905 = !MDLocation(line: 3473, column: 11, scope: !4856)
!4906 = !MDLocation(line: 3474, column: 4, scope: !4907)
!4907 = !{!"0xb\003473\0040\00544", !1, !4903}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4908 = !MDLocation(line: 3475, column: 15, scope: !4907)
!4909 = !MDLocation(line: 3475, column: 4, scope: !4907)
!4910 = !MDLocation(line: 3476, column: 7, scope: !4907)
!4911 = !MDLocation(line: 3478, column: 4, scope: !4903)
!4912 = !MDLocation(line: 3480, column: 6, scope: !4682)
!4913 = !MDLocation(line: 3482, column: 22, scope: !4914)
!4914 = !{!"0xb\003481\0011\00545", !1, !4679}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4915 = !MDLocation(line: 3482, column: 28, scope: !4914)
!4916 = !MDLocation(line: 3482, column: 7, scope: !4914)
!4917 = !MDLocation(line: 3482, column: 3, scope: !4914)
!4918 = !MDLocation(line: 3483, column: 14, scope: !4914)
!4919 = !MDLocation(line: 3483, column: 3, scope: !4914)
!4920 = !MDLocation(line: 3490, column: 7, scope: !4921)
!4921 = !{!"0xb\003490\007\00546", !1, !4914}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4922 = !MDLocation(line: 3490, column: 12, scope: !4921)
!4923 = !MDLocation(line: 3490, column: 7, scope: !4914)
!4924 = !MDLocation(line: 3491, column: 11, scope: !4925)
!4925 = !{!"0xb\003491\0011\00548", !1, !4926}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4926 = !{!"0xb\003490\0016\00547", !1, !4921}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4927 = !MDLocation(line: 3491, column: 11, scope: !4926)
!4928 = !MDLocation(line: 3491, column: 11, scope: !4929)
!4929 = !{!"0xb\001", !1, !4925}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4930 = !MDLocation(line: 3491, column: 29, scope: !4931)
!4931 = !{!"0xb\002", !1, !4925}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4932 = !MDLocation(line: 3491, column: 29, scope: !4933)
!4933 = !{!"0xb\003", !1, !4925}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4934 = !MDLocation(line: 3491, column: 29, scope: !4935)
!4935 = !{!"0xb\004", !1, !4925}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4936 = !MDLocation(line: 3491, column: 29, scope: !4937)
!4937 = !{!"0xb\005", !1, !4925}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4938 = !MDLocation(line: 3491, column: 29, scope: !4939)
!4939 = !{!"0xb\006", !1, !4925}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4940 = !MDLocation(line: 3491, column: 29, scope: !4941)
!4941 = !{!"0xb\007", !1, !4925}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4942 = !MDLocation(line: 3491, column: 29, scope: !4943)
!4943 = !{!"0xb\008", !1, !4925}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4944 = !MDLocation(line: 3491, column: 29, scope: !4945)
!4945 = !{!"0xb\009", !1, !4925}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4946 = !MDLocation(line: 3491, column: 29, scope: !4947)
!4947 = !{!"0xb\0010", !1, !4925}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4948 = !{!"0x100\00text_node\003492\000", !4949, !538, !224} ; [ DW_TAG_auto_variable ] [text_node] [line 3492]
!4949 = !{!"0xb\003491\0045\00549", !1, !4925}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4950 = !MDLocation(line: 3492, column: 13, scope: !4949)
!4951 = !MDLocation(line: 3492, column: 25, scope: !4949)
!4952 = !MDLocation(line: 3494, column: 10, scope: !4953)
!4953 = !{!"0xb\003494\008\00550", !1, !4949}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4954 = !MDLocation(line: 3494, column: 8, scope: !4949)
!4955 = !MDLocation(line: 3494, column: 10, scope: !4956)
!4956 = !{!"0xb\001", !1, !4953}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4957 = !MDLocation(line: 3494, column: 31, scope: !4958)
!4958 = !{!"0xb\002", !1, !4959}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4959 = !{!"0xb\003494\0031\00551", !1, !4953}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4960 = !MDLocation(line: 3494, column: 31, scope: !4961)
!4961 = !{!"0xb\0036", !1, !4962}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4962 = !{!"0xb\003", !1, !4959}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4963 = !MDLocation(line: 3494, column: 31, scope: !4964)
!4964 = !{!"0xb\005", !1, !4959}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4965 = !MDLocation(line: 3494, column: 31, scope: !4966)
!4966 = !{!"0xb\007", !1, !4959}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4967 = !MDLocation(line: 3494, column: 31, scope: !4968)
!4968 = !{!"0xb\009", !1, !4959}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4969 = !MDLocation(line: 3494, column: 31, scope: !4970)
!4970 = !{!"0xb\0011", !1, !4959}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4971 = !MDLocation(line: 3494, column: 31, scope: !4972)
!4972 = !{!"0xb\0013", !1, !4959}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4973 = !MDLocation(line: 3494, column: 31, scope: !4974)
!4974 = !{!"0xb\0015", !1, !4959}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4975 = !MDLocation(line: 3494, column: 31, scope: !4976)
!4976 = !{!"0xb\0017", !1, !4959}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4977 = !MDLocation(line: 3494, column: 31, scope: !4978)
!4978 = !{!"0xb\0018", !1, !4959}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4979 = !MDLocation(line: 3494, column: 31, scope: !4980)
!4980 = !{!"0xb\0019", !1, !4959}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4981 = !MDLocation(line: 3494, column: 31, scope: !4982)
!4982 = !{!"0xb\0020", !1, !4983}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4983 = !{!"0xb\0016", !1, !4984}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4984 = !{!"0xb\0014", !1, !4985}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4985 = !{!"0xb\0012", !1, !4986}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4986 = !{!"0xb\0010", !1, !4987}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4987 = !{!"0xb\008", !1, !4988}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4988 = !{!"0xb\006", !1, !4989}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4989 = !{!"0xb\004", !1, !4959}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4990 = !MDLocation(line: 3494, column: 31, scope: !4991)
!4991 = !{!"0xb\0021", !1, !4992}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4992 = !{!"0xb\003494\0031\00552", !1, !4959}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4993 = !MDLocation(line: 3494, column: 31, scope: !4959)
!4994 = !MDLocation(line: 3494, column: 31, scope: !4995)
!4995 = !{!"0xb\0024", !1, !4992}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4996 = !MDLocation(line: 3494, column: 31, scope: !4997)
!4997 = !{!"0xb\0025", !1, !4998}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4998 = !{!"0xb\0023", !1, !4992}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4999 = !MDLocation(line: 3494, column: 31, scope: !5000)
!5000 = !{!"0xb\0026", !1, !5001}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5001 = !{!"0xb\003494\0031\00553", !1, !4992}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5002 = !MDLocation(line: 3494, column: 31, scope: !4992)
!5003 = !MDLocation(line: 3494, column: 31, scope: !5004)
!5004 = !{!"0xb\0028", !1, !5001}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5005 = !MDLocation(line: 3494, column: 31, scope: !5006)
!5006 = !{!"0xb\0029", !1, !5007}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5007 = !{!"0xb\003494\0031\00554", !1, !5001}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5008 = !MDLocation(line: 3494, column: 31, scope: !5001)
!5009 = !MDLocation(line: 3494, column: 31, scope: !5010)
!5010 = !{!"0xb\0030", !1, !5007}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5011 = !MDLocation(line: 3494, column: 31, scope: !5012)
!5012 = !{!"0xb\0032", !1, !5007}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5013 = !MDLocation(line: 3494, column: 31, scope: !5014)
!5014 = !{!"0xb\0033", !1, !5007}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5015 = !MDLocation(line: 3494, column: 31, scope: !5007)
!5016 = !MDLocation(line: 3494, column: 31, scope: !5017)
!5017 = !{!"0xb\0035", !1, !5018}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5018 = !{!"0xb\0034", !1, !5007}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5019 = !MDLocation(line: 3494, column: 31, scope: !5020)
!5020 = !{!"0xb\0031", !1, !5007}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5021 = !MDLocation(line: 3494, column: 31, scope: !5022)
!5022 = !{!"0xb\0027", !1, !4959}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5023 = !MDLocation(line: 3494, column: 31, scope: !5024)
!5024 = !{!"0xb\0022", !1, !4953}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5025 = !MDLocation(line: 3496, column: 10, scope: !5026)
!5026 = !{!"0xb\003496\008\00555", !1, !4949}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5027 = !MDLocation(line: 3496, column: 8, scope: !4949)
!5028 = !MDLocation(line: 3496, column: 10, scope: !5029)
!5029 = !{!"0xb\001", !1, !5026}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5030 = !MDLocation(line: 3496, column: 36, scope: !5031)
!5031 = !{!"0xb\002", !1, !5026}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5032 = !MDLocation(line: 3496, column: 31, scope: !5026)
!5033 = !MDLocation(line: 3498, column: 27, scope: !5034)
!5034 = !{!"0xb\003498\0012\00557", !1, !5035}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5035 = !{!"0xb\003497\009\00556", !1, !5026}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5036 = !MDLocation(line: 3498, column: 12, scope: !5034)
!5037 = !MDLocation(line: 3498, column: 12, scope: !5035)
!5038 = !MDLocation(line: 3499, column: 10, scope: !5039)
!5039 = !{!"0xb\003498\0050\00558", !1, !5034}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5040 = !MDLocation(line: 3499, column: 5, scope: !5039)
!5041 = !MDLocation(line: 3500, column: 5, scope: !5039)
!5042 = !MDLocation(line: 3502, column: 25, scope: !5043)
!5043 = !{!"0xb\003502\0013\00559", !1, !5034}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5044 = !MDLocation(line: 3502, column: 24, scope: !5043)
!5045 = !MDLocation(line: 3502, column: 20, scope: !5043)
!5046 = !MDLocation(line: 3502, column: 15, scope: !5043)
!5047 = !MDLocation(line: 3504, column: 12, scope: !5048)
!5048 = !{!"0xb\003504\0012\00560", !1, !5035}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5049 = !MDLocation(line: 3504, column: 12, scope: !5035)
!5050 = !MDLocation(line: 3504, column: 39, scope: !5051)
!5051 = !{!"0xb\001", !1, !5048}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5052 = !MDLocation(line: 3505, column: 18, scope: !5048)
!5053 = !MDLocation(line: 3505, column: 10, scope: !5048)
!5054 = !MDLocation(line: 3505, column: 5, scope: !5048)
!5055 = !MDLocation(line: 3506, column: 17, scope: !5056)
!5056 = !{!"0xb\003506\0017\00561", !1, !5048}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5057 = !MDLocation(line: 3506, column: 17, scope: !5048)
!5058 = !MDLocation(line: 3506, column: 45, scope: !5059)
!5059 = !{!"0xb\001", !1, !5056}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5060 = !MDLocation(line: 3507, column: 25, scope: !5056)
!5061 = !MDLocation(line: 3507, column: 10, scope: !5056)
!5062 = !MDLocation(line: 3507, column: 5, scope: !5056)
!5063 = !MDLocation(line: 3509, column: 10, scope: !5056)
!5064 = !MDLocation(line: 3509, column: 5, scope: !5056)
!5065 = !MDLocation(line: 3511, column: 7, scope: !4949)
!5066 = !MDLocation(line: 3513, column: 9, scope: !4925)
!5067 = !MDLocation(line: 3513, column: 4, scope: !4925)
!5068 = !MDLocation(line: 3514, column: 3, scope: !4926)
!5069 = !MDLocation(line: 3490, column: 12, scope: !5070)
!5070 = !{!"0xb\001", !1, !4921}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5071 = !MDLocation(line: 3516, column: 3, scope: !4914)
!5072 = !MDLocation(line: 3517, column: 3, scope: !4914)
!5073 = !MDLocation(line: 3517, column: 10, scope: !5074)
!5074 = !{!"0xb\002", !1, !5075}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5075 = !{!"0xb\001", !1, !4914}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5076 = !MDLocation(line: 3517, column: 15, scope: !4914)
!5077 = !MDLocation(line: 3517, column: 10, scope: !4914)
!5078 = !MDLocation(line: 3519, column: 11, scope: !5079)
!5079 = !{!"0xb\003519\0011\00563", !1, !5080}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5080 = !{!"0xb\003517\0019\00562", !1, !4914}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5081 = !MDLocation(line: 3519, column: 11, scope: !5080)
!5082 = !MDLocation(line: 3520, column: 4, scope: !5079)
!5083 = !MDLocation(line: 3520, column: 28, scope: !5079)
!5084 = !MDLocation(line: 3521, column: 4, scope: !5079)
!5085 = !MDLocation(line: 3521, column: 28, scope: !5079)
!5086 = !MDLocation(line: 3528, column: 8, scope: !5087)
!5087 = !{!"0xb\003528\008\00565", !1, !5088}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5088 = !{!"0xb\003522\007\00564", !1, !5079}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5089 = !MDLocation(line: 3528, column: 8, scope: !5088)
!5090 = !MDLocation(line: 3529, column: 12, scope: !5091)
!5091 = !{!"0xb\003529\0012\00567", !1, !5092}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5092 = !{!"0xb\003528\0015\00566", !1, !5087}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5093 = !MDLocation(line: 3529, column: 12, scope: !5092)
!5094 = !MDLocation(line: 3530, column: 27, scope: !5095)
!5095 = !{!"0xb\003529\0015\00568", !1, !5091}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5096 = !MDLocation(line: 3530, column: 27, scope: !5097)
!5097 = !{!"0xb\001", !1, !5095}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5098 = !MDLocation(line: 3530, column: 27, scope: !5099)
!5099 = !{!"0xb\002", !1, !5095}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5100 = !MDLocation(line: 3530, column: 51, scope: !5101)
!5101 = !{!"0xb\004", !1, !5102}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5102 = !{!"0xb\003", !1, !5095}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5103 = !MDLocation(line: 3530, column: 18, scope: !5095)
!5104 = !MDLocation(line: 3530, column: 5, scope: !5095)
!5105 = !MDLocation(line: 3531, column: 25, scope: !5095)
!5106 = !MDLocation(line: 3531, column: 39, scope: !5095)
!5107 = !MDLocation(line: 3531, column: 16, scope: !5095)
!5108 = !MDLocation(line: 3531, column: 5, scope: !5095)
!5109 = !MDLocation(line: 3532, column: 8, scope: !5095)
!5110 = !MDLocation(line: 3534, column: 16, scope: !5091)
!5111 = !MDLocation(line: 3534, column: 5, scope: !5091)
!5112 = !MDLocation(line: 3535, column: 4, scope: !5092)
!5113 = !MDLocation(line: 3536, column: 17, scope: !5114)
!5114 = !{!"0xb\003536\008\00569", !1, !5088}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5115 = !MDLocation(line: 3536, column: 8, scope: !5114)
!5116 = !MDLocation(line: 3536, column: 8, scope: !5088)
!5117 = !MDLocation(line: 3537, column: 8, scope: !5114)
!5118 = !MDLocation(line: 3538, column: 4, scope: !5119)
!5119 = !{!"0xb\003538\004\00570", !1, !5088}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5120 = !MDLocation(line: 3538, column: 4, scope: !5088)
!5121 = !MDLocation(line: 3538, column: 4, scope: !5122)
!5122 = !{!"0xb\001", !1, !5119}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5123 = !MDLocation(line: 3539, column: 7, scope: !5088)
!5124 = !MDLocation(line: 3541, column: 7, scope: !5080)
!5125 = !MDLocation(line: 3542, column: 18, scope: !5080)
!5126 = !MDLocation(line: 3542, column: 18, scope: !5127)
!5127 = !{!"0xb\001", !1, !5080}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5128 = !MDLocation(line: 3542, column: 18, scope: !5129)
!5129 = !{!"0xb\002", !1, !5080}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5130 = !MDLocation(line: 3542, column: 7, scope: !5131)
!5131 = !{!"0xb\004", !1, !5132}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5132 = !{!"0xb\003", !1, !5080}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5133 = !MDLocation(line: 3543, column: 21, scope: !5080)
!5134 = !MDLocation(line: 3543, column: 7, scope: !5080)
!5135 = !MDLocation(line: 3546, column: 6, scope: !4640)
!5136 = !MDLocation(line: 3550, column: 14, scope: !2508)
!5137 = !MDLocation(line: 3550, column: 6, scope: !2508)
!5138 = !MDLocation(line: 3551, column: 10, scope: !5139)
!5139 = !{!"0xb\003551\0010\00571", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5140 = !MDLocation(line: 3551, column: 18, scope: !5139)
!5141 = !MDLocation(line: 3551, column: 10, scope: !2508)
!5142 = !MDLocation(line: 3552, column: 16, scope: !5139)
!5143 = !MDLocation(line: 3552, column: 3, scope: !5139)
!5144 = !MDLocation(line: 3553, column: 10, scope: !5145)
!5145 = !{!"0xb\003553\0010\00572", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5146 = !MDLocation(line: 3553, column: 24, scope: !5145)
!5147 = !MDLocation(line: 3553, column: 23, scope: !5145)
!5148 = !MDLocation(line: 3553, column: 10, scope: !2508)
!5149 = !MDLocation(line: 3554, column: 22, scope: !5145)
!5150 = !MDLocation(line: 3554, column: 4, scope: !5145)
!5151 = !MDLocation(line: 3554, column: 3, scope: !5145)
!5152 = !MDLocation(line: 3555, column: 11, scope: !2508)
!5153 = !MDLocation(line: 3555, column: 6, scope: !2508)
!5154 = !MDLocation(line: 3556, column: 11, scope: !2508)
!5155 = !MDLocation(line: 3556, column: 6, scope: !2508)
!5156 = !MDLocation(line: 3557, column: 28, scope: !2508)
!5157 = !MDLocation(line: 3557, column: 20, scope: !2508)
!5158 = !MDLocation(line: 3557, column: 13, scope: !2508)
!5159 = !MDLocation(line: 3558, column: 6, scope: !2508)
!5160 = !MDLocation(line: 3560, column: 6, scope: !2508)
!5161 = !MDLocation(line: 3561, column: 11, scope: !2508)
!5162 = !MDLocation(line: 3561, column: 6, scope: !2508)
!5163 = !MDLocation(line: 3562, column: 11, scope: !2508)
!5164 = !MDLocation(line: 3562, column: 6, scope: !2508)
!5165 = !MDLocation(line: 3563, column: 13, scope: !2508)
!5166 = !MDLocation(line: 3563, column: 6, scope: !2508)
!5167 = !MDLocation(line: 3564, column: 6, scope: !2508)
!5168 = !MDLocation(line: 3566, column: 6, scope: !2508)
!5169 = !MDLocation(line: 3567, column: 6, scope: !2508)
!5170 = !MDLocation(line: 3568, column: 13, scope: !2508)
!5171 = !MDLocation(line: 3568, column: 6, scope: !2508)
!5172 = !MDLocation(line: 3569, column: 6, scope: !2508)
!5173 = !MDLocation(line: 3570, column: 6, scope: !2508)
!5174 = !MDLocation(line: 3572, column: 6, scope: !2508)
!5175 = !MDLocation(line: 3573, column: 6, scope: !2508)
!5176 = !MDLocation(line: 3574, column: 13, scope: !2508)
!5177 = !MDLocation(line: 3574, column: 6, scope: !2508)
!5178 = !MDLocation(line: 3575, column: 6, scope: !2508)
!5179 = !MDLocation(line: 3588, column: 10, scope: !5180)
!5180 = !{!"0xb\003588\0010\00573", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5181 = !MDLocation(line: 3588, column: 10, scope: !2508)
!5182 = !MDLocation(line: 3588, column: 10, scope: !5183)
!5183 = !{!"0xb\001", !1, !5180}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5184 = !MDLocation(line: 3588, column: 28, scope: !5185)
!5185 = !{!"0xb\002", !1, !5180}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5186 = !MDLocation(line: 3588, column: 28, scope: !5187)
!5187 = !{!"0xb\003", !1, !5180}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5188 = !MDLocation(line: 3588, column: 28, scope: !5189)
!5189 = !{!"0xb\004", !1, !5180}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5190 = !MDLocation(line: 3588, column: 28, scope: !5191)
!5191 = !{!"0xb\005", !1, !5180}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5192 = !MDLocation(line: 3588, column: 28, scope: !5193)
!5193 = !{!"0xb\006", !1, !5180}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5194 = !MDLocation(line: 3588, column: 28, scope: !5195)
!5195 = !{!"0xb\007", !1, !5180}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5196 = !MDLocation(line: 3588, column: 28, scope: !5197)
!5197 = !{!"0xb\008", !1, !5180}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5198 = !MDLocation(line: 3588, column: 28, scope: !5199)
!5199 = !{!"0xb\009", !1, !5180}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5200 = !MDLocation(line: 3588, column: 28, scope: !5201)
!5201 = !{!"0xb\0010", !1, !5180}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5202 = !{!"0x100\00s\003589\000", !5203, !538, !53} ; [ DW_TAG_auto_variable ] [s] [line 3589]
!5203 = !{!"0xb\003588\0044\00574", !1, !5180}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5204 = !MDLocation(line: 3589, column: 7, scope: !5203)
!5205 = !{!"0x100\00text_node\003590\000", !5203, !538, !224} ; [ DW_TAG_auto_variable ] [text_node] [line 3590]
!5206 = !MDLocation(line: 3590, column: 12, scope: !5203)
!5207 = !MDLocation(line: 3590, column: 24, scope: !5203)
!5208 = !MDLocation(line: 3592, column: 9, scope: !5209)
!5209 = !{!"0xb\003592\007\00575", !1, !5203}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5210 = !MDLocation(line: 3592, column: 7, scope: !5203)
!5211 = !MDLocation(line: 3592, column: 9, scope: !5212)
!5212 = !{!"0xb\001", !1, !5209}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5213 = !MDLocation(line: 3592, column: 30, scope: !5214)
!5214 = !{!"0xb\002", !1, !5215}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5215 = !{!"0xb\003592\0030\00576", !1, !5209}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5216 = !MDLocation(line: 3592, column: 30, scope: !5217)
!5217 = !{!"0xb\0036", !1, !5218}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5218 = !{!"0xb\003", !1, !5215}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5219 = !MDLocation(line: 3592, column: 30, scope: !5220)
!5220 = !{!"0xb\005", !1, !5215}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5221 = !MDLocation(line: 3592, column: 30, scope: !5222)
!5222 = !{!"0xb\007", !1, !5215}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5223 = !MDLocation(line: 3592, column: 30, scope: !5224)
!5224 = !{!"0xb\009", !1, !5215}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5225 = !MDLocation(line: 3592, column: 30, scope: !5226)
!5226 = !{!"0xb\0011", !1, !5215}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5227 = !MDLocation(line: 3592, column: 30, scope: !5228)
!5228 = !{!"0xb\0013", !1, !5215}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5229 = !MDLocation(line: 3592, column: 30, scope: !5230)
!5230 = !{!"0xb\0015", !1, !5215}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5231 = !MDLocation(line: 3592, column: 30, scope: !5232)
!5232 = !{!"0xb\0017", !1, !5215}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5233 = !MDLocation(line: 3592, column: 30, scope: !5234)
!5234 = !{!"0xb\0018", !1, !5215}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5235 = !MDLocation(line: 3592, column: 30, scope: !5236)
!5236 = !{!"0xb\0019", !1, !5215}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5237 = !MDLocation(line: 3592, column: 30, scope: !5238)
!5238 = !{!"0xb\0020", !1, !5239}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5239 = !{!"0xb\0016", !1, !5240}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5240 = !{!"0xb\0014", !1, !5241}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5241 = !{!"0xb\0012", !1, !5242}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5242 = !{!"0xb\0010", !1, !5243}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5243 = !{!"0xb\008", !1, !5244}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5244 = !{!"0xb\006", !1, !5245}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5245 = !{!"0xb\004", !1, !5215}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5246 = !MDLocation(line: 3592, column: 30, scope: !5247)
!5247 = !{!"0xb\0021", !1, !5248}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5248 = !{!"0xb\003592\0030\00577", !1, !5215}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5249 = !MDLocation(line: 3592, column: 30, scope: !5215)
!5250 = !MDLocation(line: 3592, column: 30, scope: !5251)
!5251 = !{!"0xb\0024", !1, !5248}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5252 = !MDLocation(line: 3592, column: 30, scope: !5253)
!5253 = !{!"0xb\0025", !1, !5254}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5254 = !{!"0xb\0023", !1, !5248}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5255 = !MDLocation(line: 3592, column: 30, scope: !5256)
!5256 = !{!"0xb\0026", !1, !5257}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5257 = !{!"0xb\003592\0030\00578", !1, !5248}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5258 = !MDLocation(line: 3592, column: 30, scope: !5248)
!5259 = !MDLocation(line: 3592, column: 30, scope: !5260)
!5260 = !{!"0xb\0028", !1, !5257}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5261 = !MDLocation(line: 3592, column: 30, scope: !5262)
!5262 = !{!"0xb\0029", !1, !5263}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5263 = !{!"0xb\003592\0030\00579", !1, !5257}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5264 = !MDLocation(line: 3592, column: 30, scope: !5257)
!5265 = !MDLocation(line: 3592, column: 30, scope: !5266)
!5266 = !{!"0xb\0030", !1, !5263}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5267 = !MDLocation(line: 3592, column: 30, scope: !5268)
!5268 = !{!"0xb\0032", !1, !5263}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5269 = !MDLocation(line: 3592, column: 30, scope: !5270)
!5270 = !{!"0xb\0033", !1, !5263}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5271 = !MDLocation(line: 3592, column: 30, scope: !5263)
!5272 = !MDLocation(line: 3592, column: 30, scope: !5273)
!5273 = !{!"0xb\0035", !1, !5274}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5274 = !{!"0xb\0034", !1, !5263}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5275 = !MDLocation(line: 3592, column: 30, scope: !5276)
!5276 = !{!"0xb\0031", !1, !5263}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5277 = !MDLocation(line: 3592, column: 30, scope: !5278)
!5278 = !{!"0xb\0027", !1, !5215}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5279 = !MDLocation(line: 3592, column: 30, scope: !5280)
!5280 = !{!"0xb\0022", !1, !5209}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5281 = !MDLocation(line: 3594, column: 9, scope: !5282)
!5282 = !{!"0xb\003594\007\00580", !1, !5203}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5283 = !MDLocation(line: 3594, column: 7, scope: !5203)
!5284 = !MDLocation(line: 3594, column: 9, scope: !5285)
!5285 = !{!"0xb\001", !1, !5282}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5286 = !MDLocation(line: 3594, column: 35, scope: !5287)
!5287 = !{!"0xb\002", !1, !5282}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5288 = !MDLocation(line: 3594, column: 30, scope: !5282)
!5289 = !MDLocation(line: 3596, column: 26, scope: !5290)
!5290 = !{!"0xb\003596\0011\00582", !1, !5291}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5291 = !{!"0xb\003595\008\00581", !1, !5282}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5292 = !MDLocation(line: 3596, column: 11, scope: !5290)
!5293 = !MDLocation(line: 3596, column: 11, scope: !5291)
!5294 = !MDLocation(line: 3597, column: 9, scope: !5295)
!5295 = !{!"0xb\003596\0049\00583", !1, !5290}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5296 = !MDLocation(line: 3597, column: 4, scope: !5295)
!5297 = !MDLocation(line: 3598, column: 4, scope: !5295)
!5298 = !MDLocation(line: 3600, column: 23, scope: !5299)
!5299 = !{!"0xb\003600\0012\00584", !1, !5290}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5300 = !MDLocation(line: 3600, column: 14, scope: !5299)
!5301 = !MDLocation(line: 3602, column: 12, scope: !5302)
!5302 = !{!"0xb\003602\0011\00585", !1, !5291}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5303 = !MDLocation(line: 3602, column: 11, scope: !5291)
!5304 = !MDLocation(line: 3603, column: 15, scope: !5305)
!5305 = !{!"0xb\003602\0017\00586", !1, !5302}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5306 = !MDLocation(line: 3603, column: 14, scope: !5305)
!5307 = !MDLocation(line: 3603, column: 9, scope: !5305)
!5308 = !MDLocation(line: 3603, column: 4, scope: !5305)
!5309 = !MDLocation(line: 3604, column: 8, scope: !5310)
!5310 = !{!"0xb\003604\008\00587", !1, !5305}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5311 = !MDLocation(line: 3604, column: 8, scope: !5305)
!5312 = !MDLocation(line: 3604, column: 35, scope: !5313)
!5313 = !{!"0xb\001", !1, !5310}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5314 = !MDLocation(line: 3605, column: 21, scope: !5310)
!5315 = !MDLocation(line: 3605, column: 13, scope: !5310)
!5316 = !MDLocation(line: 3605, column: 8, scope: !5310)
!5317 = !MDLocation(line: 3606, column: 13, scope: !5318)
!5318 = !{!"0xb\003606\0013\00588", !1, !5310}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5319 = !MDLocation(line: 3606, column: 13, scope: !5310)
!5320 = !MDLocation(line: 3606, column: 41, scope: !5321)
!5321 = !{!"0xb\001", !1, !5318}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5322 = !MDLocation(line: 3607, column: 28, scope: !5318)
!5323 = !MDLocation(line: 3607, column: 13, scope: !5318)
!5324 = !MDLocation(line: 3607, column: 8, scope: !5318)
!5325 = !MDLocation(line: 3608, column: 7, scope: !5305)
!5326 = !MDLocation(line: 3610, column: 8, scope: !5327)
!5327 = !{!"0xb\003610\008\00590", !1, !5328}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5328 = !{!"0xb\003609\0012\00589", !1, !5302}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5329 = !MDLocation(line: 3610, column: 8, scope: !5328)
!5330 = !MDLocation(line: 3610, column: 35, scope: !5331)
!5331 = !{!"0xb\001", !1, !5327}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5332 = !{!"0x100\00ulen1\003611\000", !5333, !538, !48} ; [ DW_TAG_auto_variable ] [ulen1] [line 3611]
!5333 = !{!"0xb\003610\0058\00591", !1, !5327}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5334 = !MDLocation(line: 3611, column: 16, scope: !5333)
!5335 = !{!"0x100\00ulen2\003611\000", !5333, !538, !48} ; [ DW_TAG_auto_variable ] [ulen2] [line 3611]
!5336 = !MDLocation(line: 3611, column: 23, scope: !5333)
!5337 = !{!"0x100\00tmpbuf1\003612\000", !5333, !538, !3553} ; [ DW_TAG_auto_variable ] [tmpbuf1] [line 3612]
!5338 = !MDLocation(line: 3612, column: 12, scope: !5333)
!5339 = !{!"0x100\00tmpbuf2\003613\000", !5333, !538, !3553} ; [ DW_TAG_auto_variable ] [tmpbuf2] [line 3613]
!5340 = !MDLocation(line: 3613, column: 12, scope: !5333)
!5341 = !MDLocation(line: 3615, column: 28, scope: !5333)
!5342 = !MDLocation(line: 3615, column: 31, scope: !5333)
!5343 = !MDLocation(line: 3615, column: 9, scope: !5333)
!5344 = !MDLocation(line: 3616, column: 28, scope: !5333)
!5345 = !MDLocation(line: 3616, column: 31, scope: !5333)
!5346 = !MDLocation(line: 3616, column: 9, scope: !5333)
!5347 = !MDLocation(line: 3618, column: 29, scope: !5333)
!5348 = !MDLocation(line: 3619, column: 8, scope: !5333)
!5349 = !MDLocation(line: 3619, column: 8, scope: !5350)
!5350 = !{!"0xb\001", !1, !5333}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5351 = !MDLocation(line: 3619, column: 8, scope: !5352)
!5352 = !{!"0xb\003", !1, !5333}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5353 = !MDLocation(line: 3619, column: 8, scope: !5354)
!5354 = !{!"0xb\006", !1, !5333}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5355 = !MDLocation(line: 3619, column: 8, scope: !5356)
!5356 = !{!"0xb\008", !1, !5357}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5357 = !{!"0xb\004", !1, !5358}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5358 = !{!"0xb\002", !1, !5333}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5359 = !MDLocation(line: 3619, column: 8, scope: !5360)
!5360 = !{!"0xb\009", !1, !5333}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5361 = !MDLocation(line: 3619, column: 8, scope: !5362)
!5362 = !{!"0xb\0010", !1, !5333}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5363 = !MDLocation(line: 3619, column: 8, scope: !5364)
!5364 = !{!"0xb\0011", !1, !5365}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5365 = !{!"0xb\007", !1, !5366}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5366 = !{!"0xb\005", !1, !5333}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5367 = !MDLocation(line: 3618, column: 14, scope: !5333)
!5368 = !MDLocation(line: 3618, column: 9, scope: !5333)
!5369 = !MDLocation(line: 3621, column: 29, scope: !5333)
!5370 = !MDLocation(line: 3622, column: 8, scope: !5333)
!5371 = !MDLocation(line: 3622, column: 8, scope: !5350)
!5372 = !MDLocation(line: 3622, column: 8, scope: !5352)
!5373 = !MDLocation(line: 3622, column: 8, scope: !5354)
!5374 = !MDLocation(line: 3622, column: 8, scope: !5356)
!5375 = !MDLocation(line: 3622, column: 8, scope: !5360)
!5376 = !MDLocation(line: 3622, column: 8, scope: !5362)
!5377 = !MDLocation(line: 3622, column: 8, scope: !5364)
!5378 = !MDLocation(line: 3621, column: 14, scope: !5333)
!5379 = !MDLocation(line: 3621, column: 9, scope: !5333)
!5380 = !MDLocation(line: 3624, column: 4, scope: !5333)
!5381 = !MDLocation(line: 3626, column: 33, scope: !5382)
!5382 = !{!"0xb\003625\009\00592", !1, !5327}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5383 = !MDLocation(line: 3627, column: 12, scope: !5382)
!5384 = !MDLocation(line: 3627, column: 12, scope: !5385)
!5385 = !{!"0xb\001", !1, !5382}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5386 = !MDLocation(line: 3627, column: 12, scope: !5387)
!5387 = !{!"0xb\003", !1, !5382}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5388 = !MDLocation(line: 3627, column: 12, scope: !5389)
!5389 = !{!"0xb\006", !1, !5382}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5390 = !MDLocation(line: 3627, column: 12, scope: !5391)
!5391 = !{!"0xb\008", !1, !5392}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5392 = !{!"0xb\004", !1, !5393}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5393 = !{!"0xb\002", !1, !5382}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5394 = !MDLocation(line: 3627, column: 12, scope: !5395)
!5395 = !{!"0xb\009", !1, !5382}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5396 = !MDLocation(line: 3627, column: 12, scope: !5397)
!5397 = !{!"0xb\0010", !1, !5382}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5398 = !MDLocation(line: 3627, column: 12, scope: !5399)
!5399 = !{!"0xb\0011", !1, !5400}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5400 = !{!"0xb\007", !1, !5401}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5401 = !{!"0xb\005", !1, !5382}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5402 = !MDLocation(line: 3626, column: 18, scope: !5382)
!5403 = !MDLocation(line: 3626, column: 13, scope: !5382)
!5404 = !MDLocation(line: 3626, column: 8, scope: !5382)
!5405 = !MDLocation(line: 3632, column: 6, scope: !5203)
!5406 = !MDLocation(line: 3634, column: 8, scope: !5180)
!5407 = !MDLocation(line: 3634, column: 3, scope: !5180)
!5408 = !MDLocation(line: 3588, column: 28, scope: !5180)
!5409 = !MDLocation(line: 3636, column: 20, scope: !2508)
!5410 = !MDLocation(line: 3636, column: 6, scope: !2508)
!5411 = !MDLocation(line: 3637, column: 10, scope: !5412)
!5412 = !{!"0xb\003637\0010\00593", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5413 = !MDLocation(line: 3637, column: 10, scope: !2508)
!5414 = !{!"0x100\00lastcp\003638\000", !5415, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 3638]
!5415 = !{!"0xb\003637\0018\00594", !1, !5412}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5416 = !MDLocation(line: 3638, column: 14, scope: !5415)
!5417 = !MDLocation(line: 3639, column: 3, scope: !5415)
!5418 = !MDLocation(line: 3640, column: 7, scope: !5419)
!5419 = !{!"0xb\003640\007\00595", !1, !5415}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5420 = !MDLocation(line: 3640, column: 7, scope: !5415)
!5421 = !MDLocation(line: 3640, column: 23, scope: !5422)
!5422 = !{!"0xb\001", !1, !5419}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5423 = !MDLocation(line: 3640, column: 29, scope: !5419)
!5424 = !MDLocation(line: 3640, column: 13, scope: !5419)
!5425 = !MDLocation(line: 3640, column: 35, scope: !5419)
!5426 = !MDLocation(line: 3641, column: 7, scope: !5419)
!5427 = !MDLocation(line: 3642, column: 14, scope: !5415)
!5428 = !MDLocation(line: 3642, column: 3, scope: !5415)
!5429 = !MDLocation(line: 3643, column: 3, scope: !5415)
!5430 = !MDLocation(line: 3644, column: 7, scope: !5431)
!5431 = !{!"0xb\003644\007\00596", !1, !5415}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5432 = !MDLocation(line: 3644, column: 7, scope: !5415)
!5433 = !{!"0x100\00e\003645\000", !5434, !538, !39} ; [ DW_TAG_auto_variable ] [e] [line 3645]
!5434 = !{!"0xb\003644\0020\00597", !1, !5431}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5435 = !MDLocation(line: 3645, column: 13, scope: !5434)
!5436 = !{!"0x100\00old\003646\000", !5434, !538, !39} ; [ DW_TAG_auto_variable ] [old] [line 3646]
!5437 = !MDLocation(line: 3646, column: 13, scope: !5434)
!5438 = !MDLocation(line: 3646, column: 19, scope: !5434)
!5439 = !{!"0x100\00count\003647\000", !5434, !538, !86} ; [ DW_TAG_auto_variable ] [count] [line 3647]
!5440 = !MDLocation(line: 3647, column: 11, scope: !5434)
!5441 = !MDLocation(line: 3649, column: 12, scope: !5442)
!5442 = !{!"0xb\003649\0012\00598", !1, !5434}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5443 = !MDLocation(line: 3649, column: 12, scope: !5434)
!5444 = !MDLocation(line: 3650, column: 8, scope: !5445)
!5445 = !{!"0xb\003649\0028\00599", !1, !5442}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5446 = !MDLocation(line: 3650, column: 4, scope: !5445)
!5447 = !MDLocation(line: 3651, column: 8, scope: !5448)
!5448 = !{!"0xb\003651\008\00600", !1, !5445}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5449 = !MDLocation(line: 3651, column: 8, scope: !5445)
!5450 = !MDLocation(line: 3652, column: 8, scope: !5448)
!5451 = !MDLocation(line: 3652, column: 15, scope: !5452)
!5452 = !{!"0xb\005", !1, !5453}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5453 = !{!"0xb\001", !1, !5448}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5454 = !MDLocation(line: 3652, column: 15, scope: !5455)
!5455 = !{!"0xb\002", !1, !5448}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5456 = !MDLocation(line: 3652, column: 8, scope: !5457)
!5457 = !{!"0xb\003", !1, !5448}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5458 = !MDLocation(line: 3653, column: 5, scope: !5448)
!5459 = !MDLocation(line: 3652, column: 8, scope: !5460)
!5460 = !{!"0xb\004", !1, !5448}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5461 = !MDLocation(line: 3654, column: 7, scope: !5445)
!5462 = !MDLocation(line: 3655, column: 16, scope: !5463)
!5463 = !{!"0xb\003655\0016\00601", !1, !5442}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5464 = !MDLocation(line: 3655, column: 16, scope: !5442)
!5465 = !{!"0x100\00m\003656\000", !5466, !538, !86} ; [ DW_TAG_auto_variable ] [m] [line 3656]
!5466 = !{!"0xb\003655\0025\00602", !1, !5463}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5467 = !MDLocation(line: 3656, column: 8, scope: !5466)
!5468 = !MDLocation(line: 3656, column: 12, scope: !5466)
!5469 = !MDLocation(line: 3656, column: 16, scope: !5466)
!5470 = !MDLocation(line: 3657, column: 13, scope: !5471)
!5471 = !{!"0xb\003657\004\00603", !1, !5466}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5472 = !MDLocation(line: 3657, column: 9, scope: !5471)
!5473 = !MDLocation(line: 3658, column: 9, scope: !5474)
!5474 = !{!"0xb\003657\004\00604", !1, !5471}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5475 = !MDLocation(line: 3658, column: 17, scope: !5476)
!5476 = !{!"0xb\001", !1, !5474}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5477 = !MDLocation(line: 3658, column: 21, scope: !5474)
!5478 = !MDLocation(line: 3658, column: 17, scope: !5474)
!5479 = !MDLocation(line: 3658, column: 36, scope: !5474)
!5480 = !MDLocation(line: 3657, column: 4, scope: !5471)
!5481 = !MDLocation(line: 3659, column: 13, scope: !5474)
!5482 = !MDLocation(line: 3659, column: 8, scope: !5474)
!5483 = !MDLocation(line: 3658, column: 47, scope: !5474)
!5484 = !MDLocation(line: 3657, column: 4, scope: !5474)
!5485 = !MDLocation(line: 3660, column: 7, scope: !5466)
!5486 = !MDLocation(line: 3662, column: 8, scope: !5487)
!5487 = !{!"0xb\003661\0012\00605", !1, !5463}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5488 = !MDLocation(line: 3662, column: 19, scope: !5487)
!5489 = !MDLocation(line: 3662, column: 23, scope: !5487)
!5490 = !MDLocation(line: 3662, column: 4, scope: !5487)
!5491 = !MDLocation(line: 3663, column: 8, scope: !5492)
!5492 = !{!"0xb\003663\008\00606", !1, !5487}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5493 = !MDLocation(line: 3663, column: 13, scope: !5492)
!5494 = !MDLocation(line: 3663, column: 8, scope: !5487)
!5495 = !MDLocation(line: 3664, column: 12, scope: !5492)
!5496 = !MDLocation(line: 3664, column: 8, scope: !5492)
!5497 = !MDLocation(line: 3666, column: 7, scope: !5434)
!5498 = !MDLocation(line: 3668, column: 9, scope: !5499)
!5499 = !{!"0xb\003668\008\00608", !1, !5500}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5500 = !{!"0xb\003666\0017\00607", !1, !5434}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5501 = !MDLocation(line: 3668, column: 8, scope: !5500)
!5502 = !MDLocation(line: 3669, column: 12, scope: !5503)
!5503 = !{!"0xb\003669\0012\00610", !1, !5504}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5504 = !{!"0xb\003668\0018\00609", !1, !5499}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5505 = !MDLocation(line: 3669, column: 18, scope: !5503)
!5506 = !MDLocation(line: 3669, column: 12, scope: !5504)
!5507 = !MDLocation(line: 3670, column: 5, scope: !5508)
!5508 = !{!"0xb\003669\0022\00611", !1, !5503}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5509 = !MDLocation(line: 3670, column: 12, scope: !5510)
!5510 = !{!"0xb\003", !1, !5511}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5511 = !{!"0xb\001", !1, !5508}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5512 = !MDLocation(line: 3670, column: 24, scope: !5508)
!5513 = !MDLocation(line: 3670, column: 12, scope: !5508)
!5514 = !MDLocation(line: 3671, column: 12, scope: !5508)
!5515 = !MDLocation(line: 3671, column: 33, scope: !5508)
!5516 = !MDLocation(line: 3670, column: 5, scope: !5517)
!5517 = !{!"0xb\002", !1, !5508}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5518 = !MDLocation(line: 3672, column: 9, scope: !5508)
!5519 = !MDLocation(line: 3673, column: 8, scope: !5508)
!5520 = !MDLocation(line: 3674, column: 5, scope: !5521)
!5521 = !{!"0xb\003673\0015\00612", !1, !5503}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5522 = !MDLocation(line: 3674, column: 12, scope: !5523)
!5523 = !{!"0xb\004", !1, !5524}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5524 = !{!"0xb\001", !1, !5521}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5525 = !MDLocation(line: 3674, column: 24, scope: !5521)
!5526 = !MDLocation(line: 3674, column: 12, scope: !5521)
!5527 = !MDLocation(line: 3675, column: 15, scope: !5521)
!5528 = !MDLocation(line: 3675, column: 36, scope: !5521)
!5529 = !MDLocation(line: 3676, column: 15, scope: !5521)
!5530 = !MDLocation(line: 3676, column: 36, scope: !5521)
!5531 = !MDLocation(line: 3674, column: 5, scope: !5532)
!5532 = !{!"0xb\003", !1, !5533}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5533 = !{!"0xb\002", !1, !5521}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5534 = !MDLocation(line: 3677, column: 9, scope: !5521)
!5535 = !MDLocation(line: 3679, column: 16, scope: !5504)
!5536 = !MDLocation(line: 3679, column: 27, scope: !5504)
!5537 = !MDLocation(line: 3679, column: 8, scope: !5504)
!5538 = !MDLocation(line: 3680, column: 4, scope: !5504)
!5539 = !{!"0x100\00len\003682\000", !5540, !538, !48} ; [ DW_TAG_auto_variable ] [len] [line 3682]
!5540 = !{!"0xb\003681\009\00613", !1, !5499}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5541 = !MDLocation(line: 3682, column: 15, scope: !5540)
!5542 = !MDLocation(line: 3683, column: 12, scope: !5543)
!5543 = !{!"0xb\003683\0012\00614", !1, !5540}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5544 = !MDLocation(line: 3683, column: 18, scope: !5543)
!5545 = !MDLocation(line: 3683, column: 12, scope: !5540)
!5546 = !MDLocation(line: 3686, column: 5, scope: !5547)
!5547 = !{!"0xb\003683\0022\00615", !1, !5543}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5548 = !MDLocation(line: 3686, column: 12, scope: !5549)
!5549 = !{!"0xb\003", !1, !5550}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5550 = !{!"0xb\001", !1, !5547}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5551 = !MDLocation(line: 3686, column: 24, scope: !5547)
!5552 = !MDLocation(line: 3686, column: 12, scope: !5547)
!5553 = !MDLocation(line: 3687, column: 32, scope: !5547)
!5554 = !MDLocation(line: 3689, column: 13, scope: !5547)
!5555 = !MDLocation(line: 3689, column: 13, scope: !5550)
!5556 = !MDLocation(line: 3689, column: 13, scope: !5557)
!5557 = !{!"0xb\003", !1, !5547}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5558 = !MDLocation(line: 3689, column: 13, scope: !5559)
!5559 = !{!"0xb\006", !1, !5547}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5560 = !MDLocation(line: 3689, column: 13, scope: !5561)
!5561 = !{!"0xb\008", !1, !5562}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5562 = !{!"0xb\004", !1, !5563}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5563 = !{!"0xb\002", !1, !5547}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5564 = !MDLocation(line: 3689, column: 13, scope: !5565)
!5565 = !{!"0xb\009", !1, !5547}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5566 = !MDLocation(line: 3689, column: 13, scope: !5567)
!5567 = !{!"0xb\0010", !1, !5547}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5568 = !MDLocation(line: 3689, column: 13, scope: !5569)
!5569 = !{!"0xb\0011", !1, !5570}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5570 = !{!"0xb\007", !1, !5571}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5571 = !{!"0xb\005", !1, !5547}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5572 = !MDLocation(line: 3687, column: 12, scope: !5547)
!5573 = !MDLocation(line: 3690, column: 40, scope: !5547)
!5574 = !MDLocation(line: 3690, column: 36, scope: !5547)
!5575 = !MDLocation(line: 3686, column: 5, scope: !5563)
!5576 = !MDLocation(line: 3691, column: 21, scope: !5577)
!5577 = !{!"0xb\003690\0044\00616", !1, !5547}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5578 = !MDLocation(line: 3691, column: 9, scope: !5577)
!5579 = !MDLocation(line: 3692, column: 9, scope: !5577)
!5580 = !MDLocation(line: 3694, column: 8, scope: !5547)
!5581 = !MDLocation(line: 3697, column: 5, scope: !5582)
!5582 = !{!"0xb\003694\0015\00617", !1, !5543}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5583 = !MDLocation(line: 3697, column: 12, scope: !5584)
!5584 = !{!"0xb\002", !1, !5585}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5585 = !{!"0xb\001", !1, !5582}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5586 = !MDLocation(line: 3697, column: 24, scope: !5582)
!5587 = !MDLocation(line: 3697, column: 12, scope: !5582)
!5588 = !{!"0x100\00c\003698\000", !5589, !538, !282} ; [ DW_TAG_auto_variable ] [c] [line 3698]
!5589 = !{!"0xb\003697\0027\00618", !1, !5582}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5590 = !MDLocation(line: 3698, column: 12, scope: !5589)
!5591 = !MDLocation(line: 3698, column: 36, scope: !5589)
!5592 = !MDLocation(line: 3700, column: 10, scope: !5589)
!5593 = !MDLocation(line: 3700, column: 10, scope: !5594)
!5594 = !{!"0xb\001", !1, !5589}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5595 = !MDLocation(line: 3700, column: 10, scope: !5596)
!5596 = !{!"0xb\003", !1, !5589}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5597 = !MDLocation(line: 3700, column: 10, scope: !5598)
!5598 = !{!"0xb\006", !1, !5589}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5599 = !MDLocation(line: 3700, column: 10, scope: !5600)
!5600 = !{!"0xb\008", !1, !5601}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5601 = !{!"0xb\004", !1, !5602}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5602 = !{!"0xb\002", !1, !5589}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5603 = !MDLocation(line: 3700, column: 10, scope: !5604)
!5604 = !{!"0xb\009", !1, !5589}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5605 = !MDLocation(line: 3700, column: 10, scope: !5606)
!5606 = !{!"0xb\0010", !1, !5589}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5607 = !MDLocation(line: 3700, column: 10, scope: !5608)
!5608 = !{!"0xb\0011", !1, !5609}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5609 = !{!"0xb\007", !1, !5610}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5610 = !{!"0xb\005", !1, !5589}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5611 = !MDLocation(line: 3698, column: 16, scope: !5589)
!5612 = !MDLocation(line: 3702, column: 13, scope: !5613)
!5613 = !{!"0xb\003702\0013\00619", !1, !5589}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5614 = !MDLocation(line: 3702, column: 22, scope: !5613)
!5615 = !MDLocation(line: 3702, column: 18, scope: !5613)
!5616 = !MDLocation(line: 3702, column: 13, scope: !5589)
!5617 = !MDLocation(line: 3702, column: 28, scope: !5618)
!5618 = !{!"0xb\001", !1, !5613}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5619 = !MDLocation(line: 3702, column: 37, scope: !5613)
!5620 = !MDLocation(line: 3702, column: 33, scope: !5613)
!5621 = !MDLocation(line: 3702, column: 28, scope: !5613)
!5622 = !MDLocation(line: 3703, column: 6, scope: !5613)
!5623 = !MDLocation(line: 3704, column: 21, scope: !5589)
!5624 = !MDLocation(line: 3704, column: 9, scope: !5589)
!5625 = !MDLocation(line: 3705, column: 9, scope: !5589)
!5626 = !MDLocation(line: 3709, column: 8, scope: !5627)
!5627 = !{!"0xb\003709\008\00620", !1, !5500}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5628 = !MDLocation(line: 3709, column: 19, scope: !5627)
!5629 = !MDLocation(line: 3709, column: 8, scope: !5500)
!5630 = !MDLocation(line: 3710, column: 8, scope: !5627)
!5631 = !MDLocation(line: 3712, column: 8, scope: !5632)
!5632 = !{!"0xb\003712\008\00621", !1, !5500}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5633 = !MDLocation(line: 3712, column: 20, scope: !5632)
!5634 = !MDLocation(line: 3712, column: 8, scope: !5500)
!5635 = !MDLocation(line: 3713, column: 8, scope: !5636)
!5636 = !{!"0xb\003712\0025\00622", !1, !5632}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5637 = !MDLocation(line: 3714, column: 22, scope: !5638)
!5638 = !{!"0xb\003714\0012\00623", !1, !5636}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5639 = !MDLocation(line: 3714, column: 28, scope: !5638)
!5640 = !MDLocation(line: 3714, column: 12, scope: !5638)
!5641 = !MDLocation(line: 3714, column: 37, scope: !5638)
!5642 = !MDLocation(line: 3714, column: 12, scope: !5636)
!5643 = !MDLocation(line: 3715, column: 5, scope: !5638)
!5644 = !MDLocation(line: 3716, column: 4, scope: !5636)
!5645 = !MDLocation(line: 3718, column: 4, scope: !5646)
!5646 = !{!"0xb\003718\004\00625", !1, !5647}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5647 = !{!"0xb\003718\004\00624", !1, !5500}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5648 = !MDLocation(line: 3718, column: 4, scope: !5647)
!5649 = !MDLocation(line: 3718, column: 4, scope: !5650)
!5650 = !{!"0xb\001", !1, !5651}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5651 = !{!"0xb\003718\004\00627", !1, !5652}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5652 = !{!"0xb\003718\004\00626", !1, !5646}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5653 = !MDLocation(line: 3718, column: 4, scope: !5652)
!5654 = !MDLocation(line: 3718, column: 4, scope: !5655)
!5655 = !{!"0xb\003", !1, !5656}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5656 = !{!"0xb\003718\004\00628", !1, !5651}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5657 = !MDLocation(line: 3718, column: 4, scope: !5658)
!5658 = !{!"0xb\005", !1, !5656}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5659 = !MDLocation(line: 3718, column: 4, scope: !5660)
!5660 = !{!"0xb\006", !1, !5656}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5661 = !MDLocation(line: 3718, column: 4, scope: !5656)
!5662 = !MDLocation(line: 3718, column: 4, scope: !5663)
!5663 = !{!"0xb\008", !1, !5664}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5664 = !{!"0xb\007", !1, !5656}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5665 = !MDLocation(line: 3718, column: 4, scope: !5666)
!5666 = !{!"0xb\004", !1, !5651}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5667 = !MDLocation(line: 3718, column: 4, scope: !5668)
!5668 = !{!"0xb\009", !1, !5652}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5669 = !MDLocation(line: 3718, column: 4, scope: !5670)
!5670 = !{!"0xb\0010", !1, !5671}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5671 = !{!"0xb\002", !1, !5672}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5672 = !{!"0xb\003718\004\00629", !1, !5647}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5673 = !MDLocation(line: 3718, column: 4, scope: !5674)
!5674 = !{!"0xb\0011", !1, !5672}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5675 = !MDLocation(line: 3718, column: 4, scope: !5676)
!5676 = !{!"0xb\0012", !1, !5677}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5677 = !{!"0xb\003718\004\00630", !1, !5647}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5678 = !MDLocation(line: 3718, column: 4, scope: !5679)
!5679 = !{!"0xb\0013", !1, !5677}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5680 = !MDLocation(line: 3718, column: 4, scope: !5681)
!5681 = !{!"0xb\0014", !1, !5677}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5682 = !MDLocation(line: 3719, column: 18, scope: !5500)
!5683 = !MDLocation(line: 3719, column: 4, scope: !5500)
!5684 = !MDLocation(line: 3720, column: 4, scope: !5685)
!5685 = !{!"0xb\003720\004\00631", !1, !5500}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5686 = !MDLocation(line: 3720, column: 4, scope: !5500)
!5687 = !MDLocation(line: 3720, column: 4, scope: !5688)
!5688 = !{!"0xb\001", !1, !5685}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5689 = !MDLocation(line: 3722, column: 10, scope: !5500)
!5690 = !MDLocation(line: 3722, column: 4, scope: !5500)
!5691 = !MDLocation(line: 3723, column: 8, scope: !5692)
!5692 = !{!"0xb\003723\008\00632", !1, !5500}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5693 = !MDLocation(line: 3723, column: 8, scope: !5500)
!5694 = !MDLocation(line: 3724, column: 20, scope: !5692)
!5695 = !MDLocation(line: 3724, column: 8, scope: !5692)
!5696 = !MDLocation(line: 3726, column: 8, scope: !5692)
!5697 = !MDLocation(line: 3727, column: 4, scope: !5500)
!5698 = !MDLocation(line: 3731, column: 3, scope: !5431)
!5699 = !MDLocation(line: 3731, column: 10, scope: !5700)
!5700 = !{!"0xb\007", !1, !5701}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5701 = !{!"0xb\001", !1, !5431}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5702 = !MDLocation(line: 3731, column: 15, scope: !5431)
!5703 = !MDLocation(line: 3731, column: 10, scope: !5431)
!5704 = !MDLocation(line: 3731, column: 22, scope: !5705)
!5705 = !{!"0xb\003", !1, !5431}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5706 = !MDLocation(line: 3731, column: 40, scope: !5707)
!5707 = !{!"0xb\004", !1, !5431}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5708 = !MDLocation(line: 3731, column: 10, scope: !5709)
!5709 = !{!"0xb\005", !1, !5431}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5710 = !MDLocation(line: 3731, column: 3, scope: !5711)
!5711 = !{!"0xb\006", !1, !5712}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5712 = !{!"0xb\002", !1, !5431}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5713 = !{!"0x100\00c\003732\000", !5714, !538, !282} ; [ DW_TAG_auto_variable ] [c] [line 3732]
!5714 = !{!"0xb\003731\0049\00633", !1, !5431}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5715 = !MDLocation(line: 3732, column: 10, scope: !5714)
!5716 = !MDLocation(line: 3733, column: 11, scope: !5717)
!5717 = !{!"0xb\003733\0011\00634", !1, !5714}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5718 = !MDLocation(line: 3733, column: 11, scope: !5714)
!5719 = !MDLocation(line: 3734, column: 8, scope: !5720)
!5720 = !{!"0xb\003734\008\00636", !1, !5721}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5721 = !{!"0xb\003733\0024\00635", !1, !5717}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5722 = !MDLocation(line: 3734, column: 8, scope: !5721)
!5723 = !MDLocation(line: 3735, column: 32, scope: !5720)
!5724 = !MDLocation(line: 3737, column: 13, scope: !5720)
!5725 = !MDLocation(line: 3737, column: 13, scope: !5726)
!5726 = !{!"0xb\001", !1, !5720}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5727 = !MDLocation(line: 3737, column: 13, scope: !5728)
!5728 = !{!"0xb\003", !1, !5720}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5729 = !MDLocation(line: 3737, column: 13, scope: !5730)
!5730 = !{!"0xb\006", !1, !5720}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5731 = !MDLocation(line: 3737, column: 13, scope: !5732)
!5732 = !{!"0xb\008", !1, !5733}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5733 = !{!"0xb\004", !1, !5734}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5734 = !{!"0xb\002", !1, !5720}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5735 = !MDLocation(line: 3737, column: 13, scope: !5736)
!5736 = !{!"0xb\009", !1, !5720}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5737 = !MDLocation(line: 3737, column: 13, scope: !5738)
!5738 = !{!"0xb\0010", !1, !5720}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5739 = !MDLocation(line: 3737, column: 13, scope: !5740)
!5740 = !{!"0xb\0011", !1, !5741}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5741 = !{!"0xb\007", !1, !5742}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5742 = !{!"0xb\005", !1, !5720}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5743 = !MDLocation(line: 3735, column: 12, scope: !5720)
!5744 = !MDLocation(line: 3735, column: 8, scope: !5720)
!5745 = !MDLocation(line: 3740, column: 12, scope: !5720)
!5746 = !MDLocation(line: 3740, column: 8, scope: !5720)
!5747 = !MDLocation(line: 3742, column: 15, scope: !5748)
!5748 = !{!"0xb\003742\0015\00637", !1, !5721}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5749 = !MDLocation(line: 3742, column: 24, scope: !5748)
!5750 = !MDLocation(line: 3742, column: 20, scope: !5748)
!5751 = !MDLocation(line: 3742, column: 15, scope: !5721)
!5752 = !MDLocation(line: 3742, column: 30, scope: !5753)
!5753 = !{!"0xb\001", !1, !5748}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5754 = !MDLocation(line: 3742, column: 39, scope: !5748)
!5755 = !MDLocation(line: 3742, column: 35, scope: !5748)
!5756 = !MDLocation(line: 3742, column: 30, scope: !5748)
!5757 = !MDLocation(line: 3744, column: 8, scope: !5758)
!5758 = !{!"0xb\003744\008\00640", !1, !5759}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5759 = !{!"0xb\003744\008\00639", !1, !5760}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5760 = !{!"0xb\003743\0011\00638", !1, !5748}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5761 = !MDLocation(line: 3744, column: 8, scope: !5759)
!5762 = !MDLocation(line: 3744, column: 8, scope: !5763)
!5763 = !{!"0xb\001", !1, !5764}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5764 = !{!"0xb\003744\008\00642", !1, !5765}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5765 = !{!"0xb\003744\008\00641", !1, !5758}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5766 = !MDLocation(line: 3744, column: 8, scope: !5765)
!5767 = !MDLocation(line: 3744, column: 8, scope: !5768)
!5768 = !{!"0xb\003", !1, !5769}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5769 = !{!"0xb\003744\008\00643", !1, !5764}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5770 = !MDLocation(line: 3744, column: 8, scope: !5771)
!5771 = !{!"0xb\005", !1, !5769}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5772 = !MDLocation(line: 3744, column: 8, scope: !5773)
!5773 = !{!"0xb\006", !1, !5769}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5774 = !MDLocation(line: 3744, column: 8, scope: !5769)
!5775 = !MDLocation(line: 3744, column: 8, scope: !5776)
!5776 = !{!"0xb\008", !1, !5777}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5777 = !{!"0xb\007", !1, !5769}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5778 = !MDLocation(line: 3744, column: 8, scope: !5779)
!5779 = !{!"0xb\004", !1, !5764}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5780 = !MDLocation(line: 3744, column: 8, scope: !5781)
!5781 = !{!"0xb\009", !1, !5765}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5782 = !MDLocation(line: 3744, column: 8, scope: !5783)
!5783 = !{!"0xb\0010", !1, !5784}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5784 = !{!"0xb\002", !1, !5785}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5785 = !{!"0xb\003744\008\00644", !1, !5759}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5786 = !MDLocation(line: 3744, column: 8, scope: !5787)
!5787 = !{!"0xb\0011", !1, !5785}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5788 = !MDLocation(line: 3744, column: 8, scope: !5789)
!5789 = !{!"0xb\0012", !1, !5790}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5790 = !{!"0xb\003744\008\00645", !1, !5759}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5791 = !MDLocation(line: 3744, column: 8, scope: !5792)
!5792 = !{!"0xb\0013", !1, !5790}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5793 = !MDLocation(line: 3744, column: 8, scope: !5794)
!5794 = !{!"0xb\0014", !1, !5790}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5795 = !MDLocation(line: 3745, column: 8, scope: !5796)
!5796 = !{!"0xb\003745\008\00646", !1, !5760}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5797 = !MDLocation(line: 3745, column: 8, scope: !5760)
!5798 = !MDLocation(line: 3745, column: 8, scope: !5799)
!5799 = !{!"0xb\001", !1, !5796}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5800 = !MDLocation(line: 3746, column: 11, scope: !5760)
!5801 = !MDLocation(line: 3747, column: 7, scope: !5721)
!5802 = !MDLocation(line: 3749, column: 16, scope: !5803)
!5803 = !{!"0xb\003749\0016\00647", !1, !5717}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5804 = !MDLocation(line: 3749, column: 16, scope: !5717)
!5805 = !MDLocation(line: 3751, column: 4, scope: !5806)
!5806 = !{!"0xb\003751\004\00650", !1, !5807}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5807 = !{!"0xb\003751\004\00649", !1, !5808}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5808 = !{!"0xb\003750\007\00648", !1, !5803}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5809 = !MDLocation(line: 3751, column: 4, scope: !5807)
!5810 = !MDLocation(line: 3751, column: 4, scope: !5811)
!5811 = !{!"0xb\001", !1, !5812}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5812 = !{!"0xb\003751\004\00652", !1, !5813}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5813 = !{!"0xb\003751\004\00651", !1, !5806}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5814 = !MDLocation(line: 3751, column: 4, scope: !5813)
!5815 = !MDLocation(line: 3751, column: 4, scope: !5816)
!5816 = !{!"0xb\003", !1, !5817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5817 = !{!"0xb\003751\004\00653", !1, !5812}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5818 = !MDLocation(line: 3751, column: 4, scope: !5819)
!5819 = !{!"0xb\005", !1, !5817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5820 = !MDLocation(line: 3751, column: 4, scope: !5821)
!5821 = !{!"0xb\006", !1, !5817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5822 = !MDLocation(line: 3751, column: 4, scope: !5817)
!5823 = !MDLocation(line: 3751, column: 4, scope: !5824)
!5824 = !{!"0xb\008", !1, !5825}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5825 = !{!"0xb\007", !1, !5817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5826 = !MDLocation(line: 3751, column: 4, scope: !5827)
!5827 = !{!"0xb\004", !1, !5812}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5828 = !MDLocation(line: 3751, column: 4, scope: !5829)
!5829 = !{!"0xb\009", !1, !5813}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5830 = !MDLocation(line: 3751, column: 4, scope: !5831)
!5831 = !{!"0xb\0010", !1, !5832}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5832 = !{!"0xb\002", !1, !5833}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5833 = !{!"0xb\003751\004\00654", !1, !5807}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5834 = !MDLocation(line: 3751, column: 4, scope: !5835)
!5835 = !{!"0xb\0011", !1, !5833}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5836 = !MDLocation(line: 3751, column: 4, scope: !5837)
!5837 = !{!"0xb\0012", !1, !5838}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5838 = !{!"0xb\003751\004\00655", !1, !5807}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5839 = !MDLocation(line: 3751, column: 4, scope: !5840)
!5840 = !{!"0xb\0013", !1, !5838}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5841 = !MDLocation(line: 3751, column: 4, scope: !5842)
!5842 = !{!"0xb\0014", !1, !5838}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5843 = !MDLocation(line: 3752, column: 4, scope: !5844)
!5844 = !{!"0xb\003752\004\00656", !1, !5808}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5845 = !MDLocation(line: 3752, column: 4, scope: !5808)
!5846 = !MDLocation(line: 3752, column: 4, scope: !5847)
!5847 = !{!"0xb\001", !1, !5844}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5848 = !MDLocation(line: 3753, column: 7, scope: !5808)
!5849 = !MDLocation(line: 3755, column: 21, scope: !5714)
!5850 = !MDLocation(line: 3755, column: 7, scope: !5714)
!5851 = !MDLocation(line: 3756, column: 21, scope: !5852)
!5852 = !{!"0xb\003756\0011\00657", !1, !5714}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5853 = !MDLocation(line: 3756, column: 11, scope: !5852)
!5854 = !MDLocation(line: 3756, column: 11, scope: !5714)
!5855 = !MDLocation(line: 3757, column: 4, scope: !5856)
!5856 = !{!"0xb\003756\0031\00658", !1, !5852}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5857 = !MDLocation(line: 3758, column: 15, scope: !5856)
!5858 = !MDLocation(line: 3758, column: 4, scope: !5856)
!5859 = !MDLocation(line: 3759, column: 7, scope: !5856)
!5860 = !MDLocation(line: 3761, column: 4, scope: !5852)
!5861 = !MDLocation(line: 3763, column: 6, scope: !5415)
!5862 = !{!"0x100\00lastcp\003765\000", !5863, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 3765]
!5863 = !{!"0xb\003764\0011\00659", !1, !5412}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5864 = !MDLocation(line: 3765, column: 14, scope: !5863)
!5865 = !MDLocation(line: 3766, column: 17, scope: !5863)
!5866 = !MDLocation(line: 3766, column: 23, scope: !5863)
!5867 = !MDLocation(line: 3766, column: 7, scope: !5863)
!5868 = !MDLocation(line: 3766, column: 3, scope: !5863)
!5869 = !MDLocation(line: 3767, column: 14, scope: !5863)
!5870 = !MDLocation(line: 3767, column: 3, scope: !5863)
!5871 = !MDLocation(line: 3768, column: 7, scope: !5872)
!5872 = !{!"0xb\003768\007\00660", !1, !5863}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5873 = !MDLocation(line: 3768, column: 12, scope: !5872)
!5874 = !MDLocation(line: 3768, column: 7, scope: !5863)
!5875 = !MDLocation(line: 3768, column: 32, scope: !5876)
!5876 = !{!"0xb\001", !1, !5872}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5877 = !MDLocation(line: 3768, column: 17, scope: !5872)
!5878 = !MDLocation(line: 3769, column: 10, scope: !5872)
!5879 = !MDLocation(line: 3769, column: 26, scope: !5872)
!5880 = !MDLocation(line: 3770, column: 4, scope: !5872)
!5881 = !MDLocation(line: 3770, column: 24, scope: !5872)
!5882 = !MDLocation(line: 3772, column: 12, scope: !5883)
!5883 = !{!"0xb\003771\003\00661", !1, !5872}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5884 = !MDLocation(line: 3772, column: 7, scope: !5883)
!5885 = !MDLocation(line: 3776, column: 11, scope: !5886)
!5886 = !{!"0xb\003776\0011\00662", !1, !5883}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5887 = !MDLocation(line: 3776, column: 11, scope: !5883)
!5888 = !MDLocation(line: 3776, column: 47, scope: !5889)
!5889 = !{!"0xb\001", !1, !5886}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5890 = !MDLocation(line: 3777, column: 4, scope: !5886)
!5891 = !MDLocation(line: 3778, column: 3, scope: !5883)
!5892 = !MDLocation(line: 3779, column: 3, scope: !5863)
!5893 = !MDLocation(line: 3780, column: 7, scope: !5894)
!5894 = !{!"0xb\003780\007\00663", !1, !5863}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5895 = !MDLocation(line: 3780, column: 7, scope: !5863)
!5896 = !{!"0x100\00c\003781\000", !5897, !538, !282} ; [ DW_TAG_auto_variable ] [c] [line 3781]
!5897 = !{!"0xb\003780\0014\00664", !1, !5894}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5898 = !MDLocation(line: 3781, column: 10, scope: !5897)
!5899 = !MDLocation(line: 3782, column: 7, scope: !5897)
!5900 = !MDLocation(line: 3782, column: 14, scope: !5901)
!5901 = !{!"0xb\002", !1, !5902}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5902 = !{!"0xb\001", !1, !5897}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5903 = !MDLocation(line: 3782, column: 19, scope: !5897)
!5904 = !MDLocation(line: 3782, column: 14, scope: !5897)
!5905 = !MDLocation(line: 3783, column: 8, scope: !5906)
!5906 = !{!"0xb\003783\008\00666", !1, !5907}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5907 = !{!"0xb\003782\0023\00665", !1, !5897}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5908 = !MDLocation(line: 3783, column: 8, scope: !5907)
!5909 = !MDLocation(line: 3784, column: 12, scope: !5910)
!5910 = !{!"0xb\003784\0012\00668", !1, !5911}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5911 = !{!"0xb\003783\0021\00667", !1, !5906}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5912 = !MDLocation(line: 3784, column: 12, scope: !5911)
!5913 = !MDLocation(line: 3785, column: 29, scope: !5910)
!5914 = !MDLocation(line: 3787, column: 10, scope: !5910)
!5915 = !MDLocation(line: 3787, column: 10, scope: !5916)
!5916 = !{!"0xb\001", !1, !5910}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5917 = !MDLocation(line: 3787, column: 10, scope: !5918)
!5918 = !{!"0xb\003", !1, !5910}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5919 = !MDLocation(line: 3787, column: 10, scope: !5920)
!5920 = !{!"0xb\006", !1, !5910}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5921 = !MDLocation(line: 3787, column: 10, scope: !5922)
!5922 = !{!"0xb\008", !1, !5923}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5923 = !{!"0xb\004", !1, !5924}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5924 = !{!"0xb\002", !1, !5910}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5925 = !MDLocation(line: 3787, column: 10, scope: !5926)
!5926 = !{!"0xb\009", !1, !5910}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5927 = !MDLocation(line: 3787, column: 10, scope: !5928)
!5928 = !{!"0xb\0010", !1, !5910}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5929 = !MDLocation(line: 3787, column: 10, scope: !5930)
!5930 = !{!"0xb\0011", !1, !5931}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5931 = !{!"0xb\007", !1, !5932}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5932 = !{!"0xb\005", !1, !5910}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5933 = !MDLocation(line: 3785, column: 9, scope: !5910)
!5934 = !MDLocation(line: 3785, column: 5, scope: !5910)
!5935 = !MDLocation(line: 3790, column: 9, scope: !5910)
!5936 = !MDLocation(line: 3790, column: 5, scope: !5910)
!5937 = !MDLocation(line: 3791, column: 4, scope: !5911)
!5938 = !MDLocation(line: 3793, column: 8, scope: !5939)
!5939 = !{!"0xb\003793\008\00669", !1, !5907}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5940 = !MDLocation(line: 3793, column: 8, scope: !5907)
!5941 = !MDLocation(line: 3793, column: 23, scope: !5942)
!5942 = !{!"0xb\001", !1, !5939}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5943 = !MDLocation(line: 3793, column: 32, scope: !5939)
!5944 = !MDLocation(line: 3793, column: 28, scope: !5939)
!5945 = !MDLocation(line: 3793, column: 23, scope: !5939)
!5946 = !MDLocation(line: 3793, column: 38, scope: !5947)
!5947 = !{!"0xb\002", !1, !5939}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5948 = !MDLocation(line: 3793, column: 47, scope: !5939)
!5949 = !MDLocation(line: 3793, column: 43, scope: !5939)
!5950 = !MDLocation(line: 3793, column: 38, scope: !5939)
!5951 = !MDLocation(line: 3795, column: 5, scope: !5952)
!5952 = !{!"0xb\003795\005\00672", !1, !5953}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5953 = !{!"0xb\003795\005\00671", !1, !5954}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5954 = !{!"0xb\003794\008\00670", !1, !5939}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5955 = !MDLocation(line: 3795, column: 5, scope: !5953)
!5956 = !MDLocation(line: 3795, column: 5, scope: !5957)
!5957 = !{!"0xb\001", !1, !5958}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5958 = !{!"0xb\003795\005\00674", !1, !5959}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5959 = !{!"0xb\003795\005\00673", !1, !5952}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5960 = !MDLocation(line: 3795, column: 5, scope: !5959)
!5961 = !MDLocation(line: 3795, column: 5, scope: !5962)
!5962 = !{!"0xb\003", !1, !5963}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5963 = !{!"0xb\003795\005\00675", !1, !5958}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5964 = !MDLocation(line: 3795, column: 5, scope: !5965)
!5965 = !{!"0xb\005", !1, !5963}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5966 = !MDLocation(line: 3795, column: 5, scope: !5967)
!5967 = !{!"0xb\006", !1, !5963}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5968 = !MDLocation(line: 3795, column: 5, scope: !5963)
!5969 = !MDLocation(line: 3795, column: 5, scope: !5970)
!5970 = !{!"0xb\008", !1, !5971}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5971 = !{!"0xb\007", !1, !5963}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5972 = !MDLocation(line: 3795, column: 5, scope: !5973)
!5973 = !{!"0xb\004", !1, !5958}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5974 = !MDLocation(line: 3795, column: 5, scope: !5975)
!5975 = !{!"0xb\009", !1, !5959}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5976 = !MDLocation(line: 3795, column: 5, scope: !5977)
!5977 = !{!"0xb\0010", !1, !5978}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5978 = !{!"0xb\002", !1, !5979}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5979 = !{!"0xb\003795\005\00676", !1, !5953}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5980 = !MDLocation(line: 3795, column: 5, scope: !5981)
!5981 = !{!"0xb\0011", !1, !5979}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5982 = !MDLocation(line: 3795, column: 5, scope: !5983)
!5983 = !{!"0xb\0012", !1, !5984}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5984 = !{!"0xb\003795\005\00677", !1, !5953}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5985 = !MDLocation(line: 3795, column: 5, scope: !5986)
!5986 = !{!"0xb\0013", !1, !5984}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5987 = !MDLocation(line: 3795, column: 5, scope: !5988)
!5988 = !{!"0xb\0014", !1, !5984}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5989 = !MDLocation(line: 3796, column: 5, scope: !5990)
!5990 = !{!"0xb\003796\005\00678", !1, !5954}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5991 = !MDLocation(line: 3796, column: 5, scope: !5954)
!5992 = !MDLocation(line: 3796, column: 5, scope: !5993)
!5993 = !{!"0xb\001", !1, !5990}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5994 = !MDLocation(line: 3797, column: 8, scope: !5954)
!5995 = !MDLocation(line: 3799, column: 4, scope: !5907)
!5996 = !MDLocation(line: 3800, column: 29, scope: !5907)
!5997 = !MDLocation(line: 3800, column: 29, scope: !5998)
!5998 = !{!"0xb\001", !1, !5907}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5999 = !MDLocation(line: 3800, column: 29, scope: !6000)
!6000 = !{!"0xb\002", !1, !5907}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6001 = !MDLocation(line: 3800, column: 18, scope: !6002)
!6002 = !{!"0xb\004", !1, !6003}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6003 = !{!"0xb\003", !1, !5907}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6004 = !MDLocation(line: 3800, column: 4, scope: !5907)
!6005 = !MDLocation(line: 3802, column: 3, scope: !5897)
!6006 = !{!"0x100\00c\003804\000", !6007, !538, !282} ; [ DW_TAG_auto_variable ] [c] [line 3804]
!6007 = !{!"0xb\003803\008\00679", !1, !5894}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6008 = !MDLocation(line: 3804, column: 10, scope: !6007)
!6009 = !MDLocation(line: 3805, column: 7, scope: !6007)
!6010 = !MDLocation(line: 3805, column: 14, scope: !6011)
!6011 = !{!"0xb\002", !1, !6012}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6012 = !{!"0xb\001", !1, !6007}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6013 = !MDLocation(line: 3805, column: 19, scope: !6007)
!6014 = !MDLocation(line: 3805, column: 14, scope: !6007)
!6015 = !MDLocation(line: 3806, column: 8, scope: !6016)
!6016 = !{!"0xb\003806\008\00681", !1, !6017}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6017 = !{!"0xb\003805\0023\00680", !1, !6007}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6018 = !MDLocation(line: 3806, column: 8, scope: !6017)
!6019 = !MDLocation(line: 3807, column: 12, scope: !6020)
!6020 = !{!"0xb\003807\0012\00683", !1, !6021}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6021 = !{!"0xb\003806\0021\00682", !1, !6016}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6022 = !MDLocation(line: 3807, column: 12, scope: !6021)
!6023 = !MDLocation(line: 3808, column: 29, scope: !6020)
!6024 = !MDLocation(line: 3810, column: 10, scope: !6020)
!6025 = !MDLocation(line: 3810, column: 10, scope: !6026)
!6026 = !{!"0xb\001", !1, !6020}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6027 = !MDLocation(line: 3810, column: 10, scope: !6028)
!6028 = !{!"0xb\003", !1, !6020}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6029 = !MDLocation(line: 3810, column: 10, scope: !6030)
!6030 = !{!"0xb\006", !1, !6020}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6031 = !MDLocation(line: 3810, column: 10, scope: !6032)
!6032 = !{!"0xb\008", !1, !6033}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6033 = !{!"0xb\004", !1, !6034}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6034 = !{!"0xb\002", !1, !6020}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6035 = !MDLocation(line: 3810, column: 10, scope: !6036)
!6036 = !{!"0xb\009", !1, !6020}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6037 = !MDLocation(line: 3810, column: 10, scope: !6038)
!6038 = !{!"0xb\0010", !1, !6020}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6039 = !MDLocation(line: 3810, column: 10, scope: !6040)
!6040 = !{!"0xb\0011", !1, !6041}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6041 = !{!"0xb\007", !1, !6042}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6042 = !{!"0xb\005", !1, !6020}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6043 = !MDLocation(line: 3808, column: 9, scope: !6020)
!6044 = !MDLocation(line: 3808, column: 5, scope: !6020)
!6045 = !MDLocation(line: 3813, column: 9, scope: !6020)
!6046 = !MDLocation(line: 3813, column: 5, scope: !6020)
!6047 = !MDLocation(line: 3814, column: 4, scope: !6021)
!6048 = !MDLocation(line: 3816, column: 8, scope: !6049)
!6049 = !{!"0xb\003816\008\00684", !1, !6017}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6050 = !MDLocation(line: 3816, column: 8, scope: !6017)
!6051 = !MDLocation(line: 3816, column: 23, scope: !6052)
!6052 = !{!"0xb\001", !1, !6049}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6053 = !MDLocation(line: 3816, column: 32, scope: !6049)
!6054 = !MDLocation(line: 3816, column: 28, scope: !6049)
!6055 = !MDLocation(line: 3816, column: 23, scope: !6049)
!6056 = !MDLocation(line: 3816, column: 38, scope: !6057)
!6057 = !{!"0xb\002", !1, !6049}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6058 = !MDLocation(line: 3816, column: 47, scope: !6049)
!6059 = !MDLocation(line: 3816, column: 43, scope: !6049)
!6060 = !MDLocation(line: 3816, column: 38, scope: !6049)
!6061 = !MDLocation(line: 3818, column: 5, scope: !6062)
!6062 = !{!"0xb\003818\005\00687", !1, !6063}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6063 = !{!"0xb\003818\005\00686", !1, !6064}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6064 = !{!"0xb\003817\008\00685", !1, !6049}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6065 = !MDLocation(line: 3818, column: 5, scope: !6063)
!6066 = !MDLocation(line: 3818, column: 5, scope: !6067)
!6067 = !{!"0xb\001", !1, !6068}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6068 = !{!"0xb\003818\005\00689", !1, !6069}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6069 = !{!"0xb\003818\005\00688", !1, !6062}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6070 = !MDLocation(line: 3818, column: 5, scope: !6069)
!6071 = !MDLocation(line: 3818, column: 5, scope: !6072)
!6072 = !{!"0xb\003", !1, !6073}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6073 = !{!"0xb\003818\005\00690", !1, !6068}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6074 = !MDLocation(line: 3818, column: 5, scope: !6075)
!6075 = !{!"0xb\005", !1, !6073}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6076 = !MDLocation(line: 3818, column: 5, scope: !6077)
!6077 = !{!"0xb\006", !1, !6073}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6078 = !MDLocation(line: 3818, column: 5, scope: !6073)
!6079 = !MDLocation(line: 3818, column: 5, scope: !6080)
!6080 = !{!"0xb\008", !1, !6081}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6081 = !{!"0xb\007", !1, !6073}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6082 = !MDLocation(line: 3818, column: 5, scope: !6083)
!6083 = !{!"0xb\004", !1, !6068}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6084 = !MDLocation(line: 3818, column: 5, scope: !6085)
!6085 = !{!"0xb\009", !1, !6069}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6086 = !MDLocation(line: 3818, column: 5, scope: !6087)
!6087 = !{!"0xb\0010", !1, !6088}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6088 = !{!"0xb\002", !1, !6089}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6089 = !{!"0xb\003818\005\00691", !1, !6063}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6090 = !MDLocation(line: 3818, column: 5, scope: !6091)
!6091 = !{!"0xb\0011", !1, !6089}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6092 = !MDLocation(line: 3818, column: 5, scope: !6093)
!6093 = !{!"0xb\0012", !1, !6094}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6094 = !{!"0xb\003818\005\00692", !1, !6063}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6095 = !MDLocation(line: 3818, column: 5, scope: !6096)
!6096 = !{!"0xb\0013", !1, !6094}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6097 = !MDLocation(line: 3818, column: 5, scope: !6098)
!6098 = !{!"0xb\0014", !1, !6094}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6099 = !MDLocation(line: 3819, column: 5, scope: !6100)
!6100 = !{!"0xb\003819\005\00693", !1, !6064}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6101 = !MDLocation(line: 3819, column: 5, scope: !6064)
!6102 = !MDLocation(line: 3819, column: 5, scope: !6103)
!6103 = !{!"0xb\001", !1, !6100}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6104 = !MDLocation(line: 3820, column: 8, scope: !6064)
!6105 = !MDLocation(line: 3822, column: 4, scope: !6017)
!6106 = !MDLocation(line: 3823, column: 29, scope: !6017)
!6107 = !MDLocation(line: 3823, column: 29, scope: !6108)
!6108 = !{!"0xb\001", !1, !6017}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6109 = !MDLocation(line: 3823, column: 29, scope: !6110)
!6110 = !{!"0xb\002", !1, !6017}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6111 = !MDLocation(line: 3823, column: 18, scope: !6112)
!6112 = !{!"0xb\004", !1, !6113}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6113 = !{!"0xb\003", !1, !6017}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6114 = !MDLocation(line: 3823, column: 4, scope: !6017)
!6115 = !MDLocation(line: 3827, column: 6, scope: !2508)
!6116 = !MDLocation(line: 3830, column: 10, scope: !6117)
!6117 = !{!"0xb\003830\0010\00694", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6118 = !MDLocation(line: 3830, column: 10, scope: !2508)
!6119 = !{!"0x100\00cur_call_cc\003831\000", !6120, !538, !6121} ; [ DW_TAG_auto_variable ] [cur_call_cc] [line 3831]
!6120 = !{!"0xb\003830\0026\00695", !1, !6117}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6121 = !{!"0xf\00\000\0064\0064\000\000", null, null, !3726} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from re_cc_state]
!6122 = !MDLocation(line: 3831, column: 16, scope: !6120)
!6123 = !MDLocation(line: 3831, column: 30, scope: !6120)
!6124 = !{!"0x100\00cctmp\003832\000", !6120, !538, !3734} ; [ DW_TAG_auto_variable ] [cctmp] [line 3832]
!6125 = !MDLocation(line: 3832, column: 11, scope: !6120)
!6126 = !MDLocation(line: 3832, column: 19, scope: !6120)
!6127 = !{!"0x100\00re\003833\000", !6120, !538, !484} ; [ DW_TAG_auto_variable ] [re] [line 3833]
!6128 = !MDLocation(line: 3833, column: 11, scope: !6120)
!6129 = !MDLocation(line: 3833, column: 16, scope: !6120)
!6130 = !{!"0x100\00cp\003834\000", !6120, !538, !518} ; [ DW_TAG_auto_variable ] [cp] [line 3834]
!6131 = !MDLocation(line: 3834, column: 14, scope: !6120)
!6132 = !{!"0x100\00lastcp\003834\000", !6120, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 3834]
!6133 = !MDLocation(line: 3834, column: 18, scope: !6120)
!6134 = !MDLocation(line: 3836, column: 8, scope: !6120)
!6135 = !MDLocation(line: 3836, column: 3, scope: !6120)
!6136 = !MDLocation(line: 3837, column: 3, scope: !6120)
!6137 = !MDLocation(line: 3838, column: 16, scope: !6120)
!6138 = !MDLocation(line: 3838, column: 3, scope: !6120)
!6139 = !MDLocation(line: 3840, column: 17, scope: !6120)
!6140 = !MDLocation(line: 3840, column: 3, scope: !6120)
!6141 = !MDLocation(line: 3842, column: 12, scope: !6120)
!6142 = !MDLocation(line: 3842, column: 3, scope: !6120)
!6143 = !MDLocation(line: 3843, column: 14, scope: !6120)
!6144 = !MDLocation(line: 3843, column: 3, scope: !6120)
!6145 = !MDLocation(line: 3844, column: 20, scope: !6120)
!6146 = !MDLocation(line: 3844, column: 3, scope: !6120)
!6147 = !MDLocation(line: 3845, column: 16, scope: !6148)
!6148 = !{!"0xb\003845\007\00696", !1, !6120}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6149 = !MDLocation(line: 3845, column: 7, scope: !6148)
!6150 = !MDLocation(line: 3845, column: 7, scope: !6120)
!6151 = !MDLocation(line: 3846, column: 24, scope: !6152)
!6152 = !{!"0xb\003845\0036\00697", !1, !6148}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6153 = !MDLocation(line: 3846, column: 7, scope: !6152)
!6154 = !MDLocation(line: 3847, column: 7, scope: !6155)
!6155 = !{!"0xb\003847\007\00698", !1, !6152}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6156 = !MDLocation(line: 3847, column: 7, scope: !6152)
!6157 = !MDLocation(line: 3847, column: 7, scope: !6158)
!6158 = !{!"0xb\001", !1, !6155}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6159 = !MDLocation(line: 3848, column: 7, scope: !6152)
!6160 = !MDLocation(line: 3850, column: 3, scope: !6161)
!6161 = !{!"0xb\003850\003\00699", !1, !6120}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6162 = !MDLocation(line: 3850, column: 3, scope: !6120)
!6163 = !MDLocation(line: 3850, column: 3, scope: !6164)
!6164 = !{!"0xb\001", !1, !6161}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6165 = !MDLocation(line: 3851, column: 3, scope: !6120)
!6166 = !MDLocation(line: 3852, column: 20, scope: !6120)
!6167 = !MDLocation(line: 3852, column: 3, scope: !6120)
!6168 = !MDLocation(line: 3853, column: 14, scope: !6120)
!6169 = !MDLocation(line: 3853, column: 3, scope: !6120)
!6170 = !MDLocation(line: 3854, column: 15, scope: !6120)
!6171 = !MDLocation(line: 3854, column: 3, scope: !6120)
!6172 = !MDLocation(line: 3855, column: 12, scope: !6120)
!6173 = !MDLocation(line: 3855, column: 3, scope: !6120)
!6174 = !MDLocation(line: 3862, column: 3, scope: !6120)
!6175 = !MDLocation(line: 3864, column: 10, scope: !6176)
!6176 = !{!"0xb\003864\0010\00700", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6177 = !MDLocation(line: 3864, column: 21, scope: !6176)
!6178 = !MDLocation(line: 3864, column: 10, scope: !2508)
!6179 = !MDLocation(line: 3871, column: 3, scope: !6180)
!6180 = !{!"0xb\003864\0033\00701", !1, !6176}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6181 = !MDLocation(line: 3873, column: 20, scope: !2508)
!6182 = !MDLocation(line: 3873, column: 6, scope: !2508)
!6183 = !MDLocation(line: 3874, column: 6, scope: !2508)
!6184 = !MDLocation(line: 3876, column: 20, scope: !2508)
!6185 = !MDLocation(line: 3876, column: 6, scope: !2508)
!6186 = !MDLocation(line: 3877, column: 6, scope: !2508)
!6187 = !MDLocation(line: 3879, column: 6, scope: !2508)
!6188 = !MDLocation(line: 3880, column: 20, scope: !2508)
!6189 = !MDLocation(line: 3880, column: 6, scope: !2508)
!6190 = !MDLocation(line: 3881, column: 6, scope: !2508)
!6191 = !MDLocation(line: 3883, column: 6, scope: !2508)
!6192 = !MDLocation(line: 3884, column: 10, scope: !6193)
!6193 = !{!"0xb\003884\0010\00702", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6194 = !MDLocation(line: 3884, column: 10, scope: !2508)
!6195 = !MDLocation(line: 3885, column: 7, scope: !6196)
!6196 = !{!"0xb\003884\0023\00703", !1, !6193}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6197 = !MDLocation(line: 3885, column: 7, scope: !6198)
!6198 = !{!"0xb\001", !1, !6196}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6199 = !MDLocation(line: 3885, column: 7, scope: !6200)
!6200 = !{!"0xb\002", !1, !6196}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6201 = !MDLocation(line: 3885, column: 7, scope: !6202)
!6202 = !{!"0xb\004", !1, !6196}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6203 = !MDLocation(line: 3885, column: 7, scope: !6204)
!6204 = !{!"0xb\005", !1, !6196}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6205 = !MDLocation(line: 3885, column: 7, scope: !6206)
!6206 = !{!"0xb\007", !1, !6207}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6207 = !{!"0xb\006", !1, !6196}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6208 = !MDLocation(line: 3885, column: 3, scope: !6209)
!6209 = !{!"0xb\008", !1, !6210}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6210 = !{!"0xb\003", !1, !6196}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6211 = !MDLocation(line: 3886, column: 8, scope: !6212)
!6212 = !{!"0xb\003886\007\00704", !1, !6196}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6213 = !MDLocation(line: 3886, column: 7, scope: !6196)
!6214 = !MDLocation(line: 3887, column: 7, scope: !6212)
!6215 = !MDLocation(line: 3888, column: 17, scope: !6196)
!6216 = !MDLocation(line: 3888, column: 3, scope: !6196)
!6217 = !MDLocation(line: 3889, column: 6, scope: !6196)
!6218 = !MDLocation(line: 3891, column: 17, scope: !6193)
!6219 = !MDLocation(line: 3891, column: 3, scope: !6193)
!6220 = !MDLocation(line: 3892, column: 6, scope: !2508)
!6221 = !MDLocation(line: 3894, column: 6, scope: !2508)
!6222 = !MDLocation(line: 3895, column: 10, scope: !6223)
!6223 = !{!"0xb\003895\0010\00705", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6224 = !MDLocation(line: 3895, column: 10, scope: !2508)
!6225 = !MDLocation(line: 3896, column: 7, scope: !6226)
!6226 = !{!"0xb\003895\0023\00706", !1, !6223}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6227 = !MDLocation(line: 3896, column: 7, scope: !6228)
!6228 = !{!"0xb\001", !1, !6226}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6229 = !MDLocation(line: 3896, column: 7, scope: !6230)
!6230 = !{!"0xb\002", !1, !6226}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6231 = !MDLocation(line: 3896, column: 7, scope: !6232)
!6232 = !{!"0xb\004", !1, !6226}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6233 = !MDLocation(line: 3896, column: 7, scope: !6234)
!6234 = !{!"0xb\005", !1, !6226}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6235 = !MDLocation(line: 3896, column: 7, scope: !6236)
!6236 = !{!"0xb\007", !1, !6237}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6237 = !{!"0xb\006", !1, !6226}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6238 = !MDLocation(line: 3896, column: 3, scope: !6239)
!6239 = !{!"0xb\008", !1, !6240}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6240 = !{!"0xb\003", !1, !6226}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6241 = !MDLocation(line: 3897, column: 8, scope: !6242)
!6242 = !{!"0xb\003897\007\00707", !1, !6226}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6243 = !MDLocation(line: 3897, column: 7, scope: !6226)
!6244 = !MDLocation(line: 3898, column: 7, scope: !6242)
!6245 = !MDLocation(line: 3899, column: 17, scope: !6226)
!6246 = !MDLocation(line: 3899, column: 3, scope: !6226)
!6247 = !MDLocation(line: 3900, column: 6, scope: !6226)
!6248 = !MDLocation(line: 3902, column: 17, scope: !6223)
!6249 = !MDLocation(line: 3902, column: 3, scope: !6223)
!6250 = !MDLocation(line: 3895, column: 16, scope: !6223)
!6251 = !MDLocation(line: 3905, column: 14, scope: !2508)
!6252 = !MDLocation(line: 3905, column: 6, scope: !2508)
!6253 = !MDLocation(line: 3906, column: 19, scope: !6254)
!6254 = !{!"0xb\003906\0010\00708", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6255 = !MDLocation(line: 3906, column: 10, scope: !6254)
!6256 = !MDLocation(line: 3906, column: 29, scope: !6254)
!6257 = !MDLocation(line: 3906, column: 10, scope: !2508)
!6258 = !MDLocation(line: 3906, column: 32, scope: !6259)
!6259 = !{!"0xb\001", !1, !6254}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6260 = !MDLocation(line: 3908, column: 7, scope: !6261)
!6261 = !{!"0xb\003908\007\00710", !1, !6262}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6262 = !{!"0xb\003906\0032\00709", !1, !6254}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6263 = !MDLocation(line: 3908, column: 7, scope: !6262)
!6264 = !MDLocation(line: 3909, column: 7, scope: !6265)
!6265 = !{!"0xb\003908\0016\00711", !1, !6261}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6266 = !MDLocation(line: 3910, column: 7, scope: !6265)
!6267 = !MDLocation(line: 3911, column: 7, scope: !6265)
!6268 = !MDLocation(line: 3914, column: 7, scope: !6261)
!6269 = !MDLocation(line: 3906, column: 29, scope: !6270)
!6270 = !{!"0xb\002", !1, !6254}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6271 = !MDLocation(line: 3917, column: 10, scope: !6272)
!6272 = !{!"0xb\003917\0010\00712", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6273 = !MDLocation(line: 3917, column: 10, scope: !2508)
!6274 = !MDLocation(line: 3918, column: 3, scope: !6275)
!6275 = !{!"0xb\003917\0019\00713", !1, !6272}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6276 = !MDLocation(line: 3919, column: 3, scope: !6275)
!6277 = !MDLocation(line: 3920, column: 6, scope: !6275)
!6278 = !MDLocation(line: 3921, column: 10, scope: !6279)
!6279 = !{!"0xb\003921\0010\00714", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6280 = !MDLocation(line: 3921, column: 10, scope: !2508)
!6281 = !MDLocation(line: 3922, column: 14, scope: !6282)
!6282 = !{!"0xb\003921\0031\00715", !1, !6279}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6283 = !MDLocation(line: 3922, column: 3, scope: !6282)
!6284 = !MDLocation(line: 3923, column: 13, scope: !6282)
!6285 = !MDLocation(line: 3923, column: 3, scope: !6282)
!6286 = !MDLocation(line: 3924, column: 6, scope: !6282)
!6287 = !MDLocation(line: 3921, column: 22, scope: !6288)
!6288 = !{!"0xb\001", !1, !6279}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6289 = !MDLocation(line: 3921, column: 22, scope: !6290)
!6290 = !{!"0xb\002", !1, !6279}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6291 = !MDLocation(line: 3928, column: 13, scope: !2508)
!6292 = !MDLocation(line: 3928, column: 20, scope: !2508)
!6293 = !MDLocation(line: 3928, column: 6, scope: !2508)
!6294 = !MDLocation(line: 3929, column: 10, scope: !6295)
!6295 = !{!"0xb\003929\0010\00716", !1, !2508}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6296 = !MDLocation(line: 3929, column: 18, scope: !6295)
!6297 = !MDLocation(line: 3929, column: 10, scope: !2508)
!6298 = !MDLocation(line: 3930, column: 3, scope: !6295)
!6299 = !MDLocation(line: 3931, column: 6, scope: !2508)
!6300 = !MDLocation(line: 3933, column: 20, scope: !2508)
!6301 = !MDLocation(line: 3933, column: 20, scope: !4017)
!6302 = !MDLocation(line: 3933, column: 20, scope: !6303)
!6303 = !{!"0xb\003", !1, !2508}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6304 = !MDLocation(line: 3933, column: 20, scope: !6305)
!6305 = !{!"0xb\005", !1, !2508}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6306 = !MDLocation(line: 3933, column: 20, scope: !6307)
!6307 = !{!"0xb\007", !1, !2508}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6308 = !MDLocation(line: 3933, column: 20, scope: !6309)
!6309 = !{!"0xb\008", !1, !6310}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6310 = !{!"0xb\006", !1, !6311}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6311 = !{!"0xb\004", !1, !4020}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6312 = !MDLocation(line: 3934, column: 6, scope: !2508)
!6313 = !MDLocation(line: 3934, column: 20, scope: !2508)
!6314 = !MDLocation(line: 3933, column: 6, scope: !2508)
!6315 = !MDLocation(line: 3935, column: 6, scope: !2508)
!6316 = !MDLocation(line: 3936, column: 2, scope: !2508)
!6317 = !MDLocation(line: 3936, column: 2, scope: !4017)
!6318 = !MDLocation(line: 3938, column: 9, scope: !2496)
!6319 = !MDLocation(line: 3938, column: 2, scope: !2496)
!6320 = !MDLocation(line: 3945, column: 5, scope: !555)
!6321 = !MDLocation(line: 3947, column: 5, scope: !555)
!6322 = !MDLocation(line: 3955, column: 5, scope: !555)
!6323 = !MDLocation(line: 3968, column: 5, scope: !555)
!6324 = !MDLocation(line: 3976, column: 5, scope: !555)
!6325 = !MDLocation(line: 3979, column: 9, scope: !6326)
!6326 = !{!"0xb\003979\009\00717", !1, !555}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6327 = !MDLocation(line: 3979, column: 9, scope: !555)
!6328 = !{!"0x100\00uw\003980\000", !6329, !538, !523} ; [ DW_TAG_auto_variable ] [uw] [line 3980]
!6329 = !{!"0xb\003979\0017\00718", !1, !6326}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6330 = !MDLocation(line: 3980, column: 15, scope: !6329)
!6331 = !MDLocation(line: 3980, column: 20, scope: !6329)
!6332 = !MDLocation(line: 3982, column: 10, scope: !6329)
!6333 = !MDLocation(line: 3982, column: 2, scope: !6329)
!6334 = !{!"0x100\00uwb\003986\000", !6335, !538, !511} ; [ DW_TAG_auto_variable ] [uwb] [line 3986]
!6335 = !{!"0xb\003985\002\00720", !1, !6336}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6336 = !{!"0xb\003982\0020\00719", !1, !6329}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6337 = !MDLocation(line: 3986, column: 26, scope: !6335)
!6338 = !MDLocation(line: 3986, column: 34, scope: !6335)
!6339 = !MDLocation(line: 3986, column: 32, scope: !6335)
!6340 = !{!"0x100\00lastparen\003987\000", !6335, !538, !157} ; [ DW_TAG_auto_variable ] [lastparen] [line 3987]
!6341 = !MDLocation(line: 3987, column: 10, scope: !6335)
!6342 = !MDLocation(line: 3987, column: 22, scope: !6335)
!6343 = !MDLocation(line: 3989, column: 6, scope: !6344)
!6344 = !{!"0xb\003989\006\00721", !1, !6335}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6345 = !MDLocation(line: 3989, column: 6, scope: !6335)
!6346 = !MDLocation(line: 3989, column: 6, scope: !6347)
!6347 = !{!"0xb\001", !1, !6344}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6348 = !MDLocation(line: 3990, column: 16, scope: !6349)
!6349 = !{!"0xb\003990\006\00722", !1, !6335}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6350 = !MDLocation(line: 3990, column: 15, scope: !6349)
!6351 = !MDLocation(line: 3990, column: 11, scope: !6349)
!6352 = !MDLocation(line: 3990, column: 33, scope: !6353)
!6353 = !{!"0xb\002", !1, !6354}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6354 = !{!"0xb\001", !1, !6355}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6355 = !{!"0xb\003990\006\00723", !1, !6349}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6356 = !MDLocation(line: 3990, column: 37, scope: !6355)
!6357 = !MDLocation(line: 3990, column: 33, scope: !6355)
!6358 = !MDLocation(line: 3990, column: 6, scope: !6349)
!6359 = !MDLocation(line: 3991, column: 14, scope: !6355)
!6360 = !MDLocation(line: 3991, column: 3, scope: !6355)
!6361 = !MDLocation(line: 3990, column: 48, scope: !6355)
!6362 = !MDLocation(line: 3990, column: 6, scope: !6355)
!6363 = !MDLocation(line: 3992, column: 25, scope: !6335)
!6364 = !MDLocation(line: 3992, column: 7, scope: !6335)
!6365 = !MDLocation(line: 3992, column: 6, scope: !6335)
!6366 = !MDLocation(line: 3993, column: 20, scope: !6335)
!6367 = !MDLocation(line: 3993, column: 13, scope: !6335)
!6368 = !MDLocation(line: 3993, column: 6, scope: !6335)
!6369 = !MDLocation(line: 3994, column: 12, scope: !6370)
!6370 = !{!"0xb\003994\0011\00724", !1, !6335}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6371 = !MDLocation(line: 3994, column: 11, scope: !6335)
!6372 = !MDLocation(line: 3995, column: 4, scope: !6370)
!6373 = !MDLocation(line: 3995, column: 17, scope: !6370)
!6374 = !MDLocation(line: 3997, column: 12, scope: !6375)
!6375 = !{!"0xb\003996\0032\00725", !1, !6370}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6376 = !MDLocation(line: 3997, column: 3, scope: !6375)
!6377 = !MDLocation(line: 4001, column: 3, scope: !6375)
!6378 = !MDLocation(line: 4005, column: 16, scope: !6379)
!6379 = !{!"0xb\004005\0010\00726", !1, !6335}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6380 = !MDLocation(line: 4006, column: 11, scope: !6379)
!6381 = !MDLocation(line: 4006, column: 28, scope: !6379)
!6382 = !MDLocation(line: 4005, column: 11, scope: !6383)
!6383 = !{!"0xb\002", !1, !6384}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6384 = !{!"0xb\001", !1, !6379}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6385 = !MDLocation(line: 4005, column: 10, scope: !6335)
!6386 = !MDLocation(line: 4007, column: 11, scope: !6379)
!6387 = !MDLocation(line: 4007, column: 3, scope: !6379)
!6388 = !MDLocation(line: 4009, column: 3, scope: !6379)
!6389 = !MDLocation(line: 4010, column: 18, scope: !6335)
!6390 = !MDLocation(line: 4010, column: 6, scope: !6335)
!6391 = !MDLocation(line: 4011, column: 13, scope: !6335)
!6392 = !MDLocation(line: 4011, column: 6, scope: !6335)
!6393 = !MDLocation(line: 4012, column: 10, scope: !6394)
!6394 = !{!"0xb\004012\0010\00727", !1, !6335}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6395 = !MDLocation(line: 4012, column: 10, scope: !6335)
!6396 = !MDLocation(line: 4013, column: 10, scope: !6394)
!6397 = !MDLocation(line: 4013, column: 3, scope: !6394)
!6398 = !MDLocation(line: 4014, column: 17, scope: !6335)
!6399 = !MDLocation(line: 4014, column: 6, scope: !6335)
!6400 = !MDLocation(line: 4015, column: 16, scope: !6335)
!6401 = !MDLocation(line: 4015, column: 6, scope: !6335)
!6402 = !MDLocation(line: 4020, column: 6, scope: !6335)
!6403 = !MDLocation(line: 4024, column: 6, scope: !6336)
!6404 = !MDLocation(line: 4025, column: 2, scope: !6336)
!6405 = !MDLocation(line: 4027, column: 5, scope: !6329)
!6406 = !MDLocation(line: 4031, column: 5, scope: !555)
!6407 = !MDLocation(line: 4032, column: 1, scope: !555)
!6408 = !{!"0x101\00node\0016781552\000", !558, !538, !224} ; [ DW_TAG_arg_variable ] [node] [line 4336]
!6409 = !MDLocation(line: 4336, column: 45, scope: !558)
!6410 = !{!"0x101\00doinit\0033558768\000", !558, !538, !40} ; [ DW_TAG_arg_variable ] [doinit] [line 4336]
!6411 = !MDLocation(line: 4336, column: 56, scope: !558)
!6412 = !{!"0x101\00listsvp\0050335984\000", !558, !538, !276} ; [ DW_TAG_arg_variable ] [listsvp] [line 4336]
!6413 = !MDLocation(line: 4336, column: 69, scope: !558)
!6414 = !{!"0x101\00altsvp\0067113200\000", !558, !538, !276} ; [ DW_TAG_arg_variable ] [altsvp] [line 4336]
!6415 = !MDLocation(line: 4336, column: 83, scope: !558)
!6416 = !{!"0x100\00sw\004338\000", !558, !538, !87} ; [ DW_TAG_auto_variable ] [sw] [line 4338]
!6417 = !MDLocation(line: 4338, column: 9, scope: !558)
!6418 = !{!"0x100\00si\004339\000", !558, !538, !87} ; [ DW_TAG_auto_variable ] [si] [line 4339]
!6419 = !MDLocation(line: 4339, column: 9, scope: !558)
!6420 = !{!"0x100\00alt\004340\000", !558, !538, !87} ; [ DW_TAG_auto_variable ] [alt] [line 4340]
!6421 = !MDLocation(line: 4340, column: 9, scope: !558)
!6422 = !MDLocation(line: 4342, column: 9, scope: !6423)
!6423 = !{!"0xb\004342\009\00728", !1, !558}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6424 = !MDLocation(line: 4342, column: 9, scope: !558)
!6425 = !MDLocation(line: 4342, column: 23, scope: !6426)
!6426 = !{!"0xb\001", !1, !6423}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6427 = !{!"0x100\00n\004343\000", !6428, !538, !93} ; [ DW_TAG_auto_variable ] [n] [line 4343]
!6428 = !{!"0xb\004342\0042\00729", !1, !6423}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6429 = !MDLocation(line: 4343, column: 6, scope: !6428)
!6430 = !MDLocation(line: 4343, column: 10, scope: !6428)
!6431 = !MDLocation(line: 4345, column: 23, scope: !6432)
!6432 = !{!"0xb\004345\006\00730", !1, !6428}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6433 = !MDLocation(line: 4345, column: 6, scope: !6432)
!6434 = !MDLocation(line: 4345, column: 6, scope: !6428)
!6435 = !{!"0x100\00rv\004346\000", !6436, !538, !87} ; [ DW_TAG_auto_variable ] [rv] [line 4346]
!6436 = !{!"0xb\004345\0034\00731", !1, !6432}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6437 = !MDLocation(line: 4346, column: 10, scope: !6436)
!6438 = !MDLocation(line: 4346, column: 37, scope: !6436)
!6439 = !MDLocation(line: 4346, column: 20, scope: !6436)
!6440 = !MDLocation(line: 4346, column: 15, scope: !6436)
!6441 = !{!"0x100\00av\004347\000", !6436, !538, !118} ; [ DW_TAG_auto_variable ] [av] [line 4347]
!6442 = !MDLocation(line: 4347, column: 10, scope: !6436)
!6443 = !MDLocation(line: 4347, column: 20, scope: !6436)
!6444 = !MDLocation(line: 4347, column: 15, scope: !6436)
!6445 = !{!"0x100\00ary\004348\000", !6436, !538, !276} ; [ DW_TAG_auto_variable ] [ary] [line 4348]
!6446 = !MDLocation(line: 4348, column: 11, scope: !6436)
!6447 = !MDLocation(line: 4348, column: 17, scope: !6436)
!6448 = !{!"0x100\00a\004349\000", !6436, !538, !276} ; [ DW_TAG_auto_variable ] [a] [line 4349]
!6449 = !MDLocation(line: 4349, column: 11, scope: !6436)
!6450 = !{!"0x100\00b\004349\000", !6436, !538, !276} ; [ DW_TAG_auto_variable ] [b] [line 4349]
!6451 = !MDLocation(line: 4349, column: 16, scope: !6436)
!6452 = !MDLocation(line: 4354, column: 12, scope: !6436)
!6453 = !MDLocation(line: 4354, column: 11, scope: !6436)
!6454 = !MDLocation(line: 4354, column: 6, scope: !6436)
!6455 = !MDLocation(line: 4355, column: 11, scope: !6436)
!6456 = !MDLocation(line: 4355, column: 41, scope: !6457)
!6457 = !{!"0xb\001", !1, !6436}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6458 = !MDLocation(line: 4355, column: 40, scope: !6436)
!6459 = !MDLocation(line: 4355, column: 11, scope: !6460)
!6460 = !{!"0xb\002", !1, !6436}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6461 = !MDLocation(line: 4355, column: 6, scope: !6462)
!6462 = !{!"0xb\004", !1, !6463}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6463 = !{!"0xb\003", !1, !6436}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6464 = !MDLocation(line: 4356, column: 11, scope: !6436)
!6465 = !MDLocation(line: 4356, column: 41, scope: !6457)
!6466 = !MDLocation(line: 4356, column: 40, scope: !6436)
!6467 = !MDLocation(line: 4356, column: 11, scope: !6460)
!6468 = !MDLocation(line: 4356, column: 6, scope: !6462)
!6469 = !MDLocation(line: 4358, column: 10, scope: !6470)
!6470 = !{!"0xb\004358\0010\00732", !1, !6436}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6471 = !MDLocation(line: 4358, column: 10, scope: !6436)
!6472 = !MDLocation(line: 4359, column: 9, scope: !6470)
!6473 = !MDLocation(line: 4359, column: 8, scope: !6470)
!6474 = !MDLocation(line: 4359, column: 3, scope: !6470)
!6475 = !MDLocation(line: 4360, column: 15, scope: !6476)
!6476 = !{!"0xb\004360\0015\00733", !1, !6470}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6477 = !MDLocation(line: 4360, column: 15, scope: !6470)
!6478 = !MDLocation(line: 4360, column: 21, scope: !6479)
!6479 = !{!"0xb\001", !1, !6476}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6480 = !MDLocation(line: 4361, column: 31, scope: !6481)
!6481 = !{!"0xb\004360\0029\00734", !1, !6476}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6482 = !MDLocation(line: 4361, column: 8, scope: !6481)
!6483 = !MDLocation(line: 4361, column: 3, scope: !6481)
!6484 = !MDLocation(line: 4362, column: 18, scope: !6481)
!6485 = !MDLocation(line: 4362, column: 25, scope: !6481)
!6486 = !MDLocation(line: 4362, column: 9, scope: !6481)
!6487 = !MDLocation(line: 4363, column: 6, scope: !6481)
!6488 = !MDLocation(line: 4364, column: 10, scope: !6489)
!6489 = !{!"0xb\004364\0010\00735", !1, !6436}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6490 = !MDLocation(line: 4364, column: 10, scope: !6436)
!6491 = !MDLocation(line: 4365, column: 17, scope: !6489)
!6492 = !MDLocation(line: 4365, column: 16, scope: !6489)
!6493 = !MDLocation(line: 4365, column: 10, scope: !6489)
!6494 = !MDLocation(line: 4366, column: 2, scope: !6436)
!6495 = !MDLocation(line: 4367, column: 5, scope: !6428)
!6496 = !MDLocation(line: 4369, column: 9, scope: !6497)
!6497 = !{!"0xb\004369\009\00736", !1, !558}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6498 = !MDLocation(line: 4369, column: 9, scope: !558)
!6499 = !MDLocation(line: 4370, column: 13, scope: !6497)
!6500 = !MDLocation(line: 4370, column: 3, scope: !6497)
!6501 = !MDLocation(line: 4370, column: 2, scope: !6497)
!6502 = !MDLocation(line: 4371, column: 9, scope: !6503)
!6503 = !{!"0xb\004371\009\00737", !1, !558}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!6504 = !MDLocation(line: 4371, column: 9, scope: !558)
!6505 = !MDLocation(line: 4372, column: 13, scope: !6503)
!6506 = !MDLocation(line: 4372, column: 3, scope: !6503)
!6507 = !MDLocation(line: 4372, column: 2, scope: !6503)
!6508 = !MDLocation(line: 4374, column: 12, scope: !558)
!6509 = !MDLocation(line: 4374, column: 5, scope: !558)
