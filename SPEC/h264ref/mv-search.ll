; ModuleID = 'mv-search.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], i32, i32, i32, i32, [200 x i8], [200 x i8], [200 x i8], [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], i32, i32, i32*, i32*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [200 x i8], i32 }
%struct.ImageParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32**, i32**, i32, i32***, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]], [9 x [8 x [8 x i16]]], [2 x [4 x [16 x [16 x i16]]]], [16 x [16 x i16]], [16 x [16 x i32]], i32****, i32***, %struct.Picture*, %struct.Slice*, %struct.macroblock*, [1200 x %struct.syntaxelement], i32*, i32*, i32, i32, i32, i32, [4 x [4 x i32]], i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i16******, i16******, i16******, i16******, [15 x i16], i32, i32, i32, i32, i32, i32, i32, i32, [6 x [15 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s*, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, double*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32 }
%struct.Picture = type { i32, i32, [100 x %struct.Slice*], i32, float, float, float }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, %struct.RMPNIbuffer_s*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (i32)*, [3 x [2 x i32]] }
%struct.datapartition = type { %struct.Bitstream*, %struct.EncodingEnvironment, i32 (%struct.syntaxelement*, %struct.datapartition*)* }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, i8*, i32 }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i32 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)*, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.RMPNIbuffer_s = type { i32, i32, %struct.RMPNIbuffer_s* }
%struct.macroblock = type { i32, i32, i32, i32, i32, [8 x i32], %struct.macroblock*, %struct.macroblock*, i32, [2 x [4 x [4 x [2 x i32]]]], [16 x i32], [16 x i32], i32, i64, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DecRefPicMarking_s = type { i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s* }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.storable_picture = type { i32, i32, i32, i32, i32, i32, [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16**, i16*, i16*, i16**, i16**, i16***, i8*, i16***, i64***, i64***, i16****, i8**, i8**, %struct.storable_picture*, %struct.storable_picture*, %struct.storable_picture*, i32, i32, i32, i32, i32, i32, i32 }
%struct.colocated_params = type { i32, i32, i32, [6 x [33 x i64]], i16***, i64***, i16****, i8**, [6 x [33 x i64]], i16***, i64***, i16****, i8**, [6 x [33 x i64]], i16***, i64***, i16****, i8**, i32, i8** }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.GOP_DATA = type { i32, i32, i32, i32, i32, i32 }
%struct.RD_DATA = type { double, [16 x [16 x i32]], [16 x [16 x i32]], [16 x [16 x i32]], i32****, i32***, i32, i32, [4 x i32], [4 x i32], i32**, [16 x i32], i32, i64, i32, i16******, i16******, i16******, i16******, [2 x [4 x [4 x i16]]], i32, i32, i32, i32, i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.pix_pos = type { i32, i32, i32, i32, i32, i32 }
%struct.timeb = type { i64, i16, i16, i16 }

@QP2QUANT = constant [40 x i32] [i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 5, i32 6, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 13, i32 14, i32 16, i32 18, i32 20, i32 23, i32 25, i32 29, i32 32, i32 36, i32 40, i32 45, i32 51, i32 57, i32 64, i32 72, i32 81, i32 91], align 16
@input = external global %struct.InputParameters*
@BlockSAD = internal global i32***** null, align 8
@.str = private unnamed_addr constant [42 x i8] c"InitializeFastFullIntegerSearch: BlockSAD\00", align 1
@img = external global %struct.ImageParameters*
@search_setup_done = internal global i32** null, align 8
@.str1 = private unnamed_addr constant [51 x i8] c"InitializeFastFullIntegerSearch: search_setup_done\00", align 1
@search_center_x = internal global i32** null, align 8
@.str2 = private unnamed_addr constant [49 x i8] c"InitializeFastFullIntegerSearch: search_center_x\00", align 1
@search_center_y = internal global i32** null, align 8
@.str3 = private unnamed_addr constant [49 x i8] c"InitializeFastFullIntegerSearch: search_center_y\00", align 1
@pos_00 = internal global i32** null, align 8
@.str4 = private unnamed_addr constant [40 x i8] c"InitializeFastFullIntegerSearch: pos_00\00", align 1
@max_search_range = internal global i32** null, align 8
@.str5 = private unnamed_addr constant [50 x i8] c"InitializeFastFullIntegerSearch: max_search_range\00", align 1
@active_pps = common global %struct.pic_parameter_set_rbsp_t* null, align 8
@listX = external global [6 x %struct.storable_picture**]
@enc_picture = external global %struct.storable_picture*
@imgY_org = common global i16** null, align 8
@PelYline_11 = internal global i16* (i16*, i32, i32, i32, i32)* null, align 8
@spiral_search_x = common global i32* null, align 8
@spiral_search_y = common global i32* null, align 8
@byte_abs = common global i32* null, align 8
@pred_SAD_space = common global i32 0, align 4
@FME_blocktype = common global i32 0, align 4
@all_bwmincost = common global i32***** null, align 8
@all_mincost = common global i32***** null, align 8
@max_mvd = common global i32 0, align 4
@.str6 = private unnamed_addr constant [43 x i8] c"Init_Motion_Search_Module: spiral_search_x\00", align 1
@.str7 = private unnamed_addr constant [43 x i8] c"Init_Motion_Search_Module: spiral_search_y\00", align 1
@mvbits = common global i32* null, align 8
@.str8 = private unnamed_addr constant [34 x i8] c"Init_Motion_Search_Module: mvbits\00", align 1
@refbits = common global i32* null, align 8
@.str9 = private unnamed_addr constant [35 x i8] c"Init_Motion_Search_Module: refbits\00", align 1
@.str10 = private unnamed_addr constant [36 x i8] c"Init_Motion_Search_Module: byte_abs\00", align 1
@motion_cost = common global i32**** null, align 8
@PelY_14 = internal global i16 (i16**, i32, i32, i32, i32)* null, align 8
@wbp_weight = common global i32**** null, align 8
@luma_log_weight_denom = common global i32 0, align 4
@wp_offset = common global i32*** null, align 8
@wp_luma_round = common global i32 0, align 4
@PelY_14b = internal global i16 (i16**, i32, i32, i32, i32)* null, align 8
@BPredPartitionCost.bx0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] [i32 0, i32 2, i32 0, i32 2]], align 16
@BPredPartitionCost.by0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 0, i32 2, i32 2]], align 16
@BlockMotionSearch.orig_val = internal global [256 x i16] zeroinitializer, align 16
@BlockMotionSearch.orig_pic = internal global [16 x i16*] [i16* getelementptr inbounds ([256 x i16]* @BlockMotionSearch.orig_val, i32 0, i32 0), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 32) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 64) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 96) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 128) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 160) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 192) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 224) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 256) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 288) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 320) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 352) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 384) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 416) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 448) to i16*), i16* bitcast (i8* getelementptr (i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 480) to i16*)], align 16
@Bframe_ctr = common global i32 0, align 4
@pred_MV_uplayer = common global [2 x i32] zeroinitializer, align 4
@pred_SAD_uplayer = common global i32 0, align 4
@flag_intra_SAD = common global i32 0, align 4
@pred_SAD_time = common global i32 0, align 4
@pred_MV_time = common global [2 x i32] zeroinitializer, align 4
@pred_SAD_ref = common global i32 0, align 4
@pred_MV_ref = common global [2 x i32] zeroinitializer, align 4
@me_tot_time = common global i32 0, align 4
@me_time = common global i32 0, align 4
@BIDPartitionCost.bx0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] [i32 0, i32 2, i32 0, i32 2]], align 16
@BIDPartitionCost.by0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 0, i32 2, i32 2]], align 16
@direct_pdir = common global i16** null, align 8
@direct_ref_idx = common global i16*** null, align 8
@PartitionMotionSearch.bx0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] [i32 0, i32 2, i32 0, i32 2]], align 16
@PartitionMotionSearch.by0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 0, i32 2, i32 2]], align 16
@listXsize = external global [6 x i32]
@Co_located = external global %struct.colocated_params*
@top_pic = common global %struct.Picture* null, align 8
@bottom_pic = common global %struct.Picture* null, align 8
@frame_pic = common global %struct.Picture* null, align 8
@frame_pic2 = common global %struct.Picture* null, align 8
@frame_pic3 = common global %struct.Picture* null, align 8
@imgUV_org = common global i16*** null, align 8
@img4Y_tmp = common global i32** null, align 8
@log2_max_frame_num_minus4 = common global i32 0, align 4
@log2_max_pic_order_cnt_lsb_minus4 = common global i32 0, align 4
@active_sps = common global %struct.seq_parameter_set_rbsp_t* null, align 8
@mb_adaptive = common global i32 0, align 4
@MBPairIsField = common global i32 0, align 4
@wp_weight = common global i32*** null, align 8
@chroma_log_weight_denom = common global i32 0, align 4
@wp_chroma_round = common global i32 0, align 4
@imgY_org_top = common global i16** null, align 8
@imgY_org_bot = common global i16** null, align 8
@imgUV_org_top = common global i16*** null, align 8
@imgUV_org_bot = common global i16*** null, align 8
@imgY_org_frm = common global i16** null, align 8
@imgUV_org_frm = common global i16*** null, align 8
@imgY_com = common global i16** null, align 8
@imgUV_com = common global i16*** null, align 8
@pixel_map = common global i8** null, align 8
@refresh_map = common global i8** null, align 8
@intras = common global i32 0, align 4
@Iframe_ctr = common global i32 0, align 4
@Pframe_ctr = common global i32 0, align 4
@frame_no = common global i32 0, align 4
@nextP_tr_fld = common global i32 0, align 4
@nextP_tr_frm = common global i32 0, align 4
@tot_time = common global i32 0, align 4
@errortext = common global [300 x i8] zeroinitializer, align 16
@resTrans_R = common global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_G = common global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_B = common global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resR = common global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resG = common global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resB = common global [16 x [16 x i32]] zeroinitializer, align 16
@mprRGB = common global [3 x [16 x [16 x i32]]] zeroinitializer, align 16
@dc_level = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@dc_level_temp = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block_temp = common global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@b8_ipredmode8x8 = common global [4 x [4 x i32]] zeroinitializer, align 16
@b8_intra_pred_modes8x8 = common global [16 x i32] zeroinitializer, align 16
@gop_structure = common global %struct.GOP_DATA* null, align 8
@rdopt = common global %struct.RD_DATA* null, align 8
@rddata_top_frame_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_frame_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_top_field_mb = common global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_field_mb = common global %struct.RD_DATA zeroinitializer, align 8
@p_stat = common global %struct._IO_FILE* null, align 8
@p_log = common global %struct._IO_FILE* null, align 8
@p_trace = common global %struct._IO_FILE* null, align 8
@p_in = common global i32 0, align 4
@p_dec = common global i32 0, align 4
@glob_remapping_of_pic_nums_idc_l0 = common global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l0 = common global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l0 = common global [20 x i32] zeroinitializer, align 16
@glob_remapping_of_pic_nums_idc_l1 = common global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l1 = common global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l1 = common global [20 x i32] zeroinitializer, align 16
@Bytes_After_Header = common global i32 0, align 4
@rpc_bytes_to_go = common global i32 0, align 4
@rpc_bits_to_go = common global i32 0, align 4
@McostState = common global i32** null, align 8
@Quantize_step = common global float 0.000000e+00, align 4
@Bsize = common global [8 x float] zeroinitializer, align 16
@Thresh4x4 = common global i32 0, align 4
@AlphaSec = common global [8 x float] zeroinitializer, align 16
@AlphaThird = common global [8 x float] zeroinitializer, align 16
@flag_intra = common global i32* null, align 8
@SearchState = common global i8** null, align 8

; Function Attrs: nounwind uwtable
define void @InitializeFastFullIntegerSearch() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %list = alloca i32, align 4
  %search_range = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %1 = load %struct.InputParameters** @input, align 8
  %2 = getelementptr inbounds %struct.InputParameters* %1, i32 0, i32 8
  %3 = load i32* %2, align 4
  store i32 %3, i32* %search_range, align 4
  %4 = load i32* %search_range, align 4
  %5 = mul nsw i32 2, %4
  %6 = add nsw i32 %5, 1
  %7 = load i32* %search_range, align 4
  %8 = mul nsw i32 2, %7
  %9 = add nsw i32 %8, 1
  %10 = mul nsw i32 %6, %9
  store i32 %10, i32* %max_pos, align 4
  %11 = call noalias i8* @malloc(i64 16) #3
  %12 = bitcast i8* %11 to i32*****
  store i32***** %12, i32****** @BlockSAD, align 8
  %13 = icmp eq i32***** %12, null
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %0
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8]* @.str, i32 0, i32 0))
  br label %15

; <label>:15                                      ; preds = %14, %0
  store i32 0, i32* %list, align 4
  br label %16

; <label>:16                                      ; preds = %116, %15
  %17 = load i32* %list, align 4
  %18 = icmp slt i32 %17, 2
  br i1 %18, label %19, label %119

; <label>:19                                      ; preds = %16
  %20 = load %struct.ImageParameters** @img, align 8
  %21 = getelementptr inbounds %struct.ImageParameters* %20, i32 0, i32 9
  %22 = load i32* %21, align 4
  %23 = add nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = mul i64 %24, 8
  %26 = call noalias i8* @malloc(i64 %25) #3
  %27 = bitcast i8* %26 to i32****
  %28 = load i32* %list, align 4
  %29 = sext i32 %28 to i64
  %30 = load i32****** @BlockSAD, align 8
  %31 = getelementptr inbounds i32***** %30, i64 %29
  store i32**** %27, i32***** %31, align 8
  %32 = icmp eq i32**** %27, null
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %19
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8]* @.str, i32 0, i32 0))
  br label %34

; <label>:34                                      ; preds = %33, %19
  store i32 0, i32* %i, align 4
  br label %35

; <label>:35                                      ; preds = %112, %34
  %36 = load i32* %i, align 4
  %37 = load %struct.ImageParameters** @img, align 8
  %38 = getelementptr inbounds %struct.ImageParameters* %37, i32 0, i32 9
  %39 = load i32* %38, align 4
  %40 = icmp sle i32 %36, %39
  br i1 %40, label %41, label %115

; <label>:41                                      ; preds = %35
  %42 = call noalias i8* @malloc(i64 64) #3
  %43 = bitcast i8* %42 to i32***
  %44 = load i32* %i, align 4
  %45 = sext i32 %44 to i64
  %46 = load i32* %list, align 4
  %47 = sext i32 %46 to i64
  %48 = load i32****** @BlockSAD, align 8
  %49 = getelementptr inbounds i32***** %48, i64 %47
  %50 = load i32***** %49, align 8
  %51 = getelementptr inbounds i32**** %50, i64 %45
  store i32*** %43, i32**** %51, align 8
  %52 = icmp eq i32*** %43, null
  br i1 %52, label %53, label %54

; <label>:53                                      ; preds = %41
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8]* @.str, i32 0, i32 0))
  br label %54

; <label>:54                                      ; preds = %53, %41
  store i32 1, i32* %j, align 4
  br label %55

; <label>:55                                      ; preds = %108, %54
  %56 = load i32* %j, align 4
  %57 = icmp slt i32 %56, 8
  br i1 %57, label %58, label %111

; <label>:58                                      ; preds = %55
  %59 = call noalias i8* @malloc(i64 128) #3
  %60 = bitcast i8* %59 to i32**
  %61 = load i32* %j, align 4
  %62 = sext i32 %61 to i64
  %63 = load i32* %i, align 4
  %64 = sext i32 %63 to i64
  %65 = load i32* %list, align 4
  %66 = sext i32 %65 to i64
  %67 = load i32****** @BlockSAD, align 8
  %68 = getelementptr inbounds i32***** %67, i64 %66
  %69 = load i32***** %68, align 8
  %70 = getelementptr inbounds i32**** %69, i64 %64
  %71 = load i32**** %70, align 8
  %72 = getelementptr inbounds i32*** %71, i64 %62
  store i32** %60, i32*** %72, align 8
  %73 = icmp eq i32** %60, null
  br i1 %73, label %74, label %75

; <label>:74                                      ; preds = %58
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8]* @.str, i32 0, i32 0))
  br label %75

; <label>:75                                      ; preds = %74, %58
  store i32 0, i32* %k, align 4
  br label %76

; <label>:76                                      ; preds = %104, %75
  %77 = load i32* %k, align 4
  %78 = icmp slt i32 %77, 16
  br i1 %78, label %79, label %107

; <label>:79                                      ; preds = %76
  %80 = load i32* %max_pos, align 4
  %81 = sext i32 %80 to i64
  %82 = mul i64 %81, 4
  %83 = call noalias i8* @malloc(i64 %82) #3
  %84 = bitcast i8* %83 to i32*
  %85 = load i32* %k, align 4
  %86 = sext i32 %85 to i64
  %87 = load i32* %j, align 4
  %88 = sext i32 %87 to i64
  %89 = load i32* %i, align 4
  %90 = sext i32 %89 to i64
  %91 = load i32* %list, align 4
  %92 = sext i32 %91 to i64
  %93 = load i32****** @BlockSAD, align 8
  %94 = getelementptr inbounds i32***** %93, i64 %92
  %95 = load i32***** %94, align 8
  %96 = getelementptr inbounds i32**** %95, i64 %90
  %97 = load i32**** %96, align 8
  %98 = getelementptr inbounds i32*** %97, i64 %88
  %99 = load i32*** %98, align 8
  %100 = getelementptr inbounds i32** %99, i64 %86
  store i32* %84, i32** %100, align 8
  %101 = icmp eq i32* %84, null
  br i1 %101, label %102, label %103

; <label>:102                                     ; preds = %79
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8]* @.str, i32 0, i32 0))
  br label %103

; <label>:103                                     ; preds = %102, %79
  br label %104

; <label>:104                                     ; preds = %103
  %105 = load i32* %k, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %k, align 4
  br label %76

; <label>:107                                     ; preds = %76
  br label %108

; <label>:108                                     ; preds = %107
  %109 = load i32* %j, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %j, align 4
  br label %55

; <label>:111                                     ; preds = %55
  br label %112

; <label>:112                                     ; preds = %111
  %113 = load i32* %i, align 4
  %114 = add nsw i32 %113, 1
  store i32 %114, i32* %i, align 4
  br label %35

; <label>:115                                     ; preds = %35
  br label %116

; <label>:116                                     ; preds = %115
  %117 = load i32* %list, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %list, align 4
  br label %16

; <label>:119                                     ; preds = %16
  %120 = call noalias i8* @malloc(i64 16) #3
  %121 = bitcast i8* %120 to i32**
  store i32** %121, i32*** @search_setup_done, align 8
  %122 = icmp eq i32** %121, null
  br i1 %122, label %123, label %124

; <label>:123                                     ; preds = %119
  call void @no_mem_exit(i8* getelementptr inbounds ([51 x i8]* @.str1, i32 0, i32 0))
  br label %124

; <label>:124                                     ; preds = %123, %119
  %125 = call noalias i8* @malloc(i64 16) #3
  %126 = bitcast i8* %125 to i32**
  store i32** %126, i32*** @search_center_x, align 8
  %127 = icmp eq i32** %126, null
  br i1 %127, label %128, label %129

; <label>:128                                     ; preds = %124
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8]* @.str2, i32 0, i32 0))
  br label %129

; <label>:129                                     ; preds = %128, %124
  %130 = call noalias i8* @malloc(i64 16) #3
  %131 = bitcast i8* %130 to i32**
  store i32** %131, i32*** @search_center_y, align 8
  %132 = icmp eq i32** %131, null
  br i1 %132, label %133, label %134

; <label>:133                                     ; preds = %129
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8]* @.str3, i32 0, i32 0))
  br label %134

; <label>:134                                     ; preds = %133, %129
  %135 = call noalias i8* @malloc(i64 16) #3
  %136 = bitcast i8* %135 to i32**
  store i32** %136, i32*** @pos_00, align 8
  %137 = icmp eq i32** %136, null
  br i1 %137, label %138, label %139

; <label>:138                                     ; preds = %134
  call void @no_mem_exit(i8* getelementptr inbounds ([40 x i8]* @.str4, i32 0, i32 0))
  br label %139

; <label>:139                                     ; preds = %138, %134
  %140 = call noalias i8* @malloc(i64 16) #3
  %141 = bitcast i8* %140 to i32**
  store i32** %141, i32*** @max_search_range, align 8
  %142 = icmp eq i32** %141, null
  br i1 %142, label %143, label %144

; <label>:143                                     ; preds = %139
  call void @no_mem_exit(i8* getelementptr inbounds ([50 x i8]* @.str5, i32 0, i32 0))
  br label %144

; <label>:144                                     ; preds = %143, %139
  store i32 0, i32* %list, align 4
  br label %145

; <label>:145                                     ; preds = %224, %144
  %146 = load i32* %list, align 4
  %147 = icmp slt i32 %146, 2
  br i1 %147, label %148, label %227

; <label>:148                                     ; preds = %145
  %149 = load %struct.ImageParameters** @img, align 8
  %150 = getelementptr inbounds %struct.ImageParameters* %149, i32 0, i32 9
  %151 = load i32* %150, align 4
  %152 = add nsw i32 %151, 1
  %153 = sext i32 %152 to i64
  %154 = mul i64 %153, 4
  %155 = call noalias i8* @malloc(i64 %154) #3
  %156 = bitcast i8* %155 to i32*
  %157 = load i32* %list, align 4
  %158 = sext i32 %157 to i64
  %159 = load i32*** @search_setup_done, align 8
  %160 = getelementptr inbounds i32** %159, i64 %158
  store i32* %156, i32** %160, align 8
  %161 = icmp eq i32* %156, null
  br i1 %161, label %162, label %163

; <label>:162                                     ; preds = %148
  call void @no_mem_exit(i8* getelementptr inbounds ([51 x i8]* @.str1, i32 0, i32 0))
  br label %163

; <label>:163                                     ; preds = %162, %148
  %164 = load %struct.ImageParameters** @img, align 8
  %165 = getelementptr inbounds %struct.ImageParameters* %164, i32 0, i32 9
  %166 = load i32* %165, align 4
  %167 = add nsw i32 %166, 1
  %168 = sext i32 %167 to i64
  %169 = mul i64 %168, 4
  %170 = call noalias i8* @malloc(i64 %169) #3
  %171 = bitcast i8* %170 to i32*
  %172 = load i32* %list, align 4
  %173 = sext i32 %172 to i64
  %174 = load i32*** @search_center_x, align 8
  %175 = getelementptr inbounds i32** %174, i64 %173
  store i32* %171, i32** %175, align 8
  %176 = icmp eq i32* %171, null
  br i1 %176, label %177, label %178

; <label>:177                                     ; preds = %163
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8]* @.str2, i32 0, i32 0))
  br label %178

; <label>:178                                     ; preds = %177, %163
  %179 = load %struct.ImageParameters** @img, align 8
  %180 = getelementptr inbounds %struct.ImageParameters* %179, i32 0, i32 9
  %181 = load i32* %180, align 4
  %182 = add nsw i32 %181, 1
  %183 = sext i32 %182 to i64
  %184 = mul i64 %183, 4
  %185 = call noalias i8* @malloc(i64 %184) #3
  %186 = bitcast i8* %185 to i32*
  %187 = load i32* %list, align 4
  %188 = sext i32 %187 to i64
  %189 = load i32*** @search_center_y, align 8
  %190 = getelementptr inbounds i32** %189, i64 %188
  store i32* %186, i32** %190, align 8
  %191 = icmp eq i32* %186, null
  br i1 %191, label %192, label %193

; <label>:192                                     ; preds = %178
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8]* @.str3, i32 0, i32 0))
  br label %193

; <label>:193                                     ; preds = %192, %178
  %194 = load %struct.ImageParameters** @img, align 8
  %195 = getelementptr inbounds %struct.ImageParameters* %194, i32 0, i32 9
  %196 = load i32* %195, align 4
  %197 = add nsw i32 %196, 1
  %198 = sext i32 %197 to i64
  %199 = mul i64 %198, 4
  %200 = call noalias i8* @malloc(i64 %199) #3
  %201 = bitcast i8* %200 to i32*
  %202 = load i32* %list, align 4
  %203 = sext i32 %202 to i64
  %204 = load i32*** @pos_00, align 8
  %205 = getelementptr inbounds i32** %204, i64 %203
  store i32* %201, i32** %205, align 8
  %206 = icmp eq i32* %201, null
  br i1 %206, label %207, label %208

; <label>:207                                     ; preds = %193
  call void @no_mem_exit(i8* getelementptr inbounds ([40 x i8]* @.str4, i32 0, i32 0))
  br label %208

; <label>:208                                     ; preds = %207, %193
  %209 = load %struct.ImageParameters** @img, align 8
  %210 = getelementptr inbounds %struct.ImageParameters* %209, i32 0, i32 9
  %211 = load i32* %210, align 4
  %212 = add nsw i32 %211, 1
  %213 = sext i32 %212 to i64
  %214 = mul i64 %213, 4
  %215 = call noalias i8* @malloc(i64 %214) #3
  %216 = bitcast i8* %215 to i32*
  %217 = load i32* %list, align 4
  %218 = sext i32 %217 to i64
  %219 = load i32*** @max_search_range, align 8
  %220 = getelementptr inbounds i32** %219, i64 %218
  store i32* %216, i32** %220, align 8
  %221 = icmp eq i32* %216, null
  br i1 %221, label %222, label %223

; <label>:222                                     ; preds = %208
  call void @no_mem_exit(i8* getelementptr inbounds ([50 x i8]* @.str5, i32 0, i32 0))
  br label %223

; <label>:223                                     ; preds = %222, %208
  br label %224

; <label>:224                                     ; preds = %223
  %225 = load i32* %list, align 4
  %226 = add nsw i32 %225, 1
  store i32 %226, i32* %list, align 4
  br label %145

; <label>:227                                     ; preds = %145
  %228 = load %struct.InputParameters** @input, align 8
  %229 = getelementptr inbounds %struct.InputParameters* %228, i32 0, i32 78
  %230 = load i32* %229, align 4
  %231 = icmp eq i32 %230, 2
  br i1 %231, label %232, label %261

; <label>:232                                     ; preds = %227
  store i32 0, i32* %list, align 4
  br label %233

; <label>:233                                     ; preds = %257, %232
  %234 = load i32* %list, align 4
  %235 = icmp slt i32 %234, 2
  br i1 %235, label %236, label %260

; <label>:236                                     ; preds = %233
  store i32 0, i32* %i, align 4
  br label %237

; <label>:237                                     ; preds = %253, %236
  %238 = load i32* %i, align 4
  %239 = load %struct.ImageParameters** @img, align 8
  %240 = getelementptr inbounds %struct.ImageParameters* %239, i32 0, i32 9
  %241 = load i32* %240, align 4
  %242 = icmp sle i32 %238, %241
  br i1 %242, label %243, label %256

; <label>:243                                     ; preds = %237
  %244 = load i32* %search_range, align 4
  %245 = load i32* %i, align 4
  %246 = sext i32 %245 to i64
  %247 = load i32* %list, align 4
  %248 = sext i32 %247 to i64
  %249 = load i32*** @max_search_range, align 8
  %250 = getelementptr inbounds i32** %249, i64 %248
  %251 = load i32** %250, align 8
  %252 = getelementptr inbounds i32* %251, i64 %246
  store i32 %244, i32* %252, align 4
  br label %253

; <label>:253                                     ; preds = %243
  %254 = load i32* %i, align 4
  %255 = add nsw i32 %254, 1
  store i32 %255, i32* %i, align 4
  br label %237

; <label>:256                                     ; preds = %237
  br label %257

; <label>:257                                     ; preds = %256
  %258 = load i32* %list, align 4
  %259 = add nsw i32 %258, 1
  store i32 %259, i32* %list, align 4
  br label %233

; <label>:260                                     ; preds = %233
  br label %308

; <label>:261                                     ; preds = %227
  store i32 0, i32* %list, align 4
  br label %262

; <label>:262                                     ; preds = %304, %261
  %263 = load i32* %list, align 4
  %264 = icmp slt i32 %263, 2
  br i1 %264, label %265, label %307

; <label>:265                                     ; preds = %262
  %266 = load i32* %search_range, align 4
  %267 = load %struct.ImageParameters** @img, align 8
  %268 = getelementptr inbounds %struct.ImageParameters* %267, i32 0, i32 9
  %269 = load i32* %268, align 4
  %270 = sext i32 %269 to i64
  %271 = load i32* %list, align 4
  %272 = sext i32 %271 to i64
  %273 = load i32*** @max_search_range, align 8
  %274 = getelementptr inbounds i32** %273, i64 %272
  %275 = load i32** %274, align 8
  %276 = getelementptr inbounds i32* %275, i64 %270
  store i32 %266, i32* %276, align 4
  %277 = load i32* %list, align 4
  %278 = sext i32 %277 to i64
  %279 = load i32*** @max_search_range, align 8
  %280 = getelementptr inbounds i32** %279, i64 %278
  %281 = load i32** %280, align 8
  %282 = getelementptr inbounds i32* %281, i64 0
  store i32 %266, i32* %282, align 4
  store i32 1, i32* %i, align 4
  br label %283

; <label>:283                                     ; preds = %300, %265
  %284 = load i32* %i, align 4
  %285 = load %struct.ImageParameters** @img, align 8
  %286 = getelementptr inbounds %struct.ImageParameters* %285, i32 0, i32 9
  %287 = load i32* %286, align 4
  %288 = icmp slt i32 %284, %287
  br i1 %288, label %289, label %303

; <label>:289                                     ; preds = %283
  %290 = load i32* %search_range, align 4
  %291 = sdiv i32 %290, 2
  %292 = load i32* %i, align 4
  %293 = sext i32 %292 to i64
  %294 = load i32* %list, align 4
  %295 = sext i32 %294 to i64
  %296 = load i32*** @max_search_range, align 8
  %297 = getelementptr inbounds i32** %296, i64 %295
  %298 = load i32** %297, align 8
  %299 = getelementptr inbounds i32* %298, i64 %293
  store i32 %291, i32* %299, align 4
  br label %300

; <label>:300                                     ; preds = %289
  %301 = load i32* %i, align 4
  %302 = add nsw i32 %301, 1
  store i32 %302, i32* %i, align 4
  br label %283

; <label>:303                                     ; preds = %283
  br label %304

; <label>:304                                     ; preds = %303
  %305 = load i32* %list, align 4
  %306 = add nsw i32 %305, 1
  store i32 %306, i32* %list, align 4
  br label %262

; <label>:307                                     ; preds = %262
  br label %308

; <label>:308                                     ; preds = %307, %260
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #1

declare void @no_mem_exit(i8*) #2

; Function Attrs: nounwind uwtable
define void @ClearFastFullIntegerSearch() #0 {
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %list = alloca i32, align 4
  store i32 0, i32* %list, align 4
  br label %1

; <label>:1                                       ; preds = %80, %0
  %2 = load i32* %list, align 4
  %3 = icmp slt i32 %2, 2
  br i1 %3, label %4, label %83

; <label>:4                                       ; preds = %1
  store i32 0, i32* %i, align 4
  br label %5

; <label>:5                                       ; preds = %70, %4
  %6 = load i32* %i, align 4
  %7 = load %struct.ImageParameters** @img, align 8
  %8 = getelementptr inbounds %struct.ImageParameters* %7, i32 0, i32 9
  %9 = load i32* %8, align 4
  %10 = icmp sle i32 %6, %9
  br i1 %10, label %11, label %73

; <label>:11                                      ; preds = %5
  store i32 1, i32* %j, align 4
  br label %12

; <label>:12                                      ; preds = %56, %11
  %13 = load i32* %j, align 4
  %14 = icmp slt i32 %13, 8
  br i1 %14, label %15, label %59

; <label>:15                                      ; preds = %12
  store i32 0, i32* %k, align 4
  br label %16

; <label>:16                                      ; preds = %38, %15
  %17 = load i32* %k, align 4
  %18 = icmp slt i32 %17, 16
  br i1 %18, label %19, label %41

; <label>:19                                      ; preds = %16
  %20 = load i32* %k, align 4
  %21 = sext i32 %20 to i64
  %22 = load i32* %j, align 4
  %23 = sext i32 %22 to i64
  %24 = load i32* %i, align 4
  %25 = sext i32 %24 to i64
  %26 = load i32* %list, align 4
  %27 = sext i32 %26 to i64
  %28 = load i32****** @BlockSAD, align 8
  %29 = getelementptr inbounds i32***** %28, i64 %27
  %30 = load i32***** %29, align 8
  %31 = getelementptr inbounds i32**** %30, i64 %25
  %32 = load i32**** %31, align 8
  %33 = getelementptr inbounds i32*** %32, i64 %23
  %34 = load i32*** %33, align 8
  %35 = getelementptr inbounds i32** %34, i64 %21
  %36 = load i32** %35, align 8
  %37 = bitcast i32* %36 to i8*
  call void @free(i8* %37) #3
  br label %38

; <label>:38                                      ; preds = %19
  %39 = load i32* %k, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %k, align 4
  br label %16

; <label>:41                                      ; preds = %16
  %42 = load i32* %j, align 4
  %43 = sext i32 %42 to i64
  %44 = load i32* %i, align 4
  %45 = sext i32 %44 to i64
  %46 = load i32* %list, align 4
  %47 = sext i32 %46 to i64
  %48 = load i32****** @BlockSAD, align 8
  %49 = getelementptr inbounds i32***** %48, i64 %47
  %50 = load i32***** %49, align 8
  %51 = getelementptr inbounds i32**** %50, i64 %45
  %52 = load i32**** %51, align 8
  %53 = getelementptr inbounds i32*** %52, i64 %43
  %54 = load i32*** %53, align 8
  %55 = bitcast i32** %54 to i8*
  call void @free(i8* %55) #3
  br label %56

; <label>:56                                      ; preds = %41
  %57 = load i32* %j, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %j, align 4
  br label %12

; <label>:59                                      ; preds = %12
  %60 = load i32* %i, align 4
  %61 = sext i32 %60 to i64
  %62 = load i32* %list, align 4
  %63 = sext i32 %62 to i64
  %64 = load i32****** @BlockSAD, align 8
  %65 = getelementptr inbounds i32***** %64, i64 %63
  %66 = load i32***** %65, align 8
  %67 = getelementptr inbounds i32**** %66, i64 %61
  %68 = load i32**** %67, align 8
  %69 = bitcast i32*** %68 to i8*
  call void @free(i8* %69) #3
  br label %70

; <label>:70                                      ; preds = %59
  %71 = load i32* %i, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %i, align 4
  br label %5

; <label>:73                                      ; preds = %5
  %74 = load i32* %list, align 4
  %75 = sext i32 %74 to i64
  %76 = load i32****** @BlockSAD, align 8
  %77 = getelementptr inbounds i32***** %76, i64 %75
  %78 = load i32***** %77, align 8
  %79 = bitcast i32**** %78 to i8*
  call void @free(i8* %79) #3
  br label %80

; <label>:80                                      ; preds = %73
  %81 = load i32* %list, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %list, align 4
  br label %1

; <label>:83                                      ; preds = %1
  %84 = load i32****** @BlockSAD, align 8
  %85 = bitcast i32***** %84 to i8*
  call void @free(i8* %85) #3
  store i32 0, i32* %list, align 4
  br label %86

; <label>:86                                      ; preds = %120, %83
  %87 = load i32* %list, align 4
  %88 = icmp slt i32 %87, 2
  br i1 %88, label %89, label %123

; <label>:89                                      ; preds = %86
  %90 = load i32* %list, align 4
  %91 = sext i32 %90 to i64
  %92 = load i32*** @search_setup_done, align 8
  %93 = getelementptr inbounds i32** %92, i64 %91
  %94 = load i32** %93, align 8
  %95 = bitcast i32* %94 to i8*
  call void @free(i8* %95) #3
  %96 = load i32* %list, align 4
  %97 = sext i32 %96 to i64
  %98 = load i32*** @search_center_x, align 8
  %99 = getelementptr inbounds i32** %98, i64 %97
  %100 = load i32** %99, align 8
  %101 = bitcast i32* %100 to i8*
  call void @free(i8* %101) #3
  %102 = load i32* %list, align 4
  %103 = sext i32 %102 to i64
  %104 = load i32*** @search_center_y, align 8
  %105 = getelementptr inbounds i32** %104, i64 %103
  %106 = load i32** %105, align 8
  %107 = bitcast i32* %106 to i8*
  call void @free(i8* %107) #3
  %108 = load i32* %list, align 4
  %109 = sext i32 %108 to i64
  %110 = load i32*** @pos_00, align 8
  %111 = getelementptr inbounds i32** %110, i64 %109
  %112 = load i32** %111, align 8
  %113 = bitcast i32* %112 to i8*
  call void @free(i8* %113) #3
  %114 = load i32* %list, align 4
  %115 = sext i32 %114 to i64
  %116 = load i32*** @max_search_range, align 8
  %117 = getelementptr inbounds i32** %116, i64 %115
  %118 = load i32** %117, align 8
  %119 = bitcast i32* %118 to i8*
  call void @free(i8* %119) #3
  br label %120

; <label>:120                                     ; preds = %89
  %121 = load i32* %list, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %list, align 4
  br label %86

; <label>:123                                     ; preds = %86
  %124 = load i32*** @search_setup_done, align 8
  %125 = bitcast i32** %124 to i8*
  call void @free(i8* %125) #3
  %126 = load i32*** @search_center_x, align 8
  %127 = bitcast i32** %126 to i8*
  call void @free(i8* %127) #3
  %128 = load i32*** @search_center_y, align 8
  %129 = bitcast i32** %128 to i8*
  call void @free(i8* %129) #3
  %130 = load i32*** @pos_00, align 8
  %131 = bitcast i32** %130 to i8*
  call void @free(i8* %131) #3
  %132 = load i32*** @max_search_range, align 8
  %133 = bitcast i32** %132 to i8*
  call void @free(i8* %133) #3
  ret void
}

; Function Attrs: nounwind
declare void @free(i8*) #1

; Function Attrs: nounwind uwtable
define void @ResetFastFullIntegerSearch() #0 {
  %i = alloca i32, align 4
  %list = alloca i32, align 4
  store i32 0, i32* %list, align 4
  br label %1

; <label>:1                                       ; preds = %24, %0
  %2 = load i32* %list, align 4
  %3 = icmp slt i32 %2, 2
  br i1 %3, label %4, label %27

; <label>:4                                       ; preds = %1
  store i32 0, i32* %i, align 4
  br label %5

; <label>:5                                       ; preds = %20, %4
  %6 = load i32* %i, align 4
  %7 = load %struct.ImageParameters** @img, align 8
  %8 = getelementptr inbounds %struct.ImageParameters* %7, i32 0, i32 9
  %9 = load i32* %8, align 4
  %10 = icmp sle i32 %6, %9
  br i1 %10, label %11, label %23

; <label>:11                                      ; preds = %5
  %12 = load i32* %i, align 4
  %13 = sext i32 %12 to i64
  %14 = load i32* %list, align 4
  %15 = sext i32 %14 to i64
  %16 = load i32*** @search_setup_done, align 8
  %17 = getelementptr inbounds i32** %16, i64 %15
  %18 = load i32** %17, align 8
  %19 = getelementptr inbounds i32* %18, i64 %13
  store i32 0, i32* %19, align 4
  br label %20

; <label>:20                                      ; preds = %11
  %21 = load i32* %i, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %i, align 4
  br label %5

; <label>:23                                      ; preds = %5
  br label %24

; <label>:24                                      ; preds = %23
  %25 = load i32* %list, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %list, align 4
  br label %1

; <label>:27                                      ; preds = %1
  ret void
}

; Function Attrs: nounwind uwtable
define void @SetupLargerBlocks(i32 %list, i32 %refindex, i32 %max_pos) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %pos = alloca i32, align 4
  %_bo = alloca i32**, align 8
  %_bi = alloca i32**, align 8
  %_bj = alloca i32**, align 8
  %_o = alloca i32*, align 8
  %_i = alloca i32*, align 8
  %_j = alloca i32*, align 8
  store i32 %list, i32* %1, align 4
  store i32 %refindex, i32* %2, align 4
  store i32 %max_pos, i32* %3, align 4
  %4 = load i32* %2, align 4
  %5 = sext i32 %4 to i64
  %6 = load i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = load i32****** @BlockSAD, align 8
  %9 = getelementptr inbounds i32***** %8, i64 %7
  %10 = load i32***** %9, align 8
  %11 = getelementptr inbounds i32**** %10, i64 %5
  %12 = load i32**** %11, align 8
  %13 = getelementptr inbounds i32*** %12, i64 6
  %14 = load i32*** %13, align 8
  store i32** %14, i32*** %_bo, align 8
  %15 = load i32* %2, align 4
  %16 = sext i32 %15 to i64
  %17 = load i32* %1, align 4
  %18 = sext i32 %17 to i64
  %19 = load i32****** @BlockSAD, align 8
  %20 = getelementptr inbounds i32***** %19, i64 %18
  %21 = load i32***** %20, align 8
  %22 = getelementptr inbounds i32**** %21, i64 %16
  %23 = load i32**** %22, align 8
  %24 = getelementptr inbounds i32*** %23, i64 7
  %25 = load i32*** %24, align 8
  store i32** %25, i32*** %_bi, align 8
  %26 = load i32*** %_bi, align 8
  %27 = getelementptr inbounds i32** %26, i64 4
  store i32** %27, i32*** %_bj, align 8
  %28 = load i32*** %_bo, align 8
  %29 = load i32** %28, align 8
  store i32* %29, i32** %_o, align 8
  %30 = load i32*** %_bi, align 8
  %31 = load i32** %30, align 8
  store i32* %31, i32** %_i, align 8
  %32 = load i32*** %_bj, align 8
  %33 = load i32** %32, align 8
  store i32* %33, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %34

; <label>:34                                      ; preds = %54, %0
  %35 = load i32* %pos, align 4
  %36 = load i32* %3, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %57

; <label>:38                                      ; preds = %34
  %39 = load i32* %pos, align 4
  %40 = sext i32 %39 to i64
  %41 = load i32** %_i, align 8
  %42 = getelementptr inbounds i32* %41, i64 %40
  %43 = load i32* %42, align 4
  %44 = load i32* %pos, align 4
  %45 = sext i32 %44 to i64
  %46 = load i32** %_j, align 8
  %47 = getelementptr inbounds i32* %46, i64 %45
  %48 = load i32* %47, align 4
  %49 = add nsw i32 %43, %48
  %50 = load i32* %pos, align 4
  %51 = sext i32 %50 to i64
  %52 = load i32** %_o, align 8
  %53 = getelementptr inbounds i32* %52, i64 %51
  store i32 %49, i32* %53, align 4
  br label %54

; <label>:54                                      ; preds = %38
  %55 = load i32* %pos, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %pos, align 4
  br label %34

; <label>:57                                      ; preds = %34
  %58 = load i32*** %_bo, align 8
  %59 = getelementptr inbounds i32** %58, i64 1
  store i32** %59, i32*** %_bo, align 8
  %60 = load i32*** %_bi, align 8
  %61 = getelementptr inbounds i32** %60, i64 1
  store i32** %61, i32*** %_bi, align 8
  %62 = load i32*** %_bj, align 8
  %63 = getelementptr inbounds i32** %62, i64 1
  store i32** %63, i32*** %_bj, align 8
  %64 = load i32*** %_bo, align 8
  %65 = load i32** %64, align 8
  store i32* %65, i32** %_o, align 8
  %66 = load i32*** %_bi, align 8
  %67 = load i32** %66, align 8
  store i32* %67, i32** %_i, align 8
  %68 = load i32*** %_bj, align 8
  %69 = load i32** %68, align 8
  store i32* %69, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %70

; <label>:70                                      ; preds = %90, %57
  %71 = load i32* %pos, align 4
  %72 = load i32* %3, align 4
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %74, label %93

; <label>:74                                      ; preds = %70
  %75 = load i32* %pos, align 4
  %76 = sext i32 %75 to i64
  %77 = load i32** %_i, align 8
  %78 = getelementptr inbounds i32* %77, i64 %76
  %79 = load i32* %78, align 4
  %80 = load i32* %pos, align 4
  %81 = sext i32 %80 to i64
  %82 = load i32** %_j, align 8
  %83 = getelementptr inbounds i32* %82, i64 %81
  %84 = load i32* %83, align 4
  %85 = add nsw i32 %79, %84
  %86 = load i32* %pos, align 4
  %87 = sext i32 %86 to i64
  %88 = load i32** %_o, align 8
  %89 = getelementptr inbounds i32* %88, i64 %87
  store i32 %85, i32* %89, align 4
  br label %90

; <label>:90                                      ; preds = %74
  %91 = load i32* %pos, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %pos, align 4
  br label %70

; <label>:93                                      ; preds = %70
  %94 = load i32*** %_bo, align 8
  %95 = getelementptr inbounds i32** %94, i64 1
  store i32** %95, i32*** %_bo, align 8
  %96 = load i32*** %_bi, align 8
  %97 = getelementptr inbounds i32** %96, i64 1
  store i32** %97, i32*** %_bi, align 8
  %98 = load i32*** %_bj, align 8
  %99 = getelementptr inbounds i32** %98, i64 1
  store i32** %99, i32*** %_bj, align 8
  %100 = load i32*** %_bo, align 8
  %101 = load i32** %100, align 8
  store i32* %101, i32** %_o, align 8
  %102 = load i32*** %_bi, align 8
  %103 = load i32** %102, align 8
  store i32* %103, i32** %_i, align 8
  %104 = load i32*** %_bj, align 8
  %105 = load i32** %104, align 8
  store i32* %105, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %106

; <label>:106                                     ; preds = %126, %93
  %107 = load i32* %pos, align 4
  %108 = load i32* %3, align 4
  %109 = icmp slt i32 %107, %108
  br i1 %109, label %110, label %129

; <label>:110                                     ; preds = %106
  %111 = load i32* %pos, align 4
  %112 = sext i32 %111 to i64
  %113 = load i32** %_i, align 8
  %114 = getelementptr inbounds i32* %113, i64 %112
  %115 = load i32* %114, align 4
  %116 = load i32* %pos, align 4
  %117 = sext i32 %116 to i64
  %118 = load i32** %_j, align 8
  %119 = getelementptr inbounds i32* %118, i64 %117
  %120 = load i32* %119, align 4
  %121 = add nsw i32 %115, %120
  %122 = load i32* %pos, align 4
  %123 = sext i32 %122 to i64
  %124 = load i32** %_o, align 8
  %125 = getelementptr inbounds i32* %124, i64 %123
  store i32 %121, i32* %125, align 4
  br label %126

; <label>:126                                     ; preds = %110
  %127 = load i32* %pos, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %pos, align 4
  br label %106

; <label>:129                                     ; preds = %106
  %130 = load i32*** %_bo, align 8
  %131 = getelementptr inbounds i32** %130, i64 1
  store i32** %131, i32*** %_bo, align 8
  %132 = load i32*** %_bi, align 8
  %133 = getelementptr inbounds i32** %132, i64 1
  store i32** %133, i32*** %_bi, align 8
  %134 = load i32*** %_bj, align 8
  %135 = getelementptr inbounds i32** %134, i64 1
  store i32** %135, i32*** %_bj, align 8
  %136 = load i32*** %_bo, align 8
  %137 = load i32** %136, align 8
  store i32* %137, i32** %_o, align 8
  %138 = load i32*** %_bi, align 8
  %139 = load i32** %138, align 8
  store i32* %139, i32** %_i, align 8
  %140 = load i32*** %_bj, align 8
  %141 = load i32** %140, align 8
  store i32* %141, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %142

; <label>:142                                     ; preds = %162, %129
  %143 = load i32* %pos, align 4
  %144 = load i32* %3, align 4
  %145 = icmp slt i32 %143, %144
  br i1 %145, label %146, label %165

; <label>:146                                     ; preds = %142
  %147 = load i32* %pos, align 4
  %148 = sext i32 %147 to i64
  %149 = load i32** %_i, align 8
  %150 = getelementptr inbounds i32* %149, i64 %148
  %151 = load i32* %150, align 4
  %152 = load i32* %pos, align 4
  %153 = sext i32 %152 to i64
  %154 = load i32** %_j, align 8
  %155 = getelementptr inbounds i32* %154, i64 %153
  %156 = load i32* %155, align 4
  %157 = add nsw i32 %151, %156
  %158 = load i32* %pos, align 4
  %159 = sext i32 %158 to i64
  %160 = load i32** %_o, align 8
  %161 = getelementptr inbounds i32* %160, i64 %159
  store i32 %157, i32* %161, align 4
  br label %162

; <label>:162                                     ; preds = %146
  %163 = load i32* %pos, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %pos, align 4
  br label %142

; <label>:165                                     ; preds = %142
  %166 = load i32*** %_bo, align 8
  %167 = getelementptr inbounds i32** %166, i64 5
  store i32** %167, i32*** %_bo, align 8
  %168 = load i32*** %_bi, align 8
  %169 = getelementptr inbounds i32** %168, i64 5
  store i32** %169, i32*** %_bi, align 8
  %170 = load i32*** %_bj, align 8
  %171 = getelementptr inbounds i32** %170, i64 5
  store i32** %171, i32*** %_bj, align 8
  %172 = load i32*** %_bo, align 8
  %173 = load i32** %172, align 8
  store i32* %173, i32** %_o, align 8
  %174 = load i32*** %_bi, align 8
  %175 = load i32** %174, align 8
  store i32* %175, i32** %_i, align 8
  %176 = load i32*** %_bj, align 8
  %177 = load i32** %176, align 8
  store i32* %177, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %178

; <label>:178                                     ; preds = %198, %165
  %179 = load i32* %pos, align 4
  %180 = load i32* %3, align 4
  %181 = icmp slt i32 %179, %180
  br i1 %181, label %182, label %201

; <label>:182                                     ; preds = %178
  %183 = load i32* %pos, align 4
  %184 = sext i32 %183 to i64
  %185 = load i32** %_i, align 8
  %186 = getelementptr inbounds i32* %185, i64 %184
  %187 = load i32* %186, align 4
  %188 = load i32* %pos, align 4
  %189 = sext i32 %188 to i64
  %190 = load i32** %_j, align 8
  %191 = getelementptr inbounds i32* %190, i64 %189
  %192 = load i32* %191, align 4
  %193 = add nsw i32 %187, %192
  %194 = load i32* %pos, align 4
  %195 = sext i32 %194 to i64
  %196 = load i32** %_o, align 8
  %197 = getelementptr inbounds i32* %196, i64 %195
  store i32 %193, i32* %197, align 4
  br label %198

; <label>:198                                     ; preds = %182
  %199 = load i32* %pos, align 4
  %200 = add nsw i32 %199, 1
  store i32 %200, i32* %pos, align 4
  br label %178

; <label>:201                                     ; preds = %178
  %202 = load i32*** %_bo, align 8
  %203 = getelementptr inbounds i32** %202, i64 1
  store i32** %203, i32*** %_bo, align 8
  %204 = load i32*** %_bi, align 8
  %205 = getelementptr inbounds i32** %204, i64 1
  store i32** %205, i32*** %_bi, align 8
  %206 = load i32*** %_bj, align 8
  %207 = getelementptr inbounds i32** %206, i64 1
  store i32** %207, i32*** %_bj, align 8
  %208 = load i32*** %_bo, align 8
  %209 = load i32** %208, align 8
  store i32* %209, i32** %_o, align 8
  %210 = load i32*** %_bi, align 8
  %211 = load i32** %210, align 8
  store i32* %211, i32** %_i, align 8
  %212 = load i32*** %_bj, align 8
  %213 = load i32** %212, align 8
  store i32* %213, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %214

; <label>:214                                     ; preds = %234, %201
  %215 = load i32* %pos, align 4
  %216 = load i32* %3, align 4
  %217 = icmp slt i32 %215, %216
  br i1 %217, label %218, label %237

; <label>:218                                     ; preds = %214
  %219 = load i32* %pos, align 4
  %220 = sext i32 %219 to i64
  %221 = load i32** %_i, align 8
  %222 = getelementptr inbounds i32* %221, i64 %220
  %223 = load i32* %222, align 4
  %224 = load i32* %pos, align 4
  %225 = sext i32 %224 to i64
  %226 = load i32** %_j, align 8
  %227 = getelementptr inbounds i32* %226, i64 %225
  %228 = load i32* %227, align 4
  %229 = add nsw i32 %223, %228
  %230 = load i32* %pos, align 4
  %231 = sext i32 %230 to i64
  %232 = load i32** %_o, align 8
  %233 = getelementptr inbounds i32* %232, i64 %231
  store i32 %229, i32* %233, align 4
  br label %234

; <label>:234                                     ; preds = %218
  %235 = load i32* %pos, align 4
  %236 = add nsw i32 %235, 1
  store i32 %236, i32* %pos, align 4
  br label %214

; <label>:237                                     ; preds = %214
  %238 = load i32*** %_bo, align 8
  %239 = getelementptr inbounds i32** %238, i64 1
  store i32** %239, i32*** %_bo, align 8
  %240 = load i32*** %_bi, align 8
  %241 = getelementptr inbounds i32** %240, i64 1
  store i32** %241, i32*** %_bi, align 8
  %242 = load i32*** %_bj, align 8
  %243 = getelementptr inbounds i32** %242, i64 1
  store i32** %243, i32*** %_bj, align 8
  %244 = load i32*** %_bo, align 8
  %245 = load i32** %244, align 8
  store i32* %245, i32** %_o, align 8
  %246 = load i32*** %_bi, align 8
  %247 = load i32** %246, align 8
  store i32* %247, i32** %_i, align 8
  %248 = load i32*** %_bj, align 8
  %249 = load i32** %248, align 8
  store i32* %249, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %250

; <label>:250                                     ; preds = %270, %237
  %251 = load i32* %pos, align 4
  %252 = load i32* %3, align 4
  %253 = icmp slt i32 %251, %252
  br i1 %253, label %254, label %273

; <label>:254                                     ; preds = %250
  %255 = load i32* %pos, align 4
  %256 = sext i32 %255 to i64
  %257 = load i32** %_i, align 8
  %258 = getelementptr inbounds i32* %257, i64 %256
  %259 = load i32* %258, align 4
  %260 = load i32* %pos, align 4
  %261 = sext i32 %260 to i64
  %262 = load i32** %_j, align 8
  %263 = getelementptr inbounds i32* %262, i64 %261
  %264 = load i32* %263, align 4
  %265 = add nsw i32 %259, %264
  %266 = load i32* %pos, align 4
  %267 = sext i32 %266 to i64
  %268 = load i32** %_o, align 8
  %269 = getelementptr inbounds i32* %268, i64 %267
  store i32 %265, i32* %269, align 4
  br label %270

; <label>:270                                     ; preds = %254
  %271 = load i32* %pos, align 4
  %272 = add nsw i32 %271, 1
  store i32 %272, i32* %pos, align 4
  br label %250

; <label>:273                                     ; preds = %250
  %274 = load i32*** %_bo, align 8
  %275 = getelementptr inbounds i32** %274, i64 1
  store i32** %275, i32*** %_bo, align 8
  %276 = load i32*** %_bi, align 8
  %277 = getelementptr inbounds i32** %276, i64 1
  store i32** %277, i32*** %_bi, align 8
  %278 = load i32*** %_bj, align 8
  %279 = getelementptr inbounds i32** %278, i64 1
  store i32** %279, i32*** %_bj, align 8
  %280 = load i32*** %_bo, align 8
  %281 = load i32** %280, align 8
  store i32* %281, i32** %_o, align 8
  %282 = load i32*** %_bi, align 8
  %283 = load i32** %282, align 8
  store i32* %283, i32** %_i, align 8
  %284 = load i32*** %_bj, align 8
  %285 = load i32** %284, align 8
  store i32* %285, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %286

; <label>:286                                     ; preds = %306, %273
  %287 = load i32* %pos, align 4
  %288 = load i32* %3, align 4
  %289 = icmp slt i32 %287, %288
  br i1 %289, label %290, label %309

; <label>:290                                     ; preds = %286
  %291 = load i32* %pos, align 4
  %292 = sext i32 %291 to i64
  %293 = load i32** %_i, align 8
  %294 = getelementptr inbounds i32* %293, i64 %292
  %295 = load i32* %294, align 4
  %296 = load i32* %pos, align 4
  %297 = sext i32 %296 to i64
  %298 = load i32** %_j, align 8
  %299 = getelementptr inbounds i32* %298, i64 %297
  %300 = load i32* %299, align 4
  %301 = add nsw i32 %295, %300
  %302 = load i32* %pos, align 4
  %303 = sext i32 %302 to i64
  %304 = load i32** %_o, align 8
  %305 = getelementptr inbounds i32* %304, i64 %303
  store i32 %301, i32* %305, align 4
  br label %306

; <label>:306                                     ; preds = %290
  %307 = load i32* %pos, align 4
  %308 = add nsw i32 %307, 1
  store i32 %308, i32* %pos, align 4
  br label %286

; <label>:309                                     ; preds = %286
  %310 = load i32* %2, align 4
  %311 = sext i32 %310 to i64
  %312 = load i32* %1, align 4
  %313 = sext i32 %312 to i64
  %314 = load i32****** @BlockSAD, align 8
  %315 = getelementptr inbounds i32***** %314, i64 %313
  %316 = load i32***** %315, align 8
  %317 = getelementptr inbounds i32**** %316, i64 %311
  %318 = load i32**** %317, align 8
  %319 = getelementptr inbounds i32*** %318, i64 5
  %320 = load i32*** %319, align 8
  store i32** %320, i32*** %_bo, align 8
  %321 = load i32* %2, align 4
  %322 = sext i32 %321 to i64
  %323 = load i32* %1, align 4
  %324 = sext i32 %323 to i64
  %325 = load i32****** @BlockSAD, align 8
  %326 = getelementptr inbounds i32***** %325, i64 %324
  %327 = load i32***** %326, align 8
  %328 = getelementptr inbounds i32**** %327, i64 %322
  %329 = load i32**** %328, align 8
  %330 = getelementptr inbounds i32*** %329, i64 7
  %331 = load i32*** %330, align 8
  store i32** %331, i32*** %_bi, align 8
  %332 = load i32*** %_bi, align 8
  %333 = getelementptr inbounds i32** %332, i64 1
  store i32** %333, i32*** %_bj, align 8
  %334 = load i32*** %_bo, align 8
  %335 = load i32** %334, align 8
  store i32* %335, i32** %_o, align 8
  %336 = load i32*** %_bi, align 8
  %337 = load i32** %336, align 8
  store i32* %337, i32** %_i, align 8
  %338 = load i32*** %_bj, align 8
  %339 = load i32** %338, align 8
  store i32* %339, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %340

; <label>:340                                     ; preds = %360, %309
  %341 = load i32* %pos, align 4
  %342 = load i32* %3, align 4
  %343 = icmp slt i32 %341, %342
  br i1 %343, label %344, label %363

; <label>:344                                     ; preds = %340
  %345 = load i32* %pos, align 4
  %346 = sext i32 %345 to i64
  %347 = load i32** %_i, align 8
  %348 = getelementptr inbounds i32* %347, i64 %346
  %349 = load i32* %348, align 4
  %350 = load i32* %pos, align 4
  %351 = sext i32 %350 to i64
  %352 = load i32** %_j, align 8
  %353 = getelementptr inbounds i32* %352, i64 %351
  %354 = load i32* %353, align 4
  %355 = add nsw i32 %349, %354
  %356 = load i32* %pos, align 4
  %357 = sext i32 %356 to i64
  %358 = load i32** %_o, align 8
  %359 = getelementptr inbounds i32* %358, i64 %357
  store i32 %355, i32* %359, align 4
  br label %360

; <label>:360                                     ; preds = %344
  %361 = load i32* %pos, align 4
  %362 = add nsw i32 %361, 1
  store i32 %362, i32* %pos, align 4
  br label %340

; <label>:363                                     ; preds = %340
  %364 = load i32*** %_bo, align 8
  %365 = getelementptr inbounds i32** %364, i64 2
  store i32** %365, i32*** %_bo, align 8
  %366 = load i32*** %_bi, align 8
  %367 = getelementptr inbounds i32** %366, i64 2
  store i32** %367, i32*** %_bi, align 8
  %368 = load i32*** %_bj, align 8
  %369 = getelementptr inbounds i32** %368, i64 2
  store i32** %369, i32*** %_bj, align 8
  %370 = load i32*** %_bo, align 8
  %371 = load i32** %370, align 8
  store i32* %371, i32** %_o, align 8
  %372 = load i32*** %_bi, align 8
  %373 = load i32** %372, align 8
  store i32* %373, i32** %_i, align 8
  %374 = load i32*** %_bj, align 8
  %375 = load i32** %374, align 8
  store i32* %375, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %376

; <label>:376                                     ; preds = %396, %363
  %377 = load i32* %pos, align 4
  %378 = load i32* %3, align 4
  %379 = icmp slt i32 %377, %378
  br i1 %379, label %380, label %399

; <label>:380                                     ; preds = %376
  %381 = load i32* %pos, align 4
  %382 = sext i32 %381 to i64
  %383 = load i32** %_i, align 8
  %384 = getelementptr inbounds i32* %383, i64 %382
  %385 = load i32* %384, align 4
  %386 = load i32* %pos, align 4
  %387 = sext i32 %386 to i64
  %388 = load i32** %_j, align 8
  %389 = getelementptr inbounds i32* %388, i64 %387
  %390 = load i32* %389, align 4
  %391 = add nsw i32 %385, %390
  %392 = load i32* %pos, align 4
  %393 = sext i32 %392 to i64
  %394 = load i32** %_o, align 8
  %395 = getelementptr inbounds i32* %394, i64 %393
  store i32 %391, i32* %395, align 4
  br label %396

; <label>:396                                     ; preds = %380
  %397 = load i32* %pos, align 4
  %398 = add nsw i32 %397, 1
  store i32 %398, i32* %pos, align 4
  br label %376

; <label>:399                                     ; preds = %376
  %400 = load i32*** %_bo, align 8
  %401 = getelementptr inbounds i32** %400, i64 2
  store i32** %401, i32*** %_bo, align 8
  %402 = load i32*** %_bi, align 8
  %403 = getelementptr inbounds i32** %402, i64 2
  store i32** %403, i32*** %_bi, align 8
  %404 = load i32*** %_bj, align 8
  %405 = getelementptr inbounds i32** %404, i64 2
  store i32** %405, i32*** %_bj, align 8
  %406 = load i32*** %_bo, align 8
  %407 = load i32** %406, align 8
  store i32* %407, i32** %_o, align 8
  %408 = load i32*** %_bi, align 8
  %409 = load i32** %408, align 8
  store i32* %409, i32** %_i, align 8
  %410 = load i32*** %_bj, align 8
  %411 = load i32** %410, align 8
  store i32* %411, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %412

; <label>:412                                     ; preds = %432, %399
  %413 = load i32* %pos, align 4
  %414 = load i32* %3, align 4
  %415 = icmp slt i32 %413, %414
  br i1 %415, label %416, label %435

; <label>:416                                     ; preds = %412
  %417 = load i32* %pos, align 4
  %418 = sext i32 %417 to i64
  %419 = load i32** %_i, align 8
  %420 = getelementptr inbounds i32* %419, i64 %418
  %421 = load i32* %420, align 4
  %422 = load i32* %pos, align 4
  %423 = sext i32 %422 to i64
  %424 = load i32** %_j, align 8
  %425 = getelementptr inbounds i32* %424, i64 %423
  %426 = load i32* %425, align 4
  %427 = add nsw i32 %421, %426
  %428 = load i32* %pos, align 4
  %429 = sext i32 %428 to i64
  %430 = load i32** %_o, align 8
  %431 = getelementptr inbounds i32* %430, i64 %429
  store i32 %427, i32* %431, align 4
  br label %432

; <label>:432                                     ; preds = %416
  %433 = load i32* %pos, align 4
  %434 = add nsw i32 %433, 1
  store i32 %434, i32* %pos, align 4
  br label %412

; <label>:435                                     ; preds = %412
  %436 = load i32*** %_bo, align 8
  %437 = getelementptr inbounds i32** %436, i64 2
  store i32** %437, i32*** %_bo, align 8
  %438 = load i32*** %_bi, align 8
  %439 = getelementptr inbounds i32** %438, i64 2
  store i32** %439, i32*** %_bi, align 8
  %440 = load i32*** %_bj, align 8
  %441 = getelementptr inbounds i32** %440, i64 2
  store i32** %441, i32*** %_bj, align 8
  %442 = load i32*** %_bo, align 8
  %443 = load i32** %442, align 8
  store i32* %443, i32** %_o, align 8
  %444 = load i32*** %_bi, align 8
  %445 = load i32** %444, align 8
  store i32* %445, i32** %_i, align 8
  %446 = load i32*** %_bj, align 8
  %447 = load i32** %446, align 8
  store i32* %447, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %448

; <label>:448                                     ; preds = %468, %435
  %449 = load i32* %pos, align 4
  %450 = load i32* %3, align 4
  %451 = icmp slt i32 %449, %450
  br i1 %451, label %452, label %471

; <label>:452                                     ; preds = %448
  %453 = load i32* %pos, align 4
  %454 = sext i32 %453 to i64
  %455 = load i32** %_i, align 8
  %456 = getelementptr inbounds i32* %455, i64 %454
  %457 = load i32* %456, align 4
  %458 = load i32* %pos, align 4
  %459 = sext i32 %458 to i64
  %460 = load i32** %_j, align 8
  %461 = getelementptr inbounds i32* %460, i64 %459
  %462 = load i32* %461, align 4
  %463 = add nsw i32 %457, %462
  %464 = load i32* %pos, align 4
  %465 = sext i32 %464 to i64
  %466 = load i32** %_o, align 8
  %467 = getelementptr inbounds i32* %466, i64 %465
  store i32 %463, i32* %467, align 4
  br label %468

; <label>:468                                     ; preds = %452
  %469 = load i32* %pos, align 4
  %470 = add nsw i32 %469, 1
  store i32 %470, i32* %pos, align 4
  br label %448

; <label>:471                                     ; preds = %448
  %472 = load i32*** %_bo, align 8
  %473 = getelementptr inbounds i32** %472, i64 2
  store i32** %473, i32*** %_bo, align 8
  %474 = load i32*** %_bi, align 8
  %475 = getelementptr inbounds i32** %474, i64 2
  store i32** %475, i32*** %_bi, align 8
  %476 = load i32*** %_bj, align 8
  %477 = getelementptr inbounds i32** %476, i64 2
  store i32** %477, i32*** %_bj, align 8
  %478 = load i32*** %_bo, align 8
  %479 = load i32** %478, align 8
  store i32* %479, i32** %_o, align 8
  %480 = load i32*** %_bi, align 8
  %481 = load i32** %480, align 8
  store i32* %481, i32** %_i, align 8
  %482 = load i32*** %_bj, align 8
  %483 = load i32** %482, align 8
  store i32* %483, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %484

; <label>:484                                     ; preds = %504, %471
  %485 = load i32* %pos, align 4
  %486 = load i32* %3, align 4
  %487 = icmp slt i32 %485, %486
  br i1 %487, label %488, label %507

; <label>:488                                     ; preds = %484
  %489 = load i32* %pos, align 4
  %490 = sext i32 %489 to i64
  %491 = load i32** %_i, align 8
  %492 = getelementptr inbounds i32* %491, i64 %490
  %493 = load i32* %492, align 4
  %494 = load i32* %pos, align 4
  %495 = sext i32 %494 to i64
  %496 = load i32** %_j, align 8
  %497 = getelementptr inbounds i32* %496, i64 %495
  %498 = load i32* %497, align 4
  %499 = add nsw i32 %493, %498
  %500 = load i32* %pos, align 4
  %501 = sext i32 %500 to i64
  %502 = load i32** %_o, align 8
  %503 = getelementptr inbounds i32* %502, i64 %501
  store i32 %499, i32* %503, align 4
  br label %504

; <label>:504                                     ; preds = %488
  %505 = load i32* %pos, align 4
  %506 = add nsw i32 %505, 1
  store i32 %506, i32* %pos, align 4
  br label %484

; <label>:507                                     ; preds = %484
  %508 = load i32*** %_bo, align 8
  %509 = getelementptr inbounds i32** %508, i64 2
  store i32** %509, i32*** %_bo, align 8
  %510 = load i32*** %_bi, align 8
  %511 = getelementptr inbounds i32** %510, i64 2
  store i32** %511, i32*** %_bi, align 8
  %512 = load i32*** %_bj, align 8
  %513 = getelementptr inbounds i32** %512, i64 2
  store i32** %513, i32*** %_bj, align 8
  %514 = load i32*** %_bo, align 8
  %515 = load i32** %514, align 8
  store i32* %515, i32** %_o, align 8
  %516 = load i32*** %_bi, align 8
  %517 = load i32** %516, align 8
  store i32* %517, i32** %_i, align 8
  %518 = load i32*** %_bj, align 8
  %519 = load i32** %518, align 8
  store i32* %519, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %520

; <label>:520                                     ; preds = %540, %507
  %521 = load i32* %pos, align 4
  %522 = load i32* %3, align 4
  %523 = icmp slt i32 %521, %522
  br i1 %523, label %524, label %543

; <label>:524                                     ; preds = %520
  %525 = load i32* %pos, align 4
  %526 = sext i32 %525 to i64
  %527 = load i32** %_i, align 8
  %528 = getelementptr inbounds i32* %527, i64 %526
  %529 = load i32* %528, align 4
  %530 = load i32* %pos, align 4
  %531 = sext i32 %530 to i64
  %532 = load i32** %_j, align 8
  %533 = getelementptr inbounds i32* %532, i64 %531
  %534 = load i32* %533, align 4
  %535 = add nsw i32 %529, %534
  %536 = load i32* %pos, align 4
  %537 = sext i32 %536 to i64
  %538 = load i32** %_o, align 8
  %539 = getelementptr inbounds i32* %538, i64 %537
  store i32 %535, i32* %539, align 4
  br label %540

; <label>:540                                     ; preds = %524
  %541 = load i32* %pos, align 4
  %542 = add nsw i32 %541, 1
  store i32 %542, i32* %pos, align 4
  br label %520

; <label>:543                                     ; preds = %520
  %544 = load i32*** %_bo, align 8
  %545 = getelementptr inbounds i32** %544, i64 2
  store i32** %545, i32*** %_bo, align 8
  %546 = load i32*** %_bi, align 8
  %547 = getelementptr inbounds i32** %546, i64 2
  store i32** %547, i32*** %_bi, align 8
  %548 = load i32*** %_bj, align 8
  %549 = getelementptr inbounds i32** %548, i64 2
  store i32** %549, i32*** %_bj, align 8
  %550 = load i32*** %_bo, align 8
  %551 = load i32** %550, align 8
  store i32* %551, i32** %_o, align 8
  %552 = load i32*** %_bi, align 8
  %553 = load i32** %552, align 8
  store i32* %553, i32** %_i, align 8
  %554 = load i32*** %_bj, align 8
  %555 = load i32** %554, align 8
  store i32* %555, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %556

; <label>:556                                     ; preds = %576, %543
  %557 = load i32* %pos, align 4
  %558 = load i32* %3, align 4
  %559 = icmp slt i32 %557, %558
  br i1 %559, label %560, label %579

; <label>:560                                     ; preds = %556
  %561 = load i32* %pos, align 4
  %562 = sext i32 %561 to i64
  %563 = load i32** %_i, align 8
  %564 = getelementptr inbounds i32* %563, i64 %562
  %565 = load i32* %564, align 4
  %566 = load i32* %pos, align 4
  %567 = sext i32 %566 to i64
  %568 = load i32** %_j, align 8
  %569 = getelementptr inbounds i32* %568, i64 %567
  %570 = load i32* %569, align 4
  %571 = add nsw i32 %565, %570
  %572 = load i32* %pos, align 4
  %573 = sext i32 %572 to i64
  %574 = load i32** %_o, align 8
  %575 = getelementptr inbounds i32* %574, i64 %573
  store i32 %571, i32* %575, align 4
  br label %576

; <label>:576                                     ; preds = %560
  %577 = load i32* %pos, align 4
  %578 = add nsw i32 %577, 1
  store i32 %578, i32* %pos, align 4
  br label %556

; <label>:579                                     ; preds = %556
  %580 = load i32*** %_bo, align 8
  %581 = getelementptr inbounds i32** %580, i64 2
  store i32** %581, i32*** %_bo, align 8
  %582 = load i32*** %_bi, align 8
  %583 = getelementptr inbounds i32** %582, i64 2
  store i32** %583, i32*** %_bi, align 8
  %584 = load i32*** %_bj, align 8
  %585 = getelementptr inbounds i32** %584, i64 2
  store i32** %585, i32*** %_bj, align 8
  %586 = load i32*** %_bo, align 8
  %587 = load i32** %586, align 8
  store i32* %587, i32** %_o, align 8
  %588 = load i32*** %_bi, align 8
  %589 = load i32** %588, align 8
  store i32* %589, i32** %_i, align 8
  %590 = load i32*** %_bj, align 8
  %591 = load i32** %590, align 8
  store i32* %591, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %592

; <label>:592                                     ; preds = %612, %579
  %593 = load i32* %pos, align 4
  %594 = load i32* %3, align 4
  %595 = icmp slt i32 %593, %594
  br i1 %595, label %596, label %615

; <label>:596                                     ; preds = %592
  %597 = load i32* %pos, align 4
  %598 = sext i32 %597 to i64
  %599 = load i32** %_i, align 8
  %600 = getelementptr inbounds i32* %599, i64 %598
  %601 = load i32* %600, align 4
  %602 = load i32* %pos, align 4
  %603 = sext i32 %602 to i64
  %604 = load i32** %_j, align 8
  %605 = getelementptr inbounds i32* %604, i64 %603
  %606 = load i32* %605, align 4
  %607 = add nsw i32 %601, %606
  %608 = load i32* %pos, align 4
  %609 = sext i32 %608 to i64
  %610 = load i32** %_o, align 8
  %611 = getelementptr inbounds i32* %610, i64 %609
  store i32 %607, i32* %611, align 4
  br label %612

; <label>:612                                     ; preds = %596
  %613 = load i32* %pos, align 4
  %614 = add nsw i32 %613, 1
  store i32 %614, i32* %pos, align 4
  br label %592

; <label>:615                                     ; preds = %592
  %616 = load i32* %2, align 4
  %617 = sext i32 %616 to i64
  %618 = load i32* %1, align 4
  %619 = sext i32 %618 to i64
  %620 = load i32****** @BlockSAD, align 8
  %621 = getelementptr inbounds i32***** %620, i64 %619
  %622 = load i32***** %621, align 8
  %623 = getelementptr inbounds i32**** %622, i64 %617
  %624 = load i32**** %623, align 8
  %625 = getelementptr inbounds i32*** %624, i64 4
  %626 = load i32*** %625, align 8
  store i32** %626, i32*** %_bo, align 8
  %627 = load i32* %2, align 4
  %628 = sext i32 %627 to i64
  %629 = load i32* %1, align 4
  %630 = sext i32 %629 to i64
  %631 = load i32****** @BlockSAD, align 8
  %632 = getelementptr inbounds i32***** %631, i64 %630
  %633 = load i32***** %632, align 8
  %634 = getelementptr inbounds i32**** %633, i64 %628
  %635 = load i32**** %634, align 8
  %636 = getelementptr inbounds i32*** %635, i64 6
  %637 = load i32*** %636, align 8
  store i32** %637, i32*** %_bi, align 8
  %638 = load i32*** %_bi, align 8
  %639 = getelementptr inbounds i32** %638, i64 1
  store i32** %639, i32*** %_bj, align 8
  %640 = load i32*** %_bo, align 8
  %641 = load i32** %640, align 8
  store i32* %641, i32** %_o, align 8
  %642 = load i32*** %_bi, align 8
  %643 = load i32** %642, align 8
  store i32* %643, i32** %_i, align 8
  %644 = load i32*** %_bj, align 8
  %645 = load i32** %644, align 8
  store i32* %645, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %646

; <label>:646                                     ; preds = %666, %615
  %647 = load i32* %pos, align 4
  %648 = load i32* %3, align 4
  %649 = icmp slt i32 %647, %648
  br i1 %649, label %650, label %669

; <label>:650                                     ; preds = %646
  %651 = load i32* %pos, align 4
  %652 = sext i32 %651 to i64
  %653 = load i32** %_i, align 8
  %654 = getelementptr inbounds i32* %653, i64 %652
  %655 = load i32* %654, align 4
  %656 = load i32* %pos, align 4
  %657 = sext i32 %656 to i64
  %658 = load i32** %_j, align 8
  %659 = getelementptr inbounds i32* %658, i64 %657
  %660 = load i32* %659, align 4
  %661 = add nsw i32 %655, %660
  %662 = load i32* %pos, align 4
  %663 = sext i32 %662 to i64
  %664 = load i32** %_o, align 8
  %665 = getelementptr inbounds i32* %664, i64 %663
  store i32 %661, i32* %665, align 4
  br label %666

; <label>:666                                     ; preds = %650
  %667 = load i32* %pos, align 4
  %668 = add nsw i32 %667, 1
  store i32 %668, i32* %pos, align 4
  br label %646

; <label>:669                                     ; preds = %646
  %670 = load i32*** %_bo, align 8
  %671 = getelementptr inbounds i32** %670, i64 2
  store i32** %671, i32*** %_bo, align 8
  %672 = load i32*** %_bi, align 8
  %673 = getelementptr inbounds i32** %672, i64 2
  store i32** %673, i32*** %_bi, align 8
  %674 = load i32*** %_bj, align 8
  %675 = getelementptr inbounds i32** %674, i64 2
  store i32** %675, i32*** %_bj, align 8
  %676 = load i32*** %_bo, align 8
  %677 = load i32** %676, align 8
  store i32* %677, i32** %_o, align 8
  %678 = load i32*** %_bi, align 8
  %679 = load i32** %678, align 8
  store i32* %679, i32** %_i, align 8
  %680 = load i32*** %_bj, align 8
  %681 = load i32** %680, align 8
  store i32* %681, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %682

; <label>:682                                     ; preds = %702, %669
  %683 = load i32* %pos, align 4
  %684 = load i32* %3, align 4
  %685 = icmp slt i32 %683, %684
  br i1 %685, label %686, label %705

; <label>:686                                     ; preds = %682
  %687 = load i32* %pos, align 4
  %688 = sext i32 %687 to i64
  %689 = load i32** %_i, align 8
  %690 = getelementptr inbounds i32* %689, i64 %688
  %691 = load i32* %690, align 4
  %692 = load i32* %pos, align 4
  %693 = sext i32 %692 to i64
  %694 = load i32** %_j, align 8
  %695 = getelementptr inbounds i32* %694, i64 %693
  %696 = load i32* %695, align 4
  %697 = add nsw i32 %691, %696
  %698 = load i32* %pos, align 4
  %699 = sext i32 %698 to i64
  %700 = load i32** %_o, align 8
  %701 = getelementptr inbounds i32* %700, i64 %699
  store i32 %697, i32* %701, align 4
  br label %702

; <label>:702                                     ; preds = %686
  %703 = load i32* %pos, align 4
  %704 = add nsw i32 %703, 1
  store i32 %704, i32* %pos, align 4
  br label %682

; <label>:705                                     ; preds = %682
  %706 = load i32*** %_bo, align 8
  %707 = getelementptr inbounds i32** %706, i64 6
  store i32** %707, i32*** %_bo, align 8
  %708 = load i32*** %_bi, align 8
  %709 = getelementptr inbounds i32** %708, i64 6
  store i32** %709, i32*** %_bi, align 8
  %710 = load i32*** %_bj, align 8
  %711 = getelementptr inbounds i32** %710, i64 6
  store i32** %711, i32*** %_bj, align 8
  %712 = load i32*** %_bo, align 8
  %713 = load i32** %712, align 8
  store i32* %713, i32** %_o, align 8
  %714 = load i32*** %_bi, align 8
  %715 = load i32** %714, align 8
  store i32* %715, i32** %_i, align 8
  %716 = load i32*** %_bj, align 8
  %717 = load i32** %716, align 8
  store i32* %717, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %718

; <label>:718                                     ; preds = %738, %705
  %719 = load i32* %pos, align 4
  %720 = load i32* %3, align 4
  %721 = icmp slt i32 %719, %720
  br i1 %721, label %722, label %741

; <label>:722                                     ; preds = %718
  %723 = load i32* %pos, align 4
  %724 = sext i32 %723 to i64
  %725 = load i32** %_i, align 8
  %726 = getelementptr inbounds i32* %725, i64 %724
  %727 = load i32* %726, align 4
  %728 = load i32* %pos, align 4
  %729 = sext i32 %728 to i64
  %730 = load i32** %_j, align 8
  %731 = getelementptr inbounds i32* %730, i64 %729
  %732 = load i32* %731, align 4
  %733 = add nsw i32 %727, %732
  %734 = load i32* %pos, align 4
  %735 = sext i32 %734 to i64
  %736 = load i32** %_o, align 8
  %737 = getelementptr inbounds i32* %736, i64 %735
  store i32 %733, i32* %737, align 4
  br label %738

; <label>:738                                     ; preds = %722
  %739 = load i32* %pos, align 4
  %740 = add nsw i32 %739, 1
  store i32 %740, i32* %pos, align 4
  br label %718

; <label>:741                                     ; preds = %718
  %742 = load i32*** %_bo, align 8
  %743 = getelementptr inbounds i32** %742, i64 2
  store i32** %743, i32*** %_bo, align 8
  %744 = load i32*** %_bi, align 8
  %745 = getelementptr inbounds i32** %744, i64 2
  store i32** %745, i32*** %_bi, align 8
  %746 = load i32*** %_bj, align 8
  %747 = getelementptr inbounds i32** %746, i64 2
  store i32** %747, i32*** %_bj, align 8
  %748 = load i32*** %_bo, align 8
  %749 = load i32** %748, align 8
  store i32* %749, i32** %_o, align 8
  %750 = load i32*** %_bi, align 8
  %751 = load i32** %750, align 8
  store i32* %751, i32** %_i, align 8
  %752 = load i32*** %_bj, align 8
  %753 = load i32** %752, align 8
  store i32* %753, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %754

; <label>:754                                     ; preds = %774, %741
  %755 = load i32* %pos, align 4
  %756 = load i32* %3, align 4
  %757 = icmp slt i32 %755, %756
  br i1 %757, label %758, label %777

; <label>:758                                     ; preds = %754
  %759 = load i32* %pos, align 4
  %760 = sext i32 %759 to i64
  %761 = load i32** %_i, align 8
  %762 = getelementptr inbounds i32* %761, i64 %760
  %763 = load i32* %762, align 4
  %764 = load i32* %pos, align 4
  %765 = sext i32 %764 to i64
  %766 = load i32** %_j, align 8
  %767 = getelementptr inbounds i32* %766, i64 %765
  %768 = load i32* %767, align 4
  %769 = add nsw i32 %763, %768
  %770 = load i32* %pos, align 4
  %771 = sext i32 %770 to i64
  %772 = load i32** %_o, align 8
  %773 = getelementptr inbounds i32* %772, i64 %771
  store i32 %769, i32* %773, align 4
  br label %774

; <label>:774                                     ; preds = %758
  %775 = load i32* %pos, align 4
  %776 = add nsw i32 %775, 1
  store i32 %776, i32* %pos, align 4
  br label %754

; <label>:777                                     ; preds = %754
  %778 = load i32* %2, align 4
  %779 = sext i32 %778 to i64
  %780 = load i32* %1, align 4
  %781 = sext i32 %780 to i64
  %782 = load i32****** @BlockSAD, align 8
  %783 = getelementptr inbounds i32***** %782, i64 %781
  %784 = load i32***** %783, align 8
  %785 = getelementptr inbounds i32**** %784, i64 %779
  %786 = load i32**** %785, align 8
  %787 = getelementptr inbounds i32*** %786, i64 3
  %788 = load i32*** %787, align 8
  store i32** %788, i32*** %_bo, align 8
  %789 = load i32* %2, align 4
  %790 = sext i32 %789 to i64
  %791 = load i32* %1, align 4
  %792 = sext i32 %791 to i64
  %793 = load i32****** @BlockSAD, align 8
  %794 = getelementptr inbounds i32***** %793, i64 %792
  %795 = load i32***** %794, align 8
  %796 = getelementptr inbounds i32**** %795, i64 %790
  %797 = load i32**** %796, align 8
  %798 = getelementptr inbounds i32*** %797, i64 4
  %799 = load i32*** %798, align 8
  store i32** %799, i32*** %_bi, align 8
  %800 = load i32*** %_bi, align 8
  %801 = getelementptr inbounds i32** %800, i64 8
  store i32** %801, i32*** %_bj, align 8
  %802 = load i32*** %_bo, align 8
  %803 = load i32** %802, align 8
  store i32* %803, i32** %_o, align 8
  %804 = load i32*** %_bi, align 8
  %805 = load i32** %804, align 8
  store i32* %805, i32** %_i, align 8
  %806 = load i32*** %_bj, align 8
  %807 = load i32** %806, align 8
  store i32* %807, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %808

; <label>:808                                     ; preds = %828, %777
  %809 = load i32* %pos, align 4
  %810 = load i32* %3, align 4
  %811 = icmp slt i32 %809, %810
  br i1 %811, label %812, label %831

; <label>:812                                     ; preds = %808
  %813 = load i32* %pos, align 4
  %814 = sext i32 %813 to i64
  %815 = load i32** %_i, align 8
  %816 = getelementptr inbounds i32* %815, i64 %814
  %817 = load i32* %816, align 4
  %818 = load i32* %pos, align 4
  %819 = sext i32 %818 to i64
  %820 = load i32** %_j, align 8
  %821 = getelementptr inbounds i32* %820, i64 %819
  %822 = load i32* %821, align 4
  %823 = add nsw i32 %817, %822
  %824 = load i32* %pos, align 4
  %825 = sext i32 %824 to i64
  %826 = load i32** %_o, align 8
  %827 = getelementptr inbounds i32* %826, i64 %825
  store i32 %823, i32* %827, align 4
  br label %828

; <label>:828                                     ; preds = %812
  %829 = load i32* %pos, align 4
  %830 = add nsw i32 %829, 1
  store i32 %830, i32* %pos, align 4
  br label %808

; <label>:831                                     ; preds = %808
  %832 = load i32*** %_bo, align 8
  %833 = getelementptr inbounds i32** %832, i64 2
  store i32** %833, i32*** %_bo, align 8
  %834 = load i32*** %_bi, align 8
  %835 = getelementptr inbounds i32** %834, i64 2
  store i32** %835, i32*** %_bi, align 8
  %836 = load i32*** %_bj, align 8
  %837 = getelementptr inbounds i32** %836, i64 2
  store i32** %837, i32*** %_bj, align 8
  %838 = load i32*** %_bo, align 8
  %839 = load i32** %838, align 8
  store i32* %839, i32** %_o, align 8
  %840 = load i32*** %_bi, align 8
  %841 = load i32** %840, align 8
  store i32* %841, i32** %_i, align 8
  %842 = load i32*** %_bj, align 8
  %843 = load i32** %842, align 8
  store i32* %843, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %844

; <label>:844                                     ; preds = %864, %831
  %845 = load i32* %pos, align 4
  %846 = load i32* %3, align 4
  %847 = icmp slt i32 %845, %846
  br i1 %847, label %848, label %867

; <label>:848                                     ; preds = %844
  %849 = load i32* %pos, align 4
  %850 = sext i32 %849 to i64
  %851 = load i32** %_i, align 8
  %852 = getelementptr inbounds i32* %851, i64 %850
  %853 = load i32* %852, align 4
  %854 = load i32* %pos, align 4
  %855 = sext i32 %854 to i64
  %856 = load i32** %_j, align 8
  %857 = getelementptr inbounds i32* %856, i64 %855
  %858 = load i32* %857, align 4
  %859 = add nsw i32 %853, %858
  %860 = load i32* %pos, align 4
  %861 = sext i32 %860 to i64
  %862 = load i32** %_o, align 8
  %863 = getelementptr inbounds i32* %862, i64 %861
  store i32 %859, i32* %863, align 4
  br label %864

; <label>:864                                     ; preds = %848
  %865 = load i32* %pos, align 4
  %866 = add nsw i32 %865, 1
  store i32 %866, i32* %pos, align 4
  br label %844

; <label>:867                                     ; preds = %844
  %868 = load i32* %2, align 4
  %869 = sext i32 %868 to i64
  %870 = load i32* %1, align 4
  %871 = sext i32 %870 to i64
  %872 = load i32****** @BlockSAD, align 8
  %873 = getelementptr inbounds i32***** %872, i64 %871
  %874 = load i32***** %873, align 8
  %875 = getelementptr inbounds i32**** %874, i64 %869
  %876 = load i32**** %875, align 8
  %877 = getelementptr inbounds i32*** %876, i64 2
  %878 = load i32*** %877, align 8
  store i32** %878, i32*** %_bo, align 8
  %879 = load i32* %2, align 4
  %880 = sext i32 %879 to i64
  %881 = load i32* %1, align 4
  %882 = sext i32 %881 to i64
  %883 = load i32****** @BlockSAD, align 8
  %884 = getelementptr inbounds i32***** %883, i64 %882
  %885 = load i32***** %884, align 8
  %886 = getelementptr inbounds i32**** %885, i64 %880
  %887 = load i32**** %886, align 8
  %888 = getelementptr inbounds i32*** %887, i64 4
  %889 = load i32*** %888, align 8
  store i32** %889, i32*** %_bi, align 8
  %890 = load i32*** %_bi, align 8
  %891 = getelementptr inbounds i32** %890, i64 2
  store i32** %891, i32*** %_bj, align 8
  %892 = load i32*** %_bo, align 8
  %893 = load i32** %892, align 8
  store i32* %893, i32** %_o, align 8
  %894 = load i32*** %_bi, align 8
  %895 = load i32** %894, align 8
  store i32* %895, i32** %_i, align 8
  %896 = load i32*** %_bj, align 8
  %897 = load i32** %896, align 8
  store i32* %897, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %898

; <label>:898                                     ; preds = %918, %867
  %899 = load i32* %pos, align 4
  %900 = load i32* %3, align 4
  %901 = icmp slt i32 %899, %900
  br i1 %901, label %902, label %921

; <label>:902                                     ; preds = %898
  %903 = load i32* %pos, align 4
  %904 = sext i32 %903 to i64
  %905 = load i32** %_i, align 8
  %906 = getelementptr inbounds i32* %905, i64 %904
  %907 = load i32* %906, align 4
  %908 = load i32* %pos, align 4
  %909 = sext i32 %908 to i64
  %910 = load i32** %_j, align 8
  %911 = getelementptr inbounds i32* %910, i64 %909
  %912 = load i32* %911, align 4
  %913 = add nsw i32 %907, %912
  %914 = load i32* %pos, align 4
  %915 = sext i32 %914 to i64
  %916 = load i32** %_o, align 8
  %917 = getelementptr inbounds i32* %916, i64 %915
  store i32 %913, i32* %917, align 4
  br label %918

; <label>:918                                     ; preds = %902
  %919 = load i32* %pos, align 4
  %920 = add nsw i32 %919, 1
  store i32 %920, i32* %pos, align 4
  br label %898

; <label>:921                                     ; preds = %898
  %922 = load i32*** %_bo, align 8
  %923 = getelementptr inbounds i32** %922, i64 8
  store i32** %923, i32*** %_bo, align 8
  %924 = load i32*** %_bi, align 8
  %925 = getelementptr inbounds i32** %924, i64 8
  store i32** %925, i32*** %_bi, align 8
  %926 = load i32*** %_bj, align 8
  %927 = getelementptr inbounds i32** %926, i64 8
  store i32** %927, i32*** %_bj, align 8
  %928 = load i32*** %_bo, align 8
  %929 = load i32** %928, align 8
  store i32* %929, i32** %_o, align 8
  %930 = load i32*** %_bi, align 8
  %931 = load i32** %930, align 8
  store i32* %931, i32** %_i, align 8
  %932 = load i32*** %_bj, align 8
  %933 = load i32** %932, align 8
  store i32* %933, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %934

; <label>:934                                     ; preds = %954, %921
  %935 = load i32* %pos, align 4
  %936 = load i32* %3, align 4
  %937 = icmp slt i32 %935, %936
  br i1 %937, label %938, label %957

; <label>:938                                     ; preds = %934
  %939 = load i32* %pos, align 4
  %940 = sext i32 %939 to i64
  %941 = load i32** %_i, align 8
  %942 = getelementptr inbounds i32* %941, i64 %940
  %943 = load i32* %942, align 4
  %944 = load i32* %pos, align 4
  %945 = sext i32 %944 to i64
  %946 = load i32** %_j, align 8
  %947 = getelementptr inbounds i32* %946, i64 %945
  %948 = load i32* %947, align 4
  %949 = add nsw i32 %943, %948
  %950 = load i32* %pos, align 4
  %951 = sext i32 %950 to i64
  %952 = load i32** %_o, align 8
  %953 = getelementptr inbounds i32* %952, i64 %951
  store i32 %949, i32* %953, align 4
  br label %954

; <label>:954                                     ; preds = %938
  %955 = load i32* %pos, align 4
  %956 = add nsw i32 %955, 1
  store i32 %956, i32* %pos, align 4
  br label %934

; <label>:957                                     ; preds = %934
  %958 = load i32* %2, align 4
  %959 = sext i32 %958 to i64
  %960 = load i32* %1, align 4
  %961 = sext i32 %960 to i64
  %962 = load i32****** @BlockSAD, align 8
  %963 = getelementptr inbounds i32***** %962, i64 %961
  %964 = load i32***** %963, align 8
  %965 = getelementptr inbounds i32**** %964, i64 %959
  %966 = load i32**** %965, align 8
  %967 = getelementptr inbounds i32*** %966, i64 1
  %968 = load i32*** %967, align 8
  store i32** %968, i32*** %_bo, align 8
  %969 = load i32* %2, align 4
  %970 = sext i32 %969 to i64
  %971 = load i32* %1, align 4
  %972 = sext i32 %971 to i64
  %973 = load i32****** @BlockSAD, align 8
  %974 = getelementptr inbounds i32***** %973, i64 %972
  %975 = load i32***** %974, align 8
  %976 = getelementptr inbounds i32**** %975, i64 %970
  %977 = load i32**** %976, align 8
  %978 = getelementptr inbounds i32*** %977, i64 3
  %979 = load i32*** %978, align 8
  store i32** %979, i32*** %_bi, align 8
  %980 = load i32*** %_bi, align 8
  %981 = getelementptr inbounds i32** %980, i64 2
  store i32** %981, i32*** %_bj, align 8
  %982 = load i32*** %_bo, align 8
  %983 = load i32** %982, align 8
  store i32* %983, i32** %_o, align 8
  %984 = load i32*** %_bi, align 8
  %985 = load i32** %984, align 8
  store i32* %985, i32** %_i, align 8
  %986 = load i32*** %_bj, align 8
  %987 = load i32** %986, align 8
  store i32* %987, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %988

; <label>:988                                     ; preds = %1008, %957
  %989 = load i32* %pos, align 4
  %990 = load i32* %3, align 4
  %991 = icmp slt i32 %989, %990
  br i1 %991, label %992, label %1011

; <label>:992                                     ; preds = %988
  %993 = load i32* %pos, align 4
  %994 = sext i32 %993 to i64
  %995 = load i32** %_i, align 8
  %996 = getelementptr inbounds i32* %995, i64 %994
  %997 = load i32* %996, align 4
  %998 = load i32* %pos, align 4
  %999 = sext i32 %998 to i64
  %1000 = load i32** %_j, align 8
  %1001 = getelementptr inbounds i32* %1000, i64 %999
  %1002 = load i32* %1001, align 4
  %1003 = add nsw i32 %997, %1002
  %1004 = load i32* %pos, align 4
  %1005 = sext i32 %1004 to i64
  %1006 = load i32** %_o, align 8
  %1007 = getelementptr inbounds i32* %1006, i64 %1005
  store i32 %1003, i32* %1007, align 4
  br label %1008

; <label>:1008                                    ; preds = %992
  %1009 = load i32* %pos, align 4
  %1010 = add nsw i32 %1009, 1
  store i32 %1010, i32* %pos, align 4
  br label %988

; <label>:1011                                    ; preds = %988
  ret void
}

; Function Attrs: nounwind uwtable
define void @SetupFastFullPelSearch(i16 signext %ref, i32 %list) #0 {
  %1 = alloca i16, align 2
  %2 = alloca i32, align 4
  %pmv = alloca [2 x i16], align 2
  %orig_blocks = alloca [256 x i16], align 16
  %orgptr = alloca i16*, align 8
  %refptr = alloca i16*, align 8
  %offset_x = alloca i32, align 4
  %offset_y = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %range_partly_outside = alloca i32, align 4
  %ref_x = alloca i32, align 4
  %ref_y = alloca i32, align 4
  %pos = alloca i32, align 4
  %abs_x = alloca i32, align 4
  %abs_y = alloca i32, align 4
  %bindex = alloca i32, align 4
  %blky = alloca i32, align 4
  %LineSadBlk0 = alloca i32, align 4
  %LineSadBlk1 = alloca i32, align 4
  %LineSadBlk2 = alloca i32, align 4
  %LineSadBlk3 = alloca i32, align 4
  %max_width = alloca i32, align 4
  %max_height = alloca i32, align 4
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %ref_picture = alloca %struct.storable_picture*, align 8
  %ref_pic = alloca i16*, align 8
  %block_sad = alloca i32**, align 8
  %search_range = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %list_offset = alloca i32, align 4
  %apply_weights = alloca i32, align 4
  store i16 %ref, i16* %1, align 2
  store i32 %list, i32* %2, align 4
  %3 = getelementptr inbounds [256 x i16]* %orig_blocks, i32 0, i32 0
  store i16* %3, i16** %orgptr, align 8
  %4 = load i16* %1, align 2
  %5 = sext i16 %4 to i64
  %6 = load i32* %2, align 4
  %7 = sext i32 %6 to i64
  %8 = load i32****** @BlockSAD, align 8
  %9 = getelementptr inbounds i32***** %8, i64 %7
  %10 = load i32***** %9, align 8
  %11 = getelementptr inbounds i32**** %10, i64 %5
  %12 = load i32**** %11, align 8
  %13 = getelementptr inbounds i32*** %12, i64 7
  %14 = load i32*** %13, align 8
  store i32** %14, i32*** %block_sad, align 8
  %15 = load i16* %1, align 2
  %16 = sext i16 %15 to i64
  %17 = load i32* %2, align 4
  %18 = sext i32 %17 to i64
  %19 = load i32*** @max_search_range, align 8
  %20 = getelementptr inbounds i32** %19, i64 %18
  %21 = load i32** %20, align 8
  %22 = getelementptr inbounds i32* %21, i64 %16
  %23 = load i32* %22, align 4
  store i32 %23, i32* %search_range, align 4
  %24 = load i32* %search_range, align 4
  %25 = mul nsw i32 2, %24
  %26 = add nsw i32 %25, 1
  %27 = load i32* %search_range, align 4
  %28 = mul nsw i32 2, %27
  %29 = add nsw i32 %28, 1
  %30 = mul nsw i32 %26, %29
  store i32 %30, i32* %max_pos, align 4
  %31 = load %struct.ImageParameters** @img, align 8
  %32 = getelementptr inbounds %struct.ImageParameters* %31, i32 0, i32 90
  %33 = load i32* %32, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %54

; <label>:35                                      ; preds = %0
  %36 = load %struct.ImageParameters** @img, align 8
  %37 = getelementptr inbounds %struct.ImageParameters* %36, i32 0, i32 3
  %38 = load i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = load %struct.ImageParameters** @img, align 8
  %41 = getelementptr inbounds %struct.ImageParameters* %40, i32 0, i32 51
  %42 = load %struct.macroblock** %41, align 8
  %43 = getelementptr inbounds %struct.macroblock* %42, i64 %39
  %44 = getelementptr inbounds %struct.macroblock* %43, i32 0, i32 22
  %45 = load i32* %44, align 4
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %54

; <label>:47                                      ; preds = %35
  %48 = load %struct.ImageParameters** @img, align 8
  %49 = getelementptr inbounds %struct.ImageParameters* %48, i32 0, i32 3
  %50 = load i32* %49, align 4
  %51 = srem i32 %50, 2
  %52 = icmp ne i32 %51, 0
  %53 = select i1 %52, i32 4, i32 2
  br label %55

; <label>:54                                      ; preds = %35, %0
  br label %55

; <label>:55                                      ; preds = %54, %47
  %56 = phi i32 [ %53, %47 ], [ 0, %54 ]
  store i32 %56, i32* %list_offset, align 4
  %57 = load %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %58 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %57, i32 0, i32 19
  %59 = load i32* %58, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %71

; <label>:61                                      ; preds = %55
  %62 = load %struct.ImageParameters** @img, align 8
  %63 = getelementptr inbounds %struct.ImageParameters* %62, i32 0, i32 6
  %64 = load i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %83, label %66

; <label>:66                                      ; preds = %61
  %67 = load %struct.ImageParameters** @img, align 8
  %68 = getelementptr inbounds %struct.ImageParameters* %67, i32 0, i32 6
  %69 = load i32* %68, align 4
  %70 = icmp eq i32 %69, 3
  br i1 %70, label %83, label %71

; <label>:71                                      ; preds = %66, %55
  %72 = load %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %73 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %72, i32 0, i32 20
  %74 = load i32* %73, align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %81

; <label>:76                                      ; preds = %71
  %77 = load %struct.ImageParameters** @img, align 8
  %78 = getelementptr inbounds %struct.ImageParameters* %77, i32 0, i32 6
  %79 = load i32* %78, align 4
  %80 = icmp eq i32 %79, 1
  br label %81

; <label>:81                                      ; preds = %76, %71
  %82 = phi i1 [ false, %71 ], [ %80, %76 ]
  br label %83

; <label>:83                                      ; preds = %81, %66, %61
  %84 = phi i1 [ true, %66 ], [ true, %61 ], [ %82, %81 ]
  %85 = zext i1 %84 to i32
  store i32 %85, i32* %apply_weights, align 4
  %86 = load i16* %1, align 2
  %87 = sext i16 %86 to i64
  %88 = load i32* %2, align 4
  %89 = load i32* %list_offset, align 4
  %90 = add nsw i32 %88, %89
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %91
  %93 = load %struct.storable_picture*** %92, align 8
  %94 = getelementptr inbounds %struct.storable_picture** %93, i64 %87
  %95 = load %struct.storable_picture** %94, align 8
  store %struct.storable_picture* %95, %struct.storable_picture** %ref_picture, align 8
  %96 = load i32* %apply_weights, align 4
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %107

; <label>:98                                      ; preds = %83
  %99 = load %struct.InputParameters** @input, align 8
  %100 = getelementptr inbounds %struct.InputParameters* %99, i32 0, i32 48
  %101 = load i32* %100, align 4
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %107

; <label>:103                                     ; preds = %98
  %104 = load %struct.storable_picture** %ref_picture, align 8
  %105 = getelementptr inbounds %struct.storable_picture* %104, i32 0, i32 27
  %106 = load i16** %105, align 8
  store i16* %106, i16** %ref_pic, align 8
  br label %111

; <label>:107                                     ; preds = %98, %83
  %108 = load %struct.storable_picture** %ref_picture, align 8
  %109 = getelementptr inbounds %struct.storable_picture* %108, i32 0, i32 26
  %110 = load i16** %109, align 8
  store i16* %110, i16** %ref_pic, align 8
  br label %111

; <label>:111                                     ; preds = %107, %103
  %112 = load %struct.storable_picture** %ref_picture, align 8
  %113 = getelementptr inbounds %struct.storable_picture* %112, i32 0, i32 18
  %114 = load i32* %113, align 4
  %115 = sub nsw i32 %114, 17
  store i32 %115, i32* %max_width, align 4
  %116 = load %struct.storable_picture** %ref_picture, align 8
  %117 = getelementptr inbounds %struct.storable_picture* %116, i32 0, i32 19
  %118 = load i32* %117, align 4
  %119 = sub nsw i32 %118, 17
  store i32 %119, i32* %max_height, align 4
  %120 = load %struct.storable_picture** %ref_picture, align 8
  %121 = getelementptr inbounds %struct.storable_picture* %120, i32 0, i32 18
  %122 = load i32* %121, align 4
  store i32 %122, i32* %img_width, align 4
  %123 = load %struct.storable_picture** %ref_picture, align 8
  %124 = getelementptr inbounds %struct.storable_picture* %123, i32 0, i32 19
  %125 = load i32* %124, align 4
  store i32 %125, i32* %img_height, align 4
  %126 = getelementptr inbounds [2 x i16]* %pmv, i32 0, i32 0
  %127 = load %struct.storable_picture** @enc_picture, align 8
  %128 = getelementptr inbounds %struct.storable_picture* %127, i32 0, i32 32
  %129 = load i16**** %128, align 8
  %130 = load %struct.storable_picture** @enc_picture, align 8
  %131 = getelementptr inbounds %struct.storable_picture* %130, i32 0, i32 35
  %132 = load i16***** %131, align 8
  %133 = load i16* %1, align 2
  %134 = load i32* %2, align 4
  call void @SetMotionVectorPredictor(i16* %126, i16*** %129, i16**** %132, i16 signext %133, i32 %134, i32 0, i32 0, i32 16, i32 16)
  %135 = getelementptr inbounds [2 x i16]* %pmv, i32 0, i64 0
  %136 = load i16* %135, align 2
  %137 = sext i16 %136 to i32
  %138 = sdiv i32 %137, 4
  %139 = load i16* %1, align 2
  %140 = sext i16 %139 to i64
  %141 = load i32* %2, align 4
  %142 = sext i32 %141 to i64
  %143 = load i32*** @search_center_x, align 8
  %144 = getelementptr inbounds i32** %143, i64 %142
  %145 = load i32** %144, align 8
  %146 = getelementptr inbounds i32* %145, i64 %140
  store i32 %138, i32* %146, align 4
  %147 = getelementptr inbounds [2 x i16]* %pmv, i32 0, i64 1
  %148 = load i16* %147, align 2
  %149 = sext i16 %148 to i32
  %150 = sdiv i32 %149, 4
  %151 = load i16* %1, align 2
  %152 = sext i16 %151 to i64
  %153 = load i32* %2, align 4
  %154 = sext i32 %153 to i64
  %155 = load i32*** @search_center_y, align 8
  %156 = getelementptr inbounds i32** %155, i64 %154
  %157 = load i32** %156, align 8
  %158 = getelementptr inbounds i32* %157, i64 %152
  store i32 %150, i32* %158, align 4
  %159 = load %struct.InputParameters** @input, align 8
  %160 = getelementptr inbounds %struct.InputParameters* %159, i32 0, i32 85
  %161 = load i32* %160, align 4
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %298, label %163

; <label>:163                                     ; preds = %111
  %164 = load i32* %search_range, align 4
  %165 = sub nsw i32 0, %164
  %166 = load i32* %search_range, align 4
  %167 = load i16* %1, align 2
  %168 = sext i16 %167 to i64
  %169 = load i32* %2, align 4
  %170 = sext i32 %169 to i64
  %171 = load i32*** @search_center_x, align 8
  %172 = getelementptr inbounds i32** %171, i64 %170
  %173 = load i32** %172, align 8
  %174 = getelementptr inbounds i32* %173, i64 %168
  %175 = load i32* %174, align 4
  %176 = icmp slt i32 %166, %175
  br i1 %176, label %177, label %179

; <label>:177                                     ; preds = %163
  %178 = load i32* %search_range, align 4
  br label %189

; <label>:179                                     ; preds = %163
  %180 = load i16* %1, align 2
  %181 = sext i16 %180 to i64
  %182 = load i32* %2, align 4
  %183 = sext i32 %182 to i64
  %184 = load i32*** @search_center_x, align 8
  %185 = getelementptr inbounds i32** %184, i64 %183
  %186 = load i32** %185, align 8
  %187 = getelementptr inbounds i32* %186, i64 %181
  %188 = load i32* %187, align 4
  br label %189

; <label>:189                                     ; preds = %179, %177
  %190 = phi i32 [ %178, %177 ], [ %188, %179 ]
  %191 = icmp sgt i32 %165, %190
  br i1 %191, label %192, label %195

; <label>:192                                     ; preds = %189
  %193 = load i32* %search_range, align 4
  %194 = sub nsw i32 0, %193
  br label %221

; <label>:195                                     ; preds = %189
  %196 = load i32* %search_range, align 4
  %197 = load i16* %1, align 2
  %198 = sext i16 %197 to i64
  %199 = load i32* %2, align 4
  %200 = sext i32 %199 to i64
  %201 = load i32*** @search_center_x, align 8
  %202 = getelementptr inbounds i32** %201, i64 %200
  %203 = load i32** %202, align 8
  %204 = getelementptr inbounds i32* %203, i64 %198
  %205 = load i32* %204, align 4
  %206 = icmp slt i32 %196, %205
  br i1 %206, label %207, label %209

; <label>:207                                     ; preds = %195
  %208 = load i32* %search_range, align 4
  br label %219

; <label>:209                                     ; preds = %195
  %210 = load i16* %1, align 2
  %211 = sext i16 %210 to i64
  %212 = load i32* %2, align 4
  %213 = sext i32 %212 to i64
  %214 = load i32*** @search_center_x, align 8
  %215 = getelementptr inbounds i32** %214, i64 %213
  %216 = load i32** %215, align 8
  %217 = getelementptr inbounds i32* %216, i64 %211
  %218 = load i32* %217, align 4
  br label %219

; <label>:219                                     ; preds = %209, %207
  %220 = phi i32 [ %208, %207 ], [ %218, %209 ]
  br label %221

; <label>:221                                     ; preds = %219, %192
  %222 = phi i32 [ %194, %192 ], [ %220, %219 ]
  %223 = load i16* %1, align 2
  %224 = sext i16 %223 to i64
  %225 = load i32* %2, align 4
  %226 = sext i32 %225 to i64
  %227 = load i32*** @search_center_x, align 8
  %228 = getelementptr inbounds i32** %227, i64 %226
  %229 = load i32** %228, align 8
  %230 = getelementptr inbounds i32* %229, i64 %224
  store i32 %222, i32* %230, align 4
  %231 = load i32* %search_range, align 4
  %232 = sub nsw i32 0, %231
  %233 = load i32* %search_range, align 4
  %234 = load i16* %1, align 2
  %235 = sext i16 %234 to i64
  %236 = load i32* %2, align 4
  %237 = sext i32 %236 to i64
  %238 = load i32*** @search_center_y, align 8
  %239 = getelementptr inbounds i32** %238, i64 %237
  %240 = load i32** %239, align 8
  %241 = getelementptr inbounds i32* %240, i64 %235
  %242 = load i32* %241, align 4
  %243 = icmp slt i32 %233, %242
  br i1 %243, label %244, label %246

; <label>:244                                     ; preds = %221
  %245 = load i32* %search_range, align 4
  br label %256

; <label>:246                                     ; preds = %221
  %247 = load i16* %1, align 2
  %248 = sext i16 %247 to i64
  %249 = load i32* %2, align 4
  %250 = sext i32 %249 to i64
  %251 = load i32*** @search_center_y, align 8
  %252 = getelementptr inbounds i32** %251, i64 %250
  %253 = load i32** %252, align 8
  %254 = getelementptr inbounds i32* %253, i64 %248
  %255 = load i32* %254, align 4
  br label %256

; <label>:256                                     ; preds = %246, %244
  %257 = phi i32 [ %245, %244 ], [ %255, %246 ]
  %258 = icmp sgt i32 %232, %257
  br i1 %258, label %259, label %262

; <label>:259                                     ; preds = %256
  %260 = load i32* %search_range, align 4
  %261 = sub nsw i32 0, %260
  br label %288

; <label>:262                                     ; preds = %256
  %263 = load i32* %search_range, align 4
  %264 = load i16* %1, align 2
  %265 = sext i16 %264 to i64
  %266 = load i32* %2, align 4
  %267 = sext i32 %266 to i64
  %268 = load i32*** @search_center_y, align 8
  %269 = getelementptr inbounds i32** %268, i64 %267
  %270 = load i32** %269, align 8
  %271 = getelementptr inbounds i32* %270, i64 %265
  %272 = load i32* %271, align 4
  %273 = icmp slt i32 %263, %272
  br i1 %273, label %274, label %276

; <label>:274                                     ; preds = %262
  %275 = load i32* %search_range, align 4
  br label %286

; <label>:276                                     ; preds = %262
  %277 = load i16* %1, align 2
  %278 = sext i16 %277 to i64
  %279 = load i32* %2, align 4
  %280 = sext i32 %279 to i64
  %281 = load i32*** @search_center_y, align 8
  %282 = getelementptr inbounds i32** %281, i64 %280
  %283 = load i32** %282, align 8
  %284 = getelementptr inbounds i32* %283, i64 %278
  %285 = load i32* %284, align 4
  br label %286

; <label>:286                                     ; preds = %276, %274
  %287 = phi i32 [ %275, %274 ], [ %285, %276 ]
  br label %288

; <label>:288                                     ; preds = %286, %259
  %289 = phi i32 [ %261, %259 ], [ %287, %286 ]
  %290 = load i16* %1, align 2
  %291 = sext i16 %290 to i64
  %292 = load i32* %2, align 4
  %293 = sext i32 %292 to i64
  %294 = load i32*** @search_center_y, align 8
  %295 = getelementptr inbounds i32** %294, i64 %293
  %296 = load i32** %295, align 8
  %297 = getelementptr inbounds i32* %296, i64 %291
  store i32 %289, i32* %297, align 4
  br label %298

; <label>:298                                     ; preds = %288, %111
  %299 = load %struct.ImageParameters** @img, align 8
  %300 = getelementptr inbounds %struct.ImageParameters* %299, i32 0, i32 37
  %301 = load i32* %300, align 4
  %302 = load i16* %1, align 2
  %303 = sext i16 %302 to i64
  %304 = load i32* %2, align 4
  %305 = sext i32 %304 to i64
  %306 = load i32*** @search_center_x, align 8
  %307 = getelementptr inbounds i32** %306, i64 %305
  %308 = load i32** %307, align 8
  %309 = getelementptr inbounds i32* %308, i64 %303
  %310 = load i32* %309, align 4
  %311 = add nsw i32 %310, %301
  store i32 %311, i32* %309, align 4
  %312 = load %struct.ImageParameters** @img, align 8
  %313 = getelementptr inbounds %struct.ImageParameters* %312, i32 0, i32 38
  %314 = load i32* %313, align 4
  %315 = load i16* %1, align 2
  %316 = sext i16 %315 to i64
  %317 = load i32* %2, align 4
  %318 = sext i32 %317 to i64
  %319 = load i32*** @search_center_y, align 8
  %320 = getelementptr inbounds i32** %319, i64 %318
  %321 = load i32** %320, align 8
  %322 = getelementptr inbounds i32* %321, i64 %316
  %323 = load i32* %322, align 4
  %324 = add nsw i32 %323, %314
  store i32 %324, i32* %322, align 4
  %325 = load i16* %1, align 2
  %326 = sext i16 %325 to i64
  %327 = load i32* %2, align 4
  %328 = sext i32 %327 to i64
  %329 = load i32*** @search_center_x, align 8
  %330 = getelementptr inbounds i32** %329, i64 %328
  %331 = load i32** %330, align 8
  %332 = getelementptr inbounds i32* %331, i64 %326
  %333 = load i32* %332, align 4
  store i32 %333, i32* %offset_x, align 4
  %334 = load i16* %1, align 2
  %335 = sext i16 %334 to i64
  %336 = load i32* %2, align 4
  %337 = sext i32 %336 to i64
  %338 = load i32*** @search_center_y, align 8
  %339 = getelementptr inbounds i32** %338, i64 %337
  %340 = load i32** %339, align 8
  %341 = getelementptr inbounds i32* %340, i64 %335
  %342 = load i32* %341, align 4
  store i32 %342, i32* %offset_y, align 4
  %343 = load %struct.ImageParameters** @img, align 8
  %344 = getelementptr inbounds %struct.ImageParameters* %343, i32 0, i32 38
  %345 = load i32* %344, align 4
  store i32 %345, i32* %y, align 4
  br label %346

; <label>:346                                     ; preds = %380, %298
  %347 = load i32* %y, align 4
  %348 = load %struct.ImageParameters** @img, align 8
  %349 = getelementptr inbounds %struct.ImageParameters* %348, i32 0, i32 38
  %350 = load i32* %349, align 4
  %351 = add nsw i32 %350, 16
  %352 = icmp slt i32 %347, %351
  br i1 %352, label %353, label %383

; <label>:353                                     ; preds = %346
  %354 = load %struct.ImageParameters** @img, align 8
  %355 = getelementptr inbounds %struct.ImageParameters* %354, i32 0, i32 37
  %356 = load i32* %355, align 4
  store i32 %356, i32* %x, align 4
  br label %357

; <label>:357                                     ; preds = %376, %353
  %358 = load i32* %x, align 4
  %359 = load %struct.ImageParameters** @img, align 8
  %360 = getelementptr inbounds %struct.ImageParameters* %359, i32 0, i32 37
  %361 = load i32* %360, align 4
  %362 = add nsw i32 %361, 16
  %363 = icmp slt i32 %358, %362
  br i1 %363, label %364, label %379

; <label>:364                                     ; preds = %357
  %365 = load i32* %x, align 4
  %366 = sext i32 %365 to i64
  %367 = load i32* %y, align 4
  %368 = sext i32 %367 to i64
  %369 = load i16*** @imgY_org, align 8
  %370 = getelementptr inbounds i16** %369, i64 %368
  %371 = load i16** %370, align 8
  %372 = getelementptr inbounds i16* %371, i64 %366
  %373 = load i16* %372, align 2
  %374 = load i16** %orgptr, align 8
  %375 = getelementptr inbounds i16* %374, i32 1
  store i16* %375, i16** %orgptr, align 8
  store i16 %373, i16* %374, align 2
  br label %376

; <label>:376                                     ; preds = %364
  %377 = load i32* %x, align 4
  %378 = add nsw i32 %377, 1
  store i32 %378, i32* %x, align 4
  br label %357

; <label>:379                                     ; preds = %357
  br label %380

; <label>:380                                     ; preds = %379
  %381 = load i32* %y, align 4
  %382 = add nsw i32 %381, 1
  store i32 %382, i32* %y, align 4
  br label %346

; <label>:383                                     ; preds = %346
  %384 = load i32* %offset_x, align 4
  %385 = load i32* %search_range, align 4
  %386 = icmp sge i32 %384, %385
  br i1 %386, label %387, label %404

; <label>:387                                     ; preds = %383
  %388 = load i32* %offset_x, align 4
  %389 = load i32* %max_width, align 4
  %390 = load i32* %search_range, align 4
  %391 = sub nsw i32 %389, %390
  %392 = icmp sle i32 %388, %391
  br i1 %392, label %393, label %404

; <label>:393                                     ; preds = %387
  %394 = load i32* %offset_y, align 4
  %395 = load i32* %search_range, align 4
  %396 = icmp sge i32 %394, %395
  br i1 %396, label %397, label %404

; <label>:397                                     ; preds = %393
  %398 = load i32* %offset_y, align 4
  %399 = load i32* %max_height, align 4
  %400 = load i32* %search_range, align 4
  %401 = sub nsw i32 %399, %400
  %402 = icmp sle i32 %398, %401
  br i1 %402, label %403, label %404

; <label>:403                                     ; preds = %397
  store i32 0, i32* %range_partly_outside, align 4
  store i16* (i16*, i32, i32, i32, i32)* @FastLine16Y_11, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  br label %405

; <label>:404                                     ; preds = %397, %393, %387, %383
  store i32 1, i32* %range_partly_outside, align 4
  br label %405

; <label>:405                                     ; preds = %404, %403
  %406 = load %struct.InputParameters** @input, align 8
  %407 = getelementptr inbounds %struct.InputParameters* %406, i32 0, i32 85
  %408 = load i32* %407, align 4
  %409 = icmp ne i32 %408, 0
  br i1 %409, label %456, label %410

; <label>:410                                     ; preds = %405
  %411 = load %struct.ImageParameters** @img, align 8
  %412 = getelementptr inbounds %struct.ImageParameters* %411, i32 0, i32 37
  %413 = load i32* %412, align 4
  %414 = load i32* %offset_x, align 4
  %415 = sub nsw i32 %413, %414
  store i32 %415, i32* %ref_x, align 4
  %416 = load %struct.ImageParameters** @img, align 8
  %417 = getelementptr inbounds %struct.ImageParameters* %416, i32 0, i32 38
  %418 = load i32* %417, align 4
  %419 = load i32* %offset_y, align 4
  %420 = sub nsw i32 %418, %419
  store i32 %420, i32* %ref_y, align 4
  store i32 0, i32* %pos, align 4
  br label %421

; <label>:421                                     ; preds = %452, %410
  %422 = load i32* %pos, align 4
  %423 = load i32* %max_pos, align 4
  %424 = icmp slt i32 %422, %423
  br i1 %424, label %425, label %455

; <label>:425                                     ; preds = %421
  %426 = load i32* %ref_x, align 4
  %427 = load i32* %pos, align 4
  %428 = sext i32 %427 to i64
  %429 = load i32** @spiral_search_x, align 8
  %430 = getelementptr inbounds i32* %429, i64 %428
  %431 = load i32* %430, align 4
  %432 = icmp eq i32 %426, %431
  br i1 %432, label %433, label %451

; <label>:433                                     ; preds = %425
  %434 = load i32* %ref_y, align 4
  %435 = load i32* %pos, align 4
  %436 = sext i32 %435 to i64
  %437 = load i32** @spiral_search_y, align 8
  %438 = getelementptr inbounds i32* %437, i64 %436
  %439 = load i32* %438, align 4
  %440 = icmp eq i32 %434, %439
  br i1 %440, label %441, label %451

; <label>:441                                     ; preds = %433
  %442 = load i32* %pos, align 4
  %443 = load i16* %1, align 2
  %444 = sext i16 %443 to i64
  %445 = load i32* %2, align 4
  %446 = sext i32 %445 to i64
  %447 = load i32*** @pos_00, align 8
  %448 = getelementptr inbounds i32** %447, i64 %446
  %449 = load i32** %448, align 8
  %450 = getelementptr inbounds i32* %449, i64 %444
  store i32 %442, i32* %450, align 4
  br label %455

; <label>:451                                     ; preds = %433, %425
  br label %452

; <label>:452                                     ; preds = %451
  %453 = load i32* %pos, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %pos, align 4
  br label %421

; <label>:455                                     ; preds = %441, %421
  br label %456

; <label>:456                                     ; preds = %455, %405
  store i32 0, i32* %pos, align 4
  br label %457

; <label>:457                                     ; preds = %801, %456
  %458 = load i32* %pos, align 4
  %459 = load i32* %max_pos, align 4
  %460 = icmp slt i32 %458, %459
  br i1 %460, label %461, label %804

; <label>:461                                     ; preds = %457
  %462 = load i32* %offset_y, align 4
  %463 = load i32* %pos, align 4
  %464 = sext i32 %463 to i64
  %465 = load i32** @spiral_search_y, align 8
  %466 = getelementptr inbounds i32* %465, i64 %464
  %467 = load i32* %466, align 4
  %468 = add nsw i32 %462, %467
  store i32 %468, i32* %abs_y, align 4
  %469 = load i32* %offset_x, align 4
  %470 = load i32* %pos, align 4
  %471 = sext i32 %470 to i64
  %472 = load i32** @spiral_search_x, align 8
  %473 = getelementptr inbounds i32* %472, i64 %471
  %474 = load i32* %473, align 4
  %475 = add nsw i32 %469, %474
  store i32 %475, i32* %abs_x, align 4
  %476 = load i32* %range_partly_outside, align 4
  %477 = icmp ne i32 %476, 0
  br i1 %477, label %478, label %495

; <label>:478                                     ; preds = %461
  %479 = load i32* %abs_y, align 4
  %480 = icmp sge i32 %479, 0
  br i1 %480, label %481, label %493

; <label>:481                                     ; preds = %478
  %482 = load i32* %abs_y, align 4
  %483 = load i32* %max_height, align 4
  %484 = icmp sle i32 %482, %483
  br i1 %484, label %485, label %493

; <label>:485                                     ; preds = %481
  %486 = load i32* %abs_x, align 4
  %487 = icmp sge i32 %486, 0
  br i1 %487, label %488, label %493

; <label>:488                                     ; preds = %485
  %489 = load i32* %abs_x, align 4
  %490 = load i32* %max_width, align 4
  %491 = icmp sle i32 %489, %490
  br i1 %491, label %492, label %493

; <label>:492                                     ; preds = %488
  store i16* (i16*, i32, i32, i32, i32)* @FastLine16Y_11, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  br label %494

; <label>:493                                     ; preds = %488, %485, %481, %478
  store i16* (i16*, i32, i32, i32, i32)* @UMVLine16Y_11, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  br label %494

; <label>:494                                     ; preds = %493, %492
  br label %495

; <label>:495                                     ; preds = %494, %461
  %496 = getelementptr inbounds [256 x i16]* %orig_blocks, i32 0, i32 0
  store i16* %496, i16** %orgptr, align 8
  store i32 0, i32* %bindex, align 4
  store i32 0, i32* %blky, align 4
  br label %497

; <label>:497                                     ; preds = %797, %495
  %498 = load i32* %blky, align 4
  %499 = icmp slt i32 %498, 4
  br i1 %499, label %500, label %800

; <label>:500                                     ; preds = %497
  store i32 0, i32* %LineSadBlk3, align 4
  store i32 0, i32* %LineSadBlk2, align 4
  store i32 0, i32* %LineSadBlk1, align 4
  store i32 0, i32* %LineSadBlk0, align 4
  store i32 0, i32* %y, align 4
  br label %501

; <label>:501                                     ; preds = %753, %500
  %502 = load i32* %y, align 4
  %503 = icmp slt i32 %502, 4
  br i1 %503, label %504, label %756

; <label>:504                                     ; preds = %501
  %505 = load i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  %506 = load i16** %ref_pic, align 8
  %507 = load i32* %abs_y, align 4
  %508 = add nsw i32 %507, 1
  store i32 %508, i32* %abs_y, align 4
  %509 = load i32* %abs_x, align 4
  %510 = load i32* %img_height, align 4
  %511 = load i32* %img_width, align 4
  %512 = call i16* %505(i16* %506, i32 %507, i32 %509, i32 %510, i32 %511)
  store i16* %512, i16** %refptr, align 8
  %513 = load i16** %refptr, align 8
  %514 = getelementptr inbounds i16* %513, i32 1
  store i16* %514, i16** %refptr, align 8
  %515 = load i16* %513, align 2
  %516 = zext i16 %515 to i32
  %517 = load i16** %orgptr, align 8
  %518 = getelementptr inbounds i16* %517, i32 1
  store i16* %518, i16** %orgptr, align 8
  %519 = load i16* %517, align 2
  %520 = zext i16 %519 to i32
  %521 = sub nsw i32 %516, %520
  %522 = sext i32 %521 to i64
  %523 = load i32** @byte_abs, align 8
  %524 = getelementptr inbounds i32* %523, i64 %522
  %525 = load i32* %524, align 4
  %526 = load i32* %LineSadBlk0, align 4
  %527 = add nsw i32 %526, %525
  store i32 %527, i32* %LineSadBlk0, align 4
  %528 = load i16** %refptr, align 8
  %529 = getelementptr inbounds i16* %528, i32 1
  store i16* %529, i16** %refptr, align 8
  %530 = load i16* %528, align 2
  %531 = zext i16 %530 to i32
  %532 = load i16** %orgptr, align 8
  %533 = getelementptr inbounds i16* %532, i32 1
  store i16* %533, i16** %orgptr, align 8
  %534 = load i16* %532, align 2
  %535 = zext i16 %534 to i32
  %536 = sub nsw i32 %531, %535
  %537 = sext i32 %536 to i64
  %538 = load i32** @byte_abs, align 8
  %539 = getelementptr inbounds i32* %538, i64 %537
  %540 = load i32* %539, align 4
  %541 = load i32* %LineSadBlk0, align 4
  %542 = add nsw i32 %541, %540
  store i32 %542, i32* %LineSadBlk0, align 4
  %543 = load i16** %refptr, align 8
  %544 = getelementptr inbounds i16* %543, i32 1
  store i16* %544, i16** %refptr, align 8
  %545 = load i16* %543, align 2
  %546 = zext i16 %545 to i32
  %547 = load i16** %orgptr, align 8
  %548 = getelementptr inbounds i16* %547, i32 1
  store i16* %548, i16** %orgptr, align 8
  %549 = load i16* %547, align 2
  %550 = zext i16 %549 to i32
  %551 = sub nsw i32 %546, %550
  %552 = sext i32 %551 to i64
  %553 = load i32** @byte_abs, align 8
  %554 = getelementptr inbounds i32* %553, i64 %552
  %555 = load i32* %554, align 4
  %556 = load i32* %LineSadBlk0, align 4
  %557 = add nsw i32 %556, %555
  store i32 %557, i32* %LineSadBlk0, align 4
  %558 = load i16** %refptr, align 8
  %559 = getelementptr inbounds i16* %558, i32 1
  store i16* %559, i16** %refptr, align 8
  %560 = load i16* %558, align 2
  %561 = zext i16 %560 to i32
  %562 = load i16** %orgptr, align 8
  %563 = getelementptr inbounds i16* %562, i32 1
  store i16* %563, i16** %orgptr, align 8
  %564 = load i16* %562, align 2
  %565 = zext i16 %564 to i32
  %566 = sub nsw i32 %561, %565
  %567 = sext i32 %566 to i64
  %568 = load i32** @byte_abs, align 8
  %569 = getelementptr inbounds i32* %568, i64 %567
  %570 = load i32* %569, align 4
  %571 = load i32* %LineSadBlk0, align 4
  %572 = add nsw i32 %571, %570
  store i32 %572, i32* %LineSadBlk0, align 4
  %573 = load i16** %refptr, align 8
  %574 = getelementptr inbounds i16* %573, i32 1
  store i16* %574, i16** %refptr, align 8
  %575 = load i16* %573, align 2
  %576 = zext i16 %575 to i32
  %577 = load i16** %orgptr, align 8
  %578 = getelementptr inbounds i16* %577, i32 1
  store i16* %578, i16** %orgptr, align 8
  %579 = load i16* %577, align 2
  %580 = zext i16 %579 to i32
  %581 = sub nsw i32 %576, %580
  %582 = sext i32 %581 to i64
  %583 = load i32** @byte_abs, align 8
  %584 = getelementptr inbounds i32* %583, i64 %582
  %585 = load i32* %584, align 4
  %586 = load i32* %LineSadBlk1, align 4
  %587 = add nsw i32 %586, %585
  store i32 %587, i32* %LineSadBlk1, align 4
  %588 = load i16** %refptr, align 8
  %589 = getelementptr inbounds i16* %588, i32 1
  store i16* %589, i16** %refptr, align 8
  %590 = load i16* %588, align 2
  %591 = zext i16 %590 to i32
  %592 = load i16** %orgptr, align 8
  %593 = getelementptr inbounds i16* %592, i32 1
  store i16* %593, i16** %orgptr, align 8
  %594 = load i16* %592, align 2
  %595 = zext i16 %594 to i32
  %596 = sub nsw i32 %591, %595
  %597 = sext i32 %596 to i64
  %598 = load i32** @byte_abs, align 8
  %599 = getelementptr inbounds i32* %598, i64 %597
  %600 = load i32* %599, align 4
  %601 = load i32* %LineSadBlk1, align 4
  %602 = add nsw i32 %601, %600
  store i32 %602, i32* %LineSadBlk1, align 4
  %603 = load i16** %refptr, align 8
  %604 = getelementptr inbounds i16* %603, i32 1
  store i16* %604, i16** %refptr, align 8
  %605 = load i16* %603, align 2
  %606 = zext i16 %605 to i32
  %607 = load i16** %orgptr, align 8
  %608 = getelementptr inbounds i16* %607, i32 1
  store i16* %608, i16** %orgptr, align 8
  %609 = load i16* %607, align 2
  %610 = zext i16 %609 to i32
  %611 = sub nsw i32 %606, %610
  %612 = sext i32 %611 to i64
  %613 = load i32** @byte_abs, align 8
  %614 = getelementptr inbounds i32* %613, i64 %612
  %615 = load i32* %614, align 4
  %616 = load i32* %LineSadBlk1, align 4
  %617 = add nsw i32 %616, %615
  store i32 %617, i32* %LineSadBlk1, align 4
  %618 = load i16** %refptr, align 8
  %619 = getelementptr inbounds i16* %618, i32 1
  store i16* %619, i16** %refptr, align 8
  %620 = load i16* %618, align 2
  %621 = zext i16 %620 to i32
  %622 = load i16** %orgptr, align 8
  %623 = getelementptr inbounds i16* %622, i32 1
  store i16* %623, i16** %orgptr, align 8
  %624 = load i16* %622, align 2
  %625 = zext i16 %624 to i32
  %626 = sub nsw i32 %621, %625
  %627 = sext i32 %626 to i64
  %628 = load i32** @byte_abs, align 8
  %629 = getelementptr inbounds i32* %628, i64 %627
  %630 = load i32* %629, align 4
  %631 = load i32* %LineSadBlk1, align 4
  %632 = add nsw i32 %631, %630
  store i32 %632, i32* %LineSadBlk1, align 4
  %633 = load i16** %refptr, align 8
  %634 = getelementptr inbounds i16* %633, i32 1
  store i16* %634, i16** %refptr, align 8
  %635 = load i16* %633, align 2
  %636 = zext i16 %635 to i32
  %637 = load i16** %orgptr, align 8
  %638 = getelementptr inbounds i16* %637, i32 1
  store i16* %638, i16** %orgptr, align 8
  %639 = load i16* %637, align 2
  %640 = zext i16 %639 to i32
  %641 = sub nsw i32 %636, %640
  %642 = sext i32 %641 to i64
  %643 = load i32** @byte_abs, align 8
  %644 = getelementptr inbounds i32* %643, i64 %642
  %645 = load i32* %644, align 4
  %646 = load i32* %LineSadBlk2, align 4
  %647 = add nsw i32 %646, %645
  store i32 %647, i32* %LineSadBlk2, align 4
  %648 = load i16** %refptr, align 8
  %649 = getelementptr inbounds i16* %648, i32 1
  store i16* %649, i16** %refptr, align 8
  %650 = load i16* %648, align 2
  %651 = zext i16 %650 to i32
  %652 = load i16** %orgptr, align 8
  %653 = getelementptr inbounds i16* %652, i32 1
  store i16* %653, i16** %orgptr, align 8
  %654 = load i16* %652, align 2
  %655 = zext i16 %654 to i32
  %656 = sub nsw i32 %651, %655
  %657 = sext i32 %656 to i64
  %658 = load i32** @byte_abs, align 8
  %659 = getelementptr inbounds i32* %658, i64 %657
  %660 = load i32* %659, align 4
  %661 = load i32* %LineSadBlk2, align 4
  %662 = add nsw i32 %661, %660
  store i32 %662, i32* %LineSadBlk2, align 4
  %663 = load i16** %refptr, align 8
  %664 = getelementptr inbounds i16* %663, i32 1
  store i16* %664, i16** %refptr, align 8
  %665 = load i16* %663, align 2
  %666 = zext i16 %665 to i32
  %667 = load i16** %orgptr, align 8
  %668 = getelementptr inbounds i16* %667, i32 1
  store i16* %668, i16** %orgptr, align 8
  %669 = load i16* %667, align 2
  %670 = zext i16 %669 to i32
  %671 = sub nsw i32 %666, %670
  %672 = sext i32 %671 to i64
  %673 = load i32** @byte_abs, align 8
  %674 = getelementptr inbounds i32* %673, i64 %672
  %675 = load i32* %674, align 4
  %676 = load i32* %LineSadBlk2, align 4
  %677 = add nsw i32 %676, %675
  store i32 %677, i32* %LineSadBlk2, align 4
  %678 = load i16** %refptr, align 8
  %679 = getelementptr inbounds i16* %678, i32 1
  store i16* %679, i16** %refptr, align 8
  %680 = load i16* %678, align 2
  %681 = zext i16 %680 to i32
  %682 = load i16** %orgptr, align 8
  %683 = getelementptr inbounds i16* %682, i32 1
  store i16* %683, i16** %orgptr, align 8
  %684 = load i16* %682, align 2
  %685 = zext i16 %684 to i32
  %686 = sub nsw i32 %681, %685
  %687 = sext i32 %686 to i64
  %688 = load i32** @byte_abs, align 8
  %689 = getelementptr inbounds i32* %688, i64 %687
  %690 = load i32* %689, align 4
  %691 = load i32* %LineSadBlk2, align 4
  %692 = add nsw i32 %691, %690
  store i32 %692, i32* %LineSadBlk2, align 4
  %693 = load i16** %refptr, align 8
  %694 = getelementptr inbounds i16* %693, i32 1
  store i16* %694, i16** %refptr, align 8
  %695 = load i16* %693, align 2
  %696 = zext i16 %695 to i32
  %697 = load i16** %orgptr, align 8
  %698 = getelementptr inbounds i16* %697, i32 1
  store i16* %698, i16** %orgptr, align 8
  %699 = load i16* %697, align 2
  %700 = zext i16 %699 to i32
  %701 = sub nsw i32 %696, %700
  %702 = sext i32 %701 to i64
  %703 = load i32** @byte_abs, align 8
  %704 = getelementptr inbounds i32* %703, i64 %702
  %705 = load i32* %704, align 4
  %706 = load i32* %LineSadBlk3, align 4
  %707 = add nsw i32 %706, %705
  store i32 %707, i32* %LineSadBlk3, align 4
  %708 = load i16** %refptr, align 8
  %709 = getelementptr inbounds i16* %708, i32 1
  store i16* %709, i16** %refptr, align 8
  %710 = load i16* %708, align 2
  %711 = zext i16 %710 to i32
  %712 = load i16** %orgptr, align 8
  %713 = getelementptr inbounds i16* %712, i32 1
  store i16* %713, i16** %orgptr, align 8
  %714 = load i16* %712, align 2
  %715 = zext i16 %714 to i32
  %716 = sub nsw i32 %711, %715
  %717 = sext i32 %716 to i64
  %718 = load i32** @byte_abs, align 8
  %719 = getelementptr inbounds i32* %718, i64 %717
  %720 = load i32* %719, align 4
  %721 = load i32* %LineSadBlk3, align 4
  %722 = add nsw i32 %721, %720
  store i32 %722, i32* %LineSadBlk3, align 4
  %723 = load i16** %refptr, align 8
  %724 = getelementptr inbounds i16* %723, i32 1
  store i16* %724, i16** %refptr, align 8
  %725 = load i16* %723, align 2
  %726 = zext i16 %725 to i32
  %727 = load i16** %orgptr, align 8
  %728 = getelementptr inbounds i16* %727, i32 1
  store i16* %728, i16** %orgptr, align 8
  %729 = load i16* %727, align 2
  %730 = zext i16 %729 to i32
  %731 = sub nsw i32 %726, %730
  %732 = sext i32 %731 to i64
  %733 = load i32** @byte_abs, align 8
  %734 = getelementptr inbounds i32* %733, i64 %732
  %735 = load i32* %734, align 4
  %736 = load i32* %LineSadBlk3, align 4
  %737 = add nsw i32 %736, %735
  store i32 %737, i32* %LineSadBlk3, align 4
  %738 = load i16** %refptr, align 8
  %739 = getelementptr inbounds i16* %738, i32 1
  store i16* %739, i16** %refptr, align 8
  %740 = load i16* %738, align 2
  %741 = zext i16 %740 to i32
  %742 = load i16** %orgptr, align 8
  %743 = getelementptr inbounds i16* %742, i32 1
  store i16* %743, i16** %orgptr, align 8
  %744 = load i16* %742, align 2
  %745 = zext i16 %744 to i32
  %746 = sub nsw i32 %741, %745
  %747 = sext i32 %746 to i64
  %748 = load i32** @byte_abs, align 8
  %749 = getelementptr inbounds i32* %748, i64 %747
  %750 = load i32* %749, align 4
  %751 = load i32* %LineSadBlk3, align 4
  %752 = add nsw i32 %751, %750
  store i32 %752, i32* %LineSadBlk3, align 4
  br label %753

; <label>:753                                     ; preds = %504
  %754 = load i32* %y, align 4
  %755 = add nsw i32 %754, 1
  store i32 %755, i32* %y, align 4
  br label %501

; <label>:756                                     ; preds = %501
  %757 = load i32* %LineSadBlk0, align 4
  %758 = load i32* %pos, align 4
  %759 = sext i32 %758 to i64
  %760 = load i32* %bindex, align 4
  %761 = add nsw i32 %760, 1
  store i32 %761, i32* %bindex, align 4
  %762 = sext i32 %760 to i64
  %763 = load i32*** %block_sad, align 8
  %764 = getelementptr inbounds i32** %763, i64 %762
  %765 = load i32** %764, align 8
  %766 = getelementptr inbounds i32* %765, i64 %759
  store i32 %757, i32* %766, align 4
  %767 = load i32* %LineSadBlk1, align 4
  %768 = load i32* %pos, align 4
  %769 = sext i32 %768 to i64
  %770 = load i32* %bindex, align 4
  %771 = add nsw i32 %770, 1
  store i32 %771, i32* %bindex, align 4
  %772 = sext i32 %770 to i64
  %773 = load i32*** %block_sad, align 8
  %774 = getelementptr inbounds i32** %773, i64 %772
  %775 = load i32** %774, align 8
  %776 = getelementptr inbounds i32* %775, i64 %769
  store i32 %767, i32* %776, align 4
  %777 = load i32* %LineSadBlk2, align 4
  %778 = load i32* %pos, align 4
  %779 = sext i32 %778 to i64
  %780 = load i32* %bindex, align 4
  %781 = add nsw i32 %780, 1
  store i32 %781, i32* %bindex, align 4
  %782 = sext i32 %780 to i64
  %783 = load i32*** %block_sad, align 8
  %784 = getelementptr inbounds i32** %783, i64 %782
  %785 = load i32** %784, align 8
  %786 = getelementptr inbounds i32* %785, i64 %779
  store i32 %777, i32* %786, align 4
  %787 = load i32* %LineSadBlk3, align 4
  %788 = load i32* %pos, align 4
  %789 = sext i32 %788 to i64
  %790 = load i32* %bindex, align 4
  %791 = add nsw i32 %790, 1
  store i32 %791, i32* %bindex, align 4
  %792 = sext i32 %790 to i64
  %793 = load i32*** %block_sad, align 8
  %794 = getelementptr inbounds i32** %793, i64 %792
  %795 = load i32** %794, align 8
  %796 = getelementptr inbounds i32* %795, i64 %789
  store i32 %787, i32* %796, align 4
  br label %797

; <label>:797                                     ; preds = %756
  %798 = load i32* %blky, align 4
  %799 = add nsw i32 %798, 1
  store i32 %799, i32* %blky, align 4
  br label %497

; <label>:800                                     ; preds = %497
  br label %801

; <label>:801                                     ; preds = %800
  %802 = load i32* %pos, align 4
  %803 = add nsw i32 %802, 1
  store i32 %803, i32* %pos, align 4
  br label %457

; <label>:804                                     ; preds = %457
  %805 = load i32* %2, align 4
  %806 = load i16* %1, align 2
  %807 = sext i16 %806 to i32
  %808 = load i32* %max_pos, align 4
  call void @SetupLargerBlocks(i32 %805, i32 %807, i32 %808)
  %809 = load i16* %1, align 2
  %810 = sext i16 %809 to i64
  %811 = load i32* %2, align 4
  %812 = sext i32 %811 to i64
  %813 = load i32*** @search_setup_done, align 8
  %814 = getelementptr inbounds i32** %813, i64 %812
  %815 = load i32** %814, align 8
  %816 = getelementptr inbounds i32* %815, i64 %810
  store i32 1, i32* %816, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define void @SetMotionVectorPredictor(i16* %pmv, i16*** %refPic, i16**** %tmp_mv, i16 signext %ref_frame, i32 %list, i32 %block_x, i32 %block_y, i32 %blockshape_x, i32 %blockshape_y) #0 {
  %1 = alloca i16*, align 8
  %2 = alloca i16***, align 8
  %3 = alloca i16****, align 8
  %4 = alloca i16, align 2
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %mb_nr = alloca i32, align 4
  %mv_a = alloca i32, align 4
  %mv_b = alloca i32, align 4
  %mv_c = alloca i32, align 4
  %pred_vec = alloca i32, align 4
  %mvPredType = alloca i32, align 4
  %rFrameL = alloca i32, align 4
  %rFrameU = alloca i32, align 4
  %rFrameUR = alloca i32, align 4
  %hv = alloca i32, align 4
  %block_a = alloca %struct.pix_pos, align 4
  %block_b = alloca %struct.pix_pos, align 4
  %block_c = alloca %struct.pix_pos, align 4
  %block_d = alloca %struct.pix_pos, align 4
  %SAD_a = alloca i32, align 4
  %SAD_b = alloca i32, align 4
  %SAD_c = alloca i32, align 4
  %SAD_d = alloca i32, align 4
  %temp_pred_SAD = alloca [2 x i32], align 4
  store i16* %pmv, i16** %1, align 8
  store i16*** %refPic, i16**** %2, align 8
  store i16**** %tmp_mv, i16***** %3, align 8
  store i16 %ref_frame, i16* %4, align 2
  store i32 %list, i32* %5, align 4
  store i32 %block_x, i32* %6, align 4
  store i32 %block_y, i32* %7, align 4
  store i32 %blockshape_x, i32* %8, align 4
  store i32 %blockshape_y, i32* %9, align 4
  %10 = load i32* %6, align 4
  %11 = mul nsw i32 4, %10
  store i32 %11, i32* %mb_x, align 4
  %12 = load i32* %7, align 4
  %13 = mul nsw i32 4, %12
  store i32 %13, i32* %mb_y, align 4
  %14 = load %struct.ImageParameters** @img, align 8
  %15 = getelementptr inbounds %struct.ImageParameters* %14, i32 0, i32 3
  %16 = load i32* %15, align 4
  store i32 %16, i32* %mb_nr, align 4
  store i32 0, i32* %pred_vec, align 4
  store i32 0, i32* %SAD_a, align 4
  store i32 0, i32* %SAD_b, align 4
  store i32 0, i32* %SAD_c, align 4
  store i32 0, i32* %SAD_d, align 4
  %17 = load %struct.InputParameters** @input, align 8
  %18 = getelementptr inbounds %struct.InputParameters* %17, i32 0, i32 134
  %19 = load i32* %18, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %0
  store i32 0, i32* @pred_SAD_space, align 4
  br label %22

; <label>:22                                      ; preds = %21, %0
  %23 = load i32* %mb_nr, align 4
  %24 = load i32* %6, align 4
  %25 = load i32* %7, align 4
  call void @getLuma4x4Neighbour(i32 %23, i32 %24, i32 %25, i32 -1, i32 0, %struct.pix_pos* %block_a)
  %26 = load i32* %mb_nr, align 4
  %27 = load i32* %6, align 4
  %28 = load i32* %7, align 4
  call void @getLuma4x4Neighbour(i32 %26, i32 %27, i32 %28, i32 0, i32 -1, %struct.pix_pos* %block_b)
  %29 = load i32* %mb_nr, align 4
  %30 = load i32* %6, align 4
  %31 = load i32* %7, align 4
  %32 = load i32* %8, align 4
  call void @getLuma4x4Neighbour(i32 %29, i32 %30, i32 %31, i32 %32, i32 -1, %struct.pix_pos* %block_c)
  %33 = load i32* %mb_nr, align 4
  %34 = load i32* %6, align 4
  %35 = load i32* %7, align 4
  call void @getLuma4x4Neighbour(i32 %33, i32 %34, i32 %35, i32 -1, i32 -1, %struct.pix_pos* %block_d)
  %36 = load i32* %mb_y, align 4
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %38, label %80

; <label>:38                                      ; preds = %22
  %39 = load i32* %mb_x, align 4
  %40 = icmp slt i32 %39, 8
  br i1 %40, label %41, label %67

; <label>:41                                      ; preds = %38
  %42 = load i32* %mb_y, align 4
  %43 = icmp eq i32 %42, 8
  br i1 %43, label %44, label %54

; <label>:44                                      ; preds = %41
  %45 = load i32* %8, align 4
  %46 = icmp eq i32 %45, 16
  br i1 %46, label %47, label %49

; <label>:47                                      ; preds = %44
  %48 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  store i32 0, i32* %48, align 4
  br label %53

; <label>:49                                      ; preds = %44
  %50 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %51 = load i32* %50, align 4
  %52 = and i32 %51, 1
  store i32 %52, i32* %50, align 4
  br label %53

; <label>:53                                      ; preds = %49, %47
  br label %66

; <label>:54                                      ; preds = %41
  %55 = load i32* %mb_x, align 4
  %56 = load i32* %8, align 4
  %57 = add nsw i32 %55, %56
  %58 = icmp ne i32 %57, 8
  br i1 %58, label %59, label %63

; <label>:59                                      ; preds = %54
  %60 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %61 = load i32* %60, align 4
  %62 = and i32 %61, 1
  store i32 %62, i32* %60, align 4
  br label %65

; <label>:63                                      ; preds = %54
  %64 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  store i32 0, i32* %64, align 4
  br label %65

; <label>:65                                      ; preds = %63, %59
  br label %66

; <label>:66                                      ; preds = %65, %53
  br label %79

; <label>:67                                      ; preds = %38
  %68 = load i32* %mb_x, align 4
  %69 = load i32* %8, align 4
  %70 = add nsw i32 %68, %69
  %71 = icmp ne i32 %70, 16
  br i1 %71, label %72, label %76

; <label>:72                                      ; preds = %67
  %73 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %74 = load i32* %73, align 4
  %75 = and i32 %74, 1
  store i32 %75, i32* %73, align 4
  br label %78

; <label>:76                                      ; preds = %67
  %77 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  store i32 0, i32* %77, align 4
  br label %78

; <label>:78                                      ; preds = %76, %72
  br label %79

; <label>:79                                      ; preds = %78, %66
  br label %80

; <label>:80                                      ; preds = %79, %22
  %81 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %82 = load i32* %81, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %87, label %84

; <label>:84                                      ; preds = %80
  %85 = bitcast %struct.pix_pos* %block_c to i8*
  %86 = bitcast %struct.pix_pos* %block_d to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 24, i32 4, i1 false)
  br label %87

; <label>:87                                      ; preds = %84, %80
  store i32 0, i32* %mvPredType, align 4
  %88 = load %struct.ImageParameters** @img, align 8
  %89 = getelementptr inbounds %struct.ImageParameters* %88, i32 0, i32 90
  %90 = load i32* %89, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %162, label %92

; <label>:92                                      ; preds = %87
  %93 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 0
  %94 = load i32* %93, align 4
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %113

; <label>:96                                      ; preds = %92
  %97 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %98 = load i32* %97, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %101 = load i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = load i32* %5, align 4
  %104 = sext i32 %103 to i64
  %105 = load i16**** %2, align 8
  %106 = getelementptr inbounds i16*** %105, i64 %104
  %107 = load i16*** %106, align 8
  %108 = getelementptr inbounds i16** %107, i64 %102
  %109 = load i16** %108, align 8
  %110 = getelementptr inbounds i16* %109, i64 %99
  %111 = load i16* %110, align 2
  %112 = sext i16 %111 to i32
  br label %114

; <label>:113                                     ; preds = %92
  br label %114

; <label>:114                                     ; preds = %113, %96
  %115 = phi i32 [ %112, %96 ], [ -1, %113 ]
  store i32 %115, i32* %rFrameL, align 4
  %116 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 0
  %117 = load i32* %116, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %136

; <label>:119                                     ; preds = %114
  %120 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %121 = load i32* %120, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %124 = load i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = load i32* %5, align 4
  %127 = sext i32 %126 to i64
  %128 = load i16**** %2, align 8
  %129 = getelementptr inbounds i16*** %128, i64 %127
  %130 = load i16*** %129, align 8
  %131 = getelementptr inbounds i16** %130, i64 %125
  %132 = load i16** %131, align 8
  %133 = getelementptr inbounds i16* %132, i64 %122
  %134 = load i16* %133, align 2
  %135 = sext i16 %134 to i32
  br label %137

; <label>:136                                     ; preds = %114
  br label %137

; <label>:137                                     ; preds = %136, %119
  %138 = phi i32 [ %135, %119 ], [ -1, %136 ]
  store i32 %138, i32* %rFrameU, align 4
  %139 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %140 = load i32* %139, align 4
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %159

; <label>:142                                     ; preds = %137
  %143 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %144 = load i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %147 = load i32* %146, align 4
  %148 = sext i32 %147 to i64
  %149 = load i32* %5, align 4
  %150 = sext i32 %149 to i64
  %151 = load i16**** %2, align 8
  %152 = getelementptr inbounds i16*** %151, i64 %150
  %153 = load i16*** %152, align 8
  %154 = getelementptr inbounds i16** %153, i64 %148
  %155 = load i16** %154, align 8
  %156 = getelementptr inbounds i16* %155, i64 %145
  %157 = load i16* %156, align 2
  %158 = sext i16 %157 to i32
  br label %160

; <label>:159                                     ; preds = %137
  br label %160

; <label>:160                                     ; preds = %159, %142
  %161 = phi i32 [ %158, %142 ], [ -1, %159 ]
  store i32 %161, i32* %rFrameUR, align 4
  br label %501

; <label>:162                                     ; preds = %87
  %163 = load %struct.ImageParameters** @img, align 8
  %164 = getelementptr inbounds %struct.ImageParameters* %163, i32 0, i32 3
  %165 = load i32* %164, align 4
  %166 = sext i32 %165 to i64
  %167 = load %struct.ImageParameters** @img, align 8
  %168 = getelementptr inbounds %struct.ImageParameters* %167, i32 0, i32 51
  %169 = load %struct.macroblock** %168, align 8
  %170 = getelementptr inbounds %struct.macroblock* %169, i64 %166
  %171 = getelementptr inbounds %struct.macroblock* %170, i32 0, i32 22
  %172 = load i32* %171, align 4
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %337

; <label>:174                                     ; preds = %162
  %175 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 0
  %176 = load i32* %175, align 4
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %226

; <label>:178                                     ; preds = %174
  %179 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 1
  %180 = load i32* %179, align 4
  %181 = sext i32 %180 to i64
  %182 = load %struct.ImageParameters** @img, align 8
  %183 = getelementptr inbounds %struct.ImageParameters* %182, i32 0, i32 51
  %184 = load %struct.macroblock** %183, align 8
  %185 = getelementptr inbounds %struct.macroblock* %184, i64 %181
  %186 = getelementptr inbounds %struct.macroblock* %185, i32 0, i32 22
  %187 = load i32* %186, align 4
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %189, label %206

; <label>:189                                     ; preds = %178
  %190 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %191 = load i32* %190, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %194 = load i32* %193, align 4
  %195 = sext i32 %194 to i64
  %196 = load i32* %5, align 4
  %197 = sext i32 %196 to i64
  %198 = load i16**** %2, align 8
  %199 = getelementptr inbounds i16*** %198, i64 %197
  %200 = load i16*** %199, align 8
  %201 = getelementptr inbounds i16** %200, i64 %195
  %202 = load i16** %201, align 8
  %203 = getelementptr inbounds i16* %202, i64 %192
  %204 = load i16* %203, align 2
  %205 = sext i16 %204 to i32
  br label %224

; <label>:206                                     ; preds = %178
  %207 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %208 = load i32* %207, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %211 = load i32* %210, align 4
  %212 = sext i32 %211 to i64
  %213 = load i32* %5, align 4
  %214 = sext i32 %213 to i64
  %215 = load i16**** %2, align 8
  %216 = getelementptr inbounds i16*** %215, i64 %214
  %217 = load i16*** %216, align 8
  %218 = getelementptr inbounds i16** %217, i64 %212
  %219 = load i16** %218, align 8
  %220 = getelementptr inbounds i16* %219, i64 %209
  %221 = load i16* %220, align 2
  %222 = sext i16 %221 to i32
  %223 = mul nsw i32 %222, 2
  br label %224

; <label>:224                                     ; preds = %206, %189
  %225 = phi i32 [ %205, %189 ], [ %223, %206 ]
  br label %227

; <label>:226                                     ; preds = %174
  br label %227

; <label>:227                                     ; preds = %226, %224
  %228 = phi i32 [ %225, %224 ], [ -1, %226 ]
  store i32 %228, i32* %rFrameL, align 4
  %229 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 0
  %230 = load i32* %229, align 4
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %232, label %280

; <label>:232                                     ; preds = %227
  %233 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 1
  %234 = load i32* %233, align 4
  %235 = sext i32 %234 to i64
  %236 = load %struct.ImageParameters** @img, align 8
  %237 = getelementptr inbounds %struct.ImageParameters* %236, i32 0, i32 51
  %238 = load %struct.macroblock** %237, align 8
  %239 = getelementptr inbounds %struct.macroblock* %238, i64 %235
  %240 = getelementptr inbounds %struct.macroblock* %239, i32 0, i32 22
  %241 = load i32* %240, align 4
  %242 = icmp ne i32 %241, 0
  br i1 %242, label %243, label %260

; <label>:243                                     ; preds = %232
  %244 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %245 = load i32* %244, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %248 = load i32* %247, align 4
  %249 = sext i32 %248 to i64
  %250 = load i32* %5, align 4
  %251 = sext i32 %250 to i64
  %252 = load i16**** %2, align 8
  %253 = getelementptr inbounds i16*** %252, i64 %251
  %254 = load i16*** %253, align 8
  %255 = getelementptr inbounds i16** %254, i64 %249
  %256 = load i16** %255, align 8
  %257 = getelementptr inbounds i16* %256, i64 %246
  %258 = load i16* %257, align 2
  %259 = sext i16 %258 to i32
  br label %278

; <label>:260                                     ; preds = %232
  %261 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %262 = load i32* %261, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %265 = load i32* %264, align 4
  %266 = sext i32 %265 to i64
  %267 = load i32* %5, align 4
  %268 = sext i32 %267 to i64
  %269 = load i16**** %2, align 8
  %270 = getelementptr inbounds i16*** %269, i64 %268
  %271 = load i16*** %270, align 8
  %272 = getelementptr inbounds i16** %271, i64 %266
  %273 = load i16** %272, align 8
  %274 = getelementptr inbounds i16* %273, i64 %263
  %275 = load i16* %274, align 2
  %276 = sext i16 %275 to i32
  %277 = mul nsw i32 %276, 2
  br label %278

; <label>:278                                     ; preds = %260, %243
  %279 = phi i32 [ %259, %243 ], [ %277, %260 ]
  br label %281

; <label>:280                                     ; preds = %227
  br label %281

; <label>:281                                     ; preds = %280, %278
  %282 = phi i32 [ %279, %278 ], [ -1, %280 ]
  store i32 %282, i32* %rFrameU, align 4
  %283 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %284 = load i32* %283, align 4
  %285 = icmp ne i32 %284, 0
  br i1 %285, label %286, label %334

; <label>:286                                     ; preds = %281
  %287 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 1
  %288 = load i32* %287, align 4
  %289 = sext i32 %288 to i64
  %290 = load %struct.ImageParameters** @img, align 8
  %291 = getelementptr inbounds %struct.ImageParameters* %290, i32 0, i32 51
  %292 = load %struct.macroblock** %291, align 8
  %293 = getelementptr inbounds %struct.macroblock* %292, i64 %289
  %294 = getelementptr inbounds %struct.macroblock* %293, i32 0, i32 22
  %295 = load i32* %294, align 4
  %296 = icmp ne i32 %295, 0
  br i1 %296, label %297, label %314

; <label>:297                                     ; preds = %286
  %298 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %299 = load i32* %298, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %302 = load i32* %301, align 4
  %303 = sext i32 %302 to i64
  %304 = load i32* %5, align 4
  %305 = sext i32 %304 to i64
  %306 = load i16**** %2, align 8
  %307 = getelementptr inbounds i16*** %306, i64 %305
  %308 = load i16*** %307, align 8
  %309 = getelementptr inbounds i16** %308, i64 %303
  %310 = load i16** %309, align 8
  %311 = getelementptr inbounds i16* %310, i64 %300
  %312 = load i16* %311, align 2
  %313 = sext i16 %312 to i32
  br label %332

; <label>:314                                     ; preds = %286
  %315 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %316 = load i32* %315, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %319 = load i32* %318, align 4
  %320 = sext i32 %319 to i64
  %321 = load i32* %5, align 4
  %322 = sext i32 %321 to i64
  %323 = load i16**** %2, align 8
  %324 = getelementptr inbounds i16*** %323, i64 %322
  %325 = load i16*** %324, align 8
  %326 = getelementptr inbounds i16** %325, i64 %320
  %327 = load i16** %326, align 8
  %328 = getelementptr inbounds i16* %327, i64 %317
  %329 = load i16* %328, align 2
  %330 = sext i16 %329 to i32
  %331 = mul nsw i32 %330, 2
  br label %332

; <label>:332                                     ; preds = %314, %297
  %333 = phi i32 [ %313, %297 ], [ %331, %314 ]
  br label %335

; <label>:334                                     ; preds = %281
  br label %335

; <label>:335                                     ; preds = %334, %332
  %336 = phi i32 [ %333, %332 ], [ -1, %334 ]
  store i32 %336, i32* %rFrameUR, align 4
  br label %500

; <label>:337                                     ; preds = %162
  %338 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 0
  %339 = load i32* %338, align 4
  %340 = icmp ne i32 %339, 0
  br i1 %340, label %341, label %389

; <label>:341                                     ; preds = %337
  %342 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 1
  %343 = load i32* %342, align 4
  %344 = sext i32 %343 to i64
  %345 = load %struct.ImageParameters** @img, align 8
  %346 = getelementptr inbounds %struct.ImageParameters* %345, i32 0, i32 51
  %347 = load %struct.macroblock** %346, align 8
  %348 = getelementptr inbounds %struct.macroblock* %347, i64 %344
  %349 = getelementptr inbounds %struct.macroblock* %348, i32 0, i32 22
  %350 = load i32* %349, align 4
  %351 = icmp ne i32 %350, 0
  br i1 %351, label %352, label %370

; <label>:352                                     ; preds = %341
  %353 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %354 = load i32* %353, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %357 = load i32* %356, align 4
  %358 = sext i32 %357 to i64
  %359 = load i32* %5, align 4
  %360 = sext i32 %359 to i64
  %361 = load i16**** %2, align 8
  %362 = getelementptr inbounds i16*** %361, i64 %360
  %363 = load i16*** %362, align 8
  %364 = getelementptr inbounds i16** %363, i64 %358
  %365 = load i16** %364, align 8
  %366 = getelementptr inbounds i16* %365, i64 %355
  %367 = load i16* %366, align 2
  %368 = sext i16 %367 to i32
  %369 = ashr i32 %368, 1
  br label %387

; <label>:370                                     ; preds = %341
  %371 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %372 = load i32* %371, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %375 = load i32* %374, align 4
  %376 = sext i32 %375 to i64
  %377 = load i32* %5, align 4
  %378 = sext i32 %377 to i64
  %379 = load i16**** %2, align 8
  %380 = getelementptr inbounds i16*** %379, i64 %378
  %381 = load i16*** %380, align 8
  %382 = getelementptr inbounds i16** %381, i64 %376
  %383 = load i16** %382, align 8
  %384 = getelementptr inbounds i16* %383, i64 %373
  %385 = load i16* %384, align 2
  %386 = sext i16 %385 to i32
  br label %387

; <label>:387                                     ; preds = %370, %352
  %388 = phi i32 [ %369, %352 ], [ %386, %370 ]
  br label %390

; <label>:389                                     ; preds = %337
  br label %390

; <label>:390                                     ; preds = %389, %387
  %391 = phi i32 [ %388, %387 ], [ -1, %389 ]
  store i32 %391, i32* %rFrameL, align 4
  %392 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 0
  %393 = load i32* %392, align 4
  %394 = icmp ne i32 %393, 0
  br i1 %394, label %395, label %443

; <label>:395                                     ; preds = %390
  %396 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 1
  %397 = load i32* %396, align 4
  %398 = sext i32 %397 to i64
  %399 = load %struct.ImageParameters** @img, align 8
  %400 = getelementptr inbounds %struct.ImageParameters* %399, i32 0, i32 51
  %401 = load %struct.macroblock** %400, align 8
  %402 = getelementptr inbounds %struct.macroblock* %401, i64 %398
  %403 = getelementptr inbounds %struct.macroblock* %402, i32 0, i32 22
  %404 = load i32* %403, align 4
  %405 = icmp ne i32 %404, 0
  br i1 %405, label %406, label %424

; <label>:406                                     ; preds = %395
  %407 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %408 = load i32* %407, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %411 = load i32* %410, align 4
  %412 = sext i32 %411 to i64
  %413 = load i32* %5, align 4
  %414 = sext i32 %413 to i64
  %415 = load i16**** %2, align 8
  %416 = getelementptr inbounds i16*** %415, i64 %414
  %417 = load i16*** %416, align 8
  %418 = getelementptr inbounds i16** %417, i64 %412
  %419 = load i16** %418, align 8
  %420 = getelementptr inbounds i16* %419, i64 %409
  %421 = load i16* %420, align 2
  %422 = sext i16 %421 to i32
  %423 = ashr i32 %422, 1
  br label %441

; <label>:424                                     ; preds = %395
  %425 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %426 = load i32* %425, align 4
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %429 = load i32* %428, align 4
  %430 = sext i32 %429 to i64
  %431 = load i32* %5, align 4
  %432 = sext i32 %431 to i64
  %433 = load i16**** %2, align 8
  %434 = getelementptr inbounds i16*** %433, i64 %432
  %435 = load i16*** %434, align 8
  %436 = getelementptr inbounds i16** %435, i64 %430
  %437 = load i16** %436, align 8
  %438 = getelementptr inbounds i16* %437, i64 %427
  %439 = load i16* %438, align 2
  %440 = sext i16 %439 to i32
  br label %441

; <label>:441                                     ; preds = %424, %406
  %442 = phi i32 [ %423, %406 ], [ %440, %424 ]
  br label %444

; <label>:443                                     ; preds = %390
  br label %444

; <label>:444                                     ; preds = %443, %441
  %445 = phi i32 [ %442, %441 ], [ -1, %443 ]
  store i32 %445, i32* %rFrameU, align 4
  %446 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %447 = load i32* %446, align 4
  %448 = icmp ne i32 %447, 0
  br i1 %448, label %449, label %497

; <label>:449                                     ; preds = %444
  %450 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 1
  %451 = load i32* %450, align 4
  %452 = sext i32 %451 to i64
  %453 = load %struct.ImageParameters** @img, align 8
  %454 = getelementptr inbounds %struct.ImageParameters* %453, i32 0, i32 51
  %455 = load %struct.macroblock** %454, align 8
  %456 = getelementptr inbounds %struct.macroblock* %455, i64 %452
  %457 = getelementptr inbounds %struct.macroblock* %456, i32 0, i32 22
  %458 = load i32* %457, align 4
  %459 = icmp ne i32 %458, 0
  br i1 %459, label %460, label %478

; <label>:460                                     ; preds = %449
  %461 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %462 = load i32* %461, align 4
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %465 = load i32* %464, align 4
  %466 = sext i32 %465 to i64
  %467 = load i32* %5, align 4
  %468 = sext i32 %467 to i64
  %469 = load i16**** %2, align 8
  %470 = getelementptr inbounds i16*** %469, i64 %468
  %471 = load i16*** %470, align 8
  %472 = getelementptr inbounds i16** %471, i64 %466
  %473 = load i16** %472, align 8
  %474 = getelementptr inbounds i16* %473, i64 %463
  %475 = load i16* %474, align 2
  %476 = sext i16 %475 to i32
  %477 = ashr i32 %476, 1
  br label %495

; <label>:478                                     ; preds = %449
  %479 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %480 = load i32* %479, align 4
  %481 = sext i32 %480 to i64
  %482 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %483 = load i32* %482, align 4
  %484 = sext i32 %483 to i64
  %485 = load i32* %5, align 4
  %486 = sext i32 %485 to i64
  %487 = load i16**** %2, align 8
  %488 = getelementptr inbounds i16*** %487, i64 %486
  %489 = load i16*** %488, align 8
  %490 = getelementptr inbounds i16** %489, i64 %484
  %491 = load i16** %490, align 8
  %492 = getelementptr inbounds i16* %491, i64 %481
  %493 = load i16* %492, align 2
  %494 = sext i16 %493 to i32
  br label %495

; <label>:495                                     ; preds = %478, %460
  %496 = phi i32 [ %477, %460 ], [ %494, %478 ]
  br label %498

; <label>:497                                     ; preds = %444
  br label %498

; <label>:498                                     ; preds = %497, %495
  %499 = phi i32 [ %496, %495 ], [ -1, %497 ]
  store i32 %499, i32* %rFrameUR, align 4
  br label %500

; <label>:500                                     ; preds = %498, %335
  br label %501

; <label>:501                                     ; preds = %500, %160
  %502 = load i32* %rFrameL, align 4
  %503 = load i16* %4, align 2
  %504 = sext i16 %503 to i32
  %505 = icmp eq i32 %502, %504
  br i1 %505, label %506, label %517

; <label>:506                                     ; preds = %501
  %507 = load i32* %rFrameU, align 4
  %508 = load i16* %4, align 2
  %509 = sext i16 %508 to i32
  %510 = icmp ne i32 %507, %509
  br i1 %510, label %511, label %517

; <label>:511                                     ; preds = %506
  %512 = load i32* %rFrameUR, align 4
  %513 = load i16* %4, align 2
  %514 = sext i16 %513 to i32
  %515 = icmp ne i32 %512, %514
  br i1 %515, label %516, label %517

; <label>:516                                     ; preds = %511
  store i32 1, i32* %mvPredType, align 4
  br label %551

; <label>:517                                     ; preds = %511, %506, %501
  %518 = load i32* %rFrameL, align 4
  %519 = load i16* %4, align 2
  %520 = sext i16 %519 to i32
  %521 = icmp ne i32 %518, %520
  br i1 %521, label %522, label %533

; <label>:522                                     ; preds = %517
  %523 = load i32* %rFrameU, align 4
  %524 = load i16* %4, align 2
  %525 = sext i16 %524 to i32
  %526 = icmp eq i32 %523, %525
  br i1 %526, label %527, label %533

; <label>:527                                     ; preds = %522
  %528 = load i32* %rFrameUR, align 4
  %529 = load i16* %4, align 2
  %530 = sext i16 %529 to i32
  %531 = icmp ne i32 %528, %530
  br i1 %531, label %532, label %533

; <label>:532                                     ; preds = %527
  store i32 2, i32* %mvPredType, align 4
  br label %550

; <label>:533                                     ; preds = %527, %522, %517
  %534 = load i32* %rFrameL, align 4
  %535 = load i16* %4, align 2
  %536 = sext i16 %535 to i32
  %537 = icmp ne i32 %534, %536
  br i1 %537, label %538, label %549

; <label>:538                                     ; preds = %533
  %539 = load i32* %rFrameU, align 4
  %540 = load i16* %4, align 2
  %541 = sext i16 %540 to i32
  %542 = icmp ne i32 %539, %541
  br i1 %542, label %543, label %549

; <label>:543                                     ; preds = %538
  %544 = load i32* %rFrameUR, align 4
  %545 = load i16* %4, align 2
  %546 = sext i16 %545 to i32
  %547 = icmp eq i32 %544, %546
  br i1 %547, label %548, label %549

; <label>:548                                     ; preds = %543
  store i32 3, i32* %mvPredType, align 4
  br label %549

; <label>:549                                     ; preds = %548, %543, %538, %533
  br label %550

; <label>:550                                     ; preds = %549, %532
  br label %551

; <label>:551                                     ; preds = %550, %516
  %552 = load i32* %8, align 4
  %553 = icmp eq i32 %552, 8
  br i1 %553, label %554, label %575

; <label>:554                                     ; preds = %551
  %555 = load i32* %9, align 4
  %556 = icmp eq i32 %555, 16
  br i1 %556, label %557, label %575

; <label>:557                                     ; preds = %554
  %558 = load i32* %mb_x, align 4
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %560, label %567

; <label>:560                                     ; preds = %557
  %561 = load i32* %rFrameL, align 4
  %562 = load i16* %4, align 2
  %563 = sext i16 %562 to i32
  %564 = icmp eq i32 %561, %563
  br i1 %564, label %565, label %566

; <label>:565                                     ; preds = %560
  store i32 1, i32* %mvPredType, align 4
  br label %566

; <label>:566                                     ; preds = %565, %560
  br label %574

; <label>:567                                     ; preds = %557
  %568 = load i32* %rFrameUR, align 4
  %569 = load i16* %4, align 2
  %570 = sext i16 %569 to i32
  %571 = icmp eq i32 %568, %570
  br i1 %571, label %572, label %573

; <label>:572                                     ; preds = %567
  store i32 3, i32* %mvPredType, align 4
  br label %573

; <label>:573                                     ; preds = %572, %567
  br label %574

; <label>:574                                     ; preds = %573, %566
  br label %600

; <label>:575                                     ; preds = %554, %551
  %576 = load i32* %8, align 4
  %577 = icmp eq i32 %576, 16
  br i1 %577, label %578, label %599

; <label>:578                                     ; preds = %575
  %579 = load i32* %9, align 4
  %580 = icmp eq i32 %579, 8
  br i1 %580, label %581, label %599

; <label>:581                                     ; preds = %578
  %582 = load i32* %mb_y, align 4
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %591

; <label>:584                                     ; preds = %581
  %585 = load i32* %rFrameU, align 4
  %586 = load i16* %4, align 2
  %587 = sext i16 %586 to i32
  %588 = icmp eq i32 %585, %587
  br i1 %588, label %589, label %590

; <label>:589                                     ; preds = %584
  store i32 2, i32* %mvPredType, align 4
  br label %590

; <label>:590                                     ; preds = %589, %584
  br label %598

; <label>:591                                     ; preds = %581
  %592 = load i32* %rFrameL, align 4
  %593 = load i16* %4, align 2
  %594 = sext i16 %593 to i32
  %595 = icmp eq i32 %592, %594
  br i1 %595, label %596, label %597

; <label>:596                                     ; preds = %591
  store i32 1, i32* %mvPredType, align 4
  br label %597

; <label>:597                                     ; preds = %596, %591
  br label %598

; <label>:598                                     ; preds = %597, %590
  br label %599

; <label>:599                                     ; preds = %598, %578, %575
  br label %600

; <label>:600                                     ; preds = %599, %574
  store i32 0, i32* %hv, align 4
  br label %601

; <label>:601                                     ; preds = %1461, %600
  %602 = load i32* %hv, align 4
  %603 = icmp slt i32 %602, 2
  br i1 %603, label %604, label %1464

; <label>:604                                     ; preds = %601
  %605 = load %struct.ImageParameters** @img, align 8
  %606 = getelementptr inbounds %struct.ImageParameters* %605, i32 0, i32 90
  %607 = load i32* %606, align 4
  %608 = icmp ne i32 %607, 0
  br i1 %608, label %609, label %612

; <label>:609                                     ; preds = %604
  %610 = load i32* %hv, align 4
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %694

; <label>:612                                     ; preds = %609, %604
  %613 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 0
  %614 = load i32* %613, align 4
  %615 = icmp ne i32 %614, 0
  br i1 %615, label %616, label %637

; <label>:616                                     ; preds = %612
  %617 = load i32* %hv, align 4
  %618 = sext i32 %617 to i64
  %619 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %620 = load i32* %619, align 4
  %621 = sext i32 %620 to i64
  %622 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %623 = load i32* %622, align 4
  %624 = sext i32 %623 to i64
  %625 = load i32* %5, align 4
  %626 = sext i32 %625 to i64
  %627 = load i16***** %3, align 8
  %628 = getelementptr inbounds i16**** %627, i64 %626
  %629 = load i16**** %628, align 8
  %630 = getelementptr inbounds i16*** %629, i64 %624
  %631 = load i16*** %630, align 8
  %632 = getelementptr inbounds i16** %631, i64 %621
  %633 = load i16** %632, align 8
  %634 = getelementptr inbounds i16* %633, i64 %618
  %635 = load i16* %634, align 2
  %636 = sext i16 %635 to i32
  br label %638

; <label>:637                                     ; preds = %612
  br label %638

; <label>:638                                     ; preds = %637, %616
  %639 = phi i32 [ %636, %616 ], [ 0, %637 ]
  store i32 %639, i32* %mv_a, align 4
  %640 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 0
  %641 = load i32* %640, align 4
  %642 = icmp ne i32 %641, 0
  br i1 %642, label %643, label %664

; <label>:643                                     ; preds = %638
  %644 = load i32* %hv, align 4
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %647 = load i32* %646, align 4
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %650 = load i32* %649, align 4
  %651 = sext i32 %650 to i64
  %652 = load i32* %5, align 4
  %653 = sext i32 %652 to i64
  %654 = load i16***** %3, align 8
  %655 = getelementptr inbounds i16**** %654, i64 %653
  %656 = load i16**** %655, align 8
  %657 = getelementptr inbounds i16*** %656, i64 %651
  %658 = load i16*** %657, align 8
  %659 = getelementptr inbounds i16** %658, i64 %648
  %660 = load i16** %659, align 8
  %661 = getelementptr inbounds i16* %660, i64 %645
  %662 = load i16* %661, align 2
  %663 = sext i16 %662 to i32
  br label %665

; <label>:664                                     ; preds = %638
  br label %665

; <label>:665                                     ; preds = %664, %643
  %666 = phi i32 [ %663, %643 ], [ 0, %664 ]
  store i32 %666, i32* %mv_b, align 4
  %667 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %668 = load i32* %667, align 4
  %669 = icmp ne i32 %668, 0
  br i1 %669, label %670, label %691

; <label>:670                                     ; preds = %665
  %671 = load i32* %hv, align 4
  %672 = sext i32 %671 to i64
  %673 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %674 = load i32* %673, align 4
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %677 = load i32* %676, align 4
  %678 = sext i32 %677 to i64
  %679 = load i32* %5, align 4
  %680 = sext i32 %679 to i64
  %681 = load i16***** %3, align 8
  %682 = getelementptr inbounds i16**** %681, i64 %680
  %683 = load i16**** %682, align 8
  %684 = getelementptr inbounds i16*** %683, i64 %678
  %685 = load i16*** %684, align 8
  %686 = getelementptr inbounds i16** %685, i64 %675
  %687 = load i16** %686, align 8
  %688 = getelementptr inbounds i16* %687, i64 %672
  %689 = load i16* %688, align 2
  %690 = sext i16 %689 to i32
  br label %692

; <label>:691                                     ; preds = %665
  br label %692

; <label>:692                                     ; preds = %691, %670
  %693 = phi i32 [ %690, %670 ], [ 0, %691 ]
  store i32 %693, i32* %mv_c, align 4
  br label %1081

; <label>:694                                     ; preds = %609
  %695 = load %struct.ImageParameters** @img, align 8
  %696 = getelementptr inbounds %struct.ImageParameters* %695, i32 0, i32 3
  %697 = load i32* %696, align 4
  %698 = sext i32 %697 to i64
  %699 = load %struct.ImageParameters** @img, align 8
  %700 = getelementptr inbounds %struct.ImageParameters* %699, i32 0, i32 51
  %701 = load %struct.macroblock** %700, align 8
  %702 = getelementptr inbounds %struct.macroblock* %701, i64 %698
  %703 = getelementptr inbounds %struct.macroblock* %702, i32 0, i32 22
  %704 = load i32* %703, align 4
  %705 = icmp ne i32 %704, 0
  br i1 %705, label %706, label %893

; <label>:706                                     ; preds = %694
  %707 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 0
  %708 = load i32* %707, align 4
  %709 = icmp ne i32 %708, 0
  br i1 %709, label %710, label %766

; <label>:710                                     ; preds = %706
  %711 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 1
  %712 = load i32* %711, align 4
  %713 = sext i32 %712 to i64
  %714 = load %struct.ImageParameters** @img, align 8
  %715 = getelementptr inbounds %struct.ImageParameters* %714, i32 0, i32 51
  %716 = load %struct.macroblock** %715, align 8
  %717 = getelementptr inbounds %struct.macroblock* %716, i64 %713
  %718 = getelementptr inbounds %struct.macroblock* %717, i32 0, i32 22
  %719 = load i32* %718, align 4
  %720 = icmp ne i32 %719, 0
  br i1 %720, label %721, label %742

; <label>:721                                     ; preds = %710
  %722 = load i32* %hv, align 4
  %723 = sext i32 %722 to i64
  %724 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %725 = load i32* %724, align 4
  %726 = sext i32 %725 to i64
  %727 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %728 = load i32* %727, align 4
  %729 = sext i32 %728 to i64
  %730 = load i32* %5, align 4
  %731 = sext i32 %730 to i64
  %732 = load i16***** %3, align 8
  %733 = getelementptr inbounds i16**** %732, i64 %731
  %734 = load i16**** %733, align 8
  %735 = getelementptr inbounds i16*** %734, i64 %729
  %736 = load i16*** %735, align 8
  %737 = getelementptr inbounds i16** %736, i64 %726
  %738 = load i16** %737, align 8
  %739 = getelementptr inbounds i16* %738, i64 %723
  %740 = load i16* %739, align 2
  %741 = sext i16 %740 to i32
  br label %764

; <label>:742                                     ; preds = %710
  %743 = load i32* %hv, align 4
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %746 = load i32* %745, align 4
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %749 = load i32* %748, align 4
  %750 = sext i32 %749 to i64
  %751 = load i32* %5, align 4
  %752 = sext i32 %751 to i64
  %753 = load i16***** %3, align 8
  %754 = getelementptr inbounds i16**** %753, i64 %752
  %755 = load i16**** %754, align 8
  %756 = getelementptr inbounds i16*** %755, i64 %750
  %757 = load i16*** %756, align 8
  %758 = getelementptr inbounds i16** %757, i64 %747
  %759 = load i16** %758, align 8
  %760 = getelementptr inbounds i16* %759, i64 %744
  %761 = load i16* %760, align 2
  %762 = sext i16 %761 to i32
  %763 = sdiv i32 %762, 2
  br label %764

; <label>:764                                     ; preds = %742, %721
  %765 = phi i32 [ %741, %721 ], [ %763, %742 ]
  br label %767

; <label>:766                                     ; preds = %706
  br label %767

; <label>:767                                     ; preds = %766, %764
  %768 = phi i32 [ %765, %764 ], [ 0, %766 ]
  store i32 %768, i32* %mv_a, align 4
  %769 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 0
  %770 = load i32* %769, align 4
  %771 = icmp ne i32 %770, 0
  br i1 %771, label %772, label %828

; <label>:772                                     ; preds = %767
  %773 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 1
  %774 = load i32* %773, align 4
  %775 = sext i32 %774 to i64
  %776 = load %struct.ImageParameters** @img, align 8
  %777 = getelementptr inbounds %struct.ImageParameters* %776, i32 0, i32 51
  %778 = load %struct.macroblock** %777, align 8
  %779 = getelementptr inbounds %struct.macroblock* %778, i64 %775
  %780 = getelementptr inbounds %struct.macroblock* %779, i32 0, i32 22
  %781 = load i32* %780, align 4
  %782 = icmp ne i32 %781, 0
  br i1 %782, label %783, label %804

; <label>:783                                     ; preds = %772
  %784 = load i32* %hv, align 4
  %785 = sext i32 %784 to i64
  %786 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %787 = load i32* %786, align 4
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %790 = load i32* %789, align 4
  %791 = sext i32 %790 to i64
  %792 = load i32* %5, align 4
  %793 = sext i32 %792 to i64
  %794 = load i16***** %3, align 8
  %795 = getelementptr inbounds i16**** %794, i64 %793
  %796 = load i16**** %795, align 8
  %797 = getelementptr inbounds i16*** %796, i64 %791
  %798 = load i16*** %797, align 8
  %799 = getelementptr inbounds i16** %798, i64 %788
  %800 = load i16** %799, align 8
  %801 = getelementptr inbounds i16* %800, i64 %785
  %802 = load i16* %801, align 2
  %803 = sext i16 %802 to i32
  br label %826

; <label>:804                                     ; preds = %772
  %805 = load i32* %hv, align 4
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %808 = load i32* %807, align 4
  %809 = sext i32 %808 to i64
  %810 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %811 = load i32* %810, align 4
  %812 = sext i32 %811 to i64
  %813 = load i32* %5, align 4
  %814 = sext i32 %813 to i64
  %815 = load i16***** %3, align 8
  %816 = getelementptr inbounds i16**** %815, i64 %814
  %817 = load i16**** %816, align 8
  %818 = getelementptr inbounds i16*** %817, i64 %812
  %819 = load i16*** %818, align 8
  %820 = getelementptr inbounds i16** %819, i64 %809
  %821 = load i16** %820, align 8
  %822 = getelementptr inbounds i16* %821, i64 %806
  %823 = load i16* %822, align 2
  %824 = sext i16 %823 to i32
  %825 = sdiv i32 %824, 2
  br label %826

; <label>:826                                     ; preds = %804, %783
  %827 = phi i32 [ %803, %783 ], [ %825, %804 ]
  br label %829

; <label>:828                                     ; preds = %767
  br label %829

; <label>:829                                     ; preds = %828, %826
  %830 = phi i32 [ %827, %826 ], [ 0, %828 ]
  store i32 %830, i32* %mv_b, align 4
  %831 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %832 = load i32* %831, align 4
  %833 = icmp ne i32 %832, 0
  br i1 %833, label %834, label %890

; <label>:834                                     ; preds = %829
  %835 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 1
  %836 = load i32* %835, align 4
  %837 = sext i32 %836 to i64
  %838 = load %struct.ImageParameters** @img, align 8
  %839 = getelementptr inbounds %struct.ImageParameters* %838, i32 0, i32 51
  %840 = load %struct.macroblock** %839, align 8
  %841 = getelementptr inbounds %struct.macroblock* %840, i64 %837
  %842 = getelementptr inbounds %struct.macroblock* %841, i32 0, i32 22
  %843 = load i32* %842, align 4
  %844 = icmp ne i32 %843, 0
  br i1 %844, label %845, label %866

; <label>:845                                     ; preds = %834
  %846 = load i32* %hv, align 4
  %847 = sext i32 %846 to i64
  %848 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %849 = load i32* %848, align 4
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %852 = load i32* %851, align 4
  %853 = sext i32 %852 to i64
  %854 = load i32* %5, align 4
  %855 = sext i32 %854 to i64
  %856 = load i16***** %3, align 8
  %857 = getelementptr inbounds i16**** %856, i64 %855
  %858 = load i16**** %857, align 8
  %859 = getelementptr inbounds i16*** %858, i64 %853
  %860 = load i16*** %859, align 8
  %861 = getelementptr inbounds i16** %860, i64 %850
  %862 = load i16** %861, align 8
  %863 = getelementptr inbounds i16* %862, i64 %847
  %864 = load i16* %863, align 2
  %865 = sext i16 %864 to i32
  br label %888

; <label>:866                                     ; preds = %834
  %867 = load i32* %hv, align 4
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %870 = load i32* %869, align 4
  %871 = sext i32 %870 to i64
  %872 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %873 = load i32* %872, align 4
  %874 = sext i32 %873 to i64
  %875 = load i32* %5, align 4
  %876 = sext i32 %875 to i64
  %877 = load i16***** %3, align 8
  %878 = getelementptr inbounds i16**** %877, i64 %876
  %879 = load i16**** %878, align 8
  %880 = getelementptr inbounds i16*** %879, i64 %874
  %881 = load i16*** %880, align 8
  %882 = getelementptr inbounds i16** %881, i64 %871
  %883 = load i16** %882, align 8
  %884 = getelementptr inbounds i16* %883, i64 %868
  %885 = load i16* %884, align 2
  %886 = sext i16 %885 to i32
  %887 = sdiv i32 %886, 2
  br label %888

; <label>:888                                     ; preds = %866, %845
  %889 = phi i32 [ %865, %845 ], [ %887, %866 ]
  br label %891

; <label>:890                                     ; preds = %829
  br label %891

; <label>:891                                     ; preds = %890, %888
  %892 = phi i32 [ %889, %888 ], [ 0, %890 ]
  store i32 %892, i32* %mv_c, align 4
  br label %1080

; <label>:893                                     ; preds = %694
  %894 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 0
  %895 = load i32* %894, align 4
  %896 = icmp ne i32 %895, 0
  br i1 %896, label %897, label %953

; <label>:897                                     ; preds = %893
  %898 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 1
  %899 = load i32* %898, align 4
  %900 = sext i32 %899 to i64
  %901 = load %struct.ImageParameters** @img, align 8
  %902 = getelementptr inbounds %struct.ImageParameters* %901, i32 0, i32 51
  %903 = load %struct.macroblock** %902, align 8
  %904 = getelementptr inbounds %struct.macroblock* %903, i64 %900
  %905 = getelementptr inbounds %struct.macroblock* %904, i32 0, i32 22
  %906 = load i32* %905, align 4
  %907 = icmp ne i32 %906, 0
  br i1 %907, label %908, label %930

; <label>:908                                     ; preds = %897
  %909 = load i32* %hv, align 4
  %910 = sext i32 %909 to i64
  %911 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %912 = load i32* %911, align 4
  %913 = sext i32 %912 to i64
  %914 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %915 = load i32* %914, align 4
  %916 = sext i32 %915 to i64
  %917 = load i32* %5, align 4
  %918 = sext i32 %917 to i64
  %919 = load i16***** %3, align 8
  %920 = getelementptr inbounds i16**** %919, i64 %918
  %921 = load i16**** %920, align 8
  %922 = getelementptr inbounds i16*** %921, i64 %916
  %923 = load i16*** %922, align 8
  %924 = getelementptr inbounds i16** %923, i64 %913
  %925 = load i16** %924, align 8
  %926 = getelementptr inbounds i16* %925, i64 %910
  %927 = load i16* %926, align 2
  %928 = sext i16 %927 to i32
  %929 = mul nsw i32 %928, 2
  br label %951

; <label>:930                                     ; preds = %897
  %931 = load i32* %hv, align 4
  %932 = sext i32 %931 to i64
  %933 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %934 = load i32* %933, align 4
  %935 = sext i32 %934 to i64
  %936 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %937 = load i32* %936, align 4
  %938 = sext i32 %937 to i64
  %939 = load i32* %5, align 4
  %940 = sext i32 %939 to i64
  %941 = load i16***** %3, align 8
  %942 = getelementptr inbounds i16**** %941, i64 %940
  %943 = load i16**** %942, align 8
  %944 = getelementptr inbounds i16*** %943, i64 %938
  %945 = load i16*** %944, align 8
  %946 = getelementptr inbounds i16** %945, i64 %935
  %947 = load i16** %946, align 8
  %948 = getelementptr inbounds i16* %947, i64 %932
  %949 = load i16* %948, align 2
  %950 = sext i16 %949 to i32
  br label %951

; <label>:951                                     ; preds = %930, %908
  %952 = phi i32 [ %929, %908 ], [ %950, %930 ]
  br label %954

; <label>:953                                     ; preds = %893
  br label %954

; <label>:954                                     ; preds = %953, %951
  %955 = phi i32 [ %952, %951 ], [ 0, %953 ]
  store i32 %955, i32* %mv_a, align 4
  %956 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 0
  %957 = load i32* %956, align 4
  %958 = icmp ne i32 %957, 0
  br i1 %958, label %959, label %1015

; <label>:959                                     ; preds = %954
  %960 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 1
  %961 = load i32* %960, align 4
  %962 = sext i32 %961 to i64
  %963 = load %struct.ImageParameters** @img, align 8
  %964 = getelementptr inbounds %struct.ImageParameters* %963, i32 0, i32 51
  %965 = load %struct.macroblock** %964, align 8
  %966 = getelementptr inbounds %struct.macroblock* %965, i64 %962
  %967 = getelementptr inbounds %struct.macroblock* %966, i32 0, i32 22
  %968 = load i32* %967, align 4
  %969 = icmp ne i32 %968, 0
  br i1 %969, label %970, label %992

; <label>:970                                     ; preds = %959
  %971 = load i32* %hv, align 4
  %972 = sext i32 %971 to i64
  %973 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %974 = load i32* %973, align 4
  %975 = sext i32 %974 to i64
  %976 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %977 = load i32* %976, align 4
  %978 = sext i32 %977 to i64
  %979 = load i32* %5, align 4
  %980 = sext i32 %979 to i64
  %981 = load i16***** %3, align 8
  %982 = getelementptr inbounds i16**** %981, i64 %980
  %983 = load i16**** %982, align 8
  %984 = getelementptr inbounds i16*** %983, i64 %978
  %985 = load i16*** %984, align 8
  %986 = getelementptr inbounds i16** %985, i64 %975
  %987 = load i16** %986, align 8
  %988 = getelementptr inbounds i16* %987, i64 %972
  %989 = load i16* %988, align 2
  %990 = sext i16 %989 to i32
  %991 = mul nsw i32 %990, 2
  br label %1013

; <label>:992                                     ; preds = %959
  %993 = load i32* %hv, align 4
  %994 = sext i32 %993 to i64
  %995 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %996 = load i32* %995, align 4
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %999 = load i32* %998, align 4
  %1000 = sext i32 %999 to i64
  %1001 = load i32* %5, align 4
  %1002 = sext i32 %1001 to i64
  %1003 = load i16***** %3, align 8
  %1004 = getelementptr inbounds i16**** %1003, i64 %1002
  %1005 = load i16**** %1004, align 8
  %1006 = getelementptr inbounds i16*** %1005, i64 %1000
  %1007 = load i16*** %1006, align 8
  %1008 = getelementptr inbounds i16** %1007, i64 %997
  %1009 = load i16** %1008, align 8
  %1010 = getelementptr inbounds i16* %1009, i64 %994
  %1011 = load i16* %1010, align 2
  %1012 = sext i16 %1011 to i32
  br label %1013

; <label>:1013                                    ; preds = %992, %970
  %1014 = phi i32 [ %991, %970 ], [ %1012, %992 ]
  br label %1016

; <label>:1015                                    ; preds = %954
  br label %1016

; <label>:1016                                    ; preds = %1015, %1013
  %1017 = phi i32 [ %1014, %1013 ], [ 0, %1015 ]
  store i32 %1017, i32* %mv_b, align 4
  %1018 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %1019 = load i32* %1018, align 4
  %1020 = icmp ne i32 %1019, 0
  br i1 %1020, label %1021, label %1077

; <label>:1021                                    ; preds = %1016
  %1022 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 1
  %1023 = load i32* %1022, align 4
  %1024 = sext i32 %1023 to i64
  %1025 = load %struct.ImageParameters** @img, align 8
  %1026 = getelementptr inbounds %struct.ImageParameters* %1025, i32 0, i32 51
  %1027 = load %struct.macroblock** %1026, align 8
  %1028 = getelementptr inbounds %struct.macroblock* %1027, i64 %1024
  %1029 = getelementptr inbounds %struct.macroblock* %1028, i32 0, i32 22
  %1030 = load i32* %1029, align 4
  %1031 = icmp ne i32 %1030, 0
  br i1 %1031, label %1032, label %1054

; <label>:1032                                    ; preds = %1021
  %1033 = load i32* %hv, align 4
  %1034 = sext i32 %1033 to i64
  %1035 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %1036 = load i32* %1035, align 4
  %1037 = sext i32 %1036 to i64
  %1038 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %1039 = load i32* %1038, align 4
  %1040 = sext i32 %1039 to i64
  %1041 = load i32* %5, align 4
  %1042 = sext i32 %1041 to i64
  %1043 = load i16***** %3, align 8
  %1044 = getelementptr inbounds i16**** %1043, i64 %1042
  %1045 = load i16**** %1044, align 8
  %1046 = getelementptr inbounds i16*** %1045, i64 %1040
  %1047 = load i16*** %1046, align 8
  %1048 = getelementptr inbounds i16** %1047, i64 %1037
  %1049 = load i16** %1048, align 8
  %1050 = getelementptr inbounds i16* %1049, i64 %1034
  %1051 = load i16* %1050, align 2
  %1052 = sext i16 %1051 to i32
  %1053 = mul nsw i32 %1052, 2
  br label %1075

; <label>:1054                                    ; preds = %1021
  %1055 = load i32* %hv, align 4
  %1056 = sext i32 %1055 to i64
  %1057 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %1058 = load i32* %1057, align 4
  %1059 = sext i32 %1058 to i64
  %1060 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %1061 = load i32* %1060, align 4
  %1062 = sext i32 %1061 to i64
  %1063 = load i32* %5, align 4
  %1064 = sext i32 %1063 to i64
  %1065 = load i16***** %3, align 8
  %1066 = getelementptr inbounds i16**** %1065, i64 %1064
  %1067 = load i16**** %1066, align 8
  %1068 = getelementptr inbounds i16*** %1067, i64 %1062
  %1069 = load i16*** %1068, align 8
  %1070 = getelementptr inbounds i16** %1069, i64 %1059
  %1071 = load i16** %1070, align 8
  %1072 = getelementptr inbounds i16* %1071, i64 %1056
  %1073 = load i16* %1072, align 2
  %1074 = sext i16 %1073 to i32
  br label %1075

; <label>:1075                                    ; preds = %1054, %1032
  %1076 = phi i32 [ %1053, %1032 ], [ %1074, %1054 ]
  br label %1078

; <label>:1077                                    ; preds = %1016
  br label %1078

; <label>:1078                                    ; preds = %1077, %1075
  %1079 = phi i32 [ %1076, %1075 ], [ 0, %1077 ]
  store i32 %1079, i32* %mv_c, align 4
  br label %1080

; <label>:1080                                    ; preds = %1078, %891
  br label %1081

; <label>:1081                                    ; preds = %1080, %692
  %1082 = load %struct.InputParameters** @input, align 8
  %1083 = getelementptr inbounds %struct.InputParameters* %1082, i32 0, i32 134
  %1084 = load i32* %1083, align 4
  %1085 = icmp ne i32 %1084, 0
  br i1 %1085, label %1086, label %1300

; <label>:1086                                    ; preds = %1081
  %1087 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 0
  %1088 = load i32* %1087, align 4
  %1089 = icmp ne i32 %1088, 0
  br i1 %1089, label %1090, label %1137

; <label>:1090                                    ; preds = %1086
  %1091 = load i32* %5, align 4
  %1092 = icmp eq i32 %1091, 1
  br i1 %1092, label %1093, label %1113

; <label>:1093                                    ; preds = %1090
  %1094 = load i32* @FME_blocktype, align 4
  %1095 = sext i32 %1094 to i64
  %1096 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %1097 = load i32* %1096, align 4
  %1098 = sext i32 %1097 to i64
  %1099 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %1100 = load i32* %1099, align 4
  %1101 = sext i32 %1100 to i64
  %1102 = load i32****** @all_bwmincost, align 8
  %1103 = getelementptr inbounds i32***** %1102, i64 %1101
  %1104 = load i32***** %1103, align 8
  %1105 = getelementptr inbounds i32**** %1104, i64 %1098
  %1106 = load i32**** %1105, align 8
  %1107 = getelementptr inbounds i32*** %1106, i64 0
  %1108 = load i32*** %1107, align 8
  %1109 = getelementptr inbounds i32** %1108, i64 %1095
  %1110 = load i32** %1109, align 8
  %1111 = getelementptr inbounds i32* %1110, i64 0
  %1112 = load i32* %1111, align 4
  br label %1135

; <label>:1113                                    ; preds = %1090
  %1114 = load i32* @FME_blocktype, align 4
  %1115 = sext i32 %1114 to i64
  %1116 = load i16* %4, align 2
  %1117 = sext i16 %1116 to i64
  %1118 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 5
  %1119 = load i32* %1118, align 4
  %1120 = sext i32 %1119 to i64
  %1121 = getelementptr inbounds %struct.pix_pos* %block_a, i32 0, i32 4
  %1122 = load i32* %1121, align 4
  %1123 = sext i32 %1122 to i64
  %1124 = load i32****** @all_mincost, align 8
  %1125 = getelementptr inbounds i32***** %1124, i64 %1123
  %1126 = load i32***** %1125, align 8
  %1127 = getelementptr inbounds i32**** %1126, i64 %1120
  %1128 = load i32**** %1127, align 8
  %1129 = getelementptr inbounds i32*** %1128, i64 %1117
  %1130 = load i32*** %1129, align 8
  %1131 = getelementptr inbounds i32** %1130, i64 %1115
  %1132 = load i32** %1131, align 8
  %1133 = getelementptr inbounds i32* %1132, i64 0
  %1134 = load i32* %1133, align 4
  br label %1135

; <label>:1135                                    ; preds = %1113, %1093
  %1136 = phi i32 [ %1112, %1093 ], [ %1134, %1113 ]
  br label %1138

; <label>:1137                                    ; preds = %1086
  br label %1138

; <label>:1138                                    ; preds = %1137, %1135
  %1139 = phi i32 [ %1136, %1135 ], [ 0, %1137 ]
  store i32 %1139, i32* %SAD_a, align 4
  %1140 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 0
  %1141 = load i32* %1140, align 4
  %1142 = icmp ne i32 %1141, 0
  br i1 %1142, label %1143, label %1190

; <label>:1143                                    ; preds = %1138
  %1144 = load i32* %5, align 4
  %1145 = icmp eq i32 %1144, 1
  br i1 %1145, label %1146, label %1166

; <label>:1146                                    ; preds = %1143
  %1147 = load i32* @FME_blocktype, align 4
  %1148 = sext i32 %1147 to i64
  %1149 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %1150 = load i32* %1149, align 4
  %1151 = sext i32 %1150 to i64
  %1152 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %1153 = load i32* %1152, align 4
  %1154 = sext i32 %1153 to i64
  %1155 = load i32****** @all_bwmincost, align 8
  %1156 = getelementptr inbounds i32***** %1155, i64 %1154
  %1157 = load i32***** %1156, align 8
  %1158 = getelementptr inbounds i32**** %1157, i64 %1151
  %1159 = load i32**** %1158, align 8
  %1160 = getelementptr inbounds i32*** %1159, i64 0
  %1161 = load i32*** %1160, align 8
  %1162 = getelementptr inbounds i32** %1161, i64 %1148
  %1163 = load i32** %1162, align 8
  %1164 = getelementptr inbounds i32* %1163, i64 0
  %1165 = load i32* %1164, align 4
  br label %1188

; <label>:1166                                    ; preds = %1143
  %1167 = load i32* @FME_blocktype, align 4
  %1168 = sext i32 %1167 to i64
  %1169 = load i16* %4, align 2
  %1170 = sext i16 %1169 to i64
  %1171 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 5
  %1172 = load i32* %1171, align 4
  %1173 = sext i32 %1172 to i64
  %1174 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 4
  %1175 = load i32* %1174, align 4
  %1176 = sext i32 %1175 to i64
  %1177 = load i32****** @all_mincost, align 8
  %1178 = getelementptr inbounds i32***** %1177, i64 %1176
  %1179 = load i32***** %1178, align 8
  %1180 = getelementptr inbounds i32**** %1179, i64 %1173
  %1181 = load i32**** %1180, align 8
  %1182 = getelementptr inbounds i32*** %1181, i64 %1170
  %1183 = load i32*** %1182, align 8
  %1184 = getelementptr inbounds i32** %1183, i64 %1168
  %1185 = load i32** %1184, align 8
  %1186 = getelementptr inbounds i32* %1185, i64 0
  %1187 = load i32* %1186, align 4
  br label %1188

; <label>:1188                                    ; preds = %1166, %1146
  %1189 = phi i32 [ %1165, %1146 ], [ %1187, %1166 ]
  br label %1191

; <label>:1190                                    ; preds = %1138
  br label %1191

; <label>:1191                                    ; preds = %1190, %1188
  %1192 = phi i32 [ %1189, %1188 ], [ 0, %1190 ]
  store i32 %1192, i32* %SAD_b, align 4
  %1193 = getelementptr inbounds %struct.pix_pos* %block_d, i32 0, i32 0
  %1194 = load i32* %1193, align 4
  %1195 = icmp ne i32 %1194, 0
  br i1 %1195, label %1196, label %1243

; <label>:1196                                    ; preds = %1191
  %1197 = load i32* %5, align 4
  %1198 = icmp eq i32 %1197, 1
  br i1 %1198, label %1199, label %1219

; <label>:1199                                    ; preds = %1196
  %1200 = load i32* @FME_blocktype, align 4
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds %struct.pix_pos* %block_d, i32 0, i32 5
  %1203 = load i32* %1202, align 4
  %1204 = sext i32 %1203 to i64
  %1205 = getelementptr inbounds %struct.pix_pos* %block_d, i32 0, i32 4
  %1206 = load i32* %1205, align 4
  %1207 = sext i32 %1206 to i64
  %1208 = load i32****** @all_bwmincost, align 8
  %1209 = getelementptr inbounds i32***** %1208, i64 %1207
  %1210 = load i32***** %1209, align 8
  %1211 = getelementptr inbounds i32**** %1210, i64 %1204
  %1212 = load i32**** %1211, align 8
  %1213 = getelementptr inbounds i32*** %1212, i64 0
  %1214 = load i32*** %1213, align 8
  %1215 = getelementptr inbounds i32** %1214, i64 %1201
  %1216 = load i32** %1215, align 8
  %1217 = getelementptr inbounds i32* %1216, i64 0
  %1218 = load i32* %1217, align 4
  br label %1241

; <label>:1219                                    ; preds = %1196
  %1220 = load i32* @FME_blocktype, align 4
  %1221 = sext i32 %1220 to i64
  %1222 = load i16* %4, align 2
  %1223 = sext i16 %1222 to i64
  %1224 = getelementptr inbounds %struct.pix_pos* %block_d, i32 0, i32 5
  %1225 = load i32* %1224, align 4
  %1226 = sext i32 %1225 to i64
  %1227 = getelementptr inbounds %struct.pix_pos* %block_d, i32 0, i32 4
  %1228 = load i32* %1227, align 4
  %1229 = sext i32 %1228 to i64
  %1230 = load i32****** @all_mincost, align 8
  %1231 = getelementptr inbounds i32***** %1230, i64 %1229
  %1232 = load i32***** %1231, align 8
  %1233 = getelementptr inbounds i32**** %1232, i64 %1226
  %1234 = load i32**** %1233, align 8
  %1235 = getelementptr inbounds i32*** %1234, i64 %1223
  %1236 = load i32*** %1235, align 8
  %1237 = getelementptr inbounds i32** %1236, i64 %1221
  %1238 = load i32** %1237, align 8
  %1239 = getelementptr inbounds i32* %1238, i64 0
  %1240 = load i32* %1239, align 4
  br label %1241

; <label>:1241                                    ; preds = %1219, %1199
  %1242 = phi i32 [ %1218, %1199 ], [ %1240, %1219 ]
  br label %1244

; <label>:1243                                    ; preds = %1191
  br label %1244

; <label>:1244                                    ; preds = %1243, %1241
  %1245 = phi i32 [ %1242, %1241 ], [ 0, %1243 ]
  store i32 %1245, i32* %SAD_d, align 4
  %1246 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %1247 = load i32* %1246, align 4
  %1248 = icmp ne i32 %1247, 0
  br i1 %1248, label %1249, label %1296

; <label>:1249                                    ; preds = %1244
  %1250 = load i32* %5, align 4
  %1251 = icmp eq i32 %1250, 1
  br i1 %1251, label %1252, label %1272

; <label>:1252                                    ; preds = %1249
  %1253 = load i32* @FME_blocktype, align 4
  %1254 = sext i32 %1253 to i64
  %1255 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %1256 = load i32* %1255, align 4
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %1259 = load i32* %1258, align 4
  %1260 = sext i32 %1259 to i64
  %1261 = load i32****** @all_bwmincost, align 8
  %1262 = getelementptr inbounds i32***** %1261, i64 %1260
  %1263 = load i32***** %1262, align 8
  %1264 = getelementptr inbounds i32**** %1263, i64 %1257
  %1265 = load i32**** %1264, align 8
  %1266 = getelementptr inbounds i32*** %1265, i64 0
  %1267 = load i32*** %1266, align 8
  %1268 = getelementptr inbounds i32** %1267, i64 %1254
  %1269 = load i32** %1268, align 8
  %1270 = getelementptr inbounds i32* %1269, i64 0
  %1271 = load i32* %1270, align 4
  br label %1294

; <label>:1272                                    ; preds = %1249
  %1273 = load i32* @FME_blocktype, align 4
  %1274 = sext i32 %1273 to i64
  %1275 = load i16* %4, align 2
  %1276 = sext i16 %1275 to i64
  %1277 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 5
  %1278 = load i32* %1277, align 4
  %1279 = sext i32 %1278 to i64
  %1280 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 4
  %1281 = load i32* %1280, align 4
  %1282 = sext i32 %1281 to i64
  %1283 = load i32****** @all_mincost, align 8
  %1284 = getelementptr inbounds i32***** %1283, i64 %1282
  %1285 = load i32***** %1284, align 8
  %1286 = getelementptr inbounds i32**** %1285, i64 %1279
  %1287 = load i32**** %1286, align 8
  %1288 = getelementptr inbounds i32*** %1287, i64 %1276
  %1289 = load i32*** %1288, align 8
  %1290 = getelementptr inbounds i32** %1289, i64 %1274
  %1291 = load i32** %1290, align 8
  %1292 = getelementptr inbounds i32* %1291, i64 0
  %1293 = load i32* %1292, align 4
  br label %1294

; <label>:1294                                    ; preds = %1272, %1252
  %1295 = phi i32 [ %1271, %1252 ], [ %1293, %1272 ]
  br label %1298

; <label>:1296                                    ; preds = %1244
  %1297 = load i32* %SAD_d, align 4
  br label %1298

; <label>:1298                                    ; preds = %1296, %1294
  %1299 = phi i32 [ %1295, %1294 ], [ %1297, %1296 ]
  store i32 %1299, i32* %SAD_c, align 4
  br label %1300

; <label>:1300                                    ; preds = %1298, %1081
  %1301 = load i32* %mvPredType, align 4
  switch i32 %1301, label %1453 [
    i32 0, label %1302
    i32 1, label %1417
    i32 2, label %1429
    i32 3, label %1441
  ]

; <label>:1302                                    ; preds = %1300
  %1303 = getelementptr inbounds %struct.pix_pos* %block_b, i32 0, i32 0
  %1304 = load i32* %1303, align 4
  %1305 = icmp ne i32 %1304, 0
  br i1 %1305, label %1322, label %1306

; <label>:1306                                    ; preds = %1302
  %1307 = getelementptr inbounds %struct.pix_pos* %block_c, i32 0, i32 0
  %1308 = load i32* %1307, align 4
  %1309 = icmp ne i32 %1308, 0
  br i1 %1309, label %1322, label %1310

; <label>:1310                                    ; preds = %1306
  %1311 = load i32* %mv_a, align 4
  store i32 %1311, i32* %pred_vec, align 4
  %1312 = load %struct.InputParameters** @input, align 8
  %1313 = getelementptr inbounds %struct.InputParameters* %1312, i32 0, i32 134
  %1314 = load i32* %1313, align 4
  %1315 = icmp ne i32 %1314, 0
  br i1 %1315, label %1316, label %1321

; <label>:1316                                    ; preds = %1310
  %1317 = load i32* %SAD_a, align 4
  %1318 = load i32* %hv, align 4
  %1319 = sext i32 %1318 to i64
  %1320 = getelementptr inbounds [2 x i32]* %temp_pred_SAD, i32 0, i64 %1319
  store i32 %1317, i32* %1320, align 4
  br label %1321

; <label>:1321                                    ; preds = %1316, %1310
  br label %1380

; <label>:1322                                    ; preds = %1306, %1302
  %1323 = load i32* %mv_a, align 4
  %1324 = load i32* %mv_b, align 4
  %1325 = add nsw i32 %1323, %1324
  %1326 = load i32* %mv_c, align 4
  %1327 = add nsw i32 %1325, %1326
  %1328 = load i32* %mv_a, align 4
  %1329 = load i32* %mv_b, align 4
  %1330 = load i32* %mv_c, align 4
  %1331 = icmp slt i32 %1329, %1330
  br i1 %1331, label %1332, label %1334

; <label>:1332                                    ; preds = %1322
  %1333 = load i32* %mv_b, align 4
  br label %1336

; <label>:1334                                    ; preds = %1322
  %1335 = load i32* %mv_c, align 4
  br label %1336

; <label>:1336                                    ; preds = %1334, %1332
  %1337 = phi i32 [ %1333, %1332 ], [ %1335, %1334 ]
  %1338 = icmp slt i32 %1328, %1337
  br i1 %1338, label %1339, label %1341

; <label>:1339                                    ; preds = %1336
  %1340 = load i32* %mv_a, align 4
  br label %1351

; <label>:1341                                    ; preds = %1336
  %1342 = load i32* %mv_b, align 4
  %1343 = load i32* %mv_c, align 4
  %1344 = icmp slt i32 %1342, %1343
  br i1 %1344, label %1345, label %1347

; <label>:1345                                    ; preds = %1341
  %1346 = load i32* %mv_b, align 4
  br label %1349

; <label>:1347                                    ; preds = %1341
  %1348 = load i32* %mv_c, align 4
  br label %1349

; <label>:1349                                    ; preds = %1347, %1345
  %1350 = phi i32 [ %1346, %1345 ], [ %1348, %1347 ]
  br label %1351

; <label>:1351                                    ; preds = %1349, %1339
  %1352 = phi i32 [ %1340, %1339 ], [ %1350, %1349 ]
  %1353 = sub nsw i32 %1327, %1352
  %1354 = load i32* %mv_a, align 4
  %1355 = load i32* %mv_b, align 4
  %1356 = load i32* %mv_c, align 4
  %1357 = icmp sgt i32 %1355, %1356
  br i1 %1357, label %1358, label %1360

; <label>:1358                                    ; preds = %1351
  %1359 = load i32* %mv_b, align 4
  br label %1362

; <label>:1360                                    ; preds = %1351
  %1361 = load i32* %mv_c, align 4
  br label %1362

; <label>:1362                                    ; preds = %1360, %1358
  %1363 = phi i32 [ %1359, %1358 ], [ %1361, %1360 ]
  %1364 = icmp sgt i32 %1354, %1363
  br i1 %1364, label %1365, label %1367

; <label>:1365                                    ; preds = %1362
  %1366 = load i32* %mv_a, align 4
  br label %1377

; <label>:1367                                    ; preds = %1362
  %1368 = load i32* %mv_b, align 4
  %1369 = load i32* %mv_c, align 4
  %1370 = icmp sgt i32 %1368, %1369
  br i1 %1370, label %1371, label %1373

; <label>:1371                                    ; preds = %1367
  %1372 = load i32* %mv_b, align 4
  br label %1375

; <label>:1373                                    ; preds = %1367
  %1374 = load i32* %mv_c, align 4
  br label %1375

; <label>:1375                                    ; preds = %1373, %1371
  %1376 = phi i32 [ %1372, %1371 ], [ %1374, %1373 ]
  br label %1377

; <label>:1377                                    ; preds = %1375, %1365
  %1378 = phi i32 [ %1366, %1365 ], [ %1376, %1375 ]
  %1379 = sub nsw i32 %1353, %1378
  store i32 %1379, i32* %pred_vec, align 4
  br label %1380

; <label>:1380                                    ; preds = %1377, %1321
  %1381 = load %struct.InputParameters** @input, align 8
  %1382 = getelementptr inbounds %struct.InputParameters* %1381, i32 0, i32 134
  %1383 = load i32* %1382, align 4
  %1384 = icmp ne i32 %1383, 0
  br i1 %1384, label %1385, label %1416

; <label>:1385                                    ; preds = %1380
  %1386 = load i32* %pred_vec, align 4
  %1387 = load i32* %mv_a, align 4
  %1388 = icmp eq i32 %1386, %1387
  br i1 %1388, label %1389, label %1397

; <label>:1389                                    ; preds = %1385
  %1390 = load i32* %SAD_a, align 4
  %1391 = icmp ne i32 %1390, 0
  br i1 %1391, label %1392, label %1397

; <label>:1392                                    ; preds = %1389
  %1393 = load i32* %SAD_a, align 4
  %1394 = load i32* %hv, align 4
  %1395 = sext i32 %1394 to i64
  %1396 = getelementptr inbounds [2 x i32]* %temp_pred_SAD, i32 0, i64 %1395
  store i32 %1393, i32* %1396, align 4
  br label %1415

; <label>:1397                                    ; preds = %1389, %1385
  %1398 = load i32* %pred_vec, align 4
  %1399 = load i32* %mv_b, align 4
  %1400 = icmp eq i32 %1398, %1399
  br i1 %1400, label %1401, label %1409

; <label>:1401                                    ; preds = %1397
  %1402 = load i32* %SAD_b, align 4
  %1403 = icmp ne i32 %1402, 0
  br i1 %1403, label %1404, label %1409

; <label>:1404                                    ; preds = %1401
  %1405 = load i32* %SAD_b, align 4
  %1406 = load i32* %hv, align 4
  %1407 = sext i32 %1406 to i64
  %1408 = getelementptr inbounds [2 x i32]* %temp_pred_SAD, i32 0, i64 %1407
  store i32 %1405, i32* %1408, align 4
  br label %1414

; <label>:1409                                    ; preds = %1401, %1397
  %1410 = load i32* %SAD_c, align 4
  %1411 = load i32* %hv, align 4
  %1412 = sext i32 %1411 to i64
  %1413 = getelementptr inbounds [2 x i32]* %temp_pred_SAD, i32 0, i64 %1412
  store i32 %1410, i32* %1413, align 4
  br label %1414

; <label>:1414                                    ; preds = %1409, %1404
  br label %1415

; <label>:1415                                    ; preds = %1414, %1392
  br label %1416

; <label>:1416                                    ; preds = %1415, %1380
  br label %1454

; <label>:1417                                    ; preds = %1300
  %1418 = load i32* %mv_a, align 4
  store i32 %1418, i32* %pred_vec, align 4
  %1419 = load %struct.InputParameters** @input, align 8
  %1420 = getelementptr inbounds %struct.InputParameters* %1419, i32 0, i32 134
  %1421 = load i32* %1420, align 4
  %1422 = icmp ne i32 %1421, 0
  br i1 %1422, label %1423, label %1428

; <label>:1423                                    ; preds = %1417
  %1424 = load i32* %SAD_a, align 4
  %1425 = load i32* %hv, align 4
  %1426 = sext i32 %1425 to i64
  %1427 = getelementptr inbounds [2 x i32]* %temp_pred_SAD, i32 0, i64 %1426
  store i32 %1424, i32* %1427, align 4
  br label %1428

; <label>:1428                                    ; preds = %1423, %1417
  br label %1454

; <label>:1429                                    ; preds = %1300
  %1430 = load i32* %mv_b, align 4
  store i32 %1430, i32* %pred_vec, align 4
  %1431 = load %struct.InputParameters** @input, align 8
  %1432 = getelementptr inbounds %struct.InputParameters* %1431, i32 0, i32 134
  %1433 = load i32* %1432, align 4
  %1434 = icmp ne i32 %1433, 0
  br i1 %1434, label %1435, label %1440

; <label>:1435                                    ; preds = %1429
  %1436 = load i32* %SAD_b, align 4
  %1437 = load i32* %hv, align 4
  %1438 = sext i32 %1437 to i64
  %1439 = getelementptr inbounds [2 x i32]* %temp_pred_SAD, i32 0, i64 %1438
  store i32 %1436, i32* %1439, align 4
  br label %1440

; <label>:1440                                    ; preds = %1435, %1429
  br label %1454

; <label>:1441                                    ; preds = %1300
  %1442 = load i32* %mv_c, align 4
  store i32 %1442, i32* %pred_vec, align 4
  %1443 = load %struct.InputParameters** @input, align 8
  %1444 = getelementptr inbounds %struct.InputParameters* %1443, i32 0, i32 134
  %1445 = load i32* %1444, align 4
  %1446 = icmp ne i32 %1445, 0
  br i1 %1446, label %1447, label %1452

; <label>:1447                                    ; preds = %1441
  %1448 = load i32* %SAD_c, align 4
  %1449 = load i32* %hv, align 4
  %1450 = sext i32 %1449 to i64
  %1451 = getelementptr inbounds [2 x i32]* %temp_pred_SAD, i32 0, i64 %1450
  store i32 %1448, i32* %1451, align 4
  br label %1452

; <label>:1452                                    ; preds = %1447, %1441
  br label %1454

; <label>:1453                                    ; preds = %1300
  br label %1454

; <label>:1454                                    ; preds = %1453, %1452, %1440, %1428, %1416
  %1455 = load i32* %pred_vec, align 4
  %1456 = trunc i32 %1455 to i16
  %1457 = load i32* %hv, align 4
  %1458 = sext i32 %1457 to i64
  %1459 = load i16** %1, align 8
  %1460 = getelementptr inbounds i16* %1459, i64 %1458
  store i16 %1456, i16* %1460, align 2
  br label %1461

; <label>:1461                                    ; preds = %1454
  %1462 = load i32* %hv, align 4
  %1463 = add nsw i32 %1462, 1
  store i32 %1463, i32* %hv, align 4
  br label %601

; <label>:1464                                    ; preds = %601
  %1465 = load %struct.InputParameters** @input, align 8
  %1466 = getelementptr inbounds %struct.InputParameters* %1465, i32 0, i32 134
  %1467 = load i32* %1466, align 4
  %1468 = icmp ne i32 %1467, 0
  br i1 %1468, label %1469, label %1483

; <label>:1469                                    ; preds = %1464
  %1470 = getelementptr inbounds [2 x i32]* %temp_pred_SAD, i32 0, i64 0
  %1471 = load i32* %1470, align 4
  %1472 = getelementptr inbounds [2 x i32]* %temp_pred_SAD, i32 0, i64 1
  %1473 = load i32* %1472, align 4
  %1474 = icmp sgt i32 %1471, %1473
  br i1 %1474, label %1475, label %1478

; <label>:1475                                    ; preds = %1469
  %1476 = getelementptr inbounds [2 x i32]* %temp_pred_SAD, i32 0, i64 1
  %1477 = load i32* %1476, align 4
  br label %1481

; <label>:1478                                    ; preds = %1469
  %1479 = getelementptr inbounds [2 x i32]* %temp_pred_SAD, i32 0, i64 0
  %1480 = load i32* %1479, align 4
  br label %1481

; <label>:1481                                    ; preds = %1478, %1475
  %1482 = phi i32 [ %1477, %1475 ], [ %1480, %1478 ]
  store i32 %1482, i32* @pred_SAD_space, align 4
  br label %1483

; <label>:1483                                    ; preds = %1481, %1464
  ret void
}

declare i16* @FastLine16Y_11(i16*, i32, i32, i32, i32) #2

declare i16* @UMVLine16Y_11(i16*, i32, i32, i32, i32) #2

declare void @getLuma4x4Neighbour(i32, i32, i32, i32, i32, %struct.pix_pos*) #2

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define void @Init_Motion_Search_Module() #0 {
  %bits = alloca i32, align 4
  %i = alloca i32, align 4
  %imin = alloca i32, align 4
  %imax = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %byte_abs_range = alloca i32, align 4
  %search_range = alloca i32, align 4
  %number_of_reference_frames = alloca i32, align 4
  %max_search_points = alloca i32, align 4
  %max_ref_bits = alloca i32, align 4
  %max_ref = alloca i32, align 4
  %number_of_subpel_positions = alloca i32, align 4
  %max_mv_bits = alloca i32, align 4
  %1 = load %struct.ImageParameters** @img, align 8
  %2 = getelementptr inbounds %struct.ImageParameters* %1, i32 0, i32 155
  %3 = load i32* %2, align 4
  %4 = load %struct.ImageParameters** @img, align 8
  %5 = getelementptr inbounds %struct.ImageParameters* %4, i32 0, i32 156
  %6 = load i32* %5, align 4
  %7 = icmp sgt i32 %3, %6
  br i1 %7, label %8, label %14

; <label>:8                                       ; preds = %0
  %9 = load %struct.ImageParameters** @img, align 8
  %10 = getelementptr inbounds %struct.ImageParameters* %9, i32 0, i32 155
  %11 = load i32* %10, align 4
  %12 = add nsw i32 %11, 1
  %13 = mul nsw i32 %12, 2
  br label %20

; <label>:14                                      ; preds = %0
  %15 = load %struct.ImageParameters** @img, align 8
  %16 = getelementptr inbounds %struct.ImageParameters* %15, i32 0, i32 156
  %17 = load i32* %16, align 4
  %18 = add nsw i32 %17, 1
  %19 = mul nsw i32 %18, 2
  br label %20

; <label>:20                                      ; preds = %14, %8
  %21 = phi i32 [ %13, %8 ], [ %19, %14 ]
  store i32 %21, i32* %byte_abs_range, align 4
  %22 = load %struct.InputParameters** @input, align 8
  %23 = getelementptr inbounds %struct.InputParameters* %22, i32 0, i32 8
  %24 = load i32* %23, align 4
  store i32 %24, i32* %search_range, align 4
  %25 = load %struct.ImageParameters** @img, align 8
  %26 = getelementptr inbounds %struct.ImageParameters* %25, i32 0, i32 9
  %27 = load i32* %26, align 4
  store i32 %27, i32* %number_of_reference_frames, align 4
  %28 = load i32* %search_range, align 4
  %29 = mul nsw i32 2, %28
  %30 = add nsw i32 %29, 1
  %31 = load i32* %search_range, align 4
  %32 = mul nsw i32 2, %31
  %33 = add nsw i32 %32, 1
  %34 = mul nsw i32 %30, %33
  %35 = icmp sgt i32 9, %34
  br i1 %35, label %36, label %37

; <label>:36                                      ; preds = %20
  br label %45

; <label>:37                                      ; preds = %20
  %38 = load i32* %search_range, align 4
  %39 = mul nsw i32 2, %38
  %40 = add nsw i32 %39, 1
  %41 = load i32* %search_range, align 4
  %42 = mul nsw i32 2, %41
  %43 = add nsw i32 %42, 1
  %44 = mul nsw i32 %40, %43
  br label %45

; <label>:45                                      ; preds = %37, %36
  %46 = phi i32 [ 9, %36 ], [ %44, %37 ]
  store i32 %46, i32* %max_search_points, align 4
  %47 = load i32* %number_of_reference_frames, align 4
  %48 = add nsw i32 %47, 1
  %49 = icmp sgt i32 16, %48
  br i1 %49, label %50, label %51

; <label>:50                                      ; preds = %45
  br label %54

; <label>:51                                      ; preds = %45
  %52 = load i32* %number_of_reference_frames, align 4
  %53 = add nsw i32 %52, 1
  br label %54

; <label>:54                                      ; preds = %51, %50
  %55 = phi i32 [ 16, %50 ], [ %53, %51 ]
  %56 = sitofp i32 %55 to double
  %57 = call double @log(double %56) #3
  %58 = call double @log(double 2.000000e+00) #3
  %59 = fdiv double %57, %58
  %60 = fadd double %59, 1.000000e-10
  %61 = call double @floor(double %60) #5
  %62 = fptosi double %61 to i32
  %63 = mul nsw i32 2, %62
  %64 = add nsw i32 1, %63
  store i32 %64, i32* %max_ref_bits, align 4
  %65 = load i32* %max_ref_bits, align 4
  %66 = ashr i32 %65, 1
  %67 = add nsw i32 %66, 1
  %68 = shl i32 1, %67
  %69 = sub nsw i32 %68, 1
  store i32 %69, i32* %max_ref, align 4
  %70 = load i32* %search_range, align 4
  %71 = mul nsw i32 2, %70
  %72 = add nsw i32 %71, 3
  %73 = mul nsw i32 4, %72
  store i32 %73, i32* %number_of_subpel_positions, align 4
  %74 = load i32* %number_of_subpel_positions, align 4
  %75 = add nsw i32 %74, 1
  %76 = sitofp i32 %75 to double
  %77 = call double @log(double %76) #3
  %78 = call double @log(double 2.000000e+00) #3
  %79 = fdiv double %77, %78
  %80 = fadd double %79, 1.000000e-10
  %81 = call double @ceil(double %80) #5
  %82 = fptosi double %81 to i32
  %83 = mul nsw i32 2, %82
  %84 = add nsw i32 3, %83
  store i32 %84, i32* %max_mv_bits, align 4
  %85 = load i32* %max_mv_bits, align 4
  %86 = ashr i32 %85, 1
  %87 = shl i32 1, %86
  %88 = sub nsw i32 %87, 1
  store i32 %88, i32* @max_mvd, align 4
  %89 = load i32* %max_search_points, align 4
  %90 = sext i32 %89 to i64
  %91 = call noalias i8* @calloc(i64 %90, i64 4) #3
  %92 = bitcast i8* %91 to i32*
  store i32* %92, i32** @spiral_search_x, align 8
  %93 = icmp eq i32* %92, null
  br i1 %93, label %94, label %95

; <label>:94                                      ; preds = %54
  call void @no_mem_exit(i8* getelementptr inbounds ([43 x i8]* @.str6, i32 0, i32 0))
  br label %95

; <label>:95                                      ; preds = %94, %54
  %96 = load i32* %max_search_points, align 4
  %97 = sext i32 %96 to i64
  %98 = call noalias i8* @calloc(i64 %97, i64 4) #3
  %99 = bitcast i8* %98 to i32*
  store i32* %99, i32** @spiral_search_y, align 8
  %100 = icmp eq i32* %99, null
  br i1 %100, label %101, label %102

; <label>:101                                     ; preds = %95
  call void @no_mem_exit(i8* getelementptr inbounds ([43 x i8]* @.str7, i32 0, i32 0))
  br label %102

; <label>:102                                     ; preds = %101, %95
  %103 = load i32* @max_mvd, align 4
  %104 = mul nsw i32 2, %103
  %105 = add nsw i32 %104, 1
  %106 = sext i32 %105 to i64
  %107 = call noalias i8* @calloc(i64 %106, i64 4) #3
  %108 = bitcast i8* %107 to i32*
  store i32* %108, i32** @mvbits, align 8
  %109 = icmp eq i32* %108, null
  br i1 %109, label %110, label %111

; <label>:110                                     ; preds = %102
  call void @no_mem_exit(i8* getelementptr inbounds ([34 x i8]* @.str8, i32 0, i32 0))
  br label %111

; <label>:111                                     ; preds = %110, %102
  %112 = load i32* %max_ref, align 4
  %113 = sext i32 %112 to i64
  %114 = call noalias i8* @calloc(i64 %113, i64 4) #3
  %115 = bitcast i8* %114 to i32*
  store i32* %115, i32** @refbits, align 8
  %116 = icmp eq i32* %115, null
  br i1 %116, label %117, label %118

; <label>:117                                     ; preds = %111
  call void @no_mem_exit(i8* getelementptr inbounds ([35 x i8]* @.str9, i32 0, i32 0))
  br label %118

; <label>:118                                     ; preds = %117, %111
  %119 = load i32* %byte_abs_range, align 4
  %120 = sext i32 %119 to i64
  %121 = call noalias i8* @calloc(i64 %120, i64 4) #3
  %122 = bitcast i8* %121 to i32*
  store i32* %122, i32** @byte_abs, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %124, label %125

; <label>:124                                     ; preds = %118
  call void @no_mem_exit(i8* getelementptr inbounds ([36 x i8]* @.str10, i32 0, i32 0))
  br label %125

; <label>:125                                     ; preds = %124, %118
  %126 = load %struct.ImageParameters** @img, align 8
  %127 = getelementptr inbounds %struct.ImageParameters* %126, i32 0, i32 9
  %128 = load i32* %127, align 4
  %129 = add nsw i32 %128, 1
  %130 = call i32 @get_mem4Dint(i32***** @motion_cost, i32 8, i32 2, i32 %129, i32 4)
  %131 = load i32* @max_mvd, align 4
  %132 = load i32** @mvbits, align 8
  %133 = sext i32 %131 to i64
  %134 = getelementptr inbounds i32* %132, i64 %133
  store i32* %134, i32** @mvbits, align 8
  %135 = load i32* %byte_abs_range, align 4
  %136 = sdiv i32 %135, 2
  %137 = load i32** @byte_abs, align 8
  %138 = sext i32 %136 to i64
  %139 = getelementptr inbounds i32* %137, i64 %138
  store i32* %139, i32** @byte_abs, align 8
  %140 = load i32** @mvbits, align 8
  %141 = getelementptr inbounds i32* %140, i64 0
  store i32 1, i32* %141, align 4
  store i32 3, i32* %bits, align 4
  br label %142

; <label>:142                                     ; preds = %172, %125
  %143 = load i32* %bits, align 4
  %144 = load i32* %max_mv_bits, align 4
  %145 = icmp sle i32 %143, %144
  br i1 %145, label %146, label %175

; <label>:146                                     ; preds = %142
  %147 = load i32* %bits, align 4
  %148 = ashr i32 %147, 1
  %149 = shl i32 1, %148
  store i32 %149, i32* %imax, align 4
  %150 = load i32* %imax, align 4
  %151 = ashr i32 %150, 1
  store i32 %151, i32* %imin, align 4
  %152 = load i32* %imin, align 4
  store i32 %152, i32* %i, align 4
  br label %153

; <label>:153                                     ; preds = %168, %146
  %154 = load i32* %i, align 4
  %155 = load i32* %imax, align 4
  %156 = icmp slt i32 %154, %155
  br i1 %156, label %157, label %171

; <label>:157                                     ; preds = %153
  %158 = load i32* %bits, align 4
  %159 = load i32* %i, align 4
  %160 = sext i32 %159 to i64
  %161 = load i32** @mvbits, align 8
  %162 = getelementptr inbounds i32* %161, i64 %160
  store i32 %158, i32* %162, align 4
  %163 = load i32* %i, align 4
  %164 = sub nsw i32 0, %163
  %165 = sext i32 %164 to i64
  %166 = load i32** @mvbits, align 8
  %167 = getelementptr inbounds i32* %166, i64 %165
  store i32 %158, i32* %167, align 4
  br label %168

; <label>:168                                     ; preds = %157
  %169 = load i32* %i, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %i, align 4
  br label %153

; <label>:171                                     ; preds = %153
  br label %172

; <label>:172                                     ; preds = %171
  %173 = load i32* %bits, align 4
  %174 = add nsw i32 %173, 2
  store i32 %174, i32* %bits, align 4
  br label %142

; <label>:175                                     ; preds = %142
  %176 = load i32** @refbits, align 8
  %177 = getelementptr inbounds i32* %176, i64 0
  store i32 1, i32* %177, align 4
  store i32 3, i32* %bits, align 4
  br label %178

; <label>:178                                     ; preds = %205, %175
  %179 = load i32* %bits, align 4
  %180 = load i32* %max_ref_bits, align 4
  %181 = icmp sle i32 %179, %180
  br i1 %181, label %182, label %208

; <label>:182                                     ; preds = %178
  %183 = load i32* %bits, align 4
  %184 = ashr i32 %183, 1
  %185 = add nsw i32 %184, 1
  %186 = shl i32 1, %185
  %187 = sub nsw i32 %186, 1
  store i32 %187, i32* %imax, align 4
  %188 = load i32* %imax, align 4
  %189 = ashr i32 %188, 1
  store i32 %189, i32* %imin, align 4
  %190 = load i32* %imin, align 4
  store i32 %190, i32* %i, align 4
  br label %191

; <label>:191                                     ; preds = %201, %182
  %192 = load i32* %i, align 4
  %193 = load i32* %imax, align 4
  %194 = icmp slt i32 %192, %193
  br i1 %194, label %195, label %204

; <label>:195                                     ; preds = %191
  %196 = load i32* %bits, align 4
  %197 = load i32* %i, align 4
  %198 = sext i32 %197 to i64
  %199 = load i32** @refbits, align 8
  %200 = getelementptr inbounds i32* %199, i64 %198
  store i32 %196, i32* %200, align 4
  br label %201

; <label>:201                                     ; preds = %195
  %202 = load i32* %i, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %i, align 4
  br label %191

; <label>:204                                     ; preds = %191
  br label %205

; <label>:205                                     ; preds = %204
  %206 = load i32* %bits, align 4
  %207 = add nsw i32 %206, 2
  store i32 %207, i32* %bits, align 4
  br label %178

; <label>:208                                     ; preds = %178
  %209 = load i32** @byte_abs, align 8
  %210 = getelementptr inbounds i32* %209, i64 0
  store i32 0, i32* %210, align 4
  store i32 1, i32* %i, align 4
  br label %211

; <label>:211                                     ; preds = %227, %208
  %212 = load i32* %i, align 4
  %213 = load i32* %byte_abs_range, align 4
  %214 = sdiv i32 %213, 2
  %215 = icmp slt i32 %212, %214
  br i1 %215, label %216, label %230

; <label>:216                                     ; preds = %211
  %217 = load i32* %i, align 4
  %218 = load i32* %i, align 4
  %219 = sub nsw i32 0, %218
  %220 = sext i32 %219 to i64
  %221 = load i32** @byte_abs, align 8
  %222 = getelementptr inbounds i32* %221, i64 %220
  store i32 %217, i32* %222, align 4
  %223 = load i32* %i, align 4
  %224 = sext i32 %223 to i64
  %225 = load i32** @byte_abs, align 8
  %226 = getelementptr inbounds i32* %225, i64 %224
  store i32 %217, i32* %226, align 4
  br label %227

; <label>:227                                     ; preds = %216
  %228 = load i32* %i, align 4
  %229 = add nsw i32 %228, 1
  store i32 %229, i32* %i, align 4
  br label %211

; <label>:230                                     ; preds = %211
  %231 = load i32** @spiral_search_y, align 8
  %232 = getelementptr inbounds i32* %231, i64 0
  store i32 0, i32* %232, align 4
  %233 = load i32** @spiral_search_x, align 8
  %234 = getelementptr inbounds i32* %233, i64 0
  store i32 0, i32* %234, align 4
  store i32 1, i32* %k, align 4
  store i32 1, i32* %l, align 4
  br label %235

; <label>:235                                     ; preds = %315, %230
  %236 = load i32* %l, align 4
  %237 = load i32* %search_range, align 4
  %238 = icmp sgt i32 1, %237
  br i1 %238, label %239, label %240

; <label>:239                                     ; preds = %235
  br label %242

; <label>:240                                     ; preds = %235
  %241 = load i32* %search_range, align 4
  br label %242

; <label>:242                                     ; preds = %240, %239
  %243 = phi i32 [ 1, %239 ], [ %241, %240 ]
  %244 = icmp sle i32 %236, %243
  br i1 %244, label %245, label %318

; <label>:245                                     ; preds = %242
  %246 = load i32* %l, align 4
  %247 = sub nsw i32 0, %246
  %248 = add nsw i32 %247, 1
  store i32 %248, i32* %i, align 4
  br label %249

; <label>:249                                     ; preds = %277, %245
  %250 = load i32* %i, align 4
  %251 = load i32* %l, align 4
  %252 = icmp slt i32 %250, %251
  br i1 %252, label %253, label %280

; <label>:253                                     ; preds = %249
  %254 = load i32* %i, align 4
  %255 = load i32* %k, align 4
  %256 = sext i32 %255 to i64
  %257 = load i32** @spiral_search_x, align 8
  %258 = getelementptr inbounds i32* %257, i64 %256
  store i32 %254, i32* %258, align 4
  %259 = load i32* %l, align 4
  %260 = sub nsw i32 0, %259
  %261 = load i32* %k, align 4
  %262 = add nsw i32 %261, 1
  store i32 %262, i32* %k, align 4
  %263 = sext i32 %261 to i64
  %264 = load i32** @spiral_search_y, align 8
  %265 = getelementptr inbounds i32* %264, i64 %263
  store i32 %260, i32* %265, align 4
  %266 = load i32* %i, align 4
  %267 = load i32* %k, align 4
  %268 = sext i32 %267 to i64
  %269 = load i32** @spiral_search_x, align 8
  %270 = getelementptr inbounds i32* %269, i64 %268
  store i32 %266, i32* %270, align 4
  %271 = load i32* %l, align 4
  %272 = load i32* %k, align 4
  %273 = add nsw i32 %272, 1
  store i32 %273, i32* %k, align 4
  %274 = sext i32 %272 to i64
  %275 = load i32** @spiral_search_y, align 8
  %276 = getelementptr inbounds i32* %275, i64 %274
  store i32 %271, i32* %276, align 4
  br label %277

; <label>:277                                     ; preds = %253
  %278 = load i32* %i, align 4
  %279 = add nsw i32 %278, 1
  store i32 %279, i32* %i, align 4
  br label %249

; <label>:280                                     ; preds = %249
  %281 = load i32* %l, align 4
  %282 = sub nsw i32 0, %281
  store i32 %282, i32* %i, align 4
  br label %283

; <label>:283                                     ; preds = %311, %280
  %284 = load i32* %i, align 4
  %285 = load i32* %l, align 4
  %286 = icmp sle i32 %284, %285
  br i1 %286, label %287, label %314

; <label>:287                                     ; preds = %283
  %288 = load i32* %l, align 4
  %289 = sub nsw i32 0, %288
  %290 = load i32* %k, align 4
  %291 = sext i32 %290 to i64
  %292 = load i32** @spiral_search_x, align 8
  %293 = getelementptr inbounds i32* %292, i64 %291
  store i32 %289, i32* %293, align 4
  %294 = load i32* %i, align 4
  %295 = load i32* %k, align 4
  %296 = add nsw i32 %295, 1
  store i32 %296, i32* %k, align 4
  %297 = sext i32 %295 to i64
  %298 = load i32** @spiral_search_y, align 8
  %299 = getelementptr inbounds i32* %298, i64 %297
  store i32 %294, i32* %299, align 4
  %300 = load i32* %l, align 4
  %301 = load i32* %k, align 4
  %302 = sext i32 %301 to i64
  %303 = load i32** @spiral_search_x, align 8
  %304 = getelementptr inbounds i32* %303, i64 %302
  store i32 %300, i32* %304, align 4
  %305 = load i32* %i, align 4
  %306 = load i32* %k, align 4
  %307 = add nsw i32 %306, 1
  store i32 %307, i32* %k, align 4
  %308 = sext i32 %306 to i64
  %309 = load i32** @spiral_search_y, align 8
  %310 = getelementptr inbounds i32* %309, i64 %308
  store i32 %305, i32* %310, align 4
  br label %311

; <label>:311                                     ; preds = %287
  %312 = load i32* %i, align 4
  %313 = add nsw i32 %312, 1
  store i32 %313, i32* %i, align 4
  br label %283

; <label>:314                                     ; preds = %283
  br label %315

; <label>:315                                     ; preds = %314
  %316 = load i32* %l, align 4
  %317 = add nsw i32 %316, 1
  store i32 %317, i32* %l, align 4
  br label %235

; <label>:318                                     ; preds = %242
  %319 = load %struct.InputParameters** @input, align 8
  %320 = getelementptr inbounds %struct.InputParameters* %319, i32 0, i32 134
  %321 = load i32* %320, align 4
  %322 = icmp ne i32 %321, 0
  br i1 %322, label %324, label %323

; <label>:323                                     ; preds = %318
  call void @InitializeFastFullIntegerSearch()
  br label %324

; <label>:324                                     ; preds = %323, %318
  ret void
}

; Function Attrs: nounwind readnone
declare double @floor(double) #4

; Function Attrs: nounwind
declare double @log(double) #1

; Function Attrs: nounwind readnone
declare double @ceil(double) #4

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #1

declare i32 @get_mem4Dint(i32*****, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @Clear_Motion_Search_Module() #0 {
  %1 = load i32* @max_mvd, align 4
  %2 = load i32** @mvbits, align 8
  %3 = sext i32 %1 to i64
  %4 = sub i64 0, %3
  %5 = getelementptr inbounds i32* %2, i64 %4
  store i32* %5, i32** @mvbits, align 8
  %6 = load %struct.ImageParameters** @img, align 8
  %7 = getelementptr inbounds %struct.ImageParameters* %6, i32 0, i32 155
  %8 = load i32* %7, align 4
  %9 = load %struct.ImageParameters** @img, align 8
  %10 = getelementptr inbounds %struct.ImageParameters* %9, i32 0, i32 156
  %11 = load i32* %10, align 4
  %12 = icmp sgt i32 %8, %11
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %0
  %14 = load %struct.ImageParameters** @img, align 8
  %15 = getelementptr inbounds %struct.ImageParameters* %14, i32 0, i32 155
  %16 = load i32* %15, align 4
  %17 = add nsw i32 %16, 1
  br label %23

; <label>:18                                      ; preds = %0
  %19 = load %struct.ImageParameters** @img, align 8
  %20 = getelementptr inbounds %struct.ImageParameters* %19, i32 0, i32 156
  %21 = load i32* %20, align 4
  %22 = add nsw i32 %21, 1
  br label %23

; <label>:23                                      ; preds = %18, %13
  %24 = phi i32 [ %17, %13 ], [ %22, %18 ]
  %25 = load i32** @byte_abs, align 8
  %26 = sext i32 %24 to i64
  %27 = sub i64 0, %26
  %28 = getelementptr inbounds i32* %25, i64 %27
  store i32* %28, i32** @byte_abs, align 8
  %29 = load i32** @spiral_search_x, align 8
  %30 = bitcast i32* %29 to i8*
  call void @free(i8* %30) #3
  %31 = load i32** @spiral_search_y, align 8
  %32 = bitcast i32* %31 to i8*
  call void @free(i8* %32) #3
  %33 = load i32** @mvbits, align 8
  %34 = bitcast i32* %33 to i8*
  call void @free(i8* %34) #3
  %35 = load i32** @refbits, align 8
  %36 = bitcast i32* %35 to i8*
  call void @free(i8* %36) #3
  %37 = load i32** @byte_abs, align 8
  %38 = bitcast i32* %37 to i8*
  call void @free(i8* %38) #3
  %39 = load i32***** @motion_cost, align 8
  call void @free_mem4Dint(i32**** %39, i32 8, i32 2)
  %40 = load %struct.InputParameters** @input, align 8
  %41 = getelementptr inbounds %struct.InputParameters* %40, i32 0, i32 134
  %42 = load i32* %41, align 4
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %45, label %44

; <label>:44                                      ; preds = %23
  call void @ClearFastFullIntegerSearch()
  br label %45

; <label>:45                                      ; preds = %44, %23
  ret void
}

declare void @free_mem4Dint(i32****, i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @FullPelBlockMotionSearch(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i32 %search_range, i32 %min_mcost, double %lambda) #0 {
  %1 = alloca i16**, align 8
  %2 = alloca i16, align 2
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16*, align 8
  %10 = alloca i16*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca double, align 8
  %pos = alloca i32, align 4
  %cand_x = alloca i32, align 4
  %cand_y = alloca i32, align 4
  %y = alloca i32, align 4
  %x4 = alloca i32, align 4
  %mcost = alloca i32, align 4
  %orig_line = alloca i16*, align 8
  %ref_line = alloca i16*, align 8
  %get_ref_line = alloca i16* (i32, i16*, i32, i32, i32, i32)*, align 8
  %list_offset = alloca i32, align 4
  %ref_pic = alloca i16*, align 8
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %lambda_factor = alloca i32, align 4
  %blocksize_y = alloca i32, align 4
  %blocksize_x = alloca i32, align 4
  %blocksize_x4 = alloca i32, align 4
  %pred_x = alloca i32, align 4
  %pred_y = alloca i32, align 4
  %center_x = alloca i32, align 4
  %center_y = alloca i32, align 4
  %check_for_00 = alloca i32, align 4
  %apply_weights = alloca i32, align 4
  store i16** %orig_pic, i16*** %1, align 8
  store i16 %ref, i16* %2, align 2
  store i32 %list, i32* %3, align 4
  store i32 %pic_pix_x, i32* %4, align 4
  store i32 %pic_pix_y, i32* %5, align 4
  store i32 %blocktype, i32* %6, align 4
  store i16 %pred_mv_x, i16* %7, align 2
  store i16 %pred_mv_y, i16* %8, align 2
  store i16* %mv_x, i16** %9, align 8
  store i16* %mv_y, i16** %10, align 8
  store i32 %search_range, i32* %11, align 4
  store i32 %min_mcost, i32* %12, align 4
  store double %lambda, double* %13, align 8
  %14 = load %struct.ImageParameters** @img, align 8
  %15 = getelementptr inbounds %struct.ImageParameters* %14, i32 0, i32 90
  %16 = load i32* %15, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %37

; <label>:18                                      ; preds = %0
  %19 = load %struct.ImageParameters** @img, align 8
  %20 = getelementptr inbounds %struct.ImageParameters* %19, i32 0, i32 3
  %21 = load i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = load %struct.ImageParameters** @img, align 8
  %24 = getelementptr inbounds %struct.ImageParameters* %23, i32 0, i32 51
  %25 = load %struct.macroblock** %24, align 8
  %26 = getelementptr inbounds %struct.macroblock* %25, i64 %22
  %27 = getelementptr inbounds %struct.macroblock* %26, i32 0, i32 22
  %28 = load i32* %27, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %37

; <label>:30                                      ; preds = %18
  %31 = load %struct.ImageParameters** @img, align 8
  %32 = getelementptr inbounds %struct.ImageParameters* %31, i32 0, i32 3
  %33 = load i32* %32, align 4
  %34 = srem i32 %33, 2
  %35 = icmp ne i32 %34, 0
  %36 = select i1 %35, i32 4, i32 2
  br label %38

; <label>:37                                      ; preds = %18, %0
  br label %38

; <label>:38                                      ; preds = %37, %30
  %39 = phi i32 [ %36, %30 ], [ 0, %37 ]
  store i32 %39, i32* %list_offset, align 4
  %40 = load i16* %2, align 2
  %41 = sext i16 %40 to i64
  %42 = load i32* %3, align 4
  %43 = load i32* %list_offset, align 4
  %44 = add nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %45
  %47 = load %struct.storable_picture*** %46, align 8
  %48 = getelementptr inbounds %struct.storable_picture** %47, i64 %41
  %49 = load %struct.storable_picture** %48, align 8
  %50 = getelementptr inbounds %struct.storable_picture* %49, i32 0, i32 26
  %51 = load i16** %50, align 8
  store i16* %51, i16** %ref_pic, align 8
  %52 = load i16* %2, align 2
  %53 = sext i16 %52 to i64
  %54 = load i32* %3, align 4
  %55 = load i32* %list_offset, align 4
  %56 = add nsw i32 %54, %55
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %57
  %59 = load %struct.storable_picture*** %58, align 8
  %60 = getelementptr inbounds %struct.storable_picture** %59, i64 %53
  %61 = load %struct.storable_picture** %60, align 8
  %62 = getelementptr inbounds %struct.storable_picture* %61, i32 0, i32 18
  %63 = load i32* %62, align 4
  store i32 %63, i32* %img_width, align 4
  %64 = load i16* %2, align 2
  %65 = sext i16 %64 to i64
  %66 = load i32* %3, align 4
  %67 = load i32* %list_offset, align 4
  %68 = add nsw i32 %66, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %69
  %71 = load %struct.storable_picture*** %70, align 8
  %72 = getelementptr inbounds %struct.storable_picture** %71, i64 %65
  %73 = load %struct.storable_picture** %72, align 8
  %74 = getelementptr inbounds %struct.storable_picture* %73, i32 0, i32 19
  %75 = load i32* %74, align 4
  store i32 %75, i32* %img_height, align 4
  store i32 0, i32* %best_pos, align 4
  %76 = load i32* %11, align 4
  %77 = mul nsw i32 2, %76
  %78 = add nsw i32 %77, 1
  %79 = load i32* %11, align 4
  %80 = mul nsw i32 2, %79
  %81 = add nsw i32 %80, 1
  %82 = mul nsw i32 %78, %81
  store i32 %82, i32* %max_pos, align 4
  %83 = load double* %13, align 8
  %84 = fmul double 6.553600e+04, %83
  %85 = fadd double %84, 5.000000e-01
  %86 = fptosi double %85 to i32
  store i32 %86, i32* %lambda_factor, align 4
  %87 = load i32* %6, align 4
  %88 = sext i32 %87 to i64
  %89 = load %struct.InputParameters** @input, align 8
  %90 = getelementptr inbounds %struct.InputParameters* %89, i32 0, i32 20
  %91 = getelementptr inbounds [8 x [2 x i32]]* %90, i32 0, i64 %88
  %92 = getelementptr inbounds [2 x i32]* %91, i32 0, i64 1
  %93 = load i32* %92, align 4
  store i32 %93, i32* %blocksize_y, align 4
  %94 = load i32* %6, align 4
  %95 = sext i32 %94 to i64
  %96 = load %struct.InputParameters** @input, align 8
  %97 = getelementptr inbounds %struct.InputParameters* %96, i32 0, i32 20
  %98 = getelementptr inbounds [8 x [2 x i32]]* %97, i32 0, i64 %95
  %99 = getelementptr inbounds [2 x i32]* %98, i32 0, i64 0
  %100 = load i32* %99, align 4
  store i32 %100, i32* %blocksize_x, align 4
  %101 = load i32* %blocksize_x, align 4
  %102 = ashr i32 %101, 2
  store i32 %102, i32* %blocksize_x4, align 4
  %103 = load i32* %4, align 4
  %104 = shl i32 %103, 2
  %105 = load i16* %7, align 2
  %106 = sext i16 %105 to i32
  %107 = add nsw i32 %104, %106
  store i32 %107, i32* %pred_x, align 4
  %108 = load i32* %5, align 4
  %109 = shl i32 %108, 2
  %110 = load i16* %8, align 2
  %111 = sext i16 %110 to i32
  %112 = add nsw i32 %109, %111
  store i32 %112, i32* %pred_y, align 4
  %113 = load i32* %4, align 4
  %114 = load i16** %9, align 8
  %115 = load i16* %114, align 2
  %116 = sext i16 %115 to i32
  %117 = add nsw i32 %113, %116
  store i32 %117, i32* %center_x, align 4
  %118 = load i32* %5, align 4
  %119 = load i16** %10, align 8
  %120 = load i16* %119, align 2
  %121 = sext i16 %120 to i32
  %122 = add nsw i32 %118, %121
  store i32 %122, i32* %center_y, align 4
  %123 = load i32* %6, align 4
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %139

; <label>:125                                     ; preds = %38
  %126 = load %struct.InputParameters** @input, align 8
  %127 = getelementptr inbounds %struct.InputParameters* %126, i32 0, i32 85
  %128 = load i32* %127, align 4
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %139, label %130

; <label>:130                                     ; preds = %125
  %131 = load %struct.ImageParameters** @img, align 8
  %132 = getelementptr inbounds %struct.ImageParameters* %131, i32 0, i32 6
  %133 = load i32* %132, align 4
  %134 = icmp ne i32 %133, 1
  br i1 %134, label %135, label %139

; <label>:135                                     ; preds = %130
  %136 = load i16* %2, align 2
  %137 = sext i16 %136 to i32
  %138 = icmp eq i32 %137, 0
  br label %139

; <label>:139                                     ; preds = %135, %130, %125, %38
  %140 = phi i1 [ false, %130 ], [ false, %125 ], [ false, %38 ], [ %138, %135 ]
  %141 = zext i1 %140 to i32
  store i32 %141, i32* %check_for_00, align 4
  %142 = load %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %143 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %142, i32 0, i32 19
  %144 = load i32* %143, align 4
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %146, label %156

; <label>:146                                     ; preds = %139
  %147 = load %struct.ImageParameters** @img, align 8
  %148 = getelementptr inbounds %struct.ImageParameters* %147, i32 0, i32 6
  %149 = load i32* %148, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %168, label %151

; <label>:151                                     ; preds = %146
  %152 = load %struct.ImageParameters** @img, align 8
  %153 = getelementptr inbounds %struct.ImageParameters* %152, i32 0, i32 6
  %154 = load i32* %153, align 4
  %155 = icmp eq i32 %154, 3
  br i1 %155, label %168, label %156

; <label>:156                                     ; preds = %151, %139
  %157 = load %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %158 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %157, i32 0, i32 20
  %159 = load i32* %158, align 4
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %161, label %166

; <label>:161                                     ; preds = %156
  %162 = load %struct.ImageParameters** @img, align 8
  %163 = getelementptr inbounds %struct.ImageParameters* %162, i32 0, i32 6
  %164 = load i32* %163, align 4
  %165 = icmp eq i32 %164, 1
  br label %166

; <label>:166                                     ; preds = %161, %156
  %167 = phi i1 [ false, %156 ], [ %165, %161 ]
  br label %168

; <label>:168                                     ; preds = %166, %151, %146
  %169 = phi i1 [ true, %151 ], [ true, %146 ], [ %167, %166 ]
  %170 = zext i1 %169 to i32
  store i32 %170, i32* %apply_weights, align 4
  %171 = load i32* %apply_weights, align 4
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %191

; <label>:173                                     ; preds = %168
  %174 = load %struct.InputParameters** @input, align 8
  %175 = getelementptr inbounds %struct.InputParameters* %174, i32 0, i32 48
  %176 = load i32* %175, align 4
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %191

; <label>:178                                     ; preds = %173
  %179 = load i16* %2, align 2
  %180 = sext i16 %179 to i64
  %181 = load i32* %3, align 4
  %182 = load i32* %list_offset, align 4
  %183 = add nsw i32 %181, %182
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %184
  %186 = load %struct.storable_picture*** %185, align 8
  %187 = getelementptr inbounds %struct.storable_picture** %186, i64 %180
  %188 = load %struct.storable_picture** %187, align 8
  %189 = getelementptr inbounds %struct.storable_picture* %188, i32 0, i32 27
  %190 = load i16** %189, align 8
  store i16* %190, i16** %ref_pic, align 8
  br label %204

; <label>:191                                     ; preds = %173, %168
  %192 = load i16* %2, align 2
  %193 = sext i16 %192 to i64
  %194 = load i32* %3, align 4
  %195 = load i32* %list_offset, align 4
  %196 = add nsw i32 %194, %195
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %197
  %199 = load %struct.storable_picture*** %198, align 8
  %200 = getelementptr inbounds %struct.storable_picture** %199, i64 %193
  %201 = load %struct.storable_picture** %200, align 8
  %202 = getelementptr inbounds %struct.storable_picture* %201, i32 0, i32 26
  %203 = load i16** %202, align 8
  store i16* %203, i16** %ref_pic, align 8
  br label %204

; <label>:204                                     ; preds = %191, %178
  %205 = load i32* %center_x, align 4
  %206 = load i32* %11, align 4
  %207 = icmp sgt i32 %205, %206
  br i1 %207, label %208, label %235

; <label>:208                                     ; preds = %204
  %209 = load i32* %center_x, align 4
  %210 = load %struct.ImageParameters** @img, align 8
  %211 = getelementptr inbounds %struct.ImageParameters* %210, i32 0, i32 13
  %212 = load i32* %211, align 4
  %213 = sub nsw i32 %212, 1
  %214 = load i32* %11, align 4
  %215 = sub nsw i32 %213, %214
  %216 = load i32* %blocksize_x, align 4
  %217 = sub nsw i32 %215, %216
  %218 = icmp slt i32 %209, %217
  br i1 %218, label %219, label %235

; <label>:219                                     ; preds = %208
  %220 = load i32* %center_y, align 4
  %221 = load i32* %11, align 4
  %222 = icmp sgt i32 %220, %221
  br i1 %222, label %223, label %235

; <label>:223                                     ; preds = %219
  %224 = load i32* %center_y, align 4
  %225 = load %struct.ImageParameters** @img, align 8
  %226 = getelementptr inbounds %struct.ImageParameters* %225, i32 0, i32 15
  %227 = load i32* %226, align 4
  %228 = sub nsw i32 %227, 1
  %229 = load i32* %11, align 4
  %230 = sub nsw i32 %228, %229
  %231 = load i32* %blocksize_y, align 4
  %232 = sub nsw i32 %230, %231
  %233 = icmp slt i32 %224, %232
  br i1 %233, label %234, label %235

; <label>:234                                     ; preds = %223
  store i16* (i32, i16*, i32, i32, i32, i32)* @FastLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line, align 8
  br label %236

; <label>:235                                     ; preds = %223, %219, %208, %204
  store i16* (i32, i16*, i32, i32, i32, i32)* @UMVLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line, align 8
  br label %236

; <label>:236                                     ; preds = %235, %234
  store i32 0, i32* %pos, align 4
  br label %237

; <label>:237                                     ; preds = %403, %236
  %238 = load i32* %pos, align 4
  %239 = load i32* %max_pos, align 4
  %240 = icmp slt i32 %238, %239
  br i1 %240, label %241, label %406

; <label>:241                                     ; preds = %237
  %242 = load i32* %center_x, align 4
  %243 = load i32* %pos, align 4
  %244 = sext i32 %243 to i64
  %245 = load i32** @spiral_search_x, align 8
  %246 = getelementptr inbounds i32* %245, i64 %244
  %247 = load i32* %246, align 4
  %248 = add nsw i32 %242, %247
  store i32 %248, i32* %cand_x, align 4
  %249 = load i32* %center_y, align 4
  %250 = load i32* %pos, align 4
  %251 = sext i32 %250 to i64
  %252 = load i32** @spiral_search_y, align 8
  %253 = getelementptr inbounds i32* %252, i64 %251
  %254 = load i32* %253, align 4
  %255 = add nsw i32 %249, %254
  store i32 %255, i32* %cand_y, align 4
  %256 = load i32* %lambda_factor, align 4
  %257 = load i32* %cand_x, align 4
  %258 = shl i32 %257, 2
  %259 = load i32* %pred_x, align 4
  %260 = sub nsw i32 %258, %259
  %261 = sext i32 %260 to i64
  %262 = load i32** @mvbits, align 8
  %263 = getelementptr inbounds i32* %262, i64 %261
  %264 = load i32* %263, align 4
  %265 = load i32* %cand_y, align 4
  %266 = shl i32 %265, 2
  %267 = load i32* %pred_y, align 4
  %268 = sub nsw i32 %266, %267
  %269 = sext i32 %268 to i64
  %270 = load i32** @mvbits, align 8
  %271 = getelementptr inbounds i32* %270, i64 %269
  %272 = load i32* %271, align 4
  %273 = add nsw i32 %264, %272
  %274 = mul nsw i32 %256, %273
  %275 = ashr i32 %274, 16
  store i32 %275, i32* %mcost, align 4
  %276 = load i32* %check_for_00, align 4
  %277 = icmp ne i32 %276, 0
  br i1 %277, label %278, label %292

; <label>:278                                     ; preds = %241
  %279 = load i32* %cand_x, align 4
  %280 = load i32* %4, align 4
  %281 = icmp eq i32 %279, %280
  br i1 %281, label %282, label %292

; <label>:282                                     ; preds = %278
  %283 = load i32* %cand_y, align 4
  %284 = load i32* %5, align 4
  %285 = icmp eq i32 %283, %284
  br i1 %285, label %286, label %292

; <label>:286                                     ; preds = %282
  %287 = load i32* %lambda_factor, align 4
  %288 = mul nsw i32 %287, 16
  %289 = ashr i32 %288, 16
  %290 = load i32* %mcost, align 4
  %291 = sub nsw i32 %290, %289
  store i32 %291, i32* %mcost, align 4
  br label %292

; <label>:292                                     ; preds = %286, %282, %278, %241
  %293 = load i32* %mcost, align 4
  %294 = load i32* %12, align 4
  %295 = icmp sge i32 %293, %294
  br i1 %295, label %296, label %297

; <label>:296                                     ; preds = %292
  br label %403

; <label>:297                                     ; preds = %292
  store i32 0, i32* %y, align 4
  br label %298

; <label>:298                                     ; preds = %392, %297
  %299 = load i32* %y, align 4
  %300 = load i32* %blocksize_y, align 4
  %301 = icmp slt i32 %299, %300
  br i1 %301, label %302, label %395

; <label>:302                                     ; preds = %298
  %303 = load i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line, align 8
  %304 = load i32* %blocksize_x, align 4
  %305 = load i16** %ref_pic, align 8
  %306 = load i32* %cand_y, align 4
  %307 = load i32* %y, align 4
  %308 = add nsw i32 %306, %307
  %309 = load i32* %cand_x, align 4
  %310 = load i32* %img_height, align 4
  %311 = load i32* %img_width, align 4
  %312 = call i16* %303(i32 %304, i16* %305, i32 %308, i32 %309, i32 %310, i32 %311)
  store i16* %312, i16** %ref_line, align 8
  %313 = load i32* %y, align 4
  %314 = sext i32 %313 to i64
  %315 = load i16*** %1, align 8
  %316 = getelementptr inbounds i16** %315, i64 %314
  %317 = load i16** %316, align 8
  store i16* %317, i16** %orig_line, align 8
  store i32 0, i32* %x4, align 4
  br label %318

; <label>:318                                     ; preds = %383, %302
  %319 = load i32* %x4, align 4
  %320 = load i32* %blocksize_x4, align 4
  %321 = icmp slt i32 %319, %320
  br i1 %321, label %322, label %386

; <label>:322                                     ; preds = %318
  %323 = load i16** %orig_line, align 8
  %324 = getelementptr inbounds i16* %323, i32 1
  store i16* %324, i16** %orig_line, align 8
  %325 = load i16* %323, align 2
  %326 = zext i16 %325 to i32
  %327 = load i16** %ref_line, align 8
  %328 = getelementptr inbounds i16* %327, i32 1
  store i16* %328, i16** %ref_line, align 8
  %329 = load i16* %327, align 2
  %330 = zext i16 %329 to i32
  %331 = sub nsw i32 %326, %330
  %332 = sext i32 %331 to i64
  %333 = load i32** @byte_abs, align 8
  %334 = getelementptr inbounds i32* %333, i64 %332
  %335 = load i32* %334, align 4
  %336 = load i32* %mcost, align 4
  %337 = add nsw i32 %336, %335
  store i32 %337, i32* %mcost, align 4
  %338 = load i16** %orig_line, align 8
  %339 = getelementptr inbounds i16* %338, i32 1
  store i16* %339, i16** %orig_line, align 8
  %340 = load i16* %338, align 2
  %341 = zext i16 %340 to i32
  %342 = load i16** %ref_line, align 8
  %343 = getelementptr inbounds i16* %342, i32 1
  store i16* %343, i16** %ref_line, align 8
  %344 = load i16* %342, align 2
  %345 = zext i16 %344 to i32
  %346 = sub nsw i32 %341, %345
  %347 = sext i32 %346 to i64
  %348 = load i32** @byte_abs, align 8
  %349 = getelementptr inbounds i32* %348, i64 %347
  %350 = load i32* %349, align 4
  %351 = load i32* %mcost, align 4
  %352 = add nsw i32 %351, %350
  store i32 %352, i32* %mcost, align 4
  %353 = load i16** %orig_line, align 8
  %354 = getelementptr inbounds i16* %353, i32 1
  store i16* %354, i16** %orig_line, align 8
  %355 = load i16* %353, align 2
  %356 = zext i16 %355 to i32
  %357 = load i16** %ref_line, align 8
  %358 = getelementptr inbounds i16* %357, i32 1
  store i16* %358, i16** %ref_line, align 8
  %359 = load i16* %357, align 2
  %360 = zext i16 %359 to i32
  %361 = sub nsw i32 %356, %360
  %362 = sext i32 %361 to i64
  %363 = load i32** @byte_abs, align 8
  %364 = getelementptr inbounds i32* %363, i64 %362
  %365 = load i32* %364, align 4
  %366 = load i32* %mcost, align 4
  %367 = add nsw i32 %366, %365
  store i32 %367, i32* %mcost, align 4
  %368 = load i16** %orig_line, align 8
  %369 = getelementptr inbounds i16* %368, i32 1
  store i16* %369, i16** %orig_line, align 8
  %370 = load i16* %368, align 2
  %371 = zext i16 %370 to i32
  %372 = load i16** %ref_line, align 8
  %373 = getelementptr inbounds i16* %372, i32 1
  store i16* %373, i16** %ref_line, align 8
  %374 = load i16* %372, align 2
  %375 = zext i16 %374 to i32
  %376 = sub nsw i32 %371, %375
  %377 = sext i32 %376 to i64
  %378 = load i32** @byte_abs, align 8
  %379 = getelementptr inbounds i32* %378, i64 %377
  %380 = load i32* %379, align 4
  %381 = load i32* %mcost, align 4
  %382 = add nsw i32 %381, %380
  store i32 %382, i32* %mcost, align 4
  br label %383

; <label>:383                                     ; preds = %322
  %384 = load i32* %x4, align 4
  %385 = add nsw i32 %384, 1
  store i32 %385, i32* %x4, align 4
  br label %318

; <label>:386                                     ; preds = %318
  %387 = load i32* %mcost, align 4
  %388 = load i32* %12, align 4
  %389 = icmp sge i32 %387, %388
  br i1 %389, label %390, label %391

; <label>:390                                     ; preds = %386
  br label %395

; <label>:391                                     ; preds = %386
  br label %392

; <label>:392                                     ; preds = %391
  %393 = load i32* %y, align 4
  %394 = add nsw i32 %393, 1
  store i32 %394, i32* %y, align 4
  br label %298

; <label>:395                                     ; preds = %390, %298
  %396 = load i32* %mcost, align 4
  %397 = load i32* %12, align 4
  %398 = icmp slt i32 %396, %397
  br i1 %398, label %399, label %402

; <label>:399                                     ; preds = %395
  %400 = load i32* %pos, align 4
  store i32 %400, i32* %best_pos, align 4
  %401 = load i32* %mcost, align 4
  store i32 %401, i32* %12, align 4
  br label %402

; <label>:402                                     ; preds = %399, %395
  br label %403

; <label>:403                                     ; preds = %402, %296
  %404 = load i32* %pos, align 4
  %405 = add nsw i32 %404, 1
  store i32 %405, i32* %pos, align 4
  br label %237

; <label>:406                                     ; preds = %237
  %407 = load i32* %best_pos, align 4
  %408 = icmp ne i32 %407, 0
  br i1 %408, label %409, label %430

; <label>:409                                     ; preds = %406
  %410 = load i32* %best_pos, align 4
  %411 = sext i32 %410 to i64
  %412 = load i32** @spiral_search_x, align 8
  %413 = getelementptr inbounds i32* %412, i64 %411
  %414 = load i32* %413, align 4
  %415 = load i16** %9, align 8
  %416 = load i16* %415, align 2
  %417 = sext i16 %416 to i32
  %418 = add nsw i32 %417, %414
  %419 = trunc i32 %418 to i16
  store i16 %419, i16* %415, align 2
  %420 = load i32* %best_pos, align 4
  %421 = sext i32 %420 to i64
  %422 = load i32** @spiral_search_y, align 8
  %423 = getelementptr inbounds i32* %422, i64 %421
  %424 = load i32* %423, align 4
  %425 = load i16** %10, align 8
  %426 = load i16* %425, align 2
  %427 = sext i16 %426 to i32
  %428 = add nsw i32 %427, %424
  %429 = trunc i32 %428 to i16
  store i16 %429, i16* %425, align 2
  br label %430

; <label>:430                                     ; preds = %409, %406
  %431 = load i32* %12, align 4
  ret i32 %431
}

declare i16* @FastLineX(i32, i16*, i32, i32, i32, i32) #2

declare i16* @UMVLineX(i32, i16*, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @FastFullPelBlockMotionSearch(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i32 %search_range, i32 %min_mcost, double %lambda) #0 {
  %1 = alloca i16**, align 8
  %2 = alloca i16, align 2
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16*, align 8
  %10 = alloca i16*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca double, align 8
  %pos = alloca i32, align 4
  %offset_x = alloca i32, align 4
  %offset_y = alloca i32, align 4
  %cand_x = alloca i32, align 4
  %cand_y = alloca i32, align 4
  %mcost = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %lambda_factor = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %block_index = alloca i32, align 4
  %block_sad = alloca i32*, align 8
  store i16** %orig_pic, i16*** %1, align 8
  store i16 %ref, i16* %2, align 2
  store i32 %list, i32* %3, align 4
  store i32 %pic_pix_x, i32* %4, align 4
  store i32 %pic_pix_y, i32* %5, align 4
  store i32 %blocktype, i32* %6, align 4
  store i16 %pred_mv_x, i16* %7, align 2
  store i16 %pred_mv_y, i16* %8, align 2
  store i16* %mv_x, i16** %9, align 8
  store i16* %mv_y, i16** %10, align 8
  store i32 %search_range, i32* %11, align 4
  store i32 %min_mcost, i32* %12, align 4
  store double %lambda, double* %13, align 8
  %14 = load i32* %11, align 4
  %15 = mul nsw i32 2, %14
  %16 = add nsw i32 %15, 1
  %17 = load i32* %11, align 4
  %18 = mul nsw i32 2, %17
  %19 = add nsw i32 %18, 1
  %20 = mul nsw i32 %16, %19
  store i32 %20, i32* %max_pos, align 4
  %21 = load double* %13, align 8
  %22 = fmul double 6.553600e+04, %21
  %23 = fadd double %22, 5.000000e-01
  %24 = fptosi double %23 to i32
  store i32 %24, i32* %lambda_factor, align 4
  store i32 0, i32* %best_pos, align 4
  %25 = load i32* %5, align 4
  %26 = load %struct.ImageParameters** @img, align 8
  %27 = getelementptr inbounds %struct.ImageParameters* %26, i32 0, i32 38
  %28 = load i32* %27, align 4
  %29 = sub nsw i32 %25, %28
  %30 = load i32* %4, align 4
  %31 = load %struct.ImageParameters** @img, align 8
  %32 = getelementptr inbounds %struct.ImageParameters* %31, i32 0, i32 37
  %33 = load i32* %32, align 4
  %34 = sub nsw i32 %30, %33
  %35 = ashr i32 %34, 2
  %36 = add nsw i32 %29, %35
  store i32 %36, i32* %block_index, align 4
  %37 = load i32* %block_index, align 4
  %38 = sext i32 %37 to i64
  %39 = load i32* %6, align 4
  %40 = sext i32 %39 to i64
  %41 = load i16* %2, align 2
  %42 = sext i16 %41 to i64
  %43 = load i32* %3, align 4
  %44 = sext i32 %43 to i64
  %45 = load i32****** @BlockSAD, align 8
  %46 = getelementptr inbounds i32***** %45, i64 %44
  %47 = load i32***** %46, align 8
  %48 = getelementptr inbounds i32**** %47, i64 %42
  %49 = load i32**** %48, align 8
  %50 = getelementptr inbounds i32*** %49, i64 %40
  %51 = load i32*** %50, align 8
  %52 = getelementptr inbounds i32** %51, i64 %38
  %53 = load i32** %52, align 8
  store i32* %53, i32** %block_sad, align 8
  %54 = load i16* %2, align 2
  %55 = sext i16 %54 to i64
  %56 = load i32* %3, align 4
  %57 = sext i32 %56 to i64
  %58 = load i32*** @search_setup_done, align 8
  %59 = getelementptr inbounds i32** %58, i64 %57
  %60 = load i32** %59, align 8
  %61 = getelementptr inbounds i32* %60, i64 %55
  %62 = load i32* %61, align 4
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %67, label %64

; <label>:64                                      ; preds = %0
  %65 = load i16* %2, align 2
  %66 = load i32* %3, align 4
  call void @SetupFastFullPelSearch(i16 signext %65, i32 %66)
  br label %67

; <label>:67                                      ; preds = %64, %0
  %68 = load i16* %2, align 2
  %69 = sext i16 %68 to i64
  %70 = load i32* %3, align 4
  %71 = sext i32 %70 to i64
  %72 = load i32*** @search_center_x, align 8
  %73 = getelementptr inbounds i32** %72, i64 %71
  %74 = load i32** %73, align 8
  %75 = getelementptr inbounds i32* %74, i64 %69
  %76 = load i32* %75, align 4
  %77 = load %struct.ImageParameters** @img, align 8
  %78 = getelementptr inbounds %struct.ImageParameters* %77, i32 0, i32 37
  %79 = load i32* %78, align 4
  %80 = sub nsw i32 %76, %79
  store i32 %80, i32* %offset_x, align 4
  %81 = load i16* %2, align 2
  %82 = sext i16 %81 to i64
  %83 = load i32* %3, align 4
  %84 = sext i32 %83 to i64
  %85 = load i32*** @search_center_y, align 8
  %86 = getelementptr inbounds i32** %85, i64 %84
  %87 = load i32** %86, align 8
  %88 = getelementptr inbounds i32* %87, i64 %82
  %89 = load i32* %88, align 4
  %90 = load %struct.ImageParameters** @img, align 8
  %91 = getelementptr inbounds %struct.ImageParameters* %90, i32 0, i32 38
  %92 = load i32* %91, align 4
  %93 = sub nsw i32 %89, %92
  store i32 %93, i32* %offset_y, align 4
  %94 = load %struct.InputParameters** @input, align 8
  %95 = getelementptr inbounds %struct.InputParameters* %94, i32 0, i32 85
  %96 = load i32* %95, align 4
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %146, label %98

; <label>:98                                      ; preds = %67
  %99 = load i16* %2, align 2
  %100 = sext i16 %99 to i64
  %101 = load i32* %3, align 4
  %102 = sext i32 %101 to i64
  %103 = load i32*** @pos_00, align 8
  %104 = getelementptr inbounds i32** %103, i64 %102
  %105 = load i32** %104, align 8
  %106 = getelementptr inbounds i32* %105, i64 %100
  %107 = load i32* %106, align 4
  %108 = sext i32 %107 to i64
  %109 = load i32** %block_sad, align 8
  %110 = getelementptr inbounds i32* %109, i64 %108
  %111 = load i32* %110, align 4
  %112 = load i32* %lambda_factor, align 4
  %113 = load i16* %7, align 2
  %114 = sext i16 %113 to i32
  %115 = sub nsw i32 0, %114
  %116 = sext i32 %115 to i64
  %117 = load i32** @mvbits, align 8
  %118 = getelementptr inbounds i32* %117, i64 %116
  %119 = load i32* %118, align 4
  %120 = load i16* %8, align 2
  %121 = sext i16 %120 to i32
  %122 = sub nsw i32 0, %121
  %123 = sext i32 %122 to i64
  %124 = load i32** @mvbits, align 8
  %125 = getelementptr inbounds i32* %124, i64 %123
  %126 = load i32* %125, align 4
  %127 = add nsw i32 %119, %126
  %128 = mul nsw i32 %112, %127
  %129 = ashr i32 %128, 16
  %130 = add nsw i32 %111, %129
  store i32 %130, i32* %mcost, align 4
  %131 = load i32* %mcost, align 4
  %132 = load i32* %12, align 4
  %133 = icmp slt i32 %131, %132
  br i1 %133, label %134, label %145

; <label>:134                                     ; preds = %98
  %135 = load i32* %mcost, align 4
  store i32 %135, i32* %12, align 4
  %136 = load i16* %2, align 2
  %137 = sext i16 %136 to i64
  %138 = load i32* %3, align 4
  %139 = sext i32 %138 to i64
  %140 = load i32*** @pos_00, align 8
  %141 = getelementptr inbounds i32** %140, i64 %139
  %142 = load i32** %141, align 8
  %143 = getelementptr inbounds i32* %142, i64 %137
  %144 = load i32* %143, align 4
  store i32 %144, i32* %best_pos, align 4
  br label %145

; <label>:145                                     ; preds = %134, %98
  br label %146

; <label>:146                                     ; preds = %145, %67
  store i32 0, i32* %pos, align 4
  br label %147

; <label>:147                                     ; preds = %205, %146
  %148 = load i32* %pos, align 4
  %149 = load i32* %max_pos, align 4
  %150 = icmp slt i32 %148, %149
  br i1 %150, label %151, label %210

; <label>:151                                     ; preds = %147
  %152 = load i32** %block_sad, align 8
  %153 = load i32* %152, align 4
  %154 = load i32* %12, align 4
  %155 = icmp slt i32 %153, %154
  br i1 %155, label %156, label %204

; <label>:156                                     ; preds = %151
  %157 = load i32* %offset_x, align 4
  %158 = load i32* %pos, align 4
  %159 = sext i32 %158 to i64
  %160 = load i32** @spiral_search_x, align 8
  %161 = getelementptr inbounds i32* %160, i64 %159
  %162 = load i32* %161, align 4
  %163 = add nsw i32 %157, %162
  store i32 %163, i32* %cand_x, align 4
  %164 = load i32* %offset_y, align 4
  %165 = load i32* %pos, align 4
  %166 = sext i32 %165 to i64
  %167 = load i32** @spiral_search_y, align 8
  %168 = getelementptr inbounds i32* %167, i64 %166
  %169 = load i32* %168, align 4
  %170 = add nsw i32 %164, %169
  store i32 %170, i32* %cand_y, align 4
  %171 = load i32** %block_sad, align 8
  %172 = load i32* %171, align 4
  store i32 %172, i32* %mcost, align 4
  %173 = load i32* %lambda_factor, align 4
  %174 = load i32* %cand_x, align 4
  %175 = shl i32 %174, 2
  %176 = load i16* %7, align 2
  %177 = sext i16 %176 to i32
  %178 = sub nsw i32 %175, %177
  %179 = sext i32 %178 to i64
  %180 = load i32** @mvbits, align 8
  %181 = getelementptr inbounds i32* %180, i64 %179
  %182 = load i32* %181, align 4
  %183 = load i32* %cand_y, align 4
  %184 = shl i32 %183, 2
  %185 = load i16* %8, align 2
  %186 = sext i16 %185 to i32
  %187 = sub nsw i32 %184, %186
  %188 = sext i32 %187 to i64
  %189 = load i32** @mvbits, align 8
  %190 = getelementptr inbounds i32* %189, i64 %188
  %191 = load i32* %190, align 4
  %192 = add nsw i32 %182, %191
  %193 = mul nsw i32 %173, %192
  %194 = ashr i32 %193, 16
  %195 = load i32* %mcost, align 4
  %196 = add nsw i32 %195, %194
  store i32 %196, i32* %mcost, align 4
  %197 = load i32* %mcost, align 4
  %198 = load i32* %12, align 4
  %199 = icmp slt i32 %197, %198
  br i1 %199, label %200, label %203

; <label>:200                                     ; preds = %156
  %201 = load i32* %mcost, align 4
  store i32 %201, i32* %12, align 4
  %202 = load i32* %pos, align 4
  store i32 %202, i32* %best_pos, align 4
  br label %203

; <label>:203                                     ; preds = %200, %156
  br label %204

; <label>:204                                     ; preds = %203, %151
  br label %205

; <label>:205                                     ; preds = %204
  %206 = load i32* %pos, align 4
  %207 = add nsw i32 %206, 1
  store i32 %207, i32* %pos, align 4
  %208 = load i32** %block_sad, align 8
  %209 = getelementptr inbounds i32* %208, i32 1
  store i32* %209, i32** %block_sad, align 8
  br label %147

; <label>:210                                     ; preds = %147
  %211 = load i32* %offset_x, align 4
  %212 = load i32* %best_pos, align 4
  %213 = sext i32 %212 to i64
  %214 = load i32** @spiral_search_x, align 8
  %215 = getelementptr inbounds i32* %214, i64 %213
  %216 = load i32* %215, align 4
  %217 = add nsw i32 %211, %216
  %218 = trunc i32 %217 to i16
  %219 = load i16** %9, align 8
  store i16 %218, i16* %219, align 2
  %220 = load i32* %offset_y, align 4
  %221 = load i32* %best_pos, align 4
  %222 = sext i32 %221 to i64
  %223 = load i32** @spiral_search_y, align 8
  %224 = getelementptr inbounds i32* %223, i64 %222
  %225 = load i32* %224, align 4
  %226 = add nsw i32 %220, %225
  %227 = trunc i32 %226 to i16
  %228 = load i16** %10, align 8
  store i16 %227, i16* %228, align 2
  %229 = load i32* %12, align 4
  ret i32 %229
}

; Function Attrs: nounwind uwtable
define i32 @SATD(i32* %diff, i32 %use_hadamard) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i32, align 4
  %k = alloca i32, align 4
  %satd = alloca i32, align 4
  %m = alloca [16 x i32], align 16
  %dd = alloca i32, align 4
  %d = alloca [16 x i32], align 16
  store i32* %diff, i32** %1, align 8
  store i32 %use_hadamard, i32* %2, align 4
  store i32 0, i32* %satd, align 4
  %3 = load i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %449

; <label>:5                                       ; preds = %0
  %6 = load i32** %1, align 8
  %7 = getelementptr inbounds i32* %6, i64 0
  %8 = load i32* %7, align 4
  %9 = load i32** %1, align 8
  %10 = getelementptr inbounds i32* %9, i64 12
  %11 = load i32* %10, align 4
  %12 = add nsw i32 %8, %11
  %13 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 0
  store i32 %12, i32* %13, align 4
  %14 = load i32** %1, align 8
  %15 = getelementptr inbounds i32* %14, i64 4
  %16 = load i32* %15, align 4
  %17 = load i32** %1, align 8
  %18 = getelementptr inbounds i32* %17, i64 8
  %19 = load i32* %18, align 4
  %20 = add nsw i32 %16, %19
  %21 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 4
  store i32 %20, i32* %21, align 4
  %22 = load i32** %1, align 8
  %23 = getelementptr inbounds i32* %22, i64 4
  %24 = load i32* %23, align 4
  %25 = load i32** %1, align 8
  %26 = getelementptr inbounds i32* %25, i64 8
  %27 = load i32* %26, align 4
  %28 = sub nsw i32 %24, %27
  %29 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 8
  store i32 %28, i32* %29, align 4
  %30 = load i32** %1, align 8
  %31 = getelementptr inbounds i32* %30, i64 0
  %32 = load i32* %31, align 4
  %33 = load i32** %1, align 8
  %34 = getelementptr inbounds i32* %33, i64 12
  %35 = load i32* %34, align 4
  %36 = sub nsw i32 %32, %35
  %37 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 12
  store i32 %36, i32* %37, align 4
  %38 = load i32** %1, align 8
  %39 = getelementptr inbounds i32* %38, i64 1
  %40 = load i32* %39, align 4
  %41 = load i32** %1, align 8
  %42 = getelementptr inbounds i32* %41, i64 13
  %43 = load i32* %42, align 4
  %44 = add nsw i32 %40, %43
  %45 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 1
  store i32 %44, i32* %45, align 4
  %46 = load i32** %1, align 8
  %47 = getelementptr inbounds i32* %46, i64 5
  %48 = load i32* %47, align 4
  %49 = load i32** %1, align 8
  %50 = getelementptr inbounds i32* %49, i64 9
  %51 = load i32* %50, align 4
  %52 = add nsw i32 %48, %51
  %53 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 5
  store i32 %52, i32* %53, align 4
  %54 = load i32** %1, align 8
  %55 = getelementptr inbounds i32* %54, i64 5
  %56 = load i32* %55, align 4
  %57 = load i32** %1, align 8
  %58 = getelementptr inbounds i32* %57, i64 9
  %59 = load i32* %58, align 4
  %60 = sub nsw i32 %56, %59
  %61 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 9
  store i32 %60, i32* %61, align 4
  %62 = load i32** %1, align 8
  %63 = getelementptr inbounds i32* %62, i64 1
  %64 = load i32* %63, align 4
  %65 = load i32** %1, align 8
  %66 = getelementptr inbounds i32* %65, i64 13
  %67 = load i32* %66, align 4
  %68 = sub nsw i32 %64, %67
  %69 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 13
  store i32 %68, i32* %69, align 4
  %70 = load i32** %1, align 8
  %71 = getelementptr inbounds i32* %70, i64 2
  %72 = load i32* %71, align 4
  %73 = load i32** %1, align 8
  %74 = getelementptr inbounds i32* %73, i64 14
  %75 = load i32* %74, align 4
  %76 = add nsw i32 %72, %75
  %77 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 2
  store i32 %76, i32* %77, align 4
  %78 = load i32** %1, align 8
  %79 = getelementptr inbounds i32* %78, i64 6
  %80 = load i32* %79, align 4
  %81 = load i32** %1, align 8
  %82 = getelementptr inbounds i32* %81, i64 10
  %83 = load i32* %82, align 4
  %84 = add nsw i32 %80, %83
  %85 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 6
  store i32 %84, i32* %85, align 4
  %86 = load i32** %1, align 8
  %87 = getelementptr inbounds i32* %86, i64 6
  %88 = load i32* %87, align 4
  %89 = load i32** %1, align 8
  %90 = getelementptr inbounds i32* %89, i64 10
  %91 = load i32* %90, align 4
  %92 = sub nsw i32 %88, %91
  %93 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 10
  store i32 %92, i32* %93, align 4
  %94 = load i32** %1, align 8
  %95 = getelementptr inbounds i32* %94, i64 2
  %96 = load i32* %95, align 4
  %97 = load i32** %1, align 8
  %98 = getelementptr inbounds i32* %97, i64 14
  %99 = load i32* %98, align 4
  %100 = sub nsw i32 %96, %99
  %101 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 14
  store i32 %100, i32* %101, align 4
  %102 = load i32** %1, align 8
  %103 = getelementptr inbounds i32* %102, i64 3
  %104 = load i32* %103, align 4
  %105 = load i32** %1, align 8
  %106 = getelementptr inbounds i32* %105, i64 15
  %107 = load i32* %106, align 4
  %108 = add nsw i32 %104, %107
  %109 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 3
  store i32 %108, i32* %109, align 4
  %110 = load i32** %1, align 8
  %111 = getelementptr inbounds i32* %110, i64 7
  %112 = load i32* %111, align 4
  %113 = load i32** %1, align 8
  %114 = getelementptr inbounds i32* %113, i64 11
  %115 = load i32* %114, align 4
  %116 = add nsw i32 %112, %115
  %117 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 7
  store i32 %116, i32* %117, align 4
  %118 = load i32** %1, align 8
  %119 = getelementptr inbounds i32* %118, i64 7
  %120 = load i32* %119, align 4
  %121 = load i32** %1, align 8
  %122 = getelementptr inbounds i32* %121, i64 11
  %123 = load i32* %122, align 4
  %124 = sub nsw i32 %120, %123
  %125 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 11
  store i32 %124, i32* %125, align 4
  %126 = load i32** %1, align 8
  %127 = getelementptr inbounds i32* %126, i64 3
  %128 = load i32* %127, align 4
  %129 = load i32** %1, align 8
  %130 = getelementptr inbounds i32* %129, i64 15
  %131 = load i32* %130, align 4
  %132 = sub nsw i32 %128, %131
  %133 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 15
  store i32 %132, i32* %133, align 4
  %134 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 0
  %135 = load i32* %134, align 4
  %136 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 4
  %137 = load i32* %136, align 4
  %138 = add nsw i32 %135, %137
  %139 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 0
  store i32 %138, i32* %139, align 4
  %140 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 0
  %141 = load i32* %140, align 4
  %142 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 4
  %143 = load i32* %142, align 4
  %144 = sub nsw i32 %141, %143
  %145 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 8
  store i32 %144, i32* %145, align 4
  %146 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 8
  %147 = load i32* %146, align 4
  %148 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 12
  %149 = load i32* %148, align 4
  %150 = add nsw i32 %147, %149
  %151 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 4
  store i32 %150, i32* %151, align 4
  %152 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 12
  %153 = load i32* %152, align 4
  %154 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 8
  %155 = load i32* %154, align 4
  %156 = sub nsw i32 %153, %155
  %157 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 12
  store i32 %156, i32* %157, align 4
  %158 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 1
  %159 = load i32* %158, align 4
  %160 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 5
  %161 = load i32* %160, align 4
  %162 = add nsw i32 %159, %161
  %163 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 1
  store i32 %162, i32* %163, align 4
  %164 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 1
  %165 = load i32* %164, align 4
  %166 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 5
  %167 = load i32* %166, align 4
  %168 = sub nsw i32 %165, %167
  %169 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 9
  store i32 %168, i32* %169, align 4
  %170 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 9
  %171 = load i32* %170, align 4
  %172 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 13
  %173 = load i32* %172, align 4
  %174 = add nsw i32 %171, %173
  %175 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 5
  store i32 %174, i32* %175, align 4
  %176 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 13
  %177 = load i32* %176, align 4
  %178 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 9
  %179 = load i32* %178, align 4
  %180 = sub nsw i32 %177, %179
  %181 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 13
  store i32 %180, i32* %181, align 4
  %182 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 2
  %183 = load i32* %182, align 4
  %184 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 6
  %185 = load i32* %184, align 4
  %186 = add nsw i32 %183, %185
  %187 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 2
  store i32 %186, i32* %187, align 4
  %188 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 2
  %189 = load i32* %188, align 4
  %190 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 6
  %191 = load i32* %190, align 4
  %192 = sub nsw i32 %189, %191
  %193 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 10
  store i32 %192, i32* %193, align 4
  %194 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 10
  %195 = load i32* %194, align 4
  %196 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 14
  %197 = load i32* %196, align 4
  %198 = add nsw i32 %195, %197
  %199 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 6
  store i32 %198, i32* %199, align 4
  %200 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 14
  %201 = load i32* %200, align 4
  %202 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 10
  %203 = load i32* %202, align 4
  %204 = sub nsw i32 %201, %203
  %205 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 14
  store i32 %204, i32* %205, align 4
  %206 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 3
  %207 = load i32* %206, align 4
  %208 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 7
  %209 = load i32* %208, align 4
  %210 = add nsw i32 %207, %209
  %211 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 3
  store i32 %210, i32* %211, align 4
  %212 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 3
  %213 = load i32* %212, align 4
  %214 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 7
  %215 = load i32* %214, align 4
  %216 = sub nsw i32 %213, %215
  %217 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 11
  store i32 %216, i32* %217, align 4
  %218 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 11
  %219 = load i32* %218, align 4
  %220 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 15
  %221 = load i32* %220, align 4
  %222 = add nsw i32 %219, %221
  %223 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 7
  store i32 %222, i32* %223, align 4
  %224 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 15
  %225 = load i32* %224, align 4
  %226 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 11
  %227 = load i32* %226, align 4
  %228 = sub nsw i32 %225, %227
  %229 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 15
  store i32 %228, i32* %229, align 4
  %230 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 0
  %231 = load i32* %230, align 4
  %232 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 3
  %233 = load i32* %232, align 4
  %234 = add nsw i32 %231, %233
  %235 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 0
  store i32 %234, i32* %235, align 4
  %236 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 1
  %237 = load i32* %236, align 4
  %238 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 2
  %239 = load i32* %238, align 4
  %240 = add nsw i32 %237, %239
  %241 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 1
  store i32 %240, i32* %241, align 4
  %242 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 1
  %243 = load i32* %242, align 4
  %244 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 2
  %245 = load i32* %244, align 4
  %246 = sub nsw i32 %243, %245
  %247 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 2
  store i32 %246, i32* %247, align 4
  %248 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 0
  %249 = load i32* %248, align 4
  %250 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 3
  %251 = load i32* %250, align 4
  %252 = sub nsw i32 %249, %251
  %253 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 3
  store i32 %252, i32* %253, align 4
  %254 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 4
  %255 = load i32* %254, align 4
  %256 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 7
  %257 = load i32* %256, align 4
  %258 = add nsw i32 %255, %257
  %259 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 4
  store i32 %258, i32* %259, align 4
  %260 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 5
  %261 = load i32* %260, align 4
  %262 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 6
  %263 = load i32* %262, align 4
  %264 = add nsw i32 %261, %263
  %265 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 5
  store i32 %264, i32* %265, align 4
  %266 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 5
  %267 = load i32* %266, align 4
  %268 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 6
  %269 = load i32* %268, align 4
  %270 = sub nsw i32 %267, %269
  %271 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 6
  store i32 %270, i32* %271, align 4
  %272 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 4
  %273 = load i32* %272, align 4
  %274 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 7
  %275 = load i32* %274, align 4
  %276 = sub nsw i32 %273, %275
  %277 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 7
  store i32 %276, i32* %277, align 4
  %278 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 8
  %279 = load i32* %278, align 4
  %280 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 11
  %281 = load i32* %280, align 4
  %282 = add nsw i32 %279, %281
  %283 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 8
  store i32 %282, i32* %283, align 4
  %284 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 9
  %285 = load i32* %284, align 4
  %286 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 10
  %287 = load i32* %286, align 4
  %288 = add nsw i32 %285, %287
  %289 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 9
  store i32 %288, i32* %289, align 4
  %290 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 9
  %291 = load i32* %290, align 4
  %292 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 10
  %293 = load i32* %292, align 4
  %294 = sub nsw i32 %291, %293
  %295 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 10
  store i32 %294, i32* %295, align 4
  %296 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 8
  %297 = load i32* %296, align 4
  %298 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 11
  %299 = load i32* %298, align 4
  %300 = sub nsw i32 %297, %299
  %301 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 11
  store i32 %300, i32* %301, align 4
  %302 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 12
  %303 = load i32* %302, align 4
  %304 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 15
  %305 = load i32* %304, align 4
  %306 = add nsw i32 %303, %305
  %307 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 12
  store i32 %306, i32* %307, align 4
  %308 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 13
  %309 = load i32* %308, align 4
  %310 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 14
  %311 = load i32* %310, align 4
  %312 = add nsw i32 %309, %311
  %313 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 13
  store i32 %312, i32* %313, align 4
  %314 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 13
  %315 = load i32* %314, align 4
  %316 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 14
  %317 = load i32* %316, align 4
  %318 = sub nsw i32 %315, %317
  %319 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 14
  store i32 %318, i32* %319, align 4
  %320 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 12
  %321 = load i32* %320, align 4
  %322 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 15
  %323 = load i32* %322, align 4
  %324 = sub nsw i32 %321, %323
  %325 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 15
  store i32 %324, i32* %325, align 4
  %326 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 0
  %327 = load i32* %326, align 4
  %328 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 1
  %329 = load i32* %328, align 4
  %330 = add nsw i32 %327, %329
  %331 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 0
  store i32 %330, i32* %331, align 4
  %332 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 0
  %333 = load i32* %332, align 4
  %334 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 1
  %335 = load i32* %334, align 4
  %336 = sub nsw i32 %333, %335
  %337 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 1
  store i32 %336, i32* %337, align 4
  %338 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 2
  %339 = load i32* %338, align 4
  %340 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 3
  %341 = load i32* %340, align 4
  %342 = add nsw i32 %339, %341
  %343 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 2
  store i32 %342, i32* %343, align 4
  %344 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 3
  %345 = load i32* %344, align 4
  %346 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 2
  %347 = load i32* %346, align 4
  %348 = sub nsw i32 %345, %347
  %349 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 3
  store i32 %348, i32* %349, align 4
  %350 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 4
  %351 = load i32* %350, align 4
  %352 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 5
  %353 = load i32* %352, align 4
  %354 = add nsw i32 %351, %353
  %355 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 4
  store i32 %354, i32* %355, align 4
  %356 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 4
  %357 = load i32* %356, align 4
  %358 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 5
  %359 = load i32* %358, align 4
  %360 = sub nsw i32 %357, %359
  %361 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 5
  store i32 %360, i32* %361, align 4
  %362 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 6
  %363 = load i32* %362, align 4
  %364 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 7
  %365 = load i32* %364, align 4
  %366 = add nsw i32 %363, %365
  %367 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 6
  store i32 %366, i32* %367, align 4
  %368 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 7
  %369 = load i32* %368, align 4
  %370 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 6
  %371 = load i32* %370, align 4
  %372 = sub nsw i32 %369, %371
  %373 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 7
  store i32 %372, i32* %373, align 4
  %374 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 8
  %375 = load i32* %374, align 4
  %376 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 9
  %377 = load i32* %376, align 4
  %378 = add nsw i32 %375, %377
  %379 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 8
  store i32 %378, i32* %379, align 4
  %380 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 8
  %381 = load i32* %380, align 4
  %382 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 9
  %383 = load i32* %382, align 4
  %384 = sub nsw i32 %381, %383
  %385 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 9
  store i32 %384, i32* %385, align 4
  %386 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 10
  %387 = load i32* %386, align 4
  %388 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 11
  %389 = load i32* %388, align 4
  %390 = add nsw i32 %387, %389
  %391 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 10
  store i32 %390, i32* %391, align 4
  %392 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 11
  %393 = load i32* %392, align 4
  %394 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 10
  %395 = load i32* %394, align 4
  %396 = sub nsw i32 %393, %395
  %397 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 11
  store i32 %396, i32* %397, align 4
  %398 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 12
  %399 = load i32* %398, align 4
  %400 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 13
  %401 = load i32* %400, align 4
  %402 = add nsw i32 %399, %401
  %403 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 12
  store i32 %402, i32* %403, align 4
  %404 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 12
  %405 = load i32* %404, align 4
  %406 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 13
  %407 = load i32* %406, align 4
  %408 = sub nsw i32 %405, %407
  %409 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 13
  store i32 %408, i32* %409, align 4
  %410 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 14
  %411 = load i32* %410, align 4
  %412 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 15
  %413 = load i32* %412, align 4
  %414 = add nsw i32 %411, %413
  %415 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 14
  store i32 %414, i32* %415, align 4
  %416 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 15
  %417 = load i32* %416, align 4
  %418 = getelementptr inbounds [16 x i32]* %m, i32 0, i64 14
  %419 = load i32* %418, align 4
  %420 = sub nsw i32 %417, %419
  %421 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 15
  store i32 %420, i32* %421, align 4
  store i32 0, i32* %k, align 4
  %422 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 0
  %423 = load i32* %422, align 4
  store i32 %423, i32* %dd, align 4
  br label %424

; <label>:424                                     ; preds = %439, %5
  %425 = load i32* %k, align 4
  %426 = icmp slt i32 %425, 16
  br i1 %426, label %427, label %445

; <label>:427                                     ; preds = %424
  %428 = load i32* %dd, align 4
  %429 = icmp slt i32 %428, 0
  br i1 %429, label %430, label %433

; <label>:430                                     ; preds = %427
  %431 = load i32* %dd, align 4
  %432 = sub nsw i32 0, %431
  br label %435

; <label>:433                                     ; preds = %427
  %434 = load i32* %dd, align 4
  br label %435

; <label>:435                                     ; preds = %433, %430
  %436 = phi i32 [ %432, %430 ], [ %434, %433 ]
  %437 = load i32* %satd, align 4
  %438 = add nsw i32 %437, %436
  store i32 %438, i32* %satd, align 4
  br label %439

; <label>:439                                     ; preds = %435
  %440 = load i32* %k, align 4
  %441 = add nsw i32 %440, 1
  store i32 %441, i32* %k, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds [16 x i32]* %d, i32 0, i64 %442
  %444 = load i32* %443, align 4
  store i32 %444, i32* %dd, align 4
  br label %424

; <label>:445                                     ; preds = %424
  %446 = load i32* %satd, align 4
  %447 = add nsw i32 %446, 1
  %448 = ashr i32 %447, 1
  store i32 %448, i32* %satd, align 4
  br label %469

; <label>:449                                     ; preds = %0
  store i32 0, i32* %k, align 4
  br label %450

; <label>:450                                     ; preds = %465, %449
  %451 = load i32* %k, align 4
  %452 = icmp slt i32 %451, 16
  br i1 %452, label %453, label %468

; <label>:453                                     ; preds = %450
  %454 = load i32* %k, align 4
  %455 = sext i32 %454 to i64
  %456 = load i32** %1, align 8
  %457 = getelementptr inbounds i32* %456, i64 %455
  %458 = load i32* %457, align 4
  %459 = sext i32 %458 to i64
  %460 = load i32** @byte_abs, align 8
  %461 = getelementptr inbounds i32* %460, i64 %459
  %462 = load i32* %461, align 4
  %463 = load i32* %satd, align 4
  %464 = add nsw i32 %463, %462
  store i32 %464, i32* %satd, align 4
  br label %465

; <label>:465                                     ; preds = %453
  %466 = load i32* %k, align 4
  %467 = add nsw i32 %466, 1
  store i32 %467, i32* %k, align 4
  br label %450

; <label>:468                                     ; preds = %450
  br label %469

; <label>:469                                     ; preds = %468, %445
  %470 = load i32* %satd, align 4
  ret i32 %470
}

; Function Attrs: nounwind uwtable
define i32 @SATD8X8(i32* %diff, i32 %use_hadamard) #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %sad = alloca i32, align 4
  %m1 = alloca [8 x [8 x i32]], align 16
  %m2 = alloca [8 x [8 x i32]], align 16
  %m3 = alloca [8 x [8 x i32]], align 16
  store i32* %diff, i32** %1, align 8
  store i32 %use_hadamard, i32* %2, align 4
  store i32 0, i32* %sad, align 4
  %3 = load i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %820

; <label>:5                                       ; preds = %0
  store i32 0, i32* %j, align 4
  br label %6

; <label>:6                                       ; preds = %400, %5
  %7 = load i32* %j, align 4
  %8 = icmp slt i32 %7, 8
  br i1 %8, label %9, label %403

; <label>:9                                       ; preds = %6
  %10 = load i32* %j, align 4
  %11 = shl i32 %10, 3
  %12 = sext i32 %11 to i64
  %13 = load i32** %1, align 8
  %14 = getelementptr inbounds i32* %13, i64 %12
  %15 = load i32* %14, align 4
  %16 = load i32* %j, align 4
  %17 = shl i32 %16, 3
  %18 = add nsw i32 %17, 4
  %19 = sext i32 %18 to i64
  %20 = load i32** %1, align 8
  %21 = getelementptr inbounds i32* %20, i64 %19
  %22 = load i32* %21, align 4
  %23 = add nsw i32 %15, %22
  %24 = load i32* %j, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %25
  %27 = getelementptr inbounds [8 x i32]* %26, i32 0, i64 0
  store i32 %23, i32* %27, align 4
  %28 = load i32* %j, align 4
  %29 = shl i32 %28, 3
  %30 = add nsw i32 %29, 1
  %31 = sext i32 %30 to i64
  %32 = load i32** %1, align 8
  %33 = getelementptr inbounds i32* %32, i64 %31
  %34 = load i32* %33, align 4
  %35 = load i32* %j, align 4
  %36 = shl i32 %35, 3
  %37 = add nsw i32 %36, 5
  %38 = sext i32 %37 to i64
  %39 = load i32** %1, align 8
  %40 = getelementptr inbounds i32* %39, i64 %38
  %41 = load i32* %40, align 4
  %42 = add nsw i32 %34, %41
  %43 = load i32* %j, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %44
  %46 = getelementptr inbounds [8 x i32]* %45, i32 0, i64 1
  store i32 %42, i32* %46, align 4
  %47 = load i32* %j, align 4
  %48 = shl i32 %47, 3
  %49 = add nsw i32 %48, 2
  %50 = sext i32 %49 to i64
  %51 = load i32** %1, align 8
  %52 = getelementptr inbounds i32* %51, i64 %50
  %53 = load i32* %52, align 4
  %54 = load i32* %j, align 4
  %55 = shl i32 %54, 3
  %56 = add nsw i32 %55, 6
  %57 = sext i32 %56 to i64
  %58 = load i32** %1, align 8
  %59 = getelementptr inbounds i32* %58, i64 %57
  %60 = load i32* %59, align 4
  %61 = add nsw i32 %53, %60
  %62 = load i32* %j, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %63
  %65 = getelementptr inbounds [8 x i32]* %64, i32 0, i64 2
  store i32 %61, i32* %65, align 4
  %66 = load i32* %j, align 4
  %67 = shl i32 %66, 3
  %68 = add nsw i32 %67, 3
  %69 = sext i32 %68 to i64
  %70 = load i32** %1, align 8
  %71 = getelementptr inbounds i32* %70, i64 %69
  %72 = load i32* %71, align 4
  %73 = load i32* %j, align 4
  %74 = shl i32 %73, 3
  %75 = add nsw i32 %74, 7
  %76 = sext i32 %75 to i64
  %77 = load i32** %1, align 8
  %78 = getelementptr inbounds i32* %77, i64 %76
  %79 = load i32* %78, align 4
  %80 = add nsw i32 %72, %79
  %81 = load i32* %j, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %82
  %84 = getelementptr inbounds [8 x i32]* %83, i32 0, i64 3
  store i32 %80, i32* %84, align 4
  %85 = load i32* %j, align 4
  %86 = shl i32 %85, 3
  %87 = sext i32 %86 to i64
  %88 = load i32** %1, align 8
  %89 = getelementptr inbounds i32* %88, i64 %87
  %90 = load i32* %89, align 4
  %91 = load i32* %j, align 4
  %92 = shl i32 %91, 3
  %93 = add nsw i32 %92, 4
  %94 = sext i32 %93 to i64
  %95 = load i32** %1, align 8
  %96 = getelementptr inbounds i32* %95, i64 %94
  %97 = load i32* %96, align 4
  %98 = sub nsw i32 %90, %97
  %99 = load i32* %j, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %100
  %102 = getelementptr inbounds [8 x i32]* %101, i32 0, i64 4
  store i32 %98, i32* %102, align 4
  %103 = load i32* %j, align 4
  %104 = shl i32 %103, 3
  %105 = add nsw i32 %104, 1
  %106 = sext i32 %105 to i64
  %107 = load i32** %1, align 8
  %108 = getelementptr inbounds i32* %107, i64 %106
  %109 = load i32* %108, align 4
  %110 = load i32* %j, align 4
  %111 = shl i32 %110, 3
  %112 = add nsw i32 %111, 5
  %113 = sext i32 %112 to i64
  %114 = load i32** %1, align 8
  %115 = getelementptr inbounds i32* %114, i64 %113
  %116 = load i32* %115, align 4
  %117 = sub nsw i32 %109, %116
  %118 = load i32* %j, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %119
  %121 = getelementptr inbounds [8 x i32]* %120, i32 0, i64 5
  store i32 %117, i32* %121, align 4
  %122 = load i32* %j, align 4
  %123 = shl i32 %122, 3
  %124 = add nsw i32 %123, 2
  %125 = sext i32 %124 to i64
  %126 = load i32** %1, align 8
  %127 = getelementptr inbounds i32* %126, i64 %125
  %128 = load i32* %127, align 4
  %129 = load i32* %j, align 4
  %130 = shl i32 %129, 3
  %131 = add nsw i32 %130, 6
  %132 = sext i32 %131 to i64
  %133 = load i32** %1, align 8
  %134 = getelementptr inbounds i32* %133, i64 %132
  %135 = load i32* %134, align 4
  %136 = sub nsw i32 %128, %135
  %137 = load i32* %j, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %138
  %140 = getelementptr inbounds [8 x i32]* %139, i32 0, i64 6
  store i32 %136, i32* %140, align 4
  %141 = load i32* %j, align 4
  %142 = shl i32 %141, 3
  %143 = add nsw i32 %142, 3
  %144 = sext i32 %143 to i64
  %145 = load i32** %1, align 8
  %146 = getelementptr inbounds i32* %145, i64 %144
  %147 = load i32* %146, align 4
  %148 = load i32* %j, align 4
  %149 = shl i32 %148, 3
  %150 = add nsw i32 %149, 7
  %151 = sext i32 %150 to i64
  %152 = load i32** %1, align 8
  %153 = getelementptr inbounds i32* %152, i64 %151
  %154 = load i32* %153, align 4
  %155 = sub nsw i32 %147, %154
  %156 = load i32* %j, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %157
  %159 = getelementptr inbounds [8 x i32]* %158, i32 0, i64 7
  store i32 %155, i32* %159, align 4
  %160 = load i32* %j, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %161
  %163 = getelementptr inbounds [8 x i32]* %162, i32 0, i64 0
  %164 = load i32* %163, align 4
  %165 = load i32* %j, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %166
  %168 = getelementptr inbounds [8 x i32]* %167, i32 0, i64 2
  %169 = load i32* %168, align 4
  %170 = add nsw i32 %164, %169
  %171 = load i32* %j, align 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %172
  %174 = getelementptr inbounds [8 x i32]* %173, i32 0, i64 0
  store i32 %170, i32* %174, align 4
  %175 = load i32* %j, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %176
  %178 = getelementptr inbounds [8 x i32]* %177, i32 0, i64 1
  %179 = load i32* %178, align 4
  %180 = load i32* %j, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %181
  %183 = getelementptr inbounds [8 x i32]* %182, i32 0, i64 3
  %184 = load i32* %183, align 4
  %185 = add nsw i32 %179, %184
  %186 = load i32* %j, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %187
  %189 = getelementptr inbounds [8 x i32]* %188, i32 0, i64 1
  store i32 %185, i32* %189, align 4
  %190 = load i32* %j, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %191
  %193 = getelementptr inbounds [8 x i32]* %192, i32 0, i64 0
  %194 = load i32* %193, align 4
  %195 = load i32* %j, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %196
  %198 = getelementptr inbounds [8 x i32]* %197, i32 0, i64 2
  %199 = load i32* %198, align 4
  %200 = sub nsw i32 %194, %199
  %201 = load i32* %j, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %202
  %204 = getelementptr inbounds [8 x i32]* %203, i32 0, i64 2
  store i32 %200, i32* %204, align 4
  %205 = load i32* %j, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %206
  %208 = getelementptr inbounds [8 x i32]* %207, i32 0, i64 1
  %209 = load i32* %208, align 4
  %210 = load i32* %j, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %211
  %213 = getelementptr inbounds [8 x i32]* %212, i32 0, i64 3
  %214 = load i32* %213, align 4
  %215 = sub nsw i32 %209, %214
  %216 = load i32* %j, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %217
  %219 = getelementptr inbounds [8 x i32]* %218, i32 0, i64 3
  store i32 %215, i32* %219, align 4
  %220 = load i32* %j, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %221
  %223 = getelementptr inbounds [8 x i32]* %222, i32 0, i64 4
  %224 = load i32* %223, align 4
  %225 = load i32* %j, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %226
  %228 = getelementptr inbounds [8 x i32]* %227, i32 0, i64 6
  %229 = load i32* %228, align 4
  %230 = add nsw i32 %224, %229
  %231 = load i32* %j, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %232
  %234 = getelementptr inbounds [8 x i32]* %233, i32 0, i64 4
  store i32 %230, i32* %234, align 4
  %235 = load i32* %j, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %236
  %238 = getelementptr inbounds [8 x i32]* %237, i32 0, i64 5
  %239 = load i32* %238, align 4
  %240 = load i32* %j, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %241
  %243 = getelementptr inbounds [8 x i32]* %242, i32 0, i64 7
  %244 = load i32* %243, align 4
  %245 = add nsw i32 %239, %244
  %246 = load i32* %j, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %247
  %249 = getelementptr inbounds [8 x i32]* %248, i32 0, i64 5
  store i32 %245, i32* %249, align 4
  %250 = load i32* %j, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %251
  %253 = getelementptr inbounds [8 x i32]* %252, i32 0, i64 4
  %254 = load i32* %253, align 4
  %255 = load i32* %j, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %256
  %258 = getelementptr inbounds [8 x i32]* %257, i32 0, i64 6
  %259 = load i32* %258, align 4
  %260 = sub nsw i32 %254, %259
  %261 = load i32* %j, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %262
  %264 = getelementptr inbounds [8 x i32]* %263, i32 0, i64 6
  store i32 %260, i32* %264, align 4
  %265 = load i32* %j, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %266
  %268 = getelementptr inbounds [8 x i32]* %267, i32 0, i64 5
  %269 = load i32* %268, align 4
  %270 = load i32* %j, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %271
  %273 = getelementptr inbounds [8 x i32]* %272, i32 0, i64 7
  %274 = load i32* %273, align 4
  %275 = sub nsw i32 %269, %274
  %276 = load i32* %j, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %277
  %279 = getelementptr inbounds [8 x i32]* %278, i32 0, i64 7
  store i32 %275, i32* %279, align 4
  %280 = load i32* %j, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %281
  %283 = getelementptr inbounds [8 x i32]* %282, i32 0, i64 0
  %284 = load i32* %283, align 4
  %285 = load i32* %j, align 4
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %286
  %288 = getelementptr inbounds [8 x i32]* %287, i32 0, i64 1
  %289 = load i32* %288, align 4
  %290 = add nsw i32 %284, %289
  %291 = load i32* %j, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %292
  %294 = getelementptr inbounds [8 x i32]* %293, i32 0, i64 0
  store i32 %290, i32* %294, align 4
  %295 = load i32* %j, align 4
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %296
  %298 = getelementptr inbounds [8 x i32]* %297, i32 0, i64 0
  %299 = load i32* %298, align 4
  %300 = load i32* %j, align 4
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %301
  %303 = getelementptr inbounds [8 x i32]* %302, i32 0, i64 1
  %304 = load i32* %303, align 4
  %305 = sub nsw i32 %299, %304
  %306 = load i32* %j, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %307
  %309 = getelementptr inbounds [8 x i32]* %308, i32 0, i64 1
  store i32 %305, i32* %309, align 4
  %310 = load i32* %j, align 4
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %311
  %313 = getelementptr inbounds [8 x i32]* %312, i32 0, i64 2
  %314 = load i32* %313, align 4
  %315 = load i32* %j, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %316
  %318 = getelementptr inbounds [8 x i32]* %317, i32 0, i64 3
  %319 = load i32* %318, align 4
  %320 = add nsw i32 %314, %319
  %321 = load i32* %j, align 4
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %322
  %324 = getelementptr inbounds [8 x i32]* %323, i32 0, i64 2
  store i32 %320, i32* %324, align 4
  %325 = load i32* %j, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %326
  %328 = getelementptr inbounds [8 x i32]* %327, i32 0, i64 2
  %329 = load i32* %328, align 4
  %330 = load i32* %j, align 4
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %331
  %333 = getelementptr inbounds [8 x i32]* %332, i32 0, i64 3
  %334 = load i32* %333, align 4
  %335 = sub nsw i32 %329, %334
  %336 = load i32* %j, align 4
  %337 = sext i32 %336 to i64
  %338 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %337
  %339 = getelementptr inbounds [8 x i32]* %338, i32 0, i64 3
  store i32 %335, i32* %339, align 4
  %340 = load i32* %j, align 4
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %341
  %343 = getelementptr inbounds [8 x i32]* %342, i32 0, i64 4
  %344 = load i32* %343, align 4
  %345 = load i32* %j, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %346
  %348 = getelementptr inbounds [8 x i32]* %347, i32 0, i64 5
  %349 = load i32* %348, align 4
  %350 = add nsw i32 %344, %349
  %351 = load i32* %j, align 4
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %352
  %354 = getelementptr inbounds [8 x i32]* %353, i32 0, i64 4
  store i32 %350, i32* %354, align 4
  %355 = load i32* %j, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %356
  %358 = getelementptr inbounds [8 x i32]* %357, i32 0, i64 4
  %359 = load i32* %358, align 4
  %360 = load i32* %j, align 4
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %361
  %363 = getelementptr inbounds [8 x i32]* %362, i32 0, i64 5
  %364 = load i32* %363, align 4
  %365 = sub nsw i32 %359, %364
  %366 = load i32* %j, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %367
  %369 = getelementptr inbounds [8 x i32]* %368, i32 0, i64 5
  store i32 %365, i32* %369, align 4
  %370 = load i32* %j, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %371
  %373 = getelementptr inbounds [8 x i32]* %372, i32 0, i64 6
  %374 = load i32* %373, align 4
  %375 = load i32* %j, align 4
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %376
  %378 = getelementptr inbounds [8 x i32]* %377, i32 0, i64 7
  %379 = load i32* %378, align 4
  %380 = add nsw i32 %374, %379
  %381 = load i32* %j, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %382
  %384 = getelementptr inbounds [8 x i32]* %383, i32 0, i64 6
  store i32 %380, i32* %384, align 4
  %385 = load i32* %j, align 4
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %386
  %388 = getelementptr inbounds [8 x i32]* %387, i32 0, i64 6
  %389 = load i32* %388, align 4
  %390 = load i32* %j, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 %391
  %393 = getelementptr inbounds [8 x i32]* %392, i32 0, i64 7
  %394 = load i32* %393, align 4
  %395 = sub nsw i32 %389, %394
  %396 = load i32* %j, align 4
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %397
  %399 = getelementptr inbounds [8 x i32]* %398, i32 0, i64 7
  store i32 %395, i32* %399, align 4
  br label %400

; <label>:400                                     ; preds = %9
  %401 = load i32* %j, align 4
  %402 = add nsw i32 %401, 1
  store i32 %402, i32* %j, align 4
  br label %6

; <label>:403                                     ; preds = %6
  store i32 0, i32* %i, align 4
  br label %404

; <label>:404                                     ; preds = %768, %403
  %405 = load i32* %i, align 4
  %406 = icmp slt i32 %405, 8
  br i1 %406, label %407, label %771

; <label>:407                                     ; preds = %404
  %408 = load i32* %i, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 0
  %411 = getelementptr inbounds [8 x i32]* %410, i32 0, i64 %409
  %412 = load i32* %411, align 4
  %413 = load i32* %i, align 4
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 4
  %416 = getelementptr inbounds [8 x i32]* %415, i32 0, i64 %414
  %417 = load i32* %416, align 4
  %418 = add nsw i32 %412, %417
  %419 = load i32* %i, align 4
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 0
  %422 = getelementptr inbounds [8 x i32]* %421, i32 0, i64 %420
  store i32 %418, i32* %422, align 4
  %423 = load i32* %i, align 4
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 1
  %426 = getelementptr inbounds [8 x i32]* %425, i32 0, i64 %424
  %427 = load i32* %426, align 4
  %428 = load i32* %i, align 4
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 5
  %431 = getelementptr inbounds [8 x i32]* %430, i32 0, i64 %429
  %432 = load i32* %431, align 4
  %433 = add nsw i32 %427, %432
  %434 = load i32* %i, align 4
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 1
  %437 = getelementptr inbounds [8 x i32]* %436, i32 0, i64 %435
  store i32 %433, i32* %437, align 4
  %438 = load i32* %i, align 4
  %439 = sext i32 %438 to i64
  %440 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 2
  %441 = getelementptr inbounds [8 x i32]* %440, i32 0, i64 %439
  %442 = load i32* %441, align 4
  %443 = load i32* %i, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 6
  %446 = getelementptr inbounds [8 x i32]* %445, i32 0, i64 %444
  %447 = load i32* %446, align 4
  %448 = add nsw i32 %442, %447
  %449 = load i32* %i, align 4
  %450 = sext i32 %449 to i64
  %451 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 2
  %452 = getelementptr inbounds [8 x i32]* %451, i32 0, i64 %450
  store i32 %448, i32* %452, align 4
  %453 = load i32* %i, align 4
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 3
  %456 = getelementptr inbounds [8 x i32]* %455, i32 0, i64 %454
  %457 = load i32* %456, align 4
  %458 = load i32* %i, align 4
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 7
  %461 = getelementptr inbounds [8 x i32]* %460, i32 0, i64 %459
  %462 = load i32* %461, align 4
  %463 = add nsw i32 %457, %462
  %464 = load i32* %i, align 4
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 3
  %467 = getelementptr inbounds [8 x i32]* %466, i32 0, i64 %465
  store i32 %463, i32* %467, align 4
  %468 = load i32* %i, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 0
  %471 = getelementptr inbounds [8 x i32]* %470, i32 0, i64 %469
  %472 = load i32* %471, align 4
  %473 = load i32* %i, align 4
  %474 = sext i32 %473 to i64
  %475 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 4
  %476 = getelementptr inbounds [8 x i32]* %475, i32 0, i64 %474
  %477 = load i32* %476, align 4
  %478 = sub nsw i32 %472, %477
  %479 = load i32* %i, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 4
  %482 = getelementptr inbounds [8 x i32]* %481, i32 0, i64 %480
  store i32 %478, i32* %482, align 4
  %483 = load i32* %i, align 4
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 1
  %486 = getelementptr inbounds [8 x i32]* %485, i32 0, i64 %484
  %487 = load i32* %486, align 4
  %488 = load i32* %i, align 4
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 5
  %491 = getelementptr inbounds [8 x i32]* %490, i32 0, i64 %489
  %492 = load i32* %491, align 4
  %493 = sub nsw i32 %487, %492
  %494 = load i32* %i, align 4
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 5
  %497 = getelementptr inbounds [8 x i32]* %496, i32 0, i64 %495
  store i32 %493, i32* %497, align 4
  %498 = load i32* %i, align 4
  %499 = sext i32 %498 to i64
  %500 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 2
  %501 = getelementptr inbounds [8 x i32]* %500, i32 0, i64 %499
  %502 = load i32* %501, align 4
  %503 = load i32* %i, align 4
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 6
  %506 = getelementptr inbounds [8 x i32]* %505, i32 0, i64 %504
  %507 = load i32* %506, align 4
  %508 = sub nsw i32 %502, %507
  %509 = load i32* %i, align 4
  %510 = sext i32 %509 to i64
  %511 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 6
  %512 = getelementptr inbounds [8 x i32]* %511, i32 0, i64 %510
  store i32 %508, i32* %512, align 4
  %513 = load i32* %i, align 4
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 3
  %516 = getelementptr inbounds [8 x i32]* %515, i32 0, i64 %514
  %517 = load i32* %516, align 4
  %518 = load i32* %i, align 4
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 7
  %521 = getelementptr inbounds [8 x i32]* %520, i32 0, i64 %519
  %522 = load i32* %521, align 4
  %523 = sub nsw i32 %517, %522
  %524 = load i32* %i, align 4
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 7
  %527 = getelementptr inbounds [8 x i32]* %526, i32 0, i64 %525
  store i32 %523, i32* %527, align 4
  %528 = load i32* %i, align 4
  %529 = sext i32 %528 to i64
  %530 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 0
  %531 = getelementptr inbounds [8 x i32]* %530, i32 0, i64 %529
  %532 = load i32* %531, align 4
  %533 = load i32* %i, align 4
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 2
  %536 = getelementptr inbounds [8 x i32]* %535, i32 0, i64 %534
  %537 = load i32* %536, align 4
  %538 = add nsw i32 %532, %537
  %539 = load i32* %i, align 4
  %540 = sext i32 %539 to i64
  %541 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 0
  %542 = getelementptr inbounds [8 x i32]* %541, i32 0, i64 %540
  store i32 %538, i32* %542, align 4
  %543 = load i32* %i, align 4
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 1
  %546 = getelementptr inbounds [8 x i32]* %545, i32 0, i64 %544
  %547 = load i32* %546, align 4
  %548 = load i32* %i, align 4
  %549 = sext i32 %548 to i64
  %550 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 3
  %551 = getelementptr inbounds [8 x i32]* %550, i32 0, i64 %549
  %552 = load i32* %551, align 4
  %553 = add nsw i32 %547, %552
  %554 = load i32* %i, align 4
  %555 = sext i32 %554 to i64
  %556 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 1
  %557 = getelementptr inbounds [8 x i32]* %556, i32 0, i64 %555
  store i32 %553, i32* %557, align 4
  %558 = load i32* %i, align 4
  %559 = sext i32 %558 to i64
  %560 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 0
  %561 = getelementptr inbounds [8 x i32]* %560, i32 0, i64 %559
  %562 = load i32* %561, align 4
  %563 = load i32* %i, align 4
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 2
  %566 = getelementptr inbounds [8 x i32]* %565, i32 0, i64 %564
  %567 = load i32* %566, align 4
  %568 = sub nsw i32 %562, %567
  %569 = load i32* %i, align 4
  %570 = sext i32 %569 to i64
  %571 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 2
  %572 = getelementptr inbounds [8 x i32]* %571, i32 0, i64 %570
  store i32 %568, i32* %572, align 4
  %573 = load i32* %i, align 4
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 1
  %576 = getelementptr inbounds [8 x i32]* %575, i32 0, i64 %574
  %577 = load i32* %576, align 4
  %578 = load i32* %i, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 3
  %581 = getelementptr inbounds [8 x i32]* %580, i32 0, i64 %579
  %582 = load i32* %581, align 4
  %583 = sub nsw i32 %577, %582
  %584 = load i32* %i, align 4
  %585 = sext i32 %584 to i64
  %586 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 3
  %587 = getelementptr inbounds [8 x i32]* %586, i32 0, i64 %585
  store i32 %583, i32* %587, align 4
  %588 = load i32* %i, align 4
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 4
  %591 = getelementptr inbounds [8 x i32]* %590, i32 0, i64 %589
  %592 = load i32* %591, align 4
  %593 = load i32* %i, align 4
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 6
  %596 = getelementptr inbounds [8 x i32]* %595, i32 0, i64 %594
  %597 = load i32* %596, align 4
  %598 = add nsw i32 %592, %597
  %599 = load i32* %i, align 4
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 4
  %602 = getelementptr inbounds [8 x i32]* %601, i32 0, i64 %600
  store i32 %598, i32* %602, align 4
  %603 = load i32* %i, align 4
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 5
  %606 = getelementptr inbounds [8 x i32]* %605, i32 0, i64 %604
  %607 = load i32* %606, align 4
  %608 = load i32* %i, align 4
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 7
  %611 = getelementptr inbounds [8 x i32]* %610, i32 0, i64 %609
  %612 = load i32* %611, align 4
  %613 = add nsw i32 %607, %612
  %614 = load i32* %i, align 4
  %615 = sext i32 %614 to i64
  %616 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 5
  %617 = getelementptr inbounds [8 x i32]* %616, i32 0, i64 %615
  store i32 %613, i32* %617, align 4
  %618 = load i32* %i, align 4
  %619 = sext i32 %618 to i64
  %620 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 4
  %621 = getelementptr inbounds [8 x i32]* %620, i32 0, i64 %619
  %622 = load i32* %621, align 4
  %623 = load i32* %i, align 4
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 6
  %626 = getelementptr inbounds [8 x i32]* %625, i32 0, i64 %624
  %627 = load i32* %626, align 4
  %628 = sub nsw i32 %622, %627
  %629 = load i32* %i, align 4
  %630 = sext i32 %629 to i64
  %631 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 6
  %632 = getelementptr inbounds [8 x i32]* %631, i32 0, i64 %630
  store i32 %628, i32* %632, align 4
  %633 = load i32* %i, align 4
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 5
  %636 = getelementptr inbounds [8 x i32]* %635, i32 0, i64 %634
  %637 = load i32* %636, align 4
  %638 = load i32* %i, align 4
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds [8 x [8 x i32]]* %m3, i32 0, i64 7
  %641 = getelementptr inbounds [8 x i32]* %640, i32 0, i64 %639
  %642 = load i32* %641, align 4
  %643 = sub nsw i32 %637, %642
  %644 = load i32* %i, align 4
  %645 = sext i32 %644 to i64
  %646 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 7
  %647 = getelementptr inbounds [8 x i32]* %646, i32 0, i64 %645
  store i32 %643, i32* %647, align 4
  %648 = load i32* %i, align 4
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 0
  %651 = getelementptr inbounds [8 x i32]* %650, i32 0, i64 %649
  %652 = load i32* %651, align 4
  %653 = load i32* %i, align 4
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 1
  %656 = getelementptr inbounds [8 x i32]* %655, i32 0, i64 %654
  %657 = load i32* %656, align 4
  %658 = add nsw i32 %652, %657
  %659 = load i32* %i, align 4
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 0
  %662 = getelementptr inbounds [8 x i32]* %661, i32 0, i64 %660
  store i32 %658, i32* %662, align 4
  %663 = load i32* %i, align 4
  %664 = sext i32 %663 to i64
  %665 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 0
  %666 = getelementptr inbounds [8 x i32]* %665, i32 0, i64 %664
  %667 = load i32* %666, align 4
  %668 = load i32* %i, align 4
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 1
  %671 = getelementptr inbounds [8 x i32]* %670, i32 0, i64 %669
  %672 = load i32* %671, align 4
  %673 = sub nsw i32 %667, %672
  %674 = load i32* %i, align 4
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 1
  %677 = getelementptr inbounds [8 x i32]* %676, i32 0, i64 %675
  store i32 %673, i32* %677, align 4
  %678 = load i32* %i, align 4
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 2
  %681 = getelementptr inbounds [8 x i32]* %680, i32 0, i64 %679
  %682 = load i32* %681, align 4
  %683 = load i32* %i, align 4
  %684 = sext i32 %683 to i64
  %685 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 3
  %686 = getelementptr inbounds [8 x i32]* %685, i32 0, i64 %684
  %687 = load i32* %686, align 4
  %688 = add nsw i32 %682, %687
  %689 = load i32* %i, align 4
  %690 = sext i32 %689 to i64
  %691 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 2
  %692 = getelementptr inbounds [8 x i32]* %691, i32 0, i64 %690
  store i32 %688, i32* %692, align 4
  %693 = load i32* %i, align 4
  %694 = sext i32 %693 to i64
  %695 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 2
  %696 = getelementptr inbounds [8 x i32]* %695, i32 0, i64 %694
  %697 = load i32* %696, align 4
  %698 = load i32* %i, align 4
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 3
  %701 = getelementptr inbounds [8 x i32]* %700, i32 0, i64 %699
  %702 = load i32* %701, align 4
  %703 = sub nsw i32 %697, %702
  %704 = load i32* %i, align 4
  %705 = sext i32 %704 to i64
  %706 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 3
  %707 = getelementptr inbounds [8 x i32]* %706, i32 0, i64 %705
  store i32 %703, i32* %707, align 4
  %708 = load i32* %i, align 4
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 4
  %711 = getelementptr inbounds [8 x i32]* %710, i32 0, i64 %709
  %712 = load i32* %711, align 4
  %713 = load i32* %i, align 4
  %714 = sext i32 %713 to i64
  %715 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 5
  %716 = getelementptr inbounds [8 x i32]* %715, i32 0, i64 %714
  %717 = load i32* %716, align 4
  %718 = add nsw i32 %712, %717
  %719 = load i32* %i, align 4
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 4
  %722 = getelementptr inbounds [8 x i32]* %721, i32 0, i64 %720
  store i32 %718, i32* %722, align 4
  %723 = load i32* %i, align 4
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 4
  %726 = getelementptr inbounds [8 x i32]* %725, i32 0, i64 %724
  %727 = load i32* %726, align 4
  %728 = load i32* %i, align 4
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 5
  %731 = getelementptr inbounds [8 x i32]* %730, i32 0, i64 %729
  %732 = load i32* %731, align 4
  %733 = sub nsw i32 %727, %732
  %734 = load i32* %i, align 4
  %735 = sext i32 %734 to i64
  %736 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 5
  %737 = getelementptr inbounds [8 x i32]* %736, i32 0, i64 %735
  store i32 %733, i32* %737, align 4
  %738 = load i32* %i, align 4
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 6
  %741 = getelementptr inbounds [8 x i32]* %740, i32 0, i64 %739
  %742 = load i32* %741, align 4
  %743 = load i32* %i, align 4
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 7
  %746 = getelementptr inbounds [8 x i32]* %745, i32 0, i64 %744
  %747 = load i32* %746, align 4
  %748 = add nsw i32 %742, %747
  %749 = load i32* %i, align 4
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 6
  %752 = getelementptr inbounds [8 x i32]* %751, i32 0, i64 %750
  store i32 %748, i32* %752, align 4
  %753 = load i32* %i, align 4
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 6
  %756 = getelementptr inbounds [8 x i32]* %755, i32 0, i64 %754
  %757 = load i32* %756, align 4
  %758 = load i32* %i, align 4
  %759 = sext i32 %758 to i64
  %760 = getelementptr inbounds [8 x [8 x i32]]* %m1, i32 0, i64 7
  %761 = getelementptr inbounds [8 x i32]* %760, i32 0, i64 %759
  %762 = load i32* %761, align 4
  %763 = sub nsw i32 %757, %762
  %764 = load i32* %i, align 4
  %765 = sext i32 %764 to i64
  %766 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 7
  %767 = getelementptr inbounds [8 x i32]* %766, i32 0, i64 %765
  store i32 %763, i32* %767, align 4
  br label %768

; <label>:768                                     ; preds = %407
  %769 = load i32* %i, align 4
  %770 = add nsw i32 %769, 1
  store i32 %770, i32* %i, align 4
  br label %404

; <label>:771                                     ; preds = %404
  store i32 0, i32* %j, align 4
  br label %772

; <label>:772                                     ; preds = %813, %771
  %773 = load i32* %j, align 4
  %774 = icmp slt i32 %773, 8
  br i1 %774, label %775, label %816

; <label>:775                                     ; preds = %772
  store i32 0, i32* %i, align 4
  br label %776

; <label>:776                                     ; preds = %809, %775
  %777 = load i32* %i, align 4
  %778 = icmp slt i32 %777, 8
  br i1 %778, label %779, label %812

; <label>:779                                     ; preds = %776
  %780 = load i32* %i, align 4
  %781 = sext i32 %780 to i64
  %782 = load i32* %j, align 4
  %783 = sext i32 %782 to i64
  %784 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %783
  %785 = getelementptr inbounds [8 x i32]* %784, i32 0, i64 %781
  %786 = load i32* %785, align 4
  %787 = icmp slt i32 %786, 0
  br i1 %787, label %788, label %797

; <label>:788                                     ; preds = %779
  %789 = load i32* %i, align 4
  %790 = sext i32 %789 to i64
  %791 = load i32* %j, align 4
  %792 = sext i32 %791 to i64
  %793 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %792
  %794 = getelementptr inbounds [8 x i32]* %793, i32 0, i64 %790
  %795 = load i32* %794, align 4
  %796 = sub nsw i32 0, %795
  br label %805

; <label>:797                                     ; preds = %779
  %798 = load i32* %i, align 4
  %799 = sext i32 %798 to i64
  %800 = load i32* %j, align 4
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds [8 x [8 x i32]]* %m2, i32 0, i64 %801
  %803 = getelementptr inbounds [8 x i32]* %802, i32 0, i64 %799
  %804 = load i32* %803, align 4
  br label %805

; <label>:805                                     ; preds = %797, %788
  %806 = phi i32 [ %796, %788 ], [ %804, %797 ]
  %807 = load i32* %sad, align 4
  %808 = add nsw i32 %807, %806
  store i32 %808, i32* %sad, align 4
  br label %809

; <label>:809                                     ; preds = %805
  %810 = load i32* %i, align 4
  %811 = add nsw i32 %810, 1
  store i32 %811, i32* %i, align 4
  br label %776

; <label>:812                                     ; preds = %776
  br label %813

; <label>:813                                     ; preds = %812
  %814 = load i32* %j, align 4
  %815 = add nsw i32 %814, 1
  store i32 %815, i32* %j, align 4
  br label %772

; <label>:816                                     ; preds = %772
  %817 = load i32* %sad, align 4
  %818 = add nsw i32 %817, 2
  %819 = ashr i32 %818, 2
  store i32 %819, i32* %sad, align 4
  br label %840

; <label>:820                                     ; preds = %0
  store i32 0, i32* %i, align 4
  br label %821

; <label>:821                                     ; preds = %836, %820
  %822 = load i32* %i, align 4
  %823 = icmp slt i32 %822, 64
  br i1 %823, label %824, label %839

; <label>:824                                     ; preds = %821
  %825 = load i32* %i, align 4
  %826 = sext i32 %825 to i64
  %827 = load i32** %1, align 8
  %828 = getelementptr inbounds i32* %827, i64 %826
  %829 = load i32* %828, align 4
  %830 = sext i32 %829 to i64
  %831 = load i32** @byte_abs, align 8
  %832 = getelementptr inbounds i32* %831, i64 %830
  %833 = load i32* %832, align 4
  %834 = load i32* %sad, align 4
  %835 = add nsw i32 %834, %833
  store i32 %835, i32* %sad, align 4
  br label %836

; <label>:836                                     ; preds = %824
  %837 = load i32* %i, align 4
  %838 = add nsw i32 %837, 1
  store i32 %838, i32* %i, align 4
  br label %821

; <label>:839                                     ; preds = %821
  br label %840

; <label>:840                                     ; preds = %839, %816
  %841 = load i32* %sad, align 4
  ret i32 %841
}

; Function Attrs: nounwind uwtable
define i32 @find_SATD([16 x i32]* %curr_diff, i32 %use_hadamard, i32 %blocktype) #0 {
  %1 = alloca [16 x i32]*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sad = alloca i32, align 4
  %block_size_x = alloca i32, align 4
  %block_size_y = alloca i32, align 4
  %block_size = alloca i32, align 4
  %diff = alloca [256 x i32], align 16
  store [16 x i32]* %curr_diff, [16 x i32]** %1, align 8
  store i32 %use_hadamard, i32* %2, align 4
  store i32 %blocktype, i32* %3, align 4
  store i32 0, i32* %sad, align 4
  %4 = load i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = load %struct.InputParameters** @input, align 8
  %7 = getelementptr inbounds %struct.InputParameters* %6, i32 0, i32 20
  %8 = getelementptr inbounds [8 x [2 x i32]]* %7, i32 0, i64 %5
  %9 = getelementptr inbounds [2 x i32]* %8, i32 0, i64 0
  %10 = load i32* %9, align 4
  store i32 %10, i32* %block_size_x, align 4
  %11 = load i32* %3, align 4
  %12 = sext i32 %11 to i64
  %13 = load %struct.InputParameters** @input, align 8
  %14 = getelementptr inbounds %struct.InputParameters* %13, i32 0, i32 20
  %15 = getelementptr inbounds [8 x [2 x i32]]* %14, i32 0, i64 %12
  %16 = getelementptr inbounds [2 x i32]* %15, i32 0, i64 1
  %17 = load i32* %16, align 4
  store i32 %17, i32* %block_size_y, align 4
  %18 = load i32* %3, align 4
  %19 = icmp sgt i32 %18, 4
  %20 = select i1 %19, i32 4, i32 8
  store i32 %20, i32* %block_size, align 4
  store i32 0, i32* %k, align 4
  store i32 0, i32* %y, align 4
  br label %21

; <label>:21                                      ; preds = %73, %0
  %22 = load i32* %y, align 4
  %23 = load i32* %block_size_y, align 4
  %24 = icmp slt i32 %22, %23
  br i1 %24, label %25, label %77

; <label>:25                                      ; preds = %21
  store i32 0, i32* %x, align 4
  br label %26

; <label>:26                                      ; preds = %68, %25
  %27 = load i32* %x, align 4
  %28 = load i32* %block_size_x, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %72

; <label>:30                                      ; preds = %26
  %31 = load i32* %y, align 4
  store i32 %31, i32* %j, align 4
  br label %32

; <label>:32                                      ; preds = %64, %30
  %33 = load i32* %j, align 4
  %34 = load i32* %y, align 4
  %35 = load i32* %block_size, align 4
  %36 = add nsw i32 %34, %35
  %37 = icmp slt i32 %33, %36
  br i1 %37, label %38, label %67

; <label>:38                                      ; preds = %32
  %39 = load i32* %x, align 4
  store i32 %39, i32* %i, align 4
  br label %40

; <label>:40                                      ; preds = %58, %38
  %41 = load i32* %i, align 4
  %42 = load i32* %x, align 4
  %43 = load i32* %block_size, align 4
  %44 = add nsw i32 %42, %43
  %45 = icmp slt i32 %41, %44
  br i1 %45, label %46, label %63

; <label>:46                                      ; preds = %40
  %47 = load i32* %i, align 4
  %48 = sext i32 %47 to i64
  %49 = load i32* %j, align 4
  %50 = sext i32 %49 to i64
  %51 = load [16 x i32]** %1, align 8
  %52 = getelementptr inbounds [16 x i32]* %51, i64 %50
  %53 = getelementptr inbounds [16 x i32]* %52, i32 0, i64 %48
  %54 = load i32* %53, align 4
  %55 = load i32* %k, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [256 x i32]* %diff, i32 0, i64 %56
  store i32 %54, i32* %57, align 4
  br label %58

; <label>:58                                      ; preds = %46
  %59 = load i32* %i, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %i, align 4
  %61 = load i32* %k, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %k, align 4
  br label %40

; <label>:63                                      ; preds = %40
  br label %64

; <label>:64                                      ; preds = %63
  %65 = load i32* %j, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %j, align 4
  br label %32

; <label>:67                                      ; preds = %32
  br label %68

; <label>:68                                      ; preds = %67
  %69 = load i32* %block_size, align 4
  %70 = load i32* %x, align 4
  %71 = add nsw i32 %70, %69
  store i32 %71, i32* %x, align 4
  br label %26

; <label>:72                                      ; preds = %26
  br label %73

; <label>:73                                      ; preds = %72
  %74 = load i32* %block_size, align 4
  %75 = load i32* %y, align 4
  %76 = add nsw i32 %75, %74
  store i32 %76, i32* %y, align 4
  br label %21

; <label>:77                                      ; preds = %21
  %78 = load i32* %2, align 4
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %80, label %149

; <label>:80                                      ; preds = %77
  %81 = load i32* %3, align 4
  switch i32 %81, label %147 [
    i32 1, label %82
    i32 2, label %109
    i32 3, label %109
    i32 4, label %122
    i32 5, label %128
    i32 6, label %128
    i32 7, label %141
  ]

; <label>:82                                      ; preds = %80
  %83 = getelementptr inbounds [256 x i32]* %diff, i32 0, i32 0
  %84 = load %struct.InputParameters** @input, align 8
  %85 = getelementptr inbounds %struct.InputParameters* %84, i32 0, i32 6
  %86 = load i32* %85, align 4
  %87 = call i32 @SATD8X8(i32* %83, i32 %86)
  store i32 %87, i32* %sad, align 4
  %88 = getelementptr inbounds [256 x i32]* %diff, i32 0, i64 64
  %89 = load %struct.InputParameters** @input, align 8
  %90 = getelementptr inbounds %struct.InputParameters* %89, i32 0, i32 6
  %91 = load i32* %90, align 4
  %92 = call i32 @SATD8X8(i32* %88, i32 %91)
  %93 = load i32* %sad, align 4
  %94 = add nsw i32 %93, %92
  store i32 %94, i32* %sad, align 4
  %95 = getelementptr inbounds [256 x i32]* %diff, i32 0, i64 128
  %96 = load %struct.InputParameters** @input, align 8
  %97 = getelementptr inbounds %struct.InputParameters* %96, i32 0, i32 6
  %98 = load i32* %97, align 4
  %99 = call i32 @SATD8X8(i32* %95, i32 %98)
  %100 = load i32* %sad, align 4
  %101 = add nsw i32 %100, %99
  store i32 %101, i32* %sad, align 4
  %102 = getelementptr inbounds [256 x i32]* %diff, i32 0, i64 192
  %103 = load %struct.InputParameters** @input, align 8
  %104 = getelementptr inbounds %struct.InputParameters* %103, i32 0, i32 6
  %105 = load i32* %104, align 4
  %106 = call i32 @SATD8X8(i32* %102, i32 %105)
  %107 = load i32* %sad, align 4
  %108 = add nsw i32 %107, %106
  store i32 %108, i32* %sad, align 4
  br label %148

; <label>:109                                     ; preds = %80, %80
  %110 = getelementptr inbounds [256 x i32]* %diff, i32 0, i32 0
  %111 = load %struct.InputParameters** @input, align 8
  %112 = getelementptr inbounds %struct.InputParameters* %111, i32 0, i32 6
  %113 = load i32* %112, align 4
  %114 = call i32 @SATD8X8(i32* %110, i32 %113)
  store i32 %114, i32* %sad, align 4
  %115 = getelementptr inbounds [256 x i32]* %diff, i32 0, i64 64
  %116 = load %struct.InputParameters** @input, align 8
  %117 = getelementptr inbounds %struct.InputParameters* %116, i32 0, i32 6
  %118 = load i32* %117, align 4
  %119 = call i32 @SATD8X8(i32* %115, i32 %118)
  %120 = load i32* %sad, align 4
  %121 = add nsw i32 %120, %119
  store i32 %121, i32* %sad, align 4
  br label %148

; <label>:122                                     ; preds = %80
  %123 = getelementptr inbounds [256 x i32]* %diff, i32 0, i32 0
  %124 = load %struct.InputParameters** @input, align 8
  %125 = getelementptr inbounds %struct.InputParameters* %124, i32 0, i32 6
  %126 = load i32* %125, align 4
  %127 = call i32 @SATD8X8(i32* %123, i32 %126)
  store i32 %127, i32* %sad, align 4
  br label %148

; <label>:128                                     ; preds = %80, %80
  %129 = getelementptr inbounds [256 x i32]* %diff, i32 0, i32 0
  %130 = load %struct.InputParameters** @input, align 8
  %131 = getelementptr inbounds %struct.InputParameters* %130, i32 0, i32 6
  %132 = load i32* %131, align 4
  %133 = call i32 @SATD(i32* %129, i32 %132)
  store i32 %133, i32* %sad, align 4
  %134 = getelementptr inbounds [256 x i32]* %diff, i32 0, i64 16
  %135 = load %struct.InputParameters** @input, align 8
  %136 = getelementptr inbounds %struct.InputParameters* %135, i32 0, i32 6
  %137 = load i32* %136, align 4
  %138 = call i32 @SATD(i32* %134, i32 %137)
  %139 = load i32* %sad, align 4
  %140 = add nsw i32 %139, %138
  store i32 %140, i32* %sad, align 4
  br label %148

; <label>:141                                     ; preds = %80
  %142 = getelementptr inbounds [256 x i32]* %diff, i32 0, i32 0
  %143 = load %struct.InputParameters** @input, align 8
  %144 = getelementptr inbounds %struct.InputParameters* %143, i32 0, i32 6
  %145 = load i32* %144, align 4
  %146 = call i32 @SATD(i32* %142, i32 %145)
  store i32 %146, i32* %sad, align 4
  br label %148

; <label>:147                                     ; preds = %80
  store i32 -1, i32* %sad, align 4
  br label %148

; <label>:148                                     ; preds = %147, %141, %128, %122, %109, %82
  br label %171

; <label>:149                                     ; preds = %77
  store i32 0, i32* %i, align 4
  br label %150

; <label>:150                                     ; preds = %167, %149
  %151 = load i32* %i, align 4
  %152 = load i32* %block_size_y, align 4
  %153 = load i32* %block_size_x, align 4
  %154 = mul nsw i32 %152, %153
  %155 = icmp slt i32 %151, %154
  br i1 %155, label %156, label %170

; <label>:156                                     ; preds = %150
  %157 = load i32* %i, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds [256 x i32]* %diff, i32 0, i64 %158
  %160 = load i32* %159, align 4
  %161 = sext i32 %160 to i64
  %162 = load i32** @byte_abs, align 8
  %163 = getelementptr inbounds i32* %162, i64 %161
  %164 = load i32* %163, align 4
  %165 = load i32* %sad, align 4
  %166 = add nsw i32 %165, %164
  store i32 %166, i32* %sad, align 4
  br label %167

; <label>:167                                     ; preds = %156
  %168 = load i32* %i, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %i, align 4
  br label %150

; <label>:170                                     ; preds = %150
  br label %171

; <label>:171                                     ; preds = %170, %148
  %172 = load i32* %sad, align 4
  ret i32 %172
}

; Function Attrs: nounwind uwtable
define i32 @SubPelBlockMotionSearch(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i32 %search_pos2, i32 %search_pos4, i32 %min_mcost, double %lambda) #0 {
  %1 = alloca i16**, align 8
  %2 = alloca i16, align 2
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16*, align 8
  %10 = alloca i16*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca double, align 8
  %curr_diff = alloca [16 x [16 x i32]], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %diff = alloca [16 x i32], align 16
  %d = alloca i32*, align 8
  %pos = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %mcost = alloca i32, align 4
  %abort_search = alloca i32, align 4
  %y0 = alloca i32, align 4
  %x0 = alloca i32, align 4
  %ry0 = alloca i32, align 4
  %rx0 = alloca i32, align 4
  %ry = alloca i32, align 4
  %cand_mv_x = alloca i32, align 4
  %cand_mv_y = alloca i32, align 4
  %max_pos_x4 = alloca i32, align 4
  %max_pos_y4 = alloca i32, align 4
  %orig_line = alloca i16*, align 8
  %ref_pic = alloca i16**, align 8
  %ref_picture = alloca %struct.storable_picture*, align 8
  %lambda_factor = alloca i32, align 4
  %mv_shift = alloca i32, align 4
  %check_position0 = alloca i32, align 4
  %blocksize_x = alloca i32, align 4
  %blocksize_y = alloca i32, align 4
  %pic4_pix_x = alloca i32, align 4
  %pic4_pix_y = alloca i32, align 4
  %min_pos2 = alloca i32, align 4
  %max_pos2 = alloca i32, align 4
  %list_offset = alloca i32, align 4
  %apply_weights = alloca i32, align 4
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %halfpelhadamard = alloca i32, align 4
  %qpelstart = alloca i32, align 4
  store i16** %orig_pic, i16*** %1, align 8
  store i16 %ref, i16* %2, align 2
  store i32 %list, i32* %3, align 4
  store i32 %pic_pix_x, i32* %4, align 4
  store i32 %pic_pix_y, i32* %5, align 4
  store i32 %blocktype, i32* %6, align 4
  store i16 %pred_mv_x, i16* %7, align 2
  store i16 %pred_mv_y, i16* %8, align 2
  store i16* %mv_x, i16** %9, align 8
  store i16* %mv_y, i16** %10, align 8
  store i32 %search_pos2, i32* %11, align 4
  store i32 %search_pos4, i32* %12, align 4
  store i32 %min_mcost, i32* %13, align 4
  store double %lambda, double* %14, align 8
  %15 = load double* %14, align 8
  %16 = fmul double 6.553600e+04, %15
  %17 = fadd double %16, 5.000000e-01
  %18 = fptosi double %17 to i32
  store i32 %18, i32* %lambda_factor, align 4
  store i32 0, i32* %mv_shift, align 4
  %19 = load i32* %6, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %50

; <label>:21                                      ; preds = %0
  %22 = load i16** %9, align 8
  %23 = load i16* %22, align 2
  %24 = sext i16 %23 to i32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %50

; <label>:26                                      ; preds = %21
  %27 = load i16** %10, align 8
  %28 = load i16* %27, align 2
  %29 = sext i16 %28 to i32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %50

; <label>:31                                      ; preds = %26
  %32 = load %struct.InputParameters** @input, align 8
  %33 = getelementptr inbounds %struct.InputParameters* %32, i32 0, i32 6
  %34 = load i32* %33, align 4
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %50

; <label>:36                                      ; preds = %31
  %37 = load %struct.InputParameters** @input, align 8
  %38 = getelementptr inbounds %struct.InputParameters* %37, i32 0, i32 85
  %39 = load i32* %38, align 4
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %50, label %41

; <label>:41                                      ; preds = %36
  %42 = load %struct.ImageParameters** @img, align 8
  %43 = getelementptr inbounds %struct.ImageParameters* %42, i32 0, i32 6
  %44 = load i32* %43, align 4
  %45 = icmp ne i32 %44, 1
  br i1 %45, label %46, label %50

; <label>:46                                      ; preds = %41
  %47 = load i16* %2, align 2
  %48 = sext i16 %47 to i32
  %49 = icmp eq i32 %48, 0
  br label %50

; <label>:50                                      ; preds = %46, %41, %36, %31, %26, %21, %0
  %51 = phi i1 [ false, %41 ], [ false, %36 ], [ false, %31 ], [ false, %26 ], [ false, %21 ], [ false, %0 ], [ %49, %46 ]
  %52 = zext i1 %51 to i32
  store i32 %52, i32* %check_position0, align 4
  %53 = load i32* %6, align 4
  %54 = sext i32 %53 to i64
  %55 = load %struct.InputParameters** @input, align 8
  %56 = getelementptr inbounds %struct.InputParameters* %55, i32 0, i32 20
  %57 = getelementptr inbounds [8 x [2 x i32]]* %56, i32 0, i64 %54
  %58 = getelementptr inbounds [2 x i32]* %57, i32 0, i64 0
  %59 = load i32* %58, align 4
  store i32 %59, i32* %blocksize_x, align 4
  %60 = load i32* %6, align 4
  %61 = sext i32 %60 to i64
  %62 = load %struct.InputParameters** @input, align 8
  %63 = getelementptr inbounds %struct.InputParameters* %62, i32 0, i32 20
  %64 = getelementptr inbounds [8 x [2 x i32]]* %63, i32 0, i64 %61
  %65 = getelementptr inbounds [2 x i32]* %64, i32 0, i64 1
  %66 = load i32* %65, align 4
  store i32 %66, i32* %blocksize_y, align 4
  %67 = load i32* %4, align 4
  %68 = shl i32 %67, 2
  store i32 %68, i32* %pic4_pix_x, align 4
  %69 = load i32* %5, align 4
  %70 = shl i32 %69, 2
  store i32 %70, i32* %pic4_pix_y, align 4
  %71 = load %struct.InputParameters** @input, align 8
  %72 = getelementptr inbounds %struct.InputParameters* %71, i32 0, i32 6
  %73 = load i32* %72, align 4
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %81

; <label>:75                                      ; preds = %50
  %76 = load %struct.InputParameters** @input, align 8
  %77 = getelementptr inbounds %struct.InputParameters* %76, i32 0, i32 7
  %78 = load i32* %77, align 4
  %79 = icmp ne i32 %78, 0
  %80 = select i1 %79, i32 1, i32 0
  br label %82

; <label>:81                                      ; preds = %50
  br label %82

; <label>:82                                      ; preds = %81, %75
  %83 = phi i32 [ %80, %75 ], [ 1, %81 ]
  store i32 %83, i32* %min_pos2, align 4
  %84 = load %struct.InputParameters** @input, align 8
  %85 = getelementptr inbounds %struct.InputParameters* %84, i32 0, i32 6
  %86 = load i32* %85, align 4
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %96

; <label>:88                                      ; preds = %82
  %89 = load i32* %11, align 4
  %90 = icmp sgt i32 1, %89
  br i1 %90, label %91, label %92

; <label>:91                                      ; preds = %88
  br label %94

; <label>:92                                      ; preds = %88
  %93 = load i32* %11, align 4
  br label %94

; <label>:94                                      ; preds = %92, %91
  %95 = phi i32 [ 1, %91 ], [ %93, %92 ]
  br label %98

; <label>:96                                      ; preds = %82
  %97 = load i32* %11, align 4
  br label %98

; <label>:98                                      ; preds = %96, %94
  %99 = phi i32 [ %95, %94 ], [ %97, %96 ]
  store i32 %99, i32* %max_pos2, align 4
  %100 = load %struct.ImageParameters** @img, align 8
  %101 = getelementptr inbounds %struct.ImageParameters* %100, i32 0, i32 90
  %102 = load i32* %101, align 4
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %123

; <label>:104                                     ; preds = %98
  %105 = load %struct.ImageParameters** @img, align 8
  %106 = getelementptr inbounds %struct.ImageParameters* %105, i32 0, i32 3
  %107 = load i32* %106, align 4
  %108 = sext i32 %107 to i64
  %109 = load %struct.ImageParameters** @img, align 8
  %110 = getelementptr inbounds %struct.ImageParameters* %109, i32 0, i32 51
  %111 = load %struct.macroblock** %110, align 8
  %112 = getelementptr inbounds %struct.macroblock* %111, i64 %108
  %113 = getelementptr inbounds %struct.macroblock* %112, i32 0, i32 22
  %114 = load i32* %113, align 4
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %116, label %123

; <label>:116                                     ; preds = %104
  %117 = load %struct.ImageParameters** @img, align 8
  %118 = getelementptr inbounds %struct.ImageParameters* %117, i32 0, i32 3
  %119 = load i32* %118, align 4
  %120 = srem i32 %119, 2
  %121 = icmp ne i32 %120, 0
  %122 = select i1 %121, i32 4, i32 2
  br label %124

; <label>:123                                     ; preds = %104, %98
  br label %124

; <label>:124                                     ; preds = %123, %116
  %125 = phi i32 [ %122, %116 ], [ 0, %123 ]
  store i32 %125, i32* %list_offset, align 4
  %126 = load %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %127 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %126, i32 0, i32 19
  %128 = load i32* %127, align 4
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %130, label %140

; <label>:130                                     ; preds = %124
  %131 = load %struct.ImageParameters** @img, align 8
  %132 = getelementptr inbounds %struct.ImageParameters* %131, i32 0, i32 6
  %133 = load i32* %132, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %152, label %135

; <label>:135                                     ; preds = %130
  %136 = load %struct.ImageParameters** @img, align 8
  %137 = getelementptr inbounds %struct.ImageParameters* %136, i32 0, i32 6
  %138 = load i32* %137, align 4
  %139 = icmp eq i32 %138, 3
  br i1 %139, label %152, label %140

; <label>:140                                     ; preds = %135, %124
  %141 = load %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %142 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %141, i32 0, i32 20
  %143 = load i32* %142, align 4
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %150

; <label>:145                                     ; preds = %140
  %146 = load %struct.ImageParameters** @img, align 8
  %147 = getelementptr inbounds %struct.ImageParameters* %146, i32 0, i32 6
  %148 = load i32* %147, align 4
  %149 = icmp eq i32 %148, 1
  br label %150

; <label>:150                                     ; preds = %145, %140
  %151 = phi i1 [ false, %140 ], [ %149, %145 ]
  br label %152

; <label>:152                                     ; preds = %150, %135, %130
  %153 = phi i1 [ true, %135 ], [ true, %130 ], [ %151, %150 ]
  %154 = zext i1 %153 to i32
  store i32 %154, i32* %apply_weights, align 4
  %155 = load %struct.InputParameters** @input, align 8
  %156 = getelementptr inbounds %struct.InputParameters* %155, i32 0, i32 7
  %157 = load i32* %156, align 4
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %159, label %160

; <label>:159                                     ; preds = %152
  br label %164

; <label>:160                                     ; preds = %152
  %161 = load %struct.InputParameters** @input, align 8
  %162 = getelementptr inbounds %struct.InputParameters* %161, i32 0, i32 6
  %163 = load i32* %162, align 4
  br label %164

; <label>:164                                     ; preds = %160, %159
  %165 = phi i32 [ 0, %159 ], [ %163, %160 ]
  store i32 %165, i32* %halfpelhadamard, align 4
  %166 = load %struct.InputParameters** @input, align 8
  %167 = getelementptr inbounds %struct.InputParameters* %166, i32 0, i32 7
  %168 = load i32* %167, align 4
  %169 = icmp ne i32 %168, 0
  %170 = select i1 %169, i32 0, i32 1
  store i32 %170, i32* %qpelstart, align 4
  %171 = load i16* %2, align 2
  %172 = sext i16 %171 to i64
  %173 = load i32* %3, align 4
  %174 = load i32* %list_offset, align 4
  %175 = add nsw i32 %173, %174
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %176
  %178 = load %struct.storable_picture*** %177, align 8
  %179 = getelementptr inbounds %struct.storable_picture** %178, i64 %172
  %180 = load %struct.storable_picture** %179, align 8
  store %struct.storable_picture* %180, %struct.storable_picture** %ref_picture, align 8
  %181 = load i32* %apply_weights, align 4
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %183, label %201

; <label>:183                                     ; preds = %164
  %184 = load %struct.InputParameters** @input, align 8
  %185 = getelementptr inbounds %struct.InputParameters* %184, i32 0, i32 48
  %186 = load i32* %185, align 4
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %188, label %201

; <label>:188                                     ; preds = %183
  %189 = load i16* %2, align 2
  %190 = sext i16 %189 to i64
  %191 = load i32* %3, align 4
  %192 = load i32* %list_offset, align 4
  %193 = add nsw i32 %191, %192
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %194
  %196 = load %struct.storable_picture*** %195, align 8
  %197 = getelementptr inbounds %struct.storable_picture** %196, i64 %190
  %198 = load %struct.storable_picture** %197, align 8
  %199 = getelementptr inbounds %struct.storable_picture* %198, i32 0, i32 29
  %200 = load i16*** %199, align 8
  store i16** %200, i16*** %ref_pic, align 8
  br label %214

; <label>:201                                     ; preds = %183, %164
  %202 = load i16* %2, align 2
  %203 = sext i16 %202 to i64
  %204 = load i32* %3, align 4
  %205 = load i32* %list_offset, align 4
  %206 = add nsw i32 %204, %205
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %207
  %209 = load %struct.storable_picture*** %208, align 8
  %210 = getelementptr inbounds %struct.storable_picture** %209, i64 %203
  %211 = load %struct.storable_picture** %210, align 8
  %212 = getelementptr inbounds %struct.storable_picture* %211, i32 0, i32 28
  %213 = load i16*** %212, align 8
  store i16** %213, i16*** %ref_pic, align 8
  br label %214

; <label>:214                                     ; preds = %201, %188
  %215 = load %struct.storable_picture** %ref_picture, align 8
  %216 = getelementptr inbounds %struct.storable_picture* %215, i32 0, i32 18
  %217 = load i32* %216, align 4
  store i32 %217, i32* %img_width, align 4
  %218 = load %struct.storable_picture** %ref_picture, align 8
  %219 = getelementptr inbounds %struct.storable_picture* %218, i32 0, i32 19
  %220 = load i32* %219, align 4
  store i32 %220, i32* %img_height, align 4
  %221 = load %struct.storable_picture** %ref_picture, align 8
  %222 = getelementptr inbounds %struct.storable_picture* %221, i32 0, i32 18
  %223 = load i32* %222, align 4
  %224 = load i32* %blocksize_x, align 4
  %225 = sub nsw i32 %223, %224
  %226 = add nsw i32 %225, 1
  %227 = shl i32 %226, 2
  store i32 %227, i32* %max_pos_x4, align 4
  %228 = load %struct.storable_picture** %ref_picture, align 8
  %229 = getelementptr inbounds %struct.storable_picture* %228, i32 0, i32 19
  %230 = load i32* %229, align 4
  %231 = load i32* %blocksize_y, align 4
  %232 = sub nsw i32 %230, %231
  %233 = add nsw i32 %232, 1
  %234 = shl i32 %233, 2
  store i32 %234, i32* %max_pos_y4, align 4
  %235 = load i16** %9, align 8
  %236 = load i16* %235, align 2
  %237 = sext i16 %236 to i32
  %238 = shl i32 %237, 2
  %239 = trunc i32 %238 to i16
  store i16 %239, i16* %235, align 2
  %240 = load i16** %10, align 8
  %241 = load i16* %240, align 2
  %242 = sext i16 %241 to i32
  %243 = shl i32 %242, 2
  %244 = trunc i32 %243 to i16
  store i16 %244, i16* %240, align 2
  %245 = load i32* %pic4_pix_x, align 4
  %246 = load i16** %9, align 8
  %247 = load i16* %246, align 2
  %248 = sext i16 %247 to i32
  %249 = add nsw i32 %245, %248
  %250 = icmp sgt i32 %249, 1
  br i1 %250, label %251, label %277

; <label>:251                                     ; preds = %214
  %252 = load i32* %pic4_pix_x, align 4
  %253 = load i16** %9, align 8
  %254 = load i16* %253, align 2
  %255 = sext i16 %254 to i32
  %256 = add nsw i32 %252, %255
  %257 = load i32* %max_pos_x4, align 4
  %258 = sub nsw i32 %257, 2
  %259 = icmp slt i32 %256, %258
  br i1 %259, label %260, label %277

; <label>:260                                     ; preds = %251
  %261 = load i32* %pic4_pix_y, align 4
  %262 = load i16** %10, align 8
  %263 = load i16* %262, align 2
  %264 = sext i16 %263 to i32
  %265 = add nsw i32 %261, %264
  %266 = icmp sgt i32 %265, 1
  br i1 %266, label %267, label %277

; <label>:267                                     ; preds = %260
  %268 = load i32* %pic4_pix_y, align 4
  %269 = load i16** %10, align 8
  %270 = load i16* %269, align 2
  %271 = sext i16 %270 to i32
  %272 = add nsw i32 %268, %271
  %273 = load i32* %max_pos_y4, align 4
  %274 = sub nsw i32 %273, 2
  %275 = icmp slt i32 %272, %274
  br i1 %275, label %276, label %277

; <label>:276                                     ; preds = %267
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %278

; <label>:277                                     ; preds = %267, %260, %251, %214
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %278

; <label>:278                                     ; preds = %277, %276
  store i32 0, i32* %best_pos, align 4
  %279 = load i32* %min_pos2, align 4
  store i32 %279, i32* %pos, align 4
  br label %280

; <label>:280                                     ; preds = %775, %278
  %281 = load i32* %pos, align 4
  %282 = load i32* %max_pos2, align 4
  %283 = icmp slt i32 %281, %282
  br i1 %283, label %284, label %778

; <label>:284                                     ; preds = %280
  %285 = load i16** %9, align 8
  %286 = load i16* %285, align 2
  %287 = sext i16 %286 to i32
  %288 = load i32* %pos, align 4
  %289 = sext i32 %288 to i64
  %290 = load i32** @spiral_search_x, align 8
  %291 = getelementptr inbounds i32* %290, i64 %289
  %292 = load i32* %291, align 4
  %293 = shl i32 %292, 1
  %294 = add nsw i32 %287, %293
  store i32 %294, i32* %cand_mv_x, align 4
  %295 = load i16** %10, align 8
  %296 = load i16* %295, align 2
  %297 = sext i16 %296 to i32
  %298 = load i32* %pos, align 4
  %299 = sext i32 %298 to i64
  %300 = load i32** @spiral_search_y, align 8
  %301 = getelementptr inbounds i32* %300, i64 %299
  %302 = load i32* %301, align 4
  %303 = shl i32 %302, 1
  %304 = add nsw i32 %297, %303
  store i32 %304, i32* %cand_mv_y, align 4
  %305 = load i32* %lambda_factor, align 4
  %306 = load i32* %cand_mv_x, align 4
  %307 = load i32* %mv_shift, align 4
  %308 = shl i32 %306, %307
  %309 = load i16* %7, align 2
  %310 = sext i16 %309 to i32
  %311 = sub nsw i32 %308, %310
  %312 = sext i32 %311 to i64
  %313 = load i32** @mvbits, align 8
  %314 = getelementptr inbounds i32* %313, i64 %312
  %315 = load i32* %314, align 4
  %316 = load i32* %cand_mv_y, align 4
  %317 = load i32* %mv_shift, align 4
  %318 = shl i32 %316, %317
  %319 = load i16* %8, align 2
  %320 = sext i16 %319 to i32
  %321 = sub nsw i32 %318, %320
  %322 = sext i32 %321 to i64
  %323 = load i32** @mvbits, align 8
  %324 = getelementptr inbounds i32* %323, i64 %322
  %325 = load i32* %324, align 4
  %326 = add nsw i32 %315, %325
  %327 = mul nsw i32 %305, %326
  %328 = ashr i32 %327, 16
  store i32 %328, i32* %mcost, align 4
  %329 = load i32* %check_position0, align 4
  %330 = icmp ne i32 %329, 0
  br i1 %330, label %331, label %340

; <label>:331                                     ; preds = %284
  %332 = load i32* %pos, align 4
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %340

; <label>:334                                     ; preds = %331
  %335 = load i32* %lambda_factor, align 4
  %336 = mul nsw i32 %335, 16
  %337 = ashr i32 %336, 16
  %338 = load i32* %mcost, align 4
  %339 = sub nsw i32 %338, %337
  store i32 %339, i32* %mcost, align 4
  br label %340

; <label>:340                                     ; preds = %334, %331, %284
  %341 = load i32* %mcost, align 4
  %342 = load i32* %13, align 4
  %343 = icmp sge i32 %341, %342
  br i1 %343, label %344, label %345

; <label>:344                                     ; preds = %340
  br label %775

; <label>:345                                     ; preds = %340
  store i32 0, i32* %y0, align 4
  store i32 0, i32* %abort_search, align 4
  br label %346

; <label>:346                                     ; preds = %752, %345
  %347 = load i32* %y0, align 4
  %348 = load i32* %blocksize_y, align 4
  %349 = icmp slt i32 %347, %348
  br i1 %349, label %350, label %354

; <label>:350                                     ; preds = %346
  %351 = load i32* %abort_search, align 4
  %352 = icmp ne i32 %351, 0
  %353 = xor i1 %352, true
  br label %354

; <label>:354                                     ; preds = %350, %346
  %355 = phi i1 [ false, %346 ], [ %353, %350 ]
  br i1 %355, label %356, label %755

; <label>:356                                     ; preds = %354
  %357 = load i32* %5, align 4
  %358 = load i32* %y0, align 4
  %359 = add nsw i32 %357, %358
  %360 = shl i32 %359, 2
  %361 = load i32* %cand_mv_y, align 4
  %362 = add nsw i32 %360, %361
  store i32 %362, i32* %ry0, align 4
  store i32 0, i32* %x0, align 4
  br label %363

; <label>:363                                     ; preds = %748, %356
  %364 = load i32* %x0, align 4
  %365 = load i32* %blocksize_x, align 4
  %366 = icmp slt i32 %364, %365
  br i1 %366, label %367, label %751

; <label>:367                                     ; preds = %363
  %368 = load i32* %4, align 4
  %369 = load i32* %x0, align 4
  %370 = add nsw i32 %368, %369
  %371 = shl i32 %370, 2
  %372 = load i32* %cand_mv_x, align 4
  %373 = add nsw i32 %371, %372
  store i32 %373, i32* %rx0, align 4
  %374 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  store i32* %374, i32** %d, align 8
  %375 = load i32* %y0, align 4
  %376 = sext i32 %375 to i64
  %377 = load i16*** %1, align 8
  %378 = getelementptr inbounds i16** %377, i64 %376
  %379 = load i16** %378, align 8
  store i16* %379, i16** %orig_line, align 8
  %380 = load i32* %ry0, align 4
  store i32 %380, i32* %ry, align 4
  %381 = load i32* %x0, align 4
  %382 = sext i32 %381 to i64
  %383 = load i16** %orig_line, align 8
  %384 = getelementptr inbounds i16* %383, i64 %382
  %385 = load i16* %384, align 2
  %386 = zext i16 %385 to i32
  %387 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %388 = load i16*** %ref_pic, align 8
  %389 = load i32* %ry, align 4
  %390 = load i32* %rx0, align 4
  %391 = load i32* %img_height, align 4
  %392 = load i32* %img_width, align 4
  %393 = call zeroext i16 %387(i16** %388, i32 %389, i32 %390, i32 %391, i32 %392)
  %394 = zext i16 %393 to i32
  %395 = sub nsw i32 %386, %394
  %396 = load i32** %d, align 8
  %397 = getelementptr inbounds i32* %396, i32 1
  store i32* %397, i32** %d, align 8
  store i32 %395, i32* %396, align 4
  %398 = load i32* %x0, align 4
  %399 = add nsw i32 %398, 1
  %400 = sext i32 %399 to i64
  %401 = load i16** %orig_line, align 8
  %402 = getelementptr inbounds i16* %401, i64 %400
  %403 = load i16* %402, align 2
  %404 = zext i16 %403 to i32
  %405 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %406 = load i16*** %ref_pic, align 8
  %407 = load i32* %ry, align 4
  %408 = load i32* %rx0, align 4
  %409 = add nsw i32 %408, 4
  %410 = load i32* %img_height, align 4
  %411 = load i32* %img_width, align 4
  %412 = call zeroext i16 %405(i16** %406, i32 %407, i32 %409, i32 %410, i32 %411)
  %413 = zext i16 %412 to i32
  %414 = sub nsw i32 %404, %413
  %415 = load i32** %d, align 8
  %416 = getelementptr inbounds i32* %415, i32 1
  store i32* %416, i32** %d, align 8
  store i32 %414, i32* %415, align 4
  %417 = load i32* %x0, align 4
  %418 = add nsw i32 %417, 2
  %419 = sext i32 %418 to i64
  %420 = load i16** %orig_line, align 8
  %421 = getelementptr inbounds i16* %420, i64 %419
  %422 = load i16* %421, align 2
  %423 = zext i16 %422 to i32
  %424 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %425 = load i16*** %ref_pic, align 8
  %426 = load i32* %ry, align 4
  %427 = load i32* %rx0, align 4
  %428 = add nsw i32 %427, 8
  %429 = load i32* %img_height, align 4
  %430 = load i32* %img_width, align 4
  %431 = call zeroext i16 %424(i16** %425, i32 %426, i32 %428, i32 %429, i32 %430)
  %432 = zext i16 %431 to i32
  %433 = sub nsw i32 %423, %432
  %434 = load i32** %d, align 8
  %435 = getelementptr inbounds i32* %434, i32 1
  store i32* %435, i32** %d, align 8
  store i32 %433, i32* %434, align 4
  %436 = load i32* %x0, align 4
  %437 = add nsw i32 %436, 3
  %438 = sext i32 %437 to i64
  %439 = load i16** %orig_line, align 8
  %440 = getelementptr inbounds i16* %439, i64 %438
  %441 = load i16* %440, align 2
  %442 = zext i16 %441 to i32
  %443 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %444 = load i16*** %ref_pic, align 8
  %445 = load i32* %ry, align 4
  %446 = load i32* %rx0, align 4
  %447 = add nsw i32 %446, 12
  %448 = load i32* %img_height, align 4
  %449 = load i32* %img_width, align 4
  %450 = call zeroext i16 %443(i16** %444, i32 %445, i32 %447, i32 %448, i32 %449)
  %451 = zext i16 %450 to i32
  %452 = sub nsw i32 %442, %451
  %453 = load i32** %d, align 8
  %454 = getelementptr inbounds i32* %453, i32 1
  store i32* %454, i32** %d, align 8
  store i32 %452, i32* %453, align 4
  %455 = load i32* %y0, align 4
  %456 = add nsw i32 %455, 1
  %457 = sext i32 %456 to i64
  %458 = load i16*** %1, align 8
  %459 = getelementptr inbounds i16** %458, i64 %457
  %460 = load i16** %459, align 8
  store i16* %460, i16** %orig_line, align 8
  %461 = load i32* %ry0, align 4
  %462 = add nsw i32 %461, 4
  store i32 %462, i32* %ry, align 4
  %463 = load i32* %x0, align 4
  %464 = sext i32 %463 to i64
  %465 = load i16** %orig_line, align 8
  %466 = getelementptr inbounds i16* %465, i64 %464
  %467 = load i16* %466, align 2
  %468 = zext i16 %467 to i32
  %469 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %470 = load i16*** %ref_pic, align 8
  %471 = load i32* %ry, align 4
  %472 = load i32* %rx0, align 4
  %473 = load i32* %img_height, align 4
  %474 = load i32* %img_width, align 4
  %475 = call zeroext i16 %469(i16** %470, i32 %471, i32 %472, i32 %473, i32 %474)
  %476 = zext i16 %475 to i32
  %477 = sub nsw i32 %468, %476
  %478 = load i32** %d, align 8
  %479 = getelementptr inbounds i32* %478, i32 1
  store i32* %479, i32** %d, align 8
  store i32 %477, i32* %478, align 4
  %480 = load i32* %x0, align 4
  %481 = add nsw i32 %480, 1
  %482 = sext i32 %481 to i64
  %483 = load i16** %orig_line, align 8
  %484 = getelementptr inbounds i16* %483, i64 %482
  %485 = load i16* %484, align 2
  %486 = zext i16 %485 to i32
  %487 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %488 = load i16*** %ref_pic, align 8
  %489 = load i32* %ry, align 4
  %490 = load i32* %rx0, align 4
  %491 = add nsw i32 %490, 4
  %492 = load i32* %img_height, align 4
  %493 = load i32* %img_width, align 4
  %494 = call zeroext i16 %487(i16** %488, i32 %489, i32 %491, i32 %492, i32 %493)
  %495 = zext i16 %494 to i32
  %496 = sub nsw i32 %486, %495
  %497 = load i32** %d, align 8
  %498 = getelementptr inbounds i32* %497, i32 1
  store i32* %498, i32** %d, align 8
  store i32 %496, i32* %497, align 4
  %499 = load i32* %x0, align 4
  %500 = add nsw i32 %499, 2
  %501 = sext i32 %500 to i64
  %502 = load i16** %orig_line, align 8
  %503 = getelementptr inbounds i16* %502, i64 %501
  %504 = load i16* %503, align 2
  %505 = zext i16 %504 to i32
  %506 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %507 = load i16*** %ref_pic, align 8
  %508 = load i32* %ry, align 4
  %509 = load i32* %rx0, align 4
  %510 = add nsw i32 %509, 8
  %511 = load i32* %img_height, align 4
  %512 = load i32* %img_width, align 4
  %513 = call zeroext i16 %506(i16** %507, i32 %508, i32 %510, i32 %511, i32 %512)
  %514 = zext i16 %513 to i32
  %515 = sub nsw i32 %505, %514
  %516 = load i32** %d, align 8
  %517 = getelementptr inbounds i32* %516, i32 1
  store i32* %517, i32** %d, align 8
  store i32 %515, i32* %516, align 4
  %518 = load i32* %x0, align 4
  %519 = add nsw i32 %518, 3
  %520 = sext i32 %519 to i64
  %521 = load i16** %orig_line, align 8
  %522 = getelementptr inbounds i16* %521, i64 %520
  %523 = load i16* %522, align 2
  %524 = zext i16 %523 to i32
  %525 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %526 = load i16*** %ref_pic, align 8
  %527 = load i32* %ry, align 4
  %528 = load i32* %rx0, align 4
  %529 = add nsw i32 %528, 12
  %530 = load i32* %img_height, align 4
  %531 = load i32* %img_width, align 4
  %532 = call zeroext i16 %525(i16** %526, i32 %527, i32 %529, i32 %530, i32 %531)
  %533 = zext i16 %532 to i32
  %534 = sub nsw i32 %524, %533
  %535 = load i32** %d, align 8
  %536 = getelementptr inbounds i32* %535, i32 1
  store i32* %536, i32** %d, align 8
  store i32 %534, i32* %535, align 4
  %537 = load i32* %y0, align 4
  %538 = add nsw i32 %537, 2
  %539 = sext i32 %538 to i64
  %540 = load i16*** %1, align 8
  %541 = getelementptr inbounds i16** %540, i64 %539
  %542 = load i16** %541, align 8
  store i16* %542, i16** %orig_line, align 8
  %543 = load i32* %ry0, align 4
  %544 = add nsw i32 %543, 8
  store i32 %544, i32* %ry, align 4
  %545 = load i32* %x0, align 4
  %546 = sext i32 %545 to i64
  %547 = load i16** %orig_line, align 8
  %548 = getelementptr inbounds i16* %547, i64 %546
  %549 = load i16* %548, align 2
  %550 = zext i16 %549 to i32
  %551 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %552 = load i16*** %ref_pic, align 8
  %553 = load i32* %ry, align 4
  %554 = load i32* %rx0, align 4
  %555 = load i32* %img_height, align 4
  %556 = load i32* %img_width, align 4
  %557 = call zeroext i16 %551(i16** %552, i32 %553, i32 %554, i32 %555, i32 %556)
  %558 = zext i16 %557 to i32
  %559 = sub nsw i32 %550, %558
  %560 = load i32** %d, align 8
  %561 = getelementptr inbounds i32* %560, i32 1
  store i32* %561, i32** %d, align 8
  store i32 %559, i32* %560, align 4
  %562 = load i32* %x0, align 4
  %563 = add nsw i32 %562, 1
  %564 = sext i32 %563 to i64
  %565 = load i16** %orig_line, align 8
  %566 = getelementptr inbounds i16* %565, i64 %564
  %567 = load i16* %566, align 2
  %568 = zext i16 %567 to i32
  %569 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %570 = load i16*** %ref_pic, align 8
  %571 = load i32* %ry, align 4
  %572 = load i32* %rx0, align 4
  %573 = add nsw i32 %572, 4
  %574 = load i32* %img_height, align 4
  %575 = load i32* %img_width, align 4
  %576 = call zeroext i16 %569(i16** %570, i32 %571, i32 %573, i32 %574, i32 %575)
  %577 = zext i16 %576 to i32
  %578 = sub nsw i32 %568, %577
  %579 = load i32** %d, align 8
  %580 = getelementptr inbounds i32* %579, i32 1
  store i32* %580, i32** %d, align 8
  store i32 %578, i32* %579, align 4
  %581 = load i32* %x0, align 4
  %582 = add nsw i32 %581, 2
  %583 = sext i32 %582 to i64
  %584 = load i16** %orig_line, align 8
  %585 = getelementptr inbounds i16* %584, i64 %583
  %586 = load i16* %585, align 2
  %587 = zext i16 %586 to i32
  %588 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %589 = load i16*** %ref_pic, align 8
  %590 = load i32* %ry, align 4
  %591 = load i32* %rx0, align 4
  %592 = add nsw i32 %591, 8
  %593 = load i32* %img_height, align 4
  %594 = load i32* %img_width, align 4
  %595 = call zeroext i16 %588(i16** %589, i32 %590, i32 %592, i32 %593, i32 %594)
  %596 = zext i16 %595 to i32
  %597 = sub nsw i32 %587, %596
  %598 = load i32** %d, align 8
  %599 = getelementptr inbounds i32* %598, i32 1
  store i32* %599, i32** %d, align 8
  store i32 %597, i32* %598, align 4
  %600 = load i32* %x0, align 4
  %601 = add nsw i32 %600, 3
  %602 = sext i32 %601 to i64
  %603 = load i16** %orig_line, align 8
  %604 = getelementptr inbounds i16* %603, i64 %602
  %605 = load i16* %604, align 2
  %606 = zext i16 %605 to i32
  %607 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %608 = load i16*** %ref_pic, align 8
  %609 = load i32* %ry, align 4
  %610 = load i32* %rx0, align 4
  %611 = add nsw i32 %610, 12
  %612 = load i32* %img_height, align 4
  %613 = load i32* %img_width, align 4
  %614 = call zeroext i16 %607(i16** %608, i32 %609, i32 %611, i32 %612, i32 %613)
  %615 = zext i16 %614 to i32
  %616 = sub nsw i32 %606, %615
  %617 = load i32** %d, align 8
  %618 = getelementptr inbounds i32* %617, i32 1
  store i32* %618, i32** %d, align 8
  store i32 %616, i32* %617, align 4
  %619 = load i32* %y0, align 4
  %620 = add nsw i32 %619, 3
  %621 = sext i32 %620 to i64
  %622 = load i16*** %1, align 8
  %623 = getelementptr inbounds i16** %622, i64 %621
  %624 = load i16** %623, align 8
  store i16* %624, i16** %orig_line, align 8
  %625 = load i32* %ry0, align 4
  %626 = add nsw i32 %625, 12
  store i32 %626, i32* %ry, align 4
  %627 = load i32* %x0, align 4
  %628 = sext i32 %627 to i64
  %629 = load i16** %orig_line, align 8
  %630 = getelementptr inbounds i16* %629, i64 %628
  %631 = load i16* %630, align 2
  %632 = zext i16 %631 to i32
  %633 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %634 = load i16*** %ref_pic, align 8
  %635 = load i32* %ry, align 4
  %636 = load i32* %rx0, align 4
  %637 = load i32* %img_height, align 4
  %638 = load i32* %img_width, align 4
  %639 = call zeroext i16 %633(i16** %634, i32 %635, i32 %636, i32 %637, i32 %638)
  %640 = zext i16 %639 to i32
  %641 = sub nsw i32 %632, %640
  %642 = load i32** %d, align 8
  %643 = getelementptr inbounds i32* %642, i32 1
  store i32* %643, i32** %d, align 8
  store i32 %641, i32* %642, align 4
  %644 = load i32* %x0, align 4
  %645 = add nsw i32 %644, 1
  %646 = sext i32 %645 to i64
  %647 = load i16** %orig_line, align 8
  %648 = getelementptr inbounds i16* %647, i64 %646
  %649 = load i16* %648, align 2
  %650 = zext i16 %649 to i32
  %651 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %652 = load i16*** %ref_pic, align 8
  %653 = load i32* %ry, align 4
  %654 = load i32* %rx0, align 4
  %655 = add nsw i32 %654, 4
  %656 = load i32* %img_height, align 4
  %657 = load i32* %img_width, align 4
  %658 = call zeroext i16 %651(i16** %652, i32 %653, i32 %655, i32 %656, i32 %657)
  %659 = zext i16 %658 to i32
  %660 = sub nsw i32 %650, %659
  %661 = load i32** %d, align 8
  %662 = getelementptr inbounds i32* %661, i32 1
  store i32* %662, i32** %d, align 8
  store i32 %660, i32* %661, align 4
  %663 = load i32* %x0, align 4
  %664 = add nsw i32 %663, 2
  %665 = sext i32 %664 to i64
  %666 = load i16** %orig_line, align 8
  %667 = getelementptr inbounds i16* %666, i64 %665
  %668 = load i16* %667, align 2
  %669 = zext i16 %668 to i32
  %670 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %671 = load i16*** %ref_pic, align 8
  %672 = load i32* %ry, align 4
  %673 = load i32* %rx0, align 4
  %674 = add nsw i32 %673, 8
  %675 = load i32* %img_height, align 4
  %676 = load i32* %img_width, align 4
  %677 = call zeroext i16 %670(i16** %671, i32 %672, i32 %674, i32 %675, i32 %676)
  %678 = zext i16 %677 to i32
  %679 = sub nsw i32 %669, %678
  %680 = load i32** %d, align 8
  %681 = getelementptr inbounds i32* %680, i32 1
  store i32* %681, i32** %d, align 8
  store i32 %679, i32* %680, align 4
  %682 = load i32* %x0, align 4
  %683 = add nsw i32 %682, 3
  %684 = sext i32 %683 to i64
  %685 = load i16** %orig_line, align 8
  %686 = getelementptr inbounds i16* %685, i64 %684
  %687 = load i16* %686, align 2
  %688 = zext i16 %687 to i32
  %689 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %690 = load i16*** %ref_pic, align 8
  %691 = load i32* %ry, align 4
  %692 = load i32* %rx0, align 4
  %693 = add nsw i32 %692, 12
  %694 = load i32* %img_height, align 4
  %695 = load i32* %img_width, align 4
  %696 = call zeroext i16 %689(i16** %690, i32 %691, i32 %693, i32 %694, i32 %695)
  %697 = zext i16 %696 to i32
  %698 = sub nsw i32 %688, %697
  %699 = load i32** %d, align 8
  store i32 %698, i32* %699, align 4
  %700 = load %struct.InputParameters** @input, align 8
  %701 = getelementptr inbounds %struct.InputParameters* %700, i32 0, i32 123
  %702 = load i32* %701, align 4
  %703 = icmp ne i32 %702, 0
  br i1 %703, label %714, label %704

; <label>:704                                     ; preds = %367
  %705 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  %706 = load i32* %halfpelhadamard, align 4
  %707 = call i32 @SATD(i32* %705, i32 %706)
  %708 = load i32* %mcost, align 4
  %709 = add nsw i32 %708, %707
  store i32 %709, i32* %mcost, align 4
  %710 = load i32* %13, align 4
  %711 = icmp sgt i32 %709, %710
  br i1 %711, label %712, label %713

; <label>:712                                     ; preds = %704
  store i32 1, i32* %abort_search, align 4
  br label %751

; <label>:713                                     ; preds = %704
  br label %747

; <label>:714                                     ; preds = %367
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %715

; <label>:715                                     ; preds = %743, %714
  %716 = load i32* %j, align 4
  %717 = icmp slt i32 %716, 4
  br i1 %717, label %718, label %746

; <label>:718                                     ; preds = %715
  store i32 0, i32* %i, align 4
  br label %719

; <label>:719                                     ; preds = %737, %718
  %720 = load i32* %i, align 4
  %721 = icmp slt i32 %720, 4
  br i1 %721, label %722, label %742

; <label>:722                                     ; preds = %719
  %723 = load i32* %k, align 4
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds [16 x i32]* %diff, i32 0, i64 %724
  %726 = load i32* %725, align 4
  %727 = load i32* %x0, align 4
  %728 = load i32* %i, align 4
  %729 = add nsw i32 %727, %728
  %730 = sext i32 %729 to i64
  %731 = load i32* %y0, align 4
  %732 = load i32* %j, align 4
  %733 = add nsw i32 %731, %732
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds [16 x [16 x i32]]* %curr_diff, i32 0, i64 %734
  %736 = getelementptr inbounds [16 x i32]* %735, i32 0, i64 %730
  store i32 %726, i32* %736, align 4
  br label %737

; <label>:737                                     ; preds = %722
  %738 = load i32* %i, align 4
  %739 = add nsw i32 %738, 1
  store i32 %739, i32* %i, align 4
  %740 = load i32* %k, align 4
  %741 = add nsw i32 %740, 1
  store i32 %741, i32* %k, align 4
  br label %719

; <label>:742                                     ; preds = %719
  br label %743

; <label>:743                                     ; preds = %742
  %744 = load i32* %j, align 4
  %745 = add nsw i32 %744, 1
  store i32 %745, i32* %j, align 4
  br label %715

; <label>:746                                     ; preds = %715
  br label %747

; <label>:747                                     ; preds = %746, %713
  br label %748

; <label>:748                                     ; preds = %747
  %749 = load i32* %x0, align 4
  %750 = add nsw i32 %749, 4
  store i32 %750, i32* %x0, align 4
  br label %363

; <label>:751                                     ; preds = %712, %363
  br label %752

; <label>:752                                     ; preds = %751
  %753 = load i32* %y0, align 4
  %754 = add nsw i32 %753, 4
  store i32 %754, i32* %y0, align 4
  br label %346

; <label>:755                                     ; preds = %354
  %756 = load %struct.InputParameters** @input, align 8
  %757 = getelementptr inbounds %struct.InputParameters* %756, i32 0, i32 123
  %758 = load i32* %757, align 4
  %759 = icmp ne i32 %758, 0
  br i1 %759, label %760, label %767

; <label>:760                                     ; preds = %755
  %761 = getelementptr inbounds [16 x [16 x i32]]* %curr_diff, i32 0, i32 0
  %762 = load i32* %halfpelhadamard, align 4
  %763 = load i32* %6, align 4
  %764 = call i32 @find_SATD([16 x i32]* %761, i32 %762, i32 %763)
  %765 = load i32* %mcost, align 4
  %766 = add nsw i32 %765, %764
  store i32 %766, i32* %mcost, align 4
  br label %767

; <label>:767                                     ; preds = %760, %755
  %768 = load i32* %mcost, align 4
  %769 = load i32* %13, align 4
  %770 = icmp slt i32 %768, %769
  br i1 %770, label %771, label %774

; <label>:771                                     ; preds = %767
  %772 = load i32* %mcost, align 4
  store i32 %772, i32* %13, align 4
  %773 = load i32* %pos, align 4
  store i32 %773, i32* %best_pos, align 4
  br label %774

; <label>:774                                     ; preds = %771, %767
  br label %775

; <label>:775                                     ; preds = %774, %344
  %776 = load i32* %pos, align 4
  %777 = add nsw i32 %776, 1
  store i32 %777, i32* %pos, align 4
  br label %280

; <label>:778                                     ; preds = %280
  %779 = load i32* %best_pos, align 4
  %780 = icmp ne i32 %779, 0
  br i1 %780, label %781, label %804

; <label>:781                                     ; preds = %778
  %782 = load i32* %best_pos, align 4
  %783 = sext i32 %782 to i64
  %784 = load i32** @spiral_search_x, align 8
  %785 = getelementptr inbounds i32* %784, i64 %783
  %786 = load i32* %785, align 4
  %787 = shl i32 %786, 1
  %788 = load i16** %9, align 8
  %789 = load i16* %788, align 2
  %790 = sext i16 %789 to i32
  %791 = add nsw i32 %790, %787
  %792 = trunc i32 %791 to i16
  store i16 %792, i16* %788, align 2
  %793 = load i32* %best_pos, align 4
  %794 = sext i32 %793 to i64
  %795 = load i32** @spiral_search_y, align 8
  %796 = getelementptr inbounds i32* %795, i64 %794
  %797 = load i32* %796, align 4
  %798 = shl i32 %797, 1
  %799 = load i16** %10, align 8
  %800 = load i16* %799, align 2
  %801 = sext i16 %800 to i32
  %802 = add nsw i32 %801, %798
  %803 = trunc i32 %802 to i16
  store i16 %803, i16* %799, align 2
  br label %804

; <label>:804                                     ; preds = %781, %778
  %805 = load %struct.InputParameters** @input, align 8
  %806 = getelementptr inbounds %struct.InputParameters* %805, i32 0, i32 7
  %807 = load i32* %806, align 4
  %808 = icmp ne i32 %807, 0
  br i1 %808, label %809, label %810

; <label>:809                                     ; preds = %804
  store i32 2147483647, i32* %13, align 4
  br label %810

; <label>:810                                     ; preds = %809, %804
  %811 = load i32* %pic4_pix_x, align 4
  %812 = load i16** %9, align 8
  %813 = load i16* %812, align 2
  %814 = sext i16 %813 to i32
  %815 = add nsw i32 %811, %814
  %816 = icmp sgt i32 %815, 1
  br i1 %816, label %817, label %843

; <label>:817                                     ; preds = %810
  %818 = load i32* %pic4_pix_x, align 4
  %819 = load i16** %9, align 8
  %820 = load i16* %819, align 2
  %821 = sext i16 %820 to i32
  %822 = add nsw i32 %818, %821
  %823 = load i32* %max_pos_x4, align 4
  %824 = sub nsw i32 %823, 1
  %825 = icmp slt i32 %822, %824
  br i1 %825, label %826, label %843

; <label>:826                                     ; preds = %817
  %827 = load i32* %pic4_pix_y, align 4
  %828 = load i16** %10, align 8
  %829 = load i16* %828, align 2
  %830 = sext i16 %829 to i32
  %831 = add nsw i32 %827, %830
  %832 = icmp sgt i32 %831, 1
  br i1 %832, label %833, label %843

; <label>:833                                     ; preds = %826
  %834 = load i32* %pic4_pix_y, align 4
  %835 = load i16** %10, align 8
  %836 = load i16* %835, align 2
  %837 = sext i16 %836 to i32
  %838 = add nsw i32 %834, %837
  %839 = load i32* %max_pos_y4, align 4
  %840 = sub nsw i32 %839, 1
  %841 = icmp slt i32 %838, %840
  br i1 %841, label %842, label %843

; <label>:842                                     ; preds = %833
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %844

; <label>:843                                     ; preds = %833, %826, %817, %810
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %844

; <label>:844                                     ; preds = %843, %842
  store i32 0, i32* %best_pos, align 4
  %845 = load i32* %qpelstart, align 4
  store i32 %845, i32* %pos, align 4
  br label %846

; <label>:846                                     ; preds = %1331, %844
  %847 = load i32* %pos, align 4
  %848 = load i32* %12, align 4
  %849 = icmp slt i32 %847, %848
  br i1 %849, label %850, label %1334

; <label>:850                                     ; preds = %846
  %851 = load i16** %9, align 8
  %852 = load i16* %851, align 2
  %853 = sext i16 %852 to i32
  %854 = load i32* %pos, align 4
  %855 = sext i32 %854 to i64
  %856 = load i32** @spiral_search_x, align 8
  %857 = getelementptr inbounds i32* %856, i64 %855
  %858 = load i32* %857, align 4
  %859 = add nsw i32 %853, %858
  store i32 %859, i32* %cand_mv_x, align 4
  %860 = load i16** %10, align 8
  %861 = load i16* %860, align 2
  %862 = sext i16 %861 to i32
  %863 = load i32* %pos, align 4
  %864 = sext i32 %863 to i64
  %865 = load i32** @spiral_search_y, align 8
  %866 = getelementptr inbounds i32* %865, i64 %864
  %867 = load i32* %866, align 4
  %868 = add nsw i32 %862, %867
  store i32 %868, i32* %cand_mv_y, align 4
  %869 = load i32* %lambda_factor, align 4
  %870 = load i32* %cand_mv_x, align 4
  %871 = load i32* %mv_shift, align 4
  %872 = shl i32 %870, %871
  %873 = load i16* %7, align 2
  %874 = sext i16 %873 to i32
  %875 = sub nsw i32 %872, %874
  %876 = sext i32 %875 to i64
  %877 = load i32** @mvbits, align 8
  %878 = getelementptr inbounds i32* %877, i64 %876
  %879 = load i32* %878, align 4
  %880 = load i32* %cand_mv_y, align 4
  %881 = load i32* %mv_shift, align 4
  %882 = shl i32 %880, %881
  %883 = load i16* %8, align 2
  %884 = sext i16 %883 to i32
  %885 = sub nsw i32 %882, %884
  %886 = sext i32 %885 to i64
  %887 = load i32** @mvbits, align 8
  %888 = getelementptr inbounds i32* %887, i64 %886
  %889 = load i32* %888, align 4
  %890 = add nsw i32 %879, %889
  %891 = mul nsw i32 %869, %890
  %892 = ashr i32 %891, 16
  store i32 %892, i32* %mcost, align 4
  %893 = load i32* %mcost, align 4
  %894 = load i32* %13, align 4
  %895 = icmp sge i32 %893, %894
  br i1 %895, label %896, label %897

; <label>:896                                     ; preds = %850
  br label %1331

; <label>:897                                     ; preds = %850
  store i32 0, i32* %y0, align 4
  store i32 0, i32* %abort_search, align 4
  br label %898

; <label>:898                                     ; preds = %1306, %897
  %899 = load i32* %y0, align 4
  %900 = load i32* %blocksize_y, align 4
  %901 = icmp slt i32 %899, %900
  br i1 %901, label %902, label %906

; <label>:902                                     ; preds = %898
  %903 = load i32* %abort_search, align 4
  %904 = icmp ne i32 %903, 0
  %905 = xor i1 %904, true
  br label %906

; <label>:906                                     ; preds = %902, %898
  %907 = phi i1 [ false, %898 ], [ %905, %902 ]
  br i1 %907, label %908, label %1309

; <label>:908                                     ; preds = %906
  %909 = load i32* %5, align 4
  %910 = load i32* %y0, align 4
  %911 = add nsw i32 %909, %910
  %912 = shl i32 %911, 2
  %913 = load i32* %cand_mv_y, align 4
  %914 = add nsw i32 %912, %913
  store i32 %914, i32* %ry0, align 4
  store i32 0, i32* %x0, align 4
  br label %915

; <label>:915                                     ; preds = %1302, %908
  %916 = load i32* %x0, align 4
  %917 = load i32* %blocksize_x, align 4
  %918 = icmp slt i32 %916, %917
  br i1 %918, label %919, label %1305

; <label>:919                                     ; preds = %915
  %920 = load i32* %4, align 4
  %921 = load i32* %x0, align 4
  %922 = add nsw i32 %920, %921
  %923 = shl i32 %922, 2
  %924 = load i32* %cand_mv_x, align 4
  %925 = add nsw i32 %923, %924
  store i32 %925, i32* %rx0, align 4
  %926 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  store i32* %926, i32** %d, align 8
  %927 = load i32* %y0, align 4
  %928 = sext i32 %927 to i64
  %929 = load i16*** %1, align 8
  %930 = getelementptr inbounds i16** %929, i64 %928
  %931 = load i16** %930, align 8
  store i16* %931, i16** %orig_line, align 8
  %932 = load i32* %ry0, align 4
  store i32 %932, i32* %ry, align 4
  %933 = load i32* %x0, align 4
  %934 = sext i32 %933 to i64
  %935 = load i16** %orig_line, align 8
  %936 = getelementptr inbounds i16* %935, i64 %934
  %937 = load i16* %936, align 2
  %938 = zext i16 %937 to i32
  %939 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %940 = load i16*** %ref_pic, align 8
  %941 = load i32* %ry, align 4
  %942 = load i32* %rx0, align 4
  %943 = load i32* %img_height, align 4
  %944 = load i32* %img_width, align 4
  %945 = call zeroext i16 %939(i16** %940, i32 %941, i32 %942, i32 %943, i32 %944)
  %946 = zext i16 %945 to i32
  %947 = sub nsw i32 %938, %946
  %948 = load i32** %d, align 8
  %949 = getelementptr inbounds i32* %948, i32 1
  store i32* %949, i32** %d, align 8
  store i32 %947, i32* %948, align 4
  %950 = load i32* %x0, align 4
  %951 = add nsw i32 %950, 1
  %952 = sext i32 %951 to i64
  %953 = load i16** %orig_line, align 8
  %954 = getelementptr inbounds i16* %953, i64 %952
  %955 = load i16* %954, align 2
  %956 = zext i16 %955 to i32
  %957 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %958 = load i16*** %ref_pic, align 8
  %959 = load i32* %ry, align 4
  %960 = load i32* %rx0, align 4
  %961 = add nsw i32 %960, 4
  %962 = load i32* %img_height, align 4
  %963 = load i32* %img_width, align 4
  %964 = call zeroext i16 %957(i16** %958, i32 %959, i32 %961, i32 %962, i32 %963)
  %965 = zext i16 %964 to i32
  %966 = sub nsw i32 %956, %965
  %967 = load i32** %d, align 8
  %968 = getelementptr inbounds i32* %967, i32 1
  store i32* %968, i32** %d, align 8
  store i32 %966, i32* %967, align 4
  %969 = load i32* %x0, align 4
  %970 = add nsw i32 %969, 2
  %971 = sext i32 %970 to i64
  %972 = load i16** %orig_line, align 8
  %973 = getelementptr inbounds i16* %972, i64 %971
  %974 = load i16* %973, align 2
  %975 = zext i16 %974 to i32
  %976 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %977 = load i16*** %ref_pic, align 8
  %978 = load i32* %ry, align 4
  %979 = load i32* %rx0, align 4
  %980 = add nsw i32 %979, 8
  %981 = load i32* %img_height, align 4
  %982 = load i32* %img_width, align 4
  %983 = call zeroext i16 %976(i16** %977, i32 %978, i32 %980, i32 %981, i32 %982)
  %984 = zext i16 %983 to i32
  %985 = sub nsw i32 %975, %984
  %986 = load i32** %d, align 8
  %987 = getelementptr inbounds i32* %986, i32 1
  store i32* %987, i32** %d, align 8
  store i32 %985, i32* %986, align 4
  %988 = load i32* %x0, align 4
  %989 = add nsw i32 %988, 3
  %990 = sext i32 %989 to i64
  %991 = load i16** %orig_line, align 8
  %992 = getelementptr inbounds i16* %991, i64 %990
  %993 = load i16* %992, align 2
  %994 = zext i16 %993 to i32
  %995 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %996 = load i16*** %ref_pic, align 8
  %997 = load i32* %ry, align 4
  %998 = load i32* %rx0, align 4
  %999 = add nsw i32 %998, 12
  %1000 = load i32* %img_height, align 4
  %1001 = load i32* %img_width, align 4
  %1002 = call zeroext i16 %995(i16** %996, i32 %997, i32 %999, i32 %1000, i32 %1001)
  %1003 = zext i16 %1002 to i32
  %1004 = sub nsw i32 %994, %1003
  %1005 = load i32** %d, align 8
  %1006 = getelementptr inbounds i32* %1005, i32 1
  store i32* %1006, i32** %d, align 8
  store i32 %1004, i32* %1005, align 4
  %1007 = load i32* %y0, align 4
  %1008 = add nsw i32 %1007, 1
  %1009 = sext i32 %1008 to i64
  %1010 = load i16*** %1, align 8
  %1011 = getelementptr inbounds i16** %1010, i64 %1009
  %1012 = load i16** %1011, align 8
  store i16* %1012, i16** %orig_line, align 8
  %1013 = load i32* %ry0, align 4
  %1014 = add nsw i32 %1013, 4
  store i32 %1014, i32* %ry, align 4
  %1015 = load i32* %x0, align 4
  %1016 = sext i32 %1015 to i64
  %1017 = load i16** %orig_line, align 8
  %1018 = getelementptr inbounds i16* %1017, i64 %1016
  %1019 = load i16* %1018, align 2
  %1020 = zext i16 %1019 to i32
  %1021 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1022 = load i16*** %ref_pic, align 8
  %1023 = load i32* %ry, align 4
  %1024 = load i32* %rx0, align 4
  %1025 = load i32* %img_height, align 4
  %1026 = load i32* %img_width, align 4
  %1027 = call zeroext i16 %1021(i16** %1022, i32 %1023, i32 %1024, i32 %1025, i32 %1026)
  %1028 = zext i16 %1027 to i32
  %1029 = sub nsw i32 %1020, %1028
  %1030 = load i32** %d, align 8
  %1031 = getelementptr inbounds i32* %1030, i32 1
  store i32* %1031, i32** %d, align 8
  store i32 %1029, i32* %1030, align 4
  %1032 = load i32* %x0, align 4
  %1033 = add nsw i32 %1032, 1
  %1034 = sext i32 %1033 to i64
  %1035 = load i16** %orig_line, align 8
  %1036 = getelementptr inbounds i16* %1035, i64 %1034
  %1037 = load i16* %1036, align 2
  %1038 = zext i16 %1037 to i32
  %1039 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1040 = load i16*** %ref_pic, align 8
  %1041 = load i32* %ry, align 4
  %1042 = load i32* %rx0, align 4
  %1043 = add nsw i32 %1042, 4
  %1044 = load i32* %img_height, align 4
  %1045 = load i32* %img_width, align 4
  %1046 = call zeroext i16 %1039(i16** %1040, i32 %1041, i32 %1043, i32 %1044, i32 %1045)
  %1047 = zext i16 %1046 to i32
  %1048 = sub nsw i32 %1038, %1047
  %1049 = load i32** %d, align 8
  %1050 = getelementptr inbounds i32* %1049, i32 1
  store i32* %1050, i32** %d, align 8
  store i32 %1048, i32* %1049, align 4
  %1051 = load i32* %x0, align 4
  %1052 = add nsw i32 %1051, 2
  %1053 = sext i32 %1052 to i64
  %1054 = load i16** %orig_line, align 8
  %1055 = getelementptr inbounds i16* %1054, i64 %1053
  %1056 = load i16* %1055, align 2
  %1057 = zext i16 %1056 to i32
  %1058 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1059 = load i16*** %ref_pic, align 8
  %1060 = load i32* %ry, align 4
  %1061 = load i32* %rx0, align 4
  %1062 = add nsw i32 %1061, 8
  %1063 = load i32* %img_height, align 4
  %1064 = load i32* %img_width, align 4
  %1065 = call zeroext i16 %1058(i16** %1059, i32 %1060, i32 %1062, i32 %1063, i32 %1064)
  %1066 = zext i16 %1065 to i32
  %1067 = sub nsw i32 %1057, %1066
  %1068 = load i32** %d, align 8
  %1069 = getelementptr inbounds i32* %1068, i32 1
  store i32* %1069, i32** %d, align 8
  store i32 %1067, i32* %1068, align 4
  %1070 = load i32* %x0, align 4
  %1071 = add nsw i32 %1070, 3
  %1072 = sext i32 %1071 to i64
  %1073 = load i16** %orig_line, align 8
  %1074 = getelementptr inbounds i16* %1073, i64 %1072
  %1075 = load i16* %1074, align 2
  %1076 = zext i16 %1075 to i32
  %1077 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1078 = load i16*** %ref_pic, align 8
  %1079 = load i32* %ry, align 4
  %1080 = load i32* %rx0, align 4
  %1081 = add nsw i32 %1080, 12
  %1082 = load i32* %img_height, align 4
  %1083 = load i32* %img_width, align 4
  %1084 = call zeroext i16 %1077(i16** %1078, i32 %1079, i32 %1081, i32 %1082, i32 %1083)
  %1085 = zext i16 %1084 to i32
  %1086 = sub nsw i32 %1076, %1085
  %1087 = load i32** %d, align 8
  %1088 = getelementptr inbounds i32* %1087, i32 1
  store i32* %1088, i32** %d, align 8
  store i32 %1086, i32* %1087, align 4
  %1089 = load i32* %y0, align 4
  %1090 = add nsw i32 %1089, 2
  %1091 = sext i32 %1090 to i64
  %1092 = load i16*** %1, align 8
  %1093 = getelementptr inbounds i16** %1092, i64 %1091
  %1094 = load i16** %1093, align 8
  store i16* %1094, i16** %orig_line, align 8
  %1095 = load i32* %ry0, align 4
  %1096 = add nsw i32 %1095, 8
  store i32 %1096, i32* %ry, align 4
  %1097 = load i32* %x0, align 4
  %1098 = sext i32 %1097 to i64
  %1099 = load i16** %orig_line, align 8
  %1100 = getelementptr inbounds i16* %1099, i64 %1098
  %1101 = load i16* %1100, align 2
  %1102 = zext i16 %1101 to i32
  %1103 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1104 = load i16*** %ref_pic, align 8
  %1105 = load i32* %ry, align 4
  %1106 = load i32* %rx0, align 4
  %1107 = load i32* %img_height, align 4
  %1108 = load i32* %img_width, align 4
  %1109 = call zeroext i16 %1103(i16** %1104, i32 %1105, i32 %1106, i32 %1107, i32 %1108)
  %1110 = zext i16 %1109 to i32
  %1111 = sub nsw i32 %1102, %1110
  %1112 = load i32** %d, align 8
  %1113 = getelementptr inbounds i32* %1112, i32 1
  store i32* %1113, i32** %d, align 8
  store i32 %1111, i32* %1112, align 4
  %1114 = load i32* %x0, align 4
  %1115 = add nsw i32 %1114, 1
  %1116 = sext i32 %1115 to i64
  %1117 = load i16** %orig_line, align 8
  %1118 = getelementptr inbounds i16* %1117, i64 %1116
  %1119 = load i16* %1118, align 2
  %1120 = zext i16 %1119 to i32
  %1121 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1122 = load i16*** %ref_pic, align 8
  %1123 = load i32* %ry, align 4
  %1124 = load i32* %rx0, align 4
  %1125 = add nsw i32 %1124, 4
  %1126 = load i32* %img_height, align 4
  %1127 = load i32* %img_width, align 4
  %1128 = call zeroext i16 %1121(i16** %1122, i32 %1123, i32 %1125, i32 %1126, i32 %1127)
  %1129 = zext i16 %1128 to i32
  %1130 = sub nsw i32 %1120, %1129
  %1131 = load i32** %d, align 8
  %1132 = getelementptr inbounds i32* %1131, i32 1
  store i32* %1132, i32** %d, align 8
  store i32 %1130, i32* %1131, align 4
  %1133 = load i32* %x0, align 4
  %1134 = add nsw i32 %1133, 2
  %1135 = sext i32 %1134 to i64
  %1136 = load i16** %orig_line, align 8
  %1137 = getelementptr inbounds i16* %1136, i64 %1135
  %1138 = load i16* %1137, align 2
  %1139 = zext i16 %1138 to i32
  %1140 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1141 = load i16*** %ref_pic, align 8
  %1142 = load i32* %ry, align 4
  %1143 = load i32* %rx0, align 4
  %1144 = add nsw i32 %1143, 8
  %1145 = load i32* %img_height, align 4
  %1146 = load i32* %img_width, align 4
  %1147 = call zeroext i16 %1140(i16** %1141, i32 %1142, i32 %1144, i32 %1145, i32 %1146)
  %1148 = zext i16 %1147 to i32
  %1149 = sub nsw i32 %1139, %1148
  %1150 = load i32** %d, align 8
  %1151 = getelementptr inbounds i32* %1150, i32 1
  store i32* %1151, i32** %d, align 8
  store i32 %1149, i32* %1150, align 4
  %1152 = load i32* %x0, align 4
  %1153 = add nsw i32 %1152, 3
  %1154 = sext i32 %1153 to i64
  %1155 = load i16** %orig_line, align 8
  %1156 = getelementptr inbounds i16* %1155, i64 %1154
  %1157 = load i16* %1156, align 2
  %1158 = zext i16 %1157 to i32
  %1159 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1160 = load i16*** %ref_pic, align 8
  %1161 = load i32* %ry, align 4
  %1162 = load i32* %rx0, align 4
  %1163 = add nsw i32 %1162, 12
  %1164 = load i32* %img_height, align 4
  %1165 = load i32* %img_width, align 4
  %1166 = call zeroext i16 %1159(i16** %1160, i32 %1161, i32 %1163, i32 %1164, i32 %1165)
  %1167 = zext i16 %1166 to i32
  %1168 = sub nsw i32 %1158, %1167
  %1169 = load i32** %d, align 8
  %1170 = getelementptr inbounds i32* %1169, i32 1
  store i32* %1170, i32** %d, align 8
  store i32 %1168, i32* %1169, align 4
  %1171 = load i32* %y0, align 4
  %1172 = add nsw i32 %1171, 3
  %1173 = sext i32 %1172 to i64
  %1174 = load i16*** %1, align 8
  %1175 = getelementptr inbounds i16** %1174, i64 %1173
  %1176 = load i16** %1175, align 8
  store i16* %1176, i16** %orig_line, align 8
  %1177 = load i32* %ry0, align 4
  %1178 = add nsw i32 %1177, 12
  store i32 %1178, i32* %ry, align 4
  %1179 = load i32* %x0, align 4
  %1180 = sext i32 %1179 to i64
  %1181 = load i16** %orig_line, align 8
  %1182 = getelementptr inbounds i16* %1181, i64 %1180
  %1183 = load i16* %1182, align 2
  %1184 = zext i16 %1183 to i32
  %1185 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1186 = load i16*** %ref_pic, align 8
  %1187 = load i32* %ry, align 4
  %1188 = load i32* %rx0, align 4
  %1189 = load i32* %img_height, align 4
  %1190 = load i32* %img_width, align 4
  %1191 = call zeroext i16 %1185(i16** %1186, i32 %1187, i32 %1188, i32 %1189, i32 %1190)
  %1192 = zext i16 %1191 to i32
  %1193 = sub nsw i32 %1184, %1192
  %1194 = load i32** %d, align 8
  %1195 = getelementptr inbounds i32* %1194, i32 1
  store i32* %1195, i32** %d, align 8
  store i32 %1193, i32* %1194, align 4
  %1196 = load i32* %x0, align 4
  %1197 = add nsw i32 %1196, 1
  %1198 = sext i32 %1197 to i64
  %1199 = load i16** %orig_line, align 8
  %1200 = getelementptr inbounds i16* %1199, i64 %1198
  %1201 = load i16* %1200, align 2
  %1202 = zext i16 %1201 to i32
  %1203 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1204 = load i16*** %ref_pic, align 8
  %1205 = load i32* %ry, align 4
  %1206 = load i32* %rx0, align 4
  %1207 = add nsw i32 %1206, 4
  %1208 = load i32* %img_height, align 4
  %1209 = load i32* %img_width, align 4
  %1210 = call zeroext i16 %1203(i16** %1204, i32 %1205, i32 %1207, i32 %1208, i32 %1209)
  %1211 = zext i16 %1210 to i32
  %1212 = sub nsw i32 %1202, %1211
  %1213 = load i32** %d, align 8
  %1214 = getelementptr inbounds i32* %1213, i32 1
  store i32* %1214, i32** %d, align 8
  store i32 %1212, i32* %1213, align 4
  %1215 = load i32* %x0, align 4
  %1216 = add nsw i32 %1215, 2
  %1217 = sext i32 %1216 to i64
  %1218 = load i16** %orig_line, align 8
  %1219 = getelementptr inbounds i16* %1218, i64 %1217
  %1220 = load i16* %1219, align 2
  %1221 = zext i16 %1220 to i32
  %1222 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1223 = load i16*** %ref_pic, align 8
  %1224 = load i32* %ry, align 4
  %1225 = load i32* %rx0, align 4
  %1226 = add nsw i32 %1225, 8
  %1227 = load i32* %img_height, align 4
  %1228 = load i32* %img_width, align 4
  %1229 = call zeroext i16 %1222(i16** %1223, i32 %1224, i32 %1226, i32 %1227, i32 %1228)
  %1230 = zext i16 %1229 to i32
  %1231 = sub nsw i32 %1221, %1230
  %1232 = load i32** %d, align 8
  %1233 = getelementptr inbounds i32* %1232, i32 1
  store i32* %1233, i32** %d, align 8
  store i32 %1231, i32* %1232, align 4
  %1234 = load i32* %x0, align 4
  %1235 = add nsw i32 %1234, 3
  %1236 = sext i32 %1235 to i64
  %1237 = load i16** %orig_line, align 8
  %1238 = getelementptr inbounds i16* %1237, i64 %1236
  %1239 = load i16* %1238, align 2
  %1240 = zext i16 %1239 to i32
  %1241 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1242 = load i16*** %ref_pic, align 8
  %1243 = load i32* %ry, align 4
  %1244 = load i32* %rx0, align 4
  %1245 = add nsw i32 %1244, 12
  %1246 = load i32* %img_height, align 4
  %1247 = load i32* %img_width, align 4
  %1248 = call zeroext i16 %1241(i16** %1242, i32 %1243, i32 %1245, i32 %1246, i32 %1247)
  %1249 = zext i16 %1248 to i32
  %1250 = sub nsw i32 %1240, %1249
  %1251 = load i32** %d, align 8
  store i32 %1250, i32* %1251, align 4
  %1252 = load %struct.InputParameters** @input, align 8
  %1253 = getelementptr inbounds %struct.InputParameters* %1252, i32 0, i32 123
  %1254 = load i32* %1253, align 4
  %1255 = icmp ne i32 %1254, 0
  br i1 %1255, label %1268, label %1256

; <label>:1256                                    ; preds = %919
  %1257 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  %1258 = load %struct.InputParameters** @input, align 8
  %1259 = getelementptr inbounds %struct.InputParameters* %1258, i32 0, i32 6
  %1260 = load i32* %1259, align 4
  %1261 = call i32 @SATD(i32* %1257, i32 %1260)
  %1262 = load i32* %mcost, align 4
  %1263 = add nsw i32 %1262, %1261
  store i32 %1263, i32* %mcost, align 4
  %1264 = load i32* %13, align 4
  %1265 = icmp sgt i32 %1263, %1264
  br i1 %1265, label %1266, label %1267

; <label>:1266                                    ; preds = %1256
  store i32 1, i32* %abort_search, align 4
  br label %1305

; <label>:1267                                    ; preds = %1256
  br label %1301

; <label>:1268                                    ; preds = %919
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %1269

; <label>:1269                                    ; preds = %1297, %1268
  %1270 = load i32* %j, align 4
  %1271 = icmp slt i32 %1270, 4
  br i1 %1271, label %1272, label %1300

; <label>:1272                                    ; preds = %1269
  store i32 0, i32* %i, align 4
  br label %1273

; <label>:1273                                    ; preds = %1291, %1272
  %1274 = load i32* %i, align 4
  %1275 = icmp slt i32 %1274, 4
  br i1 %1275, label %1276, label %1296

; <label>:1276                                    ; preds = %1273
  %1277 = load i32* %k, align 4
  %1278 = sext i32 %1277 to i64
  %1279 = getelementptr inbounds [16 x i32]* %diff, i32 0, i64 %1278
  %1280 = load i32* %1279, align 4
  %1281 = load i32* %x0, align 4
  %1282 = load i32* %i, align 4
  %1283 = add nsw i32 %1281, %1282
  %1284 = sext i32 %1283 to i64
  %1285 = load i32* %y0, align 4
  %1286 = load i32* %j, align 4
  %1287 = add nsw i32 %1285, %1286
  %1288 = sext i32 %1287 to i64
  %1289 = getelementptr inbounds [16 x [16 x i32]]* %curr_diff, i32 0, i64 %1288
  %1290 = getelementptr inbounds [16 x i32]* %1289, i32 0, i64 %1284
  store i32 %1280, i32* %1290, align 4
  br label %1291

; <label>:1291                                    ; preds = %1276
  %1292 = load i32* %i, align 4
  %1293 = add nsw i32 %1292, 1
  store i32 %1293, i32* %i, align 4
  %1294 = load i32* %k, align 4
  %1295 = add nsw i32 %1294, 1
  store i32 %1295, i32* %k, align 4
  br label %1273

; <label>:1296                                    ; preds = %1273
  br label %1297

; <label>:1297                                    ; preds = %1296
  %1298 = load i32* %j, align 4
  %1299 = add nsw i32 %1298, 1
  store i32 %1299, i32* %j, align 4
  br label %1269

; <label>:1300                                    ; preds = %1269
  br label %1301

; <label>:1301                                    ; preds = %1300, %1267
  br label %1302

; <label>:1302                                    ; preds = %1301
  %1303 = load i32* %x0, align 4
  %1304 = add nsw i32 %1303, 4
  store i32 %1304, i32* %x0, align 4
  br label %915

; <label>:1305                                    ; preds = %1266, %915
  br label %1306

; <label>:1306                                    ; preds = %1305
  %1307 = load i32* %y0, align 4
  %1308 = add nsw i32 %1307, 4
  store i32 %1308, i32* %y0, align 4
  br label %898

; <label>:1309                                    ; preds = %906
  %1310 = load %struct.InputParameters** @input, align 8
  %1311 = getelementptr inbounds %struct.InputParameters* %1310, i32 0, i32 123
  %1312 = load i32* %1311, align 4
  %1313 = icmp ne i32 %1312, 0
  br i1 %1313, label %1314, label %1323

; <label>:1314                                    ; preds = %1309
  %1315 = getelementptr inbounds [16 x [16 x i32]]* %curr_diff, i32 0, i32 0
  %1316 = load %struct.InputParameters** @input, align 8
  %1317 = getelementptr inbounds %struct.InputParameters* %1316, i32 0, i32 6
  %1318 = load i32* %1317, align 4
  %1319 = load i32* %6, align 4
  %1320 = call i32 @find_SATD([16 x i32]* %1315, i32 %1318, i32 %1319)
  %1321 = load i32* %mcost, align 4
  %1322 = add nsw i32 %1321, %1320
  store i32 %1322, i32* %mcost, align 4
  br label %1323

; <label>:1323                                    ; preds = %1314, %1309
  %1324 = load i32* %mcost, align 4
  %1325 = load i32* %13, align 4
  %1326 = icmp slt i32 %1324, %1325
  br i1 %1326, label %1327, label %1330

; <label>:1327                                    ; preds = %1323
  %1328 = load i32* %mcost, align 4
  store i32 %1328, i32* %13, align 4
  %1329 = load i32* %pos, align 4
  store i32 %1329, i32* %best_pos, align 4
  br label %1330

; <label>:1330                                    ; preds = %1327, %1323
  br label %1331

; <label>:1331                                    ; preds = %1330, %896
  %1332 = load i32* %pos, align 4
  %1333 = add nsw i32 %1332, 1
  store i32 %1333, i32* %pos, align 4
  br label %846

; <label>:1334                                    ; preds = %846
  %1335 = load i32* %best_pos, align 4
  %1336 = icmp ne i32 %1335, 0
  br i1 %1336, label %1337, label %1358

; <label>:1337                                    ; preds = %1334
  %1338 = load i32* %best_pos, align 4
  %1339 = sext i32 %1338 to i64
  %1340 = load i32** @spiral_search_x, align 8
  %1341 = getelementptr inbounds i32* %1340, i64 %1339
  %1342 = load i32* %1341, align 4
  %1343 = load i16** %9, align 8
  %1344 = load i16* %1343, align 2
  %1345 = sext i16 %1344 to i32
  %1346 = add nsw i32 %1345, %1342
  %1347 = trunc i32 %1346 to i16
  store i16 %1347, i16* %1343, align 2
  %1348 = load i32* %best_pos, align 4
  %1349 = sext i32 %1348 to i64
  %1350 = load i32** @spiral_search_y, align 8
  %1351 = getelementptr inbounds i32* %1350, i64 %1349
  %1352 = load i32* %1351, align 4
  %1353 = load i16** %10, align 8
  %1354 = load i16* %1353, align 2
  %1355 = sext i16 %1354 to i32
  %1356 = add nsw i32 %1355, %1352
  %1357 = trunc i32 %1356 to i16
  store i16 %1357, i16* %1353, align 2
  br label %1358

; <label>:1358                                    ; preds = %1337, %1334
  %1359 = load i32* %13, align 4
  ret i32 %1359
}

declare zeroext i16 @FastPelY_14(i16**, i32, i32, i32, i32) #2

declare zeroext i16 @UMVPelY_14(i16**, i32, i32, i32, i32) #2

; Function Attrs: nounwind uwtable
define i32 @FullPelBlockMotionBiPred(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i32 %iteration, i16 signext %pred_mv_x1, i16 signext %pred_mv_y1, i16 signext %pred_mv_x2, i16 signext %pred_mv_y2, i16* %mv_x, i16* %mv_y, i16* %s_mv_x, i16* %s_mv_y, i32 %search_range, i32 %min_mcost, double %lambda) #0 {
  %1 = alloca i16**, align 8
  %2 = alloca i16, align 2
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca i16*, align 8
  %13 = alloca i16*, align 8
  %14 = alloca i16*, align 8
  %15 = alloca i16*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca double, align 8
  %pos = alloca i32, align 4
  %cand_x = alloca i32, align 4
  %cand_y = alloca i32, align 4
  %y = alloca i32, align 4
  %x4 = alloca i32, align 4
  %mcost = alloca i32, align 4
  %orig_line = alloca i16*, align 8
  %ref2_line = alloca i16*, align 8
  %ref1_line = alloca i16*, align 8
  %get_ref_line1 = alloca i16* (i32, i16*, i32, i32, i32, i32)*, align 8
  %get_ref_line2 = alloca i16* (i32, i16*, i32, i32, i32, i32)*, align 8
  %list_offset = alloca i32, align 4
  %ref1_pic = alloca i16*, align 8
  %ref2_pic = alloca i16*, align 8
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %lambda_factor = alloca i32, align 4
  %blocksize_y = alloca i32, align 4
  %blocksize_x = alloca i32, align 4
  %blocksize_x4 = alloca i32, align 4
  %pred_x1 = alloca i32, align 4
  %pred_y1 = alloca i32, align 4
  %pred_x2 = alloca i32, align 4
  %pred_y2 = alloca i32, align 4
  %center_x = alloca i16, align 2
  %center_y = alloca i16, align 2
  %ref1_center_x = alloca i16, align 2
  %ref1_center_y = alloca i16, align 2
  %bi_diff = alloca i32, align 4
  %apply_weights = alloca i16, align 2
  %weightSpic = alloca i16, align 2
  %weightRpic = alloca i16, align 2
  %offsetSpic = alloca i16, align 2
  %offsetRpic = alloca i16, align 2
  %weightedpel = alloca i16, align 2
  %pixel1 = alloca i16, align 2
  %pixel2 = alloca i16, align 2
  %offsetBi = alloca i16, align 2
  store i16** %orig_pic, i16*** %1, align 8
  store i16 %ref, i16* %2, align 2
  store i32 %list, i32* %3, align 4
  store i32 %pic_pix_x, i32* %4, align 4
  store i32 %pic_pix_y, i32* %5, align 4
  store i32 %blocktype, i32* %6, align 4
  store i32 %iteration, i32* %7, align 4
  store i16 %pred_mv_x1, i16* %8, align 2
  store i16 %pred_mv_y1, i16* %9, align 2
  store i16 %pred_mv_x2, i16* %10, align 2
  store i16 %pred_mv_y2, i16* %11, align 2
  store i16* %mv_x, i16** %12, align 8
  store i16* %mv_y, i16** %13, align 8
  store i16* %s_mv_x, i16** %14, align 8
  store i16* %s_mv_y, i16** %15, align 8
  store i32 %search_range, i32* %16, align 4
  store i32 %min_mcost, i32* %17, align 4
  store double %lambda, double* %18, align 8
  %19 = load %struct.ImageParameters** @img, align 8
  %20 = getelementptr inbounds %struct.ImageParameters* %19, i32 0, i32 90
  %21 = load i32* %20, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %42

; <label>:23                                      ; preds = %0
  %24 = load %struct.ImageParameters** @img, align 8
  %25 = getelementptr inbounds %struct.ImageParameters* %24, i32 0, i32 3
  %26 = load i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = load %struct.ImageParameters** @img, align 8
  %29 = getelementptr inbounds %struct.ImageParameters* %28, i32 0, i32 51
  %30 = load %struct.macroblock** %29, align 8
  %31 = getelementptr inbounds %struct.macroblock* %30, i64 %27
  %32 = getelementptr inbounds %struct.macroblock* %31, i32 0, i32 22
  %33 = load i32* %32, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %42

; <label>:35                                      ; preds = %23
  %36 = load %struct.ImageParameters** @img, align 8
  %37 = getelementptr inbounds %struct.ImageParameters* %36, i32 0, i32 3
  %38 = load i32* %37, align 4
  %39 = srem i32 %38, 2
  %40 = icmp ne i32 %39, 0
  %41 = select i1 %40, i32 4, i32 2
  br label %43

; <label>:42                                      ; preds = %23, %0
  br label %43

; <label>:43                                      ; preds = %42, %35
  %44 = phi i32 [ %41, %35 ], [ 0, %42 ]
  store i32 %44, i32* %list_offset, align 4
  %45 = load i16* %2, align 2
  %46 = sext i16 %45 to i64
  %47 = load i32* %3, align 4
  %48 = load i32* %list_offset, align 4
  %49 = add nsw i32 %47, %48
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %50
  %52 = load %struct.storable_picture*** %51, align 8
  %53 = getelementptr inbounds %struct.storable_picture** %52, i64 %46
  %54 = load %struct.storable_picture** %53, align 8
  %55 = getelementptr inbounds %struct.storable_picture* %54, i32 0, i32 26
  %56 = load i16** %55, align 8
  store i16* %56, i16** %ref1_pic, align 8
  %57 = load i32* %3, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %62

; <label>:59                                      ; preds = %43
  %60 = load i32* %list_offset, align 4
  %61 = add nsw i32 1, %60
  br label %64

; <label>:62                                      ; preds = %43
  %63 = load i32* %list_offset, align 4
  br label %64

; <label>:64                                      ; preds = %62, %59
  %65 = phi i32 [ %61, %59 ], [ %63, %62 ]
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %66
  %68 = load %struct.storable_picture*** %67, align 8
  %69 = getelementptr inbounds %struct.storable_picture** %68, i64 0
  %70 = load %struct.storable_picture** %69, align 8
  %71 = getelementptr inbounds %struct.storable_picture* %70, i32 0, i32 26
  %72 = load i16** %71, align 8
  store i16* %72, i16** %ref2_pic, align 8
  %73 = load i16* %2, align 2
  %74 = sext i16 %73 to i64
  %75 = load i32* %3, align 4
  %76 = load i32* %list_offset, align 4
  %77 = add nsw i32 %75, %76
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %78
  %80 = load %struct.storable_picture*** %79, align 8
  %81 = getelementptr inbounds %struct.storable_picture** %80, i64 %74
  %82 = load %struct.storable_picture** %81, align 8
  %83 = getelementptr inbounds %struct.storable_picture* %82, i32 0, i32 18
  %84 = load i32* %83, align 4
  store i32 %84, i32* %img_width, align 4
  %85 = load i16* %2, align 2
  %86 = sext i16 %85 to i64
  %87 = load i32* %3, align 4
  %88 = load i32* %list_offset, align 4
  %89 = add nsw i32 %87, %88
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %90
  %92 = load %struct.storable_picture*** %91, align 8
  %93 = getelementptr inbounds %struct.storable_picture** %92, i64 %86
  %94 = load %struct.storable_picture** %93, align 8
  %95 = getelementptr inbounds %struct.storable_picture* %94, i32 0, i32 19
  %96 = load i32* %95, align 4
  store i32 %96, i32* %img_height, align 4
  store i32 0, i32* %best_pos, align 4
  %97 = load i32* %16, align 4
  %98 = mul nsw i32 2, %97
  %99 = add nsw i32 %98, 1
  %100 = load i32* %16, align 4
  %101 = mul nsw i32 2, %100
  %102 = add nsw i32 %101, 1
  %103 = mul nsw i32 %99, %102
  store i32 %103, i32* %max_pos, align 4
  %104 = load double* %18, align 8
  %105 = fmul double 6.553600e+04, %104
  %106 = fadd double %105, 5.000000e-01
  %107 = fptosi double %106 to i32
  store i32 %107, i32* %lambda_factor, align 4
  %108 = load i32* %6, align 4
  %109 = sext i32 %108 to i64
  %110 = load %struct.InputParameters** @input, align 8
  %111 = getelementptr inbounds %struct.InputParameters* %110, i32 0, i32 20
  %112 = getelementptr inbounds [8 x [2 x i32]]* %111, i32 0, i64 %109
  %113 = getelementptr inbounds [2 x i32]* %112, i32 0, i64 1
  %114 = load i32* %113, align 4
  store i32 %114, i32* %blocksize_y, align 4
  %115 = load i32* %6, align 4
  %116 = sext i32 %115 to i64
  %117 = load %struct.InputParameters** @input, align 8
  %118 = getelementptr inbounds %struct.InputParameters* %117, i32 0, i32 20
  %119 = getelementptr inbounds [8 x [2 x i32]]* %118, i32 0, i64 %116
  %120 = getelementptr inbounds [2 x i32]* %119, i32 0, i64 0
  %121 = load i32* %120, align 4
  store i32 %121, i32* %blocksize_x, align 4
  %122 = load i32* %blocksize_x, align 4
  %123 = ashr i32 %122, 2
  store i32 %123, i32* %blocksize_x4, align 4
  %124 = load i32* %4, align 4
  %125 = shl i32 %124, 2
  %126 = load i16* %8, align 2
  %127 = sext i16 %126 to i32
  %128 = add nsw i32 %125, %127
  store i32 %128, i32* %pred_x1, align 4
  %129 = load i32* %5, align 4
  %130 = shl i32 %129, 2
  %131 = load i16* %9, align 2
  %132 = sext i16 %131 to i32
  %133 = add nsw i32 %130, %132
  store i32 %133, i32* %pred_y1, align 4
  %134 = load i32* %4, align 4
  %135 = shl i32 %134, 2
  %136 = load i16* %10, align 2
  %137 = sext i16 %136 to i32
  %138 = add nsw i32 %135, %137
  store i32 %138, i32* %pred_x2, align 4
  %139 = load i32* %5, align 4
  %140 = shl i32 %139, 2
  %141 = load i16* %11, align 2
  %142 = sext i16 %141 to i32
  %143 = add nsw i32 %140, %142
  store i32 %143, i32* %pred_y2, align 4
  %144 = load i32* %4, align 4
  %145 = load i16** %12, align 8
  %146 = load i16* %145, align 2
  %147 = sext i16 %146 to i32
  %148 = add nsw i32 %144, %147
  %149 = trunc i32 %148 to i16
  store i16 %149, i16* %center_x, align 2
  %150 = load i32* %5, align 4
  %151 = load i16** %13, align 8
  %152 = load i16* %151, align 2
  %153 = sext i16 %152 to i32
  %154 = add nsw i32 %150, %153
  %155 = trunc i32 %154 to i16
  store i16 %155, i16* %center_y, align 2
  %156 = load i32* %4, align 4
  %157 = load i16** %14, align 8
  %158 = load i16* %157, align 2
  %159 = sext i16 %158 to i32
  %160 = add nsw i32 %156, %159
  %161 = trunc i32 %160 to i16
  store i16 %161, i16* %ref1_center_x, align 2
  %162 = load i32* %5, align 4
  %163 = load i16** %15, align 8
  %164 = load i16* %163, align 2
  %165 = sext i16 %164 to i32
  %166 = add nsw i32 %162, %165
  %167 = trunc i32 %166 to i16
  store i16 %167, i16* %ref1_center_y, align 2
  %168 = load %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %169 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %168, i32 0, i32 20
  %170 = load i32* %169, align 4
  %171 = icmp ugt i32 %170, 0
  %172 = zext i1 %171 to i32
  %173 = trunc i32 %172 to i16
  store i16 %173, i16* %apply_weights, align 2
  %174 = load i16* %apply_weights, align 2
  %175 = sext i16 %174 to i32
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %177, label %211

; <label>:177                                     ; preds = %64
  %178 = load i32* %3, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %194

; <label>:180                                     ; preds = %177
  %181 = load i16* %2, align 2
  %182 = sext i16 %181 to i64
  %183 = load i32* %list_offset, align 4
  %184 = sext i32 %183 to i64
  %185 = load i32***** @wbp_weight, align 8
  %186 = getelementptr inbounds i32**** %185, i64 %184
  %187 = load i32**** %186, align 8
  %188 = getelementptr inbounds i32*** %187, i64 %182
  %189 = load i32*** %188, align 8
  %190 = getelementptr inbounds i32** %189, i64 0
  %191 = load i32** %190, align 8
  %192 = getelementptr inbounds i32* %191, i64 0
  %193 = load i32* %192, align 4
  br label %209

; <label>:194                                     ; preds = %177
  %195 = load i16* %2, align 2
  %196 = sext i16 %195 to i64
  %197 = load i32* %list_offset, align 4
  %198 = add nsw i32 %197, 1
  %199 = sext i32 %198 to i64
  %200 = load i32***** @wbp_weight, align 8
  %201 = getelementptr inbounds i32**** %200, i64 %199
  %202 = load i32**** %201, align 8
  %203 = getelementptr inbounds i32*** %202, i64 0
  %204 = load i32*** %203, align 8
  %205 = getelementptr inbounds i32** %204, i64 %196
  %206 = load i32** %205, align 8
  %207 = getelementptr inbounds i32* %206, i64 0
  %208 = load i32* %207, align 4
  br label %209

; <label>:209                                     ; preds = %194, %180
  %210 = phi i32 [ %193, %180 ], [ %208, %194 ]
  br label %214

; <label>:211                                     ; preds = %64
  %212 = load i32* @luma_log_weight_denom, align 4
  %213 = shl i32 1, %212
  br label %214

; <label>:214                                     ; preds = %211, %209
  %215 = phi i32 [ %210, %209 ], [ %213, %211 ]
  %216 = trunc i32 %215 to i16
  store i16 %216, i16* %weightSpic, align 2
  %217 = load i16* %apply_weights, align 2
  %218 = sext i16 %217 to i32
  %219 = icmp ne i32 %218, 0
  br i1 %219, label %220, label %254

; <label>:220                                     ; preds = %214
  %221 = load i32* %3, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %238

; <label>:223                                     ; preds = %220
  %224 = load i16* %2, align 2
  %225 = sext i16 %224 to i64
  %226 = load i32* %list_offset, align 4
  %227 = add nsw i32 %226, 1
  %228 = sext i32 %227 to i64
  %229 = load i32***** @wbp_weight, align 8
  %230 = getelementptr inbounds i32**** %229, i64 %228
  %231 = load i32**** %230, align 8
  %232 = getelementptr inbounds i32*** %231, i64 %225
  %233 = load i32*** %232, align 8
  %234 = getelementptr inbounds i32** %233, i64 0
  %235 = load i32** %234, align 8
  %236 = getelementptr inbounds i32* %235, i64 0
  %237 = load i32* %236, align 4
  br label %252

; <label>:238                                     ; preds = %220
  %239 = load i16* %2, align 2
  %240 = sext i16 %239 to i64
  %241 = load i32* %list_offset, align 4
  %242 = sext i32 %241 to i64
  %243 = load i32***** @wbp_weight, align 8
  %244 = getelementptr inbounds i32**** %243, i64 %242
  %245 = load i32**** %244, align 8
  %246 = getelementptr inbounds i32*** %245, i64 0
  %247 = load i32*** %246, align 8
  %248 = getelementptr inbounds i32** %247, i64 %240
  %249 = load i32** %248, align 8
  %250 = getelementptr inbounds i32* %249, i64 0
  %251 = load i32* %250, align 4
  br label %252

; <label>:252                                     ; preds = %238, %223
  %253 = phi i32 [ %237, %223 ], [ %251, %238 ]
  br label %257

; <label>:254                                     ; preds = %214
  %255 = load i32* @luma_log_weight_denom, align 4
  %256 = shl i32 1, %255
  br label %257

; <label>:257                                     ; preds = %254, %252
  %258 = phi i32 [ %253, %252 ], [ %256, %254 ]
  %259 = trunc i32 %258 to i16
  store i16 %259, i16* %weightRpic, align 2
  %260 = load i16* %apply_weights, align 2
  %261 = sext i16 %260 to i32
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %263, label %291

; <label>:263                                     ; preds = %257
  %264 = load i32* %3, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %278

; <label>:266                                     ; preds = %263
  %267 = load i16* %2, align 2
  %268 = sext i16 %267 to i64
  %269 = load i32* %list_offset, align 4
  %270 = sext i32 %269 to i64
  %271 = load i32**** @wp_offset, align 8
  %272 = getelementptr inbounds i32*** %271, i64 %270
  %273 = load i32*** %272, align 8
  %274 = getelementptr inbounds i32** %273, i64 %268
  %275 = load i32** %274, align 8
  %276 = getelementptr inbounds i32* %275, i64 0
  %277 = load i32* %276, align 4
  br label %289

; <label>:278                                     ; preds = %263
  %279 = load i32* %list_offset, align 4
  %280 = add nsw i32 %279, 1
  %281 = sext i32 %280 to i64
  %282 = load i32**** @wp_offset, align 8
  %283 = getelementptr inbounds i32*** %282, i64 %281
  %284 = load i32*** %283, align 8
  %285 = getelementptr inbounds i32** %284, i64 0
  %286 = load i32** %285, align 8
  %287 = getelementptr inbounds i32* %286, i64 0
  %288 = load i32* %287, align 4
  br label %289

; <label>:289                                     ; preds = %278, %266
  %290 = phi i32 [ %277, %266 ], [ %288, %278 ]
  br label %292

; <label>:291                                     ; preds = %257
  br label %292

; <label>:292                                     ; preds = %291, %289
  %293 = phi i32 [ %290, %289 ], [ 0, %291 ]
  %294 = trunc i32 %293 to i16
  store i16 %294, i16* %offsetSpic, align 2
  %295 = load i16* %apply_weights, align 2
  %296 = sext i16 %295 to i32
  %297 = icmp ne i32 %296, 0
  br i1 %297, label %298, label %326

; <label>:298                                     ; preds = %292
  %299 = load i32* %3, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %314

; <label>:301                                     ; preds = %298
  %302 = load i16* %2, align 2
  %303 = sext i16 %302 to i64
  %304 = load i32* %list_offset, align 4
  %305 = add nsw i32 %304, 1
  %306 = sext i32 %305 to i64
  %307 = load i32**** @wp_offset, align 8
  %308 = getelementptr inbounds i32*** %307, i64 %306
  %309 = load i32*** %308, align 8
  %310 = getelementptr inbounds i32** %309, i64 %303
  %311 = load i32** %310, align 8
  %312 = getelementptr inbounds i32* %311, i64 0
  %313 = load i32* %312, align 4
  br label %324

; <label>:314                                     ; preds = %298
  %315 = load i32* %list_offset, align 4
  %316 = sext i32 %315 to i64
  %317 = load i32**** @wp_offset, align 8
  %318 = getelementptr inbounds i32*** %317, i64 %316
  %319 = load i32*** %318, align 8
  %320 = getelementptr inbounds i32** %319, i64 0
  %321 = load i32** %320, align 8
  %322 = getelementptr inbounds i32* %321, i64 0
  %323 = load i32* %322, align 4
  br label %324

; <label>:324                                     ; preds = %314, %301
  %325 = phi i32 [ %313, %301 ], [ %323, %314 ]
  br label %327

; <label>:326                                     ; preds = %292
  br label %327

; <label>:327                                     ; preds = %326, %324
  %328 = phi i32 [ %325, %324 ], [ 0, %326 ]
  %329 = trunc i32 %328 to i16
  store i16 %329, i16* %offsetRpic, align 2
  %330 = load i16* %offsetRpic, align 2
  %331 = sext i16 %330 to i32
  %332 = load i16* %offsetSpic, align 2
  %333 = sext i16 %332 to i32
  %334 = add nsw i32 %331, %333
  %335 = add nsw i32 %334, 1
  %336 = ashr i32 %335, 1
  %337 = trunc i32 %336 to i16
  store i16 %337, i16* %offsetBi, align 2
  %338 = load i16* %center_x, align 2
  %339 = sext i16 %338 to i32
  %340 = load i32* %16, align 4
  %341 = icmp sgt i32 %339, %340
  br i1 %341, label %342, label %372

; <label>:342                                     ; preds = %327
  %343 = load i16* %center_x, align 2
  %344 = sext i16 %343 to i32
  %345 = load %struct.ImageParameters** @img, align 8
  %346 = getelementptr inbounds %struct.ImageParameters* %345, i32 0, i32 13
  %347 = load i32* %346, align 4
  %348 = sub nsw i32 %347, 1
  %349 = load i32* %16, align 4
  %350 = sub nsw i32 %348, %349
  %351 = load i32* %blocksize_x, align 4
  %352 = sub nsw i32 %350, %351
  %353 = icmp slt i32 %344, %352
  br i1 %353, label %354, label %372

; <label>:354                                     ; preds = %342
  %355 = load i16* %center_y, align 2
  %356 = sext i16 %355 to i32
  %357 = load i32* %16, align 4
  %358 = icmp sgt i32 %356, %357
  br i1 %358, label %359, label %372

; <label>:359                                     ; preds = %354
  %360 = load i16* %center_y, align 2
  %361 = sext i16 %360 to i32
  %362 = load %struct.ImageParameters** @img, align 8
  %363 = getelementptr inbounds %struct.ImageParameters* %362, i32 0, i32 15
  %364 = load i32* %363, align 4
  %365 = sub nsw i32 %364, 1
  %366 = load i32* %16, align 4
  %367 = sub nsw i32 %365, %366
  %368 = load i32* %blocksize_y, align 4
  %369 = sub nsw i32 %367, %368
  %370 = icmp slt i32 %361, %369
  br i1 %370, label %371, label %372

; <label>:371                                     ; preds = %359
  store i16* (i32, i16*, i32, i32, i32, i32)* @FastLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  br label %373

; <label>:372                                     ; preds = %359, %354, %342, %327
  store i16* (i32, i16*, i32, i32, i32, i32)* @UMVLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  br label %373

; <label>:373                                     ; preds = %372, %371
  %374 = load i16* %ref1_center_x, align 2
  %375 = sext i16 %374 to i32
  %376 = load i32* %16, align 4
  %377 = icmp sgt i32 %375, %376
  br i1 %377, label %378, label %408

; <label>:378                                     ; preds = %373
  %379 = load i16* %ref1_center_x, align 2
  %380 = sext i16 %379 to i32
  %381 = load %struct.ImageParameters** @img, align 8
  %382 = getelementptr inbounds %struct.ImageParameters* %381, i32 0, i32 13
  %383 = load i32* %382, align 4
  %384 = sub nsw i32 %383, 1
  %385 = load i32* %16, align 4
  %386 = sub nsw i32 %384, %385
  %387 = load i32* %blocksize_x, align 4
  %388 = sub nsw i32 %386, %387
  %389 = icmp slt i32 %380, %388
  br i1 %389, label %390, label %408

; <label>:390                                     ; preds = %378
  %391 = load i16* %ref1_center_y, align 2
  %392 = sext i16 %391 to i32
  %393 = load i32* %16, align 4
  %394 = icmp sgt i32 %392, %393
  br i1 %394, label %395, label %408

; <label>:395                                     ; preds = %390
  %396 = load i16* %ref1_center_y, align 2
  %397 = sext i16 %396 to i32
  %398 = load %struct.ImageParameters** @img, align 8
  %399 = getelementptr inbounds %struct.ImageParameters* %398, i32 0, i32 15
  %400 = load i32* %399, align 4
  %401 = sub nsw i32 %400, 1
  %402 = load i32* %16, align 4
  %403 = sub nsw i32 %401, %402
  %404 = load i32* %blocksize_y, align 4
  %405 = sub nsw i32 %403, %404
  %406 = icmp slt i32 %397, %405
  br i1 %406, label %407, label %408

; <label>:407                                     ; preds = %395
  store i16* (i32, i16*, i32, i32, i32, i32)* @FastLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  br label %409

; <label>:408                                     ; preds = %395, %390, %378, %373
  store i16* (i32, i16*, i32, i32, i32, i32)* @UMVLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  br label %409

; <label>:409                                     ; preds = %408, %407
  store i32 0, i32* %pos, align 4
  br label %410

; <label>:410                                     ; preds = %1036, %409
  %411 = load i32* %pos, align 4
  %412 = load i32* %max_pos, align 4
  %413 = icmp slt i32 %411, %412
  br i1 %413, label %414, label %1039

; <label>:414                                     ; preds = %410
  %415 = load i16* %center_x, align 2
  %416 = sext i16 %415 to i32
  %417 = load i32* %pos, align 4
  %418 = sext i32 %417 to i64
  %419 = load i32** @spiral_search_x, align 8
  %420 = getelementptr inbounds i32* %419, i64 %418
  %421 = load i32* %420, align 4
  %422 = add nsw i32 %416, %421
  store i32 %422, i32* %cand_x, align 4
  %423 = load i16* %center_y, align 2
  %424 = sext i16 %423 to i32
  %425 = load i32* %pos, align 4
  %426 = sext i32 %425 to i64
  %427 = load i32** @spiral_search_y, align 8
  %428 = getelementptr inbounds i32* %427, i64 %426
  %429 = load i32* %428, align 4
  %430 = add nsw i32 %424, %429
  store i32 %430, i32* %cand_y, align 4
  %431 = load i32* %lambda_factor, align 4
  %432 = load i16* %ref1_center_x, align 2
  %433 = sext i16 %432 to i32
  %434 = shl i32 %433, 2
  %435 = load i32* %pred_x1, align 4
  %436 = sub nsw i32 %434, %435
  %437 = sext i32 %436 to i64
  %438 = load i32** @mvbits, align 8
  %439 = getelementptr inbounds i32* %438, i64 %437
  %440 = load i32* %439, align 4
  %441 = load i16* %ref1_center_y, align 2
  %442 = sext i16 %441 to i32
  %443 = shl i32 %442, 2
  %444 = load i32* %pred_y1, align 4
  %445 = sub nsw i32 %443, %444
  %446 = sext i32 %445 to i64
  %447 = load i32** @mvbits, align 8
  %448 = getelementptr inbounds i32* %447, i64 %446
  %449 = load i32* %448, align 4
  %450 = add nsw i32 %440, %449
  %451 = mul nsw i32 %431, %450
  %452 = ashr i32 %451, 16
  store i32 %452, i32* %mcost, align 4
  %453 = load i32* %lambda_factor, align 4
  %454 = load i32* %cand_x, align 4
  %455 = shl i32 %454, 2
  %456 = load i32* %pred_x2, align 4
  %457 = sub nsw i32 %455, %456
  %458 = sext i32 %457 to i64
  %459 = load i32** @mvbits, align 8
  %460 = getelementptr inbounds i32* %459, i64 %458
  %461 = load i32* %460, align 4
  %462 = load i32* %cand_y, align 4
  %463 = shl i32 %462, 2
  %464 = load i32* %pred_y2, align 4
  %465 = sub nsw i32 %463, %464
  %466 = sext i32 %465 to i64
  %467 = load i32** @mvbits, align 8
  %468 = getelementptr inbounds i32* %467, i64 %466
  %469 = load i32* %468, align 4
  %470 = add nsw i32 %461, %469
  %471 = mul nsw i32 %453, %470
  %472 = ashr i32 %471, 16
  %473 = load i32* %mcost, align 4
  %474 = add nsw i32 %473, %472
  store i32 %474, i32* %mcost, align 4
  %475 = load i32* %mcost, align 4
  %476 = load i32* %17, align 4
  %477 = icmp sge i32 %475, %476
  br i1 %477, label %478, label %479

; <label>:478                                     ; preds = %414
  br label %1036

; <label>:479                                     ; preds = %414
  %480 = load i16* %apply_weights, align 2
  %481 = icmp ne i16 %480, 0
  br i1 %481, label %482, label %889

; <label>:482                                     ; preds = %479
  store i32 0, i32* %y, align 4
  br label %483

; <label>:483                                     ; preds = %885, %482
  %484 = load i32* %y, align 4
  %485 = load i32* %blocksize_y, align 4
  %486 = icmp slt i32 %484, %485
  br i1 %486, label %487, label %888

; <label>:487                                     ; preds = %483
  %488 = load i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  %489 = load i32* %blocksize_x, align 4
  %490 = load i16** %ref2_pic, align 8
  %491 = load i32* %cand_y, align 4
  %492 = load i32* %y, align 4
  %493 = add nsw i32 %491, %492
  %494 = load i32* %cand_x, align 4
  %495 = load i32* %img_height, align 4
  %496 = load i32* %img_width, align 4
  %497 = call i16* %488(i32 %489, i16* %490, i32 %493, i32 %494, i32 %495, i32 %496)
  store i16* %497, i16** %ref2_line, align 8
  %498 = load i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  %499 = load i32* %blocksize_x, align 4
  %500 = load i16** %ref1_pic, align 8
  %501 = load i16* %ref1_center_y, align 2
  %502 = sext i16 %501 to i32
  %503 = load i32* %y, align 4
  %504 = add nsw i32 %502, %503
  %505 = load i16* %ref1_center_x, align 2
  %506 = sext i16 %505 to i32
  %507 = load i32* %img_height, align 4
  %508 = load i32* %img_width, align 4
  %509 = call i16* %498(i32 %499, i16* %500, i32 %504, i32 %506, i32 %507, i32 %508)
  store i16* %509, i16** %ref1_line, align 8
  %510 = load i32* %y, align 4
  %511 = sext i32 %510 to i64
  %512 = load i16*** %1, align 8
  %513 = getelementptr inbounds i16** %512, i64 %511
  %514 = load i16** %513, align 8
  store i16* %514, i16** %orig_line, align 8
  store i32 0, i32* %x4, align 4
  br label %515

; <label>:515                                     ; preds = %876, %487
  %516 = load i32* %x4, align 4
  %517 = load i32* %blocksize_x4, align 4
  %518 = icmp slt i32 %516, %517
  br i1 %518, label %519, label %879

; <label>:519                                     ; preds = %515
  %520 = load i16* %weightSpic, align 2
  %521 = sext i16 %520 to i32
  %522 = load i16** %ref1_line, align 8
  %523 = getelementptr inbounds i16* %522, i32 1
  store i16* %523, i16** %ref1_line, align 8
  %524 = load i16* %522, align 2
  %525 = zext i16 %524 to i32
  %526 = mul nsw i32 %521, %525
  %527 = trunc i32 %526 to i16
  store i16 %527, i16* %pixel1, align 2
  %528 = load i16* %weightRpic, align 2
  %529 = sext i16 %528 to i32
  %530 = load i16** %ref2_line, align 8
  %531 = getelementptr inbounds i16* %530, i32 1
  store i16* %531, i16** %ref2_line, align 8
  %532 = load i16* %530, align 2
  %533 = zext i16 %532 to i32
  %534 = mul nsw i32 %529, %533
  %535 = trunc i32 %534 to i16
  store i16 %535, i16* %pixel2, align 2
  %536 = load i16* %pixel1, align 2
  %537 = sext i16 %536 to i32
  %538 = load i16* %pixel2, align 2
  %539 = sext i16 %538 to i32
  %540 = add nsw i32 %537, %539
  %541 = load i32* @wp_luma_round, align 4
  %542 = mul nsw i32 2, %541
  %543 = add nsw i32 %540, %542
  %544 = load i32* @luma_log_weight_denom, align 4
  %545 = add nsw i32 %544, 1
  %546 = ashr i32 %543, %545
  %547 = load i16* %offsetBi, align 2
  %548 = sext i16 %547 to i32
  %549 = add nsw i32 %546, %548
  %550 = icmp slt i32 %549, 0
  br i1 %550, label %551, label %552

; <label>:551                                     ; preds = %519
  br label %592

; <label>:552                                     ; preds = %519
  %553 = load i16* %pixel1, align 2
  %554 = sext i16 %553 to i32
  %555 = load i16* %pixel2, align 2
  %556 = sext i16 %555 to i32
  %557 = add nsw i32 %554, %556
  %558 = load i32* @wp_luma_round, align 4
  %559 = mul nsw i32 2, %558
  %560 = add nsw i32 %557, %559
  %561 = load i32* @luma_log_weight_denom, align 4
  %562 = add nsw i32 %561, 1
  %563 = ashr i32 %560, %562
  %564 = load i16* %offsetBi, align 2
  %565 = sext i16 %564 to i32
  %566 = add nsw i32 %563, %565
  %567 = load %struct.ImageParameters** @img, align 8
  %568 = getelementptr inbounds %struct.ImageParameters* %567, i32 0, i32 155
  %569 = load i32* %568, align 4
  %570 = icmp sgt i32 %566, %569
  br i1 %570, label %571, label %575

; <label>:571                                     ; preds = %552
  %572 = load %struct.ImageParameters** @img, align 8
  %573 = getelementptr inbounds %struct.ImageParameters* %572, i32 0, i32 155
  %574 = load i32* %573, align 4
  br label %590

; <label>:575                                     ; preds = %552
  %576 = load i16* %pixel1, align 2
  %577 = sext i16 %576 to i32
  %578 = load i16* %pixel2, align 2
  %579 = sext i16 %578 to i32
  %580 = add nsw i32 %577, %579
  %581 = load i32* @wp_luma_round, align 4
  %582 = mul nsw i32 2, %581
  %583 = add nsw i32 %580, %582
  %584 = load i32* @luma_log_weight_denom, align 4
  %585 = add nsw i32 %584, 1
  %586 = ashr i32 %583, %585
  %587 = load i16* %offsetBi, align 2
  %588 = sext i16 %587 to i32
  %589 = add nsw i32 %586, %588
  br label %590

; <label>:590                                     ; preds = %575, %571
  %591 = phi i32 [ %574, %571 ], [ %589, %575 ]
  br label %592

; <label>:592                                     ; preds = %590, %551
  %593 = phi i32 [ 0, %551 ], [ %591, %590 ]
  %594 = trunc i32 %593 to i16
  store i16 %594, i16* %weightedpel, align 2
  %595 = load i16** %orig_line, align 8
  %596 = getelementptr inbounds i16* %595, i32 1
  store i16* %596, i16** %orig_line, align 8
  %597 = load i16* %595, align 2
  %598 = zext i16 %597 to i32
  %599 = load i16* %weightedpel, align 2
  %600 = sext i16 %599 to i32
  %601 = sub nsw i32 %598, %600
  store i32 %601, i32* %bi_diff, align 4
  %602 = load i32* %bi_diff, align 4
  %603 = sext i32 %602 to i64
  %604 = load i32** @byte_abs, align 8
  %605 = getelementptr inbounds i32* %604, i64 %603
  %606 = load i32* %605, align 4
  %607 = load i32* %mcost, align 4
  %608 = add nsw i32 %607, %606
  store i32 %608, i32* %mcost, align 4
  %609 = load i16* %weightSpic, align 2
  %610 = sext i16 %609 to i32
  %611 = load i16** %ref1_line, align 8
  %612 = getelementptr inbounds i16* %611, i32 1
  store i16* %612, i16** %ref1_line, align 8
  %613 = load i16* %611, align 2
  %614 = zext i16 %613 to i32
  %615 = mul nsw i32 %610, %614
  %616 = trunc i32 %615 to i16
  store i16 %616, i16* %pixel1, align 2
  %617 = load i16* %weightRpic, align 2
  %618 = sext i16 %617 to i32
  %619 = load i16** %ref2_line, align 8
  %620 = getelementptr inbounds i16* %619, i32 1
  store i16* %620, i16** %ref2_line, align 8
  %621 = load i16* %619, align 2
  %622 = zext i16 %621 to i32
  %623 = mul nsw i32 %618, %622
  %624 = trunc i32 %623 to i16
  store i16 %624, i16* %pixel2, align 2
  %625 = load i16* %pixel1, align 2
  %626 = sext i16 %625 to i32
  %627 = load i16* %pixel2, align 2
  %628 = sext i16 %627 to i32
  %629 = add nsw i32 %626, %628
  %630 = load i32* @wp_luma_round, align 4
  %631 = mul nsw i32 2, %630
  %632 = add nsw i32 %629, %631
  %633 = load i32* @luma_log_weight_denom, align 4
  %634 = add nsw i32 %633, 1
  %635 = ashr i32 %632, %634
  %636 = load i16* %offsetBi, align 2
  %637 = sext i16 %636 to i32
  %638 = add nsw i32 %635, %637
  %639 = icmp slt i32 %638, 0
  br i1 %639, label %640, label %641

; <label>:640                                     ; preds = %592
  br label %681

; <label>:641                                     ; preds = %592
  %642 = load i16* %pixel1, align 2
  %643 = sext i16 %642 to i32
  %644 = load i16* %pixel2, align 2
  %645 = sext i16 %644 to i32
  %646 = add nsw i32 %643, %645
  %647 = load i32* @wp_luma_round, align 4
  %648 = mul nsw i32 2, %647
  %649 = add nsw i32 %646, %648
  %650 = load i32* @luma_log_weight_denom, align 4
  %651 = add nsw i32 %650, 1
  %652 = ashr i32 %649, %651
  %653 = load i16* %offsetBi, align 2
  %654 = sext i16 %653 to i32
  %655 = add nsw i32 %652, %654
  %656 = load %struct.ImageParameters** @img, align 8
  %657 = getelementptr inbounds %struct.ImageParameters* %656, i32 0, i32 155
  %658 = load i32* %657, align 4
  %659 = icmp sgt i32 %655, %658
  br i1 %659, label %660, label %664

; <label>:660                                     ; preds = %641
  %661 = load %struct.ImageParameters** @img, align 8
  %662 = getelementptr inbounds %struct.ImageParameters* %661, i32 0, i32 155
  %663 = load i32* %662, align 4
  br label %679

; <label>:664                                     ; preds = %641
  %665 = load i16* %pixel1, align 2
  %666 = sext i16 %665 to i32
  %667 = load i16* %pixel2, align 2
  %668 = sext i16 %667 to i32
  %669 = add nsw i32 %666, %668
  %670 = load i32* @wp_luma_round, align 4
  %671 = mul nsw i32 2, %670
  %672 = add nsw i32 %669, %671
  %673 = load i32* @luma_log_weight_denom, align 4
  %674 = add nsw i32 %673, 1
  %675 = ashr i32 %672, %674
  %676 = load i16* %offsetBi, align 2
  %677 = sext i16 %676 to i32
  %678 = add nsw i32 %675, %677
  br label %679

; <label>:679                                     ; preds = %664, %660
  %680 = phi i32 [ %663, %660 ], [ %678, %664 ]
  br label %681

; <label>:681                                     ; preds = %679, %640
  %682 = phi i32 [ 0, %640 ], [ %680, %679 ]
  %683 = trunc i32 %682 to i16
  store i16 %683, i16* %weightedpel, align 2
  %684 = load i16** %orig_line, align 8
  %685 = getelementptr inbounds i16* %684, i32 1
  store i16* %685, i16** %orig_line, align 8
  %686 = load i16* %684, align 2
  %687 = zext i16 %686 to i32
  %688 = load i16* %weightedpel, align 2
  %689 = sext i16 %688 to i32
  %690 = sub nsw i32 %687, %689
  store i32 %690, i32* %bi_diff, align 4
  %691 = load i32* %bi_diff, align 4
  %692 = sext i32 %691 to i64
  %693 = load i32** @byte_abs, align 8
  %694 = getelementptr inbounds i32* %693, i64 %692
  %695 = load i32* %694, align 4
  %696 = load i32* %mcost, align 4
  %697 = add nsw i32 %696, %695
  store i32 %697, i32* %mcost, align 4
  %698 = load i16* %weightSpic, align 2
  %699 = sext i16 %698 to i32
  %700 = load i16** %ref1_line, align 8
  %701 = getelementptr inbounds i16* %700, i32 1
  store i16* %701, i16** %ref1_line, align 8
  %702 = load i16* %700, align 2
  %703 = zext i16 %702 to i32
  %704 = mul nsw i32 %699, %703
  %705 = trunc i32 %704 to i16
  store i16 %705, i16* %pixel1, align 2
  %706 = load i16* %weightRpic, align 2
  %707 = sext i16 %706 to i32
  %708 = load i16** %ref2_line, align 8
  %709 = getelementptr inbounds i16* %708, i32 1
  store i16* %709, i16** %ref2_line, align 8
  %710 = load i16* %708, align 2
  %711 = zext i16 %710 to i32
  %712 = mul nsw i32 %707, %711
  %713 = trunc i32 %712 to i16
  store i16 %713, i16* %pixel2, align 2
  %714 = load i16* %pixel1, align 2
  %715 = sext i16 %714 to i32
  %716 = load i16* %pixel2, align 2
  %717 = sext i16 %716 to i32
  %718 = add nsw i32 %715, %717
  %719 = load i32* @wp_luma_round, align 4
  %720 = mul nsw i32 2, %719
  %721 = add nsw i32 %718, %720
  %722 = load i32* @luma_log_weight_denom, align 4
  %723 = add nsw i32 %722, 1
  %724 = ashr i32 %721, %723
  %725 = load i16* %offsetBi, align 2
  %726 = sext i16 %725 to i32
  %727 = add nsw i32 %724, %726
  %728 = icmp slt i32 %727, 0
  br i1 %728, label %729, label %730

; <label>:729                                     ; preds = %681
  br label %770

; <label>:730                                     ; preds = %681
  %731 = load i16* %pixel1, align 2
  %732 = sext i16 %731 to i32
  %733 = load i16* %pixel2, align 2
  %734 = sext i16 %733 to i32
  %735 = add nsw i32 %732, %734
  %736 = load i32* @wp_luma_round, align 4
  %737 = mul nsw i32 2, %736
  %738 = add nsw i32 %735, %737
  %739 = load i32* @luma_log_weight_denom, align 4
  %740 = add nsw i32 %739, 1
  %741 = ashr i32 %738, %740
  %742 = load i16* %offsetBi, align 2
  %743 = sext i16 %742 to i32
  %744 = add nsw i32 %741, %743
  %745 = load %struct.ImageParameters** @img, align 8
  %746 = getelementptr inbounds %struct.ImageParameters* %745, i32 0, i32 155
  %747 = load i32* %746, align 4
  %748 = icmp sgt i32 %744, %747
  br i1 %748, label %749, label %753

; <label>:749                                     ; preds = %730
  %750 = load %struct.ImageParameters** @img, align 8
  %751 = getelementptr inbounds %struct.ImageParameters* %750, i32 0, i32 155
  %752 = load i32* %751, align 4
  br label %768

; <label>:753                                     ; preds = %730
  %754 = load i16* %pixel1, align 2
  %755 = sext i16 %754 to i32
  %756 = load i16* %pixel2, align 2
  %757 = sext i16 %756 to i32
  %758 = add nsw i32 %755, %757
  %759 = load i32* @wp_luma_round, align 4
  %760 = mul nsw i32 2, %759
  %761 = add nsw i32 %758, %760
  %762 = load i32* @luma_log_weight_denom, align 4
  %763 = add nsw i32 %762, 1
  %764 = ashr i32 %761, %763
  %765 = load i16* %offsetBi, align 2
  %766 = sext i16 %765 to i32
  %767 = add nsw i32 %764, %766
  br label %768

; <label>:768                                     ; preds = %753, %749
  %769 = phi i32 [ %752, %749 ], [ %767, %753 ]
  br label %770

; <label>:770                                     ; preds = %768, %729
  %771 = phi i32 [ 0, %729 ], [ %769, %768 ]
  %772 = trunc i32 %771 to i16
  store i16 %772, i16* %weightedpel, align 2
  %773 = load i16** %orig_line, align 8
  %774 = getelementptr inbounds i16* %773, i32 1
  store i16* %774, i16** %orig_line, align 8
  %775 = load i16* %773, align 2
  %776 = zext i16 %775 to i32
  %777 = load i16* %weightedpel, align 2
  %778 = sext i16 %777 to i32
  %779 = sub nsw i32 %776, %778
  store i32 %779, i32* %bi_diff, align 4
  %780 = load i32* %bi_diff, align 4
  %781 = sext i32 %780 to i64
  %782 = load i32** @byte_abs, align 8
  %783 = getelementptr inbounds i32* %782, i64 %781
  %784 = load i32* %783, align 4
  %785 = load i32* %mcost, align 4
  %786 = add nsw i32 %785, %784
  store i32 %786, i32* %mcost, align 4
  %787 = load i16* %weightSpic, align 2
  %788 = sext i16 %787 to i32
  %789 = load i16** %ref1_line, align 8
  %790 = getelementptr inbounds i16* %789, i32 1
  store i16* %790, i16** %ref1_line, align 8
  %791 = load i16* %789, align 2
  %792 = zext i16 %791 to i32
  %793 = mul nsw i32 %788, %792
  %794 = trunc i32 %793 to i16
  store i16 %794, i16* %pixel1, align 2
  %795 = load i16* %weightRpic, align 2
  %796 = sext i16 %795 to i32
  %797 = load i16** %ref2_line, align 8
  %798 = getelementptr inbounds i16* %797, i32 1
  store i16* %798, i16** %ref2_line, align 8
  %799 = load i16* %797, align 2
  %800 = zext i16 %799 to i32
  %801 = mul nsw i32 %796, %800
  %802 = trunc i32 %801 to i16
  store i16 %802, i16* %pixel2, align 2
  %803 = load i16* %pixel1, align 2
  %804 = sext i16 %803 to i32
  %805 = load i16* %pixel2, align 2
  %806 = sext i16 %805 to i32
  %807 = add nsw i32 %804, %806
  %808 = load i32* @wp_luma_round, align 4
  %809 = mul nsw i32 2, %808
  %810 = add nsw i32 %807, %809
  %811 = load i32* @luma_log_weight_denom, align 4
  %812 = add nsw i32 %811, 1
  %813 = ashr i32 %810, %812
  %814 = load i16* %offsetBi, align 2
  %815 = sext i16 %814 to i32
  %816 = add nsw i32 %813, %815
  %817 = icmp slt i32 %816, 0
  br i1 %817, label %818, label %819

; <label>:818                                     ; preds = %770
  br label %859

; <label>:819                                     ; preds = %770
  %820 = load i16* %pixel1, align 2
  %821 = sext i16 %820 to i32
  %822 = load i16* %pixel2, align 2
  %823 = sext i16 %822 to i32
  %824 = add nsw i32 %821, %823
  %825 = load i32* @wp_luma_round, align 4
  %826 = mul nsw i32 2, %825
  %827 = add nsw i32 %824, %826
  %828 = load i32* @luma_log_weight_denom, align 4
  %829 = add nsw i32 %828, 1
  %830 = ashr i32 %827, %829
  %831 = load i16* %offsetBi, align 2
  %832 = sext i16 %831 to i32
  %833 = add nsw i32 %830, %832
  %834 = load %struct.ImageParameters** @img, align 8
  %835 = getelementptr inbounds %struct.ImageParameters* %834, i32 0, i32 155
  %836 = load i32* %835, align 4
  %837 = icmp sgt i32 %833, %836
  br i1 %837, label %838, label %842

; <label>:838                                     ; preds = %819
  %839 = load %struct.ImageParameters** @img, align 8
  %840 = getelementptr inbounds %struct.ImageParameters* %839, i32 0, i32 155
  %841 = load i32* %840, align 4
  br label %857

; <label>:842                                     ; preds = %819
  %843 = load i16* %pixel1, align 2
  %844 = sext i16 %843 to i32
  %845 = load i16* %pixel2, align 2
  %846 = sext i16 %845 to i32
  %847 = add nsw i32 %844, %846
  %848 = load i32* @wp_luma_round, align 4
  %849 = mul nsw i32 2, %848
  %850 = add nsw i32 %847, %849
  %851 = load i32* @luma_log_weight_denom, align 4
  %852 = add nsw i32 %851, 1
  %853 = ashr i32 %850, %852
  %854 = load i16* %offsetBi, align 2
  %855 = sext i16 %854 to i32
  %856 = add nsw i32 %853, %855
  br label %857

; <label>:857                                     ; preds = %842, %838
  %858 = phi i32 [ %841, %838 ], [ %856, %842 ]
  br label %859

; <label>:859                                     ; preds = %857, %818
  %860 = phi i32 [ 0, %818 ], [ %858, %857 ]
  %861 = trunc i32 %860 to i16
  store i16 %861, i16* %weightedpel, align 2
  %862 = load i16** %orig_line, align 8
  %863 = getelementptr inbounds i16* %862, i32 1
  store i16* %863, i16** %orig_line, align 8
  %864 = load i16* %862, align 2
  %865 = zext i16 %864 to i32
  %866 = load i16* %weightedpel, align 2
  %867 = sext i16 %866 to i32
  %868 = sub nsw i32 %865, %867
  store i32 %868, i32* %bi_diff, align 4
  %869 = load i32* %bi_diff, align 4
  %870 = sext i32 %869 to i64
  %871 = load i32** @byte_abs, align 8
  %872 = getelementptr inbounds i32* %871, i64 %870
  %873 = load i32* %872, align 4
  %874 = load i32* %mcost, align 4
  %875 = add nsw i32 %874, %873
  store i32 %875, i32* %mcost, align 4
  br label %876

; <label>:876                                     ; preds = %859
  %877 = load i32* %x4, align 4
  %878 = add nsw i32 %877, 1
  store i32 %878, i32* %x4, align 4
  br label %515

; <label>:879                                     ; preds = %515
  %880 = load i32* %mcost, align 4
  %881 = load i32* %17, align 4
  %882 = icmp sge i32 %880, %881
  br i1 %882, label %883, label %884

; <label>:883                                     ; preds = %879
  br label %888

; <label>:884                                     ; preds = %879
  br label %885

; <label>:885                                     ; preds = %884
  %886 = load i32* %y, align 4
  %887 = add nsw i32 %886, 1
  store i32 %887, i32* %y, align 4
  br label %483

; <label>:888                                     ; preds = %883, %483
  br label %1028

; <label>:889                                     ; preds = %479
  store i32 0, i32* %y, align 4
  br label %890

; <label>:890                                     ; preds = %1024, %889
  %891 = load i32* %y, align 4
  %892 = load i32* %blocksize_y, align 4
  %893 = icmp slt i32 %891, %892
  br i1 %893, label %894, label %1027

; <label>:894                                     ; preds = %890
  %895 = load i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  %896 = load i32* %blocksize_x, align 4
  %897 = load i16** %ref2_pic, align 8
  %898 = load i32* %cand_y, align 4
  %899 = load i32* %y, align 4
  %900 = add nsw i32 %898, %899
  %901 = load i32* %cand_x, align 4
  %902 = load i32* %img_height, align 4
  %903 = load i32* %img_width, align 4
  %904 = call i16* %895(i32 %896, i16* %897, i32 %900, i32 %901, i32 %902, i32 %903)
  store i16* %904, i16** %ref2_line, align 8
  %905 = load i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  %906 = load i32* %blocksize_x, align 4
  %907 = load i16** %ref1_pic, align 8
  %908 = load i16* %ref1_center_y, align 2
  %909 = sext i16 %908 to i32
  %910 = load i32* %y, align 4
  %911 = add nsw i32 %909, %910
  %912 = load i16* %ref1_center_x, align 2
  %913 = sext i16 %912 to i32
  %914 = load i32* %img_height, align 4
  %915 = load i32* %img_width, align 4
  %916 = call i16* %905(i32 %906, i16* %907, i32 %911, i32 %913, i32 %914, i32 %915)
  store i16* %916, i16** %ref1_line, align 8
  %917 = load i32* %y, align 4
  %918 = sext i32 %917 to i64
  %919 = load i16*** %1, align 8
  %920 = getelementptr inbounds i16** %919, i64 %918
  %921 = load i16** %920, align 8
  store i16* %921, i16** %orig_line, align 8
  store i32 0, i32* %x4, align 4
  br label %922

; <label>:922                                     ; preds = %1015, %894
  %923 = load i32* %x4, align 4
  %924 = load i32* %blocksize_x4, align 4
  %925 = icmp slt i32 %923, %924
  br i1 %925, label %926, label %1018

; <label>:926                                     ; preds = %922
  %927 = load i16** %orig_line, align 8
  %928 = getelementptr inbounds i16* %927, i32 1
  store i16* %928, i16** %orig_line, align 8
  %929 = load i16* %927, align 2
  %930 = zext i16 %929 to i32
  %931 = load i16** %ref1_line, align 8
  %932 = getelementptr inbounds i16* %931, i32 1
  store i16* %932, i16** %ref1_line, align 8
  %933 = load i16* %931, align 2
  %934 = zext i16 %933 to i32
  %935 = load i16** %ref2_line, align 8
  %936 = getelementptr inbounds i16* %935, i32 1
  store i16* %936, i16** %ref2_line, align 8
  %937 = load i16* %935, align 2
  %938 = zext i16 %937 to i32
  %939 = add nsw i32 %934, %938
  %940 = ashr i32 %939, 1
  %941 = sub nsw i32 %930, %940
  store i32 %941, i32* %bi_diff, align 4
  %942 = load i32* %bi_diff, align 4
  %943 = sext i32 %942 to i64
  %944 = load i32** @byte_abs, align 8
  %945 = getelementptr inbounds i32* %944, i64 %943
  %946 = load i32* %945, align 4
  %947 = load i32* %mcost, align 4
  %948 = add nsw i32 %947, %946
  store i32 %948, i32* %mcost, align 4
  %949 = load i16** %orig_line, align 8
  %950 = getelementptr inbounds i16* %949, i32 1
  store i16* %950, i16** %orig_line, align 8
  %951 = load i16* %949, align 2
  %952 = zext i16 %951 to i32
  %953 = load i16** %ref1_line, align 8
  %954 = getelementptr inbounds i16* %953, i32 1
  store i16* %954, i16** %ref1_line, align 8
  %955 = load i16* %953, align 2
  %956 = zext i16 %955 to i32
  %957 = load i16** %ref2_line, align 8
  %958 = getelementptr inbounds i16* %957, i32 1
  store i16* %958, i16** %ref2_line, align 8
  %959 = load i16* %957, align 2
  %960 = zext i16 %959 to i32
  %961 = add nsw i32 %956, %960
  %962 = ashr i32 %961, 1
  %963 = sub nsw i32 %952, %962
  store i32 %963, i32* %bi_diff, align 4
  %964 = load i32* %bi_diff, align 4
  %965 = sext i32 %964 to i64
  %966 = load i32** @byte_abs, align 8
  %967 = getelementptr inbounds i32* %966, i64 %965
  %968 = load i32* %967, align 4
  %969 = load i32* %mcost, align 4
  %970 = add nsw i32 %969, %968
  store i32 %970, i32* %mcost, align 4
  %971 = load i16** %orig_line, align 8
  %972 = getelementptr inbounds i16* %971, i32 1
  store i16* %972, i16** %orig_line, align 8
  %973 = load i16* %971, align 2
  %974 = zext i16 %973 to i32
  %975 = load i16** %ref1_line, align 8
  %976 = getelementptr inbounds i16* %975, i32 1
  store i16* %976, i16** %ref1_line, align 8
  %977 = load i16* %975, align 2
  %978 = zext i16 %977 to i32
  %979 = load i16** %ref2_line, align 8
  %980 = getelementptr inbounds i16* %979, i32 1
  store i16* %980, i16** %ref2_line, align 8
  %981 = load i16* %979, align 2
  %982 = zext i16 %981 to i32
  %983 = add nsw i32 %978, %982
  %984 = ashr i32 %983, 1
  %985 = sub nsw i32 %974, %984
  store i32 %985, i32* %bi_diff, align 4
  %986 = load i32* %bi_diff, align 4
  %987 = sext i32 %986 to i64
  %988 = load i32** @byte_abs, align 8
  %989 = getelementptr inbounds i32* %988, i64 %987
  %990 = load i32* %989, align 4
  %991 = load i32* %mcost, align 4
  %992 = add nsw i32 %991, %990
  store i32 %992, i32* %mcost, align 4
  %993 = load i16** %orig_line, align 8
  %994 = getelementptr inbounds i16* %993, i32 1
  store i16* %994, i16** %orig_line, align 8
  %995 = load i16* %993, align 2
  %996 = zext i16 %995 to i32
  %997 = load i16** %ref1_line, align 8
  %998 = getelementptr inbounds i16* %997, i32 1
  store i16* %998, i16** %ref1_line, align 8
  %999 = load i16* %997, align 2
  %1000 = zext i16 %999 to i32
  %1001 = load i16** %ref2_line, align 8
  %1002 = getelementptr inbounds i16* %1001, i32 1
  store i16* %1002, i16** %ref2_line, align 8
  %1003 = load i16* %1001, align 2
  %1004 = zext i16 %1003 to i32
  %1005 = add nsw i32 %1000, %1004
  %1006 = ashr i32 %1005, 1
  %1007 = sub nsw i32 %996, %1006
  store i32 %1007, i32* %bi_diff, align 4
  %1008 = load i32* %bi_diff, align 4
  %1009 = sext i32 %1008 to i64
  %1010 = load i32** @byte_abs, align 8
  %1011 = getelementptr inbounds i32* %1010, i64 %1009
  %1012 = load i32* %1011, align 4
  %1013 = load i32* %mcost, align 4
  %1014 = add nsw i32 %1013, %1012
  store i32 %1014, i32* %mcost, align 4
  br label %1015

; <label>:1015                                    ; preds = %926
  %1016 = load i32* %x4, align 4
  %1017 = add nsw i32 %1016, 1
  store i32 %1017, i32* %x4, align 4
  br label %922

; <label>:1018                                    ; preds = %922
  %1019 = load i32* %mcost, align 4
  %1020 = load i32* %17, align 4
  %1021 = icmp sge i32 %1019, %1020
  br i1 %1021, label %1022, label %1023

; <label>:1022                                    ; preds = %1018
  br label %1027

; <label>:1023                                    ; preds = %1018
  br label %1024

; <label>:1024                                    ; preds = %1023
  %1025 = load i32* %y, align 4
  %1026 = add nsw i32 %1025, 1
  store i32 %1026, i32* %y, align 4
  br label %890

; <label>:1027                                    ; preds = %1022, %890
  br label %1028

; <label>:1028                                    ; preds = %1027, %888
  %1029 = load i32* %mcost, align 4
  %1030 = load i32* %17, align 4
  %1031 = icmp slt i32 %1029, %1030
  br i1 %1031, label %1032, label %1035

; <label>:1032                                    ; preds = %1028
  %1033 = load i32* %pos, align 4
  store i32 %1033, i32* %best_pos, align 4
  %1034 = load i32* %mcost, align 4
  store i32 %1034, i32* %17, align 4
  br label %1035

; <label>:1035                                    ; preds = %1032, %1028
  br label %1036

; <label>:1036                                    ; preds = %1035, %478
  %1037 = load i32* %pos, align 4
  %1038 = add nsw i32 %1037, 1
  store i32 %1038, i32* %pos, align 4
  br label %410

; <label>:1039                                    ; preds = %410
  %1040 = load i32* %best_pos, align 4
  %1041 = icmp ne i32 %1040, 0
  br i1 %1041, label %1042, label %1063

; <label>:1042                                    ; preds = %1039
  %1043 = load i32* %best_pos, align 4
  %1044 = sext i32 %1043 to i64
  %1045 = load i32** @spiral_search_x, align 8
  %1046 = getelementptr inbounds i32* %1045, i64 %1044
  %1047 = load i32* %1046, align 4
  %1048 = load i16** %12, align 8
  %1049 = load i16* %1048, align 2
  %1050 = sext i16 %1049 to i32
  %1051 = add nsw i32 %1050, %1047
  %1052 = trunc i32 %1051 to i16
  store i16 %1052, i16* %1048, align 2
  %1053 = load i32* %best_pos, align 4
  %1054 = sext i32 %1053 to i64
  %1055 = load i32** @spiral_search_y, align 8
  %1056 = getelementptr inbounds i32* %1055, i64 %1054
  %1057 = load i32* %1056, align 4
  %1058 = load i16** %13, align 8
  %1059 = load i16* %1058, align 2
  %1060 = sext i16 %1059 to i32
  %1061 = add nsw i32 %1060, %1057
  %1062 = trunc i32 %1061 to i16
  store i16 %1062, i16* %1058, align 2
  br label %1063

; <label>:1063                                    ; preds = %1042, %1039
  %1064 = load i32* %17, align 4
  ret i32 %1064
}

; Function Attrs: nounwind uwtable
define i32 @SubPelBlockSearchBiPred(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i16* %s_mv_x, i16* %s_mv_y, i32 %search_pos2, i32 %search_pos4, i32 %min_mcost, double %lambda) #0 {
  %1 = alloca i16**, align 8
  %2 = alloca i16, align 2
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16*, align 8
  %10 = alloca i16*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca i16*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca double, align 8
  %curr_diff = alloca [16 x [16 x i32]], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %diff = alloca [16 x i32], align 16
  %d = alloca i32*, align 8
  %pos = alloca i16, align 2
  %best_pos = alloca i16, align 2
  %mcost = alloca i16, align 2
  %abort_search = alloca i16, align 2
  %y0 = alloca i16, align 2
  %x0 = alloca i16, align 2
  %ry0 = alloca i16, align 2
  %rx0 = alloca i16, align 2
  %ry = alloca i16, align 2
  %sy0 = alloca i16, align 2
  %sy = alloca i16, align 2
  %sx0 = alloca i16, align 2
  %cand_mv_x = alloca i16, align 2
  %cand_mv_y = alloca i16, align 2
  %max_pos_x4 = alloca i16, align 2
  %max_pos_y4 = alloca i16, align 2
  %orig_line = alloca i16*, align 8
  %ref_picture = alloca %struct.storable_picture*, align 8
  %lambda_factor = alloca i32, align 4
  %mv_shift = alloca i16, align 2
  %blocksize_x = alloca i16, align 2
  %blocksize_y = alloca i16, align 2
  %pic4_pix_x = alloca i16, align 2
  %pic4_pix_y = alloca i16, align 2
  %min_pos2 = alloca i16, align 2
  %max_pos2 = alloca i16, align 2
  %list_offset = alloca i16, align 2
  %apply_weights = alloca i16, align 2
  %weightSpic = alloca i16, align 2
  %weightRpic = alloca i16, align 2
  %offsetSpic = alloca i16, align 2
  %offsetRpic = alloca i16, align 2
  %offsetBi = alloca i16, align 2
  %weightedpel = alloca i32, align 4
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %halfpelhadamard = alloca i32, align 4
  %qpelstart = alloca i32, align 4
  %ref1_pic = alloca i16**, align 8
  %ref2_pic = alloca i16**, align 8
  store i16** %orig_pic, i16*** %1, align 8
  store i16 %ref, i16* %2, align 2
  store i32 %list, i32* %3, align 4
  store i32 %pic_pix_x, i32* %4, align 4
  store i32 %pic_pix_y, i32* %5, align 4
  store i32 %blocktype, i32* %6, align 4
  store i16 %pred_mv_x, i16* %7, align 2
  store i16 %pred_mv_y, i16* %8, align 2
  store i16* %mv_x, i16** %9, align 8
  store i16* %mv_y, i16** %10, align 8
  store i16* %s_mv_x, i16** %11, align 8
  store i16* %s_mv_y, i16** %12, align 8
  store i32 %search_pos2, i32* %13, align 4
  store i32 %search_pos4, i32* %14, align 4
  store i32 %min_mcost, i32* %15, align 4
  store double %lambda, double* %16, align 8
  %17 = load double* %16, align 8
  %18 = fmul double 6.553600e+04, %17
  %19 = fadd double %18, 5.000000e-01
  %20 = fptosi double %19 to i32
  store i32 %20, i32* %lambda_factor, align 4
  store i16 0, i16* %mv_shift, align 2
  %21 = load i32* %6, align 4
  %22 = sext i32 %21 to i64
  %23 = load %struct.InputParameters** @input, align 8
  %24 = getelementptr inbounds %struct.InputParameters* %23, i32 0, i32 20
  %25 = getelementptr inbounds [8 x [2 x i32]]* %24, i32 0, i64 %22
  %26 = getelementptr inbounds [2 x i32]* %25, i32 0, i64 0
  %27 = load i32* %26, align 4
  %28 = trunc i32 %27 to i16
  store i16 %28, i16* %blocksize_x, align 2
  %29 = load i32* %6, align 4
  %30 = sext i32 %29 to i64
  %31 = load %struct.InputParameters** @input, align 8
  %32 = getelementptr inbounds %struct.InputParameters* %31, i32 0, i32 20
  %33 = getelementptr inbounds [8 x [2 x i32]]* %32, i32 0, i64 %30
  %34 = getelementptr inbounds [2 x i32]* %33, i32 0, i64 1
  %35 = load i32* %34, align 4
  %36 = trunc i32 %35 to i16
  store i16 %36, i16* %blocksize_y, align 2
  %37 = load i32* %4, align 4
  %38 = shl i32 %37, 2
  %39 = trunc i32 %38 to i16
  store i16 %39, i16* %pic4_pix_x, align 2
  %40 = load i32* %5, align 4
  %41 = shl i32 %40, 2
  %42 = trunc i32 %41 to i16
  store i16 %42, i16* %pic4_pix_y, align 2
  %43 = load %struct.InputParameters** @input, align 8
  %44 = getelementptr inbounds %struct.InputParameters* %43, i32 0, i32 6
  %45 = load i32* %44, align 4
  %46 = icmp ne i32 %45, 0
  %47 = select i1 %46, i32 0, i32 1
  %48 = trunc i32 %47 to i16
  store i16 %48, i16* %min_pos2, align 2
  %49 = load %struct.InputParameters** @input, align 8
  %50 = getelementptr inbounds %struct.InputParameters* %49, i32 0, i32 6
  %51 = load i32* %50, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %61

; <label>:53                                      ; preds = %0
  %54 = load i32* %13, align 4
  %55 = icmp sgt i32 1, %54
  br i1 %55, label %56, label %57

; <label>:56                                      ; preds = %53
  br label %59

; <label>:57                                      ; preds = %53
  %58 = load i32* %13, align 4
  br label %59

; <label>:59                                      ; preds = %57, %56
  %60 = phi i32 [ 1, %56 ], [ %58, %57 ]
  br label %63

; <label>:61                                      ; preds = %0
  %62 = load i32* %13, align 4
  br label %63

; <label>:63                                      ; preds = %61, %59
  %64 = phi i32 [ %60, %59 ], [ %62, %61 ]
  %65 = trunc i32 %64 to i16
  store i16 %65, i16* %max_pos2, align 2
  %66 = load %struct.ImageParameters** @img, align 8
  %67 = getelementptr inbounds %struct.ImageParameters* %66, i32 0, i32 90
  %68 = load i32* %67, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %89

; <label>:70                                      ; preds = %63
  %71 = load %struct.ImageParameters** @img, align 8
  %72 = getelementptr inbounds %struct.ImageParameters* %71, i32 0, i32 3
  %73 = load i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = load %struct.ImageParameters** @img, align 8
  %76 = getelementptr inbounds %struct.ImageParameters* %75, i32 0, i32 51
  %77 = load %struct.macroblock** %76, align 8
  %78 = getelementptr inbounds %struct.macroblock* %77, i64 %74
  %79 = getelementptr inbounds %struct.macroblock* %78, i32 0, i32 22
  %80 = load i32* %79, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %89

; <label>:82                                      ; preds = %70
  %83 = load %struct.ImageParameters** @img, align 8
  %84 = getelementptr inbounds %struct.ImageParameters* %83, i32 0, i32 3
  %85 = load i32* %84, align 4
  %86 = srem i32 %85, 2
  %87 = icmp ne i32 %86, 0
  %88 = select i1 %87, i32 4, i32 2
  br label %90

; <label>:89                                      ; preds = %70, %63
  br label %90

; <label>:90                                      ; preds = %89, %82
  %91 = phi i32 [ %88, %82 ], [ 0, %89 ]
  %92 = trunc i32 %91 to i16
  store i16 %92, i16* %list_offset, align 2
  %93 = load %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %94 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t* %93, i32 0, i32 20
  %95 = load i32* %94, align 4
  %96 = trunc i32 %95 to i16
  store i16 %96, i16* %apply_weights, align 2
  %97 = load i16* %apply_weights, align 2
  %98 = sext i16 %97 to i32
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %135

; <label>:100                                     ; preds = %90
  %101 = load i32* %3, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %117

; <label>:103                                     ; preds = %100
  %104 = load i16* %2, align 2
  %105 = sext i16 %104 to i64
  %106 = load i16* %list_offset, align 2
  %107 = sext i16 %106 to i64
  %108 = load i32***** @wbp_weight, align 8
  %109 = getelementptr inbounds i32**** %108, i64 %107
  %110 = load i32**** %109, align 8
  %111 = getelementptr inbounds i32*** %110, i64 %105
  %112 = load i32*** %111, align 8
  %113 = getelementptr inbounds i32** %112, i64 0
  %114 = load i32** %113, align 8
  %115 = getelementptr inbounds i32* %114, i64 0
  %116 = load i32* %115, align 4
  br label %133

; <label>:117                                     ; preds = %100
  %118 = load i16* %2, align 2
  %119 = sext i16 %118 to i64
  %120 = load i16* %list_offset, align 2
  %121 = sext i16 %120 to i32
  %122 = add nsw i32 %121, 1
  %123 = sext i32 %122 to i64
  %124 = load i32***** @wbp_weight, align 8
  %125 = getelementptr inbounds i32**** %124, i64 %123
  %126 = load i32**** %125, align 8
  %127 = getelementptr inbounds i32*** %126, i64 0
  %128 = load i32*** %127, align 8
  %129 = getelementptr inbounds i32** %128, i64 %119
  %130 = load i32** %129, align 8
  %131 = getelementptr inbounds i32* %130, i64 0
  %132 = load i32* %131, align 4
  br label %133

; <label>:133                                     ; preds = %117, %103
  %134 = phi i32 [ %116, %103 ], [ %132, %117 ]
  br label %136

; <label>:135                                     ; preds = %90
  br label %136

; <label>:136                                     ; preds = %135, %133
  %137 = phi i32 [ %134, %133 ], [ 1, %135 ]
  %138 = trunc i32 %137 to i16
  store i16 %138, i16* %weightSpic, align 2
  %139 = load i16* %apply_weights, align 2
  %140 = sext i16 %139 to i32
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %177

; <label>:142                                     ; preds = %136
  %143 = load i32* %3, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %161

; <label>:145                                     ; preds = %142
  %146 = load i16* %2, align 2
  %147 = sext i16 %146 to i64
  %148 = load i16* %list_offset, align 2
  %149 = sext i16 %148 to i32
  %150 = add nsw i32 %149, 1
  %151 = sext i32 %150 to i64
  %152 = load i32***** @wbp_weight, align 8
  %153 = getelementptr inbounds i32**** %152, i64 %151
  %154 = load i32**** %153, align 8
  %155 = getelementptr inbounds i32*** %154, i64 %147
  %156 = load i32*** %155, align 8
  %157 = getelementptr inbounds i32** %156, i64 0
  %158 = load i32** %157, align 8
  %159 = getelementptr inbounds i32* %158, i64 0
  %160 = load i32* %159, align 4
  br label %175

; <label>:161                                     ; preds = %142
  %162 = load i16* %2, align 2
  %163 = sext i16 %162 to i64
  %164 = load i16* %list_offset, align 2
  %165 = sext i16 %164 to i64
  %166 = load i32***** @wbp_weight, align 8
  %167 = getelementptr inbounds i32**** %166, i64 %165
  %168 = load i32**** %167, align 8
  %169 = getelementptr inbounds i32*** %168, i64 0
  %170 = load i32*** %169, align 8
  %171 = getelementptr inbounds i32** %170, i64 %163
  %172 = load i32** %171, align 8
  %173 = getelementptr inbounds i32* %172, i64 0
  %174 = load i32* %173, align 4
  br label %175

; <label>:175                                     ; preds = %161, %145
  %176 = phi i32 [ %160, %145 ], [ %174, %161 ]
  br label %178

; <label>:177                                     ; preds = %136
  br label %178

; <label>:178                                     ; preds = %177, %175
  %179 = phi i32 [ %176, %175 ], [ 1, %177 ]
  %180 = trunc i32 %179 to i16
  store i16 %180, i16* %weightRpic, align 2
  %181 = load i16* %apply_weights, align 2
  %182 = sext i16 %181 to i32
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %184, label %213

; <label>:184                                     ; preds = %178
  %185 = load i32* %3, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %199

; <label>:187                                     ; preds = %184
  %188 = load i16* %2, align 2
  %189 = sext i16 %188 to i64
  %190 = load i16* %list_offset, align 2
  %191 = sext i16 %190 to i64
  %192 = load i32**** @wp_offset, align 8
  %193 = getelementptr inbounds i32*** %192, i64 %191
  %194 = load i32*** %193, align 8
  %195 = getelementptr inbounds i32** %194, i64 %189
  %196 = load i32** %195, align 8
  %197 = getelementptr inbounds i32* %196, i64 0
  %198 = load i32* %197, align 4
  br label %211

; <label>:199                                     ; preds = %184
  %200 = load i16* %list_offset, align 2
  %201 = sext i16 %200 to i32
  %202 = add nsw i32 %201, 1
  %203 = sext i32 %202 to i64
  %204 = load i32**** @wp_offset, align 8
  %205 = getelementptr inbounds i32*** %204, i64 %203
  %206 = load i32*** %205, align 8
  %207 = getelementptr inbounds i32** %206, i64 0
  %208 = load i32** %207, align 8
  %209 = getelementptr inbounds i32* %208, i64 0
  %210 = load i32* %209, align 4
  br label %211

; <label>:211                                     ; preds = %199, %187
  %212 = phi i32 [ %198, %187 ], [ %210, %199 ]
  br label %214

; <label>:213                                     ; preds = %178
  br label %214

; <label>:214                                     ; preds = %213, %211
  %215 = phi i32 [ %212, %211 ], [ 0, %213 ]
  %216 = trunc i32 %215 to i16
  store i16 %216, i16* %offsetSpic, align 2
  %217 = load i16* %apply_weights, align 2
  %218 = sext i16 %217 to i32
  %219 = icmp ne i32 %218, 0
  br i1 %219, label %220, label %249

; <label>:220                                     ; preds = %214
  %221 = load i32* %3, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %237

; <label>:223                                     ; preds = %220
  %224 = load i16* %2, align 2
  %225 = sext i16 %224 to i64
  %226 = load i16* %list_offset, align 2
  %227 = sext i16 %226 to i32
  %228 = add nsw i32 %227, 1
  %229 = sext i32 %228 to i64
  %230 = load i32**** @wp_offset, align 8
  %231 = getelementptr inbounds i32*** %230, i64 %229
  %232 = load i32*** %231, align 8
  %233 = getelementptr inbounds i32** %232, i64 %225
  %234 = load i32** %233, align 8
  %235 = getelementptr inbounds i32* %234, i64 0
  %236 = load i32* %235, align 4
  br label %247

; <label>:237                                     ; preds = %220
  %238 = load i16* %list_offset, align 2
  %239 = sext i16 %238 to i64
  %240 = load i32**** @wp_offset, align 8
  %241 = getelementptr inbounds i32*** %240, i64 %239
  %242 = load i32*** %241, align 8
  %243 = getelementptr inbounds i32** %242, i64 0
  %244 = load i32** %243, align 8
  %245 = getelementptr inbounds i32* %244, i64 0
  %246 = load i32* %245, align 4
  br label %247

; <label>:247                                     ; preds = %237, %223
  %248 = phi i32 [ %236, %223 ], [ %246, %237 ]
  br label %250

; <label>:249                                     ; preds = %214
  br label %250

; <label>:250                                     ; preds = %249, %247
  %251 = phi i32 [ %248, %247 ], [ 0, %249 ]
  %252 = trunc i32 %251 to i16
  store i16 %252, i16* %offsetRpic, align 2
  %253 = load i16* %offsetRpic, align 2
  %254 = sext i16 %253 to i32
  %255 = load i16* %offsetSpic, align 2
  %256 = sext i16 %255 to i32
  %257 = add nsw i32 %254, %256
  %258 = add nsw i32 %257, 1
  %259 = ashr i32 %258, 1
  %260 = trunc i32 %259 to i16
  store i16 %260, i16* %offsetBi, align 2
  %261 = load %struct.InputParameters** @input, align 8
  %262 = getelementptr inbounds %struct.InputParameters* %261, i32 0, i32 7
  %263 = load i32* %262, align 4
  %264 = icmp ne i32 %263, 0
  br i1 %264, label %265, label %266

; <label>:265                                     ; preds = %250
  br label %270

; <label>:266                                     ; preds = %250
  %267 = load %struct.InputParameters** @input, align 8
  %268 = getelementptr inbounds %struct.InputParameters* %267, i32 0, i32 6
  %269 = load i32* %268, align 4
  br label %270

; <label>:270                                     ; preds = %266, %265
  %271 = phi i32 [ 0, %265 ], [ %269, %266 ]
  store i32 %271, i32* %halfpelhadamard, align 4
  %272 = load %struct.InputParameters** @input, align 8
  %273 = getelementptr inbounds %struct.InputParameters* %272, i32 0, i32 7
  %274 = load i32* %273, align 4
  %275 = icmp ne i32 %274, 0
  %276 = select i1 %275, i32 0, i32 1
  store i32 %276, i32* %qpelstart, align 4
  %277 = load i16* %2, align 2
  %278 = sext i16 %277 to i64
  %279 = load i32* %3, align 4
  %280 = load i16* %list_offset, align 2
  %281 = sext i16 %280 to i32
  %282 = add nsw i32 %279, %281
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %283
  %285 = load %struct.storable_picture*** %284, align 8
  %286 = getelementptr inbounds %struct.storable_picture** %285, i64 %278
  %287 = load %struct.storable_picture** %286, align 8
  %288 = getelementptr inbounds %struct.storable_picture* %287, i32 0, i32 28
  %289 = load i16*** %288, align 8
  store i16** %289, i16*** %ref1_pic, align 8
  %290 = load i32* %3, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %296

; <label>:292                                     ; preds = %270
  %293 = load i16* %list_offset, align 2
  %294 = sext i16 %293 to i32
  %295 = add nsw i32 1, %294
  br label %299

; <label>:296                                     ; preds = %270
  %297 = load i16* %list_offset, align 2
  %298 = sext i16 %297 to i32
  br label %299

; <label>:299                                     ; preds = %296, %292
  %300 = phi i32 [ %295, %292 ], [ %298, %296 ]
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %301
  %303 = load %struct.storable_picture*** %302, align 8
  %304 = getelementptr inbounds %struct.storable_picture** %303, i64 0
  %305 = load %struct.storable_picture** %304, align 8
  %306 = getelementptr inbounds %struct.storable_picture* %305, i32 0, i32 28
  %307 = load i16*** %306, align 8
  store i16** %307, i16*** %ref2_pic, align 8
  %308 = load i16* %2, align 2
  %309 = sext i16 %308 to i64
  %310 = load i32* %3, align 4
  %311 = load i16* %list_offset, align 2
  %312 = sext i16 %311 to i32
  %313 = add nsw i32 %310, %312
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [6 x %struct.storable_picture**]* @listX, i32 0, i64 %314
  %316 = load %struct.storable_picture*** %315, align 8
  %317 = getelementptr inbounds %struct.storable_picture** %316, i64 %309
  %318 = load %struct.storable_picture** %317, align 8
  store %struct.storable_picture* %318, %struct.storable_picture** %ref_picture, align 8
  %319 = load %struct.storable_picture** %ref_picture, align 8
  %320 = getelementptr inbounds %struct.storable_picture* %319, i32 0, i32 18
  %321 = load i32* %320, align 4
  store i32 %321, i32* %img_width, align 4
  %322 = load %struct.storable_picture** %ref_picture, align 8
  %323 = getelementptr inbounds %struct.storable_picture* %322, i32 0, i32 19
  %324 = load i32* %323, align 4
  store i32 %324, i32* %img_height, align 4
  %325 = load %struct.storable_picture** %ref_picture, align 8
  %326 = getelementptr inbounds %struct.storable_picture* %325, i32 0, i32 18
  %327 = load i32* %326, align 4
  %328 = load i16* %blocksize_x, align 2
  %329 = sext i16 %328 to i32
  %330 = sub nsw i32 %327, %329
  %331 = add nsw i32 %330, 1
  %332 = shl i32 %331, 2
  %333 = trunc i32 %332 to i16
  store i16 %333, i16* %max_pos_x4, align 2
  %334 = load %struct.storable_picture** %ref_picture, align 8
  %335 = getelementptr inbounds %struct.storable_picture* %334, i32 0, i32 19
  %336 = load i32* %335, align 4
  %337 = load i16* %blocksize_y, align 2
  %338 = sext i16 %337 to i32
  %339 = sub nsw i32 %336, %338
  %340 = add nsw i32 %339, 1
  %341 = shl i32 %340, 2
  %342 = trunc i32 %341 to i16
  store i16 %342, i16* %max_pos_y4, align 2
  %343 = load i16** %9, align 8
  %344 = load i16* %343, align 2
  %345 = sext i16 %344 to i32
  %346 = shl i32 %345, 2
  %347 = trunc i32 %346 to i16
  store i16 %347, i16* %343, align 2
  %348 = load i16** %10, align 8
  %349 = load i16* %348, align 2
  %350 = sext i16 %349 to i32
  %351 = shl i32 %350, 2
  %352 = trunc i32 %351 to i16
  store i16 %352, i16* %348, align 2
  %353 = load i16* %pic4_pix_x, align 2
  %354 = sext i16 %353 to i32
  %355 = load i16** %9, align 8
  %356 = load i16* %355, align 2
  %357 = sext i16 %356 to i32
  %358 = add nsw i32 %354, %357
  %359 = icmp sgt i32 %358, 1
  br i1 %359, label %360, label %391

; <label>:360                                     ; preds = %299
  %361 = load i16* %pic4_pix_x, align 2
  %362 = sext i16 %361 to i32
  %363 = load i16** %9, align 8
  %364 = load i16* %363, align 2
  %365 = sext i16 %364 to i32
  %366 = add nsw i32 %362, %365
  %367 = load i16* %max_pos_x4, align 2
  %368 = sext i16 %367 to i32
  %369 = sub nsw i32 %368, 2
  %370 = icmp slt i32 %366, %369
  br i1 %370, label %371, label %391

; <label>:371                                     ; preds = %360
  %372 = load i16* %pic4_pix_y, align 2
  %373 = sext i16 %372 to i32
  %374 = load i16** %10, align 8
  %375 = load i16* %374, align 2
  %376 = sext i16 %375 to i32
  %377 = add nsw i32 %373, %376
  %378 = icmp sgt i32 %377, 1
  br i1 %378, label %379, label %391

; <label>:379                                     ; preds = %371
  %380 = load i16* %pic4_pix_y, align 2
  %381 = sext i16 %380 to i32
  %382 = load i16** %10, align 8
  %383 = load i16* %382, align 2
  %384 = sext i16 %383 to i32
  %385 = add nsw i32 %381, %384
  %386 = load i16* %max_pos_y4, align 2
  %387 = sext i16 %386 to i32
  %388 = sub nsw i32 %387, 2
  %389 = icmp slt i32 %385, %388
  br i1 %389, label %390, label %391

; <label>:390                                     ; preds = %379
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %392

; <label>:391                                     ; preds = %379, %371, %360, %299
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %392

; <label>:392                                     ; preds = %391, %390
  %393 = load i16* %pic4_pix_x, align 2
  %394 = sext i16 %393 to i32
  %395 = load i16** %11, align 8
  %396 = load i16* %395, align 2
  %397 = sext i16 %396 to i32
  %398 = add nsw i32 %394, %397
  %399 = icmp sgt i32 %398, 1
  br i1 %399, label %400, label %431

; <label>:400                                     ; preds = %392
  %401 = load i16* %pic4_pix_x, align 2
  %402 = sext i16 %401 to i32
  %403 = load i16** %11, align 8
  %404 = load i16* %403, align 2
  %405 = sext i16 %404 to i32
  %406 = add nsw i32 %402, %405
  %407 = load i16* %max_pos_x4, align 2
  %408 = sext i16 %407 to i32
  %409 = sub nsw i32 %408, 2
  %410 = icmp slt i32 %406, %409
  br i1 %410, label %411, label %431

; <label>:411                                     ; preds = %400
  %412 = load i16* %pic4_pix_y, align 2
  %413 = sext i16 %412 to i32
  %414 = load i16** %12, align 8
  %415 = load i16* %414, align 2
  %416 = sext i16 %415 to i32
  %417 = add nsw i32 %413, %416
  %418 = icmp sgt i32 %417, 1
  br i1 %418, label %419, label %431

; <label>:419                                     ; preds = %411
  %420 = load i16* %pic4_pix_y, align 2
  %421 = sext i16 %420 to i32
  %422 = load i16** %12, align 8
  %423 = load i16* %422, align 2
  %424 = sext i16 %423 to i32
  %425 = add nsw i32 %421, %424
  %426 = load i16* %max_pos_y4, align 2
  %427 = sext i16 %426 to i32
  %428 = sub nsw i32 %427, 2
  %429 = icmp slt i32 %425, %428
  br i1 %429, label %430, label %431

; <label>:430                                     ; preds = %419
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  br label %432

; <label>:431                                     ; preds = %419, %411, %400, %392
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  br label %432

; <label>:432                                     ; preds = %431, %430
  store i16 0, i16* %best_pos, align 2
  %433 = load i16* %min_pos2, align 2
  store i16 %433, i16* %pos, align 2
  br label %434

; <label>:434                                     ; preds = %3616, %432
  %435 = load i16* %pos, align 2
  %436 = sext i16 %435 to i32
  %437 = load i16* %max_pos2, align 2
  %438 = sext i16 %437 to i32
  %439 = icmp slt i32 %436, %438
  br i1 %439, label %440, label %3619

; <label>:440                                     ; preds = %434
  %441 = load i16** %9, align 8
  %442 = load i16* %441, align 2
  %443 = sext i16 %442 to i32
  %444 = load i16* %pos, align 2
  %445 = sext i16 %444 to i64
  %446 = load i32** @spiral_search_x, align 8
  %447 = getelementptr inbounds i32* %446, i64 %445
  %448 = load i32* %447, align 4
  %449 = shl i32 %448, 1
  %450 = add nsw i32 %443, %449
  %451 = trunc i32 %450 to i16
  store i16 %451, i16* %cand_mv_x, align 2
  %452 = load i16** %10, align 8
  %453 = load i16* %452, align 2
  %454 = sext i16 %453 to i32
  %455 = load i16* %pos, align 2
  %456 = sext i16 %455 to i64
  %457 = load i32** @spiral_search_y, align 8
  %458 = getelementptr inbounds i32* %457, i64 %456
  %459 = load i32* %458, align 4
  %460 = shl i32 %459, 1
  %461 = add nsw i32 %454, %460
  %462 = trunc i32 %461 to i16
  store i16 %462, i16* %cand_mv_y, align 2
  %463 = load i32* %lambda_factor, align 4
  %464 = load i16* %cand_mv_x, align 2
  %465 = sext i16 %464 to i32
  %466 = load i16* %mv_shift, align 2
  %467 = sext i16 %466 to i32
  %468 = shl i32 %465, %467
  %469 = load i16* %7, align 2
  %470 = sext i16 %469 to i32
  %471 = sub nsw i32 %468, %470
  %472 = sext i32 %471 to i64
  %473 = load i32** @mvbits, align 8
  %474 = getelementptr inbounds i32* %473, i64 %472
  %475 = load i32* %474, align 4
  %476 = load i16* %cand_mv_y, align 2
  %477 = sext i16 %476 to i32
  %478 = load i16* %mv_shift, align 2
  %479 = sext i16 %478 to i32
  %480 = shl i32 %477, %479
  %481 = load i16* %8, align 2
  %482 = sext i16 %481 to i32
  %483 = sub nsw i32 %480, %482
  %484 = sext i32 %483 to i64
  %485 = load i32** @mvbits, align 8
  %486 = getelementptr inbounds i32* %485, i64 %484
  %487 = load i32* %486, align 4
  %488 = add nsw i32 %475, %487
  %489 = mul nsw i32 %463, %488
  %490 = ashr i32 %489, 16
  %491 = trunc i32 %490 to i16
  store i16 %491, i16* %mcost, align 2
  store i16 0, i16* %y0, align 2
  store i16 0, i16* %abort_search, align 2
  br label %492

; <label>:492                                     ; preds = %3587, %440
  %493 = load i16* %y0, align 2
  %494 = sext i16 %493 to i32
  %495 = load i16* %blocksize_y, align 2
  %496 = sext i16 %495 to i32
  %497 = icmp slt i32 %494, %496
  br i1 %497, label %498, label %502

; <label>:498                                     ; preds = %492
  %499 = load i16* %abort_search, align 2
  %500 = icmp ne i16 %499, 0
  %501 = xor i1 %500, true
  br label %502

; <label>:502                                     ; preds = %498, %492
  %503 = phi i1 [ false, %492 ], [ %501, %498 ]
  br i1 %503, label %504, label %3592

; <label>:504                                     ; preds = %502
  %505 = load i32* %5, align 4
  %506 = load i16* %y0, align 2
  %507 = sext i16 %506 to i32
  %508 = add nsw i32 %505, %507
  %509 = shl i32 %508, 2
  %510 = load i16** %12, align 8
  %511 = load i16* %510, align 2
  %512 = sext i16 %511 to i32
  %513 = add nsw i32 %509, %512
  %514 = trunc i32 %513 to i16
  store i16 %514, i16* %sy0, align 2
  %515 = load i32* %5, align 4
  %516 = load i16* %y0, align 2
  %517 = sext i16 %516 to i32
  %518 = add nsw i32 %515, %517
  %519 = shl i32 %518, 2
  %520 = load i16* %cand_mv_y, align 2
  %521 = sext i16 %520 to i32
  %522 = add nsw i32 %519, %521
  %523 = trunc i32 %522 to i16
  store i16 %523, i16* %ry0, align 2
  %524 = load i16* %apply_weights, align 2
  %525 = icmp ne i16 %524, 0
  br i1 %525, label %526, label %2904

; <label>:526                                     ; preds = %504
  store i16 0, i16* %x0, align 2
  br label %527

; <label>:527                                     ; preds = %2898, %526
  %528 = load i16* %x0, align 2
  %529 = sext i16 %528 to i32
  %530 = load i16* %blocksize_x, align 2
  %531 = sext i16 %530 to i32
  %532 = icmp slt i32 %529, %531
  br i1 %532, label %533, label %2903

; <label>:533                                     ; preds = %527
  %534 = load i32* %4, align 4
  %535 = load i16* %x0, align 2
  %536 = sext i16 %535 to i32
  %537 = add nsw i32 %534, %536
  %538 = shl i32 %537, 2
  %539 = load i16** %11, align 8
  %540 = load i16* %539, align 2
  %541 = sext i16 %540 to i32
  %542 = add nsw i32 %538, %541
  %543 = trunc i32 %542 to i16
  store i16 %543, i16* %sx0, align 2
  %544 = load i32* %4, align 4
  %545 = load i16* %x0, align 2
  %546 = sext i16 %545 to i32
  %547 = add nsw i32 %544, %546
  %548 = shl i32 %547, 2
  %549 = load i16* %cand_mv_x, align 2
  %550 = sext i16 %549 to i32
  %551 = add nsw i32 %548, %550
  %552 = trunc i32 %551 to i16
  store i16 %552, i16* %rx0, align 2
  %553 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  store i32* %553, i32** %d, align 8
  %554 = load i16* %sy0, align 2
  store i16 %554, i16* %sy, align 2
  %555 = load i16* %ry0, align 2
  store i16 %555, i16* %ry, align 2
  %556 = load i16* %y0, align 2
  %557 = sext i16 %556 to i64
  %558 = load i16*** %1, align 8
  %559 = getelementptr inbounds i16** %558, i64 %557
  %560 = load i16** %559, align 8
  store i16* %560, i16** %orig_line, align 8
  %561 = load i16* %weightSpic, align 2
  %562 = sext i16 %561 to i32
  %563 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %564 = load i16*** %ref1_pic, align 8
  %565 = load i16* %sy, align 2
  %566 = sext i16 %565 to i32
  %567 = load i16* %sx0, align 2
  %568 = sext i16 %567 to i32
  %569 = load i32* %img_height, align 4
  %570 = load i32* %img_width, align 4
  %571 = call zeroext i16 %563(i16** %564, i32 %566, i32 %568, i32 %569, i32 %570)
  %572 = zext i16 %571 to i32
  %573 = mul nsw i32 %562, %572
  %574 = load i16* %weightRpic, align 2
  %575 = sext i16 %574 to i32
  %576 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %577 = load i16*** %ref2_pic, align 8
  %578 = load i16* %ry, align 2
  %579 = sext i16 %578 to i32
  %580 = load i16* %rx0, align 2
  %581 = sext i16 %580 to i32
  %582 = load i32* %img_height, align 4
  %583 = load i32* %img_width, align 4
  %584 = call zeroext i16 %576(i16** %577, i32 %579, i32 %581, i32 %582, i32 %583)
  %585 = zext i16 %584 to i32
  %586 = mul nsw i32 %575, %585
  %587 = add nsw i32 %573, %586
  %588 = load i32* @wp_luma_round, align 4
  %589 = mul nsw i32 2, %588
  %590 = add nsw i32 %587, %589
  %591 = load i32* @luma_log_weight_denom, align 4
  %592 = add nsw i32 %591, 1
  %593 = ashr i32 %590, %592
  %594 = load i16* %offsetBi, align 2
  %595 = sext i16 %594 to i32
  %596 = add nsw i32 %593, %595
  %597 = icmp slt i32 %596, 0
  br i1 %597, label %598, label %599

; <label>:598                                     ; preds = %533
  br label %683

; <label>:599                                     ; preds = %533
  %600 = load i16* %weightSpic, align 2
  %601 = sext i16 %600 to i32
  %602 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %603 = load i16*** %ref1_pic, align 8
  %604 = load i16* %sy, align 2
  %605 = sext i16 %604 to i32
  %606 = load i16* %sx0, align 2
  %607 = sext i16 %606 to i32
  %608 = load i32* %img_height, align 4
  %609 = load i32* %img_width, align 4
  %610 = call zeroext i16 %602(i16** %603, i32 %605, i32 %607, i32 %608, i32 %609)
  %611 = zext i16 %610 to i32
  %612 = mul nsw i32 %601, %611
  %613 = load i16* %weightRpic, align 2
  %614 = sext i16 %613 to i32
  %615 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %616 = load i16*** %ref2_pic, align 8
  %617 = load i16* %ry, align 2
  %618 = sext i16 %617 to i32
  %619 = load i16* %rx0, align 2
  %620 = sext i16 %619 to i32
  %621 = load i32* %img_height, align 4
  %622 = load i32* %img_width, align 4
  %623 = call zeroext i16 %615(i16** %616, i32 %618, i32 %620, i32 %621, i32 %622)
  %624 = zext i16 %623 to i32
  %625 = mul nsw i32 %614, %624
  %626 = add nsw i32 %612, %625
  %627 = load i32* @wp_luma_round, align 4
  %628 = mul nsw i32 2, %627
  %629 = add nsw i32 %626, %628
  %630 = load i32* @luma_log_weight_denom, align 4
  %631 = add nsw i32 %630, 1
  %632 = ashr i32 %629, %631
  %633 = load i16* %offsetBi, align 2
  %634 = sext i16 %633 to i32
  %635 = add nsw i32 %632, %634
  %636 = load %struct.ImageParameters** @img, align 8
  %637 = getelementptr inbounds %struct.ImageParameters* %636, i32 0, i32 155
  %638 = load i32* %637, align 4
  %639 = icmp sgt i32 %635, %638
  br i1 %639, label %640, label %644

; <label>:640                                     ; preds = %599
  %641 = load %struct.ImageParameters** @img, align 8
  %642 = getelementptr inbounds %struct.ImageParameters* %641, i32 0, i32 155
  %643 = load i32* %642, align 4
  br label %681

; <label>:644                                     ; preds = %599
  %645 = load i16* %weightSpic, align 2
  %646 = sext i16 %645 to i32
  %647 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %648 = load i16*** %ref1_pic, align 8
  %649 = load i16* %sy, align 2
  %650 = sext i16 %649 to i32
  %651 = load i16* %sx0, align 2
  %652 = sext i16 %651 to i32
  %653 = load i32* %img_height, align 4
  %654 = load i32* %img_width, align 4
  %655 = call zeroext i16 %647(i16** %648, i32 %650, i32 %652, i32 %653, i32 %654)
  %656 = zext i16 %655 to i32
  %657 = mul nsw i32 %646, %656
  %658 = load i16* %weightRpic, align 2
  %659 = sext i16 %658 to i32
  %660 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %661 = load i16*** %ref2_pic, align 8
  %662 = load i16* %ry, align 2
  %663 = sext i16 %662 to i32
  %664 = load i16* %rx0, align 2
  %665 = sext i16 %664 to i32
  %666 = load i32* %img_height, align 4
  %667 = load i32* %img_width, align 4
  %668 = call zeroext i16 %660(i16** %661, i32 %663, i32 %665, i32 %666, i32 %667)
  %669 = zext i16 %668 to i32
  %670 = mul nsw i32 %659, %669
  %671 = add nsw i32 %657, %670
  %672 = load i32* @wp_luma_round, align 4
  %673 = mul nsw i32 2, %672
  %674 = add nsw i32 %671, %673
  %675 = load i32* @luma_log_weight_denom, align 4
  %676 = add nsw i32 %675, 1
  %677 = ashr i32 %674, %676
  %678 = load i16* %offsetBi, align 2
  %679 = sext i16 %678 to i32
  %680 = add nsw i32 %677, %679
  br label %681

; <label>:681                                     ; preds = %644, %640
  %682 = phi i32 [ %643, %640 ], [ %680, %644 ]
  br label %683

; <label>:683                                     ; preds = %681, %598
  %684 = phi i32 [ 0, %598 ], [ %682, %681 ]
  store i32 %684, i32* %weightedpel, align 4
  %685 = load i16* %x0, align 2
  %686 = sext i16 %685 to i64
  %687 = load i16** %orig_line, align 8
  %688 = getelementptr inbounds i16* %687, i64 %686
  %689 = load i16* %688, align 2
  %690 = zext i16 %689 to i32
  %691 = load i32* %weightedpel, align 4
  %692 = sub nsw i32 %690, %691
  %693 = load i32** %d, align 8
  %694 = getelementptr inbounds i32* %693, i32 1
  store i32* %694, i32** %d, align 8
  store i32 %692, i32* %693, align 4
  %695 = load i16* %weightSpic, align 2
  %696 = sext i16 %695 to i32
  %697 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %698 = load i16*** %ref1_pic, align 8
  %699 = load i16* %sy, align 2
  %700 = sext i16 %699 to i32
  %701 = load i16* %sx0, align 2
  %702 = sext i16 %701 to i32
  %703 = add nsw i32 %702, 4
  %704 = load i32* %img_height, align 4
  %705 = load i32* %img_width, align 4
  %706 = call zeroext i16 %697(i16** %698, i32 %700, i32 %703, i32 %704, i32 %705)
  %707 = zext i16 %706 to i32
  %708 = mul nsw i32 %696, %707
  %709 = load i16* %weightRpic, align 2
  %710 = sext i16 %709 to i32
  %711 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %712 = load i16*** %ref2_pic, align 8
  %713 = load i16* %ry, align 2
  %714 = sext i16 %713 to i32
  %715 = load i16* %rx0, align 2
  %716 = sext i16 %715 to i32
  %717 = add nsw i32 %716, 4
  %718 = load i32* %img_height, align 4
  %719 = load i32* %img_width, align 4
  %720 = call zeroext i16 %711(i16** %712, i32 %714, i32 %717, i32 %718, i32 %719)
  %721 = zext i16 %720 to i32
  %722 = mul nsw i32 %710, %721
  %723 = add nsw i32 %708, %722
  %724 = load i32* @wp_luma_round, align 4
  %725 = mul nsw i32 2, %724
  %726 = add nsw i32 %723, %725
  %727 = load i32* @luma_log_weight_denom, align 4
  %728 = add nsw i32 %727, 1
  %729 = ashr i32 %726, %728
  %730 = load i16* %offsetBi, align 2
  %731 = sext i16 %730 to i32
  %732 = add nsw i32 %729, %731
  %733 = icmp slt i32 %732, 0
  br i1 %733, label %734, label %735

; <label>:734                                     ; preds = %683
  br label %823

; <label>:735                                     ; preds = %683
  %736 = load i16* %weightSpic, align 2
  %737 = sext i16 %736 to i32
  %738 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %739 = load i16*** %ref1_pic, align 8
  %740 = load i16* %sy, align 2
  %741 = sext i16 %740 to i32
  %742 = load i16* %sx0, align 2
  %743 = sext i16 %742 to i32
  %744 = add nsw i32 %743, 4
  %745 = load i32* %img_height, align 4
  %746 = load i32* %img_width, align 4
  %747 = call zeroext i16 %738(i16** %739, i32 %741, i32 %744, i32 %745, i32 %746)
  %748 = zext i16 %747 to i32
  %749 = mul nsw i32 %737, %748
  %750 = load i16* %weightRpic, align 2
  %751 = sext i16 %750 to i32
  %752 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %753 = load i16*** %ref2_pic, align 8
  %754 = load i16* %ry, align 2
  %755 = sext i16 %754 to i32
  %756 = load i16* %rx0, align 2
  %757 = sext i16 %756 to i32
  %758 = add nsw i32 %757, 4
  %759 = load i32* %img_height, align 4
  %760 = load i32* %img_width, align 4
  %761 = call zeroext i16 %752(i16** %753, i32 %755, i32 %758, i32 %759, i32 %760)
  %762 = zext i16 %761 to i32
  %763 = mul nsw i32 %751, %762
  %764 = add nsw i32 %749, %763
  %765 = load i32* @wp_luma_round, align 4
  %766 = mul nsw i32 2, %765
  %767 = add nsw i32 %764, %766
  %768 = load i32* @luma_log_weight_denom, align 4
  %769 = add nsw i32 %768, 1
  %770 = ashr i32 %767, %769
  %771 = load i16* %offsetBi, align 2
  %772 = sext i16 %771 to i32
  %773 = add nsw i32 %770, %772
  %774 = load %struct.ImageParameters** @img, align 8
  %775 = getelementptr inbounds %struct.ImageParameters* %774, i32 0, i32 155
  %776 = load i32* %775, align 4
  %777 = icmp sgt i32 %773, %776
  br i1 %777, label %778, label %782

; <label>:778                                     ; preds = %735
  %779 = load %struct.ImageParameters** @img, align 8
  %780 = getelementptr inbounds %struct.ImageParameters* %779, i32 0, i32 155
  %781 = load i32* %780, align 4
  br label %821

; <label>:782                                     ; preds = %735
  %783 = load i16* %weightSpic, align 2
  %784 = sext i16 %783 to i32
  %785 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %786 = load i16*** %ref1_pic, align 8
  %787 = load i16* %sy, align 2
  %788 = sext i16 %787 to i32
  %789 = load i16* %sx0, align 2
  %790 = sext i16 %789 to i32
  %791 = add nsw i32 %790, 4
  %792 = load i32* %img_height, align 4
  %793 = load i32* %img_width, align 4
  %794 = call zeroext i16 %785(i16** %786, i32 %788, i32 %791, i32 %792, i32 %793)
  %795 = zext i16 %794 to i32
  %796 = mul nsw i32 %784, %795
  %797 = load i16* %weightRpic, align 2
  %798 = sext i16 %797 to i32
  %799 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %800 = load i16*** %ref2_pic, align 8
  %801 = load i16* %ry, align 2
  %802 = sext i16 %801 to i32
  %803 = load i16* %rx0, align 2
  %804 = sext i16 %803 to i32
  %805 = add nsw i32 %804, 4
  %806 = load i32* %img_height, align 4
  %807 = load i32* %img_width, align 4
  %808 = call zeroext i16 %799(i16** %800, i32 %802, i32 %805, i32 %806, i32 %807)
  %809 = zext i16 %808 to i32
  %810 = mul nsw i32 %798, %809
  %811 = add nsw i32 %796, %810
  %812 = load i32* @wp_luma_round, align 4
  %813 = mul nsw i32 2, %812
  %814 = add nsw i32 %811, %813
  %815 = load i32* @luma_log_weight_denom, align 4
  %816 = add nsw i32 %815, 1
  %817 = ashr i32 %814, %816
  %818 = load i16* %offsetBi, align 2
  %819 = sext i16 %818 to i32
  %820 = add nsw i32 %817, %819
  br label %821

; <label>:821                                     ; preds = %782, %778
  %822 = phi i32 [ %781, %778 ], [ %820, %782 ]
  br label %823

; <label>:823                                     ; preds = %821, %734
  %824 = phi i32 [ 0, %734 ], [ %822, %821 ]
  store i32 %824, i32* %weightedpel, align 4
  %825 = load i16* %x0, align 2
  %826 = sext i16 %825 to i32
  %827 = add nsw i32 %826, 1
  %828 = sext i32 %827 to i64
  %829 = load i16** %orig_line, align 8
  %830 = getelementptr inbounds i16* %829, i64 %828
  %831 = load i16* %830, align 2
  %832 = zext i16 %831 to i32
  %833 = load i32* %weightedpel, align 4
  %834 = sub nsw i32 %832, %833
  %835 = load i32** %d, align 8
  %836 = getelementptr inbounds i32* %835, i32 1
  store i32* %836, i32** %d, align 8
  store i32 %834, i32* %835, align 4
  %837 = load i16* %weightSpic, align 2
  %838 = sext i16 %837 to i32
  %839 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %840 = load i16*** %ref1_pic, align 8
  %841 = load i16* %sy, align 2
  %842 = sext i16 %841 to i32
  %843 = load i16* %sx0, align 2
  %844 = sext i16 %843 to i32
  %845 = add nsw i32 %844, 8
  %846 = load i32* %img_height, align 4
  %847 = load i32* %img_width, align 4
  %848 = call zeroext i16 %839(i16** %840, i32 %842, i32 %845, i32 %846, i32 %847)
  %849 = zext i16 %848 to i32
  %850 = mul nsw i32 %838, %849
  %851 = load i16* %weightRpic, align 2
  %852 = sext i16 %851 to i32
  %853 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %854 = load i16*** %ref2_pic, align 8
  %855 = load i16* %ry, align 2
  %856 = sext i16 %855 to i32
  %857 = load i16* %rx0, align 2
  %858 = sext i16 %857 to i32
  %859 = add nsw i32 %858, 8
  %860 = load i32* %img_height, align 4
  %861 = load i32* %img_width, align 4
  %862 = call zeroext i16 %853(i16** %854, i32 %856, i32 %859, i32 %860, i32 %861)
  %863 = zext i16 %862 to i32
  %864 = mul nsw i32 %852, %863
  %865 = add nsw i32 %850, %864
  %866 = load i32* @wp_luma_round, align 4
  %867 = mul nsw i32 2, %866
  %868 = add nsw i32 %865, %867
  %869 = load i32* @luma_log_weight_denom, align 4
  %870 = add nsw i32 %869, 1
  %871 = ashr i32 %868, %870
  %872 = load i16* %offsetBi, align 2
  %873 = sext i16 %872 to i32
  %874 = add nsw i32 %871, %873
  %875 = icmp slt i32 %874, 0
  br i1 %875, label %876, label %877

; <label>:876                                     ; preds = %823
  br label %965

; <label>:877                                     ; preds = %823
  %878 = load i16* %weightSpic, align 2
  %879 = sext i16 %878 to i32
  %880 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %881 = load i16*** %ref1_pic, align 8
  %882 = load i16* %sy, align 2
  %883 = sext i16 %882 to i32
  %884 = load i16* %sx0, align 2
  %885 = sext i16 %884 to i32
  %886 = add nsw i32 %885, 8
  %887 = load i32* %img_height, align 4
  %888 = load i32* %img_width, align 4
  %889 = call zeroext i16 %880(i16** %881, i32 %883, i32 %886, i32 %887, i32 %888)
  %890 = zext i16 %889 to i32
  %891 = mul nsw i32 %879, %890
  %892 = load i16* %weightRpic, align 2
  %893 = sext i16 %892 to i32
  %894 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %895 = load i16*** %ref2_pic, align 8
  %896 = load i16* %ry, align 2
  %897 = sext i16 %896 to i32
  %898 = load i16* %rx0, align 2
  %899 = sext i16 %898 to i32
  %900 = add nsw i32 %899, 8
  %901 = load i32* %img_height, align 4
  %902 = load i32* %img_width, align 4
  %903 = call zeroext i16 %894(i16** %895, i32 %897, i32 %900, i32 %901, i32 %902)
  %904 = zext i16 %903 to i32
  %905 = mul nsw i32 %893, %904
  %906 = add nsw i32 %891, %905
  %907 = load i32* @wp_luma_round, align 4
  %908 = mul nsw i32 2, %907
  %909 = add nsw i32 %906, %908
  %910 = load i32* @luma_log_weight_denom, align 4
  %911 = add nsw i32 %910, 1
  %912 = ashr i32 %909, %911
  %913 = load i16* %offsetBi, align 2
  %914 = sext i16 %913 to i32
  %915 = add nsw i32 %912, %914
  %916 = load %struct.ImageParameters** @img, align 8
  %917 = getelementptr inbounds %struct.ImageParameters* %916, i32 0, i32 155
  %918 = load i32* %917, align 4
  %919 = icmp sgt i32 %915, %918
  br i1 %919, label %920, label %924

; <label>:920                                     ; preds = %877
  %921 = load %struct.ImageParameters** @img, align 8
  %922 = getelementptr inbounds %struct.ImageParameters* %921, i32 0, i32 155
  %923 = load i32* %922, align 4
  br label %963

; <label>:924                                     ; preds = %877
  %925 = load i16* %weightSpic, align 2
  %926 = sext i16 %925 to i32
  %927 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %928 = load i16*** %ref1_pic, align 8
  %929 = load i16* %sy, align 2
  %930 = sext i16 %929 to i32
  %931 = load i16* %sx0, align 2
  %932 = sext i16 %931 to i32
  %933 = add nsw i32 %932, 8
  %934 = load i32* %img_height, align 4
  %935 = load i32* %img_width, align 4
  %936 = call zeroext i16 %927(i16** %928, i32 %930, i32 %933, i32 %934, i32 %935)
  %937 = zext i16 %936 to i32
  %938 = mul nsw i32 %926, %937
  %939 = load i16* %weightRpic, align 2
  %940 = sext i16 %939 to i32
  %941 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %942 = load i16*** %ref2_pic, align 8
  %943 = load i16* %ry, align 2
  %944 = sext i16 %943 to i32
  %945 = load i16* %rx0, align 2
  %946 = sext i16 %945 to i32
  %947 = add nsw i32 %946, 8
  %948 = load i32* %img_height, align 4
  %949 = load i32* %img_width, align 4
  %950 = call zeroext i16 %941(i16** %942, i32 %944, i32 %947, i32 %948, i32 %949)
  %951 = zext i16 %950 to i32
  %952 = mul nsw i32 %940, %951
  %953 = add nsw i32 %938, %952
  %954 = load i32* @wp_luma_round, align 4
  %955 = mul nsw i32 2, %954
  %956 = add nsw i32 %953, %955
  %957 = load i32* @luma_log_weight_denom, align 4
  %958 = add nsw i32 %957, 1
  %959 = ashr i32 %956, %958
  %960 = load i16* %offsetBi, align 2
  %961 = sext i16 %960 to i32
  %962 = add nsw i32 %959, %961
  br label %963

; <label>:963                                     ; preds = %924, %920
  %964 = phi i32 [ %923, %920 ], [ %962, %924 ]
  br label %965

; <label>:965                                     ; preds = %963, %876
  %966 = phi i32 [ 0, %876 ], [ %964, %963 ]
  store i32 %966, i32* %weightedpel, align 4
  %967 = load i16* %x0, align 2
  %968 = sext i16 %967 to i32
  %969 = add nsw i32 %968, 2
  %970 = sext i32 %969 to i64
  %971 = load i16** %orig_line, align 8
  %972 = getelementptr inbounds i16* %971, i64 %970
  %973 = load i16* %972, align 2
  %974 = zext i16 %973 to i32
  %975 = load i32* %weightedpel, align 4
  %976 = sub nsw i32 %974, %975
  %977 = load i32** %d, align 8
  %978 = getelementptr inbounds i32* %977, i32 1
  store i32* %978, i32** %d, align 8
  store i32 %976, i32* %977, align 4
  %979 = load i16* %weightSpic, align 2
  %980 = sext i16 %979 to i32
  %981 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %982 = load i16*** %ref1_pic, align 8
  %983 = load i16* %sy, align 2
  %984 = sext i16 %983 to i32
  %985 = load i16* %sx0, align 2
  %986 = sext i16 %985 to i32
  %987 = add nsw i32 %986, 12
  %988 = load i32* %img_height, align 4
  %989 = load i32* %img_width, align 4
  %990 = call zeroext i16 %981(i16** %982, i32 %984, i32 %987, i32 %988, i32 %989)
  %991 = zext i16 %990 to i32
  %992 = mul nsw i32 %980, %991
  %993 = load i16* %weightRpic, align 2
  %994 = sext i16 %993 to i32
  %995 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %996 = load i16*** %ref2_pic, align 8
  %997 = load i16* %ry, align 2
  %998 = sext i16 %997 to i32
  %999 = load i16* %rx0, align 2
  %1000 = sext i16 %999 to i32
  %1001 = add nsw i32 %1000, 12
  %1002 = load i32* %img_height, align 4
  %1003 = load i32* %img_width, align 4
  %1004 = call zeroext i16 %995(i16** %996, i32 %998, i32 %1001, i32 %1002, i32 %1003)
  %1005 = zext i16 %1004 to i32
  %1006 = mul nsw i32 %994, %1005
  %1007 = add nsw i32 %992, %1006
  %1008 = load i32* @wp_luma_round, align 4
  %1009 = mul nsw i32 2, %1008
  %1010 = add nsw i32 %1007, %1009
  %1011 = load i32* @luma_log_weight_denom, align 4
  %1012 = add nsw i32 %1011, 1
  %1013 = ashr i32 %1010, %1012
  %1014 = load i16* %offsetBi, align 2
  %1015 = sext i16 %1014 to i32
  %1016 = add nsw i32 %1013, %1015
  %1017 = icmp slt i32 %1016, 0
  br i1 %1017, label %1018, label %1019

; <label>:1018                                    ; preds = %965
  br label %1107

; <label>:1019                                    ; preds = %965
  %1020 = load i16* %weightSpic, align 2
  %1021 = sext i16 %1020 to i32
  %1022 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1023 = load i16*** %ref1_pic, align 8
  %1024 = load i16* %sy, align 2
  %1025 = sext i16 %1024 to i32
  %1026 = load i16* %sx0, align 2
  %1027 = sext i16 %1026 to i32
  %1028 = add nsw i32 %1027, 12
  %1029 = load i32* %img_height, align 4
  %1030 = load i32* %img_width, align 4
  %1031 = call zeroext i16 %1022(i16** %1023, i32 %1025, i32 %1028, i32 %1029, i32 %1030)
  %1032 = zext i16 %1031 to i32
  %1033 = mul nsw i32 %1021, %1032
  %1034 = load i16* %weightRpic, align 2
  %1035 = sext i16 %1034 to i32
  %1036 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1037 = load i16*** %ref2_pic, align 8
  %1038 = load i16* %ry, align 2
  %1039 = sext i16 %1038 to i32
  %1040 = load i16* %rx0, align 2
  %1041 = sext i16 %1040 to i32
  %1042 = add nsw i32 %1041, 12
  %1043 = load i32* %img_height, align 4
  %1044 = load i32* %img_width, align 4
  %1045 = call zeroext i16 %1036(i16** %1037, i32 %1039, i32 %1042, i32 %1043, i32 %1044)
  %1046 = zext i16 %1045 to i32
  %1047 = mul nsw i32 %1035, %1046
  %1048 = add nsw i32 %1033, %1047
  %1049 = load i32* @wp_luma_round, align 4
  %1050 = mul nsw i32 2, %1049
  %1051 = add nsw i32 %1048, %1050
  %1052 = load i32* @luma_log_weight_denom, align 4
  %1053 = add nsw i32 %1052, 1
  %1054 = ashr i32 %1051, %1053
  %1055 = load i16* %offsetBi, align 2
  %1056 = sext i16 %1055 to i32
  %1057 = add nsw i32 %1054, %1056
  %1058 = load %struct.ImageParameters** @img, align 8
  %1059 = getelementptr inbounds %struct.ImageParameters* %1058, i32 0, i32 155
  %1060 = load i32* %1059, align 4
  %1061 = icmp sgt i32 %1057, %1060
  br i1 %1061, label %1062, label %1066

; <label>:1062                                    ; preds = %1019
  %1063 = load %struct.ImageParameters** @img, align 8
  %1064 = getelementptr inbounds %struct.ImageParameters* %1063, i32 0, i32 155
  %1065 = load i32* %1064, align 4
  br label %1105

; <label>:1066                                    ; preds = %1019
  %1067 = load i16* %weightSpic, align 2
  %1068 = sext i16 %1067 to i32
  %1069 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1070 = load i16*** %ref1_pic, align 8
  %1071 = load i16* %sy, align 2
  %1072 = sext i16 %1071 to i32
  %1073 = load i16* %sx0, align 2
  %1074 = sext i16 %1073 to i32
  %1075 = add nsw i32 %1074, 12
  %1076 = load i32* %img_height, align 4
  %1077 = load i32* %img_width, align 4
  %1078 = call zeroext i16 %1069(i16** %1070, i32 %1072, i32 %1075, i32 %1076, i32 %1077)
  %1079 = zext i16 %1078 to i32
  %1080 = mul nsw i32 %1068, %1079
  %1081 = load i16* %weightRpic, align 2
  %1082 = sext i16 %1081 to i32
  %1083 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1084 = load i16*** %ref2_pic, align 8
  %1085 = load i16* %ry, align 2
  %1086 = sext i16 %1085 to i32
  %1087 = load i16* %rx0, align 2
  %1088 = sext i16 %1087 to i32
  %1089 = add nsw i32 %1088, 12
  %1090 = load i32* %img_height, align 4
  %1091 = load i32* %img_width, align 4
  %1092 = call zeroext i16 %1083(i16** %1084, i32 %1086, i32 %1089, i32 %1090, i32 %1091)
  %1093 = zext i16 %1092 to i32
  %1094 = mul nsw i32 %1082, %1093
  %1095 = add nsw i32 %1080, %1094
  %1096 = load i32* @wp_luma_round, align 4
  %1097 = mul nsw i32 2, %1096
  %1098 = add nsw i32 %1095, %1097
  %1099 = load i32* @luma_log_weight_denom, align 4
  %1100 = add nsw i32 %1099, 1
  %1101 = ashr i32 %1098, %1100
  %1102 = load i16* %offsetBi, align 2
  %1103 = sext i16 %1102 to i32
  %1104 = add nsw i32 %1101, %1103
  br label %1105

; <label>:1105                                    ; preds = %1066, %1062
  %1106 = phi i32 [ %1065, %1062 ], [ %1104, %1066 ]
  br label %1107

; <label>:1107                                    ; preds = %1105, %1018
  %1108 = phi i32 [ 0, %1018 ], [ %1106, %1105 ]
  store i32 %1108, i32* %weightedpel, align 4
  %1109 = load i16* %x0, align 2
  %1110 = sext i16 %1109 to i32
  %1111 = add nsw i32 %1110, 3
  %1112 = sext i32 %1111 to i64
  %1113 = load i16** %orig_line, align 8
  %1114 = getelementptr inbounds i16* %1113, i64 %1112
  %1115 = load i16* %1114, align 2
  %1116 = zext i16 %1115 to i32
  %1117 = load i32* %weightedpel, align 4
  %1118 = sub nsw i32 %1116, %1117
  %1119 = load i32** %d, align 8
  %1120 = getelementptr inbounds i32* %1119, i32 1
  store i32* %1120, i32** %d, align 8
  store i32 %1118, i32* %1119, align 4
  %1121 = load i16* %sy0, align 2
  %1122 = sext i16 %1121 to i32
  %1123 = add nsw i32 %1122, 4
  %1124 = trunc i32 %1123 to i16
  store i16 %1124, i16* %sy, align 2
  %1125 = load i16* %ry0, align 2
  %1126 = sext i16 %1125 to i32
  %1127 = add nsw i32 %1126, 4
  %1128 = trunc i32 %1127 to i16
  store i16 %1128, i16* %ry, align 2
  %1129 = load i16* %y0, align 2
  %1130 = sext i16 %1129 to i32
  %1131 = add nsw i32 %1130, 1
  %1132 = sext i32 %1131 to i64
  %1133 = load i16*** %1, align 8
  %1134 = getelementptr inbounds i16** %1133, i64 %1132
  %1135 = load i16** %1134, align 8
  store i16* %1135, i16** %orig_line, align 8
  %1136 = load i16* %weightSpic, align 2
  %1137 = sext i16 %1136 to i32
  %1138 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1139 = load i16*** %ref1_pic, align 8
  %1140 = load i16* %sy, align 2
  %1141 = sext i16 %1140 to i32
  %1142 = load i16* %sx0, align 2
  %1143 = sext i16 %1142 to i32
  %1144 = load i32* %img_height, align 4
  %1145 = load i32* %img_width, align 4
  %1146 = call zeroext i16 %1138(i16** %1139, i32 %1141, i32 %1143, i32 %1144, i32 %1145)
  %1147 = zext i16 %1146 to i32
  %1148 = mul nsw i32 %1137, %1147
  %1149 = load i16* %weightRpic, align 2
  %1150 = sext i16 %1149 to i32
  %1151 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1152 = load i16*** %ref2_pic, align 8
  %1153 = load i16* %ry, align 2
  %1154 = sext i16 %1153 to i32
  %1155 = load i16* %rx0, align 2
  %1156 = sext i16 %1155 to i32
  %1157 = load i32* %img_height, align 4
  %1158 = load i32* %img_width, align 4
  %1159 = call zeroext i16 %1151(i16** %1152, i32 %1154, i32 %1156, i32 %1157, i32 %1158)
  %1160 = zext i16 %1159 to i32
  %1161 = mul nsw i32 %1150, %1160
  %1162 = add nsw i32 %1148, %1161
  %1163 = load i32* @wp_luma_round, align 4
  %1164 = mul nsw i32 2, %1163
  %1165 = add nsw i32 %1162, %1164
  %1166 = load i32* @luma_log_weight_denom, align 4
  %1167 = add nsw i32 %1166, 1
  %1168 = ashr i32 %1165, %1167
  %1169 = load i16* %offsetBi, align 2
  %1170 = sext i16 %1169 to i32
  %1171 = add nsw i32 %1168, %1170
  %1172 = icmp slt i32 %1171, 0
  br i1 %1172, label %1173, label %1174

; <label>:1173                                    ; preds = %1107
  br label %1258

; <label>:1174                                    ; preds = %1107
  %1175 = load i16* %weightSpic, align 2
  %1176 = sext i16 %1175 to i32
  %1177 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1178 = load i16*** %ref1_pic, align 8
  %1179 = load i16* %sy, align 2
  %1180 = sext i16 %1179 to i32
  %1181 = load i16* %sx0, align 2
  %1182 = sext i16 %1181 to i32
  %1183 = load i32* %img_height, align 4
  %1184 = load i32* %img_width, align 4
  %1185 = call zeroext i16 %1177(i16** %1178, i32 %1180, i32 %1182, i32 %1183, i32 %1184)
  %1186 = zext i16 %1185 to i32
  %1187 = mul nsw i32 %1176, %1186
  %1188 = load i16* %weightRpic, align 2
  %1189 = sext i16 %1188 to i32
  %1190 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1191 = load i16*** %ref2_pic, align 8
  %1192 = load i16* %ry, align 2
  %1193 = sext i16 %1192 to i32
  %1194 = load i16* %rx0, align 2
  %1195 = sext i16 %1194 to i32
  %1196 = load i32* %img_height, align 4
  %1197 = load i32* %img_width, align 4
  %1198 = call zeroext i16 %1190(i16** %1191, i32 %1193, i32 %1195, i32 %1196, i32 %1197)
  %1199 = zext i16 %1198 to i32
  %1200 = mul nsw i32 %1189, %1199
  %1201 = add nsw i32 %1187, %1200
  %1202 = load i32* @wp_luma_round, align 4
  %1203 = mul nsw i32 2, %1202
  %1204 = add nsw i32 %1201, %1203
  %1205 = load i32* @luma_log_weight_denom, align 4
  %1206 = add nsw i32 %1205, 1
  %1207 = ashr i32 %1204, %1206
  %1208 = load i16* %offsetBi, align 2
  %1209 = sext i16 %1208 to i32
  %1210 = add nsw i32 %1207, %1209
  %1211 = load %struct.ImageParameters** @img, align 8
  %1212 = getelementptr inbounds %struct.ImageParameters* %1211, i32 0, i32 155
  %1213 = load i32* %1212, align 4
  %1214 = icmp sgt i32 %1210, %1213
  br i1 %1214, label %1215, label %1219

; <label>:1215                                    ; preds = %1174
  %1216 = load %struct.ImageParameters** @img, align 8
  %1217 = getelementptr inbounds %struct.ImageParameters* %1216, i32 0, i32 155
  %1218 = load i32* %1217, align 4
  br label %1256

; <label>:1219                                    ; preds = %1174
  %1220 = load i16* %weightSpic, align 2
  %1221 = sext i16 %1220 to i32
  %1222 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1223 = load i16*** %ref1_pic, align 8
  %1224 = load i16* %sy, align 2
  %1225 = sext i16 %1224 to i32
  %1226 = load i16* %sx0, align 2
  %1227 = sext i16 %1226 to i32
  %1228 = load i32* %img_height, align 4
  %1229 = load i32* %img_width, align 4
  %1230 = call zeroext i16 %1222(i16** %1223, i32 %1225, i32 %1227, i32 %1228, i32 %1229)
  %1231 = zext i16 %1230 to i32
  %1232 = mul nsw i32 %1221, %1231
  %1233 = load i16* %weightRpic, align 2
  %1234 = sext i16 %1233 to i32
  %1235 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1236 = load i16*** %ref2_pic, align 8
  %1237 = load i16* %ry, align 2
  %1238 = sext i16 %1237 to i32
  %1239 = load i16* %rx0, align 2
  %1240 = sext i16 %1239 to i32
  %1241 = load i32* %img_height, align 4
  %1242 = load i32* %img_width, align 4
  %1243 = call zeroext i16 %1235(i16** %1236, i32 %1238, i32 %1240, i32 %1241, i32 %1242)
  %1244 = zext i16 %1243 to i32
  %1245 = mul nsw i32 %1234, %1244
  %1246 = add nsw i32 %1232, %1245
  %1247 = load i32* @wp_luma_round, align 4
  %1248 = mul nsw i32 2, %1247
  %1249 = add nsw i32 %1246, %1248
  %1250 = load i32* @luma_log_weight_denom, align 4
  %1251 = add nsw i32 %1250, 1
  %1252 = ashr i32 %1249, %1251
  %1253 = load i16* %offsetBi, align 2
  %1254 = sext i16 %1253 to i32
  %1255 = add nsw i32 %1252, %1254
  br label %1256

; <label>:1256                                    ; preds = %1219, %1215
  %1257 = phi i32 [ %1218, %1215 ], [ %1255, %1219 ]
  br label %1258

; <label>:1258                                    ; preds = %1256, %1173
  %1259 = phi i32 [ 0, %1173 ], [ %1257, %1256 ]
  store i32 %1259, i32* %weightedpel, align 4
  %1260 = load i16* %x0, align 2
  %1261 = sext i16 %1260 to i64
  %1262 = load i16** %orig_line, align 8
  %1263 = getelementptr inbounds i16* %1262, i64 %1261
  %1264 = load i16* %1263, align 2
  %1265 = zext i16 %1264 to i32
  %1266 = load i32* %weightedpel, align 4
  %1267 = sub nsw i32 %1265, %1266
  %1268 = load i32** %d, align 8
  %1269 = getelementptr inbounds i32* %1268, i32 1
  store i32* %1269, i32** %d, align 8
  store i32 %1267, i32* %1268, align 4
  %1270 = load i16* %weightSpic, align 2
  %1271 = sext i16 %1270 to i32
  %1272 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1273 = load i16*** %ref1_pic, align 8
  %1274 = load i16* %sy, align 2
  %1275 = sext i16 %1274 to i32
  %1276 = load i16* %sx0, align 2
  %1277 = sext i16 %1276 to i32
  %1278 = add nsw i32 %1277, 4
  %1279 = load i32* %img_height, align 4
  %1280 = load i32* %img_width, align 4
  %1281 = call zeroext i16 %1272(i16** %1273, i32 %1275, i32 %1278, i32 %1279, i32 %1280)
  %1282 = zext i16 %1281 to i32
  %1283 = mul nsw i32 %1271, %1282
  %1284 = load i16* %weightRpic, align 2
  %1285 = sext i16 %1284 to i32
  %1286 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1287 = load i16*** %ref2_pic, align 8
  %1288 = load i16* %ry, align 2
  %1289 = sext i16 %1288 to i32
  %1290 = load i16* %rx0, align 2
  %1291 = sext i16 %1290 to i32
  %1292 = add nsw i32 %1291, 4
  %1293 = load i32* %img_height, align 4
  %1294 = load i32* %img_width, align 4
  %1295 = call zeroext i16 %1286(i16** %1287, i32 %1289, i32 %1292, i32 %1293, i32 %1294)
  %1296 = zext i16 %1295 to i32
  %1297 = mul nsw i32 %1285, %1296
  %1298 = add nsw i32 %1283, %1297
  %1299 = load i32* @wp_luma_round, align 4
  %1300 = mul nsw i32 2, %1299
  %1301 = add nsw i32 %1298, %1300
  %1302 = load i32* @luma_log_weight_denom, align 4
  %1303 = add nsw i32 %1302, 1
  %1304 = ashr i32 %1301, %1303
  %1305 = load i16* %offsetBi, align 2
  %1306 = sext i16 %1305 to i32
  %1307 = add nsw i32 %1304, %1306
  %1308 = icmp slt i32 %1307, 0
  br i1 %1308, label %1309, label %1310

; <label>:1309                                    ; preds = %1258
  br label %1398

; <label>:1310                                    ; preds = %1258
  %1311 = load i16* %weightSpic, align 2
  %1312 = sext i16 %1311 to i32
  %1313 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1314 = load i16*** %ref1_pic, align 8
  %1315 = load i16* %sy, align 2
  %1316 = sext i16 %1315 to i32
  %1317 = load i16* %sx0, align 2
  %1318 = sext i16 %1317 to i32
  %1319 = add nsw i32 %1318, 4
  %1320 = load i32* %img_height, align 4
  %1321 = load i32* %img_width, align 4
  %1322 = call zeroext i16 %1313(i16** %1314, i32 %1316, i32 %1319, i32 %1320, i32 %1321)
  %1323 = zext i16 %1322 to i32
  %1324 = mul nsw i32 %1312, %1323
  %1325 = load i16* %weightRpic, align 2
  %1326 = sext i16 %1325 to i32
  %1327 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1328 = load i16*** %ref2_pic, align 8
  %1329 = load i16* %ry, align 2
  %1330 = sext i16 %1329 to i32
  %1331 = load i16* %rx0, align 2
  %1332 = sext i16 %1331 to i32
  %1333 = add nsw i32 %1332, 4
  %1334 = load i32* %img_height, align 4
  %1335 = load i32* %img_width, align 4
  %1336 = call zeroext i16 %1327(i16** %1328, i32 %1330, i32 %1333, i32 %1334, i32 %1335)
  %1337 = zext i16 %1336 to i32
  %1338 = mul nsw i32 %1326, %1337
  %1339 = add nsw i32 %1324, %1338
  %1340 = load i32* @wp_luma_round, align 4
  %1341 = mul nsw i32 2, %1340
  %1342 = add nsw i32 %1339, %1341
  %1343 = load i32* @luma_log_weight_denom, align 4
  %1344 = add nsw i32 %1343, 1
  %1345 = ashr i32 %1342, %1344
  %1346 = load i16* %offsetBi, align 2
  %1347 = sext i16 %1346 to i32
  %1348 = add nsw i32 %1345, %1347
  %1349 = load %struct.ImageParameters** @img, align 8
  %1350 = getelementptr inbounds %struct.ImageParameters* %1349, i32 0, i32 155
  %1351 = load i32* %1350, align 4
  %1352 = icmp sgt i32 %1348, %1351
  br i1 %1352, label %1353, label %1357

; <label>:1353                                    ; preds = %1310
  %1354 = load %struct.ImageParameters** @img, align 8
  %1355 = getelementptr inbounds %struct.ImageParameters* %1354, i32 0, i32 155
  %1356 = load i32* %1355, align 4
  br label %1396

; <label>:1357                                    ; preds = %1310
  %1358 = load i16* %weightSpic, align 2
  %1359 = sext i16 %1358 to i32
  %1360 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1361 = load i16*** %ref1_pic, align 8
  %1362 = load i16* %sy, align 2
  %1363 = sext i16 %1362 to i32
  %1364 = load i16* %sx0, align 2
  %1365 = sext i16 %1364 to i32
  %1366 = add nsw i32 %1365, 4
  %1367 = load i32* %img_height, align 4
  %1368 = load i32* %img_width, align 4
  %1369 = call zeroext i16 %1360(i16** %1361, i32 %1363, i32 %1366, i32 %1367, i32 %1368)
  %1370 = zext i16 %1369 to i32
  %1371 = mul nsw i32 %1359, %1370
  %1372 = load i16* %weightRpic, align 2
  %1373 = sext i16 %1372 to i32
  %1374 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1375 = load i16*** %ref2_pic, align 8
  %1376 = load i16* %ry, align 2
  %1377 = sext i16 %1376 to i32
  %1378 = load i16* %rx0, align 2
  %1379 = sext i16 %1378 to i32
  %1380 = add nsw i32 %1379, 4
  %1381 = load i32* %img_height, align 4
  %1382 = load i32* %img_width, align 4
  %1383 = call zeroext i16 %1374(i16** %1375, i32 %1377, i32 %1380, i32 %1381, i32 %1382)
  %1384 = zext i16 %1383 to i32
  %1385 = mul nsw i32 %1373, %1384
  %1386 = add nsw i32 %1371, %1385
  %1387 = load i32* @wp_luma_round, align 4
  %1388 = mul nsw i32 2, %1387
  %1389 = add nsw i32 %1386, %1388
  %1390 = load i32* @luma_log_weight_denom, align 4
  %1391 = add nsw i32 %1390, 1
  %1392 = ashr i32 %1389, %1391
  %1393 = load i16* %offsetBi, align 2
  %1394 = sext i16 %1393 to i32
  %1395 = add nsw i32 %1392, %1394
  br label %1396

; <label>:1396                                    ; preds = %1357, %1353
  %1397 = phi i32 [ %1356, %1353 ], [ %1395, %1357 ]
  br label %1398

; <label>:1398                                    ; preds = %1396, %1309
  %1399 = phi i32 [ 0, %1309 ], [ %1397, %1396 ]
  store i32 %1399, i32* %weightedpel, align 4
  %1400 = load i16* %x0, align 2
  %1401 = sext i16 %1400 to i32
  %1402 = add nsw i32 %1401, 1
  %1403 = sext i32 %1402 to i64
  %1404 = load i16** %orig_line, align 8
  %1405 = getelementptr inbounds i16* %1404, i64 %1403
  %1406 = load i16* %1405, align 2
  %1407 = zext i16 %1406 to i32
  %1408 = load i32* %weightedpel, align 4
  %1409 = sub nsw i32 %1407, %1408
  %1410 = load i32** %d, align 8
  %1411 = getelementptr inbounds i32* %1410, i32 1
  store i32* %1411, i32** %d, align 8
  store i32 %1409, i32* %1410, align 4
  %1412 = load i16* %weightSpic, align 2
  %1413 = sext i16 %1412 to i32
  %1414 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1415 = load i16*** %ref1_pic, align 8
  %1416 = load i16* %sy, align 2
  %1417 = sext i16 %1416 to i32
  %1418 = load i16* %sx0, align 2
  %1419 = sext i16 %1418 to i32
  %1420 = add nsw i32 %1419, 8
  %1421 = load i32* %img_height, align 4
  %1422 = load i32* %img_width, align 4
  %1423 = call zeroext i16 %1414(i16** %1415, i32 %1417, i32 %1420, i32 %1421, i32 %1422)
  %1424 = zext i16 %1423 to i32
  %1425 = mul nsw i32 %1413, %1424
  %1426 = load i16* %weightRpic, align 2
  %1427 = sext i16 %1426 to i32
  %1428 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1429 = load i16*** %ref2_pic, align 8
  %1430 = load i16* %ry, align 2
  %1431 = sext i16 %1430 to i32
  %1432 = load i16* %rx0, align 2
  %1433 = sext i16 %1432 to i32
  %1434 = add nsw i32 %1433, 8
  %1435 = load i32* %img_height, align 4
  %1436 = load i32* %img_width, align 4
  %1437 = call zeroext i16 %1428(i16** %1429, i32 %1431, i32 %1434, i32 %1435, i32 %1436)
  %1438 = zext i16 %1437 to i32
  %1439 = mul nsw i32 %1427, %1438
  %1440 = add nsw i32 %1425, %1439
  %1441 = load i32* @wp_luma_round, align 4
  %1442 = mul nsw i32 2, %1441
  %1443 = add nsw i32 %1440, %1442
  %1444 = load i32* @luma_log_weight_denom, align 4
  %1445 = add nsw i32 %1444, 1
  %1446 = ashr i32 %1443, %1445
  %1447 = load i16* %offsetBi, align 2
  %1448 = sext i16 %1447 to i32
  %1449 = add nsw i32 %1446, %1448
  %1450 = icmp slt i32 %1449, 0
  br i1 %1450, label %1451, label %1452

; <label>:1451                                    ; preds = %1398
  br label %1540

; <label>:1452                                    ; preds = %1398
  %1453 = load i16* %weightSpic, align 2
  %1454 = sext i16 %1453 to i32
  %1455 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1456 = load i16*** %ref1_pic, align 8
  %1457 = load i16* %sy, align 2
  %1458 = sext i16 %1457 to i32
  %1459 = load i16* %sx0, align 2
  %1460 = sext i16 %1459 to i32
  %1461 = add nsw i32 %1460, 8
  %1462 = load i32* %img_height, align 4
  %1463 = load i32* %img_width, align 4
  %1464 = call zeroext i16 %1455(i16** %1456, i32 %1458, i32 %1461, i32 %1462, i32 %1463)
  %1465 = zext i16 %1464 to i32
  %1466 = mul nsw i32 %1454, %1465
  %1467 = load i16* %weightRpic, align 2
  %1468 = sext i16 %1467 to i32
  %1469 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1470 = load i16*** %ref2_pic, align 8
  %1471 = load i16* %ry, align 2
  %1472 = sext i16 %1471 to i32
  %1473 = load i16* %rx0, align 2
  %1474 = sext i16 %1473 to i32
  %1475 = add nsw i32 %1474, 8
  %1476 = load i32* %img_height, align 4
  %1477 = load i32* %img_width, align 4
  %1478 = call zeroext i16 %1469(i16** %1470, i32 %1472, i32 %1475, i32 %1476, i32 %1477)
  %1479 = zext i16 %1478 to i32
  %1480 = mul nsw i32 %1468, %1479
  %1481 = add nsw i32 %1466, %1480
  %1482 = load i32* @wp_luma_round, align 4
  %1483 = mul nsw i32 2, %1482
  %1484 = add nsw i32 %1481, %1483
  %1485 = load i32* @luma_log_weight_denom, align 4
  %1486 = add nsw i32 %1485, 1
  %1487 = ashr i32 %1484, %1486
  %1488 = load i16* %offsetBi, align 2
  %1489 = sext i16 %1488 to i32
  %1490 = add nsw i32 %1487, %1489
  %1491 = load %struct.ImageParameters** @img, align 8
  %1492 = getelementptr inbounds %struct.ImageParameters* %1491, i32 0, i32 155
  %1493 = load i32* %1492, align 4
  %1494 = icmp sgt i32 %1490, %1493
  br i1 %1494, label %1495, label %1499

; <label>:1495                                    ; preds = %1452
  %1496 = load %struct.ImageParameters** @img, align 8
  %1497 = getelementptr inbounds %struct.ImageParameters* %1496, i32 0, i32 155
  %1498 = load i32* %1497, align 4
  br label %1538

; <label>:1499                                    ; preds = %1452
  %1500 = load i16* %weightSpic, align 2
  %1501 = sext i16 %1500 to i32
  %1502 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1503 = load i16*** %ref1_pic, align 8
  %1504 = load i16* %sy, align 2
  %1505 = sext i16 %1504 to i32
  %1506 = load i16* %sx0, align 2
  %1507 = sext i16 %1506 to i32
  %1508 = add nsw i32 %1507, 8
  %1509 = load i32* %img_height, align 4
  %1510 = load i32* %img_width, align 4
  %1511 = call zeroext i16 %1502(i16** %1503, i32 %1505, i32 %1508, i32 %1509, i32 %1510)
  %1512 = zext i16 %1511 to i32
  %1513 = mul nsw i32 %1501, %1512
  %1514 = load i16* %weightRpic, align 2
  %1515 = sext i16 %1514 to i32
  %1516 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1517 = load i16*** %ref2_pic, align 8
  %1518 = load i16* %ry, align 2
  %1519 = sext i16 %1518 to i32
  %1520 = load i16* %rx0, align 2
  %1521 = sext i16 %1520 to i32
  %1522 = add nsw i32 %1521, 8
  %1523 = load i32* %img_height, align 4
  %1524 = load i32* %img_width, align 4
  %1525 = call zeroext i16 %1516(i16** %1517, i32 %1519, i32 %1522, i32 %1523, i32 %1524)
  %1526 = zext i16 %1525 to i32
  %1527 = mul nsw i32 %1515, %1526
  %1528 = add nsw i32 %1513, %1527
  %1529 = load i32* @wp_luma_round, align 4
  %1530 = mul nsw i32 2, %1529
  %1531 = add nsw i32 %1528, %1530
  %1532 = load i32* @luma_log_weight_denom, align 4
  %1533 = add nsw i32 %1532, 1
  %1534 = ashr i32 %1531, %1533
  %1535 = load i16* %offsetBi, align 2
  %1536 = sext i16 %1535 to i32
  %1537 = add nsw i32 %1534, %1536
  br label %1538

; <label>:1538                                    ; preds = %1499, %1495
  %1539 = phi i32 [ %1498, %1495 ], [ %1537, %1499 ]
  br label %1540

; <label>:1540                                    ; preds = %1538, %1451
  %1541 = phi i32 [ 0, %1451 ], [ %1539, %1538 ]
  store i32 %1541, i32* %weightedpel, align 4
  %1542 = load i16* %x0, align 2
  %1543 = sext i16 %1542 to i32
  %1544 = add nsw i32 %1543, 2
  %1545 = sext i32 %1544 to i64
  %1546 = load i16** %orig_line, align 8
  %1547 = getelementptr inbounds i16* %1546, i64 %1545
  %1548 = load i16* %1547, align 2
  %1549 = zext i16 %1548 to i32
  %1550 = load i32* %weightedpel, align 4
  %1551 = sub nsw i32 %1549, %1550
  %1552 = load i32** %d, align 8
  %1553 = getelementptr inbounds i32* %1552, i32 1
  store i32* %1553, i32** %d, align 8
  store i32 %1551, i32* %1552, align 4
  %1554 = load i16* %weightSpic, align 2
  %1555 = sext i16 %1554 to i32
  %1556 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1557 = load i16*** %ref1_pic, align 8
  %1558 = load i16* %sy, align 2
  %1559 = sext i16 %1558 to i32
  %1560 = load i16* %sx0, align 2
  %1561 = sext i16 %1560 to i32
  %1562 = add nsw i32 %1561, 12
  %1563 = load i32* %img_height, align 4
  %1564 = load i32* %img_width, align 4
  %1565 = call zeroext i16 %1556(i16** %1557, i32 %1559, i32 %1562, i32 %1563, i32 %1564)
  %1566 = zext i16 %1565 to i32
  %1567 = mul nsw i32 %1555, %1566
  %1568 = load i16* %weightRpic, align 2
  %1569 = sext i16 %1568 to i32
  %1570 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1571 = load i16*** %ref2_pic, align 8
  %1572 = load i16* %ry, align 2
  %1573 = sext i16 %1572 to i32
  %1574 = load i16* %rx0, align 2
  %1575 = sext i16 %1574 to i32
  %1576 = add nsw i32 %1575, 12
  %1577 = load i32* %img_height, align 4
  %1578 = load i32* %img_width, align 4
  %1579 = call zeroext i16 %1570(i16** %1571, i32 %1573, i32 %1576, i32 %1577, i32 %1578)
  %1580 = zext i16 %1579 to i32
  %1581 = mul nsw i32 %1569, %1580
  %1582 = add nsw i32 %1567, %1581
  %1583 = load i32* @wp_luma_round, align 4
  %1584 = mul nsw i32 2, %1583
  %1585 = add nsw i32 %1582, %1584
  %1586 = load i32* @luma_log_weight_denom, align 4
  %1587 = add nsw i32 %1586, 1
  %1588 = ashr i32 %1585, %1587
  %1589 = load i16* %offsetBi, align 2
  %1590 = sext i16 %1589 to i32
  %1591 = add nsw i32 %1588, %1590
  %1592 = icmp slt i32 %1591, 0
  br i1 %1592, label %1593, label %1594

; <label>:1593                                    ; preds = %1540
  br label %1682

; <label>:1594                                    ; preds = %1540
  %1595 = load i16* %weightSpic, align 2
  %1596 = sext i16 %1595 to i32
  %1597 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1598 = load i16*** %ref1_pic, align 8
  %1599 = load i16* %sy, align 2
  %1600 = sext i16 %1599 to i32
  %1601 = load i16* %sx0, align 2
  %1602 = sext i16 %1601 to i32
  %1603 = add nsw i32 %1602, 12
  %1604 = load i32* %img_height, align 4
  %1605 = load i32* %img_width, align 4
  %1606 = call zeroext i16 %1597(i16** %1598, i32 %1600, i32 %1603, i32 %1604, i32 %1605)
  %1607 = zext i16 %1606 to i32
  %1608 = mul nsw i32 %1596, %1607
  %1609 = load i16* %weightRpic, align 2
  %1610 = sext i16 %1609 to i32
  %1611 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1612 = load i16*** %ref2_pic, align 8
  %1613 = load i16* %ry, align 2
  %1614 = sext i16 %1613 to i32
  %1615 = load i16* %rx0, align 2
  %1616 = sext i16 %1615 to i32
  %1617 = add nsw i32 %1616, 12
  %1618 = load i32* %img_height, align 4
  %1619 = load i32* %img_width, align 4
  %1620 = call zeroext i16 %1611(i16** %1612, i32 %1614, i32 %1617, i32 %1618, i32 %1619)
  %1621 = zext i16 %1620 to i32
  %1622 = mul nsw i32 %1610, %1621
  %1623 = add nsw i32 %1608, %1622
  %1624 = load i32* @wp_luma_round, align 4
  %1625 = mul nsw i32 2, %1624
  %1626 = add nsw i32 %1623, %1625
  %1627 = load i32* @luma_log_weight_denom, align 4
  %1628 = add nsw i32 %1627, 1
  %1629 = ashr i32 %1626, %1628
  %1630 = load i16* %offsetBi, align 2
  %1631 = sext i16 %1630 to i32
  %1632 = add nsw i32 %1629, %1631
  %1633 = load %struct.ImageParameters** @img, align 8
  %1634 = getelementptr inbounds %struct.ImageParameters* %1633, i32 0, i32 155
  %1635 = load i32* %1634, align 4
  %1636 = icmp sgt i32 %1632, %1635
  br i1 %1636, label %1637, label %1641

; <label>:1637                                    ; preds = %1594
  %1638 = load %struct.ImageParameters** @img, align 8
  %1639 = getelementptr inbounds %struct.ImageParameters* %1638, i32 0, i32 155
  %1640 = load i32* %1639, align 4
  br label %1680

; <label>:1641                                    ; preds = %1594
  %1642 = load i16* %weightSpic, align 2
  %1643 = sext i16 %1642 to i32
  %1644 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1645 = load i16*** %ref1_pic, align 8
  %1646 = load i16* %sy, align 2
  %1647 = sext i16 %1646 to i32
  %1648 = load i16* %sx0, align 2
  %1649 = sext i16 %1648 to i32
  %1650 = add nsw i32 %1649, 12
  %1651 = load i32* %img_height, align 4
  %1652 = load i32* %img_width, align 4
  %1653 = call zeroext i16 %1644(i16** %1645, i32 %1647, i32 %1650, i32 %1651, i32 %1652)
  %1654 = zext i16 %1653 to i32
  %1655 = mul nsw i32 %1643, %1654
  %1656 = load i16* %weightRpic, align 2
  %1657 = sext i16 %1656 to i32
  %1658 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1659 = load i16*** %ref2_pic, align 8
  %1660 = load i16* %ry, align 2
  %1661 = sext i16 %1660 to i32
  %1662 = load i16* %rx0, align 2
  %1663 = sext i16 %1662 to i32
  %1664 = add nsw i32 %1663, 12
  %1665 = load i32* %img_height, align 4
  %1666 = load i32* %img_width, align 4
  %1667 = call zeroext i16 %1658(i16** %1659, i32 %1661, i32 %1664, i32 %1665, i32 %1666)
  %1668 = zext i16 %1667 to i32
  %1669 = mul nsw i32 %1657, %1668
  %1670 = add nsw i32 %1655, %1669
  %1671 = load i32* @wp_luma_round, align 4
  %1672 = mul nsw i32 2, %1671
  %1673 = add nsw i32 %1670, %1672
  %1674 = load i32* @luma_log_weight_denom, align 4
  %1675 = add nsw i32 %1674, 1
  %1676 = ashr i32 %1673, %1675
  %1677 = load i16* %offsetBi, align 2
  %1678 = sext i16 %1677 to i32
  %1679 = add nsw i32 %1676, %1678
  br label %1680

; <label>:1680                                    ; preds = %1641, %1637
  %1681 = phi i32 [ %1640, %1637 ], [ %1679, %1641 ]
  br label %1682

; <label>:1682                                    ; preds = %1680, %1593
  %1683 = phi i32 [ 0, %1593 ], [ %1681, %1680 ]
  store i32 %1683, i32* %weightedpel, align 4
  %1684 = load i16* %x0, align 2
  %1685 = sext i16 %1684 to i32
  %1686 = add nsw i32 %1685, 3
  %1687 = sext i32 %1686 to i64
  %1688 = load i16** %orig_line, align 8
  %1689 = getelementptr inbounds i16* %1688, i64 %1687
  %1690 = load i16* %1689, align 2
  %1691 = zext i16 %1690 to i32
  %1692 = load i32* %weightedpel, align 4
  %1693 = sub nsw i32 %1691, %1692
  %1694 = load i32** %d, align 8
  %1695 = getelementptr inbounds i32* %1694, i32 1
  store i32* %1695, i32** %d, align 8
  store i32 %1693, i32* %1694, align 4
  %1696 = load i16* %sy0, align 2
  %1697 = sext i16 %1696 to i32
  %1698 = add nsw i32 %1697, 8
  %1699 = trunc i32 %1698 to i16
  store i16 %1699, i16* %sy, align 2
  %1700 = load i16* %ry0, align 2
  %1701 = sext i16 %1700 to i32
  %1702 = add nsw i32 %1701, 8
  %1703 = trunc i32 %1702 to i16
  store i16 %1703, i16* %ry, align 2
  %1704 = load i16* %y0, align 2
  %1705 = sext i16 %1704 to i32
  %1706 = add nsw i32 %1705, 2
  %1707 = sext i32 %1706 to i64
  %1708 = load i16*** %1, align 8
  %1709 = getelementptr inbounds i16** %1708, i64 %1707
  %1710 = load i16** %1709, align 8
  store i16* %1710, i16** %orig_line, align 8
  %1711 = load i16* %weightSpic, align 2
  %1712 = sext i16 %1711 to i32
  %1713 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1714 = load i16*** %ref1_pic, align 8
  %1715 = load i16* %sy, align 2
  %1716 = sext i16 %1715 to i32
  %1717 = load i16* %sx0, align 2
  %1718 = sext i16 %1717 to i32
  %1719 = load i32* %img_height, align 4
  %1720 = load i32* %img_width, align 4
  %1721 = call zeroext i16 %1713(i16** %1714, i32 %1716, i32 %1718, i32 %1719, i32 %1720)
  %1722 = zext i16 %1721 to i32
  %1723 = mul nsw i32 %1712, %1722
  %1724 = load i16* %weightRpic, align 2
  %1725 = sext i16 %1724 to i32
  %1726 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1727 = load i16*** %ref2_pic, align 8
  %1728 = load i16* %ry, align 2
  %1729 = sext i16 %1728 to i32
  %1730 = load i16* %rx0, align 2
  %1731 = sext i16 %1730 to i32
  %1732 = load i32* %img_height, align 4
  %1733 = load i32* %img_width, align 4
  %1734 = call zeroext i16 %1726(i16** %1727, i32 %1729, i32 %1731, i32 %1732, i32 %1733)
  %1735 = zext i16 %1734 to i32
  %1736 = mul nsw i32 %1725, %1735
  %1737 = add nsw i32 %1723, %1736
  %1738 = load i32* @wp_luma_round, align 4
  %1739 = mul nsw i32 2, %1738
  %1740 = add nsw i32 %1737, %1739
  %1741 = load i32* @luma_log_weight_denom, align 4
  %1742 = add nsw i32 %1741, 1
  %1743 = ashr i32 %1740, %1742
  %1744 = load i16* %offsetBi, align 2
  %1745 = sext i16 %1744 to i32
  %1746 = add nsw i32 %1743, %1745
  %1747 = icmp slt i32 %1746, 0
  br i1 %1747, label %1748, label %1749

; <label>:1748                                    ; preds = %1682
  br label %1833

; <label>:1749                                    ; preds = %1682
  %1750 = load i16* %weightSpic, align 2
  %1751 = sext i16 %1750 to i32
  %1752 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1753 = load i16*** %ref1_pic, align 8
  %1754 = load i16* %sy, align 2
  %1755 = sext i16 %1754 to i32
  %1756 = load i16* %sx0, align 2
  %1757 = sext i16 %1756 to i32
  %1758 = load i32* %img_height, align 4
  %1759 = load i32* %img_width, align 4
  %1760 = call zeroext i16 %1752(i16** %1753, i32 %1755, i32 %1757, i32 %1758, i32 %1759)
  %1761 = zext i16 %1760 to i32
  %1762 = mul nsw i32 %1751, %1761
  %1763 = load i16* %weightRpic, align 2
  %1764 = sext i16 %1763 to i32
  %1765 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1766 = load i16*** %ref2_pic, align 8
  %1767 = load i16* %ry, align 2
  %1768 = sext i16 %1767 to i32
  %1769 = load i16* %rx0, align 2
  %1770 = sext i16 %1769 to i32
  %1771 = load i32* %img_height, align 4
  %1772 = load i32* %img_width, align 4
  %1773 = call zeroext i16 %1765(i16** %1766, i32 %1768, i32 %1770, i32 %1771, i32 %1772)
  %1774 = zext i16 %1773 to i32
  %1775 = mul nsw i32 %1764, %1774
  %1776 = add nsw i32 %1762, %1775
  %1777 = load i32* @wp_luma_round, align 4
  %1778 = mul nsw i32 2, %1777
  %1779 = add nsw i32 %1776, %1778
  %1780 = load i32* @luma_log_weight_denom, align 4
  %1781 = add nsw i32 %1780, 1
  %1782 = ashr i32 %1779, %1781
  %1783 = load i16* %offsetBi, align 2
  %1784 = sext i16 %1783 to i32
  %1785 = add nsw i32 %1782, %1784
  %1786 = load %struct.ImageParameters** @img, align 8
  %1787 = getelementptr inbounds %struct.ImageParameters* %1786, i32 0, i32 155
  %1788 = load i32* %1787, align 4
  %1789 = icmp sgt i32 %1785, %1788
  br i1 %1789, label %1790, label %1794

; <label>:1790                                    ; preds = %1749
  %1791 = load %struct.ImageParameters** @img, align 8
  %1792 = getelementptr inbounds %struct.ImageParameters* %1791, i32 0, i32 155
  %1793 = load i32* %1792, align 4
  br label %1831

; <label>:1794                                    ; preds = %1749
  %1795 = load i16* %weightSpic, align 2
  %1796 = sext i16 %1795 to i32
  %1797 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1798 = load i16*** %ref1_pic, align 8
  %1799 = load i16* %sy, align 2
  %1800 = sext i16 %1799 to i32
  %1801 = load i16* %sx0, align 2
  %1802 = sext i16 %1801 to i32
  %1803 = load i32* %img_height, align 4
  %1804 = load i32* %img_width, align 4
  %1805 = call zeroext i16 %1797(i16** %1798, i32 %1800, i32 %1802, i32 %1803, i32 %1804)
  %1806 = zext i16 %1805 to i32
  %1807 = mul nsw i32 %1796, %1806
  %1808 = load i16* %weightRpic, align 2
  %1809 = sext i16 %1808 to i32
  %1810 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1811 = load i16*** %ref2_pic, align 8
  %1812 = load i16* %ry, align 2
  %1813 = sext i16 %1812 to i32
  %1814 = load i16* %rx0, align 2
  %1815 = sext i16 %1814 to i32
  %1816 = load i32* %img_height, align 4
  %1817 = load i32* %img_width, align 4
  %1818 = call zeroext i16 %1810(i16** %1811, i32 %1813, i32 %1815, i32 %1816, i32 %1817)
  %1819 = zext i16 %1818 to i32
  %1820 = mul nsw i32 %1809, %1819
  %1821 = add nsw i32 %1807, %1820
  %1822 = load i32* @wp_luma_round, align 4
  %1823 = mul nsw i32 2, %1822
  %1824 = add nsw i32 %1821, %1823
  %1825 = load i32* @luma_log_weight_denom, align 4
  %1826 = add nsw i32 %1825, 1
  %1827 = ashr i32 %1824, %1826
  %1828 = load i16* %offsetBi, align 2
  %1829 = sext i16 %1828 to i32
  %1830 = add nsw i32 %1827, %1829
  br label %1831

; <label>:1831                                    ; preds = %1794, %1790
  %1832 = phi i32 [ %1793, %1790 ], [ %1830, %1794 ]
  br label %1833

; <label>:1833                                    ; preds = %1831, %1748
  %1834 = phi i32 [ 0, %1748 ], [ %1832, %1831 ]
  store i32 %1834, i32* %weightedpel, align 4
  %1835 = load i16* %x0, align 2
  %1836 = sext i16 %1835 to i64
  %1837 = load i16** %orig_line, align 8
  %1838 = getelementptr inbounds i16* %1837, i64 %1836
  %1839 = load i16* %1838, align 2
  %1840 = zext i16 %1839 to i32
  %1841 = load i32* %weightedpel, align 4
  %1842 = sub nsw i32 %1840, %1841
  %1843 = load i32** %d, align 8
  %1844 = getelementptr inbounds i32* %1843, i32 1
  store i32* %1844, i32** %d, align 8
  store i32 %1842, i32* %1843, align 4
  %1845 = load i16* %weightSpic, align 2
  %1846 = sext i16 %1845 to i32
  %1847 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1848 = load i16*** %ref1_pic, align 8
  %1849 = load i16* %sy, align 2
  %1850 = sext i16 %1849 to i32
  %1851 = load i16* %sx0, align 2
  %1852 = sext i16 %1851 to i32
  %1853 = add nsw i32 %1852, 4
  %1854 = load i32* %img_height, align 4
  %1855 = load i32* %img_width, align 4
  %1856 = call zeroext i16 %1847(i16** %1848, i32 %1850, i32 %1853, i32 %1854, i32 %1855)
  %1857 = zext i16 %1856 to i32
  %1858 = mul nsw i32 %1846, %1857
  %1859 = load i16* %weightRpic, align 2
  %1860 = sext i16 %1859 to i32
  %1861 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1862 = load i16*** %ref2_pic, align 8
  %1863 = load i16* %ry, align 2
  %1864 = sext i16 %1863 to i32
  %1865 = load i16* %rx0, align 2
  %1866 = sext i16 %1865 to i32
  %1867 = add nsw i32 %1866, 4
  %1868 = load i32* %img_height, align 4
  %1869 = load i32* %img_width, align 4
  %1870 = call zeroext i16 %1861(i16** %1862, i32 %1864, i32 %1867, i32 %1868, i32 %1869)
  %1871 = zext i16 %1870 to i32
  %1872 = mul nsw i32 %1860, %1871
  %1873 = add nsw i32 %1858, %1872
  %1874 = load i32* @wp_luma_round, align 4
  %1875 = mul nsw i32 2, %1874
  %1876 = add nsw i32 %1873, %1875
  %1877 = load i32* @luma_log_weight_denom, align 4
  %1878 = add nsw i32 %1877, 1
  %1879 = ashr i32 %1876, %1878
  %1880 = load i16* %offsetBi, align 2
  %1881 = sext i16 %1880 to i32
  %1882 = add nsw i32 %1879, %1881
  %1883 = icmp slt i32 %1882, 0
  br i1 %1883, label %1884, label %1885

; <label>:1884                                    ; preds = %1833
  br label %1973

; <label>:1885                                    ; preds = %1833
  %1886 = load i16* %weightSpic, align 2
  %1887 = sext i16 %1886 to i32
  %1888 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1889 = load i16*** %ref1_pic, align 8
  %1890 = load i16* %sy, align 2
  %1891 = sext i16 %1890 to i32
  %1892 = load i16* %sx0, align 2
  %1893 = sext i16 %1892 to i32
  %1894 = add nsw i32 %1893, 4
  %1895 = load i32* %img_height, align 4
  %1896 = load i32* %img_width, align 4
  %1897 = call zeroext i16 %1888(i16** %1889, i32 %1891, i32 %1894, i32 %1895, i32 %1896)
  %1898 = zext i16 %1897 to i32
  %1899 = mul nsw i32 %1887, %1898
  %1900 = load i16* %weightRpic, align 2
  %1901 = sext i16 %1900 to i32
  %1902 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1903 = load i16*** %ref2_pic, align 8
  %1904 = load i16* %ry, align 2
  %1905 = sext i16 %1904 to i32
  %1906 = load i16* %rx0, align 2
  %1907 = sext i16 %1906 to i32
  %1908 = add nsw i32 %1907, 4
  %1909 = load i32* %img_height, align 4
  %1910 = load i32* %img_width, align 4
  %1911 = call zeroext i16 %1902(i16** %1903, i32 %1905, i32 %1908, i32 %1909, i32 %1910)
  %1912 = zext i16 %1911 to i32
  %1913 = mul nsw i32 %1901, %1912
  %1914 = add nsw i32 %1899, %1913
  %1915 = load i32* @wp_luma_round, align 4
  %1916 = mul nsw i32 2, %1915
  %1917 = add nsw i32 %1914, %1916
  %1918 = load i32* @luma_log_weight_denom, align 4
  %1919 = add nsw i32 %1918, 1
  %1920 = ashr i32 %1917, %1919
  %1921 = load i16* %offsetBi, align 2
  %1922 = sext i16 %1921 to i32
  %1923 = add nsw i32 %1920, %1922
  %1924 = load %struct.ImageParameters** @img, align 8
  %1925 = getelementptr inbounds %struct.ImageParameters* %1924, i32 0, i32 155
  %1926 = load i32* %1925, align 4
  %1927 = icmp sgt i32 %1923, %1926
  br i1 %1927, label %1928, label %1932

; <label>:1928                                    ; preds = %1885
  %1929 = load %struct.ImageParameters** @img, align 8
  %1930 = getelementptr inbounds %struct.ImageParameters* %1929, i32 0, i32 155
  %1931 = load i32* %1930, align 4
  br label %1971

; <label>:1932                                    ; preds = %1885
  %1933 = load i16* %weightSpic, align 2
  %1934 = sext i16 %1933 to i32
  %1935 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1936 = load i16*** %ref1_pic, align 8
  %1937 = load i16* %sy, align 2
  %1938 = sext i16 %1937 to i32
  %1939 = load i16* %sx0, align 2
  %1940 = sext i16 %1939 to i32
  %1941 = add nsw i32 %1940, 4
  %1942 = load i32* %img_height, align 4
  %1943 = load i32* %img_width, align 4
  %1944 = call zeroext i16 %1935(i16** %1936, i32 %1938, i32 %1941, i32 %1942, i32 %1943)
  %1945 = zext i16 %1944 to i32
  %1946 = mul nsw i32 %1934, %1945
  %1947 = load i16* %weightRpic, align 2
  %1948 = sext i16 %1947 to i32
  %1949 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1950 = load i16*** %ref2_pic, align 8
  %1951 = load i16* %ry, align 2
  %1952 = sext i16 %1951 to i32
  %1953 = load i16* %rx0, align 2
  %1954 = sext i16 %1953 to i32
  %1955 = add nsw i32 %1954, 4
  %1956 = load i32* %img_height, align 4
  %1957 = load i32* %img_width, align 4
  %1958 = call zeroext i16 %1949(i16** %1950, i32 %1952, i32 %1955, i32 %1956, i32 %1957)
  %1959 = zext i16 %1958 to i32
  %1960 = mul nsw i32 %1948, %1959
  %1961 = add nsw i32 %1946, %1960
  %1962 = load i32* @wp_luma_round, align 4
  %1963 = mul nsw i32 2, %1962
  %1964 = add nsw i32 %1961, %1963
  %1965 = load i32* @luma_log_weight_denom, align 4
  %1966 = add nsw i32 %1965, 1
  %1967 = ashr i32 %1964, %1966
  %1968 = load i16* %offsetBi, align 2
  %1969 = sext i16 %1968 to i32
  %1970 = add nsw i32 %1967, %1969
  br label %1971

; <label>:1971                                    ; preds = %1932, %1928
  %1972 = phi i32 [ %1931, %1928 ], [ %1970, %1932 ]
  br label %1973

; <label>:1973                                    ; preds = %1971, %1884
  %1974 = phi i32 [ 0, %1884 ], [ %1972, %1971 ]
  store i32 %1974, i32* %weightedpel, align 4
  %1975 = load i16* %x0, align 2
  %1976 = sext i16 %1975 to i32
  %1977 = add nsw i32 %1976, 1
  %1978 = sext i32 %1977 to i64
  %1979 = load i16** %orig_line, align 8
  %1980 = getelementptr inbounds i16* %1979, i64 %1978
  %1981 = load i16* %1980, align 2
  %1982 = zext i16 %1981 to i32
  %1983 = load i32* %weightedpel, align 4
  %1984 = sub nsw i32 %1982, %1983
  %1985 = load i32** %d, align 8
  %1986 = getelementptr inbounds i32* %1985, i32 1
  store i32* %1986, i32** %d, align 8
  store i32 %1984, i32* %1985, align 4
  %1987 = load i16* %weightSpic, align 2
  %1988 = sext i16 %1987 to i32
  %1989 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1990 = load i16*** %ref1_pic, align 8
  %1991 = load i16* %sy, align 2
  %1992 = sext i16 %1991 to i32
  %1993 = load i16* %sx0, align 2
  %1994 = sext i16 %1993 to i32
  %1995 = add nsw i32 %1994, 8
  %1996 = load i32* %img_height, align 4
  %1997 = load i32* %img_width, align 4
  %1998 = call zeroext i16 %1989(i16** %1990, i32 %1992, i32 %1995, i32 %1996, i32 %1997)
  %1999 = zext i16 %1998 to i32
  %2000 = mul nsw i32 %1988, %1999
  %2001 = load i16* %weightRpic, align 2
  %2002 = sext i16 %2001 to i32
  %2003 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2004 = load i16*** %ref2_pic, align 8
  %2005 = load i16* %ry, align 2
  %2006 = sext i16 %2005 to i32
  %2007 = load i16* %rx0, align 2
  %2008 = sext i16 %2007 to i32
  %2009 = add nsw i32 %2008, 8
  %2010 = load i32* %img_height, align 4
  %2011 = load i32* %img_width, align 4
  %2012 = call zeroext i16 %2003(i16** %2004, i32 %2006, i32 %2009, i32 %2010, i32 %2011)
  %2013 = zext i16 %2012 to i32
  %2014 = mul nsw i32 %2002, %2013
  %2015 = add nsw i32 %2000, %2014
  %2016 = load i32* @wp_luma_round, align 4
  %2017 = mul nsw i32 2, %2016
  %2018 = add nsw i32 %2015, %2017
  %2019 = load i32* @luma_log_weight_denom, align 4
  %2020 = add nsw i32 %2019, 1
  %2021 = ashr i32 %2018, %2020
  %2022 = load i16* %offsetBi, align 2
  %2023 = sext i16 %2022 to i32
  %2024 = add nsw i32 %2021, %2023
  %2025 = icmp slt i32 %2024, 0
  br i1 %2025, label %2026, label %2027

; <label>:2026                                    ; preds = %1973
  br label %2115

; <label>:2027                                    ; preds = %1973
  %2028 = load i16* %weightSpic, align 2
  %2029 = sext i16 %2028 to i32
  %2030 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2031 = load i16*** %ref1_pic, align 8
  %2032 = load i16* %sy, align 2
  %2033 = sext i16 %2032 to i32
  %2034 = load i16* %sx0, align 2
  %2035 = sext i16 %2034 to i32
  %2036 = add nsw i32 %2035, 8
  %2037 = load i32* %img_height, align 4
  %2038 = load i32* %img_width, align 4
  %2039 = call zeroext i16 %2030(i16** %2031, i32 %2033, i32 %2036, i32 %2037, i32 %2038)
  %2040 = zext i16 %2039 to i32
  %2041 = mul nsw i32 %2029, %2040
  %2042 = load i16* %weightRpic, align 2
  %2043 = sext i16 %2042 to i32
  %2044 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2045 = load i16*** %ref2_pic, align 8
  %2046 = load i16* %ry, align 2
  %2047 = sext i16 %2046 to i32
  %2048 = load i16* %rx0, align 2
  %2049 = sext i16 %2048 to i32
  %2050 = add nsw i32 %2049, 8
  %2051 = load i32* %img_height, align 4
  %2052 = load i32* %img_width, align 4
  %2053 = call zeroext i16 %2044(i16** %2045, i32 %2047, i32 %2050, i32 %2051, i32 %2052)
  %2054 = zext i16 %2053 to i32
  %2055 = mul nsw i32 %2043, %2054
  %2056 = add nsw i32 %2041, %2055
  %2057 = load i32* @wp_luma_round, align 4
  %2058 = mul nsw i32 2, %2057
  %2059 = add nsw i32 %2056, %2058
  %2060 = load i32* @luma_log_weight_denom, align 4
  %2061 = add nsw i32 %2060, 1
  %2062 = ashr i32 %2059, %2061
  %2063 = load i16* %offsetBi, align 2
  %2064 = sext i16 %2063 to i32
  %2065 = add nsw i32 %2062, %2064
  %2066 = load %struct.ImageParameters** @img, align 8
  %2067 = getelementptr inbounds %struct.ImageParameters* %2066, i32 0, i32 155
  %2068 = load i32* %2067, align 4
  %2069 = icmp sgt i32 %2065, %2068
  br i1 %2069, label %2070, label %2074

; <label>:2070                                    ; preds = %2027
  %2071 = load %struct.ImageParameters** @img, align 8
  %2072 = getelementptr inbounds %struct.ImageParameters* %2071, i32 0, i32 155
  %2073 = load i32* %2072, align 4
  br label %2113

; <label>:2074                                    ; preds = %2027
  %2075 = load i16* %weightSpic, align 2
  %2076 = sext i16 %2075 to i32
  %2077 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2078 = load i16*** %ref1_pic, align 8
  %2079 = load i16* %sy, align 2
  %2080 = sext i16 %2079 to i32
  %2081 = load i16* %sx0, align 2
  %2082 = sext i16 %2081 to i32
  %2083 = add nsw i32 %2082, 8
  %2084 = load i32* %img_height, align 4
  %2085 = load i32* %img_width, align 4
  %2086 = call zeroext i16 %2077(i16** %2078, i32 %2080, i32 %2083, i32 %2084, i32 %2085)
  %2087 = zext i16 %2086 to i32
  %2088 = mul nsw i32 %2076, %2087
  %2089 = load i16* %weightRpic, align 2
  %2090 = sext i16 %2089 to i32
  %2091 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2092 = load i16*** %ref2_pic, align 8
  %2093 = load i16* %ry, align 2
  %2094 = sext i16 %2093 to i32
  %2095 = load i16* %rx0, align 2
  %2096 = sext i16 %2095 to i32
  %2097 = add nsw i32 %2096, 8
  %2098 = load i32* %img_height, align 4
  %2099 = load i32* %img_width, align 4
  %2100 = call zeroext i16 %2091(i16** %2092, i32 %2094, i32 %2097, i32 %2098, i32 %2099)
  %2101 = zext i16 %2100 to i32
  %2102 = mul nsw i32 %2090, %2101
  %2103 = add nsw i32 %2088, %2102
  %2104 = load i32* @wp_luma_round, align 4
  %2105 = mul nsw i32 2, %2104
  %2106 = add nsw i32 %2103, %2105
  %2107 = load i32* @luma_log_weight_denom, align 4
  %2108 = add nsw i32 %2107, 1
  %2109 = ashr i32 %2106, %2108
  %2110 = load i16* %offsetBi, align 2
  %2111 = sext i16 %2110 to i32
  %2112 = add nsw i32 %2109, %2111
  br label %2113

; <label>:2113                                    ; preds = %2074, %2070
  %2114 = phi i32 [ %2073, %2070 ], [ %2112, %2074 ]
  br label %2115

; <label>:2115                                    ; preds = %2113, %2026
  %2116 = phi i32 [ 0, %2026 ], [ %2114, %2113 ]
  store i32 %2116, i32* %weightedpel, align 4
  %2117 = load i16* %x0, align 2
  %2118 = sext i16 %2117 to i32
  %2119 = add nsw i32 %2118, 2
  %2120 = sext i32 %2119 to i64
  %2121 = load i16** %orig_line, align 8
  %2122 = getelementptr inbounds i16* %2121, i64 %2120
  %2123 = load i16* %2122, align 2
  %2124 = zext i16 %2123 to i32
  %2125 = load i32* %weightedpel, align 4
  %2126 = sub nsw i32 %2124, %2125
  %2127 = load i32** %d, align 8
  %2128 = getelementptr inbounds i32* %2127, i32 1
  store i32* %2128, i32** %d, align 8
  store i32 %2126, i32* %2127, align 4
  %2129 = load i16* %weightSpic, align 2
  %2130 = sext i16 %2129 to i32
  %2131 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2132 = load i16*** %ref1_pic, align 8
  %2133 = load i16* %sy, align 2
  %2134 = sext i16 %2133 to i32
  %2135 = load i16* %sx0, align 2
  %2136 = sext i16 %2135 to i32
  %2137 = add nsw i32 %2136, 12
  %2138 = load i32* %img_height, align 4
  %2139 = load i32* %img_width, align 4
  %2140 = call zeroext i16 %2131(i16** %2132, i32 %2134, i32 %2137, i32 %2138, i32 %2139)
  %2141 = zext i16 %2140 to i32
  %2142 = mul nsw i32 %2130, %2141
  %2143 = load i16* %weightRpic, align 2
  %2144 = sext i16 %2143 to i32
  %2145 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2146 = load i16*** %ref2_pic, align 8
  %2147 = load i16* %ry, align 2
  %2148 = sext i16 %2147 to i32
  %2149 = load i16* %rx0, align 2
  %2150 = sext i16 %2149 to i32
  %2151 = add nsw i32 %2150, 12
  %2152 = load i32* %img_height, align 4
  %2153 = load i32* %img_width, align 4
  %2154 = call zeroext i16 %2145(i16** %2146, i32 %2148, i32 %2151, i32 %2152, i32 %2153)
  %2155 = zext i16 %2154 to i32
  %2156 = mul nsw i32 %2144, %2155
  %2157 = add nsw i32 %2142, %2156
  %2158 = load i32* @wp_luma_round, align 4
  %2159 = mul nsw i32 2, %2158
  %2160 = add nsw i32 %2157, %2159
  %2161 = load i32* @luma_log_weight_denom, align 4
  %2162 = add nsw i32 %2161, 1
  %2163 = ashr i32 %2160, %2162
  %2164 = load i16* %offsetBi, align 2
  %2165 = sext i16 %2164 to i32
  %2166 = add nsw i32 %2163, %2165
  %2167 = icmp slt i32 %2166, 0
  br i1 %2167, label %2168, label %2169

; <label>:2168                                    ; preds = %2115
  br label %2257

; <label>:2169                                    ; preds = %2115
  %2170 = load i16* %weightSpic, align 2
  %2171 = sext i16 %2170 to i32
  %2172 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2173 = load i16*** %ref1_pic, align 8
  %2174 = load i16* %sy, align 2
  %2175 = sext i16 %2174 to i32
  %2176 = load i16* %sx0, align 2
  %2177 = sext i16 %2176 to i32
  %2178 = add nsw i32 %2177, 12
  %2179 = load i32* %img_height, align 4
  %2180 = load i32* %img_width, align 4
  %2181 = call zeroext i16 %2172(i16** %2173, i32 %2175, i32 %2178, i32 %2179, i32 %2180)
  %2182 = zext i16 %2181 to i32
  %2183 = mul nsw i32 %2171, %2182
  %2184 = load i16* %weightRpic, align 2
  %2185 = sext i16 %2184 to i32
  %2186 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2187 = load i16*** %ref2_pic, align 8
  %2188 = load i16* %ry, align 2
  %2189 = sext i16 %2188 to i32
  %2190 = load i16* %rx0, align 2
  %2191 = sext i16 %2190 to i32
  %2192 = add nsw i32 %2191, 12
  %2193 = load i32* %img_height, align 4
  %2194 = load i32* %img_width, align 4
  %2195 = call zeroext i16 %2186(i16** %2187, i32 %2189, i32 %2192, i32 %2193, i32 %2194)
  %2196 = zext i16 %2195 to i32
  %2197 = mul nsw i32 %2185, %2196
  %2198 = add nsw i32 %2183, %2197
  %2199 = load i32* @wp_luma_round, align 4
  %2200 = mul nsw i32 2, %2199
  %2201 = add nsw i32 %2198, %2200
  %2202 = load i32* @luma_log_weight_denom, align 4
  %2203 = add nsw i32 %2202, 1
  %2204 = ashr i32 %2201, %2203
  %2205 = load i16* %offsetBi, align 2
  %2206 = sext i16 %2205 to i32
  %2207 = add nsw i32 %2204, %2206
  %2208 = load %struct.ImageParameters** @img, align 8
  %2209 = getelementptr inbounds %struct.ImageParameters* %2208, i32 0, i32 155
  %2210 = load i32* %2209, align 4
  %2211 = icmp sgt i32 %2207, %2210
  br i1 %2211, label %2212, label %2216

; <label>:2212                                    ; preds = %2169
  %2213 = load %struct.ImageParameters** @img, align 8
  %2214 = getelementptr inbounds %struct.ImageParameters* %2213, i32 0, i32 155
  %2215 = load i32* %2214, align 4
  br label %2255

; <label>:2216                                    ; preds = %2169
  %2217 = load i16* %weightSpic, align 2
  %2218 = sext i16 %2217 to i32
  %2219 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2220 = load i16*** %ref1_pic, align 8
  %2221 = load i16* %sy, align 2
  %2222 = sext i16 %2221 to i32
  %2223 = load i16* %sx0, align 2
  %2224 = sext i16 %2223 to i32
  %2225 = add nsw i32 %2224, 12
  %2226 = load i32* %img_height, align 4
  %2227 = load i32* %img_width, align 4
  %2228 = call zeroext i16 %2219(i16** %2220, i32 %2222, i32 %2225, i32 %2226, i32 %2227)
  %2229 = zext i16 %2228 to i32
  %2230 = mul nsw i32 %2218, %2229
  %2231 = load i16* %weightRpic, align 2
  %2232 = sext i16 %2231 to i32
  %2233 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2234 = load i16*** %ref2_pic, align 8
  %2235 = load i16* %ry, align 2
  %2236 = sext i16 %2235 to i32
  %2237 = load i16* %rx0, align 2
  %2238 = sext i16 %2237 to i32
  %2239 = add nsw i32 %2238, 12
  %2240 = load i32* %img_height, align 4
  %2241 = load i32* %img_width, align 4
  %2242 = call zeroext i16 %2233(i16** %2234, i32 %2236, i32 %2239, i32 %2240, i32 %2241)
  %2243 = zext i16 %2242 to i32
  %2244 = mul nsw i32 %2232, %2243
  %2245 = add nsw i32 %2230, %2244
  %2246 = load i32* @wp_luma_round, align 4
  %2247 = mul nsw i32 2, %2246
  %2248 = add nsw i32 %2245, %2247
  %2249 = load i32* @luma_log_weight_denom, align 4
  %2250 = add nsw i32 %2249, 1
  %2251 = ashr i32 %2248, %2250
  %2252 = load i16* %offsetBi, align 2
  %2253 = sext i16 %2252 to i32
  %2254 = add nsw i32 %2251, %2253
  br label %2255

; <label>:2255                                    ; preds = %2216, %2212
  %2256 = phi i32 [ %2215, %2212 ], [ %2254, %2216 ]
  br label %2257

; <label>:2257                                    ; preds = %2255, %2168
  %2258 = phi i32 [ 0, %2168 ], [ %2256, %2255 ]
  store i32 %2258, i32* %weightedpel, align 4
  %2259 = load i16* %x0, align 2
  %2260 = sext i16 %2259 to i32
  %2261 = add nsw i32 %2260, 3
  %2262 = sext i32 %2261 to i64
  %2263 = load i16** %orig_line, align 8
  %2264 = getelementptr inbounds i16* %2263, i64 %2262
  %2265 = load i16* %2264, align 2
  %2266 = zext i16 %2265 to i32
  %2267 = load i32* %weightedpel, align 4
  %2268 = sub nsw i32 %2266, %2267
  %2269 = load i32** %d, align 8
  %2270 = getelementptr inbounds i32* %2269, i32 1
  store i32* %2270, i32** %d, align 8
  store i32 %2268, i32* %2269, align 4
  %2271 = load i16* %sy0, align 2
  %2272 = sext i16 %2271 to i32
  %2273 = add nsw i32 %2272, 12
  %2274 = trunc i32 %2273 to i16
  store i16 %2274, i16* %sy, align 2
  %2275 = load i16* %ry0, align 2
  %2276 = sext i16 %2275 to i32
  %2277 = add nsw i32 %2276, 12
  %2278 = trunc i32 %2277 to i16
  store i16 %2278, i16* %ry, align 2
  %2279 = load i16* %y0, align 2
  %2280 = sext i16 %2279 to i32
  %2281 = add nsw i32 %2280, 3
  %2282 = sext i32 %2281 to i64
  %2283 = load i16*** %1, align 8
  %2284 = getelementptr inbounds i16** %2283, i64 %2282
  %2285 = load i16** %2284, align 8
  store i16* %2285, i16** %orig_line, align 8
  %2286 = load i16* %weightSpic, align 2
  %2287 = sext i16 %2286 to i32
  %2288 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2289 = load i16*** %ref1_pic, align 8
  %2290 = load i16* %sy, align 2
  %2291 = sext i16 %2290 to i32
  %2292 = load i16* %sx0, align 2
  %2293 = sext i16 %2292 to i32
  %2294 = load i32* %img_height, align 4
  %2295 = load i32* %img_width, align 4
  %2296 = call zeroext i16 %2288(i16** %2289, i32 %2291, i32 %2293, i32 %2294, i32 %2295)
  %2297 = zext i16 %2296 to i32
  %2298 = mul nsw i32 %2287, %2297
  %2299 = load i16* %weightRpic, align 2
  %2300 = sext i16 %2299 to i32
  %2301 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2302 = load i16*** %ref2_pic, align 8
  %2303 = load i16* %ry, align 2
  %2304 = sext i16 %2303 to i32
  %2305 = load i16* %rx0, align 2
  %2306 = sext i16 %2305 to i32
  %2307 = load i32* %img_height, align 4
  %2308 = load i32* %img_width, align 4
  %2309 = call zeroext i16 %2301(i16** %2302, i32 %2304, i32 %2306, i32 %2307, i32 %2308)
  %2310 = zext i16 %2309 to i32
  %2311 = mul nsw i32 %2300, %2310
  %2312 = add nsw i32 %2298, %2311
  %2313 = load i32* @wp_luma_round, align 4
  %2314 = mul nsw i32 2, %2313
  %2315 = add nsw i32 %2312, %2314
  %2316 = load i32* @luma_log_weight_denom, align 4
  %2317 = add nsw i32 %2316, 1
  %2318 = ashr i32 %2315, %2317
  %2319 = load i16* %offsetBi, align 2
  %2320 = sext i16 %2319 to i32
  %2321 = add nsw i32 %2318, %2320
  %2322 = icmp slt i32 %2321, 0
  br i1 %2322, label %2323, label %2324

; <label>:2323                                    ; preds = %2257
  br label %2408

; <label>:2324                                    ; preds = %2257
  %2325 = load i16* %weightSpic, align 2
  %2326 = sext i16 %2325 to i32
  %2327 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2328 = load i16*** %ref1_pic, align 8
  %2329 = load i16* %sy, align 2
  %2330 = sext i16 %2329 to i32
  %2331 = load i16* %sx0, align 2
  %2332 = sext i16 %2331 to i32
  %2333 = load i32* %img_height, align 4
  %2334 = load i32* %img_width, align 4
  %2335 = call zeroext i16 %2327(i16** %2328, i32 %2330, i32 %2332, i32 %2333, i32 %2334)
  %2336 = zext i16 %2335 to i32
  %2337 = mul nsw i32 %2326, %2336
  %2338 = load i16* %weightRpic, align 2
  %2339 = sext i16 %2338 to i32
  %2340 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2341 = load i16*** %ref2_pic, align 8
  %2342 = load i16* %ry, align 2
  %2343 = sext i16 %2342 to i32
  %2344 = load i16* %rx0, align 2
  %2345 = sext i16 %2344 to i32
  %2346 = load i32* %img_height, align 4
  %2347 = load i32* %img_width, align 4
  %2348 = call zeroext i16 %2340(i16** %2341, i32 %2343, i32 %2345, i32 %2346, i32 %2347)
  %2349 = zext i16 %2348 to i32
  %2350 = mul nsw i32 %2339, %2349
  %2351 = add nsw i32 %2337, %2350
  %2352 = load i32* @wp_luma_round, align 4
  %2353 = mul nsw i32 2, %2352
  %2354 = add nsw i32 %2351, %2353
  %2355 = load i32* @luma_log_weight_denom, align 4
  %2356 = add nsw i32 %2355, 1
  %2357 = ashr i32 %2354, %2356
  %2358 = load i16* %offsetBi, align 2
  %2359 = sext i16 %2358 to i32
  %2360 = add nsw i32 %2357, %2359
  %2361 = load %struct.ImageParameters** @img, align 8
  %2362 = getelementptr inbounds %struct.ImageParameters* %2361, i32 0, i32 155
  %2363 = load i32* %2362, align 4
  %2364 = icmp sgt i32 %2360, %2363
  br i1 %2364, label %2365, label %2369

; <label>:2365                                    ; preds = %2324
  %2366 = load %struct.ImageParameters** @img, align 8
  %2367 = getelementptr inbounds %struct.ImageParameters* %2366, i32 0, i32 155
  %2368 = load i32* %2367, align 4
  br label %2406

; <label>:2369                                    ; preds = %2324
  %2370 = load i16* %weightSpic, align 2
  %2371 = sext i16 %2370 to i32
  %2372 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2373 = load i16*** %ref1_pic, align 8
  %2374 = load i16* %sy, align 2
  %2375 = sext i16 %2374 to i32
  %2376 = load i16* %sx0, align 2
  %2377 = sext i16 %2376 to i32
  %2378 = load i32* %img_height, align 4
  %2379 = load i32* %img_width, align 4
  %2380 = call zeroext i16 %2372(i16** %2373, i32 %2375, i32 %2377, i32 %2378, i32 %2379)
  %2381 = zext i16 %2380 to i32
  %2382 = mul nsw i32 %2371, %2381
  %2383 = load i16* %weightRpic, align 2
  %2384 = sext i16 %2383 to i32
  %2385 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2386 = load i16*** %ref2_pic, align 8
  %2387 = load i16* %ry, align 2
  %2388 = sext i16 %2387 to i32
  %2389 = load i16* %rx0, align 2
  %2390 = sext i16 %2389 to i32
  %2391 = load i32* %img_height, align 4
  %2392 = load i32* %img_width, align 4
  %2393 = call zeroext i16 %2385(i16** %2386, i32 %2388, i32 %2390, i32 %2391, i32 %2392)
  %2394 = zext i16 %2393 to i32
  %2395 = mul nsw i32 %2384, %2394
  %2396 = add nsw i32 %2382, %2395
  %2397 = load i32* @wp_luma_round, align 4
  %2398 = mul nsw i32 2, %2397
  %2399 = add nsw i32 %2396, %2398
  %2400 = load i32* @luma_log_weight_denom, align 4
  %2401 = add nsw i32 %2400, 1
  %2402 = ashr i32 %2399, %2401
  %2403 = load i16* %offsetBi, align 2
  %2404 = sext i16 %2403 to i32
  %2405 = add nsw i32 %2402, %2404
  br label %2406

; <label>:2406                                    ; preds = %2369, %2365
  %2407 = phi i32 [ %2368, %2365 ], [ %2405, %2369 ]
  br label %2408

; <label>:2408                                    ; preds = %2406, %2323
  %2409 = phi i32 [ 0, %2323 ], [ %2407, %2406 ]
  store i32 %2409, i32* %weightedpel, align 4
  %2410 = load i16* %x0, align 2
  %2411 = sext i16 %2410 to i64
  %2412 = load i16** %orig_line, align 8
  %2413 = getelementptr inbounds i16* %2412, i64 %2411
  %2414 = load i16* %2413, align 2
  %2415 = zext i16 %2414 to i32
  %2416 = load i32* %weightedpel, align 4
  %2417 = sub nsw i32 %2415, %2416
  %2418 = load i32** %d, align 8
  %2419 = getelementptr inbounds i32* %2418, i32 1
  store i32* %2419, i32** %d, align 8
  store i32 %2417, i32* %2418, align 4
  %2420 = load i16* %weightSpic, align 2
  %2421 = sext i16 %2420 to i32
  %2422 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2423 = load i16*** %ref1_pic, align 8
  %2424 = load i16* %sy, align 2
  %2425 = sext i16 %2424 to i32
  %2426 = load i16* %sx0, align 2
  %2427 = sext i16 %2426 to i32
  %2428 = add nsw i32 %2427, 4
  %2429 = load i32* %img_height, align 4
  %2430 = load i32* %img_width, align 4
  %2431 = call zeroext i16 %2422(i16** %2423, i32 %2425, i32 %2428, i32 %2429, i32 %2430)
  %2432 = zext i16 %2431 to i32
  %2433 = mul nsw i32 %2421, %2432
  %2434 = load i16* %weightRpic, align 2
  %2435 = sext i16 %2434 to i32
  %2436 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2437 = load i16*** %ref2_pic, align 8
  %2438 = load i16* %ry, align 2
  %2439 = sext i16 %2438 to i32
  %2440 = load i16* %rx0, align 2
  %2441 = sext i16 %2440 to i32
  %2442 = add nsw i32 %2441, 4
  %2443 = load i32* %img_height, align 4
  %2444 = load i32* %img_width, align 4
  %2445 = call zeroext i16 %2436(i16** %2437, i32 %2439, i32 %2442, i32 %2443, i32 %2444)
  %2446 = zext i16 %2445 to i32
  %2447 = mul nsw i32 %2435, %2446
  %2448 = add nsw i32 %2433, %2447
  %2449 = load i32* @wp_luma_round, align 4
  %2450 = mul nsw i32 2, %2449
  %2451 = add nsw i32 %2448, %2450
  %2452 = load i32* @luma_log_weight_denom, align 4
  %2453 = add nsw i32 %2452, 1
  %2454 = ashr i32 %2451, %2453
  %2455 = load i16* %offsetBi, align 2
  %2456 = sext i16 %2455 to i32
  %2457 = add nsw i32 %2454, %2456
  %2458 = icmp slt i32 %2457, 0
  br i1 %2458, label %2459, label %2460

; <label>:2459                                    ; preds = %2408
  br label %2548

; <label>:2460                                    ; preds = %2408
  %2461 = load i16* %weightSpic, align 2
  %2462 = sext i16 %2461 to i32
  %2463 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2464 = load i16*** %ref1_pic, align 8
  %2465 = load i16* %sy, align 2
  %2466 = sext i16 %2465 to i32
  %2467 = load i16* %sx0, align 2
  %2468 = sext i16 %2467 to i32
  %2469 = add nsw i32 %2468, 4
  %2470 = load i32* %img_height, align 4
  %2471 = load i32* %img_width, align 4
  %2472 = call zeroext i16 %2463(i16** %2464, i32 %2466, i32 %2469, i32 %2470, i32 %2471)
  %2473 = zext i16 %2472 to i32
  %2474 = mul nsw i32 %2462, %2473
  %2475 = load i16* %weightRpic, align 2
  %2476 = sext i16 %2475 to i32
  %2477 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2478 = load i16*** %ref2_pic, align 8
  %2479 = load i16* %ry, align 2
  %2480 = sext i16 %2479 to i32
  %2481 = load i16* %rx0, align 2
  %2482 = sext i16 %2481 to i32
  %2483 = add nsw i32 %2482, 4
  %2484 = load i32* %img_height, align 4
  %2485 = load i32* %img_width, align 4
  %2486 = call zeroext i16 %2477(i16** %2478, i32 %2480, i32 %2483, i32 %2484, i32 %2485)
  %2487 = zext i16 %2486 to i32
  %2488 = mul nsw i32 %2476, %2487
  %2489 = add nsw i32 %2474, %2488
  %2490 = load i32* @wp_luma_round, align 4
  %2491 = mul nsw i32 2, %2490
  %2492 = add nsw i32 %2489, %2491
  %2493 = load i32* @luma_log_weight_denom, align 4
  %2494 = add nsw i32 %2493, 1
  %2495 = ashr i32 %2492, %2494
  %2496 = load i16* %offsetBi, align 2
  %2497 = sext i16 %2496 to i32
  %2498 = add nsw i32 %2495, %2497
  %2499 = load %struct.ImageParameters** @img, align 8
  %2500 = getelementptr inbounds %struct.ImageParameters* %2499, i32 0, i32 155
  %2501 = load i32* %2500, align 4
  %2502 = icmp sgt i32 %2498, %2501
  br i1 %2502, label %2503, label %2507

; <label>:2503                                    ; preds = %2460
  %2504 = load %struct.ImageParameters** @img, align 8
  %2505 = getelementptr inbounds %struct.ImageParameters* %2504, i32 0, i32 155
  %2506 = load i32* %2505, align 4
  br label %2546

; <label>:2507                                    ; preds = %2460
  %2508 = load i16* %weightSpic, align 2
  %2509 = sext i16 %2508 to i32
  %2510 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2511 = load i16*** %ref1_pic, align 8
  %2512 = load i16* %sy, align 2
  %2513 = sext i16 %2512 to i32
  %2514 = load i16* %sx0, align 2
  %2515 = sext i16 %2514 to i32
  %2516 = add nsw i32 %2515, 4
  %2517 = load i32* %img_height, align 4
  %2518 = load i32* %img_width, align 4
  %2519 = call zeroext i16 %2510(i16** %2511, i32 %2513, i32 %2516, i32 %2517, i32 %2518)
  %2520 = zext i16 %2519 to i32
  %2521 = mul nsw i32 %2509, %2520
  %2522 = load i16* %weightRpic, align 2
  %2523 = sext i16 %2522 to i32
  %2524 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2525 = load i16*** %ref2_pic, align 8
  %2526 = load i16* %ry, align 2
  %2527 = sext i16 %2526 to i32
  %2528 = load i16* %rx0, align 2
  %2529 = sext i16 %2528 to i32
  %2530 = add nsw i32 %2529, 4
  %2531 = load i32* %img_height, align 4
  %2532 = load i32* %img_width, align 4
  %2533 = call zeroext i16 %2524(i16** %2525, i32 %2527, i32 %2530, i32 %2531, i32 %2532)
  %2534 = zext i16 %2533 to i32
  %2535 = mul nsw i32 %2523, %2534
  %2536 = add nsw i32 %2521, %2535
  %2537 = load i32* @wp_luma_round, align 4
  %2538 = mul nsw i32 2, %2537
  %2539 = add nsw i32 %2536, %2538
  %2540 = load i32* @luma_log_weight_denom, align 4
  %2541 = add nsw i32 %2540, 1
  %2542 = ashr i32 %2539, %2541
  %2543 = load i16* %offsetBi, align 2
  %2544 = sext i16 %2543 to i32
  %2545 = add nsw i32 %2542, %2544
  br label %2546

; <label>:2546                                    ; preds = %2507, %2503
  %2547 = phi i32 [ %2506, %2503 ], [ %2545, %2507 ]
  br label %2548

; <label>:2548                                    ; preds = %2546, %2459
  %2549 = phi i32 [ 0, %2459 ], [ %2547, %2546 ]
  store i32 %2549, i32* %weightedpel, align 4
  %2550 = load i16* %x0, align 2
  %2551 = sext i16 %2550 to i32
  %2552 = add nsw i32 %2551, 1
  %2553 = sext i32 %2552 to i64
  %2554 = load i16** %orig_line, align 8
  %2555 = getelementptr inbounds i16* %2554, i64 %2553
  %2556 = load i16* %2555, align 2
  %2557 = zext i16 %2556 to i32
  %2558 = load i32* %weightedpel, align 4
  %2559 = sub nsw i32 %2557, %2558
  %2560 = load i32** %d, align 8
  %2561 = getelementptr inbounds i32* %2560, i32 1
  store i32* %2561, i32** %d, align 8
  store i32 %2559, i32* %2560, align 4
  %2562 = load i16* %weightSpic, align 2
  %2563 = sext i16 %2562 to i32
  %2564 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2565 = load i16*** %ref1_pic, align 8
  %2566 = load i16* %sy, align 2
  %2567 = sext i16 %2566 to i32
  %2568 = load i16* %sx0, align 2
  %2569 = sext i16 %2568 to i32
  %2570 = add nsw i32 %2569, 8
  %2571 = load i32* %img_height, align 4
  %2572 = load i32* %img_width, align 4
  %2573 = call zeroext i16 %2564(i16** %2565, i32 %2567, i32 %2570, i32 %2571, i32 %2572)
  %2574 = zext i16 %2573 to i32
  %2575 = mul nsw i32 %2563, %2574
  %2576 = load i16* %weightRpic, align 2
  %2577 = sext i16 %2576 to i32
  %2578 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2579 = load i16*** %ref2_pic, align 8
  %2580 = load i16* %ry, align 2
  %2581 = sext i16 %2580 to i32
  %2582 = load i16* %rx0, align 2
  %2583 = sext i16 %2582 to i32
  %2584 = add nsw i32 %2583, 8
  %2585 = load i32* %img_height, align 4
  %2586 = load i32* %img_width, align 4
  %2587 = call zeroext i16 %2578(i16** %2579, i32 %2581, i32 %2584, i32 %2585, i32 %2586)
  %2588 = zext i16 %2587 to i32
  %2589 = mul nsw i32 %2577, %2588
  %2590 = add nsw i32 %2575, %2589
  %2591 = load i32* @wp_luma_round, align 4
  %2592 = mul nsw i32 2, %2591
  %2593 = add nsw i32 %2590, %2592
  %2594 = load i32* @luma_log_weight_denom, align 4
  %2595 = add nsw i32 %2594, 1
  %2596 = ashr i32 %2593, %2595
  %2597 = load i16* %offsetBi, align 2
  %2598 = sext i16 %2597 to i32
  %2599 = add nsw i32 %2596, %2598
  %2600 = icmp slt i32 %2599, 0
  br i1 %2600, label %2601, label %2602

; <label>:2601                                    ; preds = %2548
  br label %2690

; <label>:2602                                    ; preds = %2548
  %2603 = load i16* %weightSpic, align 2
  %2604 = sext i16 %2603 to i32
  %2605 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2606 = load i16*** %ref1_pic, align 8
  %2607 = load i16* %sy, align 2
  %2608 = sext i16 %2607 to i32
  %2609 = load i16* %sx0, align 2
  %2610 = sext i16 %2609 to i32
  %2611 = add nsw i32 %2610, 8
  %2612 = load i32* %img_height, align 4
  %2613 = load i32* %img_width, align 4
  %2614 = call zeroext i16 %2605(i16** %2606, i32 %2608, i32 %2611, i32 %2612, i32 %2613)
  %2615 = zext i16 %2614 to i32
  %2616 = mul nsw i32 %2604, %2615
  %2617 = load i16* %weightRpic, align 2
  %2618 = sext i16 %2617 to i32
  %2619 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2620 = load i16*** %ref2_pic, align 8
  %2621 = load i16* %ry, align 2
  %2622 = sext i16 %2621 to i32
  %2623 = load i16* %rx0, align 2
  %2624 = sext i16 %2623 to i32
  %2625 = add nsw i32 %2624, 8
  %2626 = load i32* %img_height, align 4
  %2627 = load i32* %img_width, align 4
  %2628 = call zeroext i16 %2619(i16** %2620, i32 %2622, i32 %2625, i32 %2626, i32 %2627)
  %2629 = zext i16 %2628 to i32
  %2630 = mul nsw i32 %2618, %2629
  %2631 = add nsw i32 %2616, %2630
  %2632 = load i32* @wp_luma_round, align 4
  %2633 = mul nsw i32 2, %2632
  %2634 = add nsw i32 %2631, %2633
  %2635 = load i32* @luma_log_weight_denom, align 4
  %2636 = add nsw i32 %2635, 1
  %2637 = ashr i32 %2634, %2636
  %2638 = load i16* %offsetBi, align 2
  %2639 = sext i16 %2638 to i32
  %2640 = add nsw i32 %2637, %2639
  %2641 = load %struct.ImageParameters** @img, align 8
  %2642 = getelementptr inbounds %struct.ImageParameters* %2641, i32 0, i32 155
  %2643 = load i32* %2642, align 4
  %2644 = icmp sgt i32 %2640, %2643
  br i1 %2644, label %2645, label %2649

; <label>:2645                                    ; preds = %2602
  %2646 = load %struct.ImageParameters** @img, align 8
  %2647 = getelementptr inbounds %struct.ImageParameters* %2646, i32 0, i32 155
  %2648 = load i32* %2647, align 4
  br label %2688

; <label>:2649                                    ; preds = %2602
  %2650 = load i16* %weightSpic, align 2
  %2651 = sext i16 %2650 to i32
  %2652 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2653 = load i16*** %ref1_pic, align 8
  %2654 = load i16* %sy, align 2
  %2655 = sext i16 %2654 to i32
  %2656 = load i16* %sx0, align 2
  %2657 = sext i16 %2656 to i32
  %2658 = add nsw i32 %2657, 8
  %2659 = load i32* %img_height, align 4
  %2660 = load i32* %img_width, align 4
  %2661 = call zeroext i16 %2652(i16** %2653, i32 %2655, i32 %2658, i32 %2659, i32 %2660)
  %2662 = zext i16 %2661 to i32
  %2663 = mul nsw i32 %2651, %2662
  %2664 = load i16* %weightRpic, align 2
  %2665 = sext i16 %2664 to i32
  %2666 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2667 = load i16*** %ref2_pic, align 8
  %2668 = load i16* %ry, align 2
  %2669 = sext i16 %2668 to i32
  %2670 = load i16* %rx0, align 2
  %2671 = sext i16 %2670 to i32
  %2672 = add nsw i32 %2671, 8
  %2673 = load i32* %img_height, align 4
  %2674 = load i32* %img_width, align 4
  %2675 = call zeroext i16 %2666(i16** %2667, i32 %2669, i32 %2672, i32 %2673, i32 %2674)
  %2676 = zext i16 %2675 to i32
  %2677 = mul nsw i32 %2665, %2676
  %2678 = add nsw i32 %2663, %2677
  %2679 = load i32* @wp_luma_round, align 4
  %2680 = mul nsw i32 2, %2679
  %2681 = add nsw i32 %2678, %2680
  %2682 = load i32* @luma_log_weight_denom, align 4
  %2683 = add nsw i32 %2682, 1
  %2684 = ashr i32 %2681, %2683
  %2685 = load i16* %offsetBi, align 2
  %2686 = sext i16 %2685 to i32
  %2687 = add nsw i32 %2684, %2686
  br label %2688

; <label>:2688                                    ; preds = %2649, %2645
  %2689 = phi i32 [ %2648, %2645 ], [ %2687, %2649 ]
  br label %2690

; <label>:2690                                    ; preds = %2688, %2601
  %2691 = phi i32 [ 0, %2601 ], [ %2689, %2688 ]
  store i32 %2691, i32* %weightedpel, align 4
  %2692 = load i16* %x0, align 2
  %2693 = sext i16 %2692 to i32
  %2694 = add nsw i32 %2693, 2
  %2695 = sext i32 %2694 to i64
  %2696 = load i16** %orig_line, align 8
  %2697 = getelementptr inbounds i16* %2696, i64 %2695
  %2698 = load i16* %2697, align 2
  %2699 = zext i16 %2698 to i32
  %2700 = load i32* %weightedpel, align 4
  %2701 = sub nsw i32 %2699, %2700
  %2702 = load i32** %d, align 8
  %2703 = getelementptr inbounds i32* %2702, i32 1
  store i32* %2703, i32** %d, align 8
  store i32 %2701, i32* %2702, align 4
  %2704 = load i16* %weightSpic, align 2
  %2705 = sext i16 %2704 to i32
  %2706 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2707 = load i16*** %ref1_pic, align 8
  %2708 = load i16* %sy, align 2
  %2709 = sext i16 %2708 to i32
  %2710 = load i16* %sx0, align 2
  %2711 = sext i16 %2710 to i32
  %2712 = add nsw i32 %2711, 12
  %2713 = load i32* %img_height, align 4
  %2714 = load i32* %img_width, align 4
  %2715 = call zeroext i16 %2706(i16** %2707, i32 %2709, i32 %2712, i32 %2713, i32 %2714)
  %2716 = zext i16 %2715 to i32
  %2717 = mul nsw i32 %2705, %2716
  %2718 = load i16* %weightRpic, align 2
  %2719 = sext i16 %2718 to i32
  %2720 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2721 = load i16*** %ref2_pic, align 8
  %2722 = load i16* %ry, align 2
  %2723 = sext i16 %2722 to i32
  %2724 = load i16* %rx0, align 2
  %2725 = sext i16 %2724 to i32
  %2726 = add nsw i32 %2725, 12
  %2727 = load i32* %img_height, align 4
  %2728 = load i32* %img_width, align 4
  %2729 = call zeroext i16 %2720(i16** %2721, i32 %2723, i32 %2726, i32 %2727, i32 %2728)
  %2730 = zext i16 %2729 to i32
  %2731 = mul nsw i32 %2719, %2730
  %2732 = add nsw i32 %2717, %2731
  %2733 = load i32* @wp_luma_round, align 4
  %2734 = mul nsw i32 2, %2733
  %2735 = add nsw i32 %2732, %2734
  %2736 = load i32* @luma_log_weight_denom, align 4
  %2737 = add nsw i32 %2736, 1
  %2738 = ashr i32 %2735, %2737
  %2739 = load i16* %offsetBi, align 2
  %2740 = sext i16 %2739 to i32
  %2741 = add nsw i32 %2738, %2740
  %2742 = icmp slt i32 %2741, 0
  br i1 %2742, label %2743, label %2744

; <label>:2743                                    ; preds = %2690
  br label %2832

; <label>:2744                                    ; preds = %2690
  %2745 = load i16* %weightSpic, align 2
  %2746 = sext i16 %2745 to i32
  %2747 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2748 = load i16*** %ref1_pic, align 8
  %2749 = load i16* %sy, align 2
  %2750 = sext i16 %2749 to i32
  %2751 = load i16* %sx0, align 2
  %2752 = sext i16 %2751 to i32
  %2753 = add nsw i32 %2752, 12
  %2754 = load i32* %img_height, align 4
  %2755 = load i32* %img_width, align 4
  %2756 = call zeroext i16 %2747(i16** %2748, i32 %2750, i32 %2753, i32 %2754, i32 %2755)
  %2757 = zext i16 %2756 to i32
  %2758 = mul nsw i32 %2746, %2757
  %2759 = load i16* %weightRpic, align 2
  %2760 = sext i16 %2759 to i32
  %2761 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2762 = load i16*** %ref2_pic, align 8
  %2763 = load i16* %ry, align 2
  %2764 = sext i16 %2763 to i32
  %2765 = load i16* %rx0, align 2
  %2766 = sext i16 %2765 to i32
  %2767 = add nsw i32 %2766, 12
  %2768 = load i32* %img_height, align 4
  %2769 = load i32* %img_width, align 4
  %2770 = call zeroext i16 %2761(i16** %2762, i32 %2764, i32 %2767, i32 %2768, i32 %2769)
  %2771 = zext i16 %2770 to i32
  %2772 = mul nsw i32 %2760, %2771
  %2773 = add nsw i32 %2758, %2772
  %2774 = load i32* @wp_luma_round, align 4
  %2775 = mul nsw i32 2, %2774
  %2776 = add nsw i32 %2773, %2775
  %2777 = load i32* @luma_log_weight_denom, align 4
  %2778 = add nsw i32 %2777, 1
  %2779 = ashr i32 %2776, %2778
  %2780 = load i16* %offsetBi, align 2
  %2781 = sext i16 %2780 to i32
  %2782 = add nsw i32 %2779, %2781
  %2783 = load %struct.ImageParameters** @img, align 8
  %2784 = getelementptr inbounds %struct.ImageParameters* %2783, i32 0, i32 155
  %2785 = load i32* %2784, align 4
  %2786 = icmp sgt i32 %2782, %2785
  br i1 %2786, label %2787, label %2791

; <label>:2787                                    ; preds = %2744
  %2788 = load %struct.ImageParameters** @img, align 8
  %2789 = getelementptr inbounds %struct.ImageParameters* %2788, i32 0, i32 155
  %2790 = load i32* %2789, align 4
  br label %2830

; <label>:2791                                    ; preds = %2744
  %2792 = load i16* %weightSpic, align 2
  %2793 = sext i16 %2792 to i32
  %2794 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2795 = load i16*** %ref1_pic, align 8
  %2796 = load i16* %sy, align 2
  %2797 = sext i16 %2796 to i32
  %2798 = load i16* %sx0, align 2
  %2799 = sext i16 %2798 to i32
  %2800 = add nsw i32 %2799, 12
  %2801 = load i32* %img_height, align 4
  %2802 = load i32* %img_width, align 4
  %2803 = call zeroext i16 %2794(i16** %2795, i32 %2797, i32 %2800, i32 %2801, i32 %2802)
  %2804 = zext i16 %2803 to i32
  %2805 = mul nsw i32 %2793, %2804
  %2806 = load i16* %weightRpic, align 2
  %2807 = sext i16 %2806 to i32
  %2808 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2809 = load i16*** %ref2_pic, align 8
  %2810 = load i16* %ry, align 2
  %2811 = sext i16 %2810 to i32
  %2812 = load i16* %rx0, align 2
  %2813 = sext i16 %2812 to i32
  %2814 = add nsw i32 %2813, 12
  %2815 = load i32* %img_height, align 4
  %2816 = load i32* %img_width, align 4
  %2817 = call zeroext i16 %2808(i16** %2809, i32 %2811, i32 %2814, i32 %2815, i32 %2816)
  %2818 = zext i16 %2817 to i32
  %2819 = mul nsw i32 %2807, %2818
  %2820 = add nsw i32 %2805, %2819
  %2821 = load i32* @wp_luma_round, align 4
  %2822 = mul nsw i32 2, %2821
  %2823 = add nsw i32 %2820, %2822
  %2824 = load i32* @luma_log_weight_denom, align 4
  %2825 = add nsw i32 %2824, 1
  %2826 = ashr i32 %2823, %2825
  %2827 = load i16* %offsetBi, align 2
  %2828 = sext i16 %2827 to i32
  %2829 = add nsw i32 %2826, %2828
  br label %2830

; <label>:2830                                    ; preds = %2791, %2787
  %2831 = phi i32 [ %2790, %2787 ], [ %2829, %2791 ]
  br label %2832

; <label>:2832                                    ; preds = %2830, %2743
  %2833 = phi i32 [ 0, %2743 ], [ %2831, %2830 ]
  store i32 %2833, i32* %weightedpel, align 4
  %2834 = load i16* %x0, align 2
  %2835 = sext i16 %2834 to i32
  %2836 = add nsw i32 %2835, 3
  %2837 = sext i32 %2836 to i64
  %2838 = load i16** %orig_line, align 8
  %2839 = getelementptr inbounds i16* %2838, i64 %2837
  %2840 = load i16* %2839, align 2
  %2841 = zext i16 %2840 to i32
  %2842 = load i32* %weightedpel, align 4
  %2843 = sub nsw i32 %2841, %2842
  %2844 = load i32** %d, align 8
  store i32 %2843, i32* %2844, align 4
  %2845 = load %struct.InputParameters** @input, align 8
  %2846 = getelementptr inbounds %struct.InputParameters* %2845, i32 0, i32 123
  %2847 = load i32* %2846, align 4
  %2848 = icmp ne i32 %2847, 0
  br i1 %2848, label %2862, label %2849

; <label>:2849                                    ; preds = %2832
  %2850 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  %2851 = load i32* %halfpelhadamard, align 4
  %2852 = call i32 @SATD(i32* %2850, i32 %2851)
  %2853 = load i16* %mcost, align 2
  %2854 = sext i16 %2853 to i32
  %2855 = add nsw i32 %2854, %2852
  %2856 = trunc i32 %2855 to i16
  store i16 %2856, i16* %mcost, align 2
  %2857 = sext i16 %2856 to i32
  %2858 = load i32* %15, align 4
  %2859 = icmp sgt i32 %2857, %2858
  br i1 %2859, label %2860, label %2861

; <label>:2860                                    ; preds = %2849
  store i16 1, i16* %abort_search, align 2
  br label %2903

; <label>:2861                                    ; preds = %2849
  br label %2897

; <label>:2862                                    ; preds = %2832
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %2863

; <label>:2863                                    ; preds = %2893, %2862
  %2864 = load i32* %j, align 4
  %2865 = icmp slt i32 %2864, 4
  br i1 %2865, label %2866, label %2896

; <label>:2866                                    ; preds = %2863
  store i32 0, i32* %i, align 4
  br label %2867

; <label>:2867                                    ; preds = %2887, %2866
  %2868 = load i32* %i, align 4
  %2869 = icmp slt i32 %2868, 4
  br i1 %2869, label %2870, label %2892

; <label>:2870                                    ; preds = %2867
  %2871 = load i32* %k, align 4
  %2872 = sext i32 %2871 to i64
  %2873 = getelementptr inbounds [16 x i32]* %diff, i32 0, i64 %2872
  %2874 = load i32* %2873, align 4
  %2875 = load i16* %x0, align 2
  %2876 = sext i16 %2875 to i32
  %2877 = load i32* %i, align 4
  %2878 = add nsw i32 %2876, %2877
  %2879 = sext i32 %2878 to i64
  %2880 = load i16* %y0, align 2
  %2881 = sext i16 %2880 to i32
  %2882 = load i32* %j, align 4
  %2883 = add nsw i32 %2881, %2882
  %2884 = sext i32 %2883 to i64
  %2885 = getelementptr inbounds [16 x [16 x i32]]* %curr_diff, i32 0, i64 %2884
  %2886 = getelementptr inbounds [16 x i32]* %2885, i32 0, i64 %2879
  store i32 %2874, i32* %2886, align 4
  br label %2887

; <label>:2887                                    ; preds = %2870
  %2888 = load i32* %i, align 4
  %2889 = add nsw i32 %2888, 1
  store i32 %2889, i32* %i, align 4
  %2890 = load i32* %k, align 4
  %2891 = add nsw i32 %2890, 1
  store i32 %2891, i32* %k, align 4
  br label %2867

; <label>:2892                                    ; preds = %2867
  br label %2893

; <label>:2893                                    ; preds = %2892
  %2894 = load i32* %j, align 4
  %2895 = add nsw i32 %2894, 1
  store i32 %2895, i32* %j, align 4
  br label %2863

; <label>:2896                                    ; preds = %2863
  br label %2897

; <label>:2897                                    ; preds = %2896, %2861
  br label %2898

; <label>:2898                                    ; preds = %2897
  %2899 = load i16* %x0, align 2
  %2900 = sext i16 %2899 to i32
  %2901 = add nsw i32 %2900, 4
  %2902 = trunc i32 %2901 to i16
  store i16 %2902, i16* %x0, align 2
  br label %527

; <label>:2903                                    ; preds = %2860, %527
  br label %3586

; <label>:2904                                    ; preds = %504
  store i16 0, i16* %x0, align 2
  br label %2905

; <label>:2905                                    ; preds = %3580, %2904
  %2906 = load i16* %x0, align 2
  %2907 = sext i16 %2906 to i32
  %2908 = load i16* %blocksize_x, align 2
  %2909 = sext i16 %2908 to i32
  %2910 = icmp slt i32 %2907, %2909
  br i1 %2910, label %2911, label %3585

; <label>:2911                                    ; preds = %2905
  %2912 = load i32* %4, align 4
  %2913 = load i16* %x0, align 2
  %2914 = sext i16 %2913 to i32
  %2915 = add nsw i32 %2912, %2914
  %2916 = shl i32 %2915, 2
  %2917 = load i16** %11, align 8
  %2918 = load i16* %2917, align 2
  %2919 = sext i16 %2918 to i32
  %2920 = add nsw i32 %2916, %2919
  %2921 = trunc i32 %2920 to i16
  store i16 %2921, i16* %sx0, align 2
  %2922 = load i32* %4, align 4
  %2923 = load i16* %x0, align 2
  %2924 = sext i16 %2923 to i32
  %2925 = add nsw i32 %2922, %2924
  %2926 = shl i32 %2925, 2
  %2927 = load i16* %cand_mv_x, align 2
  %2928 = sext i16 %2927 to i32
  %2929 = add nsw i32 %2926, %2928
  %2930 = trunc i32 %2929 to i16
  store i16 %2930, i16* %rx0, align 2
  %2931 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  store i32* %2931, i32** %d, align 8
  %2932 = load i16* %sy0, align 2
  store i16 %2932, i16* %sy, align 2
  %2933 = load i16* %ry0, align 2
  store i16 %2933, i16* %ry, align 2
  %2934 = load i16* %y0, align 2
  %2935 = sext i16 %2934 to i64
  %2936 = load i16*** %1, align 8
  %2937 = getelementptr inbounds i16** %2936, i64 %2935
  %2938 = load i16** %2937, align 8
  store i16* %2938, i16** %orig_line, align 8
  %2939 = load i16* %x0, align 2
  %2940 = sext i16 %2939 to i64
  %2941 = load i16** %orig_line, align 8
  %2942 = getelementptr inbounds i16* %2941, i64 %2940
  %2943 = load i16* %2942, align 2
  %2944 = zext i16 %2943 to i32
  %2945 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2946 = load i16*** %ref1_pic, align 8
  %2947 = load i16* %sy, align 2
  %2948 = sext i16 %2947 to i32
  %2949 = load i16* %sx0, align 2
  %2950 = sext i16 %2949 to i32
  %2951 = load i32* %img_height, align 4
  %2952 = load i32* %img_width, align 4
  %2953 = call zeroext i16 %2945(i16** %2946, i32 %2948, i32 %2950, i32 %2951, i32 %2952)
  %2954 = zext i16 %2953 to i32
  %2955 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2956 = load i16*** %ref2_pic, align 8
  %2957 = load i16* %ry, align 2
  %2958 = sext i16 %2957 to i32
  %2959 = load i16* %rx0, align 2
  %2960 = sext i16 %2959 to i32
  %2961 = load i32* %img_height, align 4
  %2962 = load i32* %img_width, align 4
  %2963 = call zeroext i16 %2955(i16** %2956, i32 %2958, i32 %2960, i32 %2961, i32 %2962)
  %2964 = zext i16 %2963 to i32
  %2965 = add nsw i32 %2954, %2964
  %2966 = ashr i32 %2965, 1
  %2967 = sub nsw i32 %2944, %2966
  %2968 = load i32** %d, align 8
  %2969 = getelementptr inbounds i32* %2968, i32 1
  store i32* %2969, i32** %d, align 8
  store i32 %2967, i32* %2968, align 4
  %2970 = load i16* %x0, align 2
  %2971 = sext i16 %2970 to i32
  %2972 = add nsw i32 %2971, 1
  %2973 = sext i32 %2972 to i64
  %2974 = load i16** %orig_line, align 8
  %2975 = getelementptr inbounds i16* %2974, i64 %2973
  %2976 = load i16* %2975, align 2
  %2977 = zext i16 %2976 to i32
  %2978 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2979 = load i16*** %ref1_pic, align 8
  %2980 = load i16* %sy, align 2
  %2981 = sext i16 %2980 to i32
  %2982 = load i16* %sx0, align 2
  %2983 = sext i16 %2982 to i32
  %2984 = add nsw i32 %2983, 4
  %2985 = load i32* %img_height, align 4
  %2986 = load i32* %img_width, align 4
  %2987 = call zeroext i16 %2978(i16** %2979, i32 %2981, i32 %2984, i32 %2985, i32 %2986)
  %2988 = zext i16 %2987 to i32
  %2989 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2990 = load i16*** %ref2_pic, align 8
  %2991 = load i16* %ry, align 2
  %2992 = sext i16 %2991 to i32
  %2993 = load i16* %rx0, align 2
  %2994 = sext i16 %2993 to i32
  %2995 = add nsw i32 %2994, 4
  %2996 = load i32* %img_height, align 4
  %2997 = load i32* %img_width, align 4
  %2998 = call zeroext i16 %2989(i16** %2990, i32 %2992, i32 %2995, i32 %2996, i32 %2997)
  %2999 = zext i16 %2998 to i32
  %3000 = add nsw i32 %2988, %2999
  %3001 = ashr i32 %3000, 1
  %3002 = sub nsw i32 %2977, %3001
  %3003 = load i32** %d, align 8
  %3004 = getelementptr inbounds i32* %3003, i32 1
  store i32* %3004, i32** %d, align 8
  store i32 %3002, i32* %3003, align 4
  %3005 = load i16* %x0, align 2
  %3006 = sext i16 %3005 to i32
  %3007 = add nsw i32 %3006, 2
  %3008 = sext i32 %3007 to i64
  %3009 = load i16** %orig_line, align 8
  %3010 = getelementptr inbounds i16* %3009, i64 %3008
  %3011 = load i16* %3010, align 2
  %3012 = zext i16 %3011 to i32
  %3013 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3014 = load i16*** %ref1_pic, align 8
  %3015 = load i16* %sy, align 2
  %3016 = sext i16 %3015 to i32
  %3017 = load i16* %sx0, align 2
  %3018 = sext i16 %3017 to i32
  %3019 = add nsw i32 %3018, 8
  %3020 = load i32* %img_height, align 4
  %3021 = load i32* %img_width, align 4
  %3022 = call zeroext i16 %3013(i16** %3014, i32 %3016, i32 %3019, i32 %3020, i32 %3021)
  %3023 = zext i16 %3022 to i32
  %3024 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3025 = load i16*** %ref2_pic, align 8
  %3026 = load i16* %ry, align 2
  %3027 = sext i16 %3026 to i32
  %3028 = load i16* %rx0, align 2
  %3029 = sext i16 %3028 to i32
  %3030 = add nsw i32 %3029, 8
  %3031 = load i32* %img_height, align 4
  %3032 = load i32* %img_width, align 4
  %3033 = call zeroext i16 %3024(i16** %3025, i32 %3027, i32 %3030, i32 %3031, i32 %3032)
  %3034 = zext i16 %3033 to i32
  %3035 = add nsw i32 %3023, %3034
  %3036 = ashr i32 %3035, 1
  %3037 = sub nsw i32 %3012, %3036
  %3038 = load i32** %d, align 8
  %3039 = getelementptr inbounds i32* %3038, i32 1
  store i32* %3039, i32** %d, align 8
  store i32 %3037, i32* %3038, align 4
  %3040 = load i16* %x0, align 2
  %3041 = sext i16 %3040 to i32
  %3042 = add nsw i32 %3041, 3
  %3043 = sext i32 %3042 to i64
  %3044 = load i16** %orig_line, align 8
  %3045 = getelementptr inbounds i16* %3044, i64 %3043
  %3046 = load i16* %3045, align 2
  %3047 = zext i16 %3046 to i32
  %3048 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3049 = load i16*** %ref1_pic, align 8
  %3050 = load i16* %sy, align 2
  %3051 = sext i16 %3050 to i32
  %3052 = load i16* %sx0, align 2
  %3053 = sext i16 %3052 to i32
  %3054 = add nsw i32 %3053, 12
  %3055 = load i32* %img_height, align 4
  %3056 = load i32* %img_width, align 4
  %3057 = call zeroext i16 %3048(i16** %3049, i32 %3051, i32 %3054, i32 %3055, i32 %3056)
  %3058 = zext i16 %3057 to i32
  %3059 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3060 = load i16*** %ref2_pic, align 8
  %3061 = load i16* %ry, align 2
  %3062 = sext i16 %3061 to i32
  %3063 = load i16* %rx0, align 2
  %3064 = sext i16 %3063 to i32
  %3065 = add nsw i32 %3064, 12
  %3066 = load i32* %img_height, align 4
  %3067 = load i32* %img_width, align 4
  %3068 = call zeroext i16 %3059(i16** %3060, i32 %3062, i32 %3065, i32 %3066, i32 %3067)
  %3069 = zext i16 %3068 to i32
  %3070 = add nsw i32 %3058, %3069
  %3071 = ashr i32 %3070, 1
  %3072 = sub nsw i32 %3047, %3071
  %3073 = load i32** %d, align 8
  %3074 = getelementptr inbounds i32* %3073, i32 1
  store i32* %3074, i32** %d, align 8
  store i32 %3072, i32* %3073, align 4
  %3075 = load i16* %sy0, align 2
  %3076 = sext i16 %3075 to i32
  %3077 = add nsw i32 %3076, 4
  %3078 = trunc i32 %3077 to i16
  store i16 %3078, i16* %sy, align 2
  %3079 = load i16* %ry0, align 2
  %3080 = sext i16 %3079 to i32
  %3081 = add nsw i32 %3080, 4
  %3082 = trunc i32 %3081 to i16
  store i16 %3082, i16* %ry, align 2
  %3083 = load i16* %y0, align 2
  %3084 = sext i16 %3083 to i32
  %3085 = add nsw i32 %3084, 1
  %3086 = sext i32 %3085 to i64
  %3087 = load i16*** %1, align 8
  %3088 = getelementptr inbounds i16** %3087, i64 %3086
  %3089 = load i16** %3088, align 8
  store i16* %3089, i16** %orig_line, align 8
  %3090 = load i16* %x0, align 2
  %3091 = sext i16 %3090 to i64
  %3092 = load i16** %orig_line, align 8
  %3093 = getelementptr inbounds i16* %3092, i64 %3091
  %3094 = load i16* %3093, align 2
  %3095 = zext i16 %3094 to i32
  %3096 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3097 = load i16*** %ref1_pic, align 8
  %3098 = load i16* %sy, align 2
  %3099 = sext i16 %3098 to i32
  %3100 = load i16* %sx0, align 2
  %3101 = sext i16 %3100 to i32
  %3102 = load i32* %img_height, align 4
  %3103 = load i32* %img_width, align 4
  %3104 = call zeroext i16 %3096(i16** %3097, i32 %3099, i32 %3101, i32 %3102, i32 %3103)
  %3105 = zext i16 %3104 to i32
  %3106 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3107 = load i16*** %ref2_pic, align 8
  %3108 = load i16* %ry, align 2
  %3109 = sext i16 %3108 to i32
  %3110 = load i16* %rx0, align 2
  %3111 = sext i16 %3110 to i32
  %3112 = load i32* %img_height, align 4
  %3113 = load i32* %img_width, align 4
  %3114 = call zeroext i16 %3106(i16** %3107, i32 %3109, i32 %3111, i32 %3112, i32 %3113)
  %3115 = zext i16 %3114 to i32
  %3116 = add nsw i32 %3105, %3115
  %3117 = ashr i32 %3116, 2
  %3118 = sub nsw i32 %3095, %3117
  %3119 = load i32** %d, align 8
  %3120 = getelementptr inbounds i32* %3119, i32 1
  store i32* %3120, i32** %d, align 8
  store i32 %3118, i32* %3119, align 4
  %3121 = load i16* %x0, align 2
  %3122 = sext i16 %3121 to i32
  %3123 = add nsw i32 %3122, 1
  %3124 = sext i32 %3123 to i64
  %3125 = load i16** %orig_line, align 8
  %3126 = getelementptr inbounds i16* %3125, i64 %3124
  %3127 = load i16* %3126, align 2
  %3128 = zext i16 %3127 to i32
  %3129 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3130 = load i16*** %ref1_pic, align 8
  %3131 = load i16* %sy, align 2
  %3132 = sext i16 %3131 to i32
  %3133 = load i16* %sx0, align 2
  %3134 = sext i16 %3133 to i32
  %3135 = add nsw i32 %3134, 4
  %3136 = load i32* %img_height, align 4
  %3137 = load i32* %img_width, align 4
  %3138 = call zeroext i16 %3129(i16** %3130, i32 %3132, i32 %3135, i32 %3136, i32 %3137)
  %3139 = zext i16 %3138 to i32
  %3140 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3141 = load i16*** %ref2_pic, align 8
  %3142 = load i16* %ry, align 2
  %3143 = sext i16 %3142 to i32
  %3144 = load i16* %rx0, align 2
  %3145 = sext i16 %3144 to i32
  %3146 = add nsw i32 %3145, 4
  %3147 = load i32* %img_height, align 4
  %3148 = load i32* %img_width, align 4
  %3149 = call zeroext i16 %3140(i16** %3141, i32 %3143, i32 %3146, i32 %3147, i32 %3148)
  %3150 = zext i16 %3149 to i32
  %3151 = add nsw i32 %3139, %3150
  %3152 = ashr i32 %3151, 2
  %3153 = sub nsw i32 %3128, %3152
  %3154 = load i32** %d, align 8
  %3155 = getelementptr inbounds i32* %3154, i32 1
  store i32* %3155, i32** %d, align 8
  store i32 %3153, i32* %3154, align 4
  %3156 = load i16* %x0, align 2
  %3157 = sext i16 %3156 to i32
  %3158 = add nsw i32 %3157, 2
  %3159 = sext i32 %3158 to i64
  %3160 = load i16** %orig_line, align 8
  %3161 = getelementptr inbounds i16* %3160, i64 %3159
  %3162 = load i16* %3161, align 2
  %3163 = zext i16 %3162 to i32
  %3164 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3165 = load i16*** %ref1_pic, align 8
  %3166 = load i16* %sy, align 2
  %3167 = sext i16 %3166 to i32
  %3168 = load i16* %sx0, align 2
  %3169 = sext i16 %3168 to i32
  %3170 = add nsw i32 %3169, 8
  %3171 = load i32* %img_height, align 4
  %3172 = load i32* %img_width, align 4
  %3173 = call zeroext i16 %3164(i16** %3165, i32 %3167, i32 %3170, i32 %3171, i32 %3172)
  %3174 = zext i16 %3173 to i32
  %3175 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3176 = load i16*** %ref2_pic, align 8
  %3177 = load i16* %ry, align 2
  %3178 = sext i16 %3177 to i32
  %3179 = load i16* %rx0, align 2
  %3180 = sext i16 %3179 to i32
  %3181 = add nsw i32 %3180, 8
  %3182 = load i32* %img_height, align 4
  %3183 = load i32* %img_width, align 4
  %3184 = call zeroext i16 %3175(i16** %3176, i32 %3178, i32 %3181, i32 %3182, i32 %3183)
  %3185 = zext i16 %3184 to i32
  %3186 = add nsw i32 %3174, %3185
  %3187 = ashr i32 %3186, 2
  %3188 = sub nsw i32 %3163, %3187
  %3189 = load i32** %d, align 8
  %3190 = getelementptr inbounds i32* %3189, i32 1
  store i32* %3190, i32** %d, align 8
  store i32 %3188, i32* %3189, align 4
  %3191 = load i16* %x0, align 2
  %3192 = sext i16 %3191 to i32
  %3193 = add nsw i32 %3192, 3
  %3194 = sext i32 %3193 to i64
  %3195 = load i16** %orig_line, align 8
  %3196 = getelementptr inbounds i16* %3195, i64 %3194
  %3197 = load i16* %3196, align 2
  %3198 = zext i16 %3197 to i32
  %3199 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3200 = load i16*** %ref1_pic, align 8
  %3201 = load i16* %sy, align 2
  %3202 = sext i16 %3201 to i32
  %3203 = load i16* %sx0, align 2
  %3204 = sext i16 %3203 to i32
  %3205 = add nsw i32 %3204, 12
  %3206 = load i32* %img_height, align 4
  %3207 = load i32* %img_width, align 4
  %3208 = call zeroext i16 %3199(i16** %3200, i32 %3202, i32 %3205, i32 %3206, i32 %3207)
  %3209 = zext i16 %3208 to i32
  %3210 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3211 = load i16*** %ref2_pic, align 8
  %3212 = load i16* %ry, align 2
  %3213 = sext i16 %3212 to i32
  %3214 = load i16* %rx0, align 2
  %3215 = sext i16 %3214 to i32
  %3216 = add nsw i32 %3215, 12
  %3217 = load i32* %img_height, align 4
  %3218 = load i32* %img_width, align 4
  %3219 = call zeroext i16 %3210(i16** %3211, i32 %3213, i32 %3216, i32 %3217, i32 %3218)
  %3220 = zext i16 %3219 to i32
  %3221 = add nsw i32 %3209, %3220
  %3222 = ashr i32 %3221, 2
  %3223 = sub nsw i32 %3198, %3222
  %3224 = load i32** %d, align 8
  %3225 = getelementptr inbounds i32* %3224, i32 1
  store i32* %3225, i32** %d, align 8
  store i32 %3223, i32* %3224, align 4
  %3226 = load i16* %sy0, align 2
  %3227 = sext i16 %3226 to i32
  %3228 = add nsw i32 %3227, 8
  %3229 = trunc i32 %3228 to i16
  store i16 %3229, i16* %sy, align 2
  %3230 = load i16* %ry0, align 2
  %3231 = sext i16 %3230 to i32
  %3232 = add nsw i32 %3231, 8
  %3233 = trunc i32 %3232 to i16
  store i16 %3233, i16* %ry, align 2
  %3234 = load i16* %y0, align 2
  %3235 = sext i16 %3234 to i32
  %3236 = add nsw i32 %3235, 2
  %3237 = sext i32 %3236 to i64
  %3238 = load i16*** %1, align 8
  %3239 = getelementptr inbounds i16** %3238, i64 %3237
  %3240 = load i16** %3239, align 8
  store i16* %3240, i16** %orig_line, align 8
  %3241 = load i16* %x0, align 2
  %3242 = sext i16 %3241 to i64
  %3243 = load i16** %orig_line, align 8
  %3244 = getelementptr inbounds i16* %3243, i64 %3242
  %3245 = load i16* %3244, align 2
  %3246 = zext i16 %3245 to i32
  %3247 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3248 = load i16*** %ref1_pic, align 8
  %3249 = load i16* %sy, align 2
  %3250 = sext i16 %3249 to i32
  %3251 = load i16* %sx0, align 2
  %3252 = sext i16 %3251 to i32
  %3253 = load i32* %img_height, align 4
  %3254 = load i32* %img_width, align 4
  %3255 = call zeroext i16 %3247(i16** %3248, i32 %3250, i32 %3252, i32 %3253, i32 %3254)
  %3256 = zext i16 %3255 to i32
  %3257 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3258 = load i16*** %ref2_pic, align 8
  %3259 = load i16* %ry, align 2
  %3260 = sext i16 %3259 to i32
  %3261 = load i16* %rx0, align 2
  %3262 = sext i16 %3261 to i32
  %3263 = load i32* %img_height, align 4
  %3264 = load i32* %img_width, align 4
  %3265 = call zeroext i16 %3257(i16** %3258, i32 %3260, i32 %3262, i32 %3263, i32 %3264)
  %3266 = zext i16 %3265 to i32
  %3267 = add nsw i32 %3256, %3266
  %3268 = ashr i32 %3267, 1
  %3269 = sub nsw i32 %3246, %3268
  %3270 = load i32** %d, align 8
  %3271 = getelementptr inbounds i32* %3270, i32 1
  store i32* %3271, i32** %d, align 8
  store i32 %3269, i32* %3270, align 4
  %3272 = load i16* %x0, align 2
  %3273 = sext i16 %3272 to i32
  %3274 = add nsw i32 %3273, 1
  %3275 = sext i32 %3274 to i64
  %3276 = load i16** %orig_line, align 8
  %3277 = getelementptr inbounds i16* %3276, i64 %3275
  %3278 = load i16* %3277, align 2
  %3279 = zext i16 %3278 to i32
  %3280 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3281 = load i16*** %ref1_pic, align 8
  %3282 = load i16* %sy, align 2
  %3283 = sext i16 %3282 to i32
  %3284 = load i16* %sx0, align 2
  %3285 = sext i16 %3284 to i32
  %3286 = add nsw i32 %3285, 4
  %3287 = load i32* %img_height, align 4
  %3288 = load i32* %img_width, align 4
  %3289 = call zeroext i16 %3280(i16** %3281, i32 %3283, i32 %3286, i32 %3287, i32 %3288)
  %3290 = zext i16 %3289 to i32
  %3291 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3292 = load i16*** %ref2_pic, align 8
  %3293 = load i16* %ry, align 2
  %3294 = sext i16 %3293 to i32
  %3295 = load i16* %rx0, align 2
  %3296 = sext i16 %3295 to i32
  %3297 = add nsw i32 %3296, 4
  %3298 = load i32* %img_height, align 4
  %3299 = load i32* %img_width, align 4
  %3300 = call zeroext i16 %3291(i16** %3292, i32 %3294, i32 %3297, i32 %3298, i32 %3299)
  %3301 = zext i16 %3300 to i32
  %3302 = add nsw i32 %3290, %3301
  %3303 = ashr i32 %3302, 1
  %3304 = sub nsw i32 %3279, %3303
  %3305 = load i32** %d, align 8
  %3306 = getelementptr inbounds i32* %3305, i32 1
  store i32* %3306, i32** %d, align 8
  store i32 %3304, i32* %3305, align 4
  %3307 = load i16* %x0, align 2
  %3308 = sext i16 %3307 to i32
  %3309 = add nsw i32 %3308, 2
  %3310 = sext i32 %3309 to i64
  %3311 = load i16** %orig_line, align 8
  %3312 = getelementptr inbounds i16* %3311, i64 %3310
  %3313 = load i16* %3312, align 2
  %3314 = zext i16 %3313 to i32
  %3315 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3316 = load i16*** %ref1_pic, align 8
  %3317 = load i16* %sy, align 2
  %3318 = sext i16 %3317 to i32
  %3319 = load i16* %sx0, align 2
  %3320 = sext i16 %3319 to i32
  %3321 = add nsw i32 %3320, 8
  %3322 = load i32* %img_height, align 4
  %3323 = load i32* %img_width, align 4
  %3324 = call zeroext i16 %3315(i16** %3316, i32 %3318, i32 %3321, i32 %3322, i32 %3323)
  %3325 = zext i16 %3324 to i32
  %3326 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3327 = load i16*** %ref2_pic, align 8
  %3328 = load i16* %ry, align 2
  %3329 = sext i16 %3328 to i32
  %3330 = load i16* %rx0, align 2
  %3331 = sext i16 %3330 to i32
  %3332 = add nsw i32 %3331, 8
  %3333 = load i32* %img_height, align 4
  %3334 = load i32* %img_width, align 4
  %3335 = call zeroext i16 %3326(i16** %3327, i32 %3329, i32 %3332, i32 %3333, i32 %3334)
  %3336 = zext i16 %3335 to i32
  %3337 = add nsw i32 %3325, %3336
  %3338 = ashr i32 %3337, 1
  %3339 = sub nsw i32 %3314, %3338
  %3340 = load i32** %d, align 8
  %3341 = getelementptr inbounds i32* %3340, i32 1
  store i32* %3341, i32** %d, align 8
  store i32 %3339, i32* %3340, align 4
  %3342 = load i16* %x0, align 2
  %3343 = sext i16 %3342 to i32
  %3344 = add nsw i32 %3343, 3
  %3345 = sext i32 %3344 to i64
  %3346 = load i16** %orig_line, align 8
  %3347 = getelementptr inbounds i16* %3346, i64 %3345
  %3348 = load i16* %3347, align 2
  %3349 = zext i16 %3348 to i32
  %3350 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3351 = load i16*** %ref1_pic, align 8
  %3352 = load i16* %sy, align 2
  %3353 = sext i16 %3352 to i32
  %3354 = load i16* %sx0, align 2
  %3355 = sext i16 %3354 to i32
  %3356 = add nsw i32 %3355, 12
  %3357 = load i32* %img_height, align 4
  %3358 = load i32* %img_width, align 4
  %3359 = call zeroext i16 %3350(i16** %3351, i32 %3353, i32 %3356, i32 %3357, i32 %3358)
  %3360 = zext i16 %3359 to i32
  %3361 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3362 = load i16*** %ref2_pic, align 8
  %3363 = load i16* %ry, align 2
  %3364 = sext i16 %3363 to i32
  %3365 = load i16* %rx0, align 2
  %3366 = sext i16 %3365 to i32
  %3367 = add nsw i32 %3366, 12
  %3368 = load i32* %img_height, align 4
  %3369 = load i32* %img_width, align 4
  %3370 = call zeroext i16 %3361(i16** %3362, i32 %3364, i32 %3367, i32 %3368, i32 %3369)
  %3371 = zext i16 %3370 to i32
  %3372 = add nsw i32 %3360, %3371
  %3373 = ashr i32 %3372, 1
  %3374 = sub nsw i32 %3349, %3373
  %3375 = load i32** %d, align 8
  %3376 = getelementptr inbounds i32* %3375, i32 1
  store i32* %3376, i32** %d, align 8
  store i32 %3374, i32* %3375, align 4
  %3377 = load i16* %sy0, align 2
  %3378 = sext i16 %3377 to i32
  %3379 = add nsw i32 %3378, 12
  %3380 = trunc i32 %3379 to i16
  store i16 %3380, i16* %sy, align 2
  %3381 = load i16* %ry0, align 2
  %3382 = sext i16 %3381 to i32
  %3383 = add nsw i32 %3382, 12
  %3384 = trunc i32 %3383 to i16
  store i16 %3384, i16* %ry, align 2
  %3385 = load i16* %y0, align 2
  %3386 = sext i16 %3385 to i32
  %3387 = add nsw i32 %3386, 3
  %3388 = sext i32 %3387 to i64
  %3389 = load i16*** %1, align 8
  %3390 = getelementptr inbounds i16** %3389, i64 %3388
  %3391 = load i16** %3390, align 8
  store i16* %3391, i16** %orig_line, align 8
  %3392 = load i16* %x0, align 2
  %3393 = sext i16 %3392 to i64
  %3394 = load i16** %orig_line, align 8
  %3395 = getelementptr inbounds i16* %3394, i64 %3393
  %3396 = load i16* %3395, align 2
  %3397 = zext i16 %3396 to i32
  %3398 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3399 = load i16*** %ref1_pic, align 8
  %3400 = load i16* %sy, align 2
  %3401 = sext i16 %3400 to i32
  %3402 = load i16* %sx0, align 2
  %3403 = sext i16 %3402 to i32
  %3404 = load i32* %img_height, align 4
  %3405 = load i32* %img_width, align 4
  %3406 = call zeroext i16 %3398(i16** %3399, i32 %3401, i32 %3403, i32 %3404, i32 %3405)
  %3407 = zext i16 %3406 to i32
  %3408 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3409 = load i16*** %ref2_pic, align 8
  %3410 = load i16* %ry, align 2
  %3411 = sext i16 %3410 to i32
  %3412 = load i16* %rx0, align 2
  %3413 = sext i16 %3412 to i32
  %3414 = load i32* %img_height, align 4
  %3415 = load i32* %img_width, align 4
  %3416 = call zeroext i16 %3408(i16** %3409, i32 %3411, i32 %3413, i32 %3414, i32 %3415)
  %3417 = zext i16 %3416 to i32
  %3418 = add nsw i32 %3407, %3417
  %3419 = ashr i32 %3418, 1
  %3420 = sub nsw i32 %3397, %3419
  %3421 = load i32** %d, align 8
  %3422 = getelementptr inbounds i32* %3421, i32 1
  store i32* %3422, i32** %d, align 8
  store i32 %3420, i32* %3421, align 4
  %3423 = load i16* %x0, align 2
  %3424 = sext i16 %3423 to i32
  %3425 = add nsw i32 %3424, 1
  %3426 = sext i32 %3425 to i64
  %3427 = load i16** %orig_line, align 8
  %3428 = getelementptr inbounds i16* %3427, i64 %3426
  %3429 = load i16* %3428, align 2
  %3430 = zext i16 %3429 to i32
  %3431 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3432 = load i16*** %ref1_pic, align 8
  %3433 = load i16* %sy, align 2
  %3434 = sext i16 %3433 to i32
  %3435 = load i16* %sx0, align 2
  %3436 = sext i16 %3435 to i32
  %3437 = add nsw i32 %3436, 4
  %3438 = load i32* %img_height, align 4
  %3439 = load i32* %img_width, align 4
  %3440 = call zeroext i16 %3431(i16** %3432, i32 %3434, i32 %3437, i32 %3438, i32 %3439)
  %3441 = zext i16 %3440 to i32
  %3442 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3443 = load i16*** %ref2_pic, align 8
  %3444 = load i16* %ry, align 2
  %3445 = sext i16 %3444 to i32
  %3446 = load i16* %rx0, align 2
  %3447 = sext i16 %3446 to i32
  %3448 = add nsw i32 %3447, 4
  %3449 = load i32* %img_height, align 4
  %3450 = load i32* %img_width, align 4
  %3451 = call zeroext i16 %3442(i16** %3443, i32 %3445, i32 %3448, i32 %3449, i32 %3450)
  %3452 = zext i16 %3451 to i32
  %3453 = add nsw i32 %3441, %3452
  %3454 = ashr i32 %3453, 1
  %3455 = sub nsw i32 %3430, %3454
  %3456 = load i32** %d, align 8
  %3457 = getelementptr inbounds i32* %3456, i32 1
  store i32* %3457, i32** %d, align 8
  store i32 %3455, i32* %3456, align 4
  %3458 = load i16* %x0, align 2
  %3459 = sext i16 %3458 to i32
  %3460 = add nsw i32 %3459, 2
  %3461 = sext i32 %3460 to i64
  %3462 = load i16** %orig_line, align 8
  %3463 = getelementptr inbounds i16* %3462, i64 %3461
  %3464 = load i16* %3463, align 2
  %3465 = zext i16 %3464 to i32
  %3466 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3467 = load i16*** %ref1_pic, align 8
  %3468 = load i16* %sy, align 2
  %3469 = sext i16 %3468 to i32
  %3470 = load i16* %sx0, align 2
  %3471 = sext i16 %3470 to i32
  %3472 = add nsw i32 %3471, 8
  %3473 = load i32* %img_height, align 4
  %3474 = load i32* %img_width, align 4
  %3475 = call zeroext i16 %3466(i16** %3467, i32 %3469, i32 %3472, i32 %3473, i32 %3474)
  %3476 = zext i16 %3475 to i32
  %3477 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3478 = load i16*** %ref2_pic, align 8
  %3479 = load i16* %ry, align 2
  %3480 = sext i16 %3479 to i32
  %3481 = load i16* %rx0, align 2
  %3482 = sext i16 %3481 to i32
  %3483 = add nsw i32 %3482, 8
  %3484 = load i32* %img_height, align 4
  %3485 = load i32* %img_width, align 4
  %3486 = call zeroext i16 %3477(i16** %3478, i32 %3480, i32 %3483, i32 %3484, i32 %3485)
  %3487 = zext i16 %3486 to i32
  %3488 = add nsw i32 %3476, %3487
  %3489 = ashr i32 %3488, 1
  %3490 = sub nsw i32 %3465, %3489
  %3491 = load i32** %d, align 8
  %3492 = getelementptr inbounds i32* %3491, i32 1
  store i32* %3492, i32** %d, align 8
  store i32 %3490, i32* %3491, align 4
  %3493 = load i16* %x0, align 2
  %3494 = sext i16 %3493 to i32
  %3495 = add nsw i32 %3494, 3
  %3496 = sext i32 %3495 to i64
  %3497 = load i16** %orig_line, align 8
  %3498 = getelementptr inbounds i16* %3497, i64 %3496
  %3499 = load i16* %3498, align 2
  %3500 = zext i16 %3499 to i32
  %3501 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3502 = load i16*** %ref1_pic, align 8
  %3503 = load i16* %sy, align 2
  %3504 = sext i16 %3503 to i32
  %3505 = load i16* %sx0, align 2
  %3506 = sext i16 %3505 to i32
  %3507 = add nsw i32 %3506, 12
  %3508 = load i32* %img_height, align 4
  %3509 = load i32* %img_width, align 4
  %3510 = call zeroext i16 %3501(i16** %3502, i32 %3504, i32 %3507, i32 %3508, i32 %3509)
  %3511 = zext i16 %3510 to i32
  %3512 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3513 = load i16*** %ref2_pic, align 8
  %3514 = load i16* %ry, align 2
  %3515 = sext i16 %3514 to i32
  %3516 = load i16* %rx0, align 2
  %3517 = sext i16 %3516 to i32
  %3518 = add nsw i32 %3517, 12
  %3519 = load i32* %img_height, align 4
  %3520 = load i32* %img_width, align 4
  %3521 = call zeroext i16 %3512(i16** %3513, i32 %3515, i32 %3518, i32 %3519, i32 %3520)
  %3522 = zext i16 %3521 to i32
  %3523 = add nsw i32 %3511, %3522
  %3524 = ashr i32 %3523, 1
  %3525 = sub nsw i32 %3500, %3524
  %3526 = load i32** %d, align 8
  store i32 %3525, i32* %3526, align 4
  %3527 = load %struct.InputParameters** @input, align 8
  %3528 = getelementptr inbounds %struct.InputParameters* %3527, i32 0, i32 123
  %3529 = load i32* %3528, align 4
  %3530 = icmp ne i32 %3529, 0
  br i1 %3530, label %3544, label %3531

; <label>:3531                                    ; preds = %2911
  %3532 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  %3533 = load i32* %halfpelhadamard, align 4
  %3534 = call i32 @SATD(i32* %3532, i32 %3533)
  %3535 = load i16* %mcost, align 2
  %3536 = sext i16 %3535 to i32
  %3537 = add nsw i32 %3536, %3534
  %3538 = trunc i32 %3537 to i16
  store i16 %3538, i16* %mcost, align 2
  %3539 = sext i16 %3538 to i32
  %3540 = load i32* %15, align 4
  %3541 = icmp sgt i32 %3539, %3540
  br i1 %3541, label %3542, label %3543

; <label>:3542                                    ; preds = %3531
  store i16 1, i16* %abort_search, align 2
  br label %3585

; <label>:3543                                    ; preds = %3531
  br label %3579

; <label>:3544                                    ; preds = %2911
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %3545

; <label>:3545                                    ; preds = %3575, %3544
  %3546 = load i32* %j, align 4
  %3547 = icmp slt i32 %3546, 4
  br i1 %3547, label %3548, label %3578

; <label>:3548                                    ; preds = %3545
  store i32 0, i32* %i, align 4
  br label %3549

; <label>:3549                                    ; preds = %3569, %3548
  %3550 = load i32* %i, align 4
  %3551 = icmp slt i32 %3550, 4
  br i1 %3551, label %3552, label %3574

; <label>:3552                                    ; preds = %3549
  %3553 = load i32* %k, align 4
  %3554 = sext i32 %3553 to i64
  %3555 = getelementptr inbounds [16 x i32]* %diff, i32 0, i64 %3554
  %3556 = load i32* %3555, align 4
  %3557 = load i16* %x0, align 2
  %3558 = sext i16 %3557 to i32
  %3559 = load i32* %i, align 4
  %3560 = add nsw i32 %3558, %3559
  %3561 = sext i32 %3560 to i64
  %3562 = load i16* %y0, align 2
  %3563 = sext i16 %3562 to i32
  %3564 = load i32* %j, align 4
  %3565 = add nsw i32 %3563, %3564
  %3566 = sext i32 %3565 to i64
  %3567 = getelementptr inbounds [16 x [16 x i32]]* %curr_diff, i32 0, i64 %3566
  %3568 = getelementptr inbounds [16 x i32]* %3567, i32 0, i64 %3561
  store i32 %3556, i32* %3568, align 4
  br label %3569

; <label>:3569                                    ; preds = %3552
  %3570 = load i32* %i, align 4
  %3571 = add nsw i32 %3570, 1
  store i32 %3571, i32* %i, align 4
  %3572 = load i32* %k, align 4
  %3573 = add nsw i32 %3572, 1
  store i32 %3573, i32* %k, align 4
  br label %3549

; <label>:3574                                    ; preds = %3549
  br label %3575

; <label>:3575                                    ; preds = %3574
  %3576 = load i32* %j, align 4
  %3577 = add nsw i32 %3576, 1
  store i32 %3577, i32* %j, align 4
  br label %3545

; <label>:3578                                    ; preds = %3545
  br label %3579

; <label>:3579                                    ; preds = %3578, %3543
  br label %3580

; <label>:3580                                    ; preds = %3579
  %3581 = load i16* %x0, align 2
  %3582 = sext i16 %3581 to i32
  %3583 = add nsw i32 %3582, 4
  %3584 = trunc i32 %3583 to i16
  store i16 %3584, i16* %x0, align 2
  br label %2905

; <label>:3585                                    ; preds = %3542, %2905
  br label %3586

; <label>:3586                                    ; preds = %3585, %2903
  br label %3587

; <label>:3587                                    ; preds = %3586
  %3588 = load i16* %y0, align 2
  %3589 = sext i16 %3588 to i32
  %3590 = add nsw i32 %3589, 4
  %3591 = trunc i32 %3590 to i16
  store i16 %3591, i16* %y0, align 2
  br label %492

; <label>:3592                                    ; preds = %502
  %3593 = load %struct.InputParameters** @input, align 8
  %3594 = getelementptr inbounds %struct.InputParameters* %3593, i32 0, i32 123
  %3595 = load i32* %3594, align 4
  %3596 = icmp ne i32 %3595, 0
  br i1 %3596, label %3597, label %3606

; <label>:3597                                    ; preds = %3592
  %3598 = getelementptr inbounds [16 x [16 x i32]]* %curr_diff, i32 0, i32 0
  %3599 = load i32* %halfpelhadamard, align 4
  %3600 = load i32* %6, align 4
  %3601 = call i32 @find_SATD([16 x i32]* %3598, i32 %3599, i32 %3600)
  %3602 = load i16* %mcost, align 2
  %3603 = sext i16 %3602 to i32
  %3604 = add nsw i32 %3603, %3601
  %3605 = trunc i32 %3604 to i16
  store i16 %3605, i16* %mcost, align 2
  br label %3606

; <label>:3606                                    ; preds = %3597, %3592
  %3607 = load i16* %mcost, align 2
  %3608 = sext i16 %3607 to i32
  %3609 = load i32* %15, align 4
  %3610 = icmp slt i32 %3608, %3609
  br i1 %3610, label %3611, label %3615

; <label>:3611                                    ; preds = %3606
  %3612 = load i16* %mcost, align 2
  %3613 = sext i16 %3612 to i32
  store i32 %3613, i32* %15, align 4
  %3614 = load i16* %pos, align 2
  store i16 %3614, i16* %best_pos, align 2
  br label %3615

; <label>:3615                                    ; preds = %3611, %3606
  br label %3616

; <label>:3616                                    ; preds = %3615
  %3617 = load i16* %pos, align 2
  %3618 = add i16 %3617, 1
  store i16 %3618, i16* %pos, align 2
  br label %434

; <label>:3619                                    ; preds = %434
  %3620 = load i16* %best_pos, align 2
  %3621 = icmp ne i16 %3620, 0
  br i1 %3621, label %3622, label %3645

; <label>:3622                                    ; preds = %3619
  %3623 = load i16* %best_pos, align 2
  %3624 = sext i16 %3623 to i64
  %3625 = load i32** @spiral_search_x, align 8
  %3626 = getelementptr inbounds i32* %3625, i64 %3624
  %3627 = load i32* %3626, align 4
  %3628 = shl i32 %3627, 1
  %3629 = load i16** %9, align 8
  %3630 = load i16* %3629, align 2
  %3631 = sext i16 %3630 to i32
  %3632 = add nsw i32 %3631, %3628
  %3633 = trunc i32 %3632 to i16
  store i16 %3633, i16* %3629, align 2
  %3634 = load i16* %best_pos, align 2
  %3635 = sext i16 %3634 to i64
  %3636 = load i32** @spiral_search_y, align 8
  %3637 = getelementptr inbounds i32* %3636, i64 %3635
  %3638 = load i32* %3637, align 4
  %3639 = shl i32 %3638, 1
  %3640 = load i16** %10, align 8
  %3641 = load i16* %3640, align 2
  %3642 = sext i16 %3641 to i32
  %3643 = add nsw i32 %3642, %3639
  %3644 = trunc i32 %3643 to i16
  store i16 %3644, i16* %3640, align 2
  br label %3645

; <label>:3645                                    ; preds = %3622, %3619
  %3646 = load %struct.InputParameters** @input, align 8
  %3647 = getelementptr inbounds %struct.InputParameters* %3646, i32 0, i32 7
  %3648 = load i32* %3647, align 4
  %3649 = icmp ne i32 %3648, 0
  br i1 %3649, label %3650, label %3651

; <label>:3650                                    ; preds = %3645
  store i32 2147483647, i32* %15, align 4
  br label %3651

; <label>:3651                                    ; preds = %3650, %3645
  %3652 = load i16* %pic4_pix_x, align 2
  %3653 = sext i16 %3652 to i32
  %3654 = load i16** %9, align 8
  %3655 = load i16* %3654, align 2
  %3656 = sext i16 %3655 to i32
  %3657 = add nsw i32 %3653, %3656
  %3658 = icmp sgt i32 %3657, 1
  br i1 %3658, label %3659, label %3690

; <label>:3659                                    ; preds = %3651
  %3660 = load i16* %pic4_pix_x, align 2
  %3661 = sext i16 %3660 to i32
  %3662 = load i16** %9, align 8
  %3663 = load i16* %3662, align 2
  %3664 = sext i16 %3663 to i32
  %3665 = add nsw i32 %3661, %3664
  %3666 = load i16* %max_pos_x4, align 2
  %3667 = sext i16 %3666 to i32
  %3668 = sub nsw i32 %3667, 1
  %3669 = icmp slt i32 %3665, %3668
  br i1 %3669, label %3670, label %3690

; <label>:3670                                    ; preds = %3659
  %3671 = load i16* %pic4_pix_y, align 2
  %3672 = sext i16 %3671 to i32
  %3673 = load i16** %10, align 8
  %3674 = load i16* %3673, align 2
  %3675 = sext i16 %3674 to i32
  %3676 = add nsw i32 %3672, %3675
  %3677 = icmp sgt i32 %3676, 1
  br i1 %3677, label %3678, label %3690

; <label>:3678                                    ; preds = %3670
  %3679 = load i16* %pic4_pix_y, align 2
  %3680 = sext i16 %3679 to i32
  %3681 = load i16** %10, align 8
  %3682 = load i16* %3681, align 2
  %3683 = sext i16 %3682 to i32
  %3684 = add nsw i32 %3680, %3683
  %3685 = load i16* %max_pos_y4, align 2
  %3686 = sext i16 %3685 to i32
  %3687 = sub nsw i32 %3686, 1
  %3688 = icmp slt i32 %3684, %3687
  br i1 %3688, label %3689, label %3690

; <label>:3689                                    ; preds = %3678
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %3691

; <label>:3690                                    ; preds = %3678, %3670, %3659, %3651
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %3691

; <label>:3691                                    ; preds = %3690, %3689
  store i16 0, i16* %best_pos, align 2
  %3692 = load i32* %qpelstart, align 4
  %3693 = trunc i32 %3692 to i16
  store i16 %3693, i16* %pos, align 2
  br label %3694

; <label>:3694                                    ; preds = %6880, %3691
  %3695 = load i16* %pos, align 2
  %3696 = sext i16 %3695 to i32
  %3697 = load i32* %14, align 4
  %3698 = icmp slt i32 %3696, %3697
  br i1 %3698, label %3699, label %6883

; <label>:3699                                    ; preds = %3694
  %3700 = load i16** %9, align 8
  %3701 = load i16* %3700, align 2
  %3702 = sext i16 %3701 to i32
  %3703 = load i16* %pos, align 2
  %3704 = sext i16 %3703 to i64
  %3705 = load i32** @spiral_search_x, align 8
  %3706 = getelementptr inbounds i32* %3705, i64 %3704
  %3707 = load i32* %3706, align 4
  %3708 = add nsw i32 %3702, %3707
  %3709 = trunc i32 %3708 to i16
  store i16 %3709, i16* %cand_mv_x, align 2
  %3710 = load i16** %10, align 8
  %3711 = load i16* %3710, align 2
  %3712 = sext i16 %3711 to i32
  %3713 = load i16* %pos, align 2
  %3714 = sext i16 %3713 to i64
  %3715 = load i32** @spiral_search_y, align 8
  %3716 = getelementptr inbounds i32* %3715, i64 %3714
  %3717 = load i32* %3716, align 4
  %3718 = add nsw i32 %3712, %3717
  %3719 = trunc i32 %3718 to i16
  store i16 %3719, i16* %cand_mv_y, align 2
  %3720 = load i32* %lambda_factor, align 4
  %3721 = load i16* %cand_mv_x, align 2
  %3722 = sext i16 %3721 to i32
  %3723 = load i16* %mv_shift, align 2
  %3724 = sext i16 %3723 to i32
  %3725 = shl i32 %3722, %3724
  %3726 = load i16* %7, align 2
  %3727 = sext i16 %3726 to i32
  %3728 = sub nsw i32 %3725, %3727
  %3729 = sext i32 %3728 to i64
  %3730 = load i32** @mvbits, align 8
  %3731 = getelementptr inbounds i32* %3730, i64 %3729
  %3732 = load i32* %3731, align 4
  %3733 = load i16* %cand_mv_y, align 2
  %3734 = sext i16 %3733 to i32
  %3735 = load i16* %mv_shift, align 2
  %3736 = sext i16 %3735 to i32
  %3737 = shl i32 %3734, %3736
  %3738 = load i16* %8, align 2
  %3739 = sext i16 %3738 to i32
  %3740 = sub nsw i32 %3737, %3739
  %3741 = sext i32 %3740 to i64
  %3742 = load i32** @mvbits, align 8
  %3743 = getelementptr inbounds i32* %3742, i64 %3741
  %3744 = load i32* %3743, align 4
  %3745 = add nsw i32 %3732, %3744
  %3746 = mul nsw i32 %3720, %3745
  %3747 = ashr i32 %3746, 16
  %3748 = trunc i32 %3747 to i16
  store i16 %3748, i16* %mcost, align 2
  store i16 0, i16* %y0, align 2
  store i16 0, i16* %abort_search, align 2
  br label %3749

; <label>:3749                                    ; preds = %6849, %3699
  %3750 = load i16* %y0, align 2
  %3751 = sext i16 %3750 to i32
  %3752 = load i16* %blocksize_y, align 2
  %3753 = sext i16 %3752 to i32
  %3754 = icmp slt i32 %3751, %3753
  br i1 %3754, label %3755, label %3759

; <label>:3755                                    ; preds = %3749
  %3756 = load i16* %abort_search, align 2
  %3757 = icmp ne i16 %3756, 0
  %3758 = xor i1 %3757, true
  br label %3759

; <label>:3759                                    ; preds = %3755, %3749
  %3760 = phi i1 [ false, %3749 ], [ %3758, %3755 ]
  br i1 %3760, label %3761, label %6854

; <label>:3761                                    ; preds = %3759
  %3762 = load i32* %5, align 4
  %3763 = load i16* %y0, align 2
  %3764 = sext i16 %3763 to i32
  %3765 = add nsw i32 %3762, %3764
  %3766 = shl i32 %3765, 2
  %3767 = load i16** %12, align 8
  %3768 = load i16* %3767, align 2
  %3769 = sext i16 %3768 to i32
  %3770 = add nsw i32 %3766, %3769
  %3771 = trunc i32 %3770 to i16
  store i16 %3771, i16* %sy0, align 2
  %3772 = load i32* %5, align 4
  %3773 = load i16* %y0, align 2
  %3774 = sext i16 %3773 to i32
  %3775 = add nsw i32 %3772, %3774
  %3776 = shl i32 %3775, 2
  %3777 = load i16* %cand_mv_y, align 2
  %3778 = sext i16 %3777 to i32
  %3779 = add nsw i32 %3776, %3778
  %3780 = trunc i32 %3779 to i16
  store i16 %3780, i16* %ry0, align 2
  %3781 = load i16* %apply_weights, align 2
  %3782 = icmp ne i16 %3781, 0
  br i1 %3782, label %3783, label %6164

; <label>:3783                                    ; preds = %3761
  store i16 0, i16* %x0, align 2
  br label %3784

; <label>:3784                                    ; preds = %6158, %3783
  %3785 = load i16* %x0, align 2
  %3786 = sext i16 %3785 to i32
  %3787 = load i16* %blocksize_x, align 2
  %3788 = sext i16 %3787 to i32
  %3789 = icmp slt i32 %3786, %3788
  br i1 %3789, label %3790, label %6163

; <label>:3790                                    ; preds = %3784
  %3791 = load i16* %sy0, align 2
  store i16 %3791, i16* %sy, align 2
  %3792 = load i32* %4, align 4
  %3793 = load i16* %x0, align 2
  %3794 = sext i16 %3793 to i32
  %3795 = add nsw i32 %3792, %3794
  %3796 = shl i32 %3795, 2
  %3797 = load i16** %11, align 8
  %3798 = load i16* %3797, align 2
  %3799 = sext i16 %3798 to i32
  %3800 = add nsw i32 %3796, %3799
  %3801 = trunc i32 %3800 to i16
  store i16 %3801, i16* %sx0, align 2
  %3802 = load i32* %4, align 4
  %3803 = load i16* %x0, align 2
  %3804 = sext i16 %3803 to i32
  %3805 = add nsw i32 %3802, %3804
  %3806 = shl i32 %3805, 2
  %3807 = load i16* %cand_mv_x, align 2
  %3808 = sext i16 %3807 to i32
  %3809 = add nsw i32 %3806, %3808
  %3810 = trunc i32 %3809 to i16
  store i16 %3810, i16* %rx0, align 2
  %3811 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  store i32* %3811, i32** %d, align 8
  %3812 = load i16* %sy0, align 2
  store i16 %3812, i16* %sy, align 2
  %3813 = load i16* %y0, align 2
  %3814 = sext i16 %3813 to i64
  %3815 = load i16*** %1, align 8
  %3816 = getelementptr inbounds i16** %3815, i64 %3814
  %3817 = load i16** %3816, align 8
  store i16* %3817, i16** %orig_line, align 8
  %3818 = load i16* %ry0, align 2
  store i16 %3818, i16* %ry, align 2
  %3819 = load i16* %weightSpic, align 2
  %3820 = sext i16 %3819 to i32
  %3821 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3822 = load i16*** %ref1_pic, align 8
  %3823 = load i16* %sy, align 2
  %3824 = sext i16 %3823 to i32
  %3825 = load i16* %sx0, align 2
  %3826 = sext i16 %3825 to i32
  %3827 = load i32* %img_height, align 4
  %3828 = load i32* %img_width, align 4
  %3829 = call zeroext i16 %3821(i16** %3822, i32 %3824, i32 %3826, i32 %3827, i32 %3828)
  %3830 = zext i16 %3829 to i32
  %3831 = mul nsw i32 %3820, %3830
  %3832 = load i16* %weightRpic, align 2
  %3833 = sext i16 %3832 to i32
  %3834 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3835 = load i16*** %ref2_pic, align 8
  %3836 = load i16* %ry, align 2
  %3837 = sext i16 %3836 to i32
  %3838 = load i16* %rx0, align 2
  %3839 = sext i16 %3838 to i32
  %3840 = load i32* %img_height, align 4
  %3841 = load i32* %img_width, align 4
  %3842 = call zeroext i16 %3834(i16** %3835, i32 %3837, i32 %3839, i32 %3840, i32 %3841)
  %3843 = zext i16 %3842 to i32
  %3844 = mul nsw i32 %3833, %3843
  %3845 = add nsw i32 %3831, %3844
  %3846 = load i32* @wp_luma_round, align 4
  %3847 = mul nsw i32 2, %3846
  %3848 = add nsw i32 %3845, %3847
  %3849 = load i32* @luma_log_weight_denom, align 4
  %3850 = add nsw i32 %3849, 1
  %3851 = ashr i32 %3848, %3850
  %3852 = load i16* %offsetBi, align 2
  %3853 = sext i16 %3852 to i32
  %3854 = add nsw i32 %3851, %3853
  %3855 = icmp slt i32 %3854, 0
  br i1 %3855, label %3856, label %3857

; <label>:3856                                    ; preds = %3790
  br label %3941

; <label>:3857                                    ; preds = %3790
  %3858 = load i16* %weightSpic, align 2
  %3859 = sext i16 %3858 to i32
  %3860 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3861 = load i16*** %ref1_pic, align 8
  %3862 = load i16* %sy, align 2
  %3863 = sext i16 %3862 to i32
  %3864 = load i16* %sx0, align 2
  %3865 = sext i16 %3864 to i32
  %3866 = load i32* %img_height, align 4
  %3867 = load i32* %img_width, align 4
  %3868 = call zeroext i16 %3860(i16** %3861, i32 %3863, i32 %3865, i32 %3866, i32 %3867)
  %3869 = zext i16 %3868 to i32
  %3870 = mul nsw i32 %3859, %3869
  %3871 = load i16* %weightRpic, align 2
  %3872 = sext i16 %3871 to i32
  %3873 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3874 = load i16*** %ref2_pic, align 8
  %3875 = load i16* %ry, align 2
  %3876 = sext i16 %3875 to i32
  %3877 = load i16* %rx0, align 2
  %3878 = sext i16 %3877 to i32
  %3879 = load i32* %img_height, align 4
  %3880 = load i32* %img_width, align 4
  %3881 = call zeroext i16 %3873(i16** %3874, i32 %3876, i32 %3878, i32 %3879, i32 %3880)
  %3882 = zext i16 %3881 to i32
  %3883 = mul nsw i32 %3872, %3882
  %3884 = add nsw i32 %3870, %3883
  %3885 = load i32* @wp_luma_round, align 4
  %3886 = mul nsw i32 2, %3885
  %3887 = add nsw i32 %3884, %3886
  %3888 = load i32* @luma_log_weight_denom, align 4
  %3889 = add nsw i32 %3888, 1
  %3890 = ashr i32 %3887, %3889
  %3891 = load i16* %offsetBi, align 2
  %3892 = sext i16 %3891 to i32
  %3893 = add nsw i32 %3890, %3892
  %3894 = load %struct.ImageParameters** @img, align 8
  %3895 = getelementptr inbounds %struct.ImageParameters* %3894, i32 0, i32 155
  %3896 = load i32* %3895, align 4
  %3897 = icmp sgt i32 %3893, %3896
  br i1 %3897, label %3898, label %3902

; <label>:3898                                    ; preds = %3857
  %3899 = load %struct.ImageParameters** @img, align 8
  %3900 = getelementptr inbounds %struct.ImageParameters* %3899, i32 0, i32 155
  %3901 = load i32* %3900, align 4
  br label %3939

; <label>:3902                                    ; preds = %3857
  %3903 = load i16* %weightSpic, align 2
  %3904 = sext i16 %3903 to i32
  %3905 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3906 = load i16*** %ref1_pic, align 8
  %3907 = load i16* %sy, align 2
  %3908 = sext i16 %3907 to i32
  %3909 = load i16* %sx0, align 2
  %3910 = sext i16 %3909 to i32
  %3911 = load i32* %img_height, align 4
  %3912 = load i32* %img_width, align 4
  %3913 = call zeroext i16 %3905(i16** %3906, i32 %3908, i32 %3910, i32 %3911, i32 %3912)
  %3914 = zext i16 %3913 to i32
  %3915 = mul nsw i32 %3904, %3914
  %3916 = load i16* %weightRpic, align 2
  %3917 = sext i16 %3916 to i32
  %3918 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3919 = load i16*** %ref2_pic, align 8
  %3920 = load i16* %ry, align 2
  %3921 = sext i16 %3920 to i32
  %3922 = load i16* %rx0, align 2
  %3923 = sext i16 %3922 to i32
  %3924 = load i32* %img_height, align 4
  %3925 = load i32* %img_width, align 4
  %3926 = call zeroext i16 %3918(i16** %3919, i32 %3921, i32 %3923, i32 %3924, i32 %3925)
  %3927 = zext i16 %3926 to i32
  %3928 = mul nsw i32 %3917, %3927
  %3929 = add nsw i32 %3915, %3928
  %3930 = load i32* @wp_luma_round, align 4
  %3931 = mul nsw i32 2, %3930
  %3932 = add nsw i32 %3929, %3931
  %3933 = load i32* @luma_log_weight_denom, align 4
  %3934 = add nsw i32 %3933, 1
  %3935 = ashr i32 %3932, %3934
  %3936 = load i16* %offsetBi, align 2
  %3937 = sext i16 %3936 to i32
  %3938 = add nsw i32 %3935, %3937
  br label %3939

; <label>:3939                                    ; preds = %3902, %3898
  %3940 = phi i32 [ %3901, %3898 ], [ %3938, %3902 ]
  br label %3941

; <label>:3941                                    ; preds = %3939, %3856
  %3942 = phi i32 [ 0, %3856 ], [ %3940, %3939 ]
  store i32 %3942, i32* %weightedpel, align 4
  %3943 = load i16* %x0, align 2
  %3944 = sext i16 %3943 to i64
  %3945 = load i16** %orig_line, align 8
  %3946 = getelementptr inbounds i16* %3945, i64 %3944
  %3947 = load i16* %3946, align 2
  %3948 = zext i16 %3947 to i32
  %3949 = load i32* %weightedpel, align 4
  %3950 = sub nsw i32 %3948, %3949
  %3951 = load i32** %d, align 8
  %3952 = getelementptr inbounds i32* %3951, i32 1
  store i32* %3952, i32** %d, align 8
  store i32 %3950, i32* %3951, align 4
  %3953 = load i16* %weightSpic, align 2
  %3954 = sext i16 %3953 to i32
  %3955 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3956 = load i16*** %ref1_pic, align 8
  %3957 = load i16* %sy, align 2
  %3958 = sext i16 %3957 to i32
  %3959 = load i16* %sx0, align 2
  %3960 = sext i16 %3959 to i32
  %3961 = add nsw i32 %3960, 4
  %3962 = load i32* %img_height, align 4
  %3963 = load i32* %img_width, align 4
  %3964 = call zeroext i16 %3955(i16** %3956, i32 %3958, i32 %3961, i32 %3962, i32 %3963)
  %3965 = zext i16 %3964 to i32
  %3966 = mul nsw i32 %3954, %3965
  %3967 = load i16* %weightRpic, align 2
  %3968 = sext i16 %3967 to i32
  %3969 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %3970 = load i16*** %ref2_pic, align 8
  %3971 = load i16* %ry, align 2
  %3972 = sext i16 %3971 to i32
  %3973 = load i16* %rx0, align 2
  %3974 = sext i16 %3973 to i32
  %3975 = add nsw i32 %3974, 4
  %3976 = load i32* %img_height, align 4
  %3977 = load i32* %img_width, align 4
  %3978 = call zeroext i16 %3969(i16** %3970, i32 %3972, i32 %3975, i32 %3976, i32 %3977)
  %3979 = zext i16 %3978 to i32
  %3980 = mul nsw i32 %3968, %3979
  %3981 = add nsw i32 %3966, %3980
  %3982 = load i32* @wp_luma_round, align 4
  %3983 = mul nsw i32 2, %3982
  %3984 = add nsw i32 %3981, %3983
  %3985 = load i32* @luma_log_weight_denom, align 4
  %3986 = add nsw i32 %3985, 1
  %3987 = ashr i32 %3984, %3986
  %3988 = load i16* %offsetBi, align 2
  %3989 = sext i16 %3988 to i32
  %3990 = add nsw i32 %3987, %3989
  %3991 = icmp slt i32 %3990, 0
  br i1 %3991, label %3992, label %3993

; <label>:3992                                    ; preds = %3941
  br label %4081

; <label>:3993                                    ; preds = %3941
  %3994 = load i16* %weightSpic, align 2
  %3995 = sext i16 %3994 to i32
  %3996 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %3997 = load i16*** %ref1_pic, align 8
  %3998 = load i16* %sy, align 2
  %3999 = sext i16 %3998 to i32
  %4000 = load i16* %sx0, align 2
  %4001 = sext i16 %4000 to i32
  %4002 = add nsw i32 %4001, 4
  %4003 = load i32* %img_height, align 4
  %4004 = load i32* %img_width, align 4
  %4005 = call zeroext i16 %3996(i16** %3997, i32 %3999, i32 %4002, i32 %4003, i32 %4004)
  %4006 = zext i16 %4005 to i32
  %4007 = mul nsw i32 %3995, %4006
  %4008 = load i16* %weightRpic, align 2
  %4009 = sext i16 %4008 to i32
  %4010 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4011 = load i16*** %ref2_pic, align 8
  %4012 = load i16* %ry, align 2
  %4013 = sext i16 %4012 to i32
  %4014 = load i16* %rx0, align 2
  %4015 = sext i16 %4014 to i32
  %4016 = add nsw i32 %4015, 4
  %4017 = load i32* %img_height, align 4
  %4018 = load i32* %img_width, align 4
  %4019 = call zeroext i16 %4010(i16** %4011, i32 %4013, i32 %4016, i32 %4017, i32 %4018)
  %4020 = zext i16 %4019 to i32
  %4021 = mul nsw i32 %4009, %4020
  %4022 = add nsw i32 %4007, %4021
  %4023 = load i32* @wp_luma_round, align 4
  %4024 = mul nsw i32 2, %4023
  %4025 = add nsw i32 %4022, %4024
  %4026 = load i32* @luma_log_weight_denom, align 4
  %4027 = add nsw i32 %4026, 1
  %4028 = ashr i32 %4025, %4027
  %4029 = load i16* %offsetBi, align 2
  %4030 = sext i16 %4029 to i32
  %4031 = add nsw i32 %4028, %4030
  %4032 = load %struct.ImageParameters** @img, align 8
  %4033 = getelementptr inbounds %struct.ImageParameters* %4032, i32 0, i32 155
  %4034 = load i32* %4033, align 4
  %4035 = icmp sgt i32 %4031, %4034
  br i1 %4035, label %4036, label %4040

; <label>:4036                                    ; preds = %3993
  %4037 = load %struct.ImageParameters** @img, align 8
  %4038 = getelementptr inbounds %struct.ImageParameters* %4037, i32 0, i32 155
  %4039 = load i32* %4038, align 4
  br label %4079

; <label>:4040                                    ; preds = %3993
  %4041 = load i16* %weightSpic, align 2
  %4042 = sext i16 %4041 to i32
  %4043 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4044 = load i16*** %ref1_pic, align 8
  %4045 = load i16* %sy, align 2
  %4046 = sext i16 %4045 to i32
  %4047 = load i16* %sx0, align 2
  %4048 = sext i16 %4047 to i32
  %4049 = add nsw i32 %4048, 4
  %4050 = load i32* %img_height, align 4
  %4051 = load i32* %img_width, align 4
  %4052 = call zeroext i16 %4043(i16** %4044, i32 %4046, i32 %4049, i32 %4050, i32 %4051)
  %4053 = zext i16 %4052 to i32
  %4054 = mul nsw i32 %4042, %4053
  %4055 = load i16* %weightRpic, align 2
  %4056 = sext i16 %4055 to i32
  %4057 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4058 = load i16*** %ref2_pic, align 8
  %4059 = load i16* %ry, align 2
  %4060 = sext i16 %4059 to i32
  %4061 = load i16* %rx0, align 2
  %4062 = sext i16 %4061 to i32
  %4063 = add nsw i32 %4062, 4
  %4064 = load i32* %img_height, align 4
  %4065 = load i32* %img_width, align 4
  %4066 = call zeroext i16 %4057(i16** %4058, i32 %4060, i32 %4063, i32 %4064, i32 %4065)
  %4067 = zext i16 %4066 to i32
  %4068 = mul nsw i32 %4056, %4067
  %4069 = add nsw i32 %4054, %4068
  %4070 = load i32* @wp_luma_round, align 4
  %4071 = mul nsw i32 2, %4070
  %4072 = add nsw i32 %4069, %4071
  %4073 = load i32* @luma_log_weight_denom, align 4
  %4074 = add nsw i32 %4073, 1
  %4075 = ashr i32 %4072, %4074
  %4076 = load i16* %offsetBi, align 2
  %4077 = sext i16 %4076 to i32
  %4078 = add nsw i32 %4075, %4077
  br label %4079

; <label>:4079                                    ; preds = %4040, %4036
  %4080 = phi i32 [ %4039, %4036 ], [ %4078, %4040 ]
  br label %4081

; <label>:4081                                    ; preds = %4079, %3992
  %4082 = phi i32 [ 0, %3992 ], [ %4080, %4079 ]
  store i32 %4082, i32* %weightedpel, align 4
  %4083 = load i16* %x0, align 2
  %4084 = sext i16 %4083 to i32
  %4085 = add nsw i32 %4084, 1
  %4086 = sext i32 %4085 to i64
  %4087 = load i16** %orig_line, align 8
  %4088 = getelementptr inbounds i16* %4087, i64 %4086
  %4089 = load i16* %4088, align 2
  %4090 = zext i16 %4089 to i32
  %4091 = load i32* %weightedpel, align 4
  %4092 = sub nsw i32 %4090, %4091
  %4093 = load i32** %d, align 8
  %4094 = getelementptr inbounds i32* %4093, i32 1
  store i32* %4094, i32** %d, align 8
  store i32 %4092, i32* %4093, align 4
  %4095 = load i16* %weightSpic, align 2
  %4096 = sext i16 %4095 to i32
  %4097 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4098 = load i16*** %ref1_pic, align 8
  %4099 = load i16* %sy, align 2
  %4100 = sext i16 %4099 to i32
  %4101 = load i16* %sx0, align 2
  %4102 = sext i16 %4101 to i32
  %4103 = add nsw i32 %4102, 8
  %4104 = load i32* %img_height, align 4
  %4105 = load i32* %img_width, align 4
  %4106 = call zeroext i16 %4097(i16** %4098, i32 %4100, i32 %4103, i32 %4104, i32 %4105)
  %4107 = zext i16 %4106 to i32
  %4108 = mul nsw i32 %4096, %4107
  %4109 = load i16* %weightRpic, align 2
  %4110 = sext i16 %4109 to i32
  %4111 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4112 = load i16*** %ref2_pic, align 8
  %4113 = load i16* %ry, align 2
  %4114 = sext i16 %4113 to i32
  %4115 = load i16* %rx0, align 2
  %4116 = sext i16 %4115 to i32
  %4117 = add nsw i32 %4116, 8
  %4118 = load i32* %img_height, align 4
  %4119 = load i32* %img_width, align 4
  %4120 = call zeroext i16 %4111(i16** %4112, i32 %4114, i32 %4117, i32 %4118, i32 %4119)
  %4121 = zext i16 %4120 to i32
  %4122 = mul nsw i32 %4110, %4121
  %4123 = add nsw i32 %4108, %4122
  %4124 = load i32* @wp_luma_round, align 4
  %4125 = mul nsw i32 2, %4124
  %4126 = add nsw i32 %4123, %4125
  %4127 = load i32* @luma_log_weight_denom, align 4
  %4128 = add nsw i32 %4127, 1
  %4129 = ashr i32 %4126, %4128
  %4130 = load i16* %offsetBi, align 2
  %4131 = sext i16 %4130 to i32
  %4132 = add nsw i32 %4129, %4131
  %4133 = icmp slt i32 %4132, 0
  br i1 %4133, label %4134, label %4135

; <label>:4134                                    ; preds = %4081
  br label %4223

; <label>:4135                                    ; preds = %4081
  %4136 = load i16* %weightSpic, align 2
  %4137 = sext i16 %4136 to i32
  %4138 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4139 = load i16*** %ref1_pic, align 8
  %4140 = load i16* %sy, align 2
  %4141 = sext i16 %4140 to i32
  %4142 = load i16* %sx0, align 2
  %4143 = sext i16 %4142 to i32
  %4144 = add nsw i32 %4143, 8
  %4145 = load i32* %img_height, align 4
  %4146 = load i32* %img_width, align 4
  %4147 = call zeroext i16 %4138(i16** %4139, i32 %4141, i32 %4144, i32 %4145, i32 %4146)
  %4148 = zext i16 %4147 to i32
  %4149 = mul nsw i32 %4137, %4148
  %4150 = load i16* %weightRpic, align 2
  %4151 = sext i16 %4150 to i32
  %4152 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4153 = load i16*** %ref2_pic, align 8
  %4154 = load i16* %ry, align 2
  %4155 = sext i16 %4154 to i32
  %4156 = load i16* %rx0, align 2
  %4157 = sext i16 %4156 to i32
  %4158 = add nsw i32 %4157, 8
  %4159 = load i32* %img_height, align 4
  %4160 = load i32* %img_width, align 4
  %4161 = call zeroext i16 %4152(i16** %4153, i32 %4155, i32 %4158, i32 %4159, i32 %4160)
  %4162 = zext i16 %4161 to i32
  %4163 = mul nsw i32 %4151, %4162
  %4164 = add nsw i32 %4149, %4163
  %4165 = load i32* @wp_luma_round, align 4
  %4166 = mul nsw i32 2, %4165
  %4167 = add nsw i32 %4164, %4166
  %4168 = load i32* @luma_log_weight_denom, align 4
  %4169 = add nsw i32 %4168, 1
  %4170 = ashr i32 %4167, %4169
  %4171 = load i16* %offsetBi, align 2
  %4172 = sext i16 %4171 to i32
  %4173 = add nsw i32 %4170, %4172
  %4174 = load %struct.ImageParameters** @img, align 8
  %4175 = getelementptr inbounds %struct.ImageParameters* %4174, i32 0, i32 155
  %4176 = load i32* %4175, align 4
  %4177 = icmp sgt i32 %4173, %4176
  br i1 %4177, label %4178, label %4182

; <label>:4178                                    ; preds = %4135
  %4179 = load %struct.ImageParameters** @img, align 8
  %4180 = getelementptr inbounds %struct.ImageParameters* %4179, i32 0, i32 155
  %4181 = load i32* %4180, align 4
  br label %4221

; <label>:4182                                    ; preds = %4135
  %4183 = load i16* %weightSpic, align 2
  %4184 = sext i16 %4183 to i32
  %4185 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4186 = load i16*** %ref1_pic, align 8
  %4187 = load i16* %sy, align 2
  %4188 = sext i16 %4187 to i32
  %4189 = load i16* %sx0, align 2
  %4190 = sext i16 %4189 to i32
  %4191 = add nsw i32 %4190, 8
  %4192 = load i32* %img_height, align 4
  %4193 = load i32* %img_width, align 4
  %4194 = call zeroext i16 %4185(i16** %4186, i32 %4188, i32 %4191, i32 %4192, i32 %4193)
  %4195 = zext i16 %4194 to i32
  %4196 = mul nsw i32 %4184, %4195
  %4197 = load i16* %weightRpic, align 2
  %4198 = sext i16 %4197 to i32
  %4199 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4200 = load i16*** %ref2_pic, align 8
  %4201 = load i16* %ry, align 2
  %4202 = sext i16 %4201 to i32
  %4203 = load i16* %rx0, align 2
  %4204 = sext i16 %4203 to i32
  %4205 = add nsw i32 %4204, 8
  %4206 = load i32* %img_height, align 4
  %4207 = load i32* %img_width, align 4
  %4208 = call zeroext i16 %4199(i16** %4200, i32 %4202, i32 %4205, i32 %4206, i32 %4207)
  %4209 = zext i16 %4208 to i32
  %4210 = mul nsw i32 %4198, %4209
  %4211 = add nsw i32 %4196, %4210
  %4212 = load i32* @wp_luma_round, align 4
  %4213 = mul nsw i32 2, %4212
  %4214 = add nsw i32 %4211, %4213
  %4215 = load i32* @luma_log_weight_denom, align 4
  %4216 = add nsw i32 %4215, 1
  %4217 = ashr i32 %4214, %4216
  %4218 = load i16* %offsetBi, align 2
  %4219 = sext i16 %4218 to i32
  %4220 = add nsw i32 %4217, %4219
  br label %4221

; <label>:4221                                    ; preds = %4182, %4178
  %4222 = phi i32 [ %4181, %4178 ], [ %4220, %4182 ]
  br label %4223

; <label>:4223                                    ; preds = %4221, %4134
  %4224 = phi i32 [ 0, %4134 ], [ %4222, %4221 ]
  store i32 %4224, i32* %weightedpel, align 4
  %4225 = load i16* %x0, align 2
  %4226 = sext i16 %4225 to i32
  %4227 = add nsw i32 %4226, 2
  %4228 = sext i32 %4227 to i64
  %4229 = load i16** %orig_line, align 8
  %4230 = getelementptr inbounds i16* %4229, i64 %4228
  %4231 = load i16* %4230, align 2
  %4232 = zext i16 %4231 to i32
  %4233 = load i32* %weightedpel, align 4
  %4234 = sub nsw i32 %4232, %4233
  %4235 = load i32** %d, align 8
  %4236 = getelementptr inbounds i32* %4235, i32 1
  store i32* %4236, i32** %d, align 8
  store i32 %4234, i32* %4235, align 4
  %4237 = load i16* %weightSpic, align 2
  %4238 = sext i16 %4237 to i32
  %4239 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4240 = load i16*** %ref1_pic, align 8
  %4241 = load i16* %sy, align 2
  %4242 = sext i16 %4241 to i32
  %4243 = load i16* %sx0, align 2
  %4244 = sext i16 %4243 to i32
  %4245 = add nsw i32 %4244, 12
  %4246 = load i32* %img_height, align 4
  %4247 = load i32* %img_width, align 4
  %4248 = call zeroext i16 %4239(i16** %4240, i32 %4242, i32 %4245, i32 %4246, i32 %4247)
  %4249 = zext i16 %4248 to i32
  %4250 = mul nsw i32 %4238, %4249
  %4251 = load i16* %weightRpic, align 2
  %4252 = sext i16 %4251 to i32
  %4253 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4254 = load i16*** %ref2_pic, align 8
  %4255 = load i16* %ry, align 2
  %4256 = sext i16 %4255 to i32
  %4257 = load i16* %rx0, align 2
  %4258 = sext i16 %4257 to i32
  %4259 = add nsw i32 %4258, 12
  %4260 = load i32* %img_height, align 4
  %4261 = load i32* %img_width, align 4
  %4262 = call zeroext i16 %4253(i16** %4254, i32 %4256, i32 %4259, i32 %4260, i32 %4261)
  %4263 = zext i16 %4262 to i32
  %4264 = mul nsw i32 %4252, %4263
  %4265 = add nsw i32 %4250, %4264
  %4266 = load i32* @wp_luma_round, align 4
  %4267 = mul nsw i32 2, %4266
  %4268 = add nsw i32 %4265, %4267
  %4269 = load i32* @luma_log_weight_denom, align 4
  %4270 = add nsw i32 %4269, 1
  %4271 = ashr i32 %4268, %4270
  %4272 = load i16* %offsetBi, align 2
  %4273 = sext i16 %4272 to i32
  %4274 = add nsw i32 %4271, %4273
  %4275 = icmp slt i32 %4274, 0
  br i1 %4275, label %4276, label %4277

; <label>:4276                                    ; preds = %4223
  br label %4365

; <label>:4277                                    ; preds = %4223
  %4278 = load i16* %weightSpic, align 2
  %4279 = sext i16 %4278 to i32
  %4280 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4281 = load i16*** %ref1_pic, align 8
  %4282 = load i16* %sy, align 2
  %4283 = sext i16 %4282 to i32
  %4284 = load i16* %sx0, align 2
  %4285 = sext i16 %4284 to i32
  %4286 = add nsw i32 %4285, 12
  %4287 = load i32* %img_height, align 4
  %4288 = load i32* %img_width, align 4
  %4289 = call zeroext i16 %4280(i16** %4281, i32 %4283, i32 %4286, i32 %4287, i32 %4288)
  %4290 = zext i16 %4289 to i32
  %4291 = mul nsw i32 %4279, %4290
  %4292 = load i16* %weightRpic, align 2
  %4293 = sext i16 %4292 to i32
  %4294 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4295 = load i16*** %ref2_pic, align 8
  %4296 = load i16* %ry, align 2
  %4297 = sext i16 %4296 to i32
  %4298 = load i16* %rx0, align 2
  %4299 = sext i16 %4298 to i32
  %4300 = add nsw i32 %4299, 12
  %4301 = load i32* %img_height, align 4
  %4302 = load i32* %img_width, align 4
  %4303 = call zeroext i16 %4294(i16** %4295, i32 %4297, i32 %4300, i32 %4301, i32 %4302)
  %4304 = zext i16 %4303 to i32
  %4305 = mul nsw i32 %4293, %4304
  %4306 = add nsw i32 %4291, %4305
  %4307 = load i32* @wp_luma_round, align 4
  %4308 = mul nsw i32 2, %4307
  %4309 = add nsw i32 %4306, %4308
  %4310 = load i32* @luma_log_weight_denom, align 4
  %4311 = add nsw i32 %4310, 1
  %4312 = ashr i32 %4309, %4311
  %4313 = load i16* %offsetBi, align 2
  %4314 = sext i16 %4313 to i32
  %4315 = add nsw i32 %4312, %4314
  %4316 = load %struct.ImageParameters** @img, align 8
  %4317 = getelementptr inbounds %struct.ImageParameters* %4316, i32 0, i32 155
  %4318 = load i32* %4317, align 4
  %4319 = icmp sgt i32 %4315, %4318
  br i1 %4319, label %4320, label %4324

; <label>:4320                                    ; preds = %4277
  %4321 = load %struct.ImageParameters** @img, align 8
  %4322 = getelementptr inbounds %struct.ImageParameters* %4321, i32 0, i32 155
  %4323 = load i32* %4322, align 4
  br label %4363

; <label>:4324                                    ; preds = %4277
  %4325 = load i16* %weightSpic, align 2
  %4326 = sext i16 %4325 to i32
  %4327 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4328 = load i16*** %ref1_pic, align 8
  %4329 = load i16* %sy, align 2
  %4330 = sext i16 %4329 to i32
  %4331 = load i16* %sx0, align 2
  %4332 = sext i16 %4331 to i32
  %4333 = add nsw i32 %4332, 12
  %4334 = load i32* %img_height, align 4
  %4335 = load i32* %img_width, align 4
  %4336 = call zeroext i16 %4327(i16** %4328, i32 %4330, i32 %4333, i32 %4334, i32 %4335)
  %4337 = zext i16 %4336 to i32
  %4338 = mul nsw i32 %4326, %4337
  %4339 = load i16* %weightRpic, align 2
  %4340 = sext i16 %4339 to i32
  %4341 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4342 = load i16*** %ref2_pic, align 8
  %4343 = load i16* %ry, align 2
  %4344 = sext i16 %4343 to i32
  %4345 = load i16* %rx0, align 2
  %4346 = sext i16 %4345 to i32
  %4347 = add nsw i32 %4346, 12
  %4348 = load i32* %img_height, align 4
  %4349 = load i32* %img_width, align 4
  %4350 = call zeroext i16 %4341(i16** %4342, i32 %4344, i32 %4347, i32 %4348, i32 %4349)
  %4351 = zext i16 %4350 to i32
  %4352 = mul nsw i32 %4340, %4351
  %4353 = add nsw i32 %4338, %4352
  %4354 = load i32* @wp_luma_round, align 4
  %4355 = mul nsw i32 2, %4354
  %4356 = add nsw i32 %4353, %4355
  %4357 = load i32* @luma_log_weight_denom, align 4
  %4358 = add nsw i32 %4357, 1
  %4359 = ashr i32 %4356, %4358
  %4360 = load i16* %offsetBi, align 2
  %4361 = sext i16 %4360 to i32
  %4362 = add nsw i32 %4359, %4361
  br label %4363

; <label>:4363                                    ; preds = %4324, %4320
  %4364 = phi i32 [ %4323, %4320 ], [ %4362, %4324 ]
  br label %4365

; <label>:4365                                    ; preds = %4363, %4276
  %4366 = phi i32 [ 0, %4276 ], [ %4364, %4363 ]
  store i32 %4366, i32* %weightedpel, align 4
  %4367 = load i16* %x0, align 2
  %4368 = sext i16 %4367 to i32
  %4369 = add nsw i32 %4368, 3
  %4370 = sext i32 %4369 to i64
  %4371 = load i16** %orig_line, align 8
  %4372 = getelementptr inbounds i16* %4371, i64 %4370
  %4373 = load i16* %4372, align 2
  %4374 = zext i16 %4373 to i32
  %4375 = load i32* %weightedpel, align 4
  %4376 = sub nsw i32 %4374, %4375
  %4377 = load i32** %d, align 8
  %4378 = getelementptr inbounds i32* %4377, i32 1
  store i32* %4378, i32** %d, align 8
  store i32 %4376, i32* %4377, align 4
  %4379 = load i16* %sy0, align 2
  %4380 = sext i16 %4379 to i32
  %4381 = add nsw i32 %4380, 4
  %4382 = trunc i32 %4381 to i16
  store i16 %4382, i16* %sy, align 2
  %4383 = load i16* %y0, align 2
  %4384 = sext i16 %4383 to i32
  %4385 = add nsw i32 %4384, 1
  %4386 = sext i32 %4385 to i64
  %4387 = load i16*** %1, align 8
  %4388 = getelementptr inbounds i16** %4387, i64 %4386
  %4389 = load i16** %4388, align 8
  store i16* %4389, i16** %orig_line, align 8
  %4390 = load i16* %ry0, align 2
  %4391 = sext i16 %4390 to i32
  %4392 = add nsw i32 %4391, 4
  %4393 = trunc i32 %4392 to i16
  store i16 %4393, i16* %ry, align 2
  %4394 = load i16* %weightSpic, align 2
  %4395 = sext i16 %4394 to i32
  %4396 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4397 = load i16*** %ref1_pic, align 8
  %4398 = load i16* %sy, align 2
  %4399 = sext i16 %4398 to i32
  %4400 = load i16* %sx0, align 2
  %4401 = sext i16 %4400 to i32
  %4402 = load i32* %img_height, align 4
  %4403 = load i32* %img_width, align 4
  %4404 = call zeroext i16 %4396(i16** %4397, i32 %4399, i32 %4401, i32 %4402, i32 %4403)
  %4405 = zext i16 %4404 to i32
  %4406 = mul nsw i32 %4395, %4405
  %4407 = load i16* %weightRpic, align 2
  %4408 = sext i16 %4407 to i32
  %4409 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4410 = load i16*** %ref2_pic, align 8
  %4411 = load i16* %ry, align 2
  %4412 = sext i16 %4411 to i32
  %4413 = load i16* %rx0, align 2
  %4414 = sext i16 %4413 to i32
  %4415 = load i32* %img_height, align 4
  %4416 = load i32* %img_width, align 4
  %4417 = call zeroext i16 %4409(i16** %4410, i32 %4412, i32 %4414, i32 %4415, i32 %4416)
  %4418 = zext i16 %4417 to i32
  %4419 = mul nsw i32 %4408, %4418
  %4420 = add nsw i32 %4406, %4419
  %4421 = load i32* @wp_luma_round, align 4
  %4422 = mul nsw i32 2, %4421
  %4423 = add nsw i32 %4420, %4422
  %4424 = load i32* @luma_log_weight_denom, align 4
  %4425 = add nsw i32 %4424, 1
  %4426 = ashr i32 %4423, %4425
  %4427 = load i16* %offsetBi, align 2
  %4428 = sext i16 %4427 to i32
  %4429 = add nsw i32 %4426, %4428
  %4430 = icmp slt i32 %4429, 0
  br i1 %4430, label %4431, label %4432

; <label>:4431                                    ; preds = %4365
  br label %4516

; <label>:4432                                    ; preds = %4365
  %4433 = load i16* %weightSpic, align 2
  %4434 = sext i16 %4433 to i32
  %4435 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4436 = load i16*** %ref1_pic, align 8
  %4437 = load i16* %sy, align 2
  %4438 = sext i16 %4437 to i32
  %4439 = load i16* %sx0, align 2
  %4440 = sext i16 %4439 to i32
  %4441 = load i32* %img_height, align 4
  %4442 = load i32* %img_width, align 4
  %4443 = call zeroext i16 %4435(i16** %4436, i32 %4438, i32 %4440, i32 %4441, i32 %4442)
  %4444 = zext i16 %4443 to i32
  %4445 = mul nsw i32 %4434, %4444
  %4446 = load i16* %weightRpic, align 2
  %4447 = sext i16 %4446 to i32
  %4448 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4449 = load i16*** %ref2_pic, align 8
  %4450 = load i16* %ry, align 2
  %4451 = sext i16 %4450 to i32
  %4452 = load i16* %rx0, align 2
  %4453 = sext i16 %4452 to i32
  %4454 = load i32* %img_height, align 4
  %4455 = load i32* %img_width, align 4
  %4456 = call zeroext i16 %4448(i16** %4449, i32 %4451, i32 %4453, i32 %4454, i32 %4455)
  %4457 = zext i16 %4456 to i32
  %4458 = mul nsw i32 %4447, %4457
  %4459 = add nsw i32 %4445, %4458
  %4460 = load i32* @wp_luma_round, align 4
  %4461 = mul nsw i32 2, %4460
  %4462 = add nsw i32 %4459, %4461
  %4463 = load i32* @luma_log_weight_denom, align 4
  %4464 = add nsw i32 %4463, 1
  %4465 = ashr i32 %4462, %4464
  %4466 = load i16* %offsetBi, align 2
  %4467 = sext i16 %4466 to i32
  %4468 = add nsw i32 %4465, %4467
  %4469 = load %struct.ImageParameters** @img, align 8
  %4470 = getelementptr inbounds %struct.ImageParameters* %4469, i32 0, i32 155
  %4471 = load i32* %4470, align 4
  %4472 = icmp sgt i32 %4468, %4471
  br i1 %4472, label %4473, label %4477

; <label>:4473                                    ; preds = %4432
  %4474 = load %struct.ImageParameters** @img, align 8
  %4475 = getelementptr inbounds %struct.ImageParameters* %4474, i32 0, i32 155
  %4476 = load i32* %4475, align 4
  br label %4514

; <label>:4477                                    ; preds = %4432
  %4478 = load i16* %weightSpic, align 2
  %4479 = sext i16 %4478 to i32
  %4480 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4481 = load i16*** %ref1_pic, align 8
  %4482 = load i16* %sy, align 2
  %4483 = sext i16 %4482 to i32
  %4484 = load i16* %sx0, align 2
  %4485 = sext i16 %4484 to i32
  %4486 = load i32* %img_height, align 4
  %4487 = load i32* %img_width, align 4
  %4488 = call zeroext i16 %4480(i16** %4481, i32 %4483, i32 %4485, i32 %4486, i32 %4487)
  %4489 = zext i16 %4488 to i32
  %4490 = mul nsw i32 %4479, %4489
  %4491 = load i16* %weightRpic, align 2
  %4492 = sext i16 %4491 to i32
  %4493 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4494 = load i16*** %ref2_pic, align 8
  %4495 = load i16* %ry, align 2
  %4496 = sext i16 %4495 to i32
  %4497 = load i16* %rx0, align 2
  %4498 = sext i16 %4497 to i32
  %4499 = load i32* %img_height, align 4
  %4500 = load i32* %img_width, align 4
  %4501 = call zeroext i16 %4493(i16** %4494, i32 %4496, i32 %4498, i32 %4499, i32 %4500)
  %4502 = zext i16 %4501 to i32
  %4503 = mul nsw i32 %4492, %4502
  %4504 = add nsw i32 %4490, %4503
  %4505 = load i32* @wp_luma_round, align 4
  %4506 = mul nsw i32 2, %4505
  %4507 = add nsw i32 %4504, %4506
  %4508 = load i32* @luma_log_weight_denom, align 4
  %4509 = add nsw i32 %4508, 1
  %4510 = ashr i32 %4507, %4509
  %4511 = load i16* %offsetBi, align 2
  %4512 = sext i16 %4511 to i32
  %4513 = add nsw i32 %4510, %4512
  br label %4514

; <label>:4514                                    ; preds = %4477, %4473
  %4515 = phi i32 [ %4476, %4473 ], [ %4513, %4477 ]
  br label %4516

; <label>:4516                                    ; preds = %4514, %4431
  %4517 = phi i32 [ 0, %4431 ], [ %4515, %4514 ]
  store i32 %4517, i32* %weightedpel, align 4
  %4518 = load i16* %x0, align 2
  %4519 = sext i16 %4518 to i64
  %4520 = load i16** %orig_line, align 8
  %4521 = getelementptr inbounds i16* %4520, i64 %4519
  %4522 = load i16* %4521, align 2
  %4523 = zext i16 %4522 to i32
  %4524 = load i32* %weightedpel, align 4
  %4525 = sub nsw i32 %4523, %4524
  %4526 = load i32** %d, align 8
  %4527 = getelementptr inbounds i32* %4526, i32 1
  store i32* %4527, i32** %d, align 8
  store i32 %4525, i32* %4526, align 4
  %4528 = load i16* %weightSpic, align 2
  %4529 = sext i16 %4528 to i32
  %4530 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4531 = load i16*** %ref1_pic, align 8
  %4532 = load i16* %sy, align 2
  %4533 = sext i16 %4532 to i32
  %4534 = load i16* %sx0, align 2
  %4535 = sext i16 %4534 to i32
  %4536 = add nsw i32 %4535, 4
  %4537 = load i32* %img_height, align 4
  %4538 = load i32* %img_width, align 4
  %4539 = call zeroext i16 %4530(i16** %4531, i32 %4533, i32 %4536, i32 %4537, i32 %4538)
  %4540 = zext i16 %4539 to i32
  %4541 = mul nsw i32 %4529, %4540
  %4542 = load i16* %weightRpic, align 2
  %4543 = sext i16 %4542 to i32
  %4544 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4545 = load i16*** %ref2_pic, align 8
  %4546 = load i16* %ry, align 2
  %4547 = sext i16 %4546 to i32
  %4548 = load i16* %rx0, align 2
  %4549 = sext i16 %4548 to i32
  %4550 = add nsw i32 %4549, 4
  %4551 = load i32* %img_height, align 4
  %4552 = load i32* %img_width, align 4
  %4553 = call zeroext i16 %4544(i16** %4545, i32 %4547, i32 %4550, i32 %4551, i32 %4552)
  %4554 = zext i16 %4553 to i32
  %4555 = mul nsw i32 %4543, %4554
  %4556 = add nsw i32 %4541, %4555
  %4557 = load i32* @wp_luma_round, align 4
  %4558 = mul nsw i32 2, %4557
  %4559 = add nsw i32 %4556, %4558
  %4560 = load i32* @luma_log_weight_denom, align 4
  %4561 = add nsw i32 %4560, 1
  %4562 = ashr i32 %4559, %4561
  %4563 = load i16* %offsetBi, align 2
  %4564 = sext i16 %4563 to i32
  %4565 = add nsw i32 %4562, %4564
  %4566 = icmp slt i32 %4565, 0
  br i1 %4566, label %4567, label %4568

; <label>:4567                                    ; preds = %4516
  br label %4656

; <label>:4568                                    ; preds = %4516
  %4569 = load i16* %weightSpic, align 2
  %4570 = sext i16 %4569 to i32
  %4571 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4572 = load i16*** %ref1_pic, align 8
  %4573 = load i16* %sy, align 2
  %4574 = sext i16 %4573 to i32
  %4575 = load i16* %sx0, align 2
  %4576 = sext i16 %4575 to i32
  %4577 = add nsw i32 %4576, 4
  %4578 = load i32* %img_height, align 4
  %4579 = load i32* %img_width, align 4
  %4580 = call zeroext i16 %4571(i16** %4572, i32 %4574, i32 %4577, i32 %4578, i32 %4579)
  %4581 = zext i16 %4580 to i32
  %4582 = mul nsw i32 %4570, %4581
  %4583 = load i16* %weightRpic, align 2
  %4584 = sext i16 %4583 to i32
  %4585 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4586 = load i16*** %ref2_pic, align 8
  %4587 = load i16* %ry, align 2
  %4588 = sext i16 %4587 to i32
  %4589 = load i16* %rx0, align 2
  %4590 = sext i16 %4589 to i32
  %4591 = add nsw i32 %4590, 4
  %4592 = load i32* %img_height, align 4
  %4593 = load i32* %img_width, align 4
  %4594 = call zeroext i16 %4585(i16** %4586, i32 %4588, i32 %4591, i32 %4592, i32 %4593)
  %4595 = zext i16 %4594 to i32
  %4596 = mul nsw i32 %4584, %4595
  %4597 = add nsw i32 %4582, %4596
  %4598 = load i32* @wp_luma_round, align 4
  %4599 = mul nsw i32 2, %4598
  %4600 = add nsw i32 %4597, %4599
  %4601 = load i32* @luma_log_weight_denom, align 4
  %4602 = add nsw i32 %4601, 1
  %4603 = ashr i32 %4600, %4602
  %4604 = load i16* %offsetBi, align 2
  %4605 = sext i16 %4604 to i32
  %4606 = add nsw i32 %4603, %4605
  %4607 = load %struct.ImageParameters** @img, align 8
  %4608 = getelementptr inbounds %struct.ImageParameters* %4607, i32 0, i32 155
  %4609 = load i32* %4608, align 4
  %4610 = icmp sgt i32 %4606, %4609
  br i1 %4610, label %4611, label %4615

; <label>:4611                                    ; preds = %4568
  %4612 = load %struct.ImageParameters** @img, align 8
  %4613 = getelementptr inbounds %struct.ImageParameters* %4612, i32 0, i32 155
  %4614 = load i32* %4613, align 4
  br label %4654

; <label>:4615                                    ; preds = %4568
  %4616 = load i16* %weightSpic, align 2
  %4617 = sext i16 %4616 to i32
  %4618 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4619 = load i16*** %ref1_pic, align 8
  %4620 = load i16* %sy, align 2
  %4621 = sext i16 %4620 to i32
  %4622 = load i16* %sx0, align 2
  %4623 = sext i16 %4622 to i32
  %4624 = add nsw i32 %4623, 4
  %4625 = load i32* %img_height, align 4
  %4626 = load i32* %img_width, align 4
  %4627 = call zeroext i16 %4618(i16** %4619, i32 %4621, i32 %4624, i32 %4625, i32 %4626)
  %4628 = zext i16 %4627 to i32
  %4629 = mul nsw i32 %4617, %4628
  %4630 = load i16* %weightRpic, align 2
  %4631 = sext i16 %4630 to i32
  %4632 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4633 = load i16*** %ref2_pic, align 8
  %4634 = load i16* %ry, align 2
  %4635 = sext i16 %4634 to i32
  %4636 = load i16* %rx0, align 2
  %4637 = sext i16 %4636 to i32
  %4638 = add nsw i32 %4637, 4
  %4639 = load i32* %img_height, align 4
  %4640 = load i32* %img_width, align 4
  %4641 = call zeroext i16 %4632(i16** %4633, i32 %4635, i32 %4638, i32 %4639, i32 %4640)
  %4642 = zext i16 %4641 to i32
  %4643 = mul nsw i32 %4631, %4642
  %4644 = add nsw i32 %4629, %4643
  %4645 = load i32* @wp_luma_round, align 4
  %4646 = mul nsw i32 2, %4645
  %4647 = add nsw i32 %4644, %4646
  %4648 = load i32* @luma_log_weight_denom, align 4
  %4649 = add nsw i32 %4648, 1
  %4650 = ashr i32 %4647, %4649
  %4651 = load i16* %offsetBi, align 2
  %4652 = sext i16 %4651 to i32
  %4653 = add nsw i32 %4650, %4652
  br label %4654

; <label>:4654                                    ; preds = %4615, %4611
  %4655 = phi i32 [ %4614, %4611 ], [ %4653, %4615 ]
  br label %4656

; <label>:4656                                    ; preds = %4654, %4567
  %4657 = phi i32 [ 0, %4567 ], [ %4655, %4654 ]
  store i32 %4657, i32* %weightedpel, align 4
  %4658 = load i16* %x0, align 2
  %4659 = sext i16 %4658 to i32
  %4660 = add nsw i32 %4659, 1
  %4661 = sext i32 %4660 to i64
  %4662 = load i16** %orig_line, align 8
  %4663 = getelementptr inbounds i16* %4662, i64 %4661
  %4664 = load i16* %4663, align 2
  %4665 = zext i16 %4664 to i32
  %4666 = load i32* %weightedpel, align 4
  %4667 = sub nsw i32 %4665, %4666
  %4668 = load i32** %d, align 8
  %4669 = getelementptr inbounds i32* %4668, i32 1
  store i32* %4669, i32** %d, align 8
  store i32 %4667, i32* %4668, align 4
  %4670 = load i16* %weightSpic, align 2
  %4671 = sext i16 %4670 to i32
  %4672 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4673 = load i16*** %ref1_pic, align 8
  %4674 = load i16* %sy, align 2
  %4675 = sext i16 %4674 to i32
  %4676 = load i16* %sx0, align 2
  %4677 = sext i16 %4676 to i32
  %4678 = add nsw i32 %4677, 8
  %4679 = load i32* %img_height, align 4
  %4680 = load i32* %img_width, align 4
  %4681 = call zeroext i16 %4672(i16** %4673, i32 %4675, i32 %4678, i32 %4679, i32 %4680)
  %4682 = zext i16 %4681 to i32
  %4683 = mul nsw i32 %4671, %4682
  %4684 = load i16* %weightRpic, align 2
  %4685 = sext i16 %4684 to i32
  %4686 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4687 = load i16*** %ref2_pic, align 8
  %4688 = load i16* %ry, align 2
  %4689 = sext i16 %4688 to i32
  %4690 = load i16* %rx0, align 2
  %4691 = sext i16 %4690 to i32
  %4692 = add nsw i32 %4691, 8
  %4693 = load i32* %img_height, align 4
  %4694 = load i32* %img_width, align 4
  %4695 = call zeroext i16 %4686(i16** %4687, i32 %4689, i32 %4692, i32 %4693, i32 %4694)
  %4696 = zext i16 %4695 to i32
  %4697 = mul nsw i32 %4685, %4696
  %4698 = add nsw i32 %4683, %4697
  %4699 = load i32* @wp_luma_round, align 4
  %4700 = mul nsw i32 2, %4699
  %4701 = add nsw i32 %4698, %4700
  %4702 = load i32* @luma_log_weight_denom, align 4
  %4703 = add nsw i32 %4702, 1
  %4704 = ashr i32 %4701, %4703
  %4705 = load i16* %offsetBi, align 2
  %4706 = sext i16 %4705 to i32
  %4707 = add nsw i32 %4704, %4706
  %4708 = icmp slt i32 %4707, 0
  br i1 %4708, label %4709, label %4710

; <label>:4709                                    ; preds = %4656
  br label %4798

; <label>:4710                                    ; preds = %4656
  %4711 = load i16* %weightSpic, align 2
  %4712 = sext i16 %4711 to i32
  %4713 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4714 = load i16*** %ref1_pic, align 8
  %4715 = load i16* %sy, align 2
  %4716 = sext i16 %4715 to i32
  %4717 = load i16* %sx0, align 2
  %4718 = sext i16 %4717 to i32
  %4719 = add nsw i32 %4718, 8
  %4720 = load i32* %img_height, align 4
  %4721 = load i32* %img_width, align 4
  %4722 = call zeroext i16 %4713(i16** %4714, i32 %4716, i32 %4719, i32 %4720, i32 %4721)
  %4723 = zext i16 %4722 to i32
  %4724 = mul nsw i32 %4712, %4723
  %4725 = load i16* %weightRpic, align 2
  %4726 = sext i16 %4725 to i32
  %4727 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4728 = load i16*** %ref2_pic, align 8
  %4729 = load i16* %ry, align 2
  %4730 = sext i16 %4729 to i32
  %4731 = load i16* %rx0, align 2
  %4732 = sext i16 %4731 to i32
  %4733 = add nsw i32 %4732, 8
  %4734 = load i32* %img_height, align 4
  %4735 = load i32* %img_width, align 4
  %4736 = call zeroext i16 %4727(i16** %4728, i32 %4730, i32 %4733, i32 %4734, i32 %4735)
  %4737 = zext i16 %4736 to i32
  %4738 = mul nsw i32 %4726, %4737
  %4739 = add nsw i32 %4724, %4738
  %4740 = load i32* @wp_luma_round, align 4
  %4741 = mul nsw i32 2, %4740
  %4742 = add nsw i32 %4739, %4741
  %4743 = load i32* @luma_log_weight_denom, align 4
  %4744 = add nsw i32 %4743, 1
  %4745 = ashr i32 %4742, %4744
  %4746 = load i16* %offsetBi, align 2
  %4747 = sext i16 %4746 to i32
  %4748 = add nsw i32 %4745, %4747
  %4749 = load %struct.ImageParameters** @img, align 8
  %4750 = getelementptr inbounds %struct.ImageParameters* %4749, i32 0, i32 155
  %4751 = load i32* %4750, align 4
  %4752 = icmp sgt i32 %4748, %4751
  br i1 %4752, label %4753, label %4757

; <label>:4753                                    ; preds = %4710
  %4754 = load %struct.ImageParameters** @img, align 8
  %4755 = getelementptr inbounds %struct.ImageParameters* %4754, i32 0, i32 155
  %4756 = load i32* %4755, align 4
  br label %4796

; <label>:4757                                    ; preds = %4710
  %4758 = load i16* %weightSpic, align 2
  %4759 = sext i16 %4758 to i32
  %4760 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4761 = load i16*** %ref1_pic, align 8
  %4762 = load i16* %sy, align 2
  %4763 = sext i16 %4762 to i32
  %4764 = load i16* %sx0, align 2
  %4765 = sext i16 %4764 to i32
  %4766 = add nsw i32 %4765, 8
  %4767 = load i32* %img_height, align 4
  %4768 = load i32* %img_width, align 4
  %4769 = call zeroext i16 %4760(i16** %4761, i32 %4763, i32 %4766, i32 %4767, i32 %4768)
  %4770 = zext i16 %4769 to i32
  %4771 = mul nsw i32 %4759, %4770
  %4772 = load i16* %weightRpic, align 2
  %4773 = sext i16 %4772 to i32
  %4774 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4775 = load i16*** %ref2_pic, align 8
  %4776 = load i16* %ry, align 2
  %4777 = sext i16 %4776 to i32
  %4778 = load i16* %rx0, align 2
  %4779 = sext i16 %4778 to i32
  %4780 = add nsw i32 %4779, 8
  %4781 = load i32* %img_height, align 4
  %4782 = load i32* %img_width, align 4
  %4783 = call zeroext i16 %4774(i16** %4775, i32 %4777, i32 %4780, i32 %4781, i32 %4782)
  %4784 = zext i16 %4783 to i32
  %4785 = mul nsw i32 %4773, %4784
  %4786 = add nsw i32 %4771, %4785
  %4787 = load i32* @wp_luma_round, align 4
  %4788 = mul nsw i32 2, %4787
  %4789 = add nsw i32 %4786, %4788
  %4790 = load i32* @luma_log_weight_denom, align 4
  %4791 = add nsw i32 %4790, 1
  %4792 = ashr i32 %4789, %4791
  %4793 = load i16* %offsetBi, align 2
  %4794 = sext i16 %4793 to i32
  %4795 = add nsw i32 %4792, %4794
  br label %4796

; <label>:4796                                    ; preds = %4757, %4753
  %4797 = phi i32 [ %4756, %4753 ], [ %4795, %4757 ]
  br label %4798

; <label>:4798                                    ; preds = %4796, %4709
  %4799 = phi i32 [ 0, %4709 ], [ %4797, %4796 ]
  store i32 %4799, i32* %weightedpel, align 4
  %4800 = load i16* %x0, align 2
  %4801 = sext i16 %4800 to i32
  %4802 = add nsw i32 %4801, 2
  %4803 = sext i32 %4802 to i64
  %4804 = load i16** %orig_line, align 8
  %4805 = getelementptr inbounds i16* %4804, i64 %4803
  %4806 = load i16* %4805, align 2
  %4807 = zext i16 %4806 to i32
  %4808 = load i32* %weightedpel, align 4
  %4809 = sub nsw i32 %4807, %4808
  %4810 = load i32** %d, align 8
  %4811 = getelementptr inbounds i32* %4810, i32 1
  store i32* %4811, i32** %d, align 8
  store i32 %4809, i32* %4810, align 4
  %4812 = load i16* %weightSpic, align 2
  %4813 = sext i16 %4812 to i32
  %4814 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4815 = load i16*** %ref1_pic, align 8
  %4816 = load i16* %sy, align 2
  %4817 = sext i16 %4816 to i32
  %4818 = load i16* %sx0, align 2
  %4819 = sext i16 %4818 to i32
  %4820 = add nsw i32 %4819, 12
  %4821 = load i32* %img_height, align 4
  %4822 = load i32* %img_width, align 4
  %4823 = call zeroext i16 %4814(i16** %4815, i32 %4817, i32 %4820, i32 %4821, i32 %4822)
  %4824 = zext i16 %4823 to i32
  %4825 = mul nsw i32 %4813, %4824
  %4826 = load i16* %weightRpic, align 2
  %4827 = sext i16 %4826 to i32
  %4828 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4829 = load i16*** %ref2_pic, align 8
  %4830 = load i16* %ry, align 2
  %4831 = sext i16 %4830 to i32
  %4832 = load i16* %rx0, align 2
  %4833 = sext i16 %4832 to i32
  %4834 = add nsw i32 %4833, 12
  %4835 = load i32* %img_height, align 4
  %4836 = load i32* %img_width, align 4
  %4837 = call zeroext i16 %4828(i16** %4829, i32 %4831, i32 %4834, i32 %4835, i32 %4836)
  %4838 = zext i16 %4837 to i32
  %4839 = mul nsw i32 %4827, %4838
  %4840 = add nsw i32 %4825, %4839
  %4841 = load i32* @wp_luma_round, align 4
  %4842 = mul nsw i32 2, %4841
  %4843 = add nsw i32 %4840, %4842
  %4844 = load i32* @luma_log_weight_denom, align 4
  %4845 = add nsw i32 %4844, 1
  %4846 = ashr i32 %4843, %4845
  %4847 = load i16* %offsetBi, align 2
  %4848 = sext i16 %4847 to i32
  %4849 = add nsw i32 %4846, %4848
  %4850 = icmp slt i32 %4849, 0
  br i1 %4850, label %4851, label %4852

; <label>:4851                                    ; preds = %4798
  br label %4940

; <label>:4852                                    ; preds = %4798
  %4853 = load i16* %weightSpic, align 2
  %4854 = sext i16 %4853 to i32
  %4855 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4856 = load i16*** %ref1_pic, align 8
  %4857 = load i16* %sy, align 2
  %4858 = sext i16 %4857 to i32
  %4859 = load i16* %sx0, align 2
  %4860 = sext i16 %4859 to i32
  %4861 = add nsw i32 %4860, 12
  %4862 = load i32* %img_height, align 4
  %4863 = load i32* %img_width, align 4
  %4864 = call zeroext i16 %4855(i16** %4856, i32 %4858, i32 %4861, i32 %4862, i32 %4863)
  %4865 = zext i16 %4864 to i32
  %4866 = mul nsw i32 %4854, %4865
  %4867 = load i16* %weightRpic, align 2
  %4868 = sext i16 %4867 to i32
  %4869 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4870 = load i16*** %ref2_pic, align 8
  %4871 = load i16* %ry, align 2
  %4872 = sext i16 %4871 to i32
  %4873 = load i16* %rx0, align 2
  %4874 = sext i16 %4873 to i32
  %4875 = add nsw i32 %4874, 12
  %4876 = load i32* %img_height, align 4
  %4877 = load i32* %img_width, align 4
  %4878 = call zeroext i16 %4869(i16** %4870, i32 %4872, i32 %4875, i32 %4876, i32 %4877)
  %4879 = zext i16 %4878 to i32
  %4880 = mul nsw i32 %4868, %4879
  %4881 = add nsw i32 %4866, %4880
  %4882 = load i32* @wp_luma_round, align 4
  %4883 = mul nsw i32 2, %4882
  %4884 = add nsw i32 %4881, %4883
  %4885 = load i32* @luma_log_weight_denom, align 4
  %4886 = add nsw i32 %4885, 1
  %4887 = ashr i32 %4884, %4886
  %4888 = load i16* %offsetBi, align 2
  %4889 = sext i16 %4888 to i32
  %4890 = add nsw i32 %4887, %4889
  %4891 = load %struct.ImageParameters** @img, align 8
  %4892 = getelementptr inbounds %struct.ImageParameters* %4891, i32 0, i32 155
  %4893 = load i32* %4892, align 4
  %4894 = icmp sgt i32 %4890, %4893
  br i1 %4894, label %4895, label %4899

; <label>:4895                                    ; preds = %4852
  %4896 = load %struct.ImageParameters** @img, align 8
  %4897 = getelementptr inbounds %struct.ImageParameters* %4896, i32 0, i32 155
  %4898 = load i32* %4897, align 4
  br label %4938

; <label>:4899                                    ; preds = %4852
  %4900 = load i16* %weightSpic, align 2
  %4901 = sext i16 %4900 to i32
  %4902 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4903 = load i16*** %ref1_pic, align 8
  %4904 = load i16* %sy, align 2
  %4905 = sext i16 %4904 to i32
  %4906 = load i16* %sx0, align 2
  %4907 = sext i16 %4906 to i32
  %4908 = add nsw i32 %4907, 12
  %4909 = load i32* %img_height, align 4
  %4910 = load i32* %img_width, align 4
  %4911 = call zeroext i16 %4902(i16** %4903, i32 %4905, i32 %4908, i32 %4909, i32 %4910)
  %4912 = zext i16 %4911 to i32
  %4913 = mul nsw i32 %4901, %4912
  %4914 = load i16* %weightRpic, align 2
  %4915 = sext i16 %4914 to i32
  %4916 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4917 = load i16*** %ref2_pic, align 8
  %4918 = load i16* %ry, align 2
  %4919 = sext i16 %4918 to i32
  %4920 = load i16* %rx0, align 2
  %4921 = sext i16 %4920 to i32
  %4922 = add nsw i32 %4921, 12
  %4923 = load i32* %img_height, align 4
  %4924 = load i32* %img_width, align 4
  %4925 = call zeroext i16 %4916(i16** %4917, i32 %4919, i32 %4922, i32 %4923, i32 %4924)
  %4926 = zext i16 %4925 to i32
  %4927 = mul nsw i32 %4915, %4926
  %4928 = add nsw i32 %4913, %4927
  %4929 = load i32* @wp_luma_round, align 4
  %4930 = mul nsw i32 2, %4929
  %4931 = add nsw i32 %4928, %4930
  %4932 = load i32* @luma_log_weight_denom, align 4
  %4933 = add nsw i32 %4932, 1
  %4934 = ashr i32 %4931, %4933
  %4935 = load i16* %offsetBi, align 2
  %4936 = sext i16 %4935 to i32
  %4937 = add nsw i32 %4934, %4936
  br label %4938

; <label>:4938                                    ; preds = %4899, %4895
  %4939 = phi i32 [ %4898, %4895 ], [ %4937, %4899 ]
  br label %4940

; <label>:4940                                    ; preds = %4938, %4851
  %4941 = phi i32 [ 0, %4851 ], [ %4939, %4938 ]
  store i32 %4941, i32* %weightedpel, align 4
  %4942 = load i16* %x0, align 2
  %4943 = sext i16 %4942 to i32
  %4944 = add nsw i32 %4943, 3
  %4945 = sext i32 %4944 to i64
  %4946 = load i16** %orig_line, align 8
  %4947 = getelementptr inbounds i16* %4946, i64 %4945
  %4948 = load i16* %4947, align 2
  %4949 = zext i16 %4948 to i32
  %4950 = load i32* %weightedpel, align 4
  %4951 = sub nsw i32 %4949, %4950
  %4952 = load i32** %d, align 8
  %4953 = getelementptr inbounds i32* %4952, i32 1
  store i32* %4953, i32** %d, align 8
  store i32 %4951, i32* %4952, align 4
  %4954 = load i16* %sy0, align 2
  %4955 = sext i16 %4954 to i32
  %4956 = add nsw i32 %4955, 8
  %4957 = trunc i32 %4956 to i16
  store i16 %4957, i16* %sy, align 2
  %4958 = load i16* %y0, align 2
  %4959 = sext i16 %4958 to i32
  %4960 = add nsw i32 %4959, 2
  %4961 = sext i32 %4960 to i64
  %4962 = load i16*** %1, align 8
  %4963 = getelementptr inbounds i16** %4962, i64 %4961
  %4964 = load i16** %4963, align 8
  store i16* %4964, i16** %orig_line, align 8
  %4965 = load i16* %ry0, align 2
  %4966 = sext i16 %4965 to i32
  %4967 = add nsw i32 %4966, 8
  %4968 = trunc i32 %4967 to i16
  store i16 %4968, i16* %ry, align 2
  %4969 = load i16* %weightSpic, align 2
  %4970 = sext i16 %4969 to i32
  %4971 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %4972 = load i16*** %ref1_pic, align 8
  %4973 = load i16* %sy, align 2
  %4974 = sext i16 %4973 to i32
  %4975 = load i16* %sx0, align 2
  %4976 = sext i16 %4975 to i32
  %4977 = load i32* %img_height, align 4
  %4978 = load i32* %img_width, align 4
  %4979 = call zeroext i16 %4971(i16** %4972, i32 %4974, i32 %4976, i32 %4977, i32 %4978)
  %4980 = zext i16 %4979 to i32
  %4981 = mul nsw i32 %4970, %4980
  %4982 = load i16* %weightRpic, align 2
  %4983 = sext i16 %4982 to i32
  %4984 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %4985 = load i16*** %ref2_pic, align 8
  %4986 = load i16* %ry, align 2
  %4987 = sext i16 %4986 to i32
  %4988 = load i16* %rx0, align 2
  %4989 = sext i16 %4988 to i32
  %4990 = load i32* %img_height, align 4
  %4991 = load i32* %img_width, align 4
  %4992 = call zeroext i16 %4984(i16** %4985, i32 %4987, i32 %4989, i32 %4990, i32 %4991)
  %4993 = zext i16 %4992 to i32
  %4994 = mul nsw i32 %4983, %4993
  %4995 = add nsw i32 %4981, %4994
  %4996 = load i32* @wp_luma_round, align 4
  %4997 = mul nsw i32 2, %4996
  %4998 = add nsw i32 %4995, %4997
  %4999 = load i32* @luma_log_weight_denom, align 4
  %5000 = add nsw i32 %4999, 1
  %5001 = ashr i32 %4998, %5000
  %5002 = load i16* %offsetBi, align 2
  %5003 = sext i16 %5002 to i32
  %5004 = add nsw i32 %5001, %5003
  %5005 = icmp slt i32 %5004, 0
  br i1 %5005, label %5006, label %5007

; <label>:5006                                    ; preds = %4940
  br label %5091

; <label>:5007                                    ; preds = %4940
  %5008 = load i16* %weightSpic, align 2
  %5009 = sext i16 %5008 to i32
  %5010 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5011 = load i16*** %ref1_pic, align 8
  %5012 = load i16* %sy, align 2
  %5013 = sext i16 %5012 to i32
  %5014 = load i16* %sx0, align 2
  %5015 = sext i16 %5014 to i32
  %5016 = load i32* %img_height, align 4
  %5017 = load i32* %img_width, align 4
  %5018 = call zeroext i16 %5010(i16** %5011, i32 %5013, i32 %5015, i32 %5016, i32 %5017)
  %5019 = zext i16 %5018 to i32
  %5020 = mul nsw i32 %5009, %5019
  %5021 = load i16* %weightRpic, align 2
  %5022 = sext i16 %5021 to i32
  %5023 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5024 = load i16*** %ref2_pic, align 8
  %5025 = load i16* %ry, align 2
  %5026 = sext i16 %5025 to i32
  %5027 = load i16* %rx0, align 2
  %5028 = sext i16 %5027 to i32
  %5029 = load i32* %img_height, align 4
  %5030 = load i32* %img_width, align 4
  %5031 = call zeroext i16 %5023(i16** %5024, i32 %5026, i32 %5028, i32 %5029, i32 %5030)
  %5032 = zext i16 %5031 to i32
  %5033 = mul nsw i32 %5022, %5032
  %5034 = add nsw i32 %5020, %5033
  %5035 = load i32* @wp_luma_round, align 4
  %5036 = mul nsw i32 2, %5035
  %5037 = add nsw i32 %5034, %5036
  %5038 = load i32* @luma_log_weight_denom, align 4
  %5039 = add nsw i32 %5038, 1
  %5040 = ashr i32 %5037, %5039
  %5041 = load i16* %offsetBi, align 2
  %5042 = sext i16 %5041 to i32
  %5043 = add nsw i32 %5040, %5042
  %5044 = load %struct.ImageParameters** @img, align 8
  %5045 = getelementptr inbounds %struct.ImageParameters* %5044, i32 0, i32 155
  %5046 = load i32* %5045, align 4
  %5047 = icmp sgt i32 %5043, %5046
  br i1 %5047, label %5048, label %5052

; <label>:5048                                    ; preds = %5007
  %5049 = load %struct.ImageParameters** @img, align 8
  %5050 = getelementptr inbounds %struct.ImageParameters* %5049, i32 0, i32 155
  %5051 = load i32* %5050, align 4
  br label %5089

; <label>:5052                                    ; preds = %5007
  %5053 = load i16* %weightSpic, align 2
  %5054 = sext i16 %5053 to i32
  %5055 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5056 = load i16*** %ref1_pic, align 8
  %5057 = load i16* %sy, align 2
  %5058 = sext i16 %5057 to i32
  %5059 = load i16* %sx0, align 2
  %5060 = sext i16 %5059 to i32
  %5061 = load i32* %img_height, align 4
  %5062 = load i32* %img_width, align 4
  %5063 = call zeroext i16 %5055(i16** %5056, i32 %5058, i32 %5060, i32 %5061, i32 %5062)
  %5064 = zext i16 %5063 to i32
  %5065 = mul nsw i32 %5054, %5064
  %5066 = load i16* %weightRpic, align 2
  %5067 = sext i16 %5066 to i32
  %5068 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5069 = load i16*** %ref2_pic, align 8
  %5070 = load i16* %ry, align 2
  %5071 = sext i16 %5070 to i32
  %5072 = load i16* %rx0, align 2
  %5073 = sext i16 %5072 to i32
  %5074 = load i32* %img_height, align 4
  %5075 = load i32* %img_width, align 4
  %5076 = call zeroext i16 %5068(i16** %5069, i32 %5071, i32 %5073, i32 %5074, i32 %5075)
  %5077 = zext i16 %5076 to i32
  %5078 = mul nsw i32 %5067, %5077
  %5079 = add nsw i32 %5065, %5078
  %5080 = load i32* @wp_luma_round, align 4
  %5081 = mul nsw i32 2, %5080
  %5082 = add nsw i32 %5079, %5081
  %5083 = load i32* @luma_log_weight_denom, align 4
  %5084 = add nsw i32 %5083, 1
  %5085 = ashr i32 %5082, %5084
  %5086 = load i16* %offsetBi, align 2
  %5087 = sext i16 %5086 to i32
  %5088 = add nsw i32 %5085, %5087
  br label %5089

; <label>:5089                                    ; preds = %5052, %5048
  %5090 = phi i32 [ %5051, %5048 ], [ %5088, %5052 ]
  br label %5091

; <label>:5091                                    ; preds = %5089, %5006
  %5092 = phi i32 [ 0, %5006 ], [ %5090, %5089 ]
  store i32 %5092, i32* %weightedpel, align 4
  %5093 = load i16* %x0, align 2
  %5094 = sext i16 %5093 to i64
  %5095 = load i16** %orig_line, align 8
  %5096 = getelementptr inbounds i16* %5095, i64 %5094
  %5097 = load i16* %5096, align 2
  %5098 = zext i16 %5097 to i32
  %5099 = load i32* %weightedpel, align 4
  %5100 = sub nsw i32 %5098, %5099
  %5101 = load i32** %d, align 8
  %5102 = getelementptr inbounds i32* %5101, i32 1
  store i32* %5102, i32** %d, align 8
  store i32 %5100, i32* %5101, align 4
  %5103 = load i16* %weightSpic, align 2
  %5104 = sext i16 %5103 to i32
  %5105 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5106 = load i16*** %ref1_pic, align 8
  %5107 = load i16* %sy, align 2
  %5108 = sext i16 %5107 to i32
  %5109 = load i16* %sx0, align 2
  %5110 = sext i16 %5109 to i32
  %5111 = add nsw i32 %5110, 4
  %5112 = load i32* %img_height, align 4
  %5113 = load i32* %img_width, align 4
  %5114 = call zeroext i16 %5105(i16** %5106, i32 %5108, i32 %5111, i32 %5112, i32 %5113)
  %5115 = zext i16 %5114 to i32
  %5116 = mul nsw i32 %5104, %5115
  %5117 = load i16* %weightRpic, align 2
  %5118 = sext i16 %5117 to i32
  %5119 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5120 = load i16*** %ref2_pic, align 8
  %5121 = load i16* %ry, align 2
  %5122 = sext i16 %5121 to i32
  %5123 = load i16* %rx0, align 2
  %5124 = sext i16 %5123 to i32
  %5125 = add nsw i32 %5124, 4
  %5126 = load i32* %img_height, align 4
  %5127 = load i32* %img_width, align 4
  %5128 = call zeroext i16 %5119(i16** %5120, i32 %5122, i32 %5125, i32 %5126, i32 %5127)
  %5129 = zext i16 %5128 to i32
  %5130 = mul nsw i32 %5118, %5129
  %5131 = add nsw i32 %5116, %5130
  %5132 = load i32* @wp_luma_round, align 4
  %5133 = mul nsw i32 2, %5132
  %5134 = add nsw i32 %5131, %5133
  %5135 = load i32* @luma_log_weight_denom, align 4
  %5136 = add nsw i32 %5135, 1
  %5137 = ashr i32 %5134, %5136
  %5138 = load i16* %offsetBi, align 2
  %5139 = sext i16 %5138 to i32
  %5140 = add nsw i32 %5137, %5139
  %5141 = icmp slt i32 %5140, 0
  br i1 %5141, label %5142, label %5143

; <label>:5142                                    ; preds = %5091
  br label %5231

; <label>:5143                                    ; preds = %5091
  %5144 = load i16* %weightSpic, align 2
  %5145 = sext i16 %5144 to i32
  %5146 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5147 = load i16*** %ref1_pic, align 8
  %5148 = load i16* %sy, align 2
  %5149 = sext i16 %5148 to i32
  %5150 = load i16* %sx0, align 2
  %5151 = sext i16 %5150 to i32
  %5152 = add nsw i32 %5151, 4
  %5153 = load i32* %img_height, align 4
  %5154 = load i32* %img_width, align 4
  %5155 = call zeroext i16 %5146(i16** %5147, i32 %5149, i32 %5152, i32 %5153, i32 %5154)
  %5156 = zext i16 %5155 to i32
  %5157 = mul nsw i32 %5145, %5156
  %5158 = load i16* %weightRpic, align 2
  %5159 = sext i16 %5158 to i32
  %5160 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5161 = load i16*** %ref2_pic, align 8
  %5162 = load i16* %ry, align 2
  %5163 = sext i16 %5162 to i32
  %5164 = load i16* %rx0, align 2
  %5165 = sext i16 %5164 to i32
  %5166 = add nsw i32 %5165, 4
  %5167 = load i32* %img_height, align 4
  %5168 = load i32* %img_width, align 4
  %5169 = call zeroext i16 %5160(i16** %5161, i32 %5163, i32 %5166, i32 %5167, i32 %5168)
  %5170 = zext i16 %5169 to i32
  %5171 = mul nsw i32 %5159, %5170
  %5172 = add nsw i32 %5157, %5171
  %5173 = load i32* @wp_luma_round, align 4
  %5174 = mul nsw i32 2, %5173
  %5175 = add nsw i32 %5172, %5174
  %5176 = load i32* @luma_log_weight_denom, align 4
  %5177 = add nsw i32 %5176, 1
  %5178 = ashr i32 %5175, %5177
  %5179 = load i16* %offsetBi, align 2
  %5180 = sext i16 %5179 to i32
  %5181 = add nsw i32 %5178, %5180
  %5182 = load %struct.ImageParameters** @img, align 8
  %5183 = getelementptr inbounds %struct.ImageParameters* %5182, i32 0, i32 155
  %5184 = load i32* %5183, align 4
  %5185 = icmp sgt i32 %5181, %5184
  br i1 %5185, label %5186, label %5190

; <label>:5186                                    ; preds = %5143
  %5187 = load %struct.ImageParameters** @img, align 8
  %5188 = getelementptr inbounds %struct.ImageParameters* %5187, i32 0, i32 155
  %5189 = load i32* %5188, align 4
  br label %5229

; <label>:5190                                    ; preds = %5143
  %5191 = load i16* %weightSpic, align 2
  %5192 = sext i16 %5191 to i32
  %5193 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5194 = load i16*** %ref1_pic, align 8
  %5195 = load i16* %sy, align 2
  %5196 = sext i16 %5195 to i32
  %5197 = load i16* %sx0, align 2
  %5198 = sext i16 %5197 to i32
  %5199 = add nsw i32 %5198, 4
  %5200 = load i32* %img_height, align 4
  %5201 = load i32* %img_width, align 4
  %5202 = call zeroext i16 %5193(i16** %5194, i32 %5196, i32 %5199, i32 %5200, i32 %5201)
  %5203 = zext i16 %5202 to i32
  %5204 = mul nsw i32 %5192, %5203
  %5205 = load i16* %weightRpic, align 2
  %5206 = sext i16 %5205 to i32
  %5207 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5208 = load i16*** %ref2_pic, align 8
  %5209 = load i16* %ry, align 2
  %5210 = sext i16 %5209 to i32
  %5211 = load i16* %rx0, align 2
  %5212 = sext i16 %5211 to i32
  %5213 = add nsw i32 %5212, 4
  %5214 = load i32* %img_height, align 4
  %5215 = load i32* %img_width, align 4
  %5216 = call zeroext i16 %5207(i16** %5208, i32 %5210, i32 %5213, i32 %5214, i32 %5215)
  %5217 = zext i16 %5216 to i32
  %5218 = mul nsw i32 %5206, %5217
  %5219 = add nsw i32 %5204, %5218
  %5220 = load i32* @wp_luma_round, align 4
  %5221 = mul nsw i32 2, %5220
  %5222 = add nsw i32 %5219, %5221
  %5223 = load i32* @luma_log_weight_denom, align 4
  %5224 = add nsw i32 %5223, 1
  %5225 = ashr i32 %5222, %5224
  %5226 = load i16* %offsetBi, align 2
  %5227 = sext i16 %5226 to i32
  %5228 = add nsw i32 %5225, %5227
  br label %5229

; <label>:5229                                    ; preds = %5190, %5186
  %5230 = phi i32 [ %5189, %5186 ], [ %5228, %5190 ]
  br label %5231

; <label>:5231                                    ; preds = %5229, %5142
  %5232 = phi i32 [ 0, %5142 ], [ %5230, %5229 ]
  store i32 %5232, i32* %weightedpel, align 4
  %5233 = load i16* %x0, align 2
  %5234 = sext i16 %5233 to i32
  %5235 = add nsw i32 %5234, 1
  %5236 = sext i32 %5235 to i64
  %5237 = load i16** %orig_line, align 8
  %5238 = getelementptr inbounds i16* %5237, i64 %5236
  %5239 = load i16* %5238, align 2
  %5240 = zext i16 %5239 to i32
  %5241 = load i32* %weightedpel, align 4
  %5242 = sub nsw i32 %5240, %5241
  %5243 = load i32** %d, align 8
  %5244 = getelementptr inbounds i32* %5243, i32 1
  store i32* %5244, i32** %d, align 8
  store i32 %5242, i32* %5243, align 4
  %5245 = load i16* %weightSpic, align 2
  %5246 = sext i16 %5245 to i32
  %5247 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5248 = load i16*** %ref1_pic, align 8
  %5249 = load i16* %sy, align 2
  %5250 = sext i16 %5249 to i32
  %5251 = load i16* %sx0, align 2
  %5252 = sext i16 %5251 to i32
  %5253 = add nsw i32 %5252, 8
  %5254 = load i32* %img_height, align 4
  %5255 = load i32* %img_width, align 4
  %5256 = call zeroext i16 %5247(i16** %5248, i32 %5250, i32 %5253, i32 %5254, i32 %5255)
  %5257 = zext i16 %5256 to i32
  %5258 = mul nsw i32 %5246, %5257
  %5259 = load i16* %weightRpic, align 2
  %5260 = sext i16 %5259 to i32
  %5261 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5262 = load i16*** %ref2_pic, align 8
  %5263 = load i16* %ry, align 2
  %5264 = sext i16 %5263 to i32
  %5265 = load i16* %rx0, align 2
  %5266 = sext i16 %5265 to i32
  %5267 = add nsw i32 %5266, 8
  %5268 = load i32* %img_height, align 4
  %5269 = load i32* %img_width, align 4
  %5270 = call zeroext i16 %5261(i16** %5262, i32 %5264, i32 %5267, i32 %5268, i32 %5269)
  %5271 = zext i16 %5270 to i32
  %5272 = mul nsw i32 %5260, %5271
  %5273 = add nsw i32 %5258, %5272
  %5274 = load i32* @wp_luma_round, align 4
  %5275 = mul nsw i32 2, %5274
  %5276 = add nsw i32 %5273, %5275
  %5277 = load i32* @luma_log_weight_denom, align 4
  %5278 = add nsw i32 %5277, 1
  %5279 = ashr i32 %5276, %5278
  %5280 = load i16* %offsetBi, align 2
  %5281 = sext i16 %5280 to i32
  %5282 = add nsw i32 %5279, %5281
  %5283 = icmp slt i32 %5282, 0
  br i1 %5283, label %5284, label %5285

; <label>:5284                                    ; preds = %5231
  br label %5373

; <label>:5285                                    ; preds = %5231
  %5286 = load i16* %weightSpic, align 2
  %5287 = sext i16 %5286 to i32
  %5288 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5289 = load i16*** %ref1_pic, align 8
  %5290 = load i16* %sy, align 2
  %5291 = sext i16 %5290 to i32
  %5292 = load i16* %sx0, align 2
  %5293 = sext i16 %5292 to i32
  %5294 = add nsw i32 %5293, 8
  %5295 = load i32* %img_height, align 4
  %5296 = load i32* %img_width, align 4
  %5297 = call zeroext i16 %5288(i16** %5289, i32 %5291, i32 %5294, i32 %5295, i32 %5296)
  %5298 = zext i16 %5297 to i32
  %5299 = mul nsw i32 %5287, %5298
  %5300 = load i16* %weightRpic, align 2
  %5301 = sext i16 %5300 to i32
  %5302 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5303 = load i16*** %ref2_pic, align 8
  %5304 = load i16* %ry, align 2
  %5305 = sext i16 %5304 to i32
  %5306 = load i16* %rx0, align 2
  %5307 = sext i16 %5306 to i32
  %5308 = add nsw i32 %5307, 8
  %5309 = load i32* %img_height, align 4
  %5310 = load i32* %img_width, align 4
  %5311 = call zeroext i16 %5302(i16** %5303, i32 %5305, i32 %5308, i32 %5309, i32 %5310)
  %5312 = zext i16 %5311 to i32
  %5313 = mul nsw i32 %5301, %5312
  %5314 = add nsw i32 %5299, %5313
  %5315 = load i32* @wp_luma_round, align 4
  %5316 = mul nsw i32 2, %5315
  %5317 = add nsw i32 %5314, %5316
  %5318 = load i32* @luma_log_weight_denom, align 4
  %5319 = add nsw i32 %5318, 1
  %5320 = ashr i32 %5317, %5319
  %5321 = load i16* %offsetBi, align 2
  %5322 = sext i16 %5321 to i32
  %5323 = add nsw i32 %5320, %5322
  %5324 = load %struct.ImageParameters** @img, align 8
  %5325 = getelementptr inbounds %struct.ImageParameters* %5324, i32 0, i32 155
  %5326 = load i32* %5325, align 4
  %5327 = icmp sgt i32 %5323, %5326
  br i1 %5327, label %5328, label %5332

; <label>:5328                                    ; preds = %5285
  %5329 = load %struct.ImageParameters** @img, align 8
  %5330 = getelementptr inbounds %struct.ImageParameters* %5329, i32 0, i32 155
  %5331 = load i32* %5330, align 4
  br label %5371

; <label>:5332                                    ; preds = %5285
  %5333 = load i16* %weightSpic, align 2
  %5334 = sext i16 %5333 to i32
  %5335 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5336 = load i16*** %ref1_pic, align 8
  %5337 = load i16* %sy, align 2
  %5338 = sext i16 %5337 to i32
  %5339 = load i16* %sx0, align 2
  %5340 = sext i16 %5339 to i32
  %5341 = add nsw i32 %5340, 8
  %5342 = load i32* %img_height, align 4
  %5343 = load i32* %img_width, align 4
  %5344 = call zeroext i16 %5335(i16** %5336, i32 %5338, i32 %5341, i32 %5342, i32 %5343)
  %5345 = zext i16 %5344 to i32
  %5346 = mul nsw i32 %5334, %5345
  %5347 = load i16* %weightRpic, align 2
  %5348 = sext i16 %5347 to i32
  %5349 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5350 = load i16*** %ref2_pic, align 8
  %5351 = load i16* %ry, align 2
  %5352 = sext i16 %5351 to i32
  %5353 = load i16* %rx0, align 2
  %5354 = sext i16 %5353 to i32
  %5355 = add nsw i32 %5354, 8
  %5356 = load i32* %img_height, align 4
  %5357 = load i32* %img_width, align 4
  %5358 = call zeroext i16 %5349(i16** %5350, i32 %5352, i32 %5355, i32 %5356, i32 %5357)
  %5359 = zext i16 %5358 to i32
  %5360 = mul nsw i32 %5348, %5359
  %5361 = add nsw i32 %5346, %5360
  %5362 = load i32* @wp_luma_round, align 4
  %5363 = mul nsw i32 2, %5362
  %5364 = add nsw i32 %5361, %5363
  %5365 = load i32* @luma_log_weight_denom, align 4
  %5366 = add nsw i32 %5365, 1
  %5367 = ashr i32 %5364, %5366
  %5368 = load i16* %offsetBi, align 2
  %5369 = sext i16 %5368 to i32
  %5370 = add nsw i32 %5367, %5369
  br label %5371

; <label>:5371                                    ; preds = %5332, %5328
  %5372 = phi i32 [ %5331, %5328 ], [ %5370, %5332 ]
  br label %5373

; <label>:5373                                    ; preds = %5371, %5284
  %5374 = phi i32 [ 0, %5284 ], [ %5372, %5371 ]
  store i32 %5374, i32* %weightedpel, align 4
  %5375 = load i16* %x0, align 2
  %5376 = sext i16 %5375 to i32
  %5377 = add nsw i32 %5376, 2
  %5378 = sext i32 %5377 to i64
  %5379 = load i16** %orig_line, align 8
  %5380 = getelementptr inbounds i16* %5379, i64 %5378
  %5381 = load i16* %5380, align 2
  %5382 = zext i16 %5381 to i32
  %5383 = load i32* %weightedpel, align 4
  %5384 = sub nsw i32 %5382, %5383
  %5385 = load i32** %d, align 8
  %5386 = getelementptr inbounds i32* %5385, i32 1
  store i32* %5386, i32** %d, align 8
  store i32 %5384, i32* %5385, align 4
  %5387 = load i16* %weightSpic, align 2
  %5388 = sext i16 %5387 to i32
  %5389 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5390 = load i16*** %ref1_pic, align 8
  %5391 = load i16* %sy, align 2
  %5392 = sext i16 %5391 to i32
  %5393 = load i16* %sx0, align 2
  %5394 = sext i16 %5393 to i32
  %5395 = add nsw i32 %5394, 12
  %5396 = load i32* %img_height, align 4
  %5397 = load i32* %img_width, align 4
  %5398 = call zeroext i16 %5389(i16** %5390, i32 %5392, i32 %5395, i32 %5396, i32 %5397)
  %5399 = zext i16 %5398 to i32
  %5400 = mul nsw i32 %5388, %5399
  %5401 = load i16* %weightRpic, align 2
  %5402 = sext i16 %5401 to i32
  %5403 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5404 = load i16*** %ref2_pic, align 8
  %5405 = load i16* %ry, align 2
  %5406 = sext i16 %5405 to i32
  %5407 = load i16* %rx0, align 2
  %5408 = sext i16 %5407 to i32
  %5409 = add nsw i32 %5408, 12
  %5410 = load i32* %img_height, align 4
  %5411 = load i32* %img_width, align 4
  %5412 = call zeroext i16 %5403(i16** %5404, i32 %5406, i32 %5409, i32 %5410, i32 %5411)
  %5413 = zext i16 %5412 to i32
  %5414 = mul nsw i32 %5402, %5413
  %5415 = add nsw i32 %5400, %5414
  %5416 = load i32* @wp_luma_round, align 4
  %5417 = mul nsw i32 2, %5416
  %5418 = add nsw i32 %5415, %5417
  %5419 = load i32* @luma_log_weight_denom, align 4
  %5420 = add nsw i32 %5419, 1
  %5421 = ashr i32 %5418, %5420
  %5422 = load i16* %offsetBi, align 2
  %5423 = sext i16 %5422 to i32
  %5424 = add nsw i32 %5421, %5423
  %5425 = icmp slt i32 %5424, 0
  br i1 %5425, label %5426, label %5427

; <label>:5426                                    ; preds = %5373
  br label %5515

; <label>:5427                                    ; preds = %5373
  %5428 = load i16* %weightSpic, align 2
  %5429 = sext i16 %5428 to i32
  %5430 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5431 = load i16*** %ref1_pic, align 8
  %5432 = load i16* %sy, align 2
  %5433 = sext i16 %5432 to i32
  %5434 = load i16* %sx0, align 2
  %5435 = sext i16 %5434 to i32
  %5436 = add nsw i32 %5435, 12
  %5437 = load i32* %img_height, align 4
  %5438 = load i32* %img_width, align 4
  %5439 = call zeroext i16 %5430(i16** %5431, i32 %5433, i32 %5436, i32 %5437, i32 %5438)
  %5440 = zext i16 %5439 to i32
  %5441 = mul nsw i32 %5429, %5440
  %5442 = load i16* %weightRpic, align 2
  %5443 = sext i16 %5442 to i32
  %5444 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5445 = load i16*** %ref2_pic, align 8
  %5446 = load i16* %ry, align 2
  %5447 = sext i16 %5446 to i32
  %5448 = load i16* %rx0, align 2
  %5449 = sext i16 %5448 to i32
  %5450 = add nsw i32 %5449, 12
  %5451 = load i32* %img_height, align 4
  %5452 = load i32* %img_width, align 4
  %5453 = call zeroext i16 %5444(i16** %5445, i32 %5447, i32 %5450, i32 %5451, i32 %5452)
  %5454 = zext i16 %5453 to i32
  %5455 = mul nsw i32 %5443, %5454
  %5456 = add nsw i32 %5441, %5455
  %5457 = load i32* @wp_luma_round, align 4
  %5458 = mul nsw i32 2, %5457
  %5459 = add nsw i32 %5456, %5458
  %5460 = load i32* @luma_log_weight_denom, align 4
  %5461 = add nsw i32 %5460, 1
  %5462 = ashr i32 %5459, %5461
  %5463 = load i16* %offsetBi, align 2
  %5464 = sext i16 %5463 to i32
  %5465 = add nsw i32 %5462, %5464
  %5466 = load %struct.ImageParameters** @img, align 8
  %5467 = getelementptr inbounds %struct.ImageParameters* %5466, i32 0, i32 155
  %5468 = load i32* %5467, align 4
  %5469 = icmp sgt i32 %5465, %5468
  br i1 %5469, label %5470, label %5474

; <label>:5470                                    ; preds = %5427
  %5471 = load %struct.ImageParameters** @img, align 8
  %5472 = getelementptr inbounds %struct.ImageParameters* %5471, i32 0, i32 155
  %5473 = load i32* %5472, align 4
  br label %5513

; <label>:5474                                    ; preds = %5427
  %5475 = load i16* %weightSpic, align 2
  %5476 = sext i16 %5475 to i32
  %5477 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5478 = load i16*** %ref1_pic, align 8
  %5479 = load i16* %sy, align 2
  %5480 = sext i16 %5479 to i32
  %5481 = load i16* %sx0, align 2
  %5482 = sext i16 %5481 to i32
  %5483 = add nsw i32 %5482, 12
  %5484 = load i32* %img_height, align 4
  %5485 = load i32* %img_width, align 4
  %5486 = call zeroext i16 %5477(i16** %5478, i32 %5480, i32 %5483, i32 %5484, i32 %5485)
  %5487 = zext i16 %5486 to i32
  %5488 = mul nsw i32 %5476, %5487
  %5489 = load i16* %weightRpic, align 2
  %5490 = sext i16 %5489 to i32
  %5491 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5492 = load i16*** %ref2_pic, align 8
  %5493 = load i16* %ry, align 2
  %5494 = sext i16 %5493 to i32
  %5495 = load i16* %rx0, align 2
  %5496 = sext i16 %5495 to i32
  %5497 = add nsw i32 %5496, 12
  %5498 = load i32* %img_height, align 4
  %5499 = load i32* %img_width, align 4
  %5500 = call zeroext i16 %5491(i16** %5492, i32 %5494, i32 %5497, i32 %5498, i32 %5499)
  %5501 = zext i16 %5500 to i32
  %5502 = mul nsw i32 %5490, %5501
  %5503 = add nsw i32 %5488, %5502
  %5504 = load i32* @wp_luma_round, align 4
  %5505 = mul nsw i32 2, %5504
  %5506 = add nsw i32 %5503, %5505
  %5507 = load i32* @luma_log_weight_denom, align 4
  %5508 = add nsw i32 %5507, 1
  %5509 = ashr i32 %5506, %5508
  %5510 = load i16* %offsetBi, align 2
  %5511 = sext i16 %5510 to i32
  %5512 = add nsw i32 %5509, %5511
  br label %5513

; <label>:5513                                    ; preds = %5474, %5470
  %5514 = phi i32 [ %5473, %5470 ], [ %5512, %5474 ]
  br label %5515

; <label>:5515                                    ; preds = %5513, %5426
  %5516 = phi i32 [ 0, %5426 ], [ %5514, %5513 ]
  store i32 %5516, i32* %weightedpel, align 4
  %5517 = load i16* %x0, align 2
  %5518 = sext i16 %5517 to i32
  %5519 = add nsw i32 %5518, 3
  %5520 = sext i32 %5519 to i64
  %5521 = load i16** %orig_line, align 8
  %5522 = getelementptr inbounds i16* %5521, i64 %5520
  %5523 = load i16* %5522, align 2
  %5524 = zext i16 %5523 to i32
  %5525 = load i32* %weightedpel, align 4
  %5526 = sub nsw i32 %5524, %5525
  %5527 = load i32** %d, align 8
  %5528 = getelementptr inbounds i32* %5527, i32 1
  store i32* %5528, i32** %d, align 8
  store i32 %5526, i32* %5527, align 4
  %5529 = load i16* %sy0, align 2
  %5530 = sext i16 %5529 to i32
  %5531 = add nsw i32 %5530, 12
  %5532 = trunc i32 %5531 to i16
  store i16 %5532, i16* %sy, align 2
  %5533 = load i16* %y0, align 2
  %5534 = sext i16 %5533 to i32
  %5535 = add nsw i32 %5534, 3
  %5536 = sext i32 %5535 to i64
  %5537 = load i16*** %1, align 8
  %5538 = getelementptr inbounds i16** %5537, i64 %5536
  %5539 = load i16** %5538, align 8
  store i16* %5539, i16** %orig_line, align 8
  %5540 = load i16* %ry0, align 2
  %5541 = sext i16 %5540 to i32
  %5542 = add nsw i32 %5541, 12
  %5543 = trunc i32 %5542 to i16
  store i16 %5543, i16* %ry, align 2
  %5544 = load i16* %weightSpic, align 2
  %5545 = sext i16 %5544 to i32
  %5546 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5547 = load i16*** %ref1_pic, align 8
  %5548 = load i16* %sy, align 2
  %5549 = sext i16 %5548 to i32
  %5550 = load i16* %sx0, align 2
  %5551 = sext i16 %5550 to i32
  %5552 = load i32* %img_height, align 4
  %5553 = load i32* %img_width, align 4
  %5554 = call zeroext i16 %5546(i16** %5547, i32 %5549, i32 %5551, i32 %5552, i32 %5553)
  %5555 = zext i16 %5554 to i32
  %5556 = mul nsw i32 %5545, %5555
  %5557 = load i16* %weightRpic, align 2
  %5558 = sext i16 %5557 to i32
  %5559 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5560 = load i16*** %ref2_pic, align 8
  %5561 = load i16* %ry, align 2
  %5562 = sext i16 %5561 to i32
  %5563 = load i16* %rx0, align 2
  %5564 = sext i16 %5563 to i32
  %5565 = load i32* %img_height, align 4
  %5566 = load i32* %img_width, align 4
  %5567 = call zeroext i16 %5559(i16** %5560, i32 %5562, i32 %5564, i32 %5565, i32 %5566)
  %5568 = zext i16 %5567 to i32
  %5569 = mul nsw i32 %5558, %5568
  %5570 = add nsw i32 %5556, %5569
  %5571 = load i32* @wp_luma_round, align 4
  %5572 = mul nsw i32 2, %5571
  %5573 = add nsw i32 %5570, %5572
  %5574 = load i32* @luma_log_weight_denom, align 4
  %5575 = add nsw i32 %5574, 1
  %5576 = ashr i32 %5573, %5575
  %5577 = load i16* %offsetBi, align 2
  %5578 = sext i16 %5577 to i32
  %5579 = add nsw i32 %5576, %5578
  %5580 = icmp slt i32 %5579, 0
  br i1 %5580, label %5581, label %5582

; <label>:5581                                    ; preds = %5515
  br label %5666

; <label>:5582                                    ; preds = %5515
  %5583 = load i16* %weightSpic, align 2
  %5584 = sext i16 %5583 to i32
  %5585 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5586 = load i16*** %ref1_pic, align 8
  %5587 = load i16* %sy, align 2
  %5588 = sext i16 %5587 to i32
  %5589 = load i16* %sx0, align 2
  %5590 = sext i16 %5589 to i32
  %5591 = load i32* %img_height, align 4
  %5592 = load i32* %img_width, align 4
  %5593 = call zeroext i16 %5585(i16** %5586, i32 %5588, i32 %5590, i32 %5591, i32 %5592)
  %5594 = zext i16 %5593 to i32
  %5595 = mul nsw i32 %5584, %5594
  %5596 = load i16* %weightRpic, align 2
  %5597 = sext i16 %5596 to i32
  %5598 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5599 = load i16*** %ref2_pic, align 8
  %5600 = load i16* %ry, align 2
  %5601 = sext i16 %5600 to i32
  %5602 = load i16* %rx0, align 2
  %5603 = sext i16 %5602 to i32
  %5604 = load i32* %img_height, align 4
  %5605 = load i32* %img_width, align 4
  %5606 = call zeroext i16 %5598(i16** %5599, i32 %5601, i32 %5603, i32 %5604, i32 %5605)
  %5607 = zext i16 %5606 to i32
  %5608 = mul nsw i32 %5597, %5607
  %5609 = add nsw i32 %5595, %5608
  %5610 = load i32* @wp_luma_round, align 4
  %5611 = mul nsw i32 2, %5610
  %5612 = add nsw i32 %5609, %5611
  %5613 = load i32* @luma_log_weight_denom, align 4
  %5614 = add nsw i32 %5613, 1
  %5615 = ashr i32 %5612, %5614
  %5616 = load i16* %offsetBi, align 2
  %5617 = sext i16 %5616 to i32
  %5618 = add nsw i32 %5615, %5617
  %5619 = load %struct.ImageParameters** @img, align 8
  %5620 = getelementptr inbounds %struct.ImageParameters* %5619, i32 0, i32 155
  %5621 = load i32* %5620, align 4
  %5622 = icmp sgt i32 %5618, %5621
  br i1 %5622, label %5623, label %5627

; <label>:5623                                    ; preds = %5582
  %5624 = load %struct.ImageParameters** @img, align 8
  %5625 = getelementptr inbounds %struct.ImageParameters* %5624, i32 0, i32 155
  %5626 = load i32* %5625, align 4
  br label %5664

; <label>:5627                                    ; preds = %5582
  %5628 = load i16* %weightSpic, align 2
  %5629 = sext i16 %5628 to i32
  %5630 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5631 = load i16*** %ref1_pic, align 8
  %5632 = load i16* %sy, align 2
  %5633 = sext i16 %5632 to i32
  %5634 = load i16* %sx0, align 2
  %5635 = sext i16 %5634 to i32
  %5636 = load i32* %img_height, align 4
  %5637 = load i32* %img_width, align 4
  %5638 = call zeroext i16 %5630(i16** %5631, i32 %5633, i32 %5635, i32 %5636, i32 %5637)
  %5639 = zext i16 %5638 to i32
  %5640 = mul nsw i32 %5629, %5639
  %5641 = load i16* %weightRpic, align 2
  %5642 = sext i16 %5641 to i32
  %5643 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5644 = load i16*** %ref2_pic, align 8
  %5645 = load i16* %ry, align 2
  %5646 = sext i16 %5645 to i32
  %5647 = load i16* %rx0, align 2
  %5648 = sext i16 %5647 to i32
  %5649 = load i32* %img_height, align 4
  %5650 = load i32* %img_width, align 4
  %5651 = call zeroext i16 %5643(i16** %5644, i32 %5646, i32 %5648, i32 %5649, i32 %5650)
  %5652 = zext i16 %5651 to i32
  %5653 = mul nsw i32 %5642, %5652
  %5654 = add nsw i32 %5640, %5653
  %5655 = load i32* @wp_luma_round, align 4
  %5656 = mul nsw i32 2, %5655
  %5657 = add nsw i32 %5654, %5656
  %5658 = load i32* @luma_log_weight_denom, align 4
  %5659 = add nsw i32 %5658, 1
  %5660 = ashr i32 %5657, %5659
  %5661 = load i16* %offsetBi, align 2
  %5662 = sext i16 %5661 to i32
  %5663 = add nsw i32 %5660, %5662
  br label %5664

; <label>:5664                                    ; preds = %5627, %5623
  %5665 = phi i32 [ %5626, %5623 ], [ %5663, %5627 ]
  br label %5666

; <label>:5666                                    ; preds = %5664, %5581
  %5667 = phi i32 [ 0, %5581 ], [ %5665, %5664 ]
  store i32 %5667, i32* %weightedpel, align 4
  %5668 = load i16* %x0, align 2
  %5669 = sext i16 %5668 to i64
  %5670 = load i16** %orig_line, align 8
  %5671 = getelementptr inbounds i16* %5670, i64 %5669
  %5672 = load i16* %5671, align 2
  %5673 = zext i16 %5672 to i32
  %5674 = load i32* %weightedpel, align 4
  %5675 = sub nsw i32 %5673, %5674
  %5676 = load i32** %d, align 8
  %5677 = getelementptr inbounds i32* %5676, i32 1
  store i32* %5677, i32** %d, align 8
  store i32 %5675, i32* %5676, align 4
  %5678 = load i16* %weightSpic, align 2
  %5679 = sext i16 %5678 to i32
  %5680 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5681 = load i16*** %ref1_pic, align 8
  %5682 = load i16* %sy, align 2
  %5683 = sext i16 %5682 to i32
  %5684 = load i16* %sx0, align 2
  %5685 = sext i16 %5684 to i32
  %5686 = add nsw i32 %5685, 4
  %5687 = load i32* %img_height, align 4
  %5688 = load i32* %img_width, align 4
  %5689 = call zeroext i16 %5680(i16** %5681, i32 %5683, i32 %5686, i32 %5687, i32 %5688)
  %5690 = zext i16 %5689 to i32
  %5691 = mul nsw i32 %5679, %5690
  %5692 = load i16* %weightRpic, align 2
  %5693 = sext i16 %5692 to i32
  %5694 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5695 = load i16*** %ref2_pic, align 8
  %5696 = load i16* %ry, align 2
  %5697 = sext i16 %5696 to i32
  %5698 = load i16* %rx0, align 2
  %5699 = sext i16 %5698 to i32
  %5700 = add nsw i32 %5699, 4
  %5701 = load i32* %img_height, align 4
  %5702 = load i32* %img_width, align 4
  %5703 = call zeroext i16 %5694(i16** %5695, i32 %5697, i32 %5700, i32 %5701, i32 %5702)
  %5704 = zext i16 %5703 to i32
  %5705 = mul nsw i32 %5693, %5704
  %5706 = add nsw i32 %5691, %5705
  %5707 = load i32* @wp_luma_round, align 4
  %5708 = mul nsw i32 2, %5707
  %5709 = add nsw i32 %5706, %5708
  %5710 = load i32* @luma_log_weight_denom, align 4
  %5711 = add nsw i32 %5710, 1
  %5712 = ashr i32 %5709, %5711
  %5713 = load i16* %offsetBi, align 2
  %5714 = sext i16 %5713 to i32
  %5715 = add nsw i32 %5712, %5714
  %5716 = icmp slt i32 %5715, 0
  br i1 %5716, label %5717, label %5718

; <label>:5717                                    ; preds = %5666
  br label %5806

; <label>:5718                                    ; preds = %5666
  %5719 = load i16* %weightSpic, align 2
  %5720 = sext i16 %5719 to i32
  %5721 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5722 = load i16*** %ref1_pic, align 8
  %5723 = load i16* %sy, align 2
  %5724 = sext i16 %5723 to i32
  %5725 = load i16* %sx0, align 2
  %5726 = sext i16 %5725 to i32
  %5727 = add nsw i32 %5726, 4
  %5728 = load i32* %img_height, align 4
  %5729 = load i32* %img_width, align 4
  %5730 = call zeroext i16 %5721(i16** %5722, i32 %5724, i32 %5727, i32 %5728, i32 %5729)
  %5731 = zext i16 %5730 to i32
  %5732 = mul nsw i32 %5720, %5731
  %5733 = load i16* %weightRpic, align 2
  %5734 = sext i16 %5733 to i32
  %5735 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5736 = load i16*** %ref2_pic, align 8
  %5737 = load i16* %ry, align 2
  %5738 = sext i16 %5737 to i32
  %5739 = load i16* %rx0, align 2
  %5740 = sext i16 %5739 to i32
  %5741 = add nsw i32 %5740, 4
  %5742 = load i32* %img_height, align 4
  %5743 = load i32* %img_width, align 4
  %5744 = call zeroext i16 %5735(i16** %5736, i32 %5738, i32 %5741, i32 %5742, i32 %5743)
  %5745 = zext i16 %5744 to i32
  %5746 = mul nsw i32 %5734, %5745
  %5747 = add nsw i32 %5732, %5746
  %5748 = load i32* @wp_luma_round, align 4
  %5749 = mul nsw i32 2, %5748
  %5750 = add nsw i32 %5747, %5749
  %5751 = load i32* @luma_log_weight_denom, align 4
  %5752 = add nsw i32 %5751, 1
  %5753 = ashr i32 %5750, %5752
  %5754 = load i16* %offsetBi, align 2
  %5755 = sext i16 %5754 to i32
  %5756 = add nsw i32 %5753, %5755
  %5757 = load %struct.ImageParameters** @img, align 8
  %5758 = getelementptr inbounds %struct.ImageParameters* %5757, i32 0, i32 155
  %5759 = load i32* %5758, align 4
  %5760 = icmp sgt i32 %5756, %5759
  br i1 %5760, label %5761, label %5765

; <label>:5761                                    ; preds = %5718
  %5762 = load %struct.ImageParameters** @img, align 8
  %5763 = getelementptr inbounds %struct.ImageParameters* %5762, i32 0, i32 155
  %5764 = load i32* %5763, align 4
  br label %5804

; <label>:5765                                    ; preds = %5718
  %5766 = load i16* %weightSpic, align 2
  %5767 = sext i16 %5766 to i32
  %5768 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5769 = load i16*** %ref1_pic, align 8
  %5770 = load i16* %sy, align 2
  %5771 = sext i16 %5770 to i32
  %5772 = load i16* %sx0, align 2
  %5773 = sext i16 %5772 to i32
  %5774 = add nsw i32 %5773, 4
  %5775 = load i32* %img_height, align 4
  %5776 = load i32* %img_width, align 4
  %5777 = call zeroext i16 %5768(i16** %5769, i32 %5771, i32 %5774, i32 %5775, i32 %5776)
  %5778 = zext i16 %5777 to i32
  %5779 = mul nsw i32 %5767, %5778
  %5780 = load i16* %weightRpic, align 2
  %5781 = sext i16 %5780 to i32
  %5782 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5783 = load i16*** %ref2_pic, align 8
  %5784 = load i16* %ry, align 2
  %5785 = sext i16 %5784 to i32
  %5786 = load i16* %rx0, align 2
  %5787 = sext i16 %5786 to i32
  %5788 = add nsw i32 %5787, 4
  %5789 = load i32* %img_height, align 4
  %5790 = load i32* %img_width, align 4
  %5791 = call zeroext i16 %5782(i16** %5783, i32 %5785, i32 %5788, i32 %5789, i32 %5790)
  %5792 = zext i16 %5791 to i32
  %5793 = mul nsw i32 %5781, %5792
  %5794 = add nsw i32 %5779, %5793
  %5795 = load i32* @wp_luma_round, align 4
  %5796 = mul nsw i32 2, %5795
  %5797 = add nsw i32 %5794, %5796
  %5798 = load i32* @luma_log_weight_denom, align 4
  %5799 = add nsw i32 %5798, 1
  %5800 = ashr i32 %5797, %5799
  %5801 = load i16* %offsetBi, align 2
  %5802 = sext i16 %5801 to i32
  %5803 = add nsw i32 %5800, %5802
  br label %5804

; <label>:5804                                    ; preds = %5765, %5761
  %5805 = phi i32 [ %5764, %5761 ], [ %5803, %5765 ]
  br label %5806

; <label>:5806                                    ; preds = %5804, %5717
  %5807 = phi i32 [ 0, %5717 ], [ %5805, %5804 ]
  store i32 %5807, i32* %weightedpel, align 4
  %5808 = load i16* %x0, align 2
  %5809 = sext i16 %5808 to i32
  %5810 = add nsw i32 %5809, 1
  %5811 = sext i32 %5810 to i64
  %5812 = load i16** %orig_line, align 8
  %5813 = getelementptr inbounds i16* %5812, i64 %5811
  %5814 = load i16* %5813, align 2
  %5815 = zext i16 %5814 to i32
  %5816 = load i32* %weightedpel, align 4
  %5817 = sub nsw i32 %5815, %5816
  %5818 = load i32** %d, align 8
  %5819 = getelementptr inbounds i32* %5818, i32 1
  store i32* %5819, i32** %d, align 8
  store i32 %5817, i32* %5818, align 4
  %5820 = load i16* %weightSpic, align 2
  %5821 = sext i16 %5820 to i32
  %5822 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5823 = load i16*** %ref1_pic, align 8
  %5824 = load i16* %sy, align 2
  %5825 = sext i16 %5824 to i32
  %5826 = load i16* %sx0, align 2
  %5827 = sext i16 %5826 to i32
  %5828 = add nsw i32 %5827, 8
  %5829 = load i32* %img_height, align 4
  %5830 = load i32* %img_width, align 4
  %5831 = call zeroext i16 %5822(i16** %5823, i32 %5825, i32 %5828, i32 %5829, i32 %5830)
  %5832 = zext i16 %5831 to i32
  %5833 = mul nsw i32 %5821, %5832
  %5834 = load i16* %weightRpic, align 2
  %5835 = sext i16 %5834 to i32
  %5836 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5837 = load i16*** %ref2_pic, align 8
  %5838 = load i16* %ry, align 2
  %5839 = sext i16 %5838 to i32
  %5840 = load i16* %rx0, align 2
  %5841 = sext i16 %5840 to i32
  %5842 = add nsw i32 %5841, 8
  %5843 = load i32* %img_height, align 4
  %5844 = load i32* %img_width, align 4
  %5845 = call zeroext i16 %5836(i16** %5837, i32 %5839, i32 %5842, i32 %5843, i32 %5844)
  %5846 = zext i16 %5845 to i32
  %5847 = mul nsw i32 %5835, %5846
  %5848 = add nsw i32 %5833, %5847
  %5849 = load i32* @wp_luma_round, align 4
  %5850 = mul nsw i32 2, %5849
  %5851 = add nsw i32 %5848, %5850
  %5852 = load i32* @luma_log_weight_denom, align 4
  %5853 = add nsw i32 %5852, 1
  %5854 = ashr i32 %5851, %5853
  %5855 = load i16* %offsetBi, align 2
  %5856 = sext i16 %5855 to i32
  %5857 = add nsw i32 %5854, %5856
  %5858 = icmp slt i32 %5857, 0
  br i1 %5858, label %5859, label %5860

; <label>:5859                                    ; preds = %5806
  br label %5948

; <label>:5860                                    ; preds = %5806
  %5861 = load i16* %weightSpic, align 2
  %5862 = sext i16 %5861 to i32
  %5863 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5864 = load i16*** %ref1_pic, align 8
  %5865 = load i16* %sy, align 2
  %5866 = sext i16 %5865 to i32
  %5867 = load i16* %sx0, align 2
  %5868 = sext i16 %5867 to i32
  %5869 = add nsw i32 %5868, 8
  %5870 = load i32* %img_height, align 4
  %5871 = load i32* %img_width, align 4
  %5872 = call zeroext i16 %5863(i16** %5864, i32 %5866, i32 %5869, i32 %5870, i32 %5871)
  %5873 = zext i16 %5872 to i32
  %5874 = mul nsw i32 %5862, %5873
  %5875 = load i16* %weightRpic, align 2
  %5876 = sext i16 %5875 to i32
  %5877 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5878 = load i16*** %ref2_pic, align 8
  %5879 = load i16* %ry, align 2
  %5880 = sext i16 %5879 to i32
  %5881 = load i16* %rx0, align 2
  %5882 = sext i16 %5881 to i32
  %5883 = add nsw i32 %5882, 8
  %5884 = load i32* %img_height, align 4
  %5885 = load i32* %img_width, align 4
  %5886 = call zeroext i16 %5877(i16** %5878, i32 %5880, i32 %5883, i32 %5884, i32 %5885)
  %5887 = zext i16 %5886 to i32
  %5888 = mul nsw i32 %5876, %5887
  %5889 = add nsw i32 %5874, %5888
  %5890 = load i32* @wp_luma_round, align 4
  %5891 = mul nsw i32 2, %5890
  %5892 = add nsw i32 %5889, %5891
  %5893 = load i32* @luma_log_weight_denom, align 4
  %5894 = add nsw i32 %5893, 1
  %5895 = ashr i32 %5892, %5894
  %5896 = load i16* %offsetBi, align 2
  %5897 = sext i16 %5896 to i32
  %5898 = add nsw i32 %5895, %5897
  %5899 = load %struct.ImageParameters** @img, align 8
  %5900 = getelementptr inbounds %struct.ImageParameters* %5899, i32 0, i32 155
  %5901 = load i32* %5900, align 4
  %5902 = icmp sgt i32 %5898, %5901
  br i1 %5902, label %5903, label %5907

; <label>:5903                                    ; preds = %5860
  %5904 = load %struct.ImageParameters** @img, align 8
  %5905 = getelementptr inbounds %struct.ImageParameters* %5904, i32 0, i32 155
  %5906 = load i32* %5905, align 4
  br label %5946

; <label>:5907                                    ; preds = %5860
  %5908 = load i16* %weightSpic, align 2
  %5909 = sext i16 %5908 to i32
  %5910 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5911 = load i16*** %ref1_pic, align 8
  %5912 = load i16* %sy, align 2
  %5913 = sext i16 %5912 to i32
  %5914 = load i16* %sx0, align 2
  %5915 = sext i16 %5914 to i32
  %5916 = add nsw i32 %5915, 8
  %5917 = load i32* %img_height, align 4
  %5918 = load i32* %img_width, align 4
  %5919 = call zeroext i16 %5910(i16** %5911, i32 %5913, i32 %5916, i32 %5917, i32 %5918)
  %5920 = zext i16 %5919 to i32
  %5921 = mul nsw i32 %5909, %5920
  %5922 = load i16* %weightRpic, align 2
  %5923 = sext i16 %5922 to i32
  %5924 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5925 = load i16*** %ref2_pic, align 8
  %5926 = load i16* %ry, align 2
  %5927 = sext i16 %5926 to i32
  %5928 = load i16* %rx0, align 2
  %5929 = sext i16 %5928 to i32
  %5930 = add nsw i32 %5929, 8
  %5931 = load i32* %img_height, align 4
  %5932 = load i32* %img_width, align 4
  %5933 = call zeroext i16 %5924(i16** %5925, i32 %5927, i32 %5930, i32 %5931, i32 %5932)
  %5934 = zext i16 %5933 to i32
  %5935 = mul nsw i32 %5923, %5934
  %5936 = add nsw i32 %5921, %5935
  %5937 = load i32* @wp_luma_round, align 4
  %5938 = mul nsw i32 2, %5937
  %5939 = add nsw i32 %5936, %5938
  %5940 = load i32* @luma_log_weight_denom, align 4
  %5941 = add nsw i32 %5940, 1
  %5942 = ashr i32 %5939, %5941
  %5943 = load i16* %offsetBi, align 2
  %5944 = sext i16 %5943 to i32
  %5945 = add nsw i32 %5942, %5944
  br label %5946

; <label>:5946                                    ; preds = %5907, %5903
  %5947 = phi i32 [ %5906, %5903 ], [ %5945, %5907 ]
  br label %5948

; <label>:5948                                    ; preds = %5946, %5859
  %5949 = phi i32 [ 0, %5859 ], [ %5947, %5946 ]
  store i32 %5949, i32* %weightedpel, align 4
  %5950 = load i16* %x0, align 2
  %5951 = sext i16 %5950 to i32
  %5952 = add nsw i32 %5951, 2
  %5953 = sext i32 %5952 to i64
  %5954 = load i16** %orig_line, align 8
  %5955 = getelementptr inbounds i16* %5954, i64 %5953
  %5956 = load i16* %5955, align 2
  %5957 = zext i16 %5956 to i32
  %5958 = load i32* %weightedpel, align 4
  %5959 = sub nsw i32 %5957, %5958
  %5960 = load i32** %d, align 8
  %5961 = getelementptr inbounds i32* %5960, i32 1
  store i32* %5961, i32** %d, align 8
  store i32 %5959, i32* %5960, align 4
  %5962 = load i16* %weightSpic, align 2
  %5963 = sext i16 %5962 to i32
  %5964 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %5965 = load i16*** %ref1_pic, align 8
  %5966 = load i16* %sy, align 2
  %5967 = sext i16 %5966 to i32
  %5968 = load i16* %sx0, align 2
  %5969 = sext i16 %5968 to i32
  %5970 = add nsw i32 %5969, 12
  %5971 = load i32* %img_height, align 4
  %5972 = load i32* %img_width, align 4
  %5973 = call zeroext i16 %5964(i16** %5965, i32 %5967, i32 %5970, i32 %5971, i32 %5972)
  %5974 = zext i16 %5973 to i32
  %5975 = mul nsw i32 %5963, %5974
  %5976 = load i16* %weightRpic, align 2
  %5977 = sext i16 %5976 to i32
  %5978 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %5979 = load i16*** %ref2_pic, align 8
  %5980 = load i16* %ry, align 2
  %5981 = sext i16 %5980 to i32
  %5982 = load i16* %rx0, align 2
  %5983 = sext i16 %5982 to i32
  %5984 = add nsw i32 %5983, 12
  %5985 = load i32* %img_height, align 4
  %5986 = load i32* %img_width, align 4
  %5987 = call zeroext i16 %5978(i16** %5979, i32 %5981, i32 %5984, i32 %5985, i32 %5986)
  %5988 = zext i16 %5987 to i32
  %5989 = mul nsw i32 %5977, %5988
  %5990 = add nsw i32 %5975, %5989
  %5991 = load i32* @wp_luma_round, align 4
  %5992 = mul nsw i32 2, %5991
  %5993 = add nsw i32 %5990, %5992
  %5994 = load i32* @luma_log_weight_denom, align 4
  %5995 = add nsw i32 %5994, 1
  %5996 = ashr i32 %5993, %5995
  %5997 = load i16* %offsetBi, align 2
  %5998 = sext i16 %5997 to i32
  %5999 = add nsw i32 %5996, %5998
  %6000 = icmp slt i32 %5999, 0
  br i1 %6000, label %6001, label %6002

; <label>:6001                                    ; preds = %5948
  br label %6090

; <label>:6002                                    ; preds = %5948
  %6003 = load i16* %weightSpic, align 2
  %6004 = sext i16 %6003 to i32
  %6005 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6006 = load i16*** %ref1_pic, align 8
  %6007 = load i16* %sy, align 2
  %6008 = sext i16 %6007 to i32
  %6009 = load i16* %sx0, align 2
  %6010 = sext i16 %6009 to i32
  %6011 = add nsw i32 %6010, 12
  %6012 = load i32* %img_height, align 4
  %6013 = load i32* %img_width, align 4
  %6014 = call zeroext i16 %6005(i16** %6006, i32 %6008, i32 %6011, i32 %6012, i32 %6013)
  %6015 = zext i16 %6014 to i32
  %6016 = mul nsw i32 %6004, %6015
  %6017 = load i16* %weightRpic, align 2
  %6018 = sext i16 %6017 to i32
  %6019 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6020 = load i16*** %ref2_pic, align 8
  %6021 = load i16* %ry, align 2
  %6022 = sext i16 %6021 to i32
  %6023 = load i16* %rx0, align 2
  %6024 = sext i16 %6023 to i32
  %6025 = add nsw i32 %6024, 12
  %6026 = load i32* %img_height, align 4
  %6027 = load i32* %img_width, align 4
  %6028 = call zeroext i16 %6019(i16** %6020, i32 %6022, i32 %6025, i32 %6026, i32 %6027)
  %6029 = zext i16 %6028 to i32
  %6030 = mul nsw i32 %6018, %6029
  %6031 = add nsw i32 %6016, %6030
  %6032 = load i32* @wp_luma_round, align 4
  %6033 = mul nsw i32 2, %6032
  %6034 = add nsw i32 %6031, %6033
  %6035 = load i32* @luma_log_weight_denom, align 4
  %6036 = add nsw i32 %6035, 1
  %6037 = ashr i32 %6034, %6036
  %6038 = load i16* %offsetBi, align 2
  %6039 = sext i16 %6038 to i32
  %6040 = add nsw i32 %6037, %6039
  %6041 = load %struct.ImageParameters** @img, align 8
  %6042 = getelementptr inbounds %struct.ImageParameters* %6041, i32 0, i32 155
  %6043 = load i32* %6042, align 4
  %6044 = icmp sgt i32 %6040, %6043
  br i1 %6044, label %6045, label %6049

; <label>:6045                                    ; preds = %6002
  %6046 = load %struct.ImageParameters** @img, align 8
  %6047 = getelementptr inbounds %struct.ImageParameters* %6046, i32 0, i32 155
  %6048 = load i32* %6047, align 4
  br label %6088

; <label>:6049                                    ; preds = %6002
  %6050 = load i16* %weightSpic, align 2
  %6051 = sext i16 %6050 to i32
  %6052 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6053 = load i16*** %ref1_pic, align 8
  %6054 = load i16* %sy, align 2
  %6055 = sext i16 %6054 to i32
  %6056 = load i16* %sx0, align 2
  %6057 = sext i16 %6056 to i32
  %6058 = add nsw i32 %6057, 12
  %6059 = load i32* %img_height, align 4
  %6060 = load i32* %img_width, align 4
  %6061 = call zeroext i16 %6052(i16** %6053, i32 %6055, i32 %6058, i32 %6059, i32 %6060)
  %6062 = zext i16 %6061 to i32
  %6063 = mul nsw i32 %6051, %6062
  %6064 = load i16* %weightRpic, align 2
  %6065 = sext i16 %6064 to i32
  %6066 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6067 = load i16*** %ref2_pic, align 8
  %6068 = load i16* %ry, align 2
  %6069 = sext i16 %6068 to i32
  %6070 = load i16* %rx0, align 2
  %6071 = sext i16 %6070 to i32
  %6072 = add nsw i32 %6071, 12
  %6073 = load i32* %img_height, align 4
  %6074 = load i32* %img_width, align 4
  %6075 = call zeroext i16 %6066(i16** %6067, i32 %6069, i32 %6072, i32 %6073, i32 %6074)
  %6076 = zext i16 %6075 to i32
  %6077 = mul nsw i32 %6065, %6076
  %6078 = add nsw i32 %6063, %6077
  %6079 = load i32* @wp_luma_round, align 4
  %6080 = mul nsw i32 2, %6079
  %6081 = add nsw i32 %6078, %6080
  %6082 = load i32* @luma_log_weight_denom, align 4
  %6083 = add nsw i32 %6082, 1
  %6084 = ashr i32 %6081, %6083
  %6085 = load i16* %offsetBi, align 2
  %6086 = sext i16 %6085 to i32
  %6087 = add nsw i32 %6084, %6086
  br label %6088

; <label>:6088                                    ; preds = %6049, %6045
  %6089 = phi i32 [ %6048, %6045 ], [ %6087, %6049 ]
  br label %6090

; <label>:6090                                    ; preds = %6088, %6001
  %6091 = phi i32 [ 0, %6001 ], [ %6089, %6088 ]
  store i32 %6091, i32* %weightedpel, align 4
  %6092 = load i16* %x0, align 2
  %6093 = sext i16 %6092 to i32
  %6094 = add nsw i32 %6093, 3
  %6095 = sext i32 %6094 to i64
  %6096 = load i16** %orig_line, align 8
  %6097 = getelementptr inbounds i16* %6096, i64 %6095
  %6098 = load i16* %6097, align 2
  %6099 = zext i16 %6098 to i32
  %6100 = load i32* %weightedpel, align 4
  %6101 = sub nsw i32 %6099, %6100
  %6102 = load i32** %d, align 8
  store i32 %6101, i32* %6102, align 4
  %6103 = load %struct.InputParameters** @input, align 8
  %6104 = getelementptr inbounds %struct.InputParameters* %6103, i32 0, i32 123
  %6105 = load i32* %6104, align 4
  %6106 = icmp ne i32 %6105, 0
  br i1 %6106, label %6122, label %6107

; <label>:6107                                    ; preds = %6090
  %6108 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  %6109 = load %struct.InputParameters** @input, align 8
  %6110 = getelementptr inbounds %struct.InputParameters* %6109, i32 0, i32 6
  %6111 = load i32* %6110, align 4
  %6112 = call i32 @SATD(i32* %6108, i32 %6111)
  %6113 = load i16* %mcost, align 2
  %6114 = sext i16 %6113 to i32
  %6115 = add nsw i32 %6114, %6112
  %6116 = trunc i32 %6115 to i16
  store i16 %6116, i16* %mcost, align 2
  %6117 = sext i16 %6116 to i32
  %6118 = load i32* %15, align 4
  %6119 = icmp sgt i32 %6117, %6118
  br i1 %6119, label %6120, label %6121

; <label>:6120                                    ; preds = %6107
  store i16 1, i16* %abort_search, align 2
  br label %6163

; <label>:6121                                    ; preds = %6107
  br label %6157

; <label>:6122                                    ; preds = %6090
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %6123

; <label>:6123                                    ; preds = %6153, %6122
  %6124 = load i32* %j, align 4
  %6125 = icmp slt i32 %6124, 4
  br i1 %6125, label %6126, label %6156

; <label>:6126                                    ; preds = %6123
  store i32 0, i32* %i, align 4
  br label %6127

; <label>:6127                                    ; preds = %6147, %6126
  %6128 = load i32* %i, align 4
  %6129 = icmp slt i32 %6128, 4
  br i1 %6129, label %6130, label %6152

; <label>:6130                                    ; preds = %6127
  %6131 = load i32* %k, align 4
  %6132 = sext i32 %6131 to i64
  %6133 = getelementptr inbounds [16 x i32]* %diff, i32 0, i64 %6132
  %6134 = load i32* %6133, align 4
  %6135 = load i16* %x0, align 2
  %6136 = sext i16 %6135 to i32
  %6137 = load i32* %i, align 4
  %6138 = add nsw i32 %6136, %6137
  %6139 = sext i32 %6138 to i64
  %6140 = load i16* %y0, align 2
  %6141 = sext i16 %6140 to i32
  %6142 = load i32* %j, align 4
  %6143 = add nsw i32 %6141, %6142
  %6144 = sext i32 %6143 to i64
  %6145 = getelementptr inbounds [16 x [16 x i32]]* %curr_diff, i32 0, i64 %6144
  %6146 = getelementptr inbounds [16 x i32]* %6145, i32 0, i64 %6139
  store i32 %6134, i32* %6146, align 4
  br label %6147

; <label>:6147                                    ; preds = %6130
  %6148 = load i32* %i, align 4
  %6149 = add nsw i32 %6148, 1
  store i32 %6149, i32* %i, align 4
  %6150 = load i32* %k, align 4
  %6151 = add nsw i32 %6150, 1
  store i32 %6151, i32* %k, align 4
  br label %6127

; <label>:6152                                    ; preds = %6127
  br label %6153

; <label>:6153                                    ; preds = %6152
  %6154 = load i32* %j, align 4
  %6155 = add nsw i32 %6154, 1
  store i32 %6155, i32* %j, align 4
  br label %6123

; <label>:6156                                    ; preds = %6123
  br label %6157

; <label>:6157                                    ; preds = %6156, %6121
  br label %6158

; <label>:6158                                    ; preds = %6157
  %6159 = load i16* %x0, align 2
  %6160 = sext i16 %6159 to i32
  %6161 = add nsw i32 %6160, 4
  %6162 = trunc i32 %6161 to i16
  store i16 %6162, i16* %x0, align 2
  br label %3784

; <label>:6163                                    ; preds = %6120, %3784
  br label %6848

; <label>:6164                                    ; preds = %3761
  store i16 0, i16* %x0, align 2
  br label %6165

; <label>:6165                                    ; preds = %6842, %6164
  %6166 = load i16* %x0, align 2
  %6167 = sext i16 %6166 to i32
  %6168 = load i16* %blocksize_x, align 2
  %6169 = sext i16 %6168 to i32
  %6170 = icmp slt i32 %6167, %6169
  br i1 %6170, label %6171, label %6847

; <label>:6171                                    ; preds = %6165
  %6172 = load i32* %4, align 4
  %6173 = load i16* %x0, align 2
  %6174 = sext i16 %6173 to i32
  %6175 = add nsw i32 %6172, %6174
  %6176 = shl i32 %6175, 2
  %6177 = load i16** %11, align 8
  %6178 = load i16* %6177, align 2
  %6179 = sext i16 %6178 to i32
  %6180 = add nsw i32 %6176, %6179
  %6181 = trunc i32 %6180 to i16
  store i16 %6181, i16* %sx0, align 2
  %6182 = load i32* %4, align 4
  %6183 = load i16* %x0, align 2
  %6184 = sext i16 %6183 to i32
  %6185 = add nsw i32 %6182, %6184
  %6186 = shl i32 %6185, 2
  %6187 = load i16* %cand_mv_x, align 2
  %6188 = sext i16 %6187 to i32
  %6189 = add nsw i32 %6186, %6188
  %6190 = trunc i32 %6189 to i16
  store i16 %6190, i16* %rx0, align 2
  %6191 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  store i32* %6191, i32** %d, align 8
  %6192 = load i16* %sy0, align 2
  store i16 %6192, i16* %sy, align 2
  %6193 = load i16* %ry0, align 2
  store i16 %6193, i16* %ry, align 2
  %6194 = load i16* %y0, align 2
  %6195 = sext i16 %6194 to i64
  %6196 = load i16*** %1, align 8
  %6197 = getelementptr inbounds i16** %6196, i64 %6195
  %6198 = load i16** %6197, align 8
  store i16* %6198, i16** %orig_line, align 8
  %6199 = load i16* %x0, align 2
  %6200 = sext i16 %6199 to i64
  %6201 = load i16** %orig_line, align 8
  %6202 = getelementptr inbounds i16* %6201, i64 %6200
  %6203 = load i16* %6202, align 2
  %6204 = zext i16 %6203 to i32
  %6205 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6206 = load i16*** %ref1_pic, align 8
  %6207 = load i16* %sy, align 2
  %6208 = sext i16 %6207 to i32
  %6209 = load i16* %sx0, align 2
  %6210 = sext i16 %6209 to i32
  %6211 = load i32* %img_height, align 4
  %6212 = load i32* %img_width, align 4
  %6213 = call zeroext i16 %6205(i16** %6206, i32 %6208, i32 %6210, i32 %6211, i32 %6212)
  %6214 = zext i16 %6213 to i32
  %6215 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6216 = load i16*** %ref2_pic, align 8
  %6217 = load i16* %ry, align 2
  %6218 = sext i16 %6217 to i32
  %6219 = load i16* %rx0, align 2
  %6220 = sext i16 %6219 to i32
  %6221 = load i32* %img_height, align 4
  %6222 = load i32* %img_width, align 4
  %6223 = call zeroext i16 %6215(i16** %6216, i32 %6218, i32 %6220, i32 %6221, i32 %6222)
  %6224 = zext i16 %6223 to i32
  %6225 = add nsw i32 %6214, %6224
  %6226 = ashr i32 %6225, 1
  %6227 = sub nsw i32 %6204, %6226
  %6228 = load i32** %d, align 8
  %6229 = getelementptr inbounds i32* %6228, i32 1
  store i32* %6229, i32** %d, align 8
  store i32 %6227, i32* %6228, align 4
  %6230 = load i16* %x0, align 2
  %6231 = sext i16 %6230 to i32
  %6232 = add nsw i32 %6231, 1
  %6233 = sext i32 %6232 to i64
  %6234 = load i16** %orig_line, align 8
  %6235 = getelementptr inbounds i16* %6234, i64 %6233
  %6236 = load i16* %6235, align 2
  %6237 = zext i16 %6236 to i32
  %6238 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6239 = load i16*** %ref1_pic, align 8
  %6240 = load i16* %sy, align 2
  %6241 = sext i16 %6240 to i32
  %6242 = load i16* %sx0, align 2
  %6243 = sext i16 %6242 to i32
  %6244 = add nsw i32 %6243, 4
  %6245 = load i32* %img_height, align 4
  %6246 = load i32* %img_width, align 4
  %6247 = call zeroext i16 %6238(i16** %6239, i32 %6241, i32 %6244, i32 %6245, i32 %6246)
  %6248 = zext i16 %6247 to i32
  %6249 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6250 = load i16*** %ref2_pic, align 8
  %6251 = load i16* %ry, align 2
  %6252 = sext i16 %6251 to i32
  %6253 = load i16* %rx0, align 2
  %6254 = sext i16 %6253 to i32
  %6255 = add nsw i32 %6254, 4
  %6256 = load i32* %img_height, align 4
  %6257 = load i32* %img_width, align 4
  %6258 = call zeroext i16 %6249(i16** %6250, i32 %6252, i32 %6255, i32 %6256, i32 %6257)
  %6259 = zext i16 %6258 to i32
  %6260 = add nsw i32 %6248, %6259
  %6261 = ashr i32 %6260, 1
  %6262 = sub nsw i32 %6237, %6261
  %6263 = load i32** %d, align 8
  %6264 = getelementptr inbounds i32* %6263, i32 1
  store i32* %6264, i32** %d, align 8
  store i32 %6262, i32* %6263, align 4
  %6265 = load i16* %x0, align 2
  %6266 = sext i16 %6265 to i32
  %6267 = add nsw i32 %6266, 2
  %6268 = sext i32 %6267 to i64
  %6269 = load i16** %orig_line, align 8
  %6270 = getelementptr inbounds i16* %6269, i64 %6268
  %6271 = load i16* %6270, align 2
  %6272 = zext i16 %6271 to i32
  %6273 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6274 = load i16*** %ref1_pic, align 8
  %6275 = load i16* %sy, align 2
  %6276 = sext i16 %6275 to i32
  %6277 = load i16* %sx0, align 2
  %6278 = sext i16 %6277 to i32
  %6279 = add nsw i32 %6278, 8
  %6280 = load i32* %img_height, align 4
  %6281 = load i32* %img_width, align 4
  %6282 = call zeroext i16 %6273(i16** %6274, i32 %6276, i32 %6279, i32 %6280, i32 %6281)
  %6283 = zext i16 %6282 to i32
  %6284 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6285 = load i16*** %ref2_pic, align 8
  %6286 = load i16* %ry, align 2
  %6287 = sext i16 %6286 to i32
  %6288 = load i16* %rx0, align 2
  %6289 = sext i16 %6288 to i32
  %6290 = add nsw i32 %6289, 8
  %6291 = load i32* %img_height, align 4
  %6292 = load i32* %img_width, align 4
  %6293 = call zeroext i16 %6284(i16** %6285, i32 %6287, i32 %6290, i32 %6291, i32 %6292)
  %6294 = zext i16 %6293 to i32
  %6295 = add nsw i32 %6283, %6294
  %6296 = ashr i32 %6295, 1
  %6297 = sub nsw i32 %6272, %6296
  %6298 = load i32** %d, align 8
  %6299 = getelementptr inbounds i32* %6298, i32 1
  store i32* %6299, i32** %d, align 8
  store i32 %6297, i32* %6298, align 4
  %6300 = load i16* %x0, align 2
  %6301 = sext i16 %6300 to i32
  %6302 = add nsw i32 %6301, 3
  %6303 = sext i32 %6302 to i64
  %6304 = load i16** %orig_line, align 8
  %6305 = getelementptr inbounds i16* %6304, i64 %6303
  %6306 = load i16* %6305, align 2
  %6307 = zext i16 %6306 to i32
  %6308 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6309 = load i16*** %ref1_pic, align 8
  %6310 = load i16* %sy, align 2
  %6311 = sext i16 %6310 to i32
  %6312 = load i16* %sx0, align 2
  %6313 = sext i16 %6312 to i32
  %6314 = add nsw i32 %6313, 12
  %6315 = load i32* %img_height, align 4
  %6316 = load i32* %img_width, align 4
  %6317 = call zeroext i16 %6308(i16** %6309, i32 %6311, i32 %6314, i32 %6315, i32 %6316)
  %6318 = zext i16 %6317 to i32
  %6319 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6320 = load i16*** %ref2_pic, align 8
  %6321 = load i16* %ry, align 2
  %6322 = sext i16 %6321 to i32
  %6323 = load i16* %rx0, align 2
  %6324 = sext i16 %6323 to i32
  %6325 = add nsw i32 %6324, 12
  %6326 = load i32* %img_height, align 4
  %6327 = load i32* %img_width, align 4
  %6328 = call zeroext i16 %6319(i16** %6320, i32 %6322, i32 %6325, i32 %6326, i32 %6327)
  %6329 = zext i16 %6328 to i32
  %6330 = add nsw i32 %6318, %6329
  %6331 = ashr i32 %6330, 1
  %6332 = sub nsw i32 %6307, %6331
  %6333 = load i32** %d, align 8
  %6334 = getelementptr inbounds i32* %6333, i32 1
  store i32* %6334, i32** %d, align 8
  store i32 %6332, i32* %6333, align 4
  %6335 = load i16* %sy0, align 2
  %6336 = sext i16 %6335 to i32
  %6337 = add nsw i32 %6336, 4
  %6338 = trunc i32 %6337 to i16
  store i16 %6338, i16* %sy, align 2
  %6339 = load i16* %ry0, align 2
  %6340 = sext i16 %6339 to i32
  %6341 = add nsw i32 %6340, 4
  %6342 = trunc i32 %6341 to i16
  store i16 %6342, i16* %ry, align 2
  %6343 = load i16* %y0, align 2
  %6344 = sext i16 %6343 to i32
  %6345 = add nsw i32 %6344, 1
  %6346 = sext i32 %6345 to i64
  %6347 = load i16*** %1, align 8
  %6348 = getelementptr inbounds i16** %6347, i64 %6346
  %6349 = load i16** %6348, align 8
  store i16* %6349, i16** %orig_line, align 8
  %6350 = load i16* %x0, align 2
  %6351 = sext i16 %6350 to i64
  %6352 = load i16** %orig_line, align 8
  %6353 = getelementptr inbounds i16* %6352, i64 %6351
  %6354 = load i16* %6353, align 2
  %6355 = zext i16 %6354 to i32
  %6356 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6357 = load i16*** %ref1_pic, align 8
  %6358 = load i16* %sy, align 2
  %6359 = sext i16 %6358 to i32
  %6360 = load i16* %sx0, align 2
  %6361 = sext i16 %6360 to i32
  %6362 = load i32* %img_height, align 4
  %6363 = load i32* %img_width, align 4
  %6364 = call zeroext i16 %6356(i16** %6357, i32 %6359, i32 %6361, i32 %6362, i32 %6363)
  %6365 = zext i16 %6364 to i32
  %6366 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6367 = load i16*** %ref2_pic, align 8
  %6368 = load i16* %ry, align 2
  %6369 = sext i16 %6368 to i32
  %6370 = load i16* %rx0, align 2
  %6371 = sext i16 %6370 to i32
  %6372 = load i32* %img_height, align 4
  %6373 = load i32* %img_width, align 4
  %6374 = call zeroext i16 %6366(i16** %6367, i32 %6369, i32 %6371, i32 %6372, i32 %6373)
  %6375 = zext i16 %6374 to i32
  %6376 = add nsw i32 %6365, %6375
  %6377 = ashr i32 %6376, 1
  %6378 = sub nsw i32 %6355, %6377
  %6379 = load i32** %d, align 8
  %6380 = getelementptr inbounds i32* %6379, i32 1
  store i32* %6380, i32** %d, align 8
  store i32 %6378, i32* %6379, align 4
  %6381 = load i16* %x0, align 2
  %6382 = sext i16 %6381 to i32
  %6383 = add nsw i32 %6382, 1
  %6384 = sext i32 %6383 to i64
  %6385 = load i16** %orig_line, align 8
  %6386 = getelementptr inbounds i16* %6385, i64 %6384
  %6387 = load i16* %6386, align 2
  %6388 = zext i16 %6387 to i32
  %6389 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6390 = load i16*** %ref1_pic, align 8
  %6391 = load i16* %sy, align 2
  %6392 = sext i16 %6391 to i32
  %6393 = load i16* %sx0, align 2
  %6394 = sext i16 %6393 to i32
  %6395 = add nsw i32 %6394, 4
  %6396 = load i32* %img_height, align 4
  %6397 = load i32* %img_width, align 4
  %6398 = call zeroext i16 %6389(i16** %6390, i32 %6392, i32 %6395, i32 %6396, i32 %6397)
  %6399 = zext i16 %6398 to i32
  %6400 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6401 = load i16*** %ref2_pic, align 8
  %6402 = load i16* %ry, align 2
  %6403 = sext i16 %6402 to i32
  %6404 = load i16* %rx0, align 2
  %6405 = sext i16 %6404 to i32
  %6406 = add nsw i32 %6405, 4
  %6407 = load i32* %img_height, align 4
  %6408 = load i32* %img_width, align 4
  %6409 = call zeroext i16 %6400(i16** %6401, i32 %6403, i32 %6406, i32 %6407, i32 %6408)
  %6410 = zext i16 %6409 to i32
  %6411 = add nsw i32 %6399, %6410
  %6412 = ashr i32 %6411, 1
  %6413 = sub nsw i32 %6388, %6412
  %6414 = load i32** %d, align 8
  %6415 = getelementptr inbounds i32* %6414, i32 1
  store i32* %6415, i32** %d, align 8
  store i32 %6413, i32* %6414, align 4
  %6416 = load i16* %x0, align 2
  %6417 = sext i16 %6416 to i32
  %6418 = add nsw i32 %6417, 2
  %6419 = sext i32 %6418 to i64
  %6420 = load i16** %orig_line, align 8
  %6421 = getelementptr inbounds i16* %6420, i64 %6419
  %6422 = load i16* %6421, align 2
  %6423 = zext i16 %6422 to i32
  %6424 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6425 = load i16*** %ref1_pic, align 8
  %6426 = load i16* %sy, align 2
  %6427 = sext i16 %6426 to i32
  %6428 = load i16* %sx0, align 2
  %6429 = sext i16 %6428 to i32
  %6430 = add nsw i32 %6429, 8
  %6431 = load i32* %img_height, align 4
  %6432 = load i32* %img_width, align 4
  %6433 = call zeroext i16 %6424(i16** %6425, i32 %6427, i32 %6430, i32 %6431, i32 %6432)
  %6434 = zext i16 %6433 to i32
  %6435 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6436 = load i16*** %ref2_pic, align 8
  %6437 = load i16* %ry, align 2
  %6438 = sext i16 %6437 to i32
  %6439 = load i16* %rx0, align 2
  %6440 = sext i16 %6439 to i32
  %6441 = add nsw i32 %6440, 8
  %6442 = load i32* %img_height, align 4
  %6443 = load i32* %img_width, align 4
  %6444 = call zeroext i16 %6435(i16** %6436, i32 %6438, i32 %6441, i32 %6442, i32 %6443)
  %6445 = zext i16 %6444 to i32
  %6446 = add nsw i32 %6434, %6445
  %6447 = ashr i32 %6446, 1
  %6448 = sub nsw i32 %6423, %6447
  %6449 = load i32** %d, align 8
  %6450 = getelementptr inbounds i32* %6449, i32 1
  store i32* %6450, i32** %d, align 8
  store i32 %6448, i32* %6449, align 4
  %6451 = load i16* %x0, align 2
  %6452 = sext i16 %6451 to i32
  %6453 = add nsw i32 %6452, 3
  %6454 = sext i32 %6453 to i64
  %6455 = load i16** %orig_line, align 8
  %6456 = getelementptr inbounds i16* %6455, i64 %6454
  %6457 = load i16* %6456, align 2
  %6458 = zext i16 %6457 to i32
  %6459 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6460 = load i16*** %ref1_pic, align 8
  %6461 = load i16* %sy, align 2
  %6462 = sext i16 %6461 to i32
  %6463 = load i16* %sx0, align 2
  %6464 = sext i16 %6463 to i32
  %6465 = add nsw i32 %6464, 12
  %6466 = load i32* %img_height, align 4
  %6467 = load i32* %img_width, align 4
  %6468 = call zeroext i16 %6459(i16** %6460, i32 %6462, i32 %6465, i32 %6466, i32 %6467)
  %6469 = zext i16 %6468 to i32
  %6470 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6471 = load i16*** %ref2_pic, align 8
  %6472 = load i16* %ry, align 2
  %6473 = sext i16 %6472 to i32
  %6474 = load i16* %rx0, align 2
  %6475 = sext i16 %6474 to i32
  %6476 = add nsw i32 %6475, 12
  %6477 = load i32* %img_height, align 4
  %6478 = load i32* %img_width, align 4
  %6479 = call zeroext i16 %6470(i16** %6471, i32 %6473, i32 %6476, i32 %6477, i32 %6478)
  %6480 = zext i16 %6479 to i32
  %6481 = add nsw i32 %6469, %6480
  %6482 = ashr i32 %6481, 1
  %6483 = sub nsw i32 %6458, %6482
  %6484 = load i32** %d, align 8
  %6485 = getelementptr inbounds i32* %6484, i32 1
  store i32* %6485, i32** %d, align 8
  store i32 %6483, i32* %6484, align 4
  %6486 = load i16* %sy0, align 2
  %6487 = sext i16 %6486 to i32
  %6488 = add nsw i32 %6487, 8
  %6489 = trunc i32 %6488 to i16
  store i16 %6489, i16* %sy, align 2
  %6490 = load i16* %ry0, align 2
  %6491 = sext i16 %6490 to i32
  %6492 = add nsw i32 %6491, 8
  %6493 = trunc i32 %6492 to i16
  store i16 %6493, i16* %ry, align 2
  %6494 = load i16* %y0, align 2
  %6495 = sext i16 %6494 to i32
  %6496 = add nsw i32 %6495, 2
  %6497 = sext i32 %6496 to i64
  %6498 = load i16*** %1, align 8
  %6499 = getelementptr inbounds i16** %6498, i64 %6497
  %6500 = load i16** %6499, align 8
  store i16* %6500, i16** %orig_line, align 8
  %6501 = load i16* %x0, align 2
  %6502 = sext i16 %6501 to i64
  %6503 = load i16** %orig_line, align 8
  %6504 = getelementptr inbounds i16* %6503, i64 %6502
  %6505 = load i16* %6504, align 2
  %6506 = zext i16 %6505 to i32
  %6507 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6508 = load i16*** %ref1_pic, align 8
  %6509 = load i16* %sy, align 2
  %6510 = sext i16 %6509 to i32
  %6511 = load i16* %sx0, align 2
  %6512 = sext i16 %6511 to i32
  %6513 = load i32* %img_height, align 4
  %6514 = load i32* %img_width, align 4
  %6515 = call zeroext i16 %6507(i16** %6508, i32 %6510, i32 %6512, i32 %6513, i32 %6514)
  %6516 = zext i16 %6515 to i32
  %6517 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6518 = load i16*** %ref2_pic, align 8
  %6519 = load i16* %ry, align 2
  %6520 = sext i16 %6519 to i32
  %6521 = load i16* %rx0, align 2
  %6522 = sext i16 %6521 to i32
  %6523 = load i32* %img_height, align 4
  %6524 = load i32* %img_width, align 4
  %6525 = call zeroext i16 %6517(i16** %6518, i32 %6520, i32 %6522, i32 %6523, i32 %6524)
  %6526 = zext i16 %6525 to i32
  %6527 = add nsw i32 %6516, %6526
  %6528 = ashr i32 %6527, 1
  %6529 = sub nsw i32 %6506, %6528
  %6530 = load i32** %d, align 8
  %6531 = getelementptr inbounds i32* %6530, i32 1
  store i32* %6531, i32** %d, align 8
  store i32 %6529, i32* %6530, align 4
  %6532 = load i16* %x0, align 2
  %6533 = sext i16 %6532 to i32
  %6534 = add nsw i32 %6533, 1
  %6535 = sext i32 %6534 to i64
  %6536 = load i16** %orig_line, align 8
  %6537 = getelementptr inbounds i16* %6536, i64 %6535
  %6538 = load i16* %6537, align 2
  %6539 = zext i16 %6538 to i32
  %6540 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6541 = load i16*** %ref1_pic, align 8
  %6542 = load i16* %sy, align 2
  %6543 = sext i16 %6542 to i32
  %6544 = load i16* %sx0, align 2
  %6545 = sext i16 %6544 to i32
  %6546 = add nsw i32 %6545, 4
  %6547 = load i32* %img_height, align 4
  %6548 = load i32* %img_width, align 4
  %6549 = call zeroext i16 %6540(i16** %6541, i32 %6543, i32 %6546, i32 %6547, i32 %6548)
  %6550 = zext i16 %6549 to i32
  %6551 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6552 = load i16*** %ref2_pic, align 8
  %6553 = load i16* %ry, align 2
  %6554 = sext i16 %6553 to i32
  %6555 = load i16* %rx0, align 2
  %6556 = sext i16 %6555 to i32
  %6557 = add nsw i32 %6556, 4
  %6558 = load i32* %img_height, align 4
  %6559 = load i32* %img_width, align 4
  %6560 = call zeroext i16 %6551(i16** %6552, i32 %6554, i32 %6557, i32 %6558, i32 %6559)
  %6561 = zext i16 %6560 to i32
  %6562 = add nsw i32 %6550, %6561
  %6563 = ashr i32 %6562, 1
  %6564 = sub nsw i32 %6539, %6563
  %6565 = load i32** %d, align 8
  %6566 = getelementptr inbounds i32* %6565, i32 1
  store i32* %6566, i32** %d, align 8
  store i32 %6564, i32* %6565, align 4
  %6567 = load i16* %x0, align 2
  %6568 = sext i16 %6567 to i32
  %6569 = add nsw i32 %6568, 2
  %6570 = sext i32 %6569 to i64
  %6571 = load i16** %orig_line, align 8
  %6572 = getelementptr inbounds i16* %6571, i64 %6570
  %6573 = load i16* %6572, align 2
  %6574 = zext i16 %6573 to i32
  %6575 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6576 = load i16*** %ref1_pic, align 8
  %6577 = load i16* %sy, align 2
  %6578 = sext i16 %6577 to i32
  %6579 = load i16* %sx0, align 2
  %6580 = sext i16 %6579 to i32
  %6581 = add nsw i32 %6580, 8
  %6582 = load i32* %img_height, align 4
  %6583 = load i32* %img_width, align 4
  %6584 = call zeroext i16 %6575(i16** %6576, i32 %6578, i32 %6581, i32 %6582, i32 %6583)
  %6585 = zext i16 %6584 to i32
  %6586 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6587 = load i16*** %ref2_pic, align 8
  %6588 = load i16* %ry, align 2
  %6589 = sext i16 %6588 to i32
  %6590 = load i16* %rx0, align 2
  %6591 = sext i16 %6590 to i32
  %6592 = add nsw i32 %6591, 8
  %6593 = load i32* %img_height, align 4
  %6594 = load i32* %img_width, align 4
  %6595 = call zeroext i16 %6586(i16** %6587, i32 %6589, i32 %6592, i32 %6593, i32 %6594)
  %6596 = zext i16 %6595 to i32
  %6597 = add nsw i32 %6585, %6596
  %6598 = ashr i32 %6597, 1
  %6599 = sub nsw i32 %6574, %6598
  %6600 = load i32** %d, align 8
  %6601 = getelementptr inbounds i32* %6600, i32 1
  store i32* %6601, i32** %d, align 8
  store i32 %6599, i32* %6600, align 4
  %6602 = load i16* %x0, align 2
  %6603 = sext i16 %6602 to i32
  %6604 = add nsw i32 %6603, 3
  %6605 = sext i32 %6604 to i64
  %6606 = load i16** %orig_line, align 8
  %6607 = getelementptr inbounds i16* %6606, i64 %6605
  %6608 = load i16* %6607, align 2
  %6609 = zext i16 %6608 to i32
  %6610 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6611 = load i16*** %ref1_pic, align 8
  %6612 = load i16* %sy, align 2
  %6613 = sext i16 %6612 to i32
  %6614 = load i16* %sx0, align 2
  %6615 = sext i16 %6614 to i32
  %6616 = add nsw i32 %6615, 12
  %6617 = load i32* %img_height, align 4
  %6618 = load i32* %img_width, align 4
  %6619 = call zeroext i16 %6610(i16** %6611, i32 %6613, i32 %6616, i32 %6617, i32 %6618)
  %6620 = zext i16 %6619 to i32
  %6621 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6622 = load i16*** %ref2_pic, align 8
  %6623 = load i16* %ry, align 2
  %6624 = sext i16 %6623 to i32
  %6625 = load i16* %rx0, align 2
  %6626 = sext i16 %6625 to i32
  %6627 = add nsw i32 %6626, 12
  %6628 = load i32* %img_height, align 4
  %6629 = load i32* %img_width, align 4
  %6630 = call zeroext i16 %6621(i16** %6622, i32 %6624, i32 %6627, i32 %6628, i32 %6629)
  %6631 = zext i16 %6630 to i32
  %6632 = add nsw i32 %6620, %6631
  %6633 = ashr i32 %6632, 1
  %6634 = sub nsw i32 %6609, %6633
  %6635 = load i32** %d, align 8
  %6636 = getelementptr inbounds i32* %6635, i32 1
  store i32* %6636, i32** %d, align 8
  store i32 %6634, i32* %6635, align 4
  %6637 = load i16* %sy0, align 2
  %6638 = sext i16 %6637 to i32
  %6639 = add nsw i32 %6638, 12
  %6640 = trunc i32 %6639 to i16
  store i16 %6640, i16* %sy, align 2
  %6641 = load i16* %ry0, align 2
  %6642 = sext i16 %6641 to i32
  %6643 = add nsw i32 %6642, 12
  %6644 = trunc i32 %6643 to i16
  store i16 %6644, i16* %ry, align 2
  %6645 = load i16* %y0, align 2
  %6646 = sext i16 %6645 to i32
  %6647 = add nsw i32 %6646, 3
  %6648 = sext i32 %6647 to i64
  %6649 = load i16*** %1, align 8
  %6650 = getelementptr inbounds i16** %6649, i64 %6648
  %6651 = load i16** %6650, align 8
  store i16* %6651, i16** %orig_line, align 8
  %6652 = load i16* %x0, align 2
  %6653 = sext i16 %6652 to i64
  %6654 = load i16** %orig_line, align 8
  %6655 = getelementptr inbounds i16* %6654, i64 %6653
  %6656 = load i16* %6655, align 2
  %6657 = zext i16 %6656 to i32
  %6658 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6659 = load i16*** %ref1_pic, align 8
  %6660 = load i16* %sy, align 2
  %6661 = sext i16 %6660 to i32
  %6662 = load i16* %sx0, align 2
  %6663 = sext i16 %6662 to i32
  %6664 = load i32* %img_height, align 4
  %6665 = load i32* %img_width, align 4
  %6666 = call zeroext i16 %6658(i16** %6659, i32 %6661, i32 %6663, i32 %6664, i32 %6665)
  %6667 = zext i16 %6666 to i32
  %6668 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6669 = load i16*** %ref2_pic, align 8
  %6670 = load i16* %ry, align 2
  %6671 = sext i16 %6670 to i32
  %6672 = load i16* %rx0, align 2
  %6673 = sext i16 %6672 to i32
  %6674 = load i32* %img_height, align 4
  %6675 = load i32* %img_width, align 4
  %6676 = call zeroext i16 %6668(i16** %6669, i32 %6671, i32 %6673, i32 %6674, i32 %6675)
  %6677 = zext i16 %6676 to i32
  %6678 = add nsw i32 %6667, %6677
  %6679 = ashr i32 %6678, 1
  %6680 = sub nsw i32 %6657, %6679
  %6681 = load i32** %d, align 8
  %6682 = getelementptr inbounds i32* %6681, i32 1
  store i32* %6682, i32** %d, align 8
  store i32 %6680, i32* %6681, align 4
  %6683 = load i16* %x0, align 2
  %6684 = sext i16 %6683 to i32
  %6685 = add nsw i32 %6684, 1
  %6686 = sext i32 %6685 to i64
  %6687 = load i16** %orig_line, align 8
  %6688 = getelementptr inbounds i16* %6687, i64 %6686
  %6689 = load i16* %6688, align 2
  %6690 = zext i16 %6689 to i32
  %6691 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6692 = load i16*** %ref1_pic, align 8
  %6693 = load i16* %sy, align 2
  %6694 = sext i16 %6693 to i32
  %6695 = load i16* %sx0, align 2
  %6696 = sext i16 %6695 to i32
  %6697 = add nsw i32 %6696, 4
  %6698 = load i32* %img_height, align 4
  %6699 = load i32* %img_width, align 4
  %6700 = call zeroext i16 %6691(i16** %6692, i32 %6694, i32 %6697, i32 %6698, i32 %6699)
  %6701 = zext i16 %6700 to i32
  %6702 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6703 = load i16*** %ref2_pic, align 8
  %6704 = load i16* %ry, align 2
  %6705 = sext i16 %6704 to i32
  %6706 = load i16* %rx0, align 2
  %6707 = sext i16 %6706 to i32
  %6708 = add nsw i32 %6707, 4
  %6709 = load i32* %img_height, align 4
  %6710 = load i32* %img_width, align 4
  %6711 = call zeroext i16 %6702(i16** %6703, i32 %6705, i32 %6708, i32 %6709, i32 %6710)
  %6712 = zext i16 %6711 to i32
  %6713 = add nsw i32 %6701, %6712
  %6714 = ashr i32 %6713, 1
  %6715 = sub nsw i32 %6690, %6714
  %6716 = load i32** %d, align 8
  %6717 = getelementptr inbounds i32* %6716, i32 1
  store i32* %6717, i32** %d, align 8
  store i32 %6715, i32* %6716, align 4
  %6718 = load i16* %x0, align 2
  %6719 = sext i16 %6718 to i32
  %6720 = add nsw i32 %6719, 2
  %6721 = sext i32 %6720 to i64
  %6722 = load i16** %orig_line, align 8
  %6723 = getelementptr inbounds i16* %6722, i64 %6721
  %6724 = load i16* %6723, align 2
  %6725 = zext i16 %6724 to i32
  %6726 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6727 = load i16*** %ref1_pic, align 8
  %6728 = load i16* %sy, align 2
  %6729 = sext i16 %6728 to i32
  %6730 = load i16* %sx0, align 2
  %6731 = sext i16 %6730 to i32
  %6732 = add nsw i32 %6731, 8
  %6733 = load i32* %img_height, align 4
  %6734 = load i32* %img_width, align 4
  %6735 = call zeroext i16 %6726(i16** %6727, i32 %6729, i32 %6732, i32 %6733, i32 %6734)
  %6736 = zext i16 %6735 to i32
  %6737 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6738 = load i16*** %ref2_pic, align 8
  %6739 = load i16* %ry, align 2
  %6740 = sext i16 %6739 to i32
  %6741 = load i16* %rx0, align 2
  %6742 = sext i16 %6741 to i32
  %6743 = add nsw i32 %6742, 8
  %6744 = load i32* %img_height, align 4
  %6745 = load i32* %img_width, align 4
  %6746 = call zeroext i16 %6737(i16** %6738, i32 %6740, i32 %6743, i32 %6744, i32 %6745)
  %6747 = zext i16 %6746 to i32
  %6748 = add nsw i32 %6736, %6747
  %6749 = ashr i32 %6748, 1
  %6750 = sub nsw i32 %6725, %6749
  %6751 = load i32** %d, align 8
  %6752 = getelementptr inbounds i32* %6751, i32 1
  store i32* %6752, i32** %d, align 8
  store i32 %6750, i32* %6751, align 4
  %6753 = load i16* %x0, align 2
  %6754 = sext i16 %6753 to i32
  %6755 = add nsw i32 %6754, 3
  %6756 = sext i32 %6755 to i64
  %6757 = load i16** %orig_line, align 8
  %6758 = getelementptr inbounds i16* %6757, i64 %6756
  %6759 = load i16* %6758, align 2
  %6760 = zext i16 %6759 to i32
  %6761 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %6762 = load i16*** %ref1_pic, align 8
  %6763 = load i16* %sy, align 2
  %6764 = sext i16 %6763 to i32
  %6765 = load i16* %sx0, align 2
  %6766 = sext i16 %6765 to i32
  %6767 = add nsw i32 %6766, 12
  %6768 = load i32* %img_height, align 4
  %6769 = load i32* %img_width, align 4
  %6770 = call zeroext i16 %6761(i16** %6762, i32 %6764, i32 %6767, i32 %6768, i32 %6769)
  %6771 = zext i16 %6770 to i32
  %6772 = load i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %6773 = load i16*** %ref2_pic, align 8
  %6774 = load i16* %ry, align 2
  %6775 = sext i16 %6774 to i32
  %6776 = load i16* %rx0, align 2
  %6777 = sext i16 %6776 to i32
  %6778 = add nsw i32 %6777, 12
  %6779 = load i32* %img_height, align 4
  %6780 = load i32* %img_width, align 4
  %6781 = call zeroext i16 %6772(i16** %6773, i32 %6775, i32 %6778, i32 %6779, i32 %6780)
  %6782 = zext i16 %6781 to i32
  %6783 = add nsw i32 %6771, %6782
  %6784 = ashr i32 %6783, 1
  %6785 = sub nsw i32 %6760, %6784
  %6786 = load i32** %d, align 8
  store i32 %6785, i32* %6786, align 4
  %6787 = load %struct.InputParameters** @input, align 8
  %6788 = getelementptr inbounds %struct.InputParameters* %6787, i32 0, i32 123
  %6789 = load i32* %6788, align 4
  %6790 = icmp ne i32 %6789, 0
  br i1 %6790, label %6806, label %6791

; <label>:6791                                    ; preds = %6171
  %6792 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  %6793 = load %struct.InputParameters** @input, align 8
  %6794 = getelementptr inbounds %struct.InputParameters* %6793, i32 0, i32 6
  %6795 = load i32* %6794, align 4
  %6796 = call i32 @SATD(i32* %6792, i32 %6795)
  %6797 = load i16* %mcost, align 2
  %6798 = sext i16 %6797 to i32
  %6799 = add nsw i32 %6798, %6796
  %6800 = trunc i32 %6799 to i16
  store i16 %6800, i16* %mcost, align 2
  %6801 = sext i16 %6800 to i32
  %6802 = load i32* %15, align 4
  %6803 = icmp sgt i32 %6801, %6802
  br i1 %6803, label %6804, label %6805

; <label>:6804                                    ; preds = %6791
  store i16 1, i16* %abort_search, align 2
  br label %6847

; <label>:6805                                    ; preds = %6791
  br label %6841

; <label>:6806                                    ; preds = %6171
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %6807

; <label>:6807                                    ; preds = %6837, %6806
  %6808 = load i32* %j, align 4
  %6809 = icmp slt i32 %6808, 4
  br i1 %6809, label %6810, label %6840

; <label>:6810                                    ; preds = %6807
  store i32 0, i32* %i, align 4
  br label %6811

; <label>:6811                                    ; preds = %6831, %6810
  %6812 = load i32* %i, align 4
  %6813 = icmp slt i32 %6812, 4
  br i1 %6813, label %6814, label %6836

; <label>:6814                                    ; preds = %6811
  %6815 = load i32* %k, align 4
  %6816 = sext i32 %6815 to i64
  %6817 = getelementptr inbounds [16 x i32]* %diff, i32 0, i64 %6816
  %6818 = load i32* %6817, align 4
  %6819 = load i16* %x0, align 2
  %6820 = sext i16 %6819 to i32
  %6821 = load i32* %i, align 4
  %6822 = add nsw i32 %6820, %6821
  %6823 = sext i32 %6822 to i64
  %6824 = load i16* %y0, align 2
  %6825 = sext i16 %6824 to i32
  %6826 = load i32* %j, align 4
  %6827 = add nsw i32 %6825, %6826
  %6828 = sext i32 %6827 to i64
  %6829 = getelementptr inbounds [16 x [16 x i32]]* %curr_diff, i32 0, i64 %6828
  %6830 = getelementptr inbounds [16 x i32]* %6829, i32 0, i64 %6823
  store i32 %6818, i32* %6830, align 4
  br label %6831

; <label>:6831                                    ; preds = %6814
  %6832 = load i32* %i, align 4
  %6833 = add nsw i32 %6832, 1
  store i32 %6833, i32* %i, align 4
  %6834 = load i32* %k, align 4
  %6835 = add nsw i32 %6834, 1
  store i32 %6835, i32* %k, align 4
  br label %6811

; <label>:6836                                    ; preds = %6811
  br label %6837

; <label>:6837                                    ; preds = %6836
  %6838 = load i32* %j, align 4
  %6839 = add nsw i32 %6838, 1
  store i32 %6839, i32* %j, align 4
  br label %6807

; <label>:6840                                    ; preds = %6807
  br label %6841

; <label>:6841                                    ; preds = %6840, %6805
  br label %6842

; <label>:6842                                    ; preds = %6841
  %6843 = load i16* %x0, align 2
  %6844 = sext i16 %6843 to i32
  %6845 = add nsw i32 %6844, 4
  %6846 = trunc i32 %6845 to i16
  store i16 %6846, i16* %x0, align 2
  br label %6165

; <label>:6847                                    ; preds = %6804, %6165
  br label %6848

; <label>:6848                                    ; preds = %6847, %6163
  br label %6849

; <label>:6849                                    ; preds = %6848
  %6850 = load i16* %y0, align 2
  %6851 = sext i16 %6850 to i32
  %6852 = add nsw i32 %6851, 4
  %6853 = trunc i32 %6852 to i16
  store i16 %6853, i16* %y0, align 2
  br label %3749

; <label>:6854                                    ; preds = %3759
  %6855 = load %struct.InputParameters** @input, align 8
  %6856 = getelementptr inbounds %struct.InputParameters* %6855, i32 0, i32 123
  %6857 = load i32* %6856, align 4
  %6858 = icmp ne i32 %6857, 0
  br i1 %6858, label %6859, label %6870

; <label>:6859                                    ; preds = %6854
  %6860 = getelementptr inbounds [16 x [16 x i32]]* %curr_diff, i32 0, i32 0
  %6861 = load %struct.InputParameters** @input, align 8
  %6862 = getelementptr inbounds %struct.InputParameters* %6861, i32 0, i32 6
  %6863 = load i32* %6862, align 4
  %6864 = load i32* %6, align 4
  %6865 = call i32 @find_SATD([16 x i32]* %6860, i32 %6863, i32 %6864)
  %6866 = load i16* %mcost, align 2
  %6867 = sext i16 %6866 to i32
  %6868 = add nsw i32 %6867, %6865
  %6869 = trunc i32 %6868 to i16
  store i16 %6869, i16* %mcost, align 2
  br label %6870

; <label>:6870                                    ; preds = %6859, %6854
  %6871 = load i16* %mcost, align 2
  %6872 = sext i16 %6871 to i32
  %6873 = load i32* %15, align 4
  %6874 = icmp slt i32 %6872, %6873
  br i1 %6874, label %6875, label %6879

; <label>:6875                                    ; preds = %6870
  %6876 = load i16* %mcost, align 2
  %6877 = sext i16 %6876 to i32
  store i32 %6877, i32* %15, align 4
  %6878 = load i16* %pos, align 2
  store i16 %6878, i16* %best_pos, align 2
  br label %6879

; <label>:6879                                    ; preds = %6875, %6870
  br label %6880

; <label>:6880                                    ; preds = %6879
  %6881 = load i16* %pos, align 2
  %6882 = add i16 %6881, 1
  store i16 %6882, i16* %pos, align 2
  br label %3694

; <label>:6883                                    ; preds = %3694
  %6884 = load i16* %best_pos, align 2
  %6885 = icmp ne i16 %6884, 0
  br i1 %6885, label %6886, label %6907

; <label>:6886                                    ; preds = %6883
  %6887 = load i16* %best_pos, align 2
  %6888 = sext i16 %6887 to i64
  %6889 = load i32** @spiral_search_x, align 8
  %6890 = getelementptr inbounds i32* %6889, i64 %6888
  %6891 = load i32* %6890, align 4
  %6892 = load i16** %9, align 8
  %6893 = load i16* %6892, align 2
  %6894 = sext i16 %6893 to i32
  %6895 = add nsw i32 %6894, %6891
  %6896 = trunc i32 %6895 to i16
  store i16 %6896, i16* %6892, align 2
  %6897 = load i16* %best_pos, align 2
  %6898 = sext i16 %6897 to i64
  %6899 = load i32** @spiral_search_y, align 8
  %6900 = getelementptr inbounds i32* %6899, i64 %6898
  %6901 = load i32* %6900, align 4
  %6902 = load i16** %10, align 8
  %6903 = load i16* %6902, align 2
  %6904 = sext i16 %6903 to i32
  %6905 = add nsw i32 %6904, %6901
  %6906 = trunc i32 %6905 to i16
  store i16 %6906, i16* %6902, align 2
  br label %6907

; <label>:6907                                    ; preds = %6886, %6883
  %6908 = load i32* %15, align 4
  ret i32 %6908
}

; Function Attrs: nounwind uwtable
define i32 @BPredPartitionCost(i32 %blocktype, i32 %block8x8, i16 signext %fw_ref, i16 signext %bw_ref, i32 %lambda_factor, i32 %list) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %diff = alloca [64 x i32], align 16
  %curr_blk = alloca [16 x [16 x i32]], align 16
  %bsx = alloca i32, align 4
  %bsy = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %v = alloca i32, align 4
  %h = alloca i32, align 4
  %mcost = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %mvd_bits = alloca i32, align 4
  %parttype = alloca i32, align 4
  %step_h0 = alloca i32, align 4
  %step_v0 = alloca i32, align 4
  %step_h = alloca i32, align 4
  %step_v = alloca i32, align 4
  %bxx = alloca i32, align 4
  %byy = alloca i32, align 4
  %all_mv = alloca i16******, align 8
  %p_mv = alloca i16******, align 8
  store i32 %blocktype, i32* %1, align 4
  store i32 %block8x8, i32* %2, align 4
  store i16 %fw_ref, i16* %3, align 2
  store i16 %bw_ref, i16* %4, align 2
  store i32 %lambda_factor, i32* %5, align 4
  store i32 %list, i32* %6, align 4
  %7 = load i32* %1, align 4
  %8 = sext i32 %7 to i64
  %9 = load %struct.InputParameters** @input, align 8
  %10 = getelementptr inbounds %struct.InputParameters* %9, i32 0, i32 20
  %11 = getelementptr inbounds [8 x [2 x i32]]* %10, i32 0, i64 %8
  %12 = getelementptr inbounds [2 x i32]* %11, i32 0, i64 0
  %13 = load i32* %12, align 4
  %14 = icmp slt i32 %13, 8
  br i1 %14, label %15, label %23

; <label>:15                                      ; preds = %0
  %16 = load i32* %1, align 4
  %17 = sext i32 %16 to i64
  %18 = load %struct.InputParameters** @input, align 8
  %19 = getelementptr inbounds %struct.InputParameters* %18, i32 0, i32 20
  %20 = getelementptr inbounds [8 x [2 x i32]]* %19, i32 0, i64 %17
  %21 = getelementptr inbounds [2 x i32]* %20, i32 0, i64 0
  %22 = load i32* %21, align 4
  br label %24

; <label>:23                                      ; preds = %0
  br label %24

; <label>:24                                      ; preds = %23, %15
  %25 = phi i32 [ %22, %15 ], [ 8, %23 ]
  store i32 %25, i32* %bsx, align 4
  %26 = load i32* %1, align 4
  %27 = sext i32 %26 to i64
  %28 = load %struct.InputParameters** @input, align 8
  %29 = getelementptr inbounds %struct.InputParameters* %28, i32 0, i32 20
  %30 = getelementptr inbounds [8 x [2 x i32]]* %29, i32 0, i64 %27
  %31 = getelementptr inbounds [2 x i32]* %30, i32 0, i64 1
  %32 = load i32* %31, align 4
  %33 = icmp slt i32 %32, 8
  br i1 %33, label %34, label %42

; <label>:34                                      ; preds = %24
  %35 = load i32* %1, align 4
  %36 = sext i32 %35 to i64
  %37 = load %struct.InputParameters** @input, align 8
  %38 = getelementptr inbounds %struct.InputParameters* %37, i32 0, i32 20
  %39 = getelementptr inbounds [8 x [2 x i32]]* %38, i32 0, i64 %36
  %40 = getelementptr inbounds [2 x i32]* %39, i32 0, i64 1
  %41 = load i32* %40, align 4
  br label %43

; <label>:42                                      ; preds = %24
  br label %43

; <label>:43                                      ; preds = %42, %34
  %44 = phi i32 [ %41, %34 ], [ 8, %42 ]
  store i32 %44, i32* %bsy, align 4
  store i32 0, i32* %mvd_bits, align 4
  %45 = load i32* %1, align 4
  %46 = icmp slt i32 %45, 4
  br i1 %46, label %47, label %49

; <label>:47                                      ; preds = %43
  %48 = load i32* %1, align 4
  br label %50

; <label>:49                                      ; preds = %43
  br label %50

; <label>:50                                      ; preds = %49, %47
  %51 = phi i32 [ %48, %47 ], [ 4, %49 ]
  store i32 %51, i32* %parttype, align 4
  %52 = load i32* %parttype, align 4
  %53 = sext i32 %52 to i64
  %54 = load %struct.InputParameters** @input, align 8
  %55 = getelementptr inbounds %struct.InputParameters* %54, i32 0, i32 21
  %56 = getelementptr inbounds [8 x [2 x i32]]* %55, i32 0, i64 %53
  %57 = getelementptr inbounds [2 x i32]* %56, i32 0, i64 0
  %58 = load i32* %57, align 4
  store i32 %58, i32* %step_h0, align 4
  %59 = load i32* %parttype, align 4
  %60 = sext i32 %59 to i64
  %61 = load %struct.InputParameters** @input, align 8
  %62 = getelementptr inbounds %struct.InputParameters* %61, i32 0, i32 21
  %63 = getelementptr inbounds [8 x [2 x i32]]* %62, i32 0, i64 %60
  %64 = getelementptr inbounds [2 x i32]* %63, i32 0, i64 1
  %65 = load i32* %64, align 4
  store i32 %65, i32* %step_v0, align 4
  %66 = load i32* %1, align 4
  %67 = sext i32 %66 to i64
  %68 = load %struct.InputParameters** @input, align 8
  %69 = getelementptr inbounds %struct.InputParameters* %68, i32 0, i32 21
  %70 = getelementptr inbounds [8 x [2 x i32]]* %69, i32 0, i64 %67
  %71 = getelementptr inbounds [2 x i32]* %70, i32 0, i64 0
  %72 = load i32* %71, align 4
  store i32 %72, i32* %step_h, align 4
  %73 = load i32* %1, align 4
  %74 = sext i32 %73 to i64
  %75 = load %struct.InputParameters** @input, align 8
  %76 = getelementptr inbounds %struct.InputParameters* %75, i32 0, i32 21
  %77 = getelementptr inbounds [8 x [2 x i32]]* %76, i32 0, i64 %74
  %78 = getelementptr inbounds [2 x i32]* %77, i32 0, i64 1
  %79 = load i32* %78, align 4
  store i32 %79, i32* %step_v, align 4
  %80 = load i32* %6, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %86

; <label>:82                                      ; preds = %50
  %83 = load %struct.ImageParameters** @img, align 8
  %84 = getelementptr inbounds %struct.ImageParameters* %83, i32 0, i32 72
  %85 = load i16******* %84, align 8
  br label %90

; <label>:86                                      ; preds = %50
  %87 = load %struct.ImageParameters** @img, align 8
  %88 = getelementptr inbounds %struct.ImageParameters* %87, i32 0, i32 73
  %89 = load i16******* %88, align 8
  br label %90

; <label>:90                                      ; preds = %86, %82
  %91 = phi i16****** [ %85, %82 ], [ %89, %86 ]
  store i16****** %91, i16******* %all_mv, align 8
  %92 = load %struct.ImageParameters** @img, align 8
  %93 = getelementptr inbounds %struct.ImageParameters* %92, i32 0, i32 70
  %94 = load i16******* %93, align 8
  store i16****** %94, i16******* %p_mv, align 8
  %95 = load i32* %2, align 4
  %96 = sext i32 %95 to i64
  %97 = load i32* %parttype, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [5 x [4 x i32]]* @BPredPartitionCost.by0, i32 0, i64 %98
  %100 = getelementptr inbounds [4 x i32]* %99, i32 0, i64 %96
  %101 = load i32* %100, align 4
  store i32 %101, i32* %v, align 4
  br label %102

; <label>:102                                     ; preds = %344, %90
  %103 = load i32* %v, align 4
  %104 = load i32* %2, align 4
  %105 = sext i32 %104 to i64
  %106 = load i32* %parttype, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [5 x [4 x i32]]* @BPredPartitionCost.by0, i32 0, i64 %107
  %109 = getelementptr inbounds [4 x i32]* %108, i32 0, i64 %105
  %110 = load i32* %109, align 4
  %111 = load i32* %step_v0, align 4
  %112 = add nsw i32 %110, %111
  %113 = icmp slt i32 %103, %112
  br i1 %113, label %114, label %348

; <label>:114                                     ; preds = %102
  %115 = load i32* %2, align 4
  %116 = sext i32 %115 to i64
  %117 = load i32* %parttype, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds [5 x [4 x i32]]* @BPredPartitionCost.bx0, i32 0, i64 %118
  %120 = getelementptr inbounds [4 x i32]* %119, i32 0, i64 %116
  %121 = load i32* %120, align 4
  store i32 %121, i32* %h, align 4
  br label %122

; <label>:122                                     ; preds = %339, %114
  %123 = load i32* %h, align 4
  %124 = load i32* %2, align 4
  %125 = sext i32 %124 to i64
  %126 = load i32* %parttype, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [5 x [4 x i32]]* @BPredPartitionCost.bx0, i32 0, i64 %127
  %129 = getelementptr inbounds [4 x i32]* %128, i32 0, i64 %125
  %130 = load i32* %129, align 4
  %131 = load i32* %step_h0, align 4
  %132 = add nsw i32 %130, %131
  %133 = icmp slt i32 %123, %132
  br i1 %133, label %134, label %343

; <label>:134                                     ; preds = %122
  %135 = load i32* %1, align 4
  %136 = sext i32 %135 to i64
  %137 = load i16* %3, align 2
  %138 = sext i16 %137 to i64
  %139 = load i32* %v, align 4
  %140 = sext i32 %139 to i64
  %141 = load i32* %h, align 4
  %142 = sext i32 %141 to i64
  %143 = load i16******* %all_mv, align 8
  %144 = getelementptr inbounds i16****** %143, i64 %142
  %145 = load i16****** %144, align 8
  %146 = getelementptr inbounds i16***** %145, i64 %140
  %147 = load i16***** %146, align 8
  %148 = getelementptr inbounds i16**** %147, i64 0
  %149 = load i16**** %148, align 8
  %150 = getelementptr inbounds i16*** %149, i64 %138
  %151 = load i16*** %150, align 8
  %152 = getelementptr inbounds i16** %151, i64 %136
  %153 = load i16** %152, align 8
  %154 = getelementptr inbounds i16* %153, i64 0
  %155 = load i16* %154, align 2
  %156 = sext i16 %155 to i32
  %157 = load i32* %1, align 4
  %158 = sext i32 %157 to i64
  %159 = load i16* %3, align 2
  %160 = sext i16 %159 to i64
  %161 = load i32* %v, align 4
  %162 = sext i32 %161 to i64
  %163 = load i32* %h, align 4
  %164 = sext i32 %163 to i64
  %165 = load i16******* %p_mv, align 8
  %166 = getelementptr inbounds i16****** %165, i64 %164
  %167 = load i16****** %166, align 8
  %168 = getelementptr inbounds i16***** %167, i64 %162
  %169 = load i16***** %168, align 8
  %170 = getelementptr inbounds i16**** %169, i64 0
  %171 = load i16**** %170, align 8
  %172 = getelementptr inbounds i16*** %171, i64 %160
  %173 = load i16*** %172, align 8
  %174 = getelementptr inbounds i16** %173, i64 %158
  %175 = load i16** %174, align 8
  %176 = getelementptr inbounds i16* %175, i64 0
  %177 = load i16* %176, align 2
  %178 = sext i16 %177 to i32
  %179 = sub nsw i32 %156, %178
  %180 = sext i32 %179 to i64
  %181 = load i32** @mvbits, align 8
  %182 = getelementptr inbounds i32* %181, i64 %180
  %183 = load i32* %182, align 4
  %184 = load i32* %mvd_bits, align 4
  %185 = add nsw i32 %184, %183
  store i32 %185, i32* %mvd_bits, align 4
  %186 = load i32* %1, align 4
  %187 = sext i32 %186 to i64
  %188 = load i16* %3, align 2
  %189 = sext i16 %188 to i64
  %190 = load i32* %v, align 4
  %191 = sext i32 %190 to i64
  %192 = load i32* %h, align 4
  %193 = sext i32 %192 to i64
  %194 = load i16******* %all_mv, align 8
  %195 = getelementptr inbounds i16****** %194, i64 %193
  %196 = load i16****** %195, align 8
  %197 = getelementptr inbounds i16***** %196, i64 %191
  %198 = load i16***** %197, align 8
  %199 = getelementptr inbounds i16**** %198, i64 0
  %200 = load i16**** %199, align 8
  %201 = getelementptr inbounds i16*** %200, i64 %189
  %202 = load i16*** %201, align 8
  %203 = getelementptr inbounds i16** %202, i64 %187
  %204 = load i16** %203, align 8
  %205 = getelementptr inbounds i16* %204, i64 1
  %206 = load i16* %205, align 2
  %207 = sext i16 %206 to i32
  %208 = load i32* %1, align 4
  %209 = sext i32 %208 to i64
  %210 = load i16* %3, align 2
  %211 = sext i16 %210 to i64
  %212 = load i32* %v, align 4
  %213 = sext i32 %212 to i64
  %214 = load i32* %h, align 4
  %215 = sext i32 %214 to i64
  %216 = load i16******* %p_mv, align 8
  %217 = getelementptr inbounds i16****** %216, i64 %215
  %218 = load i16****** %217, align 8
  %219 = getelementptr inbounds i16***** %218, i64 %213
  %220 = load i16***** %219, align 8
  %221 = getelementptr inbounds i16**** %220, i64 0
  %222 = load i16**** %221, align 8
  %223 = getelementptr inbounds i16*** %222, i64 %211
  %224 = load i16*** %223, align 8
  %225 = getelementptr inbounds i16** %224, i64 %209
  %226 = load i16** %225, align 8
  %227 = getelementptr inbounds i16* %226, i64 1
  %228 = load i16* %227, align 2
  %229 = sext i16 %228 to i32
  %230 = sub nsw i32 %207, %229
  %231 = sext i32 %230 to i64
  %232 = load i32** @mvbits, align 8
  %233 = getelementptr inbounds i32* %232, i64 %231
  %234 = load i32* %233, align 4
  %235 = load i32* %mvd_bits, align 4
  %236 = add nsw i32 %235, %234
  store i32 %236, i32* %mvd_bits, align 4
  %237 = load i32* %1, align 4
  %238 = sext i32 %237 to i64
  %239 = load i16* %4, align 2
  %240 = sext i16 %239 to i64
  %241 = load i32* %v, align 4
  %242 = sext i32 %241 to i64
  %243 = load i32* %h, align 4
  %244 = sext i32 %243 to i64
  %245 = load i16******* %all_mv, align 8
  %246 = getelementptr inbounds i16****** %245, i64 %244
  %247 = load i16****** %246, align 8
  %248 = getelementptr inbounds i16***** %247, i64 %242
  %249 = load i16***** %248, align 8
  %250 = getelementptr inbounds i16**** %249, i64 1
  %251 = load i16**** %250, align 8
  %252 = getelementptr inbounds i16*** %251, i64 %240
  %253 = load i16*** %252, align 8
  %254 = getelementptr inbounds i16** %253, i64 %238
  %255 = load i16** %254, align 8
  %256 = getelementptr inbounds i16* %255, i64 0
  %257 = load i16* %256, align 2
  %258 = sext i16 %257 to i32
  %259 = load i32* %1, align 4
  %260 = sext i32 %259 to i64
  %261 = load i16* %4, align 2
  %262 = sext i16 %261 to i64
  %263 = load i32* %v, align 4
  %264 = sext i32 %263 to i64
  %265 = load i32* %h, align 4
  %266 = sext i32 %265 to i64
  %267 = load i16******* %p_mv, align 8
  %268 = getelementptr inbounds i16****** %267, i64 %266
  %269 = load i16****** %268, align 8
  %270 = getelementptr inbounds i16***** %269, i64 %264
  %271 = load i16***** %270, align 8
  %272 = getelementptr inbounds i16**** %271, i64 1
  %273 = load i16**** %272, align 8
  %274 = getelementptr inbounds i16*** %273, i64 %262
  %275 = load i16*** %274, align 8
  %276 = getelementptr inbounds i16** %275, i64 %260
  %277 = load i16** %276, align 8
  %278 = getelementptr inbounds i16* %277, i64 0
  %279 = load i16* %278, align 2
  %280 = sext i16 %279 to i32
  %281 = sub nsw i32 %258, %280
  %282 = sext i32 %281 to i64
  %283 = load i32** @mvbits, align 8
  %284 = getelementptr inbounds i32* %283, i64 %282
  %285 = load i32* %284, align 4
  %286 = load i32* %mvd_bits, align 4
  %287 = add nsw i32 %286, %285
  store i32 %287, i32* %mvd_bits, align 4
  %288 = load i32* %1, align 4
  %289 = sext i32 %288 to i64
  %290 = load i16* %4, align 2
  %291 = sext i16 %290 to i64
  %292 = load i32* %v, align 4
  %293 = sext i32 %292 to i64
  %294 = load i32* %h, align 4
  %295 = sext i32 %294 to i64
  %296 = load i16******* %all_mv, align 8
  %297 = getelementptr inbounds i16****** %296, i64 %295
  %298 = load i16****** %297, align 8
  %299 = getelementptr inbounds i16***** %298, i64 %293
  %300 = load i16***** %299, align 8
  %301 = getelementptr inbounds i16**** %300, i64 1
  %302 = load i16**** %301, align 8
  %303 = getelementptr inbounds i16*** %302, i64 %291
  %304 = load i16*** %303, align 8
  %305 = getelementptr inbounds i16** %304, i64 %289
  %306 = load i16** %305, align 8
  %307 = getelementptr inbounds i16* %306, i64 1
  %308 = load i16* %307, align 2
  %309 = sext i16 %308 to i32
  %310 = load i32* %1, align 4
  %311 = sext i32 %310 to i64
  %312 = load i16* %4, align 2
  %313 = sext i16 %312 to i64
  %314 = load i32* %v, align 4
  %315 = sext i32 %314 to i64
  %316 = load i32* %h, align 4
  %317 = sext i32 %316 to i64
  %318 = load i16******* %p_mv, align 8
  %319 = getelementptr inbounds i16****** %318, i64 %317
  %320 = load i16****** %319, align 8
  %321 = getelementptr inbounds i16***** %320, i64 %315
  %322 = load i16***** %321, align 8
  %323 = getelementptr inbounds i16**** %322, i64 1
  %324 = load i16**** %323, align 8
  %325 = getelementptr inbounds i16*** %324, i64 %313
  %326 = load i16*** %325, align 8
  %327 = getelementptr inbounds i16** %326, i64 %311
  %328 = load i16** %327, align 8
  %329 = getelementptr inbounds i16* %328, i64 1
  %330 = load i16* %329, align 2
  %331 = sext i16 %330 to i32
  %332 = sub nsw i32 %309, %331
  %333 = sext i32 %332 to i64
  %334 = load i32** @mvbits, align 8
  %335 = getelementptr inbounds i32* %334, i64 %333
  %336 = load i32* %335, align 4
  %337 = load i32* %mvd_bits, align 4
  %338 = add nsw i32 %337, %336
  store i32 %338, i32* %mvd_bits, align 4
  br label %339

; <label>:339                                     ; preds = %134
  %340 = load i32* %step_h, align 4
  %341 = load i32* %h, align 4
  %342 = add nsw i32 %341, %340
  store i32 %342, i32* %h, align 4
  br label %122

; <label>:343                                     ; preds = %122
  br label %344

; <label>:344                                     ; preds = %343
  %345 = load i32* %step_v, align 4
  %346 = load i32* %v, align 4
  %347 = add nsw i32 %346, %345
  store i32 %347, i32* %v, align 4
  br label %102

; <label>:348                                     ; preds = %102
  %349 = load i32* %5, align 4
  %350 = load i32* %mvd_bits, align 4
  %351 = mul nsw i32 %349, %350
  %352 = ashr i32 %351, 16
  store i32 %352, i32* %mcost, align 4
  store i32 0, i32* %byy, align 4
  %353 = load i32* %2, align 4
  %354 = sext i32 %353 to i64
  %355 = load i32* %parttype, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [5 x [4 x i32]]* @BPredPartitionCost.by0, i32 0, i64 %356
  %358 = getelementptr inbounds [4 x i32]* %357, i32 0, i64 %354
  %359 = load i32* %358, align 4
  store i32 %359, i32* %v, align 4
  br label %360

; <label>:360                                     ; preds = %494, %348
  %361 = load i32* %v, align 4
  %362 = load i32* %2, align 4
  %363 = sext i32 %362 to i64
  %364 = load i32* %parttype, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds [5 x [4 x i32]]* @BPredPartitionCost.by0, i32 0, i64 %365
  %367 = getelementptr inbounds [4 x i32]* %366, i32 0, i64 %363
  %368 = load i32* %367, align 4
  %369 = load i32* %step_v0, align 4
  %370 = add nsw i32 %368, %369
  %371 = icmp slt i32 %361, %370
  br i1 %371, label %372, label %499

; <label>:372                                     ; preds = %360
  %373 = load %struct.ImageParameters** @img, align 8
  %374 = getelementptr inbounds %struct.ImageParameters* %373, i32 0, i32 38
  %375 = load i32* %374, align 4
  %376 = load i32* %v, align 4
  %377 = shl i32 %376, 2
  store i32 %377, i32* %block_y, align 4
  %378 = add nsw i32 %375, %377
  store i32 %378, i32* %pic_pix_y, align 4
  store i32 0, i32* %bxx, align 4
  %379 = load i32* %2, align 4
  %380 = sext i32 %379 to i64
  %381 = load i32* %parttype, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [5 x [4 x i32]]* @BPredPartitionCost.bx0, i32 0, i64 %382
  %384 = getelementptr inbounds [4 x i32]* %383, i32 0, i64 %380
  %385 = load i32* %384, align 4
  store i32 %385, i32* %h, align 4
  br label %386

; <label>:386                                     ; preds = %488, %372
  %387 = load i32* %h, align 4
  %388 = load i32* %2, align 4
  %389 = sext i32 %388 to i64
  %390 = load i32* %parttype, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [5 x [4 x i32]]* @BPredPartitionCost.bx0, i32 0, i64 %391
  %393 = getelementptr inbounds [4 x i32]* %392, i32 0, i64 %389
  %394 = load i32* %393, align 4
  %395 = load i32* %step_h0, align 4
  %396 = add nsw i32 %394, %395
  %397 = icmp slt i32 %387, %396
  br i1 %397, label %398, label %493

; <label>:398                                     ; preds = %386
  %399 = load %struct.ImageParameters** @img, align 8
  %400 = getelementptr inbounds %struct.ImageParameters* %399, i32 0, i32 37
  %401 = load i32* %400, align 4
  %402 = load i32* %h, align 4
  %403 = shl i32 %402, 2
  store i32 %403, i32* %block_x, align 4
  %404 = add nsw i32 %401, %403
  store i32 %404, i32* %pic_pix_x, align 4
  %405 = load i32* %block_x, align 4
  %406 = load i32* %block_y, align 4
  %407 = load i32* %1, align 4
  %408 = load i32* %1, align 4
  %409 = load i16* %3, align 2
  %410 = load i16* %4, align 2
  %411 = load i32* %6, align 4
  call void @LumaPrediction4x4Bi(i32 %405, i32 %406, i32 2, i32 %407, i32 %408, i16 signext %409, i16 signext %410, i32 %411)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %412

; <label>:412                                     ; preds = %468, %398
  %413 = load i32* %j, align 4
  %414 = icmp slt i32 %413, 4
  br i1 %414, label %415, label %471

; <label>:415                                     ; preds = %412
  store i32 0, i32* %i, align 4
  br label %416

; <label>:416                                     ; preds = %462, %415
  %417 = load i32* %i, align 4
  %418 = icmp slt i32 %417, 4
  br i1 %418, label %419, label %467

; <label>:419                                     ; preds = %416
  %420 = load i32* %pic_pix_x, align 4
  %421 = load i32* %i, align 4
  %422 = add nsw i32 %420, %421
  %423 = sext i32 %422 to i64
  %424 = load i32* %pic_pix_y, align 4
  %425 = load i32* %j, align 4
  %426 = add nsw i32 %424, %425
  %427 = sext i32 %426 to i64
  %428 = load i16*** @imgY_org, align 8
  %429 = getelementptr inbounds i16** %428, i64 %427
  %430 = load i16** %429, align 8
  %431 = getelementptr inbounds i16* %430, i64 %423
  %432 = load i16* %431, align 2
  %433 = zext i16 %432 to i32
  %434 = load i32* %j, align 4
  %435 = load i32* %block_y, align 4
  %436 = add nsw i32 %434, %435
  %437 = sext i32 %436 to i64
  %438 = load i32* %i, align 4
  %439 = load i32* %block_x, align 4
  %440 = add nsw i32 %438, %439
  %441 = sext i32 %440 to i64
  %442 = load %struct.ImageParameters** @img, align 8
  %443 = getelementptr inbounds %struct.ImageParameters* %442, i32 0, i32 45
  %444 = getelementptr inbounds [16 x [16 x i16]]* %443, i32 0, i64 %441
  %445 = getelementptr inbounds [16 x i16]* %444, i32 0, i64 %437
  %446 = load i16* %445, align 2
  %447 = zext i16 %446 to i32
  %448 = sub nsw i32 %433, %447
  %449 = load i32* %bxx, align 4
  %450 = load i32* %i, align 4
  %451 = add nsw i32 %449, %450
  %452 = sext i32 %451 to i64
  %453 = load i32* %byy, align 4
  %454 = load i32* %j, align 4
  %455 = add nsw i32 %453, %454
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds [16 x [16 x i32]]* %curr_blk, i32 0, i64 %456
  %458 = getelementptr inbounds [16 x i32]* %457, i32 0, i64 %452
  store i32 %448, i32* %458, align 4
  %459 = load i32* %k, align 4
  %460 = sext i32 %459 to i64
  %461 = getelementptr inbounds [64 x i32]* %diff, i32 0, i64 %460
  store i32 %448, i32* %461, align 4
  br label %462

; <label>:462                                     ; preds = %419
  %463 = load i32* %i, align 4
  %464 = add nsw i32 %463, 1
  store i32 %464, i32* %i, align 4
  %465 = load i32* %k, align 4
  %466 = add nsw i32 %465, 1
  store i32 %466, i32* %k, align 4
  br label %416

; <label>:467                                     ; preds = %416
  br label %468

; <label>:468                                     ; preds = %467
  %469 = load i32* %j, align 4
  %470 = add nsw i32 %469, 1
  store i32 %470, i32* %j, align 4
  br label %412

; <label>:471                                     ; preds = %412
  %472 = load %struct.InputParameters** @input, align 8
  %473 = getelementptr inbounds %struct.InputParameters* %472, i32 0, i32 123
  %474 = load i32* %473, align 4
  %475 = icmp ne i32 %474, 0
  br i1 %475, label %476, label %479

; <label>:476                                     ; preds = %471
  %477 = load i32* %1, align 4
  %478 = icmp sgt i32 %477, 4
  br i1 %478, label %479, label %487

; <label>:479                                     ; preds = %476, %471
  %480 = getelementptr inbounds [64 x i32]* %diff, i32 0, i32 0
  %481 = load %struct.InputParameters** @input, align 8
  %482 = getelementptr inbounds %struct.InputParameters* %481, i32 0, i32 6
  %483 = load i32* %482, align 4
  %484 = call i32 @SATD(i32* %480, i32 %483)
  %485 = load i32* %mcost, align 4
  %486 = add nsw i32 %485, %484
  store i32 %486, i32* %mcost, align 4
  br label %487

; <label>:487                                     ; preds = %479, %476
  br label %488

; <label>:488                                     ; preds = %487
  %489 = load i32* %bxx, align 4
  %490 = add nsw i32 %489, 4
  store i32 %490, i32* %bxx, align 4
  %491 = load i32* %h, align 4
  %492 = add nsw i32 %491, 1
  store i32 %492, i32* %h, align 4
  br label %386

; <label>:493                                     ; preds = %386
  br label %494

; <label>:494                                     ; preds = %493
  %495 = load i32* %byy, align 4
  %496 = add nsw i32 %495, 4
  store i32 %496, i32* %byy, align 4
  %497 = load i32* %v, align 4
  %498 = add nsw i32 %497, 1
  store i32 %498, i32* %v, align 4
  br label %360

; <label>:499                                     ; preds = %360
  %500 = load %struct.InputParameters** @input, align 8
  %501 = getelementptr inbounds %struct.InputParameters* %500, i32 0, i32 123
  %502 = load i32* %501, align 4
  %503 = icmp ne i32 %502, 0
  br i1 %503, label %504, label %578

; <label>:504                                     ; preds = %499
  %505 = load i32* %1, align 4
  %506 = icmp sle i32 %505, 4
  br i1 %506, label %507, label %578

; <label>:507                                     ; preds = %504
  store i32 0, i32* %byy, align 4
  br label %508

; <label>:508                                     ; preds = %573, %507
  %509 = load i32* %byy, align 4
  %510 = load i32* %parttype, align 4
  %511 = sext i32 %510 to i64
  %512 = load %struct.InputParameters** @input, align 8
  %513 = getelementptr inbounds %struct.InputParameters* %512, i32 0, i32 20
  %514 = getelementptr inbounds [8 x [2 x i32]]* %513, i32 0, i64 %511
  %515 = getelementptr inbounds [2 x i32]* %514, i32 0, i64 1
  %516 = load i32* %515, align 4
  %517 = icmp slt i32 %509, %516
  br i1 %517, label %518, label %577

; <label>:518                                     ; preds = %508
  store i32 0, i32* %bxx, align 4
  br label %519

; <label>:519                                     ; preds = %568, %518
  %520 = load i32* %bxx, align 4
  %521 = load i32* %parttype, align 4
  %522 = sext i32 %521 to i64
  %523 = load %struct.InputParameters** @input, align 8
  %524 = getelementptr inbounds %struct.InputParameters* %523, i32 0, i32 20
  %525 = getelementptr inbounds [8 x [2 x i32]]* %524, i32 0, i64 %522
  %526 = getelementptr inbounds [2 x i32]* %525, i32 0, i64 0
  %527 = load i32* %526, align 4
  %528 = icmp slt i32 %520, %527
  br i1 %528, label %529, label %572

; <label>:529                                     ; preds = %519
  store i32 0, i32* %k, align 4
  store i32 0, i32* %i, align 4
  br label %530

; <label>:530                                     ; preds = %557, %529
  %531 = load i32* %i, align 4
  %532 = icmp slt i32 %531, 8
  br i1 %532, label %533, label %560

; <label>:533                                     ; preds = %530
  store i32 0, i32* %j, align 4
  br label %534

; <label>:534                                     ; preds = %553, %533
  %535 = load i32* %j, align 4
  %536 = icmp slt i32 %535, 8
  br i1 %536, label %537, label %556

; <label>:537                                     ; preds = %534
  %538 = load i32* %j, align 4
  %539 = load i32* %bxx, align 4
  %540 = add nsw i32 %538, %539
  %541 = sext i32 %540 to i64
  %542 = load i32* %i, align 4
  %543 = load i32* %byy, align 4
  %544 = add nsw i32 %542, %543
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds [16 x [16 x i32]]* %curr_blk, i32 0, i64 %545
  %547 = getelementptr inbounds [16 x i32]* %546, i32 0, i64 %541
  %548 = load i32* %547, align 4
  %549 = load i32* %k, align 4
  %550 = add nsw i32 %549, 1
  store i32 %550, i32* %k, align 4
  %551 = sext i32 %549 to i64
  %552 = getelementptr inbounds [64 x i32]* %diff, i32 0, i64 %551
  store i32 %548, i32* %552, align 4
  br label %553

; <label>:553                                     ; preds = %537
  %554 = load i32* %j, align 4
  %555 = add nsw i32 %554, 1
  store i32 %555, i32* %j, align 4
  br label %534

; <label>:556                                     ; preds = %534
  br label %557

; <label>:557                                     ; preds = %556
  %558 = load i32* %i, align 4
  %559 = add nsw i32 %558, 1
  store i32 %559, i32* %i, align 4
  br label %530

; <label>:560                                     ; preds = %530
  %561 = getelementptr inbounds [64 x i32]* %diff, i32 0, i32 0
  %562 = load %struct.InputParameters** @input, align 8
  %563 = getelementptr inbounds %struct.InputParameters* %562, i32 0, i32 6
  %564 = load i32* %563, align 4
  %565 = call i32 @SATD8X8(i32* %561, i32 %564)
  %566 = load i32* %mcost, align 4
  %567 = add nsw i32 %566, %565
  store i32 %567, i32* %mcost, align 4
  br label %568

; <label>:568                                     ; preds = %560
  %569 = load i32* %bsx, align 4
  %570 = load i32* %bxx, align 4
  %571 = add nsw i32 %570, %569
  store i32 %571, i32* %bxx, align 4
  br label %519

; <label>:572                                     ; preds = %519
  br label %573

; <label>:573                                     ; preds = %572
  %574 = load i32* %bsy, align 4
  %575 = load i32* %byy, align 4
  %576 = add nsw i32 %575, %574
  store i32 %576, i32* %byy, align 4
  br label %508

; <label>:577                                     ; preds = %508
  br label %578

; <label>:578                                     ; preds = %577, %504, %499
  %579 = load i32* %mcost, align 4
  ret i32 %579
}

declare void @LumaPrediction4x4Bi(i32, i32, i32, i32, i32, i16 signext, i16 signext, i32) #2

; Function Attrs: nounwind uwtable
define i32 @BlockMotionSearch(i16 signext %ref, i32 %list, i32 %mb_x, i32 %mb_y, i32 %blocktype, i32 %search_range, double %lambda) #0 {
  %1 = alloca i16, align 2
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca double, align 8
  %pred_mv_x = alloca i16, align 2
  %pred_mv_y = alloca i16, align 2
  %mv_x = alloca i16, align 2
  %mv_y = alloca i16, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %max_value = alloca i32, align 4
  %min_mcost = alloca i32, align 4
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %bsx = alloca i32, align 4
  %bsy = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %pred_mv = alloca i16*, align 8
  %mv_array = alloca i16***, align 8
  %all_mv = alloca i16******, align 8
  %tstruct1 = alloca %struct.timeb, align 8
  %tstruct2 = alloca %struct.timeb, align 8
  %me_tmp_time = alloca i32, align 4
  %N_Bframe = alloca i32, align 4
  %n_Bframe = alloca i32, align 4
  %cost = alloca i32, align 4
  %h4x4blkno = alloca i32, align 4
  %v4x4blkno = alloca i32, align 4
  %bipred_mv = alloca i16******, align 8
  %min_mcostbi = alloca i32, align 4
  %bimv_x = alloca i16, align 2
  %bimv_y = alloca i16, align 2
  %tempmv_x = alloca i16, align 2
  %tempmv_y = alloca i16, align 2
  %pred_mv_x1 = alloca i16, align 2
  %pred_mv_y1 = alloca i16, align 2
  %pred_mv_x2 = alloca i16, align 2
  %pred_mv_y2 = alloca i16, align 2
  %iterlist = alloca i16, align 2
  %pred_mv_bi = alloca [2 x i16], align 2
  store i16 %ref, i16* %1, align 2
  store i32 %list, i32* %2, align 4
  store i32 %mb_x, i32* %3, align 4
  store i32 %mb_y, i32* %4, align 4
  store i32 %blocktype, i32* %5, align 4
  store i32 %search_range, i32* %6, align 4
  store double %lambda, double* %7, align 8
  store i32 2147483647, i32* %max_value, align 4
  %8 = load i32* %max_value, align 4
  store i32 %8, i32* %min_mcost, align 4
  %9 = load i32* %3, align 4
  %10 = ashr i32 %9, 2
  store i32 %10, i32* %block_x, align 4
  %11 = load i32* %4, align 4
  %12 = ashr i32 %11, 2
  store i32 %12, i32* %block_y, align 4
  %13 = load i32* %5, align 4
  %14 = sext i32 %13 to i64
  %15 = load %struct.InputParameters** @input, align 8
  %16 = getelementptr inbounds %struct.InputParameters* %15, i32 0, i32 20
  %17 = getelementptr inbounds [8 x [2 x i32]]* %16, i32 0, i64 %14
  %18 = getelementptr inbounds [2 x i32]* %17, i32 0, i64 0
  %19 = load i32* %18, align 4
  store i32 %19, i32* %bsx, align 4
  %20 = load i32* %5, align 4
  %21 = sext i32 %20 to i64
  %22 = load %struct.InputParameters** @input, align 8
  %23 = getelementptr inbounds %struct.InputParameters* %22, i32 0, i32 20
  %24 = getelementptr inbounds [8 x [2 x i32]]* %23, i32 0, i64 %21
  %25 = getelementptr inbounds [2 x i32]* %24, i32 0, i64 1
  %26 = load i32* %25, align 4
  store i32 %26, i32* %bsy, align 4
  %27 = load %struct.ImageParameters** @img, align 8
  %28 = getelementptr inbounds %struct.ImageParameters* %27, i32 0, i32 37
  %29 = load i32* %28, align 4
  %30 = load i32* %3, align 4
  %31 = add nsw i32 %29, %30
  store i32 %31, i32* %pic_pix_x, align 4
  %32 = load %struct.ImageParameters** @img, align 8
  %33 = getelementptr inbounds %struct.ImageParameters* %32, i32 0, i32 38
  %34 = load i32* %33, align 4
  %35 = load i32* %4, align 4
  %36 = add nsw i32 %34, %35
  store i32 %36, i32* %pic_pix_y, align 4
  %37 = load i32* %2, align 4
  %38 = sext i32 %37 to i64
  %39 = load %struct.storable_picture** @enc_picture, align 8
  %40 = getelementptr inbounds %struct.storable_picture* %39, i32 0, i32 35
  %41 = load i16***** %40, align 8
  %42 = getelementptr inbounds i16**** %41, i64 %38
  %43 = load i16**** %42, align 8
  store i16*** %43, i16**** %mv_array, align 8
  %44 = load %struct.ImageParameters** @img, align 8
  %45 = getelementptr inbounds %struct.ImageParameters* %44, i32 0, i32 71
  %46 = load i16******* %45, align 8
  store i16****** %46, i16******* %all_mv, align 8
  store i32 0, i32* %N_Bframe, align 4
  store i32 0, i32* %n_Bframe, align 4
  %47 = call i32 @ftime(%struct.timeb* %tstruct1)
  %48 = load %struct.InputParameters** @input, align 8
  %49 = getelementptr inbounds %struct.InputParameters* %48, i32 0, i32 134
  %50 = load i32* %49, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %66

; <label>:52                                      ; preds = %0
  %53 = load %struct.InputParameters** @input, align 8
  %54 = getelementptr inbounds %struct.InputParameters* %53, i32 0, i32 34
  %55 = load i32* %54, align 4
  store i32 %55, i32* %N_Bframe, align 4
  %56 = load i32* %N_Bframe, align 4
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %63

; <label>:58                                      ; preds = %52
  %59 = load i32* @Bframe_ctr, align 4
  %60 = load i32* %N_Bframe, align 4
  %61 = srem i32 %59, %60
  %62 = add nsw i32 %61, 1
  br label %64

; <label>:63                                      ; preds = %52
  br label %64

; <label>:64                                      ; preds = %63, %58
  %65 = phi i32 [ %62, %58 ], [ 0, %63 ]
  store i32 %65, i32* %n_Bframe, align 4
  br label %66

; <label>:66                                      ; preds = %64, %0
  %67 = load i32* %5, align 4
  %68 = sext i32 %67 to i64
  %69 = load i16* %1, align 2
  %70 = sext i16 %69 to i64
  %71 = load i32* %2, align 4
  %72 = sext i32 %71 to i64
  %73 = load i32* %block_y, align 4
  %74 = sext i32 %73 to i64
  %75 = load i32* %block_x, align 4
  %76 = sext i32 %75 to i64
  %77 = load %struct.ImageParameters** @img, align 8
  %78 = getelementptr inbounds %struct.ImageParameters* %77, i32 0, i32 70
  %79 = load i16******* %78, align 8
  %80 = getelementptr inbounds i16****** %79, i64 %76
  %81 = load i16****** %80, align 8
  %82 = getelementptr inbounds i16***** %81, i64 %74
  %83 = load i16***** %82, align 8
  %84 = getelementptr inbounds i16**** %83, i64 %72
  %85 = load i16**** %84, align 8
  %86 = getelementptr inbounds i16*** %85, i64 %70
  %87 = load i16*** %86, align 8
  %88 = getelementptr inbounds i16** %87, i64 %68
  %89 = load i16** %88, align 8
  store i16* %89, i16** %pred_mv, align 8
  store i32 0, i32* %j, align 4
  br label %90

; <label>:90                                      ; preds = %124, %66
  %91 = load i32* %j, align 4
  %92 = load i32* %bsy, align 4
  %93 = icmp slt i32 %91, %92
  br i1 %93, label %94, label %127

; <label>:94                                      ; preds = %90
  store i32 0, i32* %i, align 4
  br label %95

; <label>:95                                      ; preds = %120, %94
  %96 = load i32* %i, align 4
  %97 = load i32* %bsx, align 4
  %98 = icmp slt i32 %96, %97
  br i1 %98, label %99, label %123

; <label>:99                                      ; preds = %95
  %100 = load i32* %pic_pix_x, align 4
  %101 = load i32* %i, align 4
  %102 = add nsw i32 %100, %101
  %103 = sext i32 %102 to i64
  %104 = load i32* %pic_pix_y, align 4
  %105 = load i32* %j, align 4
  %106 = add nsw i32 %104, %105
  %107 = sext i32 %106 to i64
  %108 = load i16*** @imgY_org, align 8
  %109 = getelementptr inbounds i16** %108, i64 %107
  %110 = load i16** %109, align 8
  %111 = getelementptr inbounds i16* %110, i64 %103
  %112 = load i16* %111, align 2
  %113 = load i32* %i, align 4
  %114 = sext i32 %113 to i64
  %115 = load i32* %j, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i64 %116
  %118 = load i16** %117, align 8
  %119 = getelementptr inbounds i16* %118, i64 %114
  store i16 %112, i16* %119, align 2
  br label %120

; <label>:120                                     ; preds = %99
  %121 = load i32* %i, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %i, align 4
  br label %95

; <label>:123                                     ; preds = %95
  br label %124

; <label>:124                                     ; preds = %123
  %125 = load i32* %j, align 4
  %126 = add nsw i32 %125, 1
  store i32 %126, i32* %j, align 4
  br label %90

; <label>:127                                     ; preds = %90
  %128 = load %struct.InputParameters** @input, align 8
  %129 = getelementptr inbounds %struct.InputParameters* %128, i32 0, i32 134
  %130 = load i32* %129, align 4
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %132, label %1779

; <label>:132                                     ; preds = %127
  %133 = load i32* %5, align 4
  %134 = icmp sgt i32 %133, 6
  br i1 %134, label %135, label %240

; <label>:135                                     ; preds = %132
  %136 = load i16* %1, align 2
  %137 = sext i16 %136 to i64
  %138 = load i32* %2, align 4
  %139 = sext i32 %138 to i64
  %140 = load i32* %block_y, align 4
  %141 = sext i32 %140 to i64
  %142 = load i32* %block_x, align 4
  %143 = sext i32 %142 to i64
  %144 = load i16******* %all_mv, align 8
  %145 = getelementptr inbounds i16****** %144, i64 %143
  %146 = load i16****** %145, align 8
  %147 = getelementptr inbounds i16***** %146, i64 %141
  %148 = load i16***** %147, align 8
  %149 = getelementptr inbounds i16**** %148, i64 %139
  %150 = load i16**** %149, align 8
  %151 = getelementptr inbounds i16*** %150, i64 %137
  %152 = load i16*** %151, align 8
  %153 = getelementptr inbounds i16** %152, i64 5
  %154 = load i16** %153, align 8
  %155 = getelementptr inbounds i16* %154, i64 0
  %156 = load i16* %155, align 2
  %157 = sext i16 %156 to i32
  store i32 %157, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %158 = load i16* %1, align 2
  %159 = sext i16 %158 to i64
  %160 = load i32* %2, align 4
  %161 = sext i32 %160 to i64
  %162 = load i32* %block_y, align 4
  %163 = sext i32 %162 to i64
  %164 = load i32* %block_x, align 4
  %165 = sext i32 %164 to i64
  %166 = load i16******* %all_mv, align 8
  %167 = getelementptr inbounds i16****** %166, i64 %165
  %168 = load i16****** %167, align 8
  %169 = getelementptr inbounds i16***** %168, i64 %163
  %170 = load i16***** %169, align 8
  %171 = getelementptr inbounds i16**** %170, i64 %161
  %172 = load i16**** %171, align 8
  %173 = getelementptr inbounds i16*** %172, i64 %159
  %174 = load i16*** %173, align 8
  %175 = getelementptr inbounds i16** %174, i64 5
  %176 = load i16** %175, align 8
  %177 = getelementptr inbounds i16* %176, i64 1
  %178 = load i16* %177, align 2
  %179 = sext i16 %178 to i32
  store i32 %179, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %180 = load i32* %2, align 4
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %208

; <label>:182                                     ; preds = %135
  %183 = load %struct.ImageParameters** @img, align 8
  %184 = getelementptr inbounds %struct.ImageParameters* %183, i32 0, i32 34
  %185 = load i32* %184, align 4
  %186 = ashr i32 %185, 2
  %187 = load i32* %block_y, align 4
  %188 = add nsw i32 %186, %187
  %189 = sext i32 %188 to i64
  %190 = load %struct.ImageParameters** @img, align 8
  %191 = getelementptr inbounds %struct.ImageParameters* %190, i32 0, i32 33
  %192 = load i32* %191, align 4
  %193 = ashr i32 %192, 2
  %194 = load i32* %block_x, align 4
  %195 = add nsw i32 %193, %194
  %196 = sext i32 %195 to i64
  %197 = load i32****** @all_bwmincost, align 8
  %198 = getelementptr inbounds i32***** %197, i64 %196
  %199 = load i32***** %198, align 8
  %200 = getelementptr inbounds i32**** %199, i64 %189
  %201 = load i32**** %200, align 8
  %202 = getelementptr inbounds i32*** %201, i64 0
  %203 = load i32*** %202, align 8
  %204 = getelementptr inbounds i32** %203, i64 5
  %205 = load i32** %204, align 8
  %206 = getelementptr inbounds i32* %205, i64 0
  %207 = load i32* %206, align 4
  br label %236

; <label>:208                                     ; preds = %135
  %209 = load i16* %1, align 2
  %210 = sext i16 %209 to i64
  %211 = load %struct.ImageParameters** @img, align 8
  %212 = getelementptr inbounds %struct.ImageParameters* %211, i32 0, i32 34
  %213 = load i32* %212, align 4
  %214 = ashr i32 %213, 2
  %215 = load i32* %block_y, align 4
  %216 = add nsw i32 %214, %215
  %217 = sext i32 %216 to i64
  %218 = load %struct.ImageParameters** @img, align 8
  %219 = getelementptr inbounds %struct.ImageParameters* %218, i32 0, i32 33
  %220 = load i32* %219, align 4
  %221 = ashr i32 %220, 2
  %222 = load i32* %block_x, align 4
  %223 = add nsw i32 %221, %222
  %224 = sext i32 %223 to i64
  %225 = load i32****** @all_mincost, align 8
  %226 = getelementptr inbounds i32***** %225, i64 %224
  %227 = load i32***** %226, align 8
  %228 = getelementptr inbounds i32**** %227, i64 %217
  %229 = load i32**** %228, align 8
  %230 = getelementptr inbounds i32*** %229, i64 %210
  %231 = load i32*** %230, align 8
  %232 = getelementptr inbounds i32** %231, i64 5
  %233 = load i32** %232, align 8
  %234 = getelementptr inbounds i32* %233, i64 0
  %235 = load i32* %234, align 4
  br label %236

; <label>:236                                     ; preds = %208, %182
  %237 = phi i32 [ %207, %182 ], [ %235, %208 ]
  store i32 %237, i32* @pred_SAD_uplayer, align 4
  %238 = load i32* @pred_SAD_uplayer, align 4
  %239 = sdiv i32 %238, 2
  store i32 %239, i32* @pred_SAD_uplayer, align 4
  br label %567

; <label>:240                                     ; preds = %132
  %241 = load i32* %5, align 4
  %242 = icmp sgt i32 %241, 4
  br i1 %242, label %243, label %348

; <label>:243                                     ; preds = %240
  %244 = load i16* %1, align 2
  %245 = sext i16 %244 to i64
  %246 = load i32* %2, align 4
  %247 = sext i32 %246 to i64
  %248 = load i32* %block_y, align 4
  %249 = sext i32 %248 to i64
  %250 = load i32* %block_x, align 4
  %251 = sext i32 %250 to i64
  %252 = load i16******* %all_mv, align 8
  %253 = getelementptr inbounds i16****** %252, i64 %251
  %254 = load i16****** %253, align 8
  %255 = getelementptr inbounds i16***** %254, i64 %249
  %256 = load i16***** %255, align 8
  %257 = getelementptr inbounds i16**** %256, i64 %247
  %258 = load i16**** %257, align 8
  %259 = getelementptr inbounds i16*** %258, i64 %245
  %260 = load i16*** %259, align 8
  %261 = getelementptr inbounds i16** %260, i64 4
  %262 = load i16** %261, align 8
  %263 = getelementptr inbounds i16* %262, i64 0
  %264 = load i16* %263, align 2
  %265 = sext i16 %264 to i32
  store i32 %265, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %266 = load i16* %1, align 2
  %267 = sext i16 %266 to i64
  %268 = load i32* %2, align 4
  %269 = sext i32 %268 to i64
  %270 = load i32* %block_y, align 4
  %271 = sext i32 %270 to i64
  %272 = load i32* %block_x, align 4
  %273 = sext i32 %272 to i64
  %274 = load i16******* %all_mv, align 8
  %275 = getelementptr inbounds i16****** %274, i64 %273
  %276 = load i16****** %275, align 8
  %277 = getelementptr inbounds i16***** %276, i64 %271
  %278 = load i16***** %277, align 8
  %279 = getelementptr inbounds i16**** %278, i64 %269
  %280 = load i16**** %279, align 8
  %281 = getelementptr inbounds i16*** %280, i64 %267
  %282 = load i16*** %281, align 8
  %283 = getelementptr inbounds i16** %282, i64 4
  %284 = load i16** %283, align 8
  %285 = getelementptr inbounds i16* %284, i64 1
  %286 = load i16* %285, align 2
  %287 = sext i16 %286 to i32
  store i32 %287, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %288 = load i32* %2, align 4
  %289 = icmp eq i32 %288, 1
  br i1 %289, label %290, label %316

; <label>:290                                     ; preds = %243
  %291 = load %struct.ImageParameters** @img, align 8
  %292 = getelementptr inbounds %struct.ImageParameters* %291, i32 0, i32 34
  %293 = load i32* %292, align 4
  %294 = ashr i32 %293, 2
  %295 = load i32* %block_y, align 4
  %296 = add nsw i32 %294, %295
  %297 = sext i32 %296 to i64
  %298 = load %struct.ImageParameters** @img, align 8
  %299 = getelementptr inbounds %struct.ImageParameters* %298, i32 0, i32 33
  %300 = load i32* %299, align 4
  %301 = ashr i32 %300, 2
  %302 = load i32* %block_x, align 4
  %303 = add nsw i32 %301, %302
  %304 = sext i32 %303 to i64
  %305 = load i32****** @all_bwmincost, align 8
  %306 = getelementptr inbounds i32***** %305, i64 %304
  %307 = load i32***** %306, align 8
  %308 = getelementptr inbounds i32**** %307, i64 %297
  %309 = load i32**** %308, align 8
  %310 = getelementptr inbounds i32*** %309, i64 0
  %311 = load i32*** %310, align 8
  %312 = getelementptr inbounds i32** %311, i64 4
  %313 = load i32** %312, align 8
  %314 = getelementptr inbounds i32* %313, i64 0
  %315 = load i32* %314, align 4
  br label %344

; <label>:316                                     ; preds = %243
  %317 = load i16* %1, align 2
  %318 = sext i16 %317 to i64
  %319 = load %struct.ImageParameters** @img, align 8
  %320 = getelementptr inbounds %struct.ImageParameters* %319, i32 0, i32 34
  %321 = load i32* %320, align 4
  %322 = ashr i32 %321, 2
  %323 = load i32* %block_y, align 4
  %324 = add nsw i32 %322, %323
  %325 = sext i32 %324 to i64
  %326 = load %struct.ImageParameters** @img, align 8
  %327 = getelementptr inbounds %struct.ImageParameters* %326, i32 0, i32 33
  %328 = load i32* %327, align 4
  %329 = ashr i32 %328, 2
  %330 = load i32* %block_x, align 4
  %331 = add nsw i32 %329, %330
  %332 = sext i32 %331 to i64
  %333 = load i32****** @all_mincost, align 8
  %334 = getelementptr inbounds i32***** %333, i64 %332
  %335 = load i32***** %334, align 8
  %336 = getelementptr inbounds i32**** %335, i64 %325
  %337 = load i32**** %336, align 8
  %338 = getelementptr inbounds i32*** %337, i64 %318
  %339 = load i32*** %338, align 8
  %340 = getelementptr inbounds i32** %339, i64 4
  %341 = load i32** %340, align 8
  %342 = getelementptr inbounds i32* %341, i64 0
  %343 = load i32* %342, align 4
  br label %344

; <label>:344                                     ; preds = %316, %290
  %345 = phi i32 [ %315, %290 ], [ %343, %316 ]
  store i32 %345, i32* @pred_SAD_uplayer, align 4
  %346 = load i32* @pred_SAD_uplayer, align 4
  %347 = sdiv i32 %346, 2
  store i32 %347, i32* @pred_SAD_uplayer, align 4
  br label %566

; <label>:348                                     ; preds = %240
  %349 = load i32* %5, align 4
  %350 = icmp eq i32 %349, 4
  br i1 %350, label %351, label %456

; <label>:351                                     ; preds = %348
  %352 = load i16* %1, align 2
  %353 = sext i16 %352 to i64
  %354 = load i32* %2, align 4
  %355 = sext i32 %354 to i64
  %356 = load i32* %block_y, align 4
  %357 = sext i32 %356 to i64
  %358 = load i32* %block_x, align 4
  %359 = sext i32 %358 to i64
  %360 = load i16******* %all_mv, align 8
  %361 = getelementptr inbounds i16****** %360, i64 %359
  %362 = load i16****** %361, align 8
  %363 = getelementptr inbounds i16***** %362, i64 %357
  %364 = load i16***** %363, align 8
  %365 = getelementptr inbounds i16**** %364, i64 %355
  %366 = load i16**** %365, align 8
  %367 = getelementptr inbounds i16*** %366, i64 %353
  %368 = load i16*** %367, align 8
  %369 = getelementptr inbounds i16** %368, i64 2
  %370 = load i16** %369, align 8
  %371 = getelementptr inbounds i16* %370, i64 0
  %372 = load i16* %371, align 2
  %373 = sext i16 %372 to i32
  store i32 %373, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %374 = load i16* %1, align 2
  %375 = sext i16 %374 to i64
  %376 = load i32* %2, align 4
  %377 = sext i32 %376 to i64
  %378 = load i32* %block_y, align 4
  %379 = sext i32 %378 to i64
  %380 = load i32* %block_x, align 4
  %381 = sext i32 %380 to i64
  %382 = load i16******* %all_mv, align 8
  %383 = getelementptr inbounds i16****** %382, i64 %381
  %384 = load i16****** %383, align 8
  %385 = getelementptr inbounds i16***** %384, i64 %379
  %386 = load i16***** %385, align 8
  %387 = getelementptr inbounds i16**** %386, i64 %377
  %388 = load i16**** %387, align 8
  %389 = getelementptr inbounds i16*** %388, i64 %375
  %390 = load i16*** %389, align 8
  %391 = getelementptr inbounds i16** %390, i64 2
  %392 = load i16** %391, align 8
  %393 = getelementptr inbounds i16* %392, i64 1
  %394 = load i16* %393, align 2
  %395 = sext i16 %394 to i32
  store i32 %395, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %396 = load i32* %2, align 4
  %397 = icmp eq i32 %396, 1
  br i1 %397, label %398, label %424

; <label>:398                                     ; preds = %351
  %399 = load %struct.ImageParameters** @img, align 8
  %400 = getelementptr inbounds %struct.ImageParameters* %399, i32 0, i32 34
  %401 = load i32* %400, align 4
  %402 = ashr i32 %401, 2
  %403 = load i32* %block_y, align 4
  %404 = add nsw i32 %402, %403
  %405 = sext i32 %404 to i64
  %406 = load %struct.ImageParameters** @img, align 8
  %407 = getelementptr inbounds %struct.ImageParameters* %406, i32 0, i32 33
  %408 = load i32* %407, align 4
  %409 = ashr i32 %408, 2
  %410 = load i32* %block_x, align 4
  %411 = add nsw i32 %409, %410
  %412 = sext i32 %411 to i64
  %413 = load i32****** @all_bwmincost, align 8
  %414 = getelementptr inbounds i32***** %413, i64 %412
  %415 = load i32***** %414, align 8
  %416 = getelementptr inbounds i32**** %415, i64 %405
  %417 = load i32**** %416, align 8
  %418 = getelementptr inbounds i32*** %417, i64 0
  %419 = load i32*** %418, align 8
  %420 = getelementptr inbounds i32** %419, i64 2
  %421 = load i32** %420, align 8
  %422 = getelementptr inbounds i32* %421, i64 0
  %423 = load i32* %422, align 4
  br label %452

; <label>:424                                     ; preds = %351
  %425 = load i16* %1, align 2
  %426 = sext i16 %425 to i64
  %427 = load %struct.ImageParameters** @img, align 8
  %428 = getelementptr inbounds %struct.ImageParameters* %427, i32 0, i32 34
  %429 = load i32* %428, align 4
  %430 = ashr i32 %429, 2
  %431 = load i32* %block_y, align 4
  %432 = add nsw i32 %430, %431
  %433 = sext i32 %432 to i64
  %434 = load %struct.ImageParameters** @img, align 8
  %435 = getelementptr inbounds %struct.ImageParameters* %434, i32 0, i32 33
  %436 = load i32* %435, align 4
  %437 = ashr i32 %436, 2
  %438 = load i32* %block_x, align 4
  %439 = add nsw i32 %437, %438
  %440 = sext i32 %439 to i64
  %441 = load i32****** @all_mincost, align 8
  %442 = getelementptr inbounds i32***** %441, i64 %440
  %443 = load i32***** %442, align 8
  %444 = getelementptr inbounds i32**** %443, i64 %433
  %445 = load i32**** %444, align 8
  %446 = getelementptr inbounds i32*** %445, i64 %426
  %447 = load i32*** %446, align 8
  %448 = getelementptr inbounds i32** %447, i64 2
  %449 = load i32** %448, align 8
  %450 = getelementptr inbounds i32* %449, i64 0
  %451 = load i32* %450, align 4
  br label %452

; <label>:452                                     ; preds = %424, %398
  %453 = phi i32 [ %423, %398 ], [ %451, %424 ]
  store i32 %453, i32* @pred_SAD_uplayer, align 4
  %454 = load i32* @pred_SAD_uplayer, align 4
  %455 = sdiv i32 %454, 2
  store i32 %455, i32* @pred_SAD_uplayer, align 4
  br label %565

; <label>:456                                     ; preds = %348
  %457 = load i32* %5, align 4
  %458 = icmp sgt i32 %457, 1
  br i1 %458, label %459, label %564

; <label>:459                                     ; preds = %456
  %460 = load i16* %1, align 2
  %461 = sext i16 %460 to i64
  %462 = load i32* %2, align 4
  %463 = sext i32 %462 to i64
  %464 = load i32* %block_y, align 4
  %465 = sext i32 %464 to i64
  %466 = load i32* %block_x, align 4
  %467 = sext i32 %466 to i64
  %468 = load i16******* %all_mv, align 8
  %469 = getelementptr inbounds i16****** %468, i64 %467
  %470 = load i16****** %469, align 8
  %471 = getelementptr inbounds i16***** %470, i64 %465
  %472 = load i16***** %471, align 8
  %473 = getelementptr inbounds i16**** %472, i64 %463
  %474 = load i16**** %473, align 8
  %475 = getelementptr inbounds i16*** %474, i64 %461
  %476 = load i16*** %475, align 8
  %477 = getelementptr inbounds i16** %476, i64 1
  %478 = load i16** %477, align 8
  %479 = getelementptr inbounds i16* %478, i64 0
  %480 = load i16* %479, align 2
  %481 = sext i16 %480 to i32
  store i32 %481, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %482 = load i16* %1, align 2
  %483 = sext i16 %482 to i64
  %484 = load i32* %2, align 4
  %485 = sext i32 %484 to i64
  %486 = load i32* %block_y, align 4
  %487 = sext i32 %486 to i64
  %488 = load i32* %block_x, align 4
  %489 = sext i32 %488 to i64
  %490 = load i16******* %all_mv, align 8
  %491 = getelementptr inbounds i16****** %490, i64 %489
  %492 = load i16****** %491, align 8
  %493 = getelementptr inbounds i16***** %492, i64 %487
  %494 = load i16***** %493, align 8
  %495 = getelementptr inbounds i16**** %494, i64 %485
  %496 = load i16**** %495, align 8
  %497 = getelementptr inbounds i16*** %496, i64 %483
  %498 = load i16*** %497, align 8
  %499 = getelementptr inbounds i16** %498, i64 1
  %500 = load i16** %499, align 8
  %501 = getelementptr inbounds i16* %500, i64 1
  %502 = load i16* %501, align 2
  %503 = sext i16 %502 to i32
  store i32 %503, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %504 = load i32* %2, align 4
  %505 = icmp eq i32 %504, 1
  br i1 %505, label %506, label %532

; <label>:506                                     ; preds = %459
  %507 = load %struct.ImageParameters** @img, align 8
  %508 = getelementptr inbounds %struct.ImageParameters* %507, i32 0, i32 34
  %509 = load i32* %508, align 4
  %510 = ashr i32 %509, 2
  %511 = load i32* %block_y, align 4
  %512 = add nsw i32 %510, %511
  %513 = sext i32 %512 to i64
  %514 = load %struct.ImageParameters** @img, align 8
  %515 = getelementptr inbounds %struct.ImageParameters* %514, i32 0, i32 33
  %516 = load i32* %515, align 4
  %517 = ashr i32 %516, 2
  %518 = load i32* %block_x, align 4
  %519 = add nsw i32 %517, %518
  %520 = sext i32 %519 to i64
  %521 = load i32****** @all_bwmincost, align 8
  %522 = getelementptr inbounds i32***** %521, i64 %520
  %523 = load i32***** %522, align 8
  %524 = getelementptr inbounds i32**** %523, i64 %513
  %525 = load i32**** %524, align 8
  %526 = getelementptr inbounds i32*** %525, i64 0
  %527 = load i32*** %526, align 8
  %528 = getelementptr inbounds i32** %527, i64 1
  %529 = load i32** %528, align 8
  %530 = getelementptr inbounds i32* %529, i64 0
  %531 = load i32* %530, align 4
  br label %560

; <label>:532                                     ; preds = %459
  %533 = load i16* %1, align 2
  %534 = sext i16 %533 to i64
  %535 = load %struct.ImageParameters** @img, align 8
  %536 = getelementptr inbounds %struct.ImageParameters* %535, i32 0, i32 34
  %537 = load i32* %536, align 4
  %538 = ashr i32 %537, 2
  %539 = load i32* %block_y, align 4
  %540 = add nsw i32 %538, %539
  %541 = sext i32 %540 to i64
  %542 = load %struct.ImageParameters** @img, align 8
  %543 = getelementptr inbounds %struct.ImageParameters* %542, i32 0, i32 33
  %544 = load i32* %543, align 4
  %545 = ashr i32 %544, 2
  %546 = load i32* %block_x, align 4
  %547 = add nsw i32 %545, %546
  %548 = sext i32 %547 to i64
  %549 = load i32****** @all_mincost, align 8
  %550 = getelementptr inbounds i32***** %549, i64 %548
  %551 = load i32***** %550, align 8
  %552 = getelementptr inbounds i32**** %551, i64 %541
  %553 = load i32**** %552, align 8
  %554 = getelementptr inbounds i32*** %553, i64 %534
  %555 = load i32*** %554, align 8
  %556 = getelementptr inbounds i32** %555, i64 1
  %557 = load i32** %556, align 8
  %558 = getelementptr inbounds i32* %557, i64 0
  %559 = load i32* %558, align 4
  br label %560

; <label>:560                                     ; preds = %532, %506
  %561 = phi i32 [ %531, %506 ], [ %559, %532 ]
  store i32 %561, i32* @pred_SAD_uplayer, align 4
  %562 = load i32* @pred_SAD_uplayer, align 4
  %563 = sdiv i32 %562, 2
  store i32 %563, i32* @pred_SAD_uplayer, align 4
  br label %564

; <label>:564                                     ; preds = %560, %456
  br label %565

; <label>:565                                     ; preds = %564, %452
  br label %566

; <label>:566                                     ; preds = %565, %344
  br label %567

; <label>:567                                     ; preds = %566, %236
  %568 = load %struct.ImageParameters** @img, align 8
  %569 = getelementptr inbounds %struct.ImageParameters* %568, i32 0, i32 6
  %570 = load i32* %569, align 4
  %571 = icmp eq i32 %570, 1
  br i1 %571, label %572, label %1013

; <label>:572                                     ; preds = %567
  %573 = load %struct.ImageParameters** @img, align 8
  %574 = getelementptr inbounds %struct.ImageParameters* %573, i32 0, i32 113
  %575 = load i32* %574, align 4
  %576 = icmp sgt i32 %575, 0
  br i1 %576, label %577, label %1013

; <label>:577                                     ; preds = %572
  %578 = load i32* %5, align 4
  %579 = icmp sgt i32 %578, 6
  br i1 %579, label %580, label %685

; <label>:580                                     ; preds = %577
  %581 = load i16* %1, align 2
  %582 = sext i16 %581 to i64
  %583 = load i32* %2, align 4
  %584 = sext i32 %583 to i64
  %585 = load i32* %block_y, align 4
  %586 = sext i32 %585 to i64
  %587 = load i32* %block_x, align 4
  %588 = sext i32 %587 to i64
  %589 = load i16******* %all_mv, align 8
  %590 = getelementptr inbounds i16****** %589, i64 %588
  %591 = load i16****** %590, align 8
  %592 = getelementptr inbounds i16***** %591, i64 %586
  %593 = load i16***** %592, align 8
  %594 = getelementptr inbounds i16**** %593, i64 %584
  %595 = load i16**** %594, align 8
  %596 = getelementptr inbounds i16*** %595, i64 %582
  %597 = load i16*** %596, align 8
  %598 = getelementptr inbounds i16** %597, i64 5
  %599 = load i16** %598, align 8
  %600 = getelementptr inbounds i16* %599, i64 0
  %601 = load i16* %600, align 2
  %602 = sext i16 %601 to i32
  store i32 %602, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %603 = load i16* %1, align 2
  %604 = sext i16 %603 to i64
  %605 = load i32* %2, align 4
  %606 = sext i32 %605 to i64
  %607 = load i32* %block_y, align 4
  %608 = sext i32 %607 to i64
  %609 = load i32* %block_x, align 4
  %610 = sext i32 %609 to i64
  %611 = load i16******* %all_mv, align 8
  %612 = getelementptr inbounds i16****** %611, i64 %610
  %613 = load i16****** %612, align 8
  %614 = getelementptr inbounds i16***** %613, i64 %608
  %615 = load i16***** %614, align 8
  %616 = getelementptr inbounds i16**** %615, i64 %606
  %617 = load i16**** %616, align 8
  %618 = getelementptr inbounds i16*** %617, i64 %604
  %619 = load i16*** %618, align 8
  %620 = getelementptr inbounds i16** %619, i64 5
  %621 = load i16** %620, align 8
  %622 = getelementptr inbounds i16* %621, i64 1
  %623 = load i16* %622, align 2
  %624 = sext i16 %623 to i32
  store i32 %624, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %625 = load i32* %2, align 4
  %626 = icmp eq i32 %625, 1
  br i1 %626, label %627, label %653

; <label>:627                                     ; preds = %580
  %628 = load %struct.ImageParameters** @img, align 8
  %629 = getelementptr inbounds %struct.ImageParameters* %628, i32 0, i32 34
  %630 = load i32* %629, align 4
  %631 = ashr i32 %630, 2
  %632 = load i32* %block_y, align 4
  %633 = add nsw i32 %631, %632
  %634 = sext i32 %633 to i64
  %635 = load %struct.ImageParameters** @img, align 8
  %636 = getelementptr inbounds %struct.ImageParameters* %635, i32 0, i32 33
  %637 = load i32* %636, align 4
  %638 = ashr i32 %637, 2
  %639 = load i32* %block_x, align 4
  %640 = add nsw i32 %638, %639
  %641 = sext i32 %640 to i64
  %642 = load i32****** @all_bwmincost, align 8
  %643 = getelementptr inbounds i32***** %642, i64 %641
  %644 = load i32***** %643, align 8
  %645 = getelementptr inbounds i32**** %644, i64 %634
  %646 = load i32**** %645, align 8
  %647 = getelementptr inbounds i32*** %646, i64 0
  %648 = load i32*** %647, align 8
  %649 = getelementptr inbounds i32** %648, i64 5
  %650 = load i32** %649, align 8
  %651 = getelementptr inbounds i32* %650, i64 0
  %652 = load i32* %651, align 4
  br label %681

; <label>:653                                     ; preds = %580
  %654 = load i16* %1, align 2
  %655 = sext i16 %654 to i64
  %656 = load %struct.ImageParameters** @img, align 8
  %657 = getelementptr inbounds %struct.ImageParameters* %656, i32 0, i32 34
  %658 = load i32* %657, align 4
  %659 = ashr i32 %658, 2
  %660 = load i32* %block_y, align 4
  %661 = add nsw i32 %659, %660
  %662 = sext i32 %661 to i64
  %663 = load %struct.ImageParameters** @img, align 8
  %664 = getelementptr inbounds %struct.ImageParameters* %663, i32 0, i32 33
  %665 = load i32* %664, align 4
  %666 = ashr i32 %665, 2
  %667 = load i32* %block_x, align 4
  %668 = add nsw i32 %666, %667
  %669 = sext i32 %668 to i64
  %670 = load i32****** @all_mincost, align 8
  %671 = getelementptr inbounds i32***** %670, i64 %669
  %672 = load i32***** %671, align 8
  %673 = getelementptr inbounds i32**** %672, i64 %662
  %674 = load i32**** %673, align 8
  %675 = getelementptr inbounds i32*** %674, i64 %655
  %676 = load i32*** %675, align 8
  %677 = getelementptr inbounds i32** %676, i64 5
  %678 = load i32** %677, align 8
  %679 = getelementptr inbounds i32* %678, i64 0
  %680 = load i32* %679, align 4
  br label %681

; <label>:681                                     ; preds = %653, %627
  %682 = phi i32 [ %652, %627 ], [ %680, %653 ]
  store i32 %682, i32* @pred_SAD_uplayer, align 4
  %683 = load i32* @pred_SAD_uplayer, align 4
  %684 = sdiv i32 %683, 2
  store i32 %684, i32* @pred_SAD_uplayer, align 4
  br label %1012

; <label>:685                                     ; preds = %577
  %686 = load i32* %5, align 4
  %687 = icmp sgt i32 %686, 4
  br i1 %687, label %688, label %793

; <label>:688                                     ; preds = %685
  %689 = load i16* %1, align 2
  %690 = sext i16 %689 to i64
  %691 = load i32* %2, align 4
  %692 = sext i32 %691 to i64
  %693 = load i32* %block_y, align 4
  %694 = sext i32 %693 to i64
  %695 = load i32* %block_x, align 4
  %696 = sext i32 %695 to i64
  %697 = load i16******* %all_mv, align 8
  %698 = getelementptr inbounds i16****** %697, i64 %696
  %699 = load i16****** %698, align 8
  %700 = getelementptr inbounds i16***** %699, i64 %694
  %701 = load i16***** %700, align 8
  %702 = getelementptr inbounds i16**** %701, i64 %692
  %703 = load i16**** %702, align 8
  %704 = getelementptr inbounds i16*** %703, i64 %690
  %705 = load i16*** %704, align 8
  %706 = getelementptr inbounds i16** %705, i64 4
  %707 = load i16** %706, align 8
  %708 = getelementptr inbounds i16* %707, i64 0
  %709 = load i16* %708, align 2
  %710 = sext i16 %709 to i32
  store i32 %710, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %711 = load i16* %1, align 2
  %712 = sext i16 %711 to i64
  %713 = load i32* %2, align 4
  %714 = sext i32 %713 to i64
  %715 = load i32* %block_y, align 4
  %716 = sext i32 %715 to i64
  %717 = load i32* %block_x, align 4
  %718 = sext i32 %717 to i64
  %719 = load i16******* %all_mv, align 8
  %720 = getelementptr inbounds i16****** %719, i64 %718
  %721 = load i16****** %720, align 8
  %722 = getelementptr inbounds i16***** %721, i64 %716
  %723 = load i16***** %722, align 8
  %724 = getelementptr inbounds i16**** %723, i64 %714
  %725 = load i16**** %724, align 8
  %726 = getelementptr inbounds i16*** %725, i64 %712
  %727 = load i16*** %726, align 8
  %728 = getelementptr inbounds i16** %727, i64 4
  %729 = load i16** %728, align 8
  %730 = getelementptr inbounds i16* %729, i64 1
  %731 = load i16* %730, align 2
  %732 = sext i16 %731 to i32
  store i32 %732, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %733 = load i32* %2, align 4
  %734 = icmp eq i32 %733, 1
  br i1 %734, label %735, label %761

; <label>:735                                     ; preds = %688
  %736 = load %struct.ImageParameters** @img, align 8
  %737 = getelementptr inbounds %struct.ImageParameters* %736, i32 0, i32 34
  %738 = load i32* %737, align 4
  %739 = ashr i32 %738, 2
  %740 = load i32* %block_y, align 4
  %741 = add nsw i32 %739, %740
  %742 = sext i32 %741 to i64
  %743 = load %struct.ImageParameters** @img, align 8
  %744 = getelementptr inbounds %struct.ImageParameters* %743, i32 0, i32 33
  %745 = load i32* %744, align 4
  %746 = ashr i32 %745, 2
  %747 = load i32* %block_x, align 4
  %748 = add nsw i32 %746, %747
  %749 = sext i32 %748 to i64
  %750 = load i32****** @all_bwmincost, align 8
  %751 = getelementptr inbounds i32***** %750, i64 %749
  %752 = load i32***** %751, align 8
  %753 = getelementptr inbounds i32**** %752, i64 %742
  %754 = load i32**** %753, align 8
  %755 = getelementptr inbounds i32*** %754, i64 0
  %756 = load i32*** %755, align 8
  %757 = getelementptr inbounds i32** %756, i64 4
  %758 = load i32** %757, align 8
  %759 = getelementptr inbounds i32* %758, i64 0
  %760 = load i32* %759, align 4
  br label %789

; <label>:761                                     ; preds = %688
  %762 = load i16* %1, align 2
  %763 = sext i16 %762 to i64
  %764 = load %struct.ImageParameters** @img, align 8
  %765 = getelementptr inbounds %struct.ImageParameters* %764, i32 0, i32 34
  %766 = load i32* %765, align 4
  %767 = ashr i32 %766, 2
  %768 = load i32* %block_y, align 4
  %769 = add nsw i32 %767, %768
  %770 = sext i32 %769 to i64
  %771 = load %struct.ImageParameters** @img, align 8
  %772 = getelementptr inbounds %struct.ImageParameters* %771, i32 0, i32 33
  %773 = load i32* %772, align 4
  %774 = ashr i32 %773, 2
  %775 = load i32* %block_x, align 4
  %776 = add nsw i32 %774, %775
  %777 = sext i32 %776 to i64
  %778 = load i32****** @all_mincost, align 8
  %779 = getelementptr inbounds i32***** %778, i64 %777
  %780 = load i32***** %779, align 8
  %781 = getelementptr inbounds i32**** %780, i64 %770
  %782 = load i32**** %781, align 8
  %783 = getelementptr inbounds i32*** %782, i64 %763
  %784 = load i32*** %783, align 8
  %785 = getelementptr inbounds i32** %784, i64 4
  %786 = load i32** %785, align 8
  %787 = getelementptr inbounds i32* %786, i64 0
  %788 = load i32* %787, align 4
  br label %789

; <label>:789                                     ; preds = %761, %735
  %790 = phi i32 [ %760, %735 ], [ %788, %761 ]
  store i32 %790, i32* @pred_SAD_uplayer, align 4
  %791 = load i32* @pred_SAD_uplayer, align 4
  %792 = sdiv i32 %791, 2
  store i32 %792, i32* @pred_SAD_uplayer, align 4
  br label %1011

; <label>:793                                     ; preds = %685
  %794 = load i32* %5, align 4
  %795 = icmp eq i32 %794, 4
  br i1 %795, label %796, label %901

; <label>:796                                     ; preds = %793
  %797 = load i16* %1, align 2
  %798 = sext i16 %797 to i64
  %799 = load i32* %2, align 4
  %800 = sext i32 %799 to i64
  %801 = load i32* %block_y, align 4
  %802 = sext i32 %801 to i64
  %803 = load i32* %block_x, align 4
  %804 = sext i32 %803 to i64
  %805 = load i16******* %all_mv, align 8
  %806 = getelementptr inbounds i16****** %805, i64 %804
  %807 = load i16****** %806, align 8
  %808 = getelementptr inbounds i16***** %807, i64 %802
  %809 = load i16***** %808, align 8
  %810 = getelementptr inbounds i16**** %809, i64 %800
  %811 = load i16**** %810, align 8
  %812 = getelementptr inbounds i16*** %811, i64 %798
  %813 = load i16*** %812, align 8
  %814 = getelementptr inbounds i16** %813, i64 2
  %815 = load i16** %814, align 8
  %816 = getelementptr inbounds i16* %815, i64 0
  %817 = load i16* %816, align 2
  %818 = sext i16 %817 to i32
  store i32 %818, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %819 = load i16* %1, align 2
  %820 = sext i16 %819 to i64
  %821 = load i32* %2, align 4
  %822 = sext i32 %821 to i64
  %823 = load i32* %block_y, align 4
  %824 = sext i32 %823 to i64
  %825 = load i32* %block_x, align 4
  %826 = sext i32 %825 to i64
  %827 = load i16******* %all_mv, align 8
  %828 = getelementptr inbounds i16****** %827, i64 %826
  %829 = load i16****** %828, align 8
  %830 = getelementptr inbounds i16***** %829, i64 %824
  %831 = load i16***** %830, align 8
  %832 = getelementptr inbounds i16**** %831, i64 %822
  %833 = load i16**** %832, align 8
  %834 = getelementptr inbounds i16*** %833, i64 %820
  %835 = load i16*** %834, align 8
  %836 = getelementptr inbounds i16** %835, i64 2
  %837 = load i16** %836, align 8
  %838 = getelementptr inbounds i16* %837, i64 1
  %839 = load i16* %838, align 2
  %840 = sext i16 %839 to i32
  store i32 %840, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %841 = load i32* %2, align 4
  %842 = icmp eq i32 %841, 1
  br i1 %842, label %843, label %869

; <label>:843                                     ; preds = %796
  %844 = load %struct.ImageParameters** @img, align 8
  %845 = getelementptr inbounds %struct.ImageParameters* %844, i32 0, i32 34
  %846 = load i32* %845, align 4
  %847 = ashr i32 %846, 2
  %848 = load i32* %block_y, align 4
  %849 = add nsw i32 %847, %848
  %850 = sext i32 %849 to i64
  %851 = load %struct.ImageParameters** @img, align 8
  %852 = getelementptr inbounds %struct.ImageParameters* %851, i32 0, i32 33
  %853 = load i32* %852, align 4
  %854 = ashr i32 %853, 2
  %855 = load i32* %block_x, align 4
  %856 = add nsw i32 %854, %855
  %857 = sext i32 %856 to i64
  %858 = load i32****** @all_bwmincost, align 8
  %859 = getelementptr inbounds i32***** %858, i64 %857
  %860 = load i32***** %859, align 8
  %861 = getelementptr inbounds i32**** %860, i64 %850
  %862 = load i32**** %861, align 8
  %863 = getelementptr inbounds i32*** %862, i64 0
  %864 = load i32*** %863, align 8
  %865 = getelementptr inbounds i32** %864, i64 2
  %866 = load i32** %865, align 8
  %867 = getelementptr inbounds i32* %866, i64 0
  %868 = load i32* %867, align 4
  br label %897

; <label>:869                                     ; preds = %796
  %870 = load i16* %1, align 2
  %871 = sext i16 %870 to i64
  %872 = load %struct.ImageParameters** @img, align 8
  %873 = getelementptr inbounds %struct.ImageParameters* %872, i32 0, i32 34
  %874 = load i32* %873, align 4
  %875 = ashr i32 %874, 2
  %876 = load i32* %block_y, align 4
  %877 = add nsw i32 %875, %876
  %878 = sext i32 %877 to i64
  %879 = load %struct.ImageParameters** @img, align 8
  %880 = getelementptr inbounds %struct.ImageParameters* %879, i32 0, i32 33
  %881 = load i32* %880, align 4
  %882 = ashr i32 %881, 2
  %883 = load i32* %block_x, align 4
  %884 = add nsw i32 %882, %883
  %885 = sext i32 %884 to i64
  %886 = load i32****** @all_mincost, align 8
  %887 = getelementptr inbounds i32***** %886, i64 %885
  %888 = load i32***** %887, align 8
  %889 = getelementptr inbounds i32**** %888, i64 %878
  %890 = load i32**** %889, align 8
  %891 = getelementptr inbounds i32*** %890, i64 %871
  %892 = load i32*** %891, align 8
  %893 = getelementptr inbounds i32** %892, i64 2
  %894 = load i32** %893, align 8
  %895 = getelementptr inbounds i32* %894, i64 0
  %896 = load i32* %895, align 4
  br label %897

; <label>:897                                     ; preds = %869, %843
  %898 = phi i32 [ %868, %843 ], [ %896, %869 ]
  store i32 %898, i32* @pred_SAD_uplayer, align 4
  %899 = load i32* @pred_SAD_uplayer, align 4
  %900 = sdiv i32 %899, 2
  store i32 %900, i32* @pred_SAD_uplayer, align 4
  br label %1010

; <label>:901                                     ; preds = %793
  %902 = load i32* %5, align 4
  %903 = icmp sgt i32 %902, 1
  br i1 %903, label %904, label %1009

; <label>:904                                     ; preds = %901
  %905 = load i16* %1, align 2
  %906 = sext i16 %905 to i64
  %907 = load i32* %2, align 4
  %908 = sext i32 %907 to i64
  %909 = load i32* %block_y, align 4
  %910 = sext i32 %909 to i64
  %911 = load i32* %block_x, align 4
  %912 = sext i32 %911 to i64
  %913 = load i16******* %all_mv, align 8
  %914 = getelementptr inbounds i16****** %913, i64 %912
  %915 = load i16****** %914, align 8
  %916 = getelementptr inbounds i16***** %915, i64 %910
  %917 = load i16***** %916, align 8
  %918 = getelementptr inbounds i16**** %917, i64 %908
  %919 = load i16**** %918, align 8
  %920 = getelementptr inbounds i16*** %919, i64 %906
  %921 = load i16*** %920, align 8
  %922 = getelementptr inbounds i16** %921, i64 1
  %923 = load i16** %922, align 8
  %924 = getelementptr inbounds i16* %923, i64 0
  %925 = load i16* %924, align 2
  %926 = sext i16 %925 to i32
  store i32 %926, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 0), align 4
  %927 = load i16* %1, align 2
  %928 = sext i16 %927 to i64
  %929 = load i32* %2, align 4
  %930 = sext i32 %929 to i64
  %931 = load i32* %block_y, align 4
  %932 = sext i32 %931 to i64
  %933 = load i32* %block_x, align 4
  %934 = sext i32 %933 to i64
  %935 = load i16******* %all_mv, align 8
  %936 = getelementptr inbounds i16****** %935, i64 %934
  %937 = load i16****** %936, align 8
  %938 = getelementptr inbounds i16***** %937, i64 %932
  %939 = load i16***** %938, align 8
  %940 = getelementptr inbounds i16**** %939, i64 %930
  %941 = load i16**** %940, align 8
  %942 = getelementptr inbounds i16*** %941, i64 %928
  %943 = load i16*** %942, align 8
  %944 = getelementptr inbounds i16** %943, i64 1
  %945 = load i16** %944, align 8
  %946 = getelementptr inbounds i16* %945, i64 1
  %947 = load i16* %946, align 2
  %948 = sext i16 %947 to i32
  store i32 %948, i32* getelementptr inbounds ([2 x i32]* @pred_MV_uplayer, i32 0, i64 1), align 4
  %949 = load i32* %2, align 4
  %950 = icmp eq i32 %949, 1
  br i1 %950, label %951, label %977

; <label>:951                                     ; preds = %904
  %952 = load %struct.ImageParameters** @img, align 8
  %953 = getelementptr inbounds %struct.ImageParameters* %952, i32 0, i32 34
  %954 = load i32* %953, align 4
  %955 = ashr i32 %954, 2
  %956 = load i32* %block_y, align 4
  %957 = add nsw i32 %955, %956
  %958 = sext i32 %957 to i64
  %959 = load %struct.ImageParameters** @img, align 8
  %960 = getelementptr inbounds %struct.ImageParameters* %959, i32 0, i32 33
  %961 = load i32* %960, align 4
  %962 = ashr i32 %961, 2
  %963 = load i32* %block_x, align 4
  %964 = add nsw i32 %962, %963
  %965 = sext i32 %964 to i64
  %966 = load i32****** @all_bwmincost, align 8
  %967 = getelementptr inbounds i32***** %966, i64 %965
  %968 = load i32***** %967, align 8
  %969 = getelementptr inbounds i32**** %968, i64 %958
  %970 = load i32**** %969, align 8
  %971 = getelementptr inbounds i32*** %970, i64 0
  %972 = load i32*** %971, align 8
  %973 = getelementptr inbounds i32** %972, i64 1
  %974 = load i32** %973, align 8
  %975 = getelementptr inbounds i32* %974, i64 0
  %976 = load i32* %975, align 4
  br label %1005

; <label>:977                                     ; preds = %904
  %978 = load i16* %1, align 2
  %979 = sext i16 %978 to i64
  %980 = load %struct.ImageParameters** @img, align 8
  %981 = getelementptr inbounds %struct.ImageParameters* %980, i32 0, i32 34
  %982 = load i32* %981, align 4
  %983 = ashr i32 %982, 2
  %984 = load i32* %block_y, align 4
  %985 = add nsw i32 %983, %984
  %986 = sext i32 %985 to i64
  %987 = load %struct.ImageParameters** @img, align 8
  %988 = getelementptr inbounds %struct.ImageParameters* %987, i32 0, i32 33
  %989 = load i32* %988, align 4
  %990 = ashr i32 %989, 2
  %991 = load i32* %block_x, align 4
  %992 = add nsw i32 %990, %991
  %993 = sext i32 %992 to i64
  %994 = load i32****** @all_mincost, align 8
  %995 = getelementptr inbounds i32***** %994, i64 %993
  %996 = load i32***** %995, align 8
  %997 = getelementptr inbounds i32**** %996, i64 %986
  %998 = load i32**** %997, align 8
  %999 = getelementptr inbounds i32*** %998, i64 %979
  %1000 = load i32*** %999, align 8
  %1001 = getelementptr inbounds i32** %1000, i64 1
  %1002 = load i32** %1001, align 8
  %1003 = getelementptr inbounds i32* %1002, i64 0
  %1004 = load i32* %1003, align 4
  br label %1005

; <label>:1005                                    ; preds = %977, %951
  %1006 = phi i32 [ %976, %951 ], [ %1004, %977 ]
  store i32 %1006, i32* @pred_SAD_uplayer, align 4
  %1007 = load i32* @pred_SAD_uplayer, align 4
  %1008 = sdiv i32 %1007, 2
  store i32 %1008, i32* @pred_SAD_uplayer, align 4
  br label %1009

; <label>:1009                                    ; preds = %1005, %901
  br label %1010

; <label>:1010                                    ; preds = %1009, %897
  br label %1011

; <label>:1011                                    ; preds = %1010, %789
  br label %1012

; <label>:1012                                    ; preds = %1011, %681
  br label %1013

; <label>:1013                                    ; preds = %1012, %572, %567
  %1014 = load i32* @flag_intra_SAD, align 4
  %1015 = icmp ne i32 %1014, 0
  br i1 %1015, label %1016, label %1017

; <label>:1016                                    ; preds = %1013
  br label %1019

; <label>:1017                                    ; preds = %1013
  %1018 = load i32* @pred_SAD_uplayer, align 4
  br label %1019

; <label>:1019                                    ; preds = %1017, %1016
  %1020 = phi i32 [ 0, %1016 ], [ %1018, %1017 ]
  store i32 %1020, i32* @pred_SAD_uplayer, align 4
  %1021 = load %struct.ImageParameters** @img, align 8
  %1022 = getelementptr inbounds %struct.ImageParameters* %1021, i32 0, i32 0
  %1023 = load i32* %1022, align 4
  %1024 = load i16* %1, align 2
  %1025 = sext i16 %1024 to i32
  %1026 = add nsw i32 %1025, 1
  %1027 = icmp sgt i32 %1023, %1026
  br i1 %1027, label %1028, label %1116

; <label>:1028                                    ; preds = %1019
  %1029 = load i32* %5, align 4
  %1030 = sext i32 %1029 to i64
  %1031 = load i16* %1, align 2
  %1032 = sext i16 %1031 to i64
  %1033 = load %struct.ImageParameters** @img, align 8
  %1034 = getelementptr inbounds %struct.ImageParameters* %1033, i32 0, i32 34
  %1035 = load i32* %1034, align 4
  %1036 = ashr i32 %1035, 2
  %1037 = load i32* %block_y, align 4
  %1038 = add nsw i32 %1036, %1037
  %1039 = sext i32 %1038 to i64
  %1040 = load %struct.ImageParameters** @img, align 8
  %1041 = getelementptr inbounds %struct.ImageParameters* %1040, i32 0, i32 33
  %1042 = load i32* %1041, align 4
  %1043 = ashr i32 %1042, 2
  %1044 = load i32* %block_x, align 4
  %1045 = add nsw i32 %1043, %1044
  %1046 = sext i32 %1045 to i64
  %1047 = load i32****** @all_mincost, align 8
  %1048 = getelementptr inbounds i32***** %1047, i64 %1046
  %1049 = load i32***** %1048, align 8
  %1050 = getelementptr inbounds i32**** %1049, i64 %1039
  %1051 = load i32**** %1050, align 8
  %1052 = getelementptr inbounds i32*** %1051, i64 %1032
  %1053 = load i32*** %1052, align 8
  %1054 = getelementptr inbounds i32** %1053, i64 %1030
  %1055 = load i32** %1054, align 8
  %1056 = getelementptr inbounds i32* %1055, i64 0
  %1057 = load i32* %1056, align 4
  store i32 %1057, i32* @pred_SAD_time, align 4
  %1058 = load i32* %5, align 4
  %1059 = sext i32 %1058 to i64
  %1060 = load i16* %1, align 2
  %1061 = sext i16 %1060 to i64
  %1062 = load %struct.ImageParameters** @img, align 8
  %1063 = getelementptr inbounds %struct.ImageParameters* %1062, i32 0, i32 34
  %1064 = load i32* %1063, align 4
  %1065 = ashr i32 %1064, 2
  %1066 = load i32* %block_y, align 4
  %1067 = add nsw i32 %1065, %1066
  %1068 = sext i32 %1067 to i64
  %1069 = load %struct.ImageParameters** @img, align 8
  %1070 = getelementptr inbounds %struct.ImageParameters* %1069, i32 0, i32 33
  %1071 = load i32* %1070, align 4
  %1072 = ashr i32 %1071, 2
  %1073 = load i32* %block_x, align 4
  %1074 = add nsw i32 %1072, %1073
  %1075 = sext i32 %1074 to i64
  %1076 = load i32****** @all_mincost, align 8
  %1077 = getelementptr inbounds i32***** %1076, i64 %1075
  %1078 = load i32***** %1077, align 8
  %1079 = getelementptr inbounds i32**** %1078, i64 %1068
  %1080 = load i32**** %1079, align 8
  %1081 = getelementptr inbounds i32*** %1080, i64 %1061
  %1082 = load i32*** %1081, align 8
  %1083 = getelementptr inbounds i32** %1082, i64 %1059
  %1084 = load i32** %1083, align 8
  %1085 = getelementptr inbounds i32* %1084, i64 1
  %1086 = load i32* %1085, align 4
  store i32 %1086, i32* getelementptr inbounds ([2 x i32]* @pred_MV_time, i32 0, i64 0), align 4
  %1087 = load i32* %5, align 4
  %1088 = sext i32 %1087 to i64
  %1089 = load i16* %1, align 2
  %1090 = sext i16 %1089 to i64
  %1091 = load %struct.ImageParameters** @img, align 8
  %1092 = getelementptr inbounds %struct.ImageParameters* %1091, i32 0, i32 34
  %1093 = load i32* %1092, align 4
  %1094 = ashr i32 %1093, 2
  %1095 = load i32* %block_y, align 4
  %1096 = add nsw i32 %1094, %1095
  %1097 = sext i32 %1096 to i64
  %1098 = load %struct.ImageParameters** @img, align 8
  %1099 = getelementptr inbounds %struct.ImageParameters* %1098, i32 0, i32 33
  %1100 = load i32* %1099, align 4
  %1101 = ashr i32 %1100, 2
  %1102 = load i32* %block_x, align 4
  %1103 = add nsw i32 %1101, %1102
  %1104 = sext i32 %1103 to i64
  %1105 = load i32****** @all_mincost, align 8
  %1106 = getelementptr inbounds i32***** %1105, i64 %1104
  %1107 = load i32***** %1106, align 8
  %1108 = getelementptr inbounds i32**** %1107, i64 %1097
  %1109 = load i32**** %1108, align 8
  %1110 = getelementptr inbounds i32*** %1109, i64 %1090
  %1111 = load i32*** %1110, align 8
  %1112 = getelementptr inbounds i32** %1111, i64 %1088
  %1113 = load i32** %1112, align 8
  %1114 = getelementptr inbounds i32* %1113, i64 2
  %1115 = load i32* %1114, align 4
  store i32 %1115, i32* getelementptr inbounds ([2 x i32]* @pred_MV_time, i32 0, i64 1), align 4
  br label %1116

; <label>:1116                                    ; preds = %1028, %1019
  %1117 = load i32* %2, align 4
  %1118 = icmp eq i32 %1117, 1
  br i1 %1118, label %1119, label %1252

; <label>:1119                                    ; preds = %1116
  %1120 = load i32* @Bframe_ctr, align 4
  %1121 = load i32* %N_Bframe, align 4
  %1122 = srem i32 %1120, %1121
  %1123 = icmp sgt i32 %1122, 1
  br i1 %1123, label %1124, label %1252

; <label>:1124                                    ; preds = %1119
  %1125 = load i32* %5, align 4
  %1126 = sext i32 %1125 to i64
  %1127 = load i16* %1, align 2
  %1128 = sext i16 %1127 to i64
  %1129 = load %struct.ImageParameters** @img, align 8
  %1130 = getelementptr inbounds %struct.ImageParameters* %1129, i32 0, i32 34
  %1131 = load i32* %1130, align 4
  %1132 = ashr i32 %1131, 2
  %1133 = load i32* %block_y, align 4
  %1134 = add nsw i32 %1132, %1133
  %1135 = sext i32 %1134 to i64
  %1136 = load %struct.ImageParameters** @img, align 8
  %1137 = getelementptr inbounds %struct.ImageParameters* %1136, i32 0, i32 33
  %1138 = load i32* %1137, align 4
  %1139 = ashr i32 %1138, 2
  %1140 = load i32* %block_x, align 4
  %1141 = add nsw i32 %1139, %1140
  %1142 = sext i32 %1141 to i64
  %1143 = load i32****** @all_bwmincost, align 8
  %1144 = getelementptr inbounds i32***** %1143, i64 %1142
  %1145 = load i32***** %1144, align 8
  %1146 = getelementptr inbounds i32**** %1145, i64 %1135
  %1147 = load i32**** %1146, align 8
  %1148 = getelementptr inbounds i32*** %1147, i64 %1128
  %1149 = load i32*** %1148, align 8
  %1150 = getelementptr inbounds i32** %1149, i64 %1126
  %1151 = load i32** %1150, align 8
  %1152 = getelementptr inbounds i32* %1151, i64 0
  %1153 = load i32* %1152, align 4
  store i32 %1153, i32* @pred_SAD_time, align 4
  %1154 = load i32* %5, align 4
  %1155 = sext i32 %1154 to i64
  %1156 = load %struct.ImageParameters** @img, align 8
  %1157 = getelementptr inbounds %struct.ImageParameters* %1156, i32 0, i32 34
  %1158 = load i32* %1157, align 4
  %1159 = ashr i32 %1158, 2
  %1160 = load i32* %block_y, align 4
  %1161 = add nsw i32 %1159, %1160
  %1162 = sext i32 %1161 to i64
  %1163 = load %struct.ImageParameters** @img, align 8
  %1164 = getelementptr inbounds %struct.ImageParameters* %1163, i32 0, i32 33
  %1165 = load i32* %1164, align 4
  %1166 = ashr i32 %1165, 2
  %1167 = load i32* %block_x, align 4
  %1168 = add nsw i32 %1166, %1167
  %1169 = sext i32 %1168 to i64
  %1170 = load i32****** @all_bwmincost, align 8
  %1171 = getelementptr inbounds i32***** %1170, i64 %1169
  %1172 = load i32***** %1171, align 8
  %1173 = getelementptr inbounds i32**** %1172, i64 %1162
  %1174 = load i32**** %1173, align 8
  %1175 = getelementptr inbounds i32*** %1174, i64 0
  %1176 = load i32*** %1175, align 8
  %1177 = getelementptr inbounds i32** %1176, i64 %1155
  %1178 = load i32** %1177, align 8
  %1179 = getelementptr inbounds i32* %1178, i64 1
  %1180 = load i32* %1179, align 4
  %1181 = sitofp i32 %1180 to double
  %1182 = load i32* %n_Bframe, align 4
  %1183 = icmp eq i32 %1182, 1
  br i1 %1183, label %1184, label %1187

; <label>:1184                                    ; preds = %1124
  %1185 = load i32* %N_Bframe, align 4
  %1186 = sitofp i32 %1185 to double
  br label %1199

; <label>:1187                                    ; preds = %1124
  %1188 = load i32* %N_Bframe, align 4
  %1189 = load i32* %n_Bframe, align 4
  %1190 = sub nsw i32 %1188, %1189
  %1191 = sitofp i32 %1190 to double
  %1192 = fadd double %1191, 1.000000e+00
  %1193 = load i32* %N_Bframe, align 4
  %1194 = load i32* %n_Bframe, align 4
  %1195 = sub nsw i32 %1193, %1194
  %1196 = sitofp i32 %1195 to double
  %1197 = fadd double %1196, 2.000000e+00
  %1198 = fdiv double %1192, %1197
  br label %1199

; <label>:1199                                    ; preds = %1187, %1184
  %1200 = phi double [ %1186, %1184 ], [ %1198, %1187 ]
  %1201 = fmul double %1181, %1200
  %1202 = fptosi double %1201 to i32
  store i32 %1202, i32* getelementptr inbounds ([2 x i32]* @pred_MV_time, i32 0, i64 0), align 4
  %1203 = load i32* %5, align 4
  %1204 = sext i32 %1203 to i64
  %1205 = load %struct.ImageParameters** @img, align 8
  %1206 = getelementptr inbounds %struct.ImageParameters* %1205, i32 0, i32 34
  %1207 = load i32* %1206, align 4
  %1208 = ashr i32 %1207, 2
  %1209 = load i32* %block_y, align 4
  %1210 = add nsw i32 %1208, %1209
  %1211 = sext i32 %1210 to i64
  %1212 = load %struct.ImageParameters** @img, align 8
  %1213 = getelementptr inbounds %struct.ImageParameters* %1212, i32 0, i32 33
  %1214 = load i32* %1213, align 4
  %1215 = ashr i32 %1214, 2
  %1216 = load i32* %block_x, align 4
  %1217 = add nsw i32 %1215, %1216
  %1218 = sext i32 %1217 to i64
  %1219 = load i32****** @all_bwmincost, align 8
  %1220 = getelementptr inbounds i32***** %1219, i64 %1218
  %1221 = load i32***** %1220, align 8
  %1222 = getelementptr inbounds i32**** %1221, i64 %1211
  %1223 = load i32**** %1222, align 8
  %1224 = getelementptr inbounds i32*** %1223, i64 0
  %1225 = load i32*** %1224, align 8
  %1226 = getelementptr inbounds i32** %1225, i64 %1204
  %1227 = load i32** %1226, align 8
  %1228 = getelementptr inbounds i32* %1227, i64 2
  %1229 = load i32* %1228, align 4
  %1230 = sitofp i32 %1229 to double
  %1231 = load i32* %n_Bframe, align 4
  %1232 = icmp eq i32 %1231, 1
  br i1 %1232, label %1233, label %1236

; <label>:1233                                    ; preds = %1199
  %1234 = load i32* %N_Bframe, align 4
  %1235 = sitofp i32 %1234 to double
  br label %1248

; <label>:1236                                    ; preds = %1199
  %1237 = load i32* %N_Bframe, align 4
  %1238 = load i32* %n_Bframe, align 4
  %1239 = sub nsw i32 %1237, %1238
  %1240 = sitofp i32 %1239 to double
  %1241 = fadd double %1240, 1.000000e+00
  %1242 = load i32* %N_Bframe, align 4
  %1243 = load i32* %n_Bframe, align 4
  %1244 = sub nsw i32 %1242, %1243
  %1245 = sitofp i32 %1244 to double
  %1246 = fadd double %1245, 2.000000e+00
  %1247 = fdiv double %1241, %1246
  br label %1248

; <label>:1248                                    ; preds = %1236, %1233
  %1249 = phi double [ %1235, %1233 ], [ %1247, %1236 ]
  %1250 = fmul double %1230, %1249
  %1251 = fptosi double %1250 to i32
  store i32 %1251, i32* getelementptr inbounds ([2 x i32]* @pred_MV_time, i32 0, i64 1), align 4
  br label %1252

; <label>:1252                                    ; preds = %1248, %1119, %1116
  %1253 = load %struct.InputParameters** @input, align 8
  %1254 = getelementptr inbounds %struct.InputParameters* %1253, i32 0, i32 91
  %1255 = load i32* %1254, align 4
  %1256 = icmp eq i32 %1255, 1
  br i1 %1256, label %1257, label %1525

; <label>:1257                                    ; preds = %1252
  %1258 = load %struct.ImageParameters** @img, align 8
  %1259 = getelementptr inbounds %struct.ImageParameters* %1258, i32 0, i32 6
  %1260 = load i32* %1259, align 4
  %1261 = icmp eq i32 %1260, 0
  br i1 %1261, label %1262, label %1393

; <label>:1262                                    ; preds = %1257
  %1263 = load i16* %1, align 2
  %1264 = sext i16 %1263 to i32
  %1265 = icmp sgt i32 %1264, 1
  br i1 %1265, label %1266, label %1393

; <label>:1266                                    ; preds = %1262
  %1267 = load i32* %5, align 4
  %1268 = sext i32 %1267 to i64
  %1269 = load i16* %1, align 2
  %1270 = sext i16 %1269 to i32
  %1271 = sub nsw i32 %1270, 2
  %1272 = sext i32 %1271 to i64
  %1273 = load %struct.ImageParameters** @img, align 8
  %1274 = getelementptr inbounds %struct.ImageParameters* %1273, i32 0, i32 34
  %1275 = load i32* %1274, align 4
  %1276 = ashr i32 %1275, 2
  %1277 = load i32* %block_y, align 4
  %1278 = add nsw i32 %1276, %1277
  %1279 = sext i32 %1278 to i64
  %1280 = load %struct.ImageParameters** @img, align 8
  %1281 = getelementptr inbounds %struct.ImageParameters* %1280, i32 0, i32 33
  %1282 = load i32* %1281, align 4
  %1283 = ashr i32 %1282, 2
  %1284 = load i32* %block_x, align 4
  %1285 = add nsw i32 %1283, %1284
  %1286 = sext i32 %1285 to i64
  %1287 = load i32****** @all_mincost, align 8
  %1288 = getelementptr inbounds i32***** %1287, i64 %1286
  %1289 = load i32***** %1288, align 8
  %1290 = getelementptr inbounds i32**** %1289, i64 %1279
  %1291 = load i32**** %1290, align 8
  %1292 = getelementptr inbounds i32*** %1291, i64 %1272
  %1293 = load i32*** %1292, align 8
  %1294 = getelementptr inbounds i32** %1293, i64 %1268
  %1295 = load i32** %1294, align 8
  %1296 = getelementptr inbounds i32* %1295, i64 0
  %1297 = load i32* %1296, align 4
  store i32 %1297, i32* @pred_SAD_ref, align 4
  %1298 = load i32* @flag_intra_SAD, align 4
  %1299 = icmp ne i32 %1298, 0
  br i1 %1299, label %1300, label %1301

; <label>:1300                                    ; preds = %1266
  br label %1303

; <label>:1301                                    ; preds = %1266
  %1302 = load i32* @pred_SAD_ref, align 4
  br label %1303

; <label>:1303                                    ; preds = %1301, %1300
  %1304 = phi i32 [ 0, %1300 ], [ %1302, %1301 ]
  store i32 %1304, i32* @pred_SAD_ref, align 4
  %1305 = load i32* %5, align 4
  %1306 = sext i32 %1305 to i64
  %1307 = load i16* %1, align 2
  %1308 = sext i16 %1307 to i32
  %1309 = sub nsw i32 %1308, 2
  %1310 = sext i32 %1309 to i64
  %1311 = load %struct.ImageParameters** @img, align 8
  %1312 = getelementptr inbounds %struct.ImageParameters* %1311, i32 0, i32 34
  %1313 = load i32* %1312, align 4
  %1314 = ashr i32 %1313, 2
  %1315 = load i32* %block_y, align 4
  %1316 = add nsw i32 %1314, %1315
  %1317 = sext i32 %1316 to i64
  %1318 = load %struct.ImageParameters** @img, align 8
  %1319 = getelementptr inbounds %struct.ImageParameters* %1318, i32 0, i32 33
  %1320 = load i32* %1319, align 4
  %1321 = ashr i32 %1320, 2
  %1322 = load i32* %block_x, align 4
  %1323 = add nsw i32 %1321, %1322
  %1324 = sext i32 %1323 to i64
  %1325 = load i32****** @all_mincost, align 8
  %1326 = getelementptr inbounds i32***** %1325, i64 %1324
  %1327 = load i32***** %1326, align 8
  %1328 = getelementptr inbounds i32**** %1327, i64 %1317
  %1329 = load i32**** %1328, align 8
  %1330 = getelementptr inbounds i32*** %1329, i64 %1310
  %1331 = load i32*** %1330, align 8
  %1332 = getelementptr inbounds i32** %1331, i64 %1306
  %1333 = load i32** %1332, align 8
  %1334 = getelementptr inbounds i32* %1333, i64 1
  %1335 = load i32* %1334, align 4
  store i32 %1335, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %1336 = load i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %1337 = load i16* %1, align 2
  %1338 = sext i16 %1337 to i32
  %1339 = ashr i32 %1338, 1
  %1340 = add nsw i32 %1339, 1
  %1341 = mul nsw i32 %1336, %1340
  %1342 = sitofp i32 %1341 to float
  %1343 = load i16* %1, align 2
  %1344 = sext i16 %1343 to i32
  %1345 = ashr i32 %1344, 1
  %1346 = sitofp i32 %1345 to float
  %1347 = fdiv float %1342, %1346
  %1348 = fptosi float %1347 to i32
  store i32 %1348, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %1349 = load i32* %5, align 4
  %1350 = sext i32 %1349 to i64
  %1351 = load i16* %1, align 2
  %1352 = sext i16 %1351 to i32
  %1353 = sub nsw i32 %1352, 2
  %1354 = sext i32 %1353 to i64
  %1355 = load %struct.ImageParameters** @img, align 8
  %1356 = getelementptr inbounds %struct.ImageParameters* %1355, i32 0, i32 34
  %1357 = load i32* %1356, align 4
  %1358 = ashr i32 %1357, 2
  %1359 = load i32* %block_y, align 4
  %1360 = add nsw i32 %1358, %1359
  %1361 = sext i32 %1360 to i64
  %1362 = load %struct.ImageParameters** @img, align 8
  %1363 = getelementptr inbounds %struct.ImageParameters* %1362, i32 0, i32 33
  %1364 = load i32* %1363, align 4
  %1365 = ashr i32 %1364, 2
  %1366 = load i32* %block_x, align 4
  %1367 = add nsw i32 %1365, %1366
  %1368 = sext i32 %1367 to i64
  %1369 = load i32****** @all_mincost, align 8
  %1370 = getelementptr inbounds i32***** %1369, i64 %1368
  %1371 = load i32***** %1370, align 8
  %1372 = getelementptr inbounds i32**** %1371, i64 %1361
  %1373 = load i32**** %1372, align 8
  %1374 = getelementptr inbounds i32*** %1373, i64 %1354
  %1375 = load i32*** %1374, align 8
  %1376 = getelementptr inbounds i32** %1375, i64 %1350
  %1377 = load i32** %1376, align 8
  %1378 = getelementptr inbounds i32* %1377, i64 2
  %1379 = load i32* %1378, align 4
  store i32 %1379, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  %1380 = load i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  %1381 = load i16* %1, align 2
  %1382 = sext i16 %1381 to i32
  %1383 = ashr i32 %1382, 1
  %1384 = add nsw i32 %1383, 1
  %1385 = mul nsw i32 %1380, %1384
  %1386 = sitofp i32 %1385 to float
  %1387 = load i16* %1, align 2
  %1388 = sext i16 %1387 to i32
  %1389 = ashr i32 %1388, 1
  %1390 = sitofp i32 %1389 to float
  %1391 = fdiv float %1386, %1390
  %1392 = fptosi float %1391 to i32
  store i32 %1392, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  br label %1393

; <label>:1393                                    ; preds = %1303, %1262, %1257
  %1394 = load %struct.ImageParameters** @img, align 8
  %1395 = getelementptr inbounds %struct.ImageParameters* %1394, i32 0, i32 6
  %1396 = load i32* %1395, align 4
  %1397 = icmp eq i32 %1396, 1
  br i1 %1397, label %1398, label %1524

; <label>:1398                                    ; preds = %1393
  %1399 = load i32* %2, align 4
  %1400 = icmp eq i32 %1399, 0
  br i1 %1400, label %1401, label %1524

; <label>:1401                                    ; preds = %1398
  %1402 = load i16* %1, align 2
  %1403 = sext i16 %1402 to i32
  %1404 = icmp eq i32 %1403, 0
  br i1 %1404, label %1409, label %1405

; <label>:1405                                    ; preds = %1401
  %1406 = load i16* %1, align 2
  %1407 = sext i16 %1406 to i32
  %1408 = icmp eq i32 %1407, 1
  br i1 %1408, label %1409, label %1524

; <label>:1409                                    ; preds = %1405, %1401
  %1410 = load i32* %5, align 4
  %1411 = sext i32 %1410 to i64
  %1412 = load %struct.ImageParameters** @img, align 8
  %1413 = getelementptr inbounds %struct.ImageParameters* %1412, i32 0, i32 34
  %1414 = load i32* %1413, align 4
  %1415 = ashr i32 %1414, 2
  %1416 = load i32* %block_y, align 4
  %1417 = add nsw i32 %1415, %1416
  %1418 = sext i32 %1417 to i64
  %1419 = load %struct.ImageParameters** @img, align 8
  %1420 = getelementptr inbounds %struct.ImageParameters* %1419, i32 0, i32 33
  %1421 = load i32* %1420, align 4
  %1422 = ashr i32 %1421, 2
  %1423 = load i32* %block_x, align 4
  %1424 = add nsw i32 %1422, %1423
  %1425 = sext i32 %1424 to i64
  %1426 = load i32****** @all_bwmincost, align 8
  %1427 = getelementptr inbounds i32***** %1426, i64 %1425
  %1428 = load i32***** %1427, align 8
  %1429 = getelementptr inbounds i32**** %1428, i64 %1418
  %1430 = load i32**** %1429, align 8
  %1431 = getelementptr inbounds i32*** %1430, i64 0
  %1432 = load i32*** %1431, align 8
  %1433 = getelementptr inbounds i32** %1432, i64 %1411
  %1434 = load i32** %1433, align 8
  %1435 = getelementptr inbounds i32* %1434, i64 0
  %1436 = load i32* %1435, align 4
  store i32 %1436, i32* @pred_SAD_ref, align 4
  %1437 = load i32* @flag_intra_SAD, align 4
  %1438 = icmp ne i32 %1437, 0
  br i1 %1438, label %1439, label %1440

; <label>:1439                                    ; preds = %1409
  br label %1442

; <label>:1440                                    ; preds = %1409
  %1441 = load i32* @pred_SAD_ref, align 4
  br label %1442

; <label>:1442                                    ; preds = %1440, %1439
  %1443 = phi i32 [ 0, %1439 ], [ %1441, %1440 ]
  store i32 %1443, i32* @pred_SAD_ref, align 4
  %1444 = load i32* %5, align 4
  %1445 = sext i32 %1444 to i64
  %1446 = load i16* %1, align 2
  %1447 = sext i16 %1446 to i64
  %1448 = load %struct.ImageParameters** @img, align 8
  %1449 = getelementptr inbounds %struct.ImageParameters* %1448, i32 0, i32 34
  %1450 = load i32* %1449, align 4
  %1451 = ashr i32 %1450, 2
  %1452 = load i32* %block_y, align 4
  %1453 = add nsw i32 %1451, %1452
  %1454 = sext i32 %1453 to i64
  %1455 = load %struct.ImageParameters** @img, align 8
  %1456 = getelementptr inbounds %struct.ImageParameters* %1455, i32 0, i32 33
  %1457 = load i32* %1456, align 4
  %1458 = ashr i32 %1457, 2
  %1459 = load i32* %block_x, align 4
  %1460 = add nsw i32 %1458, %1459
  %1461 = sext i32 %1460 to i64
  %1462 = load i32****** @all_bwmincost, align 8
  %1463 = getelementptr inbounds i32***** %1462, i64 %1461
  %1464 = load i32***** %1463, align 8
  %1465 = getelementptr inbounds i32**** %1464, i64 %1454
  %1466 = load i32**** %1465, align 8
  %1467 = getelementptr inbounds i32*** %1466, i64 %1447
  %1468 = load i32*** %1467, align 8
  %1469 = getelementptr inbounds i32** %1468, i64 %1445
  %1470 = load i32** %1469, align 8
  %1471 = getelementptr inbounds i32* %1470, i64 1
  %1472 = load i32* %1471, align 4
  %1473 = load i32* %n_Bframe, align 4
  %1474 = sub nsw i32 0, %1473
  %1475 = mul nsw i32 %1472, %1474
  %1476 = sitofp i32 %1475 to float
  %1477 = load i32* %N_Bframe, align 4
  %1478 = load i32* %n_Bframe, align 4
  %1479 = sub nsw i32 %1477, %1478
  %1480 = sitofp i32 %1479 to float
  %1481 = fadd float %1480, 1.000000e+00
  %1482 = fdiv float %1476, %1481
  %1483 = fptosi float %1482 to i32
  store i32 %1483, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %1484 = load i32* %5, align 4
  %1485 = sext i32 %1484 to i64
  %1486 = load i16* %1, align 2
  %1487 = sext i16 %1486 to i64
  %1488 = load %struct.ImageParameters** @img, align 8
  %1489 = getelementptr inbounds %struct.ImageParameters* %1488, i32 0, i32 34
  %1490 = load i32* %1489, align 4
  %1491 = ashr i32 %1490, 2
  %1492 = load i32* %block_y, align 4
  %1493 = add nsw i32 %1491, %1492
  %1494 = sext i32 %1493 to i64
  %1495 = load %struct.ImageParameters** @img, align 8
  %1496 = getelementptr inbounds %struct.ImageParameters* %1495, i32 0, i32 33
  %1497 = load i32* %1496, align 4
  %1498 = ashr i32 %1497, 2
  %1499 = load i32* %block_x, align 4
  %1500 = add nsw i32 %1498, %1499
  %1501 = sext i32 %1500 to i64
  %1502 = load i32****** @all_bwmincost, align 8
  %1503 = getelementptr inbounds i32***** %1502, i64 %1501
  %1504 = load i32***** %1503, align 8
  %1505 = getelementptr inbounds i32**** %1504, i64 %1494
  %1506 = load i32**** %1505, align 8
  %1507 = getelementptr inbounds i32*** %1506, i64 %1487
  %1508 = load i32*** %1507, align 8
  %1509 = getelementptr inbounds i32** %1508, i64 %1485
  %1510 = load i32** %1509, align 8
  %1511 = getelementptr inbounds i32* %1510, i64 2
  %1512 = load i32* %1511, align 4
  %1513 = load i32* %n_Bframe, align 4
  %1514 = sub nsw i32 0, %1513
  %1515 = mul nsw i32 %1512, %1514
  %1516 = sitofp i32 %1515 to float
  %1517 = load i32* %N_Bframe, align 4
  %1518 = load i32* %n_Bframe, align 4
  %1519 = sub nsw i32 %1517, %1518
  %1520 = sitofp i32 %1519 to float
  %1521 = fadd float %1520, 1.000000e+00
  %1522 = fdiv float %1516, %1521
  %1523 = fptosi float %1522 to i32
  store i32 %1523, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  br label %1524

; <label>:1524                                    ; preds = %1442, %1405, %1398, %1393
  br label %1778

; <label>:1525                                    ; preds = %1252
  %1526 = load i16* %1, align 2
  %1527 = sext i16 %1526 to i32
  %1528 = icmp sgt i32 %1527, 0
  br i1 %1528, label %1529, label %1650

; <label>:1529                                    ; preds = %1525
  %1530 = load i32* %5, align 4
  %1531 = sext i32 %1530 to i64
  %1532 = load i16* %1, align 2
  %1533 = sext i16 %1532 to i32
  %1534 = sub nsw i32 %1533, 1
  %1535 = sext i32 %1534 to i64
  %1536 = load %struct.ImageParameters** @img, align 8
  %1537 = getelementptr inbounds %struct.ImageParameters* %1536, i32 0, i32 34
  %1538 = load i32* %1537, align 4
  %1539 = ashr i32 %1538, 2
  %1540 = load i32* %block_y, align 4
  %1541 = add nsw i32 %1539, %1540
  %1542 = sext i32 %1541 to i64
  %1543 = load %struct.ImageParameters** @img, align 8
  %1544 = getelementptr inbounds %struct.ImageParameters* %1543, i32 0, i32 33
  %1545 = load i32* %1544, align 4
  %1546 = ashr i32 %1545, 2
  %1547 = load i32* %block_x, align 4
  %1548 = add nsw i32 %1546, %1547
  %1549 = sext i32 %1548 to i64
  %1550 = load i32****** @all_mincost, align 8
  %1551 = getelementptr inbounds i32***** %1550, i64 %1549
  %1552 = load i32***** %1551, align 8
  %1553 = getelementptr inbounds i32**** %1552, i64 %1542
  %1554 = load i32**** %1553, align 8
  %1555 = getelementptr inbounds i32*** %1554, i64 %1535
  %1556 = load i32*** %1555, align 8
  %1557 = getelementptr inbounds i32** %1556, i64 %1531
  %1558 = load i32** %1557, align 8
  %1559 = getelementptr inbounds i32* %1558, i64 0
  %1560 = load i32* %1559, align 4
  store i32 %1560, i32* @pred_SAD_ref, align 4
  %1561 = load i32* @flag_intra_SAD, align 4
  %1562 = icmp ne i32 %1561, 0
  br i1 %1562, label %1563, label %1564

; <label>:1563                                    ; preds = %1529
  br label %1566

; <label>:1564                                    ; preds = %1529
  %1565 = load i32* @pred_SAD_ref, align 4
  br label %1566

; <label>:1566                                    ; preds = %1564, %1563
  %1567 = phi i32 [ 0, %1563 ], [ %1565, %1564 ]
  store i32 %1567, i32* @pred_SAD_ref, align 4
  %1568 = load i32* %5, align 4
  %1569 = sext i32 %1568 to i64
  %1570 = load i16* %1, align 2
  %1571 = sext i16 %1570 to i32
  %1572 = sub nsw i32 %1571, 1
  %1573 = sext i32 %1572 to i64
  %1574 = load %struct.ImageParameters** @img, align 8
  %1575 = getelementptr inbounds %struct.ImageParameters* %1574, i32 0, i32 34
  %1576 = load i32* %1575, align 4
  %1577 = ashr i32 %1576, 2
  %1578 = load i32* %block_y, align 4
  %1579 = add nsw i32 %1577, %1578
  %1580 = sext i32 %1579 to i64
  %1581 = load %struct.ImageParameters** @img, align 8
  %1582 = getelementptr inbounds %struct.ImageParameters* %1581, i32 0, i32 33
  %1583 = load i32* %1582, align 4
  %1584 = ashr i32 %1583, 2
  %1585 = load i32* %block_x, align 4
  %1586 = add nsw i32 %1584, %1585
  %1587 = sext i32 %1586 to i64
  %1588 = load i32****** @all_mincost, align 8
  %1589 = getelementptr inbounds i32***** %1588, i64 %1587
  %1590 = load i32***** %1589, align 8
  %1591 = getelementptr inbounds i32**** %1590, i64 %1580
  %1592 = load i32**** %1591, align 8
  %1593 = getelementptr inbounds i32*** %1592, i64 %1573
  %1594 = load i32*** %1593, align 8
  %1595 = getelementptr inbounds i32** %1594, i64 %1569
  %1596 = load i32** %1595, align 8
  %1597 = getelementptr inbounds i32* %1596, i64 1
  %1598 = load i32* %1597, align 4
  store i32 %1598, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %1599 = load i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %1600 = load i16* %1, align 2
  %1601 = sext i16 %1600 to i32
  %1602 = add nsw i32 %1601, 1
  %1603 = mul nsw i32 %1599, %1602
  %1604 = sitofp i32 %1603 to float
  %1605 = load i16* %1, align 2
  %1606 = sitofp i16 %1605 to float
  %1607 = fdiv float %1604, %1606
  %1608 = fptosi float %1607 to i32
  store i32 %1608, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %1609 = load i32* %5, align 4
  %1610 = sext i32 %1609 to i64
  %1611 = load i16* %1, align 2
  %1612 = sext i16 %1611 to i32
  %1613 = sub nsw i32 %1612, 1
  %1614 = sext i32 %1613 to i64
  %1615 = load %struct.ImageParameters** @img, align 8
  %1616 = getelementptr inbounds %struct.ImageParameters* %1615, i32 0, i32 34
  %1617 = load i32* %1616, align 4
  %1618 = ashr i32 %1617, 2
  %1619 = load i32* %block_y, align 4
  %1620 = add nsw i32 %1618, %1619
  %1621 = sext i32 %1620 to i64
  %1622 = load %struct.ImageParameters** @img, align 8
  %1623 = getelementptr inbounds %struct.ImageParameters* %1622, i32 0, i32 33
  %1624 = load i32* %1623, align 4
  %1625 = ashr i32 %1624, 2
  %1626 = load i32* %block_x, align 4
  %1627 = add nsw i32 %1625, %1626
  %1628 = sext i32 %1627 to i64
  %1629 = load i32****** @all_mincost, align 8
  %1630 = getelementptr inbounds i32***** %1629, i64 %1628
  %1631 = load i32***** %1630, align 8
  %1632 = getelementptr inbounds i32**** %1631, i64 %1621
  %1633 = load i32**** %1632, align 8
  %1634 = getelementptr inbounds i32*** %1633, i64 %1614
  %1635 = load i32*** %1634, align 8
  %1636 = getelementptr inbounds i32** %1635, i64 %1610
  %1637 = load i32** %1636, align 8
  %1638 = getelementptr inbounds i32* %1637, i64 2
  %1639 = load i32* %1638, align 4
  store i32 %1639, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  %1640 = load i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  %1641 = load i16* %1, align 2
  %1642 = sext i16 %1641 to i32
  %1643 = add nsw i32 %1642, 1
  %1644 = mul nsw i32 %1640, %1643
  %1645 = sitofp i32 %1644 to float
  %1646 = load i16* %1, align 2
  %1647 = sitofp i16 %1646 to float
  %1648 = fdiv float %1645, %1647
  %1649 = fptosi float %1648 to i32
  store i32 %1649, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  br label %1650

; <label>:1650                                    ; preds = %1566, %1525
  %1651 = load %struct.ImageParameters** @img, align 8
  %1652 = getelementptr inbounds %struct.ImageParameters* %1651, i32 0, i32 6
  %1653 = load i32* %1652, align 4
  %1654 = icmp eq i32 %1653, 1
  br i1 %1654, label %1655, label %1777

; <label>:1655                                    ; preds = %1650
  %1656 = load i32* %2, align 4
  %1657 = icmp eq i32 %1656, 0
  br i1 %1657, label %1658, label %1777

; <label>:1658                                    ; preds = %1655
  %1659 = load i16* %1, align 2
  %1660 = sext i16 %1659 to i32
  %1661 = icmp eq i32 %1660, 0
  br i1 %1661, label %1662, label %1777

; <label>:1662                                    ; preds = %1658
  %1663 = load i32* %5, align 4
  %1664 = sext i32 %1663 to i64
  %1665 = load %struct.ImageParameters** @img, align 8
  %1666 = getelementptr inbounds %struct.ImageParameters* %1665, i32 0, i32 34
  %1667 = load i32* %1666, align 4
  %1668 = ashr i32 %1667, 2
  %1669 = load i32* %block_y, align 4
  %1670 = add nsw i32 %1668, %1669
  %1671 = sext i32 %1670 to i64
  %1672 = load %struct.ImageParameters** @img, align 8
  %1673 = getelementptr inbounds %struct.ImageParameters* %1672, i32 0, i32 33
  %1674 = load i32* %1673, align 4
  %1675 = ashr i32 %1674, 2
  %1676 = load i32* %block_x, align 4
  %1677 = add nsw i32 %1675, %1676
  %1678 = sext i32 %1677 to i64
  %1679 = load i32****** @all_bwmincost, align 8
  %1680 = getelementptr inbounds i32***** %1679, i64 %1678
  %1681 = load i32***** %1680, align 8
  %1682 = getelementptr inbounds i32**** %1681, i64 %1671
  %1683 = load i32**** %1682, align 8
  %1684 = getelementptr inbounds i32*** %1683, i64 0
  %1685 = load i32*** %1684, align 8
  %1686 = getelementptr inbounds i32** %1685, i64 %1664
  %1687 = load i32** %1686, align 8
  %1688 = getelementptr inbounds i32* %1687, i64 0
  %1689 = load i32* %1688, align 4
  store i32 %1689, i32* @pred_SAD_ref, align 4
  %1690 = load i32* @flag_intra_SAD, align 4
  %1691 = icmp ne i32 %1690, 0
  br i1 %1691, label %1692, label %1693

; <label>:1692                                    ; preds = %1662
  br label %1695

; <label>:1693                                    ; preds = %1662
  %1694 = load i32* @pred_SAD_ref, align 4
  br label %1695

; <label>:1695                                    ; preds = %1693, %1692
  %1696 = phi i32 [ 0, %1692 ], [ %1694, %1693 ]
  store i32 %1696, i32* @pred_SAD_ref, align 4
  %1697 = load i32* %5, align 4
  %1698 = sext i32 %1697 to i64
  %1699 = load i16* %1, align 2
  %1700 = sext i16 %1699 to i64
  %1701 = load %struct.ImageParameters** @img, align 8
  %1702 = getelementptr inbounds %struct.ImageParameters* %1701, i32 0, i32 34
  %1703 = load i32* %1702, align 4
  %1704 = ashr i32 %1703, 2
  %1705 = load i32* %block_y, align 4
  %1706 = add nsw i32 %1704, %1705
  %1707 = sext i32 %1706 to i64
  %1708 = load %struct.ImageParameters** @img, align 8
  %1709 = getelementptr inbounds %struct.ImageParameters* %1708, i32 0, i32 33
  %1710 = load i32* %1709, align 4
  %1711 = ashr i32 %1710, 2
  %1712 = load i32* %block_x, align 4
  %1713 = add nsw i32 %1711, %1712
  %1714 = sext i32 %1713 to i64
  %1715 = load i32****** @all_bwmincost, align 8
  %1716 = getelementptr inbounds i32***** %1715, i64 %1714
  %1717 = load i32***** %1716, align 8
  %1718 = getelementptr inbounds i32**** %1717, i64 %1707
  %1719 = load i32**** %1718, align 8
  %1720 = getelementptr inbounds i32*** %1719, i64 %1700
  %1721 = load i32*** %1720, align 8
  %1722 = getelementptr inbounds i32** %1721, i64 %1698
  %1723 = load i32** %1722, align 8
  %1724 = getelementptr inbounds i32* %1723, i64 1
  %1725 = load i32* %1724, align 4
  %1726 = load i32* %n_Bframe, align 4
  %1727 = sub nsw i32 0, %1726
  %1728 = mul nsw i32 %1725, %1727
  %1729 = sitofp i32 %1728 to float
  %1730 = load i32* %N_Bframe, align 4
  %1731 = load i32* %n_Bframe, align 4
  %1732 = sub nsw i32 %1730, %1731
  %1733 = sitofp i32 %1732 to float
  %1734 = fadd float %1733, 1.000000e+00
  %1735 = fdiv float %1729, %1734
  %1736 = fptosi float %1735 to i32
  store i32 %1736, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 0), align 4
  %1737 = load i32* %5, align 4
  %1738 = sext i32 %1737 to i64
  %1739 = load i16* %1, align 2
  %1740 = sext i16 %1739 to i64
  %1741 = load %struct.ImageParameters** @img, align 8
  %1742 = getelementptr inbounds %struct.ImageParameters* %1741, i32 0, i32 34
  %1743 = load i32* %1742, align 4
  %1744 = ashr i32 %1743, 2
  %1745 = load i32* %block_y, align 4
  %1746 = add nsw i32 %1744, %1745
  %1747 = sext i32 %1746 to i64
  %1748 = load %struct.ImageParameters** @img, align 8
  %1749 = getelementptr inbounds %struct.ImageParameters* %1748, i32 0, i32 33
  %1750 = load i32* %1749, align 4
  %1751 = ashr i32 %1750, 2
  %1752 = load i32* %block_x, align 4
  %1753 = add nsw i32 %1751, %1752
  %1754 = sext i32 %1753 to i64
  %1755 = load i32****** @all_bwmincost, align 8
  %1756 = getelementptr inbounds i32***** %1755, i64 %1754
  %1757 = load i32***** %1756, align 8
  %1758 = getelementptr inbounds i32**** %1757, i64 %1747
  %1759 = load i32**** %1758, align 8
  %1760 = getelementptr inbounds i32*** %1759, i64 %1740
  %1761 = load i32*** %1760, align 8
  %1762 = getelementptr inbounds i32** %1761, i64 %1738
  %1763 = load i32** %1762, align 8
  %1764 = getelementptr inbounds i32* %1763, i64 2
  %1765 = load i32* %1764, align 4
  %1766 = load i32* %n_Bframe, align 4
  %1767 = sub nsw i32 0, %1766
  %1768 = mul nsw i32 %1765, %1767
  %1769 = sitofp i32 %1768 to float
  %1770 = load i32* %N_Bframe, align 4
  %1771 = load i32* %n_Bframe, align 4
  %1772 = sub nsw i32 %1770, %1771
  %1773 = sitofp i32 %1772 to float
  %1774 = fadd float %1773, 1.000000e+00
  %1775 = fdiv float %1769, %1774
  %1776 = fptosi float %1775 to i32
  store i32 %1776, i32* getelementptr inbounds ([2 x i32]* @pred_MV_ref, i32 0, i64 1), align 4
  br label %1777

; <label>:1777                                    ; preds = %1695, %1658, %1655, %1650
  br label %1778

; <label>:1778                                    ; preds = %1777, %1524
  br label %1779

; <label>:1779                                    ; preds = %1778, %127
  %1780 = load %struct.InputParameters** @input, align 8
  %1781 = getelementptr inbounds %struct.InputParameters* %1780, i32 0, i32 134
  %1782 = load i32* %1781, align 4
  %1783 = icmp ne i32 %1782, 0
  br i1 %1783, label %1784, label %1786

; <label>:1784                                    ; preds = %1779
  %1785 = load i32* %5, align 4
  store i32 %1785, i32* @FME_blocktype, align 4
  br label %1786

; <label>:1786                                    ; preds = %1784, %1779
  %1787 = load i16** %pred_mv, align 8
  %1788 = load %struct.storable_picture** @enc_picture, align 8
  %1789 = getelementptr inbounds %struct.storable_picture* %1788, i32 0, i32 32
  %1790 = load i16**** %1789, align 8
  %1791 = load %struct.storable_picture** @enc_picture, align 8
  %1792 = getelementptr inbounds %struct.storable_picture* %1791, i32 0, i32 35
  %1793 = load i16***** %1792, align 8
  %1794 = load i16* %1, align 2
  %1795 = load i32* %2, align 4
  %1796 = load i32* %block_x, align 4
  %1797 = load i32* %block_y, align 4
  %1798 = load i32* %bsx, align 4
  %1799 = load i32* %bsy, align 4
  call void @SetMotionVectorPredictor(i16* %1787, i16*** %1790, i16**** %1793, i16 signext %1794, i32 %1795, i32 %1796, i32 %1797, i32 %1798, i32 %1799)
  %1800 = load i16** %pred_mv, align 8
  %1801 = getelementptr inbounds i16* %1800, i64 0
  %1802 = load i16* %1801, align 2
  store i16 %1802, i16* %pred_mv_x, align 2
  %1803 = load i16** %pred_mv, align 8
  %1804 = getelementptr inbounds i16* %1803, i64 1
  %1805 = load i16* %1804, align 2
  store i16 %1805, i16* %pred_mv_y, align 2
  %1806 = load %struct.InputParameters** @input, align 8
  %1807 = getelementptr inbounds %struct.InputParameters* %1806, i32 0, i32 134
  %1808 = load i32* %1807, align 4
  %1809 = icmp ne i32 %1808, 0
  br i1 %1809, label %1810, label %1991

; <label>:1810                                    ; preds = %1786
  %1811 = load i16* %pred_mv_x, align 2
  %1812 = sext i16 %1811 to i32
  %1813 = sdiv i32 %1812, 4
  %1814 = trunc i32 %1813 to i16
  store i16 %1814, i16* %mv_x, align 2
  %1815 = load i16* %pred_mv_y, align 2
  %1816 = sext i16 %1815 to i32
  %1817 = sdiv i32 %1816, 4
  %1818 = trunc i32 %1817 to i16
  store i16 %1818, i16* %mv_y, align 2
  %1819 = load %struct.InputParameters** @input, align 8
  %1820 = getelementptr inbounds %struct.InputParameters* %1819, i32 0, i32 85
  %1821 = load i32* %1820, align 4
  %1822 = icmp ne i32 %1821, 0
  br i1 %1822, label %1888, label %1823

; <label>:1823                                    ; preds = %1810
  %1824 = load i32* %6, align 4
  %1825 = sub nsw i32 0, %1824
  %1826 = load i32* %6, align 4
  %1827 = load i16* %mv_x, align 2
  %1828 = sext i16 %1827 to i32
  %1829 = icmp slt i32 %1826, %1828
  br i1 %1829, label %1830, label %1832

; <label>:1830                                    ; preds = %1823
  %1831 = load i32* %6, align 4
  br label %1835

; <label>:1832                                    ; preds = %1823
  %1833 = load i16* %mv_x, align 2
  %1834 = sext i16 %1833 to i32
  br label %1835

; <label>:1835                                    ; preds = %1832, %1830
  %1836 = phi i32 [ %1831, %1830 ], [ %1834, %1832 ]
  %1837 = icmp sgt i32 %1825, %1836
  br i1 %1837, label %1838, label %1841

; <label>:1838                                    ; preds = %1835
  %1839 = load i32* %6, align 4
  %1840 = sub nsw i32 0, %1839
  br label %1853

; <label>:1841                                    ; preds = %1835
  %1842 = load i32* %6, align 4
  %1843 = load i16* %mv_x, align 2
  %1844 = sext i16 %1843 to i32
  %1845 = icmp slt i32 %1842, %1844
  br i1 %1845, label %1846, label %1848

; <label>:1846                                    ; preds = %1841
  %1847 = load i32* %6, align 4
  br label %1851

; <label>:1848                                    ; preds = %1841
  %1849 = load i16* %mv_x, align 2
  %1850 = sext i16 %1849 to i32
  br label %1851

; <label>:1851                                    ; preds = %1848, %1846
  %1852 = phi i32 [ %1847, %1846 ], [ %1850, %1848 ]
  br label %1853

; <label>:1853                                    ; preds = %1851, %1838
  %1854 = phi i32 [ %1840, %1838 ], [ %1852, %1851 ]
  %1855 = trunc i32 %1854 to i16
  store i16 %1855, i16* %mv_x, align 2
  %1856 = load i32* %6, align 4
  %1857 = sub nsw i32 0, %1856
  %1858 = load i32* %6, align 4
  %1859 = load i16* %mv_y, align 2
  %1860 = sext i16 %1859 to i32
  %1861 = icmp slt i32 %1858, %1860
  br i1 %1861, label %1862, label %1864

; <label>:1862                                    ; preds = %1853
  %1863 = load i32* %6, align 4
  br label %1867

; <label>:1864                                    ; preds = %1853
  %1865 = load i16* %mv_y, align 2
  %1866 = sext i16 %1865 to i32
  br label %1867

; <label>:1867                                    ; preds = %1864, %1862
  %1868 = phi i32 [ %1863, %1862 ], [ %1866, %1864 ]
  %1869 = icmp sgt i32 %1857, %1868
  br i1 %1869, label %1870, label %1873

; <label>:1870                                    ; preds = %1867
  %1871 = load i32* %6, align 4
  %1872 = sub nsw i32 0, %1871
  br label %1885

; <label>:1873                                    ; preds = %1867
  %1874 = load i32* %6, align 4
  %1875 = load i16* %mv_y, align 2
  %1876 = sext i16 %1875 to i32
  %1877 = icmp slt i32 %1874, %1876
  br i1 %1877, label %1878, label %1880

; <label>:1878                                    ; preds = %1873
  %1879 = load i32* %6, align 4
  br label %1883

; <label>:1880                                    ; preds = %1873
  %1881 = load i16* %mv_y, align 2
  %1882 = sext i16 %1881 to i32
  br label %1883

; <label>:1883                                    ; preds = %1880, %1878
  %1884 = phi i32 [ %1879, %1878 ], [ %1882, %1880 ]
  br label %1885

; <label>:1885                                    ; preds = %1883, %1870
  %1886 = phi i32 [ %1872, %1870 ], [ %1884, %1883 ]
  %1887 = trunc i32 %1886 to i16
  store i16 %1887, i16* %mv_y, align 2
  br label %1888

; <label>:1888                                    ; preds = %1885, %1810
  %1889 = load i16* %1, align 2
  %1890 = load i32* %2, align 4
  %1891 = load i32* %pic_pix_x, align 4
  %1892 = load i32* %pic_pix_y, align 4
  %1893 = load i32* %5, align 4
  %1894 = load i16* %pred_mv_x, align 2
  %1895 = load i16* %pred_mv_y, align 2
  %1896 = load i32* %6, align 4
  %1897 = load i32* %min_mcost, align 4
  %1898 = load double* %7, align 8
  %1899 = call i32 @FastIntegerPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %1889, i32 %1890, i32 %1891, i32 %1892, i32 %1893, i16 signext %1894, i16 signext %1895, i16* %mv_x, i16* %mv_y, i32 %1896, i32 %1897, double %1898)
  store i32 %1899, i32* %min_mcost, align 4
  store i32 0, i32* %i, align 4
  br label %1900

; <label>:1900                                    ; preds = %1987, %1888
  %1901 = load i32* %i, align 4
  %1902 = load i32* %bsx, align 4
  %1903 = ashr i32 %1902, 2
  %1904 = icmp slt i32 %1901, %1903
  br i1 %1904, label %1905, label %1990

; <label>:1905                                    ; preds = %1900
  store i32 0, i32* %j, align 4
  br label %1906

; <label>:1906                                    ; preds = %1983, %1905
  %1907 = load i32* %j, align 4
  %1908 = load i32* %bsy, align 4
  %1909 = ashr i32 %1908, 2
  %1910 = icmp slt i32 %1907, %1909
  br i1 %1910, label %1911, label %1986

; <label>:1911                                    ; preds = %1906
  %1912 = load i32* %2, align 4
  %1913 = icmp eq i32 %1912, 0
  br i1 %1913, label %1914, label %1948

; <label>:1914                                    ; preds = %1911
  %1915 = load i32* %min_mcost, align 4
  %1916 = load i32* %5, align 4
  %1917 = sext i32 %1916 to i64
  %1918 = load i16* %1, align 2
  %1919 = sext i16 %1918 to i64
  %1920 = load %struct.ImageParameters** @img, align 8
  %1921 = getelementptr inbounds %struct.ImageParameters* %1920, i32 0, i32 34
  %1922 = load i32* %1921, align 4
  %1923 = ashr i32 %1922, 2
  %1924 = load i32* %block_y, align 4
  %1925 = add nsw i32 %1923, %1924
  %1926 = load i32* %j, align 4
  %1927 = add nsw i32 %1925, %1926
  %1928 = sext i32 %1927 to i64
  %1929 = load %struct.ImageParameters** @img, align 8
  %1930 = getelementptr inbounds %struct.ImageParameters* %1929, i32 0, i32 33
  %1931 = load i32* %1930, align 4
  %1932 = ashr i32 %1931, 2
  %1933 = load i32* %block_x, align 4
  %1934 = add nsw i32 %1932, %1933
  %1935 = load i32* %i, align 4
  %1936 = add nsw i32 %1934, %1935
  %1937 = sext i32 %1936 to i64
  %1938 = load i32****** @all_mincost, align 8
  %1939 = getelementptr inbounds i32***** %1938, i64 %1937
  %1940 = load i32***** %1939, align 8
  %1941 = getelementptr inbounds i32**** %1940, i64 %1928
  %1942 = load i32**** %1941, align 8
  %1943 = getelementptr inbounds i32*** %1942, i64 %1919
  %1944 = load i32*** %1943, align 8
  %1945 = getelementptr inbounds i32** %1944, i64 %1917
  %1946 = load i32** %1945, align 8
  %1947 = getelementptr inbounds i32* %1946, i64 0
  store i32 %1915, i32* %1947, align 4
  br label %1982

; <label>:1948                                    ; preds = %1911
  %1949 = load i32* %min_mcost, align 4
  %1950 = load i32* %5, align 4
  %1951 = sext i32 %1950 to i64
  %1952 = load i16* %1, align 2
  %1953 = sext i16 %1952 to i64
  %1954 = load %struct.ImageParameters** @img, align 8
  %1955 = getelementptr inbounds %struct.ImageParameters* %1954, i32 0, i32 34
  %1956 = load i32* %1955, align 4
  %1957 = ashr i32 %1956, 2
  %1958 = load i32* %block_y, align 4
  %1959 = add nsw i32 %1957, %1958
  %1960 = load i32* %j, align 4
  %1961 = add nsw i32 %1959, %1960
  %1962 = sext i32 %1961 to i64
  %1963 = load %struct.ImageParameters** @img, align 8
  %1964 = getelementptr inbounds %struct.ImageParameters* %1963, i32 0, i32 33
  %1965 = load i32* %1964, align 4
  %1966 = ashr i32 %1965, 2
  %1967 = load i32* %block_x, align 4
  %1968 = add nsw i32 %1966, %1967
  %1969 = load i32* %i, align 4
  %1970 = add nsw i32 %1968, %1969
  %1971 = sext i32 %1970 to i64
  %1972 = load i32****** @all_bwmincost, align 8
  %1973 = getelementptr inbounds i32***** %1972, i64 %1971
  %1974 = load i32***** %1973, align 8
  %1975 = getelementptr inbounds i32**** %1974, i64 %1962
  %1976 = load i32**** %1975, align 8
  %1977 = getelementptr inbounds i32*** %1976, i64 %1953
  %1978 = load i32*** %1977, align 8
  %1979 = getelementptr inbounds i32** %1978, i64 %1951
  %1980 = load i32** %1979, align 8
  %1981 = getelementptr inbounds i32* %1980, i64 0
  store i32 %1949, i32* %1981, align 4
  br label %1982

; <label>:1982                                    ; preds = %1948, %1914
  br label %1983

; <label>:1983                                    ; preds = %1982
  %1984 = load i32* %j, align 4
  %1985 = add nsw i32 %1984, 1
  store i32 %1985, i32* %j, align 4
  br label %1906

; <label>:1986                                    ; preds = %1906
  br label %1987

; <label>:1987                                    ; preds = %1986
  %1988 = load i32* %i, align 4
  %1989 = add nsw i32 %1988, 1
  store i32 %1989, i32* %i, align 4
  br label %1900

; <label>:1990                                    ; preds = %1900
  br label %2003

; <label>:1991                                    ; preds = %1786
  %1992 = load i16* %1, align 2
  %1993 = load i32* %2, align 4
  %1994 = load i32* %pic_pix_x, align 4
  %1995 = load i32* %pic_pix_y, align 4
  %1996 = load i32* %5, align 4
  %1997 = load i16* %pred_mv_x, align 2
  %1998 = load i16* %pred_mv_y, align 2
  %1999 = load i32* %6, align 4
  %2000 = load i32* %min_mcost, align 4
  %2001 = load double* %7, align 8
  %2002 = call i32 @FastFullPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %1992, i32 %1993, i32 %1994, i32 %1995, i32 %1996, i16 signext %1997, i16 signext %1998, i16* %mv_x, i16* %mv_y, i32 %1999, i32 %2000, double %2001)
  store i32 %2002, i32* %min_mcost, align 4
  br label %2003

; <label>:2003                                    ; preds = %1991, %1990
  %2004 = load %struct.InputParameters** @input, align 8
  %2005 = getelementptr inbounds %struct.InputParameters* %2004, i32 0, i32 6
  %2006 = load i32* %2005, align 4
  %2007 = icmp ne i32 %2006, 0
  br i1 %2007, label %2008, label %2015

; <label>:2008                                    ; preds = %2003
  %2009 = load %struct.InputParameters** @input, align 8
  %2010 = getelementptr inbounds %struct.InputParameters* %2009, i32 0, i32 7
  %2011 = load i32* %2010, align 4
  %2012 = icmp ne i32 %2011, 0
  br i1 %2012, label %2015, label %2013

; <label>:2013                                    ; preds = %2008
  %2014 = load i32* %max_value, align 4
  store i32 %2014, i32* %min_mcost, align 4
  br label %2015

; <label>:2015                                    ; preds = %2013, %2008, %2003
  %2016 = load %struct.InputParameters** @input, align 8
  %2017 = getelementptr inbounds %struct.InputParameters* %2016, i32 0, i32 134
  %2018 = load i32* %2017, align 4
  %2019 = icmp ne i32 %2018, 0
  br i1 %2019, label %2020, label %2207

; <label>:2020                                    ; preds = %2015
  %2021 = load i32* %5, align 4
  %2022 = icmp sgt i32 %2021, 3
  br i1 %2022, label %2023, label %2034

; <label>:2023                                    ; preds = %2020
  %2024 = load i16* %1, align 2
  %2025 = load i32* %2, align 4
  %2026 = load i32* %pic_pix_x, align 4
  %2027 = load i32* %pic_pix_y, align 4
  %2028 = load i32* %5, align 4
  %2029 = load i16* %pred_mv_x, align 2
  %2030 = load i16* %pred_mv_y, align 2
  %2031 = load i32* %min_mcost, align 4
  %2032 = load double* %7, align 8
  %2033 = call i32 @FastSubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %2024, i32 %2025, i32 %2026, i32 %2027, i32 %2028, i16 signext %2029, i16 signext %2030, i16* %mv_x, i16* %mv_y, i32 9, i32 9, i32 %2031, double %2032, i32 0)
  store i32 %2033, i32* %min_mcost, align 4
  br label %2045

; <label>:2034                                    ; preds = %2020
  %2035 = load i16* %1, align 2
  %2036 = load i32* %2, align 4
  %2037 = load i32* %pic_pix_x, align 4
  %2038 = load i32* %pic_pix_y, align 4
  %2039 = load i32* %5, align 4
  %2040 = load i16* %pred_mv_x, align 2
  %2041 = load i16* %pred_mv_y, align 2
  %2042 = load i32* %min_mcost, align 4
  %2043 = load double* %7, align 8
  %2044 = call i32 @SubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %2035, i32 %2036, i32 %2037, i32 %2038, i32 %2039, i16 signext %2040, i16 signext %2041, i16* %mv_x, i16* %mv_y, i32 9, i32 9, i32 %2042, double %2043)
  store i32 %2044, i32* %min_mcost, align 4
  br label %2045

; <label>:2045                                    ; preds = %2034, %2023
  store i32 0, i32* %i, align 4
  br label %2046

; <label>:2046                                    ; preds = %2203, %2045
  %2047 = load i32* %i, align 4
  %2048 = load i32* %bsx, align 4
  %2049 = ashr i32 %2048, 2
  %2050 = icmp slt i32 %2047, %2049
  br i1 %2050, label %2051, label %2206

; <label>:2051                                    ; preds = %2046
  store i32 0, i32* %j, align 4
  br label %2052

; <label>:2052                                    ; preds = %2199, %2051
  %2053 = load i32* %j, align 4
  %2054 = load i32* %bsy, align 4
  %2055 = ashr i32 %2054, 2
  %2056 = icmp slt i32 %2053, %2055
  br i1 %2056, label %2057, label %2202

; <label>:2057                                    ; preds = %2052
  %2058 = load i32* %2, align 4
  %2059 = icmp eq i32 %2058, 0
  br i1 %2059, label %2060, label %2129

; <label>:2060                                    ; preds = %2057
  %2061 = load i16* %mv_x, align 2
  %2062 = sext i16 %2061 to i32
  %2063 = load i32* %5, align 4
  %2064 = sext i32 %2063 to i64
  %2065 = load i16* %1, align 2
  %2066 = sext i16 %2065 to i64
  %2067 = load %struct.ImageParameters** @img, align 8
  %2068 = getelementptr inbounds %struct.ImageParameters* %2067, i32 0, i32 34
  %2069 = load i32* %2068, align 4
  %2070 = ashr i32 %2069, 2
  %2071 = load i32* %block_y, align 4
  %2072 = add nsw i32 %2070, %2071
  %2073 = load i32* %j, align 4
  %2074 = add nsw i32 %2072, %2073
  %2075 = sext i32 %2074 to i64
  %2076 = load %struct.ImageParameters** @img, align 8
  %2077 = getelementptr inbounds %struct.ImageParameters* %2076, i32 0, i32 33
  %2078 = load i32* %2077, align 4
  %2079 = ashr i32 %2078, 2
  %2080 = load i32* %block_x, align 4
  %2081 = add nsw i32 %2079, %2080
  %2082 = load i32* %i, align 4
  %2083 = add nsw i32 %2081, %2082
  %2084 = sext i32 %2083 to i64
  %2085 = load i32****** @all_mincost, align 8
  %2086 = getelementptr inbounds i32***** %2085, i64 %2084
  %2087 = load i32***** %2086, align 8
  %2088 = getelementptr inbounds i32**** %2087, i64 %2075
  %2089 = load i32**** %2088, align 8
  %2090 = getelementptr inbounds i32*** %2089, i64 %2066
  %2091 = load i32*** %2090, align 8
  %2092 = getelementptr inbounds i32** %2091, i64 %2064
  %2093 = load i32** %2092, align 8
  %2094 = getelementptr inbounds i32* %2093, i64 1
  store i32 %2062, i32* %2094, align 4
  %2095 = load i16* %mv_y, align 2
  %2096 = sext i16 %2095 to i32
  %2097 = load i32* %5, align 4
  %2098 = sext i32 %2097 to i64
  %2099 = load i16* %1, align 2
  %2100 = sext i16 %2099 to i64
  %2101 = load %struct.ImageParameters** @img, align 8
  %2102 = getelementptr inbounds %struct.ImageParameters* %2101, i32 0, i32 34
  %2103 = load i32* %2102, align 4
  %2104 = ashr i32 %2103, 2
  %2105 = load i32* %block_y, align 4
  %2106 = add nsw i32 %2104, %2105
  %2107 = load i32* %j, align 4
  %2108 = add nsw i32 %2106, %2107
  %2109 = sext i32 %2108 to i64
  %2110 = load %struct.ImageParameters** @img, align 8
  %2111 = getelementptr inbounds %struct.ImageParameters* %2110, i32 0, i32 33
  %2112 = load i32* %2111, align 4
  %2113 = ashr i32 %2112, 2
  %2114 = load i32* %block_x, align 4
  %2115 = add nsw i32 %2113, %2114
  %2116 = load i32* %i, align 4
  %2117 = add nsw i32 %2115, %2116
  %2118 = sext i32 %2117 to i64
  %2119 = load i32****** @all_mincost, align 8
  %2120 = getelementptr inbounds i32***** %2119, i64 %2118
  %2121 = load i32***** %2120, align 8
  %2122 = getelementptr inbounds i32**** %2121, i64 %2109
  %2123 = load i32**** %2122, align 8
  %2124 = getelementptr inbounds i32*** %2123, i64 %2100
  %2125 = load i32*** %2124, align 8
  %2126 = getelementptr inbounds i32** %2125, i64 %2098
  %2127 = load i32** %2126, align 8
  %2128 = getelementptr inbounds i32* %2127, i64 2
  store i32 %2096, i32* %2128, align 4
  br label %2198

; <label>:2129                                    ; preds = %2057
  %2130 = load i16* %mv_x, align 2
  %2131 = sext i16 %2130 to i32
  %2132 = load i32* %5, align 4
  %2133 = sext i32 %2132 to i64
  %2134 = load i16* %1, align 2
  %2135 = sext i16 %2134 to i64
  %2136 = load %struct.ImageParameters** @img, align 8
  %2137 = getelementptr inbounds %struct.ImageParameters* %2136, i32 0, i32 34
  %2138 = load i32* %2137, align 4
  %2139 = ashr i32 %2138, 2
  %2140 = load i32* %block_y, align 4
  %2141 = add nsw i32 %2139, %2140
  %2142 = load i32* %j, align 4
  %2143 = add nsw i32 %2141, %2142
  %2144 = sext i32 %2143 to i64
  %2145 = load %struct.ImageParameters** @img, align 8
  %2146 = getelementptr inbounds %struct.ImageParameters* %2145, i32 0, i32 33
  %2147 = load i32* %2146, align 4
  %2148 = ashr i32 %2147, 2
  %2149 = load i32* %block_x, align 4
  %2150 = add nsw i32 %2148, %2149
  %2151 = load i32* %i, align 4
  %2152 = add nsw i32 %2150, %2151
  %2153 = sext i32 %2152 to i64
  %2154 = load i32****** @all_bwmincost, align 8
  %2155 = getelementptr inbounds i32***** %2154, i64 %2153
  %2156 = load i32***** %2155, align 8
  %2157 = getelementptr inbounds i32**** %2156, i64 %2144
  %2158 = load i32**** %2157, align 8
  %2159 = getelementptr inbounds i32*** %2158, i64 %2135
  %2160 = load i32*** %2159, align 8
  %2161 = getelementptr inbounds i32** %2160, i64 %2133
  %2162 = load i32** %2161, align 8
  %2163 = getelementptr inbounds i32* %2162, i64 1
  store i32 %2131, i32* %2163, align 4
  %2164 = load i16* %mv_y, align 2
  %2165 = sext i16 %2164 to i32
  %2166 = load i32* %5, align 4
  %2167 = sext i32 %2166 to i64
  %2168 = load i16* %1, align 2
  %2169 = sext i16 %2168 to i64
  %2170 = load %struct.ImageParameters** @img, align 8
  %2171 = getelementptr inbounds %struct.ImageParameters* %2170, i32 0, i32 34
  %2172 = load i32* %2171, align 4
  %2173 = ashr i32 %2172, 2
  %2174 = load i32* %block_y, align 4
  %2175 = add nsw i32 %2173, %2174
  %2176 = load i32* %j, align 4
  %2177 = add nsw i32 %2175, %2176
  %2178 = sext i32 %2177 to i64
  %2179 = load %struct.ImageParameters** @img, align 8
  %2180 = getelementptr inbounds %struct.ImageParameters* %2179, i32 0, i32 33
  %2181 = load i32* %2180, align 4
  %2182 = ashr i32 %2181, 2
  %2183 = load i32* %block_x, align 4
  %2184 = add nsw i32 %2182, %2183
  %2185 = load i32* %i, align 4
  %2186 = add nsw i32 %2184, %2185
  %2187 = sext i32 %2186 to i64
  %2188 = load i32****** @all_bwmincost, align 8
  %2189 = getelementptr inbounds i32***** %2188, i64 %2187
  %2190 = load i32***** %2189, align 8
  %2191 = getelementptr inbounds i32**** %2190, i64 %2178
  %2192 = load i32**** %2191, align 8
  %2193 = getelementptr inbounds i32*** %2192, i64 %2169
  %2194 = load i32*** %2193, align 8
  %2195 = getelementptr inbounds i32** %2194, i64 %2167
  %2196 = load i32** %2195, align 8
  %2197 = getelementptr inbounds i32* %2196, i64 2
  store i32 %2165, i32* %2197, align 4
  br label %2198

; <label>:2198                                    ; preds = %2129, %2060
  br label %2199

; <label>:2199                                    ; preds = %2198
  %2200 = load i32* %j, align 4
  %2201 = add nsw i32 %2200, 1
  store i32 %2201, i32* %j, align 4
  br label %2052

; <label>:2202                                    ; preds = %2052
  br label %2203

; <label>:2203                                    ; preds = %2202
  %2204 = load i32* %i, align 4
  %2205 = add nsw i32 %2204, 1
  store i32 %2205, i32* %i, align 4
  br label %2046

; <label>:2206                                    ; preds = %2046
  br label %2230

; <label>:2207                                    ; preds = %2015
  %2208 = load %struct.InputParameters** @input, align 8
  %2209 = getelementptr inbounds %struct.InputParameters* %2208, i32 0, i32 6
  %2210 = load i32* %2209, align 4
  %2211 = icmp ne i32 %2210, 0
  br i1 %2211, label %2212, label %2219

; <label>:2212                                    ; preds = %2207
  %2213 = load %struct.InputParameters** @input, align 8
  %2214 = getelementptr inbounds %struct.InputParameters* %2213, i32 0, i32 7
  %2215 = load i32* %2214, align 4
  %2216 = icmp ne i32 %2215, 0
  br i1 %2216, label %2219, label %2217

; <label>:2217                                    ; preds = %2212
  %2218 = load i32* %max_value, align 4
  store i32 %2218, i32* %min_mcost, align 4
  br label %2219

; <label>:2219                                    ; preds = %2217, %2212, %2207
  %2220 = load i16* %1, align 2
  %2221 = load i32* %2, align 4
  %2222 = load i32* %pic_pix_x, align 4
  %2223 = load i32* %pic_pix_y, align 4
  %2224 = load i32* %5, align 4
  %2225 = load i16* %pred_mv_x, align 2
  %2226 = load i16* %pred_mv_y, align 2
  %2227 = load i32* %min_mcost, align 4
  %2228 = load double* %7, align 8
  %2229 = call i32 @SubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %2220, i32 %2221, i32 %2222, i32 %2223, i32 %2224, i16 signext %2225, i16 signext %2226, i16* %mv_x, i16* %mv_y, i32 9, i32 9, i32 %2227, double %2228)
  store i32 %2229, i32* %min_mcost, align 4
  br label %2230

; <label>:2230                                    ; preds = %2219, %2206
  %2231 = load %struct.InputParameters** @input, align 8
  %2232 = getelementptr inbounds %struct.InputParameters* %2231, i32 0, i32 85
  %2233 = load i32* %2232, align 4
  %2234 = icmp ne i32 %2233, 0
  br i1 %2234, label %2295, label %2235

; <label>:2235                                    ; preds = %2230
  %2236 = load i32* %5, align 4
  %2237 = icmp eq i32 %2236, 1
  br i1 %2237, label %2238, label %2294

; <label>:2238                                    ; preds = %2235
  %2239 = load %struct.ImageParameters** @img, align 8
  %2240 = getelementptr inbounds %struct.ImageParameters* %2239, i32 0, i32 6
  %2241 = load i32* %2240, align 4
  %2242 = icmp eq i32 %2241, 0
  br i1 %2242, label %2248, label %2243

; <label>:2243                                    ; preds = %2238
  %2244 = load %struct.ImageParameters** @img, align 8
  %2245 = getelementptr inbounds %struct.ImageParameters* %2244, i32 0, i32 6
  %2246 = load i32* %2245, align 4
  %2247 = icmp eq i32 %2246, 3
  br i1 %2247, label %2248, label %2294

; <label>:2248                                    ; preds = %2243, %2238
  call void @FindSkipModeMotionVector()
  %2249 = load double* %7, align 8
  %2250 = call i32 @GetSkipCostMB(double %2249)
  store i32 %2250, i32* %cost, align 4
  %2251 = load double* %7, align 8
  %2252 = fmul double 8.000000e+00, %2251
  %2253 = fadd double %2252, 4.999000e-01
  %2254 = call double @floor(double %2253) #5
  %2255 = fptosi double %2254 to i32
  %2256 = load i32* %cost, align 4
  %2257 = sub nsw i32 %2256, %2255
  store i32 %2257, i32* %cost, align 4
  %2258 = load i32* %cost, align 4
  %2259 = load i32* %min_mcost, align 4
  %2260 = icmp slt i32 %2258, %2259
  br i1 %2260, label %2261, label %2293

; <label>:2261                                    ; preds = %2248
  %2262 = load i32* %cost, align 4
  store i32 %2262, i32* %min_mcost, align 4
  %2263 = load %struct.ImageParameters** @img, align 8
  %2264 = getelementptr inbounds %struct.ImageParameters* %2263, i32 0, i32 71
  %2265 = load i16******* %2264, align 8
  %2266 = getelementptr inbounds i16****** %2265, i64 0
  %2267 = load i16****** %2266, align 8
  %2268 = getelementptr inbounds i16***** %2267, i64 0
  %2269 = load i16***** %2268, align 8
  %2270 = getelementptr inbounds i16**** %2269, i64 0
  %2271 = load i16**** %2270, align 8
  %2272 = getelementptr inbounds i16*** %2271, i64 0
  %2273 = load i16*** %2272, align 8
  %2274 = getelementptr inbounds i16** %2273, i64 0
  %2275 = load i16** %2274, align 8
  %2276 = getelementptr inbounds i16* %2275, i64 0
  %2277 = load i16* %2276, align 2
  store i16 %2277, i16* %mv_x, align 2
  %2278 = load %struct.ImageParameters** @img, align 8
  %2279 = getelementptr inbounds %struct.ImageParameters* %2278, i32 0, i32 71
  %2280 = load i16******* %2279, align 8
  %2281 = getelementptr inbounds i16****** %2280, i64 0
  %2282 = load i16****** %2281, align 8
  %2283 = getelementptr inbounds i16***** %2282, i64 0
  %2284 = load i16***** %2283, align 8
  %2285 = getelementptr inbounds i16**** %2284, i64 0
  %2286 = load i16**** %2285, align 8
  %2287 = getelementptr inbounds i16*** %2286, i64 0
  %2288 = load i16*** %2287, align 8
  %2289 = getelementptr inbounds i16** %2288, i64 0
  %2290 = load i16** %2289, align 8
  %2291 = getelementptr inbounds i16* %2290, i64 1
  %2292 = load i16* %2291, align 2
  store i16 %2292, i16* %mv_y, align 2
  br label %2293

; <label>:2293                                    ; preds = %2261, %2248
  br label %2294

; <label>:2294                                    ; preds = %2293, %2243, %2235
  br label %2295

; <label>:2295                                    ; preds = %2294, %2230
  %2296 = load %struct.InputParameters** @input, align 8
  %2297 = getelementptr inbounds %struct.InputParameters* %2296, i32 0, i32 134
  %2298 = load i32* %2297, align 4
  %2299 = icmp ne i32 %2298, 0
  br i1 %2299, label %2300, label %2417

; <label>:2300                                    ; preds = %2295
  %2301 = load %struct.ImageParameters** @img, align 8
  %2302 = getelementptr inbounds %struct.ImageParameters* %2301, i32 0, i32 33
  %2303 = load i32* %2302, align 4
  %2304 = ashr i32 %2303, 2
  %2305 = load i32* %block_x, align 4
  %2306 = add nsw i32 %2304, %2305
  store i32 %2306, i32* %h4x4blkno, align 4
  %2307 = load %struct.ImageParameters** @img, align 8
  %2308 = getelementptr inbounds %struct.ImageParameters* %2307, i32 0, i32 34
  %2309 = load i32* %2308, align 4
  %2310 = ashr i32 %2309, 2
  %2311 = load i32* %block_y, align 4
  %2312 = add nsw i32 %2310, %2311
  store i32 %2312, i32* %v4x4blkno, align 4
  store i32 0, i32* %i, align 4
  br label %2313

; <label>:2313                                    ; preds = %2413, %2300
  %2314 = load i32* %i, align 4
  %2315 = load i32* %bsx, align 4
  %2316 = ashr i32 %2315, 2
  %2317 = icmp slt i32 %2314, %2316
  br i1 %2317, label %2318, label %2416

; <label>:2318                                    ; preds = %2313
  store i32 0, i32* %j, align 4
  br label %2319

; <label>:2319                                    ; preds = %2409, %2318
  %2320 = load i32* %j, align 4
  %2321 = load i32* %bsy, align 4
  %2322 = ashr i32 %2321, 2
  %2323 = icmp slt i32 %2320, %2322
  br i1 %2323, label %2324, label %2412

; <label>:2324                                    ; preds = %2319
  %2325 = load i16* %mv_x, align 2
  %2326 = load i32* %5, align 4
  %2327 = sext i32 %2326 to i64
  %2328 = load i16* %1, align 2
  %2329 = sext i16 %2328 to i64
  %2330 = load i32* %2, align 4
  %2331 = sext i32 %2330 to i64
  %2332 = load i32* %block_y, align 4
  %2333 = load i32* %j, align 4
  %2334 = add nsw i32 %2332, %2333
  %2335 = sext i32 %2334 to i64
  %2336 = load i32* %block_x, align 4
  %2337 = load i32* %i, align 4
  %2338 = add nsw i32 %2336, %2337
  %2339 = sext i32 %2338 to i64
  %2340 = load i16******* %all_mv, align 8
  %2341 = getelementptr inbounds i16****** %2340, i64 %2339
  %2342 = load i16****** %2341, align 8
  %2343 = getelementptr inbounds i16***** %2342, i64 %2335
  %2344 = load i16***** %2343, align 8
  %2345 = getelementptr inbounds i16**** %2344, i64 %2331
  %2346 = load i16**** %2345, align 8
  %2347 = getelementptr inbounds i16*** %2346, i64 %2329
  %2348 = load i16*** %2347, align 8
  %2349 = getelementptr inbounds i16** %2348, i64 %2327
  %2350 = load i16** %2349, align 8
  %2351 = getelementptr inbounds i16* %2350, i64 0
  store i16 %2325, i16* %2351, align 2
  %2352 = load i16* %mv_y, align 2
  %2353 = load i32* %5, align 4
  %2354 = sext i32 %2353 to i64
  %2355 = load i16* %1, align 2
  %2356 = sext i16 %2355 to i64
  %2357 = load i32* %2, align 4
  %2358 = sext i32 %2357 to i64
  %2359 = load i32* %block_y, align 4
  %2360 = load i32* %j, align 4
  %2361 = add nsw i32 %2359, %2360
  %2362 = sext i32 %2361 to i64
  %2363 = load i32* %block_x, align 4
  %2364 = load i32* %i, align 4
  %2365 = add nsw i32 %2363, %2364
  %2366 = sext i32 %2365 to i64
  %2367 = load i16******* %all_mv, align 8
  %2368 = getelementptr inbounds i16****** %2367, i64 %2366
  %2369 = load i16****** %2368, align 8
  %2370 = getelementptr inbounds i16***** %2369, i64 %2362
  %2371 = load i16***** %2370, align 8
  %2372 = getelementptr inbounds i16**** %2371, i64 %2358
  %2373 = load i16**** %2372, align 8
  %2374 = getelementptr inbounds i16*** %2373, i64 %2356
  %2375 = load i16*** %2374, align 8
  %2376 = getelementptr inbounds i16** %2375, i64 %2354
  %2377 = load i16** %2376, align 8
  %2378 = getelementptr inbounds i16* %2377, i64 1
  store i16 %2352, i16* %2378, align 2
  %2379 = load i16* %mv_x, align 2
  %2380 = load i32* %v4x4blkno, align 4
  %2381 = load i32* %j, align 4
  %2382 = add nsw i32 %2380, %2381
  %2383 = sext i32 %2382 to i64
  %2384 = load i32* %h4x4blkno, align 4
  %2385 = load i32* %i, align 4
  %2386 = add nsw i32 %2384, %2385
  %2387 = sext i32 %2386 to i64
  %2388 = load i16**** %mv_array, align 8
  %2389 = getelementptr inbounds i16*** %2388, i64 %2387
  %2390 = load i16*** %2389, align 8
  %2391 = getelementptr inbounds i16** %2390, i64 %2383
  %2392 = load i16** %2391, align 8
  %2393 = getelementptr inbounds i16* %2392, i64 0
  store i16 %2379, i16* %2393, align 2
  %2394 = load i16* %mv_y, align 2
  %2395 = load i32* %v4x4blkno, align 4
  %2396 = load i32* %j, align 4
  %2397 = add nsw i32 %2395, %2396
  %2398 = sext i32 %2397 to i64
  %2399 = load i32* %h4x4blkno, align 4
  %2400 = load i32* %i, align 4
  %2401 = add nsw i32 %2399, %2400
  %2402 = sext i32 %2401 to i64
  %2403 = load i16**** %mv_array, align 8
  %2404 = getelementptr inbounds i16*** %2403, i64 %2402
  %2405 = load i16*** %2404, align 8
  %2406 = getelementptr inbounds i16** %2405, i64 %2398
  %2407 = load i16** %2406, align 8
  %2408 = getelementptr inbounds i16* %2407, i64 1
  store i16 %2394, i16* %2408, align 2
  br label %2409

; <label>:2409                                    ; preds = %2324
  %2410 = load i32* %j, align 4
  %2411 = add nsw i32 %2410, 1
  store i32 %2411, i32* %j, align 4
  br label %2319

; <label>:2412                                    ; preds = %2319
  br label %2413

; <label>:2413                                    ; preds = %2412
  %2414 = load i32* %i, align 4
  %2415 = add nsw i32 %2414, 1
  store i32 %2415, i32* %i, align 4
  br label %2313

; <label>:2416                                    ; preds = %2313
  br label %2492

; <label>:2417                                    ; preds = %2295
  store i32 0, i32* %i, align 4
  br label %2418

; <label>:2418                                    ; preds = %2488, %2417
  %2419 = load i32* %i, align 4
  %2420 = load i32* %bsx, align 4
  %2421 = ashr i32 %2420, 2
  %2422 = icmp slt i32 %2419, %2421
  br i1 %2422, label %2423, label %2491

; <label>:2423                                    ; preds = %2418
  store i32 0, i32* %j, align 4
  br label %2424

; <label>:2424                                    ; preds = %2484, %2423
  %2425 = load i32* %j, align 4
  %2426 = load i32* %bsy, align 4
  %2427 = ashr i32 %2426, 2
  %2428 = icmp slt i32 %2425, %2427
  br i1 %2428, label %2429, label %2487

; <label>:2429                                    ; preds = %2424
  %2430 = load i16* %mv_x, align 2
  %2431 = load i32* %5, align 4
  %2432 = sext i32 %2431 to i64
  %2433 = load i16* %1, align 2
  %2434 = sext i16 %2433 to i64
  %2435 = load i32* %2, align 4
  %2436 = sext i32 %2435 to i64
  %2437 = load i32* %block_y, align 4
  %2438 = load i32* %j, align 4
  %2439 = add nsw i32 %2437, %2438
  %2440 = sext i32 %2439 to i64
  %2441 = load i32* %block_x, align 4
  %2442 = load i32* %i, align 4
  %2443 = add nsw i32 %2441, %2442
  %2444 = sext i32 %2443 to i64
  %2445 = load i16******* %all_mv, align 8
  %2446 = getelementptr inbounds i16****** %2445, i64 %2444
  %2447 = load i16****** %2446, align 8
  %2448 = getelementptr inbounds i16***** %2447, i64 %2440
  %2449 = load i16***** %2448, align 8
  %2450 = getelementptr inbounds i16**** %2449, i64 %2436
  %2451 = load i16**** %2450, align 8
  %2452 = getelementptr inbounds i16*** %2451, i64 %2434
  %2453 = load i16*** %2452, align 8
  %2454 = getelementptr inbounds i16** %2453, i64 %2432
  %2455 = load i16** %2454, align 8
  %2456 = getelementptr inbounds i16* %2455, i64 0
  store i16 %2430, i16* %2456, align 2
  %2457 = load i16* %mv_y, align 2
  %2458 = load i32* %5, align 4
  %2459 = sext i32 %2458 to i64
  %2460 = load i16* %1, align 2
  %2461 = sext i16 %2460 to i64
  %2462 = load i32* %2, align 4
  %2463 = sext i32 %2462 to i64
  %2464 = load i32* %block_y, align 4
  %2465 = load i32* %j, align 4
  %2466 = add nsw i32 %2464, %2465
  %2467 = sext i32 %2466 to i64
  %2468 = load i32* %block_x, align 4
  %2469 = load i32* %i, align 4
  %2470 = add nsw i32 %2468, %2469
  %2471 = sext i32 %2470 to i64
  %2472 = load i16******* %all_mv, align 8
  %2473 = getelementptr inbounds i16****** %2472, i64 %2471
  %2474 = load i16****** %2473, align 8
  %2475 = getelementptr inbounds i16***** %2474, i64 %2467
  %2476 = load i16***** %2475, align 8
  %2477 = getelementptr inbounds i16**** %2476, i64 %2463
  %2478 = load i16**** %2477, align 8
  %2479 = getelementptr inbounds i16*** %2478, i64 %2461
  %2480 = load i16*** %2479, align 8
  %2481 = getelementptr inbounds i16** %2480, i64 %2459
  %2482 = load i16** %2481, align 8
  %2483 = getelementptr inbounds i16* %2482, i64 1
  store i16 %2457, i16* %2483, align 2
  br label %2484

; <label>:2484                                    ; preds = %2429
  %2485 = load i32* %j, align 4
  %2486 = add nsw i32 %2485, 1
  store i32 %2486, i32* %j, align 4
  br label %2424

; <label>:2487                                    ; preds = %2424
  br label %2488

; <label>:2488                                    ; preds = %2487
  %2489 = load i32* %i, align 4
  %2490 = add nsw i32 %2489, 1
  store i32 %2490, i32* %i, align 4
  br label %2418

; <label>:2491                                    ; preds = %2418
  br label %2492

; <label>:2492                                    ; preds = %2491, %2416
  %2493 = load %struct.ImageParameters** @img, align 8
  %2494 = getelementptr inbounds %struct.ImageParameters* %2493, i32 0, i32 6
  %2495 = load i32* %2494, align 4
  %2496 = icmp eq i32 %2495, 1
  br i1 %2496, label %2497, label %2834

; <label>:2497                                    ; preds = %2492
  %2498 = load %struct.InputParameters** @input, align 8
  %2499 = getelementptr inbounds %struct.InputParameters* %2498, i32 0, i32 39
  %2500 = load i32* %2499, align 4
  %2501 = icmp ne i32 %2500, 0
  br i1 %2501, label %2502, label %2834

; <label>:2502                                    ; preds = %2497
  %2503 = load i32* %5, align 4
  %2504 = icmp eq i32 %2503, 1
  br i1 %2504, label %2505, label %2834

; <label>:2505                                    ; preds = %2502
  %2506 = load i16* %1, align 2
  %2507 = sext i16 %2506 to i32
  %2508 = icmp eq i32 %2507, 0
  br i1 %2508, label %2509, label %2834

; <label>:2509                                    ; preds = %2505
  %2510 = load i32* %2, align 4
  %2511 = icmp ne i32 %2510, 0
  br i1 %2511, label %2512, label %2516

; <label>:2512                                    ; preds = %2509
  %2513 = load %struct.ImageParameters** @img, align 8
  %2514 = getelementptr inbounds %struct.ImageParameters* %2513, i32 0, i32 72
  %2515 = load i16******* %2514, align 8
  br label %2520

; <label>:2516                                    ; preds = %2509
  %2517 = load %struct.ImageParameters** @img, align 8
  %2518 = getelementptr inbounds %struct.ImageParameters* %2517, i32 0, i32 73
  %2519 = load i16******* %2518, align 8
  br label %2520

; <label>:2520                                    ; preds = %2516, %2512
  %2521 = phi i16****** [ %2515, %2512 ], [ %2519, %2516 ]
  store i16****** %2521, i16******* %bipred_mv, align 8
  %2522 = load i32* %max_value, align 4
  store i32 %2522, i32* %min_mcostbi, align 4
  store i16 0, i16* %pred_mv_x2, align 2
  store i16 0, i16* %pred_mv_y2, align 2
  %2523 = load i32* %2, align 4
  %2524 = trunc i32 %2523 to i16
  store i16 %2524, i16* %iterlist, align 2
  %2525 = getelementptr inbounds [2 x i16]* %pred_mv_bi, i32 0, i32 0
  %2526 = load %struct.storable_picture** @enc_picture, align 8
  %2527 = getelementptr inbounds %struct.storable_picture* %2526, i32 0, i32 32
  %2528 = load i16**** %2527, align 8
  %2529 = load %struct.storable_picture** @enc_picture, align 8
  %2530 = getelementptr inbounds %struct.storable_picture* %2529, i32 0, i32 35
  %2531 = load i16***** %2530, align 8
  %2532 = load i32* %2, align 4
  %2533 = icmp eq i32 %2532, 0
  %2534 = select i1 %2533, i32 1, i32 0
  %2535 = load i32* %block_x, align 4
  %2536 = load i32* %block_y, align 4
  %2537 = load i32* %bsx, align 4
  %2538 = load i32* %bsy, align 4
  call void @SetMotionVectorPredictor(i16* %2525, i16*** %2528, i16**** %2531, i16 signext 0, i32 %2534, i32 %2535, i32 %2536, i32 %2537, i32 %2538)
  %2539 = load i16* %mv_x, align 2
  %2540 = sext i16 %2539 to i32
  %2541 = add nsw i32 %2540, 2
  %2542 = ashr i32 %2541, 2
  %2543 = trunc i32 %2542 to i16
  store i16 %2543, i16* %mv_x, align 2
  %2544 = load i16* %mv_y, align 2
  %2545 = sext i16 %2544 to i32
  %2546 = add nsw i32 %2545, 2
  %2547 = ashr i32 %2546, 2
  %2548 = trunc i32 %2547 to i16
  store i16 %2548, i16* %mv_y, align 2
  store i32 0, i32* %i, align 4
  br label %2549

; <label>:2549                                    ; preds = %2634, %2520
  %2550 = load i32* %i, align 4
  %2551 = load %struct.InputParameters** @input, align 8
  %2552 = getelementptr inbounds %struct.InputParameters* %2551, i32 0, i32 40
  %2553 = load i32* %2552, align 4
  %2554 = icmp sle i32 %2550, %2553
  br i1 %2554, label %2555, label %2637

; <label>:2555                                    ; preds = %2549
  %2556 = load i32* %i, align 4
  %2557 = srem i32 %2556, 2
  %2558 = icmp ne i32 %2557, 0
  br i1 %2558, label %2559, label %2578

; <label>:2559                                    ; preds = %2555
  %2560 = load i16** %pred_mv, align 8
  %2561 = getelementptr inbounds i16* %2560, i64 0
  %2562 = load i16* %2561, align 2
  store i16 %2562, i16* %pred_mv_x2, align 2
  %2563 = load i16** %pred_mv, align 8
  %2564 = getelementptr inbounds i16* %2563, i64 1
  %2565 = load i16* %2564, align 2
  store i16 %2565, i16* %pred_mv_y2, align 2
  %2566 = getelementptr inbounds [2 x i16]* %pred_mv_bi, i32 0, i64 0
  %2567 = load i16* %2566, align 2
  store i16 %2567, i16* %pred_mv_x1, align 2
  %2568 = getelementptr inbounds [2 x i16]* %pred_mv_bi, i32 0, i64 1
  %2569 = load i16* %2568, align 2
  store i16 %2569, i16* %pred_mv_y1, align 2
  %2570 = load i16* %bimv_x, align 2
  store i16 %2570, i16* %tempmv_x, align 2
  %2571 = load i16* %bimv_y, align 2
  store i16 %2571, i16* %tempmv_y, align 2
  %2572 = load i16* %mv_x, align 2
  store i16 %2572, i16* %bimv_x, align 2
  %2573 = load i16* %mv_y, align 2
  store i16 %2573, i16* %bimv_y, align 2
  %2574 = load i32* %2, align 4
  %2575 = icmp eq i32 %2574, 0
  %2576 = select i1 %2575, i32 1, i32 0
  %2577 = trunc i32 %2576 to i16
  store i16 %2577, i16* %iterlist, align 2
  br label %2612

; <label>:2578                                    ; preds = %2555
  %2579 = load i16** %pred_mv, align 8
  %2580 = getelementptr inbounds i16* %2579, i64 0
  %2581 = load i16* %2580, align 2
  store i16 %2581, i16* %pred_mv_x1, align 2
  %2582 = load i16** %pred_mv, align 8
  %2583 = getelementptr inbounds i16* %2582, i64 1
  %2584 = load i16* %2583, align 2
  store i16 %2584, i16* %pred_mv_y1, align 2
  %2585 = getelementptr inbounds [2 x i16]* %pred_mv_bi, i32 0, i64 0
  %2586 = load i16* %2585, align 2
  store i16 %2586, i16* %pred_mv_x2, align 2
  %2587 = getelementptr inbounds [2 x i16]* %pred_mv_bi, i32 0, i64 1
  %2588 = load i16* %2587, align 2
  store i16 %2588, i16* %pred_mv_y2, align 2
  %2589 = load i32* %i, align 4
  %2590 = icmp ne i32 %2589, 0
  br i1 %2590, label %2591, label %2596

; <label>:2591                                    ; preds = %2578
  %2592 = load i16* %bimv_x, align 2
  store i16 %2592, i16* %tempmv_x, align 2
  %2593 = load i16* %bimv_y, align 2
  store i16 %2593, i16* %tempmv_y, align 2
  %2594 = load i16* %mv_x, align 2
  store i16 %2594, i16* %bimv_x, align 2
  %2595 = load i16* %mv_y, align 2
  store i16 %2595, i16* %bimv_y, align 2
  br label %2609

; <label>:2596                                    ; preds = %2578
  %2597 = load i16* %mv_x, align 2
  store i16 %2597, i16* %tempmv_x, align 2
  %2598 = load i16* %mv_y, align 2
  store i16 %2598, i16* %tempmv_y, align 2
  %2599 = load i16* %pred_mv_x2, align 2
  %2600 = sext i16 %2599 to i32
  %2601 = add nsw i32 %2600, 2
  %2602 = ashr i32 %2601, 2
  %2603 = trunc i32 %2602 to i16
  store i16 %2603, i16* %bimv_x, align 2
  %2604 = load i16* %pred_mv_y2, align 2
  %2605 = sext i16 %2604 to i32
  %2606 = add nsw i32 %2605, 2
  %2607 = ashr i32 %2606, 2
  %2608 = trunc i32 %2607 to i16
  store i16 %2608, i16* %bimv_y, align 2
  br label %2609

; <label>:2609                                    ; preds = %2596, %2591
  %2610 = load i32* %2, align 4
  %2611 = trunc i32 %2610 to i16
  store i16 %2611, i16* %iterlist, align 2
  br label %2612

; <label>:2612                                    ; preds = %2609, %2559
  %2613 = load i16* %1, align 2
  %2614 = load i16* %iterlist, align 2
  %2615 = sext i16 %2614 to i32
  %2616 = load i32* %pic_pix_x, align 4
  %2617 = load i32* %pic_pix_y, align 4
  %2618 = load i32* %5, align 4
  %2619 = load i32* %i, align 4
  %2620 = load i16* %pred_mv_x1, align 2
  %2621 = load i16* %pred_mv_y1, align 2
  %2622 = load i16* %pred_mv_x2, align 2
  %2623 = load i16* %pred_mv_y2, align 2
  %2624 = load %struct.InputParameters** @input, align 8
  %2625 = getelementptr inbounds %struct.InputParameters* %2624, i32 0, i32 41
  %2626 = load i32* %2625, align 4
  %2627 = load i32* %i, align 4
  %2628 = ashr i32 %2626, %2627
  %2629 = load i32* %min_mcostbi, align 4
  %2630 = load double* %7, align 8
  %2631 = call i32 @FullPelBlockMotionBiPred(i16** getelementptr inbounds ([16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext %2613, i32 %2615, i32 %2616, i32 %2617, i32 %2618, i32 %2619, i16 signext %2620, i16 signext %2621, i16 signext %2622, i16 signext %2623, i16* %bimv_x, i16* %bimv_y, i16* %tempmv_x, i16* %tempmv_y, i32 %2628, i32 %2629, double %2630)
  store i32 %2631, i32* %min_mcostbi, align 4
  %2632 = load i16* %tempmv_x, align 2
  store i16 %2632, i16* %mv_x, align 2
  %2633 = load i16* %tempmv_y, align 2
  store i16 %2633, i16* %mv_y, align 2
  br label %2634

; <label>:2634                                    ; preds = %2612
  %2635 = load i32* %i, align 4
  %2636 = add nsw i32 %2635, 1
  store i32 %2636, i32* %i, align 4
  br label %2549

; <label>:2637                                    ; preds = %2549
  %2638 = load i16* %tempmv_x, align 2
  %2639 = sext i16 %2638 to i32
  %2640 = shl i32 %2639, 2
  %2641 = trunc i32 %2640 to i16
  store i16 %2641, i16* %tempmv_x, align 2
  %2642 = load i16* %tempmv_y, align 2
  %2643 = sext i16 %2642 to i32
  %2644 = shl i32 %2643, 2
  %2645 = trunc i32 %2644 to i16
  store i16 %2645, i16* %tempmv_y, align 2
  %2646 = load %struct.InputParameters** @input, align 8
  %2647 = getelementptr inbounds %struct.InputParameters* %2646, i32 0, i32 42
  %2648 = load i32* %2647, align 4
  %2649 = icmp ne i32 %2648, 0
  br i1 %2649, label %2650, label %2669

; <label>:2650                                    ; preds = %2637
  %2651 = load %struct.InputParameters** @input, align 8
  %2652 = getelementptr inbounds %struct.InputParameters* %2651, i32 0, i32 6
  %2653 = load i32* %2652, align 4
  %2654 = icmp ne i32 %2653, 0
  br i1 %2654, label %2655, label %2657

; <label>:2655                                    ; preds = %2650
  %2656 = load i32* %max_value, align 4
  store i32 %2656, i32* %min_mcostbi, align 4
  br label %2657

; <label>:2657                                    ; preds = %2655, %2650
  %2658 = load i16* %iterlist, align 2
  %2659 = sext i16 %2658 to i32
  %2660 = load i32* %pic_pix_x, align 4
  %2661 = load i32* %pic_pix_y, align 4
  %2662 = load i32* %5, align 4
  %2663 = load i16* %pred_mv_x2, align 2
  %2664 = load i16* %pred_mv_y2, align 2
  %2665 = load i32* %min_mcostbi, align 4
  %2666 = load double* %7, align 8
  %2667 = fmul double %2666, 5.000000e-01
  %2668 = call i32 @SubPelBlockSearchBiPred(i16** getelementptr inbounds ([16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext 0, i32 %2659, i32 %2660, i32 %2661, i32 %2662, i16 signext %2663, i16 signext %2664, i16* %bimv_x, i16* %bimv_y, i16* %tempmv_x, i16* %tempmv_y, i32 9, i32 9, i32 %2665, double %2667)
  store i32 %2668, i32* %min_mcostbi, align 4
  br label %2678

; <label>:2669                                    ; preds = %2637
  %2670 = load i16* %bimv_x, align 2
  %2671 = sext i16 %2670 to i32
  %2672 = shl i32 %2671, 2
  %2673 = trunc i32 %2672 to i16
  store i16 %2673, i16* %bimv_x, align 2
  %2674 = load i16* %bimv_y, align 2
  %2675 = sext i16 %2674 to i32
  %2676 = shl i32 %2675, 2
  %2677 = trunc i32 %2676 to i16
  store i16 %2677, i16* %bimv_y, align 2
  br label %2678

; <label>:2678                                    ; preds = %2669, %2657
  %2679 = load %struct.InputParameters** @input, align 8
  %2680 = getelementptr inbounds %struct.InputParameters* %2679, i32 0, i32 42
  %2681 = load i32* %2680, align 4
  %2682 = icmp eq i32 %2681, 2
  br i1 %2682, label %2683, label %2704

; <label>:2683                                    ; preds = %2678
  %2684 = load %struct.InputParameters** @input, align 8
  %2685 = getelementptr inbounds %struct.InputParameters* %2684, i32 0, i32 6
  %2686 = load i32* %2685, align 4
  %2687 = icmp ne i32 %2686, 0
  br i1 %2687, label %2688, label %2690

; <label>:2688                                    ; preds = %2683
  %2689 = load i32* %max_value, align 4
  store i32 %2689, i32* %min_mcostbi, align 4
  br label %2690

; <label>:2690                                    ; preds = %2688, %2683
  %2691 = load i16* %iterlist, align 2
  %2692 = sext i16 %2691 to i32
  %2693 = icmp eq i32 %2692, 0
  %2694 = select i1 %2693, i32 1, i32 0
  %2695 = load i32* %pic_pix_x, align 4
  %2696 = load i32* %pic_pix_y, align 4
  %2697 = load i32* %5, align 4
  %2698 = load i16* %pred_mv_x, align 2
  %2699 = load i16* %pred_mv_y, align 2
  %2700 = load i32* %min_mcostbi, align 4
  %2701 = load double* %7, align 8
  %2702 = fmul double %2701, 5.000000e-01
  %2703 = call i32 @SubPelBlockSearchBiPred(i16** getelementptr inbounds ([16 x i16*]* @BlockMotionSearch.orig_pic, i32 0, i32 0), i16 signext 0, i32 %2694, i32 %2695, i32 %2696, i32 %2697, i16 signext %2698, i16 signext %2699, i16* %mv_x, i16* %mv_y, i16* %bimv_x, i16* %bimv_y, i32 9, i32 9, i32 %2700, double %2702)
  store i32 %2703, i32* %min_mcostbi, align 4
  br label %2707

; <label>:2704                                    ; preds = %2678
  %2705 = load i16* %tempmv_x, align 2
  store i16 %2705, i16* %mv_x, align 2
  %2706 = load i16* %tempmv_y, align 2
  store i16 %2706, i16* %mv_y, align 2
  br label %2707

; <label>:2707                                    ; preds = %2704, %2690
  store i32 0, i32* %i, align 4
  br label %2708

; <label>:2708                                    ; preds = %2830, %2707
  %2709 = load i32* %i, align 4
  %2710 = load i32* %bsx, align 4
  %2711 = ashr i32 %2710, 2
  %2712 = icmp slt i32 %2709, %2711
  br i1 %2712, label %2713, label %2833

; <label>:2713                                    ; preds = %2708
  store i32 0, i32* %j, align 4
  br label %2714

; <label>:2714                                    ; preds = %2826, %2713
  %2715 = load i32* %j, align 4
  %2716 = load i32* %bsy, align 4
  %2717 = ashr i32 %2716, 2
  %2718 = icmp slt i32 %2715, %2717
  br i1 %2718, label %2719, label %2829

; <label>:2719                                    ; preds = %2714
  %2720 = load i16* %mv_x, align 2
  %2721 = load i32* %5, align 4
  %2722 = sext i32 %2721 to i64
  %2723 = load i16* %iterlist, align 2
  %2724 = sext i16 %2723 to i64
  %2725 = load i32* %block_y, align 4
  %2726 = load i32* %j, align 4
  %2727 = add nsw i32 %2725, %2726
  %2728 = sext i32 %2727 to i64
  %2729 = load i32* %block_x, align 4
  %2730 = load i32* %i, align 4
  %2731 = add nsw i32 %2729, %2730
  %2732 = sext i32 %2731 to i64
  %2733 = load i16******* %bipred_mv, align 8
  %2734 = getelementptr inbounds i16****** %2733, i64 %2732
  %2735 = load i16****** %2734, align 8
  %2736 = getelementptr inbounds i16***** %2735, i64 %2728
  %2737 = load i16***** %2736, align 8
  %2738 = getelementptr inbounds i16**** %2737, i64 %2724
  %2739 = load i16**** %2738, align 8
  %2740 = getelementptr inbounds i16*** %2739, i64 0
  %2741 = load i16*** %2740, align 8
  %2742 = getelementptr inbounds i16** %2741, i64 %2722
  %2743 = load i16** %2742, align 8
  %2744 = getelementptr inbounds i16* %2743, i64 0
  store i16 %2720, i16* %2744, align 2
  %2745 = load i16* %mv_y, align 2
  %2746 = load i32* %5, align 4
  %2747 = sext i32 %2746 to i64
  %2748 = load i16* %iterlist, align 2
  %2749 = sext i16 %2748 to i64
  %2750 = load i32* %block_y, align 4
  %2751 = load i32* %j, align 4
  %2752 = add nsw i32 %2750, %2751
  %2753 = sext i32 %2752 to i64
  %2754 = load i32* %block_x, align 4
  %2755 = load i32* %i, align 4
  %2756 = add nsw i32 %2754, %2755
  %2757 = sext i32 %2756 to i64
  %2758 = load i16******* %bipred_mv, align 8
  %2759 = getelementptr inbounds i16****** %2758, i64 %2757
  %2760 = load i16****** %2759, align 8
  %2761 = getelementptr inbounds i16***** %2760, i64 %2753
  %2762 = load i16***** %2761, align 8
  %2763 = getelementptr inbounds i16**** %2762, i64 %2749
  %2764 = load i16**** %2763, align 8
  %2765 = getelementptr inbounds i16*** %2764, i64 0
  %2766 = load i16*** %2765, align 8
  %2767 = getelementptr inbounds i16** %2766, i64 %2747
  %2768 = load i16** %2767, align 8
  %2769 = getelementptr inbounds i16* %2768, i64 1
  store i16 %2745, i16* %2769, align 2
  %2770 = load i16* %bimv_x, align 2
  %2771 = load i32* %5, align 4
  %2772 = sext i32 %2771 to i64
  %2773 = load i16* %iterlist, align 2
  %2774 = sext i16 %2773 to i32
  %2775 = icmp eq i32 %2774, 0
  %2776 = select i1 %2775, i32 1, i32 0
  %2777 = sext i32 %2776 to i64
  %2778 = load i32* %block_y, align 4
  %2779 = load i32* %j, align 4
  %2780 = add nsw i32 %2778, %2779
  %2781 = sext i32 %2780 to i64
  %2782 = load i32* %block_x, align 4
  %2783 = load i32* %i, align 4
  %2784 = add nsw i32 %2782, %2783
  %2785 = sext i32 %2784 to i64
  %2786 = load i16******* %bipred_mv, align 8
  %2787 = getelementptr inbounds i16****** %2786, i64 %2785
  %2788 = load i16****** %2787, align 8
  %2789 = getelementptr inbounds i16***** %2788, i64 %2781
  %2790 = load i16***** %2789, align 8
  %2791 = getelementptr inbounds i16**** %2790, i64 %2777
  %2792 = load i16**** %2791, align 8
  %2793 = getelementptr inbounds i16*** %2792, i64 0
  %2794 = load i16*** %2793, align 8
  %2795 = getelementptr inbounds i16** %2794, i64 %2772
  %2796 = load i16** %2795, align 8
  %2797 = getelementptr inbounds i16* %2796, i64 0
  store i16 %2770, i16* %2797, align 2
  %2798 = load i16* %bimv_y, align 2
  %2799 = load i32* %5, align 4
  %2800 = sext i32 %2799 to i64
  %2801 = load i16* %iterlist, align 2
  %2802 = sext i16 %2801 to i32
  %2803 = icmp eq i32 %2802, 0
  %2804 = select i1 %2803, i32 1, i32 0
  %2805 = sext i32 %2804 to i64
  %2806 = load i32* %block_y, align 4
  %2807 = load i32* %j, align 4
  %2808 = add nsw i32 %2806, %2807
  %2809 = sext i32 %2808 to i64
  %2810 = load i32* %block_x, align 4
  %2811 = load i32* %i, align 4
  %2812 = add nsw i32 %2810, %2811
  %2813 = sext i32 %2812 to i64
  %2814 = load i16******* %bipred_mv, align 8
  %2815 = getelementptr inbounds i16****** %2814, i64 %2813
  %2816 = load i16****** %2815, align 8
  %2817 = getelementptr inbounds i16***** %2816, i64 %2809
  %2818 = load i16***** %2817, align 8
  %2819 = getelementptr inbounds i16**** %2818, i64 %2805
  %2820 = load i16**** %2819, align 8
  %2821 = getelementptr inbounds i16*** %2820, i64 0
  %2822 = load i16*** %2821, align 8
  %2823 = getelementptr inbounds i16** %2822, i64 %2800
  %2824 = load i16** %2823, align 8
  %2825 = getelementptr inbounds i16* %2824, i64 1
  store i16 %2798, i16* %2825, align 2
  br label %2826

; <label>:2826                                    ; preds = %2719
  %2827 = load i32* %j, align 4
  %2828 = add nsw i32 %2827, 1
  store i32 %2828, i32* %j, align 4
  br label %2714

; <label>:2829                                    ; preds = %2714
  br label %2830

; <label>:2830                                    ; preds = %2829
  %2831 = load i32* %i, align 4
  %2832 = add nsw i32 %2831, 1
  store i32 %2832, i32* %i, align 4
  br label %2708

; <label>:2833                                    ; preds = %2708
  br label %2834

; <label>:2834                                    ; preds = %2833, %2505, %2502, %2497, %2492
  %2835 = call i32 @ftime(%struct.timeb* %tstruct2)
  %2836 = getelementptr inbounds %struct.timeb* %tstruct2, i32 0, i32 0
  %2837 = load i64* %2836, align 8
  %2838 = mul nsw i64 %2837, 1000
  %2839 = getelementptr inbounds %struct.timeb* %tstruct2, i32 0, i32 1
  %2840 = load i16* %2839, align 2
  %2841 = zext i16 %2840 to i64
  %2842 = add nsw i64 %2838, %2841
  %2843 = getelementptr inbounds %struct.timeb* %tstruct1, i32 0, i32 0
  %2844 = load i64* %2843, align 8
  %2845 = mul nsw i64 %2844, 1000
  %2846 = getelementptr inbounds %struct.timeb* %tstruct1, i32 0, i32 1
  %2847 = load i16* %2846, align 2
  %2848 = zext i16 %2847 to i64
  %2849 = add nsw i64 %2845, %2848
  %2850 = sub nsw i64 %2842, %2849
  %2851 = trunc i64 %2850 to i32
  store i32 %2851, i32* %me_tmp_time, align 4
  %2852 = load i32* %me_tmp_time, align 4
  %2853 = load i32* @me_tot_time, align 4
  %2854 = add nsw i32 %2853, %2852
  store i32 %2854, i32* @me_tot_time, align 4
  %2855 = load i32* %me_tmp_time, align 4
  %2856 = load i32* @me_time, align 4
  %2857 = add nsw i32 %2856, %2855
  store i32 %2857, i32* @me_time, align 4
  %2858 = load i32* %min_mcost, align 4
  ret i32 %2858
}

declare i32 @ftime(%struct.timeb*) #2

declare i32 @FastIntegerPelBlockMotionSearch(i16**, i16 signext, i32, i32, i32, i32, i16 signext, i16 signext, i16*, i16*, i32, i32, double) #2

declare i32 @FastSubPelBlockMotionSearch(i16**, i16 signext, i32, i32, i32, i32, i16 signext, i16 signext, i16*, i16*, i32, i32, i32, double, i32) #2

; Function Attrs: nounwind uwtable
define i32 @GetSkipCostMB(double %lambda) #0 {
  %1 = alloca double, align 8
  %block_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %diff = alloca [16 x i32], align 16
  %cost = alloca i32, align 4
  %curr_diff = alloca [8 x [8 x i32]], align 16
  %diff8x8 = alloca [64 x i32], align 16
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %block = alloca i32, align 4
  store double %lambda, double* %1, align 8
  store i32 0, i32* %cost, align 4
  store i32 0, i32* %block, align 4
  br label %2

; <label>:2                                       ; preds = %174, %0
  %3 = load i32* %block, align 4
  %4 = icmp slt i32 %3, 4
  br i1 %4, label %5, label %177

; <label>:5                                       ; preds = %2
  %6 = load i32* %block, align 4
  %7 = sdiv i32 %6, 2
  %8 = shl i32 %7, 3
  store i32 %8, i32* %mb_y, align 4
  %9 = load i32* %block, align 4
  %10 = srem i32 %9, 2
  %11 = shl i32 %10, 3
  store i32 %11, i32* %mb_x, align 4
  %12 = load i32* %mb_y, align 4
  store i32 %12, i32* %block_y, align 4
  br label %13

; <label>:13                                      ; preds = %124, %5
  %14 = load i32* %block_y, align 4
  %15 = load i32* %mb_y, align 4
  %16 = add nsw i32 %15, 8
  %17 = icmp slt i32 %14, %16
  br i1 %17, label %18, label %127

; <label>:18                                      ; preds = %13
  %19 = load %struct.ImageParameters** @img, align 8
  %20 = getelementptr inbounds %struct.ImageParameters* %19, i32 0, i32 38
  %21 = load i32* %20, align 4
  %22 = load i32* %block_y, align 4
  %23 = add nsw i32 %21, %22
  store i32 %23, i32* %pic_pix_y, align 4
  %24 = load i32* %mb_x, align 4
  store i32 %24, i32* %block_x, align 4
  br label %25

; <label>:25                                      ; preds = %120, %18
  %26 = load i32* %block_x, align 4
  %27 = load i32* %mb_x, align 4
  %28 = add nsw i32 %27, 8
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %30, label %123

; <label>:30                                      ; preds = %25
  %31 = load %struct.ImageParameters** @img, align 8
  %32 = getelementptr inbounds %struct.ImageParameters* %31, i32 0, i32 37
  %33 = load i32* %32, align 4
  %34 = load i32* %block_x, align 4
  %35 = add nsw i32 %33, %34
  store i32 %35, i32* %pic_pix_x, align 4
  %36 = load i32* %block_x, align 4
  %37 = load i32* %block_y, align 4
  call void @LumaPrediction4x4(i32 %36, i32 %37, i32 0, i32 0, i32 0, i16 signext 0, i16 signext 0)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %38

; <label>:38                                      ; preds = %98, %30
  %39 = load i32* %j, align 4
  %40 = icmp slt i32 %39, 4
  br i1 %40, label %41, label %101

; <label>:41                                      ; preds = %38
  store i32 0, i32* %i, align 4
  br label %42

; <label>:42                                      ; preds = %92, %41
  %43 = load i32* %i, align 4
  %44 = icmp slt i32 %43, 4
  br i1 %44, label %45, label %97

; <label>:45                                      ; preds = %42
  %46 = load i32* %pic_pix_x, align 4
  %47 = load i32* %i, align 4
  %48 = add nsw i32 %46, %47
  %49 = sext i32 %48 to i64
  %50 = load i32* %pic_pix_y, align 4
  %51 = load i32* %j, align 4
  %52 = add nsw i32 %50, %51
  %53 = sext i32 %52 to i64
  %54 = load i16*** @imgY_org, align 8
  %55 = getelementptr inbounds i16** %54, i64 %53
  %56 = load i16** %55, align 8
  %57 = getelementptr inbounds i16* %56, i64 %49
  %58 = load i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = load i32* %j, align 4
  %61 = load i32* %block_y, align 4
  %62 = add nsw i32 %60, %61
  %63 = sext i32 %62 to i64
  %64 = load i32* %i, align 4
  %65 = load i32* %block_x, align 4
  %66 = add nsw i32 %64, %65
  %67 = sext i32 %66 to i64
  %68 = load %struct.ImageParameters** @img, align 8
  %69 = getelementptr inbounds %struct.ImageParameters* %68, i32 0, i32 45
  %70 = getelementptr inbounds [16 x [16 x i16]]* %69, i32 0, i64 %67
  %71 = getelementptr inbounds [16 x i16]* %70, i32 0, i64 %63
  %72 = load i16* %71, align 2
  %73 = zext i16 %72 to i32
  %74 = sub nsw i32 %59, %73
  %75 = load i32* %block_x, align 4
  %76 = load i32* %mb_x, align 4
  %77 = sub nsw i32 %75, %76
  %78 = load i32* %i, align 4
  %79 = add nsw i32 %77, %78
  %80 = sext i32 %79 to i64
  %81 = load i32* %block_y, align 4
  %82 = load i32* %mb_y, align 4
  %83 = sub nsw i32 %81, %82
  %84 = load i32* %j, align 4
  %85 = add nsw i32 %83, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [8 x [8 x i32]]* %curr_diff, i32 0, i64 %86
  %88 = getelementptr inbounds [8 x i32]* %87, i32 0, i64 %80
  store i32 %74, i32* %88, align 4
  %89 = load i32* %k, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [16 x i32]* %diff, i32 0, i64 %90
  store i32 %74, i32* %91, align 4
  br label %92

; <label>:92                                      ; preds = %45
  %93 = load i32* %i, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %i, align 4
  %95 = load i32* %k, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %k, align 4
  br label %42

; <label>:97                                      ; preds = %42
  br label %98

; <label>:98                                      ; preds = %97
  %99 = load i32* %j, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %j, align 4
  br label %38

; <label>:101                                     ; preds = %38
  %102 = load %struct.InputParameters** @input, align 8
  %103 = getelementptr inbounds %struct.InputParameters* %102, i32 0, i32 85
  %104 = load i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %111

; <label>:106                                     ; preds = %101
  %107 = load %struct.InputParameters** @input, align 8
  %108 = getelementptr inbounds %struct.InputParameters* %107, i32 0, i32 123
  %109 = load i32* %108, align 4
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %119, label %111

; <label>:111                                     ; preds = %106, %101
  %112 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  %113 = load %struct.InputParameters** @input, align 8
  %114 = getelementptr inbounds %struct.InputParameters* %113, i32 0, i32 6
  %115 = load i32* %114, align 4
  %116 = call i32 @SATD(i32* %112, i32 %115)
  %117 = load i32* %cost, align 4
  %118 = add nsw i32 %117, %116
  store i32 %118, i32* %cost, align 4
  br label %119

; <label>:119                                     ; preds = %111, %106
  br label %120

; <label>:120                                     ; preds = %119
  %121 = load i32* %block_x, align 4
  %122 = add nsw i32 %121, 4
  store i32 %122, i32* %block_x, align 4
  br label %25

; <label>:123                                     ; preds = %25
  br label %124

; <label>:124                                     ; preds = %123
  %125 = load i32* %block_y, align 4
  %126 = add nsw i32 %125, 4
  store i32 %126, i32* %block_y, align 4
  br label %13

; <label>:127                                     ; preds = %13
  %128 = load %struct.InputParameters** @input, align 8
  %129 = getelementptr inbounds %struct.InputParameters* %128, i32 0, i32 85
  %130 = load i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %173

; <label>:132                                     ; preds = %127
  %133 = load %struct.InputParameters** @input, align 8
  %134 = getelementptr inbounds %struct.InputParameters* %133, i32 0, i32 123
  %135 = load i32* %134, align 4
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %137, label %173

; <label>:137                                     ; preds = %132
  store i32 0, i32* %k, align 4
  store i32 0, i32* %j, align 4
  br label %138

; <label>:138                                     ; preds = %162, %137
  %139 = load i32* %j, align 4
  %140 = icmp slt i32 %139, 8
  br i1 %140, label %141, label %165

; <label>:141                                     ; preds = %138
  store i32 0, i32* %i, align 4
  br label %142

; <label>:142                                     ; preds = %156, %141
  %143 = load i32* %i, align 4
  %144 = icmp slt i32 %143, 8
  br i1 %144, label %145, label %161

; <label>:145                                     ; preds = %142
  %146 = load i32* %i, align 4
  %147 = sext i32 %146 to i64
  %148 = load i32* %j, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds [8 x [8 x i32]]* %curr_diff, i32 0, i64 %149
  %151 = getelementptr inbounds [8 x i32]* %150, i32 0, i64 %147
  %152 = load i32* %151, align 4
  %153 = load i32* %k, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [64 x i32]* %diff8x8, i32 0, i64 %154
  store i32 %152, i32* %155, align 4
  br label %156

; <label>:156                                     ; preds = %145
  %157 = load i32* %i, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %i, align 4
  %159 = load i32* %k, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %k, align 4
  br label %142

; <label>:161                                     ; preds = %142
  br label %162

; <label>:162                                     ; preds = %161
  %163 = load i32* %j, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* %j, align 4
  br label %138

; <label>:165                                     ; preds = %138
  %166 = getelementptr inbounds [64 x i32]* %diff8x8, i32 0, i32 0
  %167 = load %struct.InputParameters** @input, align 8
  %168 = getelementptr inbounds %struct.InputParameters* %167, i32 0, i32 6
  %169 = load i32* %168, align 4
  %170 = call i32 @SATD8X8(i32* %166, i32 %169)
  %171 = load i32* %cost, align 4
  %172 = add nsw i32 %171, %170
  store i32 %172, i32* %cost, align 4
  br label %173

; <label>:173                                     ; preds = %165, %132, %127
  br label %174

; <label>:174                                     ; preds = %173
  %175 = load i32* %block, align 4
  %176 = add nsw i32 %175, 1
  store i32 %176, i32* %block, align 4
  br label %2

; <label>:177                                     ; preds = %2
  %178 = load i32* %cost, align 4
  ret i32 %178
}

; Function Attrs: nounwind uwtable
define i32 @BIDPartitionCost(i32 %blocktype, i32 %block8x8, i16 signext %fw_ref, i16 signext %bw_ref, i32 %lambda_factor) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i32, align 4
  %diff = alloca [64 x i32], align 16
  %curr_blk = alloca [16 x [16 x i32]], align 16
  %bsx = alloca i32, align 4
  %bsy = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %v = alloca i32, align 4
  %h = alloca i32, align 4
  %mcost = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %mvd_bits = alloca i32, align 4
  %parttype = alloca i32, align 4
  %step_h0 = alloca i32, align 4
  %step_v0 = alloca i32, align 4
  %step_h = alloca i32, align 4
  %step_v = alloca i32, align 4
  %bxx = alloca i32, align 4
  %byy = alloca i32, align 4
  %all_mv = alloca i16******, align 8
  %p_mv = alloca i16******, align 8
  store i32 %blocktype, i32* %1, align 4
  store i32 %block8x8, i32* %2, align 4
  store i16 %fw_ref, i16* %3, align 2
  store i16 %bw_ref, i16* %4, align 2
  store i32 %lambda_factor, i32* %5, align 4
  %6 = load i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = load %struct.InputParameters** @input, align 8
  %9 = getelementptr inbounds %struct.InputParameters* %8, i32 0, i32 20
  %10 = getelementptr inbounds [8 x [2 x i32]]* %9, i32 0, i64 %7
  %11 = getelementptr inbounds [2 x i32]* %10, i32 0, i64 0
  %12 = load i32* %11, align 4
  %13 = icmp slt i32 %12, 8
  br i1 %13, label %14, label %22

; <label>:14                                      ; preds = %0
  %15 = load i32* %1, align 4
  %16 = sext i32 %15 to i64
  %17 = load %struct.InputParameters** @input, align 8
  %18 = getelementptr inbounds %struct.InputParameters* %17, i32 0, i32 20
  %19 = getelementptr inbounds [8 x [2 x i32]]* %18, i32 0, i64 %16
  %20 = getelementptr inbounds [2 x i32]* %19, i32 0, i64 0
  %21 = load i32* %20, align 4
  br label %23

; <label>:22                                      ; preds = %0
  br label %23

; <label>:23                                      ; preds = %22, %14
  %24 = phi i32 [ %21, %14 ], [ 8, %22 ]
  store i32 %24, i32* %bsx, align 4
  %25 = load i32* %1, align 4
  %26 = sext i32 %25 to i64
  %27 = load %struct.InputParameters** @input, align 8
  %28 = getelementptr inbounds %struct.InputParameters* %27, i32 0, i32 20
  %29 = getelementptr inbounds [8 x [2 x i32]]* %28, i32 0, i64 %26
  %30 = getelementptr inbounds [2 x i32]* %29, i32 0, i64 1
  %31 = load i32* %30, align 4
  %32 = icmp slt i32 %31, 8
  br i1 %32, label %33, label %41

; <label>:33                                      ; preds = %23
  %34 = load i32* %1, align 4
  %35 = sext i32 %34 to i64
  %36 = load %struct.InputParameters** @input, align 8
  %37 = getelementptr inbounds %struct.InputParameters* %36, i32 0, i32 20
  %38 = getelementptr inbounds [8 x [2 x i32]]* %37, i32 0, i64 %35
  %39 = getelementptr inbounds [2 x i32]* %38, i32 0, i64 1
  %40 = load i32* %39, align 4
  br label %42

; <label>:41                                      ; preds = %23
  br label %42

; <label>:42                                      ; preds = %41, %33
  %43 = phi i32 [ %40, %33 ], [ 8, %41 ]
  store i32 %43, i32* %bsy, align 4
  store i32 0, i32* %mvd_bits, align 4
  %44 = load i32* %1, align 4
  %45 = icmp slt i32 %44, 4
  br i1 %45, label %46, label %48

; <label>:46                                      ; preds = %42
  %47 = load i32* %1, align 4
  br label %49

; <label>:48                                      ; preds = %42
  br label %49

; <label>:49                                      ; preds = %48, %46
  %50 = phi i32 [ %47, %46 ], [ 4, %48 ]
  store i32 %50, i32* %parttype, align 4
  %51 = load i32* %parttype, align 4
  %52 = sext i32 %51 to i64
  %53 = load %struct.InputParameters** @input, align 8
  %54 = getelementptr inbounds %struct.InputParameters* %53, i32 0, i32 21
  %55 = getelementptr inbounds [8 x [2 x i32]]* %54, i32 0, i64 %52
  %56 = getelementptr inbounds [2 x i32]* %55, i32 0, i64 0
  %57 = load i32* %56, align 4
  store i32 %57, i32* %step_h0, align 4
  %58 = load i32* %parttype, align 4
  %59 = sext i32 %58 to i64
  %60 = load %struct.InputParameters** @input, align 8
  %61 = getelementptr inbounds %struct.InputParameters* %60, i32 0, i32 21
  %62 = getelementptr inbounds [8 x [2 x i32]]* %61, i32 0, i64 %59
  %63 = getelementptr inbounds [2 x i32]* %62, i32 0, i64 1
  %64 = load i32* %63, align 4
  store i32 %64, i32* %step_v0, align 4
  %65 = load i32* %1, align 4
  %66 = sext i32 %65 to i64
  %67 = load %struct.InputParameters** @input, align 8
  %68 = getelementptr inbounds %struct.InputParameters* %67, i32 0, i32 21
  %69 = getelementptr inbounds [8 x [2 x i32]]* %68, i32 0, i64 %66
  %70 = getelementptr inbounds [2 x i32]* %69, i32 0, i64 0
  %71 = load i32* %70, align 4
  store i32 %71, i32* %step_h, align 4
  %72 = load i32* %1, align 4
  %73 = sext i32 %72 to i64
  %74 = load %struct.InputParameters** @input, align 8
  %75 = getelementptr inbounds %struct.InputParameters* %74, i32 0, i32 21
  %76 = getelementptr inbounds [8 x [2 x i32]]* %75, i32 0, i64 %73
  %77 = getelementptr inbounds [2 x i32]* %76, i32 0, i64 1
  %78 = load i32* %77, align 4
  store i32 %78, i32* %step_v, align 4
  %79 = load %struct.ImageParameters** @img, align 8
  %80 = getelementptr inbounds %struct.ImageParameters* %79, i32 0, i32 71
  %81 = load i16******* %80, align 8
  store i16****** %81, i16******* %all_mv, align 8
  %82 = load %struct.ImageParameters** @img, align 8
  %83 = getelementptr inbounds %struct.ImageParameters* %82, i32 0, i32 70
  %84 = load i16******* %83, align 8
  store i16****** %84, i16******* %p_mv, align 8
  %85 = load i32* %2, align 4
  %86 = sext i32 %85 to i64
  %87 = load i32* %parttype, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [5 x [4 x i32]]* @BIDPartitionCost.by0, i32 0, i64 %88
  %90 = getelementptr inbounds [4 x i32]* %89, i32 0, i64 %86
  %91 = load i32* %90, align 4
  store i32 %91, i32* %v, align 4
  br label %92

; <label>:92                                      ; preds = %334, %49
  %93 = load i32* %v, align 4
  %94 = load i32* %2, align 4
  %95 = sext i32 %94 to i64
  %96 = load i32* %parttype, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [5 x [4 x i32]]* @BIDPartitionCost.by0, i32 0, i64 %97
  %99 = getelementptr inbounds [4 x i32]* %98, i32 0, i64 %95
  %100 = load i32* %99, align 4
  %101 = load i32* %step_v0, align 4
  %102 = add nsw i32 %100, %101
  %103 = icmp slt i32 %93, %102
  br i1 %103, label %104, label %338

; <label>:104                                     ; preds = %92
  %105 = load i32* %2, align 4
  %106 = sext i32 %105 to i64
  %107 = load i32* %parttype, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [5 x [4 x i32]]* @BIDPartitionCost.bx0, i32 0, i64 %108
  %110 = getelementptr inbounds [4 x i32]* %109, i32 0, i64 %106
  %111 = load i32* %110, align 4
  store i32 %111, i32* %h, align 4
  br label %112

; <label>:112                                     ; preds = %329, %104
  %113 = load i32* %h, align 4
  %114 = load i32* %2, align 4
  %115 = sext i32 %114 to i64
  %116 = load i32* %parttype, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [5 x [4 x i32]]* @BIDPartitionCost.bx0, i32 0, i64 %117
  %119 = getelementptr inbounds [4 x i32]* %118, i32 0, i64 %115
  %120 = load i32* %119, align 4
  %121 = load i32* %step_h0, align 4
  %122 = add nsw i32 %120, %121
  %123 = icmp slt i32 %113, %122
  br i1 %123, label %124, label %333

; <label>:124                                     ; preds = %112
  %125 = load i32* %1, align 4
  %126 = sext i32 %125 to i64
  %127 = load i16* %3, align 2
  %128 = sext i16 %127 to i64
  %129 = load i32* %v, align 4
  %130 = sext i32 %129 to i64
  %131 = load i32* %h, align 4
  %132 = sext i32 %131 to i64
  %133 = load i16******* %all_mv, align 8
  %134 = getelementptr inbounds i16****** %133, i64 %132
  %135 = load i16****** %134, align 8
  %136 = getelementptr inbounds i16***** %135, i64 %130
  %137 = load i16***** %136, align 8
  %138 = getelementptr inbounds i16**** %137, i64 0
  %139 = load i16**** %138, align 8
  %140 = getelementptr inbounds i16*** %139, i64 %128
  %141 = load i16*** %140, align 8
  %142 = getelementptr inbounds i16** %141, i64 %126
  %143 = load i16** %142, align 8
  %144 = getelementptr inbounds i16* %143, i64 0
  %145 = load i16* %144, align 2
  %146 = sext i16 %145 to i32
  %147 = load i32* %1, align 4
  %148 = sext i32 %147 to i64
  %149 = load i16* %3, align 2
  %150 = sext i16 %149 to i64
  %151 = load i32* %v, align 4
  %152 = sext i32 %151 to i64
  %153 = load i32* %h, align 4
  %154 = sext i32 %153 to i64
  %155 = load i16******* %p_mv, align 8
  %156 = getelementptr inbounds i16****** %155, i64 %154
  %157 = load i16****** %156, align 8
  %158 = getelementptr inbounds i16***** %157, i64 %152
  %159 = load i16***** %158, align 8
  %160 = getelementptr inbounds i16**** %159, i64 0
  %161 = load i16**** %160, align 8
  %162 = getelementptr inbounds i16*** %161, i64 %150
  %163 = load i16*** %162, align 8
  %164 = getelementptr inbounds i16** %163, i64 %148
  %165 = load i16** %164, align 8
  %166 = getelementptr inbounds i16* %165, i64 0
  %167 = load i16* %166, align 2
  %168 = sext i16 %167 to i32
  %169 = sub nsw i32 %146, %168
  %170 = sext i32 %169 to i64
  %171 = load i32** @mvbits, align 8
  %172 = getelementptr inbounds i32* %171, i64 %170
  %173 = load i32* %172, align 4
  %174 = load i32* %mvd_bits, align 4
  %175 = add nsw i32 %174, %173
  store i32 %175, i32* %mvd_bits, align 4
  %176 = load i32* %1, align 4
  %177 = sext i32 %176 to i64
  %178 = load i16* %3, align 2
  %179 = sext i16 %178 to i64
  %180 = load i32* %v, align 4
  %181 = sext i32 %180 to i64
  %182 = load i32* %h, align 4
  %183 = sext i32 %182 to i64
  %184 = load i16******* %all_mv, align 8
  %185 = getelementptr inbounds i16****** %184, i64 %183
  %186 = load i16****** %185, align 8
  %187 = getelementptr inbounds i16***** %186, i64 %181
  %188 = load i16***** %187, align 8
  %189 = getelementptr inbounds i16**** %188, i64 0
  %190 = load i16**** %189, align 8
  %191 = getelementptr inbounds i16*** %190, i64 %179
  %192 = load i16*** %191, align 8
  %193 = getelementptr inbounds i16** %192, i64 %177
  %194 = load i16** %193, align 8
  %195 = getelementptr inbounds i16* %194, i64 1
  %196 = load i16* %195, align 2
  %197 = sext i16 %196 to i32
  %198 = load i32* %1, align 4
  %199 = sext i32 %198 to i64
  %200 = load i16* %3, align 2
  %201 = sext i16 %200 to i64
  %202 = load i32* %v, align 4
  %203 = sext i32 %202 to i64
  %204 = load i32* %h, align 4
  %205 = sext i32 %204 to i64
  %206 = load i16******* %p_mv, align 8
  %207 = getelementptr inbounds i16****** %206, i64 %205
  %208 = load i16****** %207, align 8
  %209 = getelementptr inbounds i16***** %208, i64 %203
  %210 = load i16***** %209, align 8
  %211 = getelementptr inbounds i16**** %210, i64 0
  %212 = load i16**** %211, align 8
  %213 = getelementptr inbounds i16*** %212, i64 %201
  %214 = load i16*** %213, align 8
  %215 = getelementptr inbounds i16** %214, i64 %199
  %216 = load i16** %215, align 8
  %217 = getelementptr inbounds i16* %216, i64 1
  %218 = load i16* %217, align 2
  %219 = sext i16 %218 to i32
  %220 = sub nsw i32 %197, %219
  %221 = sext i32 %220 to i64
  %222 = load i32** @mvbits, align 8
  %223 = getelementptr inbounds i32* %222, i64 %221
  %224 = load i32* %223, align 4
  %225 = load i32* %mvd_bits, align 4
  %226 = add nsw i32 %225, %224
  store i32 %226, i32* %mvd_bits, align 4
  %227 = load i32* %1, align 4
  %228 = sext i32 %227 to i64
  %229 = load i16* %4, align 2
  %230 = sext i16 %229 to i64
  %231 = load i32* %v, align 4
  %232 = sext i32 %231 to i64
  %233 = load i32* %h, align 4
  %234 = sext i32 %233 to i64
  %235 = load i16******* %all_mv, align 8
  %236 = getelementptr inbounds i16****** %235, i64 %234
  %237 = load i16****** %236, align 8
  %238 = getelementptr inbounds i16***** %237, i64 %232
  %239 = load i16***** %238, align 8
  %240 = getelementptr inbounds i16**** %239, i64 1
  %241 = load i16**** %240, align 8
  %242 = getelementptr inbounds i16*** %241, i64 %230
  %243 = load i16*** %242, align 8
  %244 = getelementptr inbounds i16** %243, i64 %228
  %245 = load i16** %244, align 8
  %246 = getelementptr inbounds i16* %245, i64 0
  %247 = load i16* %246, align 2
  %248 = sext i16 %247 to i32
  %249 = load i32* %1, align 4
  %250 = sext i32 %249 to i64
  %251 = load i16* %4, align 2
  %252 = sext i16 %251 to i64
  %253 = load i32* %v, align 4
  %254 = sext i32 %253 to i64
  %255 = load i32* %h, align 4
  %256 = sext i32 %255 to i64
  %257 = load i16******* %p_mv, align 8
  %258 = getelementptr inbounds i16****** %257, i64 %256
  %259 = load i16****** %258, align 8
  %260 = getelementptr inbounds i16***** %259, i64 %254
  %261 = load i16***** %260, align 8
  %262 = getelementptr inbounds i16**** %261, i64 1
  %263 = load i16**** %262, align 8
  %264 = getelementptr inbounds i16*** %263, i64 %252
  %265 = load i16*** %264, align 8
  %266 = getelementptr inbounds i16** %265, i64 %250
  %267 = load i16** %266, align 8
  %268 = getelementptr inbounds i16* %267, i64 0
  %269 = load i16* %268, align 2
  %270 = sext i16 %269 to i32
  %271 = sub nsw i32 %248, %270
  %272 = sext i32 %271 to i64
  %273 = load i32** @mvbits, align 8
  %274 = getelementptr inbounds i32* %273, i64 %272
  %275 = load i32* %274, align 4
  %276 = load i32* %mvd_bits, align 4
  %277 = add nsw i32 %276, %275
  store i32 %277, i32* %mvd_bits, align 4
  %278 = load i32* %1, align 4
  %279 = sext i32 %278 to i64
  %280 = load i16* %4, align 2
  %281 = sext i16 %280 to i64
  %282 = load i32* %v, align 4
  %283 = sext i32 %282 to i64
  %284 = load i32* %h, align 4
  %285 = sext i32 %284 to i64
  %286 = load i16******* %all_mv, align 8
  %287 = getelementptr inbounds i16****** %286, i64 %285
  %288 = load i16****** %287, align 8
  %289 = getelementptr inbounds i16***** %288, i64 %283
  %290 = load i16***** %289, align 8
  %291 = getelementptr inbounds i16**** %290, i64 1
  %292 = load i16**** %291, align 8
  %293 = getelementptr inbounds i16*** %292, i64 %281
  %294 = load i16*** %293, align 8
  %295 = getelementptr inbounds i16** %294, i64 %279
  %296 = load i16** %295, align 8
  %297 = getelementptr inbounds i16* %296, i64 1
  %298 = load i16* %297, align 2
  %299 = sext i16 %298 to i32
  %300 = load i32* %1, align 4
  %301 = sext i32 %300 to i64
  %302 = load i16* %4, align 2
  %303 = sext i16 %302 to i64
  %304 = load i32* %v, align 4
  %305 = sext i32 %304 to i64
  %306 = load i32* %h, align 4
  %307 = sext i32 %306 to i64
  %308 = load i16******* %p_mv, align 8
  %309 = getelementptr inbounds i16****** %308, i64 %307
  %310 = load i16****** %309, align 8
  %311 = getelementptr inbounds i16***** %310, i64 %305
  %312 = load i16***** %311, align 8
  %313 = getelementptr inbounds i16**** %312, i64 1
  %314 = load i16**** %313, align 8
  %315 = getelementptr inbounds i16*** %314, i64 %303
  %316 = load i16*** %315, align 8
  %317 = getelementptr inbounds i16** %316, i64 %301
  %318 = load i16** %317, align 8
  %319 = getelementptr inbounds i16* %318, i64 1
  %320 = load i16* %319, align 2
  %321 = sext i16 %320 to i32
  %322 = sub nsw i32 %299, %321
  %323 = sext i32 %322 to i64
  %324 = load i32** @mvbits, align 8
  %325 = getelementptr inbounds i32* %324, i64 %323
  %326 = load i32* %325, align 4
  %327 = load i32* %mvd_bits, align 4
  %328 = add nsw i32 %327, %326
  store i32 %328, i32* %mvd_bits, align 4
  br label %329

; <label>:329                                     ; preds = %124
  %330 = load i32* %step_h, align 4
  %331 = load i32* %h, align 4
  %332 = add nsw i32 %331, %330
  store i32 %332, i32* %h, align 4
  br label %112

; <label>:333                                     ; preds = %112
  br label %334

; <label>:334                                     ; preds = %333
  %335 = load i32* %step_v, align 4
  %336 = load i32* %v, align 4
  %337 = add nsw i32 %336, %335
  store i32 %337, i32* %v, align 4
  br label %92

; <label>:338                                     ; preds = %92
  %339 = load i32* %5, align 4
  %340 = load i32* %mvd_bits, align 4
  %341 = mul nsw i32 %339, %340
  %342 = ashr i32 %341, 16
  store i32 %342, i32* %mcost, align 4
  store i32 0, i32* %byy, align 4
  %343 = load i32* %2, align 4
  %344 = sext i32 %343 to i64
  %345 = load i32* %parttype, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [5 x [4 x i32]]* @BIDPartitionCost.by0, i32 0, i64 %346
  %348 = getelementptr inbounds [4 x i32]* %347, i32 0, i64 %344
  %349 = load i32* %348, align 4
  store i32 %349, i32* %v, align 4
  br label %350

; <label>:350                                     ; preds = %483, %338
  %351 = load i32* %v, align 4
  %352 = load i32* %2, align 4
  %353 = sext i32 %352 to i64
  %354 = load i32* %parttype, align 4
  %355 = sext i32 %354 to i64
  %356 = getelementptr inbounds [5 x [4 x i32]]* @BIDPartitionCost.by0, i32 0, i64 %355
  %357 = getelementptr inbounds [4 x i32]* %356, i32 0, i64 %353
  %358 = load i32* %357, align 4
  %359 = load i32* %step_v0, align 4
  %360 = add nsw i32 %358, %359
  %361 = icmp slt i32 %351, %360
  br i1 %361, label %362, label %488

; <label>:362                                     ; preds = %350
  %363 = load %struct.ImageParameters** @img, align 8
  %364 = getelementptr inbounds %struct.ImageParameters* %363, i32 0, i32 38
  %365 = load i32* %364, align 4
  %366 = load i32* %v, align 4
  %367 = shl i32 %366, 2
  store i32 %367, i32* %block_y, align 4
  %368 = add nsw i32 %365, %367
  store i32 %368, i32* %pic_pix_y, align 4
  store i32 0, i32* %bxx, align 4
  %369 = load i32* %2, align 4
  %370 = sext i32 %369 to i64
  %371 = load i32* %parttype, align 4
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds [5 x [4 x i32]]* @BIDPartitionCost.bx0, i32 0, i64 %372
  %374 = getelementptr inbounds [4 x i32]* %373, i32 0, i64 %370
  %375 = load i32* %374, align 4
  store i32 %375, i32* %h, align 4
  br label %376

; <label>:376                                     ; preds = %477, %362
  %377 = load i32* %h, align 4
  %378 = load i32* %2, align 4
  %379 = sext i32 %378 to i64
  %380 = load i32* %parttype, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds [5 x [4 x i32]]* @BIDPartitionCost.bx0, i32 0, i64 %381
  %383 = getelementptr inbounds [4 x i32]* %382, i32 0, i64 %379
  %384 = load i32* %383, align 4
  %385 = load i32* %step_h0, align 4
  %386 = add nsw i32 %384, %385
  %387 = icmp slt i32 %377, %386
  br i1 %387, label %388, label %482

; <label>:388                                     ; preds = %376
  %389 = load %struct.ImageParameters** @img, align 8
  %390 = getelementptr inbounds %struct.ImageParameters* %389, i32 0, i32 37
  %391 = load i32* %390, align 4
  %392 = load i32* %h, align 4
  %393 = shl i32 %392, 2
  store i32 %393, i32* %block_x, align 4
  %394 = add nsw i32 %391, %393
  store i32 %394, i32* %pic_pix_x, align 4
  %395 = load i32* %block_x, align 4
  %396 = load i32* %block_y, align 4
  %397 = load i32* %1, align 4
  %398 = load i32* %1, align 4
  %399 = load i16* %3, align 2
  %400 = load i16* %4, align 2
  call void @LumaPrediction4x4(i32 %395, i32 %396, i32 2, i32 %397, i32 %398, i16 signext %399, i16 signext %400)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %401

; <label>:401                                     ; preds = %457, %388
  %402 = load i32* %j, align 4
  %403 = icmp slt i32 %402, 4
  br i1 %403, label %404, label %460

; <label>:404                                     ; preds = %401
  store i32 0, i32* %i, align 4
  br label %405

; <label>:405                                     ; preds = %451, %404
  %406 = load i32* %i, align 4
  %407 = icmp slt i32 %406, 4
  br i1 %407, label %408, label %456

; <label>:408                                     ; preds = %405
  %409 = load i32* %pic_pix_x, align 4
  %410 = load i32* %i, align 4
  %411 = add nsw i32 %409, %410
  %412 = sext i32 %411 to i64
  %413 = load i32* %pic_pix_y, align 4
  %414 = load i32* %j, align 4
  %415 = add nsw i32 %413, %414
  %416 = sext i32 %415 to i64
  %417 = load i16*** @imgY_org, align 8
  %418 = getelementptr inbounds i16** %417, i64 %416
  %419 = load i16** %418, align 8
  %420 = getelementptr inbounds i16* %419, i64 %412
  %421 = load i16* %420, align 2
  %422 = zext i16 %421 to i32
  %423 = load i32* %j, align 4
  %424 = load i32* %block_y, align 4
  %425 = add nsw i32 %423, %424
  %426 = sext i32 %425 to i64
  %427 = load i32* %i, align 4
  %428 = load i32* %block_x, align 4
  %429 = add nsw i32 %427, %428
  %430 = sext i32 %429 to i64
  %431 = load %struct.ImageParameters** @img, align 8
  %432 = getelementptr inbounds %struct.ImageParameters* %431, i32 0, i32 45
  %433 = getelementptr inbounds [16 x [16 x i16]]* %432, i32 0, i64 %430
  %434 = getelementptr inbounds [16 x i16]* %433, i32 0, i64 %426
  %435 = load i16* %434, align 2
  %436 = zext i16 %435 to i32
  %437 = sub nsw i32 %422, %436
  %438 = load i32* %bxx, align 4
  %439 = load i32* %i, align 4
  %440 = add nsw i32 %438, %439
  %441 = sext i32 %440 to i64
  %442 = load i32* %byy, align 4
  %443 = load i32* %j, align 4
  %444 = add nsw i32 %442, %443
  %445 = sext i32 %444 to i64
  %446 = getelementptr inbounds [16 x [16 x i32]]* %curr_blk, i32 0, i64 %445
  %447 = getelementptr inbounds [16 x i32]* %446, i32 0, i64 %441
  store i32 %437, i32* %447, align 4
  %448 = load i32* %k, align 4
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds [64 x i32]* %diff, i32 0, i64 %449
  store i32 %437, i32* %450, align 4
  br label %451

; <label>:451                                     ; preds = %408
  %452 = load i32* %i, align 4
  %453 = add nsw i32 %452, 1
  store i32 %453, i32* %i, align 4
  %454 = load i32* %k, align 4
  %455 = add nsw i32 %454, 1
  store i32 %455, i32* %k, align 4
  br label %405

; <label>:456                                     ; preds = %405
  br label %457

; <label>:457                                     ; preds = %456
  %458 = load i32* %j, align 4
  %459 = add nsw i32 %458, 1
  store i32 %459, i32* %j, align 4
  br label %401

; <label>:460                                     ; preds = %401
  %461 = load %struct.InputParameters** @input, align 8
  %462 = getelementptr inbounds %struct.InputParameters* %461, i32 0, i32 123
  %463 = load i32* %462, align 4
  %464 = icmp ne i32 %463, 0
  br i1 %464, label %465, label %468

; <label>:465                                     ; preds = %460
  %466 = load i32* %1, align 4
  %467 = icmp sgt i32 %466, 4
  br i1 %467, label %468, label %476

; <label>:468                                     ; preds = %465, %460
  %469 = getelementptr inbounds [64 x i32]* %diff, i32 0, i32 0
  %470 = load %struct.InputParameters** @input, align 8
  %471 = getelementptr inbounds %struct.InputParameters* %470, i32 0, i32 6
  %472 = load i32* %471, align 4
  %473 = call i32 @SATD(i32* %469, i32 %472)
  %474 = load i32* %mcost, align 4
  %475 = add nsw i32 %474, %473
  store i32 %475, i32* %mcost, align 4
  br label %476

; <label>:476                                     ; preds = %468, %465
  br label %477

; <label>:477                                     ; preds = %476
  %478 = load i32* %bxx, align 4
  %479 = add nsw i32 %478, 4
  store i32 %479, i32* %bxx, align 4
  %480 = load i32* %h, align 4
  %481 = add nsw i32 %480, 1
  store i32 %481, i32* %h, align 4
  br label %376

; <label>:482                                     ; preds = %376
  br label %483

; <label>:483                                     ; preds = %482
  %484 = load i32* %byy, align 4
  %485 = add nsw i32 %484, 4
  store i32 %485, i32* %byy, align 4
  %486 = load i32* %v, align 4
  %487 = add nsw i32 %486, 1
  store i32 %487, i32* %v, align 4
  br label %350

; <label>:488                                     ; preds = %350
  %489 = load %struct.InputParameters** @input, align 8
  %490 = getelementptr inbounds %struct.InputParameters* %489, i32 0, i32 123
  %491 = load i32* %490, align 4
  %492 = icmp ne i32 %491, 0
  br i1 %492, label %493, label %567

; <label>:493                                     ; preds = %488
  %494 = load i32* %1, align 4
  %495 = icmp sle i32 %494, 4
  br i1 %495, label %496, label %567

; <label>:496                                     ; preds = %493
  store i32 0, i32* %byy, align 4
  br label %497

; <label>:497                                     ; preds = %562, %496
  %498 = load i32* %byy, align 4
  %499 = load i32* %parttype, align 4
  %500 = sext i32 %499 to i64
  %501 = load %struct.InputParameters** @input, align 8
  %502 = getelementptr inbounds %struct.InputParameters* %501, i32 0, i32 20
  %503 = getelementptr inbounds [8 x [2 x i32]]* %502, i32 0, i64 %500
  %504 = getelementptr inbounds [2 x i32]* %503, i32 0, i64 1
  %505 = load i32* %504, align 4
  %506 = icmp slt i32 %498, %505
  br i1 %506, label %507, label %566

; <label>:507                                     ; preds = %497
  store i32 0, i32* %bxx, align 4
  br label %508

; <label>:508                                     ; preds = %557, %507
  %509 = load i32* %bxx, align 4
  %510 = load i32* %parttype, align 4
  %511 = sext i32 %510 to i64
  %512 = load %struct.InputParameters** @input, align 8
  %513 = getelementptr inbounds %struct.InputParameters* %512, i32 0, i32 20
  %514 = getelementptr inbounds [8 x [2 x i32]]* %513, i32 0, i64 %511
  %515 = getelementptr inbounds [2 x i32]* %514, i32 0, i64 0
  %516 = load i32* %515, align 4
  %517 = icmp slt i32 %509, %516
  br i1 %517, label %518, label %561

; <label>:518                                     ; preds = %508
  store i32 0, i32* %k, align 4
  store i32 0, i32* %i, align 4
  br label %519

; <label>:519                                     ; preds = %546, %518
  %520 = load i32* %i, align 4
  %521 = icmp slt i32 %520, 8
  br i1 %521, label %522, label %549

; <label>:522                                     ; preds = %519
  store i32 0, i32* %j, align 4
  br label %523

; <label>:523                                     ; preds = %542, %522
  %524 = load i32* %j, align 4
  %525 = icmp slt i32 %524, 8
  br i1 %525, label %526, label %545

; <label>:526                                     ; preds = %523
  %527 = load i32* %j, align 4
  %528 = load i32* %bxx, align 4
  %529 = add nsw i32 %527, %528
  %530 = sext i32 %529 to i64
  %531 = load i32* %i, align 4
  %532 = load i32* %byy, align 4
  %533 = add nsw i32 %531, %532
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds [16 x [16 x i32]]* %curr_blk, i32 0, i64 %534
  %536 = getelementptr inbounds [16 x i32]* %535, i32 0, i64 %530
  %537 = load i32* %536, align 4
  %538 = load i32* %k, align 4
  %539 = add nsw i32 %538, 1
  store i32 %539, i32* %k, align 4
  %540 = sext i32 %538 to i64
  %541 = getelementptr inbounds [64 x i32]* %diff, i32 0, i64 %540
  store i32 %537, i32* %541, align 4
  br label %542

; <label>:542                                     ; preds = %526
  %543 = load i32* %j, align 4
  %544 = add nsw i32 %543, 1
  store i32 %544, i32* %j, align 4
  br label %523

; <label>:545                                     ; preds = %523
  br label %546

; <label>:546                                     ; preds = %545
  %547 = load i32* %i, align 4
  %548 = add nsw i32 %547, 1
  store i32 %548, i32* %i, align 4
  br label %519

; <label>:549                                     ; preds = %519
  %550 = getelementptr inbounds [64 x i32]* %diff, i32 0, i32 0
  %551 = load %struct.InputParameters** @input, align 8
  %552 = getelementptr inbounds %struct.InputParameters* %551, i32 0, i32 6
  %553 = load i32* %552, align 4
  %554 = call i32 @SATD8X8(i32* %550, i32 %553)
  %555 = load i32* %mcost, align 4
  %556 = add nsw i32 %555, %554
  store i32 %556, i32* %mcost, align 4
  br label %557

; <label>:557                                     ; preds = %549
  %558 = load i32* %bsx, align 4
  %559 = load i32* %bxx, align 4
  %560 = add nsw i32 %559, %558
  store i32 %560, i32* %bxx, align 4
  br label %508

; <label>:561                                     ; preds = %508
  br label %562

; <label>:562                                     ; preds = %561
  %563 = load i32* %bsy, align 4
  %564 = load i32* %byy, align 4
  %565 = add nsw i32 %564, %563
  store i32 %565, i32* %byy, align 4
  br label %497

; <label>:566                                     ; preds = %497
  br label %567

; <label>:567                                     ; preds = %566, %493, %488
  %568 = load i32* %mcost, align 4
  ret i32 %568
}

declare void @LumaPrediction4x4(i32, i32, i32, i32, i32, i16 signext, i16 signext) #2

; Function Attrs: nounwind uwtable
define void @FindSkipModeMotionVector() #0 {
  %bx = alloca i32, align 4
  %by = alloca i32, align 4
  %all_mv = alloca i16******, align 8
  %pmv = alloca [2 x i16], align 2
  %zeroMotionAbove = alloca i32, align 4
  %zeroMotionLeft = alloca i32, align 4
  %mb_a = alloca %struct.pix_pos, align 4
  %mb_b = alloca %struct.pix_pos, align 4
  %a_mv_y = alloca i32, align 4
  %a_ref_idx = alloca i32, align 4
  %b_mv_y = alloca i32, align 4
  %b_ref_idx = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %1 = load %struct.ImageParameters** @img, align 8
  %2 = getelementptr inbounds %struct.ImageParameters* %1, i32 0, i32 71
  %3 = load i16******* %2, align 8
  store i16****** %3, i16******* %all_mv, align 8
  store i32 0, i32* %a_mv_y, align 4
  store i32 0, i32* %a_ref_idx, align 4
  store i32 0, i32* %b_mv_y, align 4
  store i32 0, i32* %b_ref_idx, align 4
  %4 = load %struct.ImageParameters** @img, align 8
  %5 = getelementptr inbounds %struct.ImageParameters* %4, i32 0, i32 3
  %6 = load i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = load %struct.ImageParameters** @img, align 8
  %9 = getelementptr inbounds %struct.ImageParameters* %8, i32 0, i32 51
  %10 = load %struct.macroblock** %9, align 8
  %11 = getelementptr inbounds %struct.macroblock* %10, i64 %7
  store %struct.macroblock* %11, %struct.macroblock** %currMB, align 8
  %12 = load %struct.ImageParameters** @img, align 8
  %13 = getelementptr inbounds %struct.ImageParameters* %12, i32 0, i32 3
  %14 = load i32* %13, align 4
  call void @getLuma4x4Neighbour(i32 %14, i32 0, i32 0, i32 -1, i32 0, %struct.pix_pos* %mb_a)
  %15 = load %struct.ImageParameters** @img, align 8
  %16 = getelementptr inbounds %struct.ImageParameters* %15, i32 0, i32 3
  %17 = load i32* %16, align 4
  call void @getLuma4x4Neighbour(i32 %17, i32 0, i32 0, i32 0, i32 -1, %struct.pix_pos* %mb_b)
  %18 = getelementptr inbounds %struct.pix_pos* %mb_a, i32 0, i32 0
  %19 = load i32* %18, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %98

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %struct.pix_pos* %mb_a, i32 0, i32 5
  %23 = load i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.pix_pos* %mb_a, i32 0, i32 4
  %26 = load i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = load %struct.storable_picture** @enc_picture, align 8
  %29 = getelementptr inbounds %struct.storable_picture* %28, i32 0, i32 35
  %30 = load i16***** %29, align 8
  %31 = getelementptr inbounds i16**** %30, i64 0
  %32 = load i16**** %31, align 8
  %33 = getelementptr inbounds i16*** %32, i64 %27
  %34 = load i16*** %33, align 8
  %35 = getelementptr inbounds i16** %34, i64 %24
  %36 = load i16** %35, align 8
  %37 = getelementptr inbounds i16* %36, i64 1
  %38 = load i16* %37, align 2
  %39 = sext i16 %38 to i32
  store i32 %39, i32* %a_mv_y, align 4
  %40 = getelementptr inbounds %struct.pix_pos* %mb_a, i32 0, i32 5
  %41 = load i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.pix_pos* %mb_a, i32 0, i32 4
  %44 = load i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = load %struct.storable_picture** @enc_picture, align 8
  %47 = getelementptr inbounds %struct.storable_picture* %46, i32 0, i32 32
  %48 = load i16**** %47, align 8
  %49 = getelementptr inbounds i16*** %48, i64 0
  %50 = load i16*** %49, align 8
  %51 = getelementptr inbounds i16** %50, i64 %45
  %52 = load i16** %51, align 8
  %53 = getelementptr inbounds i16* %52, i64 %42
  %54 = load i16* %53, align 2
  %55 = sext i16 %54 to i32
  store i32 %55, i32* %a_ref_idx, align 4
  %56 = load %struct.macroblock** %currMB, align 8
  %57 = getelementptr inbounds %struct.macroblock* %56, i32 0, i32 22
  %58 = load i32* %57, align 4
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %60, label %76

; <label>:60                                      ; preds = %21
  %61 = getelementptr inbounds %struct.pix_pos* %mb_a, i32 0, i32 1
  %62 = load i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = load %struct.ImageParameters** @img, align 8
  %65 = getelementptr inbounds %struct.ImageParameters* %64, i32 0, i32 51
  %66 = load %struct.macroblock** %65, align 8
  %67 = getelementptr inbounds %struct.macroblock* %66, i64 %63
  %68 = getelementptr inbounds %struct.macroblock* %67, i32 0, i32 22
  %69 = load i32* %68, align 4
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %76, label %71

; <label>:71                                      ; preds = %60
  %72 = load i32* %a_mv_y, align 4
  %73 = sdiv i32 %72, 2
  store i32 %73, i32* %a_mv_y, align 4
  %74 = load i32* %a_ref_idx, align 4
  %75 = mul nsw i32 %74, 2
  store i32 %75, i32* %a_ref_idx, align 4
  br label %76

; <label>:76                                      ; preds = %71, %60, %21
  %77 = load %struct.macroblock** %currMB, align 8
  %78 = getelementptr inbounds %struct.macroblock* %77, i32 0, i32 22
  %79 = load i32* %78, align 4
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %97, label %81

; <label>:81                                      ; preds = %76
  %82 = getelementptr inbounds %struct.pix_pos* %mb_a, i32 0, i32 1
  %83 = load i32* %82, align 4
  %84 = sext i32 %83 to i64
  %85 = load %struct.ImageParameters** @img, align 8
  %86 = getelementptr inbounds %struct.ImageParameters* %85, i32 0, i32 51
  %87 = load %struct.macroblock** %86, align 8
  %88 = getelementptr inbounds %struct.macroblock* %87, i64 %84
  %89 = getelementptr inbounds %struct.macroblock* %88, i32 0, i32 22
  %90 = load i32* %89, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %97

; <label>:92                                      ; preds = %81
  %93 = load i32* %a_mv_y, align 4
  %94 = mul nsw i32 %93, 2
  store i32 %94, i32* %a_mv_y, align 4
  %95 = load i32* %a_ref_idx, align 4
  %96 = ashr i32 %95, 1
  store i32 %96, i32* %a_ref_idx, align 4
  br label %97

; <label>:97                                      ; preds = %92, %81, %76
  br label %98

; <label>:98                                      ; preds = %97, %0
  %99 = getelementptr inbounds %struct.pix_pos* %mb_b, i32 0, i32 0
  %100 = load i32* %99, align 4
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %102, label %179

; <label>:102                                     ; preds = %98
  %103 = getelementptr inbounds %struct.pix_pos* %mb_b, i32 0, i32 5
  %104 = load i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.pix_pos* %mb_b, i32 0, i32 4
  %107 = load i32* %106, align 4
  %108 = sext i32 %107 to i64
  %109 = load %struct.storable_picture** @enc_picture, align 8
  %110 = getelementptr inbounds %struct.storable_picture* %109, i32 0, i32 35
  %111 = load i16***** %110, align 8
  %112 = getelementptr inbounds i16**** %111, i64 0
  %113 = load i16**** %112, align 8
  %114 = getelementptr inbounds i16*** %113, i64 %108
  %115 = load i16*** %114, align 8
  %116 = getelementptr inbounds i16** %115, i64 %105
  %117 = load i16** %116, align 8
  %118 = getelementptr inbounds i16* %117, i64 1
  %119 = load i16* %118, align 2
  %120 = sext i16 %119 to i32
  store i32 %120, i32* %b_mv_y, align 4
  %121 = getelementptr inbounds %struct.pix_pos* %mb_b, i32 0, i32 5
  %122 = load i32* %121, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %struct.pix_pos* %mb_b, i32 0, i32 4
  %125 = load i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = load %struct.storable_picture** @enc_picture, align 8
  %128 = getelementptr inbounds %struct.storable_picture* %127, i32 0, i32 32
  %129 = load i16**** %128, align 8
  %130 = getelementptr inbounds i16*** %129, i64 0
  %131 = load i16*** %130, align 8
  %132 = getelementptr inbounds i16** %131, i64 %126
  %133 = load i16** %132, align 8
  %134 = getelementptr inbounds i16* %133, i64 %123
  %135 = load i16* %134, align 2
  %136 = sext i16 %135 to i32
  store i32 %136, i32* %b_ref_idx, align 4
  %137 = load %struct.macroblock** %currMB, align 8
  %138 = getelementptr inbounds %struct.macroblock* %137, i32 0, i32 22
  %139 = load i32* %138, align 4
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %157

; <label>:141                                     ; preds = %102
  %142 = getelementptr inbounds %struct.pix_pos* %mb_b, i32 0, i32 1
  %143 = load i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = load %struct.ImageParameters** @img, align 8
  %146 = getelementptr inbounds %struct.ImageParameters* %145, i32 0, i32 51
  %147 = load %struct.macroblock** %146, align 8
  %148 = getelementptr inbounds %struct.macroblock* %147, i64 %144
  %149 = getelementptr inbounds %struct.macroblock* %148, i32 0, i32 22
  %150 = load i32* %149, align 4
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %157, label %152

; <label>:152                                     ; preds = %141
  %153 = load i32* %b_mv_y, align 4
  %154 = sdiv i32 %153, 2
  store i32 %154, i32* %b_mv_y, align 4
  %155 = load i32* %b_ref_idx, align 4
  %156 = mul nsw i32 %155, 2
  store i32 %156, i32* %b_ref_idx, align 4
  br label %157

; <label>:157                                     ; preds = %152, %141, %102
  %158 = load %struct.macroblock** %currMB, align 8
  %159 = getelementptr inbounds %struct.macroblock* %158, i32 0, i32 22
  %160 = load i32* %159, align 4
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %178, label %162

; <label>:162                                     ; preds = %157
  %163 = getelementptr inbounds %struct.pix_pos* %mb_b, i32 0, i32 1
  %164 = load i32* %163, align 4
  %165 = sext i32 %164 to i64
  %166 = load %struct.ImageParameters** @img, align 8
  %167 = getelementptr inbounds %struct.ImageParameters* %166, i32 0, i32 51
  %168 = load %struct.macroblock** %167, align 8
  %169 = getelementptr inbounds %struct.macroblock* %168, i64 %165
  %170 = getelementptr inbounds %struct.macroblock* %169, i32 0, i32 22
  %171 = load i32* %170, align 4
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %178

; <label>:173                                     ; preds = %162
  %174 = load i32* %b_mv_y, align 4
  %175 = mul nsw i32 %174, 2
  store i32 %175, i32* %b_mv_y, align 4
  %176 = load i32* %b_ref_idx, align 4
  %177 = ashr i32 %176, 1
  store i32 %177, i32* %b_ref_idx, align 4
  br label %178

; <label>:178                                     ; preds = %173, %162, %157
  br label %179

; <label>:179                                     ; preds = %178, %98
  %180 = getelementptr inbounds %struct.pix_pos* %mb_a, i32 0, i32 0
  %181 = load i32* %180, align 4
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %184, label %183

; <label>:183                                     ; preds = %179
  br label %213

; <label>:184                                     ; preds = %179
  %185 = load i32* %a_ref_idx, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %210

; <label>:187                                     ; preds = %184
  %188 = getelementptr inbounds %struct.pix_pos* %mb_a, i32 0, i32 5
  %189 = load i32* %188, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds %struct.pix_pos* %mb_a, i32 0, i32 4
  %192 = load i32* %191, align 4
  %193 = sext i32 %192 to i64
  %194 = load %struct.storable_picture** @enc_picture, align 8
  %195 = getelementptr inbounds %struct.storable_picture* %194, i32 0, i32 35
  %196 = load i16***** %195, align 8
  %197 = getelementptr inbounds i16**** %196, i64 0
  %198 = load i16**** %197, align 8
  %199 = getelementptr inbounds i16*** %198, i64 %193
  %200 = load i16*** %199, align 8
  %201 = getelementptr inbounds i16** %200, i64 %190
  %202 = load i16** %201, align 8
  %203 = getelementptr inbounds i16* %202, i64 0
  %204 = load i16* %203, align 2
  %205 = sext i16 %204 to i32
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %210

; <label>:207                                     ; preds = %187
  %208 = load i32* %a_mv_y, align 4
  %209 = icmp eq i32 %208, 0
  br label %210

; <label>:210                                     ; preds = %207, %187, %184
  %211 = phi i1 [ false, %187 ], [ false, %184 ], [ %209, %207 ]
  %212 = select i1 %211, i32 1, i32 0
  br label %213

; <label>:213                                     ; preds = %210, %183
  %214 = phi i32 [ 1, %183 ], [ %212, %210 ]
  store i32 %214, i32* %zeroMotionLeft, align 4
  %215 = getelementptr inbounds %struct.pix_pos* %mb_b, i32 0, i32 0
  %216 = load i32* %215, align 4
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %219, label %218

; <label>:218                                     ; preds = %213
  br label %248

; <label>:219                                     ; preds = %213
  %220 = load i32* %b_ref_idx, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %245

; <label>:222                                     ; preds = %219
  %223 = getelementptr inbounds %struct.pix_pos* %mb_b, i32 0, i32 5
  %224 = load i32* %223, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds %struct.pix_pos* %mb_b, i32 0, i32 4
  %227 = load i32* %226, align 4
  %228 = sext i32 %227 to i64
  %229 = load %struct.storable_picture** @enc_picture, align 8
  %230 = getelementptr inbounds %struct.storable_picture* %229, i32 0, i32 35
  %231 = load i16***** %230, align 8
  %232 = getelementptr inbounds i16**** %231, i64 0
  %233 = load i16**** %232, align 8
  %234 = getelementptr inbounds i16*** %233, i64 %228
  %235 = load i16*** %234, align 8
  %236 = getelementptr inbounds i16** %235, i64 %225
  %237 = load i16** %236, align 8
  %238 = getelementptr inbounds i16* %237, i64 0
  %239 = load i16* %238, align 2
  %240 = sext i16 %239 to i32
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %245

; <label>:242                                     ; preds = %222
  %243 = load i32* %b_mv_y, align 4
  %244 = icmp eq i32 %243, 0
  br label %245

; <label>:245                                     ; preds = %242, %222, %219
  %246 = phi i1 [ false, %222 ], [ false, %219 ], [ %244, %242 ]
  %247 = select i1 %246, i32 1, i32 0
  br label %248

; <label>:248                                     ; preds = %245, %218
  %249 = phi i32 [ 1, %218 ], [ %247, %245 ]
  store i32 %249, i32* %zeroMotionAbove, align 4
  %250 = load i32* %zeroMotionAbove, align 4
  %251 = icmp ne i32 %250, 0
  br i1 %251, label %255, label %252

; <label>:252                                     ; preds = %248
  %253 = load i32* %zeroMotionLeft, align 4
  %254 = icmp ne i32 %253, 0
  br i1 %254, label %255, label %304

; <label>:255                                     ; preds = %252, %248
  store i32 0, i32* %by, align 4
  br label %256

; <label>:256                                     ; preds = %300, %255
  %257 = load i32* %by, align 4
  %258 = icmp slt i32 %257, 4
  br i1 %258, label %259, label %303

; <label>:259                                     ; preds = %256
  store i32 0, i32* %bx, align 4
  br label %260

; <label>:260                                     ; preds = %296, %259
  %261 = load i32* %bx, align 4
  %262 = icmp slt i32 %261, 4
  br i1 %262, label %263, label %299

; <label>:263                                     ; preds = %260
  %264 = load i32* %by, align 4
  %265 = sext i32 %264 to i64
  %266 = load i32* %bx, align 4
  %267 = sext i32 %266 to i64
  %268 = load i16******* %all_mv, align 8
  %269 = getelementptr inbounds i16****** %268, i64 %267
  %270 = load i16****** %269, align 8
  %271 = getelementptr inbounds i16***** %270, i64 %265
  %272 = load i16***** %271, align 8
  %273 = getelementptr inbounds i16**** %272, i64 0
  %274 = load i16**** %273, align 8
  %275 = getelementptr inbounds i16*** %274, i64 0
  %276 = load i16*** %275, align 8
  %277 = getelementptr inbounds i16** %276, i64 0
  %278 = load i16** %277, align 8
  %279 = getelementptr inbounds i16* %278, i64 0
  store i16 0, i16* %279, align 2
  %280 = load i32* %by, align 4
  %281 = sext i32 %280 to i64
  %282 = load i32* %bx, align 4
  %283 = sext i32 %282 to i64
  %284 = load i16******* %all_mv, align 8
  %285 = getelementptr inbounds i16****** %284, i64 %283
  %286 = load i16****** %285, align 8
  %287 = getelementptr inbounds i16***** %286, i64 %281
  %288 = load i16***** %287, align 8
  %289 = getelementptr inbounds i16**** %288, i64 0
  %290 = load i16**** %289, align 8
  %291 = getelementptr inbounds i16*** %290, i64 0
  %292 = load i16*** %291, align 8
  %293 = getelementptr inbounds i16** %292, i64 0
  %294 = load i16** %293, align 8
  %295 = getelementptr inbounds i16* %294, i64 1
  store i16 0, i16* %295, align 2
  br label %296

; <label>:296                                     ; preds = %263
  %297 = load i32* %bx, align 4
  %298 = add nsw i32 %297, 1
  store i32 %298, i32* %bx, align 4
  br label %260

; <label>:299                                     ; preds = %260
  br label %300

; <label>:300                                     ; preds = %299
  %301 = load i32* %by, align 4
  %302 = add nsw i32 %301, 1
  store i32 %302, i32* %by, align 4
  br label %256

; <label>:303                                     ; preds = %256
  br label %364

; <label>:304                                     ; preds = %252
  %305 = getelementptr inbounds [2 x i16]* %pmv, i32 0, i32 0
  %306 = load %struct.storable_picture** @enc_picture, align 8
  %307 = getelementptr inbounds %struct.storable_picture* %306, i32 0, i32 32
  %308 = load i16**** %307, align 8
  %309 = load %struct.storable_picture** @enc_picture, align 8
  %310 = getelementptr inbounds %struct.storable_picture* %309, i32 0, i32 35
  %311 = load i16***** %310, align 8
  call void @SetMotionVectorPredictor(i16* %305, i16*** %308, i16**** %311, i16 signext 0, i32 0, i32 0, i32 0, i32 16, i32 16)
  store i32 0, i32* %by, align 4
  br label %312

; <label>:312                                     ; preds = %360, %304
  %313 = load i32* %by, align 4
  %314 = icmp slt i32 %313, 4
  br i1 %314, label %315, label %363

; <label>:315                                     ; preds = %312
  store i32 0, i32* %bx, align 4
  br label %316

; <label>:316                                     ; preds = %356, %315
  %317 = load i32* %bx, align 4
  %318 = icmp slt i32 %317, 4
  br i1 %318, label %319, label %359

; <label>:319                                     ; preds = %316
  %320 = getelementptr inbounds [2 x i16]* %pmv, i32 0, i64 0
  %321 = load i16* %320, align 2
  %322 = load i32* %by, align 4
  %323 = sext i32 %322 to i64
  %324 = load i32* %bx, align 4
  %325 = sext i32 %324 to i64
  %326 = load i16******* %all_mv, align 8
  %327 = getelementptr inbounds i16****** %326, i64 %325
  %328 = load i16****** %327, align 8
  %329 = getelementptr inbounds i16***** %328, i64 %323
  %330 = load i16***** %329, align 8
  %331 = getelementptr inbounds i16**** %330, i64 0
  %332 = load i16**** %331, align 8
  %333 = getelementptr inbounds i16*** %332, i64 0
  %334 = load i16*** %333, align 8
  %335 = getelementptr inbounds i16** %334, i64 0
  %336 = load i16** %335, align 8
  %337 = getelementptr inbounds i16* %336, i64 0
  store i16 %321, i16* %337, align 2
  %338 = getelementptr inbounds [2 x i16]* %pmv, i32 0, i64 1
  %339 = load i16* %338, align 2
  %340 = load i32* %by, align 4
  %341 = sext i32 %340 to i64
  %342 = load i32* %bx, align 4
  %343 = sext i32 %342 to i64
  %344 = load i16******* %all_mv, align 8
  %345 = getelementptr inbounds i16****** %344, i64 %343
  %346 = load i16****** %345, align 8
  %347 = getelementptr inbounds i16***** %346, i64 %341
  %348 = load i16***** %347, align 8
  %349 = getelementptr inbounds i16**** %348, i64 0
  %350 = load i16**** %349, align 8
  %351 = getelementptr inbounds i16*** %350, i64 0
  %352 = load i16*** %351, align 8
  %353 = getelementptr inbounds i16** %352, i64 0
  %354 = load i16** %353, align 8
  %355 = getelementptr inbounds i16* %354, i64 1
  store i16 %339, i16* %355, align 2
  br label %356

; <label>:356                                     ; preds = %319
  %357 = load i32* %bx, align 4
  %358 = add nsw i32 %357, 1
  store i32 %358, i32* %bx, align 4
  br label %316

; <label>:359                                     ; preds = %316
  br label %360

; <label>:360                                     ; preds = %359
  %361 = load i32* %by, align 4
  %362 = add nsw i32 %361, 1
  store i32 %362, i32* %by, align 4
  br label %312

; <label>:363                                     ; preds = %312
  br label %364

; <label>:364                                     ; preds = %363, %303
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @Get_Direct_Cost8x8(i32 %block, i32* %cost8x8) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %block_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %curr_diff = alloca [8 x [8 x i32]], align 16
  %diff8x8 = alloca [64 x i32], align 16
  %diff = alloca [16 x i32], align 16
  %cost = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %mb_x = alloca i32, align 4
  store i32 %block, i32* %2, align 4
  store i32* %cost8x8, i32** %3, align 8
  store i32 0, i32* %cost, align 4
  %4 = load i32* %2, align 4
  %5 = sdiv i32 %4, 2
  %6 = shl i32 %5, 3
  store i32 %6, i32* %mb_y, align 4
  %7 = load i32* %2, align 4
  %8 = srem i32 %7, 2
  %9 = shl i32 %8, 3
  store i32 %9, i32* %mb_x, align 4
  %10 = load i32* %mb_y, align 4
  store i32 %10, i32* %block_y, align 4
  br label %11

; <label>:11                                      ; preds = %165, %0
  %12 = load i32* %block_y, align 4
  %13 = load i32* %mb_y, align 4
  %14 = add nsw i32 %13, 8
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %168

; <label>:16                                      ; preds = %11
  %17 = load %struct.ImageParameters** @img, align 8
  %18 = getelementptr inbounds %struct.ImageParameters* %17, i32 0, i32 38
  %19 = load i32* %18, align 4
  %20 = load i32* %block_y, align 4
  %21 = add nsw i32 %19, %20
  store i32 %21, i32* %pic_pix_y, align 4
  %22 = load i32* %mb_x, align 4
  store i32 %22, i32* %block_x, align 4
  br label %23

; <label>:23                                      ; preds = %161, %16
  %24 = load i32* %block_x, align 4
  %25 = load i32* %mb_x, align 4
  %26 = add nsw i32 %25, 8
  %27 = icmp slt i32 %24, %26
  br i1 %27, label %28, label %164

; <label>:28                                      ; preds = %23
  %29 = load %struct.ImageParameters** @img, align 8
  %30 = getelementptr inbounds %struct.ImageParameters* %29, i32 0, i32 37
  %31 = load i32* %30, align 4
  %32 = load i32* %block_x, align 4
  %33 = add nsw i32 %31, %32
  store i32 %33, i32* %pic_pix_x, align 4
  %34 = load i32* %pic_pix_y, align 4
  %35 = ashr i32 %34, 2
  %36 = sext i32 %35 to i64
  %37 = load i32* %pic_pix_x, align 4
  %38 = ashr i32 %37, 2
  %39 = sext i32 %38 to i64
  %40 = load i16*** @direct_pdir, align 8
  %41 = getelementptr inbounds i16** %40, i64 %39
  %42 = load i16** %41, align 8
  %43 = getelementptr inbounds i16* %42, i64 %36
  %44 = load i16* %43, align 2
  %45 = sext i16 %44 to i32
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %49

; <label>:47                                      ; preds = %28
  %48 = load i32** %3, align 8
  store i32 2147483647, i32* %48, align 4
  store i32 2147483647, i32* %1
  br label %217

; <label>:49                                      ; preds = %28
  %50 = load i32* %block_x, align 4
  %51 = load i32* %block_y, align 4
  %52 = load i32* %pic_pix_y, align 4
  %53 = ashr i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = load i32* %pic_pix_x, align 4
  %56 = ashr i32 %55, 2
  %57 = sext i32 %56 to i64
  %58 = load i16*** @direct_pdir, align 8
  %59 = getelementptr inbounds i16** %58, i64 %57
  %60 = load i16** %59, align 8
  %61 = getelementptr inbounds i16* %60, i64 %54
  %62 = load i16* %61, align 2
  %63 = sext i16 %62 to i32
  %64 = load i32* %pic_pix_y, align 4
  %65 = ashr i32 %64, 2
  %66 = sext i32 %65 to i64
  %67 = load i32* %pic_pix_x, align 4
  %68 = ashr i32 %67, 2
  %69 = sext i32 %68 to i64
  %70 = load i16**** @direct_ref_idx, align 8
  %71 = getelementptr inbounds i16*** %70, i64 0
  %72 = load i16*** %71, align 8
  %73 = getelementptr inbounds i16** %72, i64 %69
  %74 = load i16** %73, align 8
  %75 = getelementptr inbounds i16* %74, i64 %66
  %76 = load i16* %75, align 2
  %77 = load i32* %pic_pix_y, align 4
  %78 = ashr i32 %77, 2
  %79 = sext i32 %78 to i64
  %80 = load i32* %pic_pix_x, align 4
  %81 = ashr i32 %80, 2
  %82 = sext i32 %81 to i64
  %83 = load i16**** @direct_ref_idx, align 8
  %84 = getelementptr inbounds i16*** %83, i64 1
  %85 = load i16*** %84, align 8
  %86 = getelementptr inbounds i16** %85, i64 %82
  %87 = load i16** %86, align 8
  %88 = getelementptr inbounds i16* %87, i64 %79
  %89 = load i16* %88, align 2
  call void @LumaPrediction4x4(i32 %50, i32 %51, i32 %63, i32 0, i32 0, i16 signext %76, i16 signext %89)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %90

; <label>:90                                      ; preds = %150, %49
  %91 = load i32* %j, align 4
  %92 = icmp slt i32 %91, 4
  br i1 %92, label %93, label %153

; <label>:93                                      ; preds = %90
  store i32 0, i32* %i, align 4
  br label %94

; <label>:94                                      ; preds = %144, %93
  %95 = load i32* %i, align 4
  %96 = icmp slt i32 %95, 4
  br i1 %96, label %97, label %149

; <label>:97                                      ; preds = %94
  %98 = load i32* %pic_pix_x, align 4
  %99 = load i32* %i, align 4
  %100 = add nsw i32 %98, %99
  %101 = sext i32 %100 to i64
  %102 = load i32* %pic_pix_y, align 4
  %103 = load i32* %j, align 4
  %104 = add nsw i32 %102, %103
  %105 = sext i32 %104 to i64
  %106 = load i16*** @imgY_org, align 8
  %107 = getelementptr inbounds i16** %106, i64 %105
  %108 = load i16** %107, align 8
  %109 = getelementptr inbounds i16* %108, i64 %101
  %110 = load i16* %109, align 2
  %111 = zext i16 %110 to i32
  %112 = load i32* %j, align 4
  %113 = load i32* %block_y, align 4
  %114 = add nsw i32 %112, %113
  %115 = sext i32 %114 to i64
  %116 = load i32* %i, align 4
  %117 = load i32* %block_x, align 4
  %118 = add nsw i32 %116, %117
  %119 = sext i32 %118 to i64
  %120 = load %struct.ImageParameters** @img, align 8
  %121 = getelementptr inbounds %struct.ImageParameters* %120, i32 0, i32 45
  %122 = getelementptr inbounds [16 x [16 x i16]]* %121, i32 0, i64 %119
  %123 = getelementptr inbounds [16 x i16]* %122, i32 0, i64 %115
  %124 = load i16* %123, align 2
  %125 = zext i16 %124 to i32
  %126 = sub nsw i32 %111, %125
  %127 = load i32* %block_x, align 4
  %128 = load i32* %mb_x, align 4
  %129 = sub nsw i32 %127, %128
  %130 = load i32* %i, align 4
  %131 = add nsw i32 %129, %130
  %132 = sext i32 %131 to i64
  %133 = load i32* %block_y, align 4
  %134 = load i32* %mb_y, align 4
  %135 = sub nsw i32 %133, %134
  %136 = load i32* %j, align 4
  %137 = add nsw i32 %135, %136
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds [8 x [8 x i32]]* %curr_diff, i32 0, i64 %138
  %140 = getelementptr inbounds [8 x i32]* %139, i32 0, i64 %132
  store i32 %126, i32* %140, align 4
  %141 = load i32* %k, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [16 x i32]* %diff, i32 0, i64 %142
  store i32 %126, i32* %143, align 4
  br label %144

; <label>:144                                     ; preds = %97
  %145 = load i32* %i, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %i, align 4
  %147 = load i32* %k, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %k, align 4
  br label %94

; <label>:149                                     ; preds = %94
  br label %150

; <label>:150                                     ; preds = %149
  %151 = load i32* %j, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %j, align 4
  br label %90

; <label>:153                                     ; preds = %90
  %154 = getelementptr inbounds [16 x i32]* %diff, i32 0, i32 0
  %155 = load %struct.InputParameters** @input, align 8
  %156 = getelementptr inbounds %struct.InputParameters* %155, i32 0, i32 6
  %157 = load i32* %156, align 4
  %158 = call i32 @SATD(i32* %154, i32 %157)
  %159 = load i32* %cost, align 4
  %160 = add nsw i32 %159, %158
  store i32 %160, i32* %cost, align 4
  br label %161

; <label>:161                                     ; preds = %153
  %162 = load i32* %block_x, align 4
  %163 = add nsw i32 %162, 4
  store i32 %163, i32* %block_x, align 4
  br label %23

; <label>:164                                     ; preds = %23
  br label %165

; <label>:165                                     ; preds = %164
  %166 = load i32* %block_y, align 4
  %167 = add nsw i32 %166, 4
  store i32 %167, i32* %block_y, align 4
  br label %11

; <label>:168                                     ; preds = %11
  %169 = load %struct.InputParameters** @input, align 8
  %170 = getelementptr inbounds %struct.InputParameters* %169, i32 0, i32 85
  %171 = load i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %215

; <label>:173                                     ; preds = %168
  %174 = load %struct.InputParameters** @input, align 8
  %175 = getelementptr inbounds %struct.InputParameters* %174, i32 0, i32 123
  %176 = load i32* %175, align 4
  %177 = icmp ne i32 %176, 0
  br i1 %177, label %178, label %215

; <label>:178                                     ; preds = %173
  store i32 0, i32* %k, align 4
  store i32 0, i32* %j, align 4
  br label %179

; <label>:179                                     ; preds = %203, %178
  %180 = load i32* %j, align 4
  %181 = icmp slt i32 %180, 8
  br i1 %181, label %182, label %206

; <label>:182                                     ; preds = %179
  store i32 0, i32* %i, align 4
  br label %183

; <label>:183                                     ; preds = %197, %182
  %184 = load i32* %i, align 4
  %185 = icmp slt i32 %184, 8
  br i1 %185, label %186, label %202

; <label>:186                                     ; preds = %183
  %187 = load i32* %i, align 4
  %188 = sext i32 %187 to i64
  %189 = load i32* %j, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [8 x [8 x i32]]* %curr_diff, i32 0, i64 %190
  %192 = getelementptr inbounds [8 x i32]* %191, i32 0, i64 %188
  %193 = load i32* %192, align 4
  %194 = load i32* %k, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [64 x i32]* %diff8x8, i32 0, i64 %195
  store i32 %193, i32* %196, align 4
  br label %197

; <label>:197                                     ; preds = %186
  %198 = load i32* %i, align 4
  %199 = add nsw i32 %198, 1
  store i32 %199, i32* %i, align 4
  %200 = load i32* %k, align 4
  %201 = add nsw i32 %200, 1
  store i32 %201, i32* %k, align 4
  br label %183

; <label>:202                                     ; preds = %183
  br label %203

; <label>:203                                     ; preds = %202
  %204 = load i32* %j, align 4
  %205 = add nsw i32 %204, 1
  store i32 %205, i32* %j, align 4
  br label %179

; <label>:206                                     ; preds = %179
  %207 = getelementptr inbounds [64 x i32]* %diff8x8, i32 0, i32 0
  %208 = load %struct.InputParameters** @input, align 8
  %209 = getelementptr inbounds %struct.InputParameters* %208, i32 0, i32 6
  %210 = load i32* %209, align 4
  %211 = call i32 @SATD8X8(i32* %207, i32 %210)
  %212 = load i32** %3, align 8
  %213 = load i32* %212, align 4
  %214 = add nsw i32 %213, %211
  store i32 %214, i32* %212, align 4
  br label %215

; <label>:215                                     ; preds = %206, %173, %168
  %216 = load i32* %cost, align 4
  store i32 %216, i32* %1
  br label %217

; <label>:217                                     ; preds = %215, %47
  %218 = load i32* %1
  ret i32 %218
}

; Function Attrs: nounwind uwtable
define i32 @Get_Direct_CostMB(double %lambda) #0 {
  %1 = alloca i32, align 4
  %2 = alloca double, align 8
  %i = alloca i32, align 4
  %cost = alloca i32, align 4
  %cost8x8 = alloca i32, align 4
  store double %lambda, double* %2, align 8
  store i32 0, i32* %cost, align 4
  store i32 0, i32* %cost8x8, align 4
  store i32 0, i32* %i, align 4
  br label %3

; <label>:3                                       ; preds = %19, %0
  %4 = load i32* %i, align 4
  %5 = icmp slt i32 %4, 4
  br i1 %5, label %6, label %22

; <label>:6                                       ; preds = %3
  %7 = load i32* %i, align 4
  %8 = call i32 @Get_Direct_Cost8x8(i32 %7, i32* %cost8x8)
  %9 = load i32* %cost, align 4
  %10 = add nsw i32 %9, %8
  store i32 %10, i32* %cost, align 4
  %11 = load i32* %cost, align 4
  %12 = icmp eq i32 %11, 2147483647
  br i1 %12, label %16, label %13

; <label>:13                                      ; preds = %6
  %14 = load i32* %cost8x8, align 4
  %15 = icmp eq i32 %14, 2147483647
  br i1 %15, label %16, label %18

; <label>:16                                      ; preds = %13, %6
  %17 = load i32* %cost, align 4
  store i32 %17, i32* %1
  br label %53

; <label>:18                                      ; preds = %13
  br label %19

; <label>:19                                      ; preds = %18
  %20 = load i32* %i, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %i, align 4
  br label %3

; <label>:22                                      ; preds = %3
  %23 = load %struct.InputParameters** @input, align 8
  %24 = getelementptr inbounds %struct.InputParameters* %23, i32 0, i32 123
  %25 = load i32* %24, align 4
  switch i32 %25, label %50 [
    i32 1, label %26
    i32 2, label %48
  ]

; <label>:26                                      ; preds = %22
  %27 = load i32* %cost8x8, align 4
  %28 = load i32* %cost, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %45, label %30

; <label>:30                                      ; preds = %26
  %31 = load %struct.InputParameters** @input, align 8
  %32 = getelementptr inbounds %struct.InputParameters* %31, i32 0, i32 66
  %33 = load i32* %32, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %45

; <label>:35                                      ; preds = %30
  %36 = load %struct.InputParameters** @input, align 8
  %37 = getelementptr inbounds %struct.InputParameters* %36, i32 0, i32 67
  %38 = load i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %40, label %45

; <label>:40                                      ; preds = %35
  %41 = load %struct.InputParameters** @input, align 8
  %42 = getelementptr inbounds %struct.InputParameters* %41, i32 0, i32 68
  %43 = load i32* %42, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %47, label %45

; <label>:45                                      ; preds = %40, %35, %30, %26
  %46 = load i32* %cost8x8, align 4
  store i32 %46, i32* %cost, align 4
  br label %47

; <label>:47                                      ; preds = %45, %40
  br label %51

; <label>:48                                      ; preds = %22
  %49 = load i32* %cost8x8, align 4
  store i32 %49, i32* %cost, align 4
  br label %51

; <label>:50                                      ; preds = %22
  br label %51

; <label>:51                                      ; preds = %50, %48, %47
  %52 = load i32* %cost, align 4
  store i32 %52, i32* %1
  br label %53

; <label>:53                                      ; preds = %51, %16
  %54 = load i32* %1
  ret i32 %54
}

; Function Attrs: nounwind uwtable
define void @PartitionMotionSearch(i32 %blocktype, i32 %block8x8, double %lambda) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca double, align 8
  %ref_array = alloca i16**, align 8
  %mv_array = alloca i16***, align 8
  %ref = alloca i16, align 2
  %v = alloca i32, align 4
  %h = alloca i32, align 4
  %mcost = alloca i32, align 4
  %search_range = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pic_block_x = alloca i32, align 4
  %pic_block_y = alloca i32, align 4
  %bslice = alloca i32, align 4
  %parttype = alloca i32, align 4
  %step_h0 = alloca i32, align 4
  %step_v0 = alloca i32, align 4
  %step_h = alloca i32, align 4
  %step_v = alloca i32, align 4
  %list = alloca i32, align 4
  %numlists = alloca i32, align 4
  %list_offset = alloca i32, align 4
  store i32 %blocktype, i32* %1, align 4
  store i32 %block8x8, i32* %2, align 4
  store double %lambda, double* %3, align 8
  %4 = load %struct.ImageParameters** @img, align 8
  %5 = getelementptr inbounds %struct.ImageParameters* %4, i32 0, i32 6
  %6 = load i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  %8 = zext i1 %7 to i32
  store i32 %8, i32* %bslice, align 4
  %9 = load i32* %1, align 4
  %10 = icmp slt i32 %9, 4
  br i1 %10, label %11, label %13

; <label>:11                                      ; preds = %0
  %12 = load i32* %1, align 4
  br label %14

; <label>:13                                      ; preds = %0
  br label %14

; <label>:14                                      ; preds = %13, %11
  %15 = phi i32 [ %12, %11 ], [ 4, %13 ]
  store i32 %15, i32* %parttype, align 4
  %16 = load i32* %parttype, align 4
  %17 = sext i32 %16 to i64
  %18 = load %struct.InputParameters** @input, align 8
  %19 = getelementptr inbounds %struct.InputParameters* %18, i32 0, i32 21
  %20 = getelementptr inbounds [8 x [2 x i32]]* %19, i32 0, i64 %17
  %21 = getelementptr inbounds [2 x i32]* %20, i32 0, i64 0
  %22 = load i32* %21, align 4
  store i32 %22, i32* %step_h0, align 4
  %23 = load i32* %parttype, align 4
  %24 = sext i32 %23 to i64
  %25 = load %struct.InputParameters** @input, align 8
  %26 = getelementptr inbounds %struct.InputParameters* %25, i32 0, i32 21
  %27 = getelementptr inbounds [8 x [2 x i32]]* %26, i32 0, i64 %24
  %28 = getelementptr inbounds [2 x i32]* %27, i32 0, i64 1
  %29 = load i32* %28, align 4
  store i32 %29, i32* %step_v0, align 4
  %30 = load i32* %1, align 4
  %31 = sext i32 %30 to i64
  %32 = load %struct.InputParameters** @input, align 8
  %33 = getelementptr inbounds %struct.InputParameters* %32, i32 0, i32 21
  %34 = getelementptr inbounds [8 x [2 x i32]]* %33, i32 0, i64 %31
  %35 = getelementptr inbounds [2 x i32]* %34, i32 0, i64 0
  %36 = load i32* %35, align 4
  store i32 %36, i32* %step_h, align 4
  %37 = load i32* %1, align 4
  %38 = sext i32 %37 to i64
  %39 = load %struct.InputParameters** @input, align 8
  %40 = getelementptr inbounds %struct.InputParameters* %39, i32 0, i32 21
  %41 = getelementptr inbounds [8 x [2 x i32]]* %40, i32 0, i64 %38
  %42 = getelementptr inbounds [2 x i32]* %41, i32 0, i64 1
  %43 = load i32* %42, align 4
  store i32 %43, i32* %step_v, align 4
  %44 = load %struct.ImageParameters** @img, align 8
  %45 = getelementptr inbounds %struct.ImageParameters* %44, i32 0, i32 3
  %46 = load i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = load %struct.ImageParameters** @img, align 8
  %49 = getelementptr inbounds %struct.ImageParameters* %48, i32 0, i32 51
  %50 = load %struct.macroblock** %49, align 8
  %51 = getelementptr inbounds %struct.macroblock* %50, i64 %47
  %52 = getelementptr inbounds %struct.macroblock* %51, i32 0, i32 22
  %53 = load i32* %52, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %64

; <label>:55                                      ; preds = %14
  %56 = load %struct.ImageParameters** @img, align 8
  %57 = getelementptr inbounds %struct.ImageParameters* %56, i32 0, i32 3
  %58 = load i32* %57, align 4
  %59 = srem i32 %58, 2
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %55
  store i32 4, i32* %list_offset, align 4
  br label %63

; <label>:62                                      ; preds = %55
  store i32 2, i32* %list_offset, align 4
  br label %63

; <label>:63                                      ; preds = %62, %61
  br label %65

; <label>:64                                      ; preds = %14
  store i32 0, i32* %list_offset, align 4
  br label %65

; <label>:65                                      ; preds = %64, %63
  %66 = load i32* %bslice, align 4
  %67 = icmp ne i32 %66, 0
  %68 = select i1 %67, i32 2, i32 1
  store i32 %68, i32* %numlists, align 4
  store i32 0, i32* %list, align 4
  br label %69

; <label>:69                                      ; preds = %370, %65
  %70 = load i32* %list, align 4
  %71 = load i32* %numlists, align 4
  %72 = icmp slt i32 %70, %71
  br i1 %72, label %73, label %373

; <label>:73                                      ; preds = %69
  store i16 0, i16* %ref, align 2
  br label %74

; <label>:74                                      ; preds = %366, %73
  %75 = load i16* %ref, align 2
  %76 = sext i16 %75 to i32
  %77 = load i32* %list, align 4
  %78 = load i32* %list_offset, align 4
  %79 = add nsw i32 %77, %78
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [6 x i32]* @listXsize, i32 0, i64 %80
  %82 = load i32* %81, align 4
  %83 = icmp slt i32 %76, %82
  br i1 %83, label %84, label %369

; <label>:84                                      ; preds = %74
  %85 = load %struct.InputParameters** @input, align 8
  %86 = getelementptr inbounds %struct.InputParameters* %85, i32 0, i32 78
  %87 = load i32* %86, align 4
  %88 = icmp eq i32 %87, 2
  br i1 %88, label %89, label %93

; <label>:89                                      ; preds = %84
  %90 = load %struct.InputParameters** @input, align 8
  %91 = getelementptr inbounds %struct.InputParameters* %90, i32 0, i32 8
  %92 = load i32* %91, align 4
  store i32 %92, i32* %search_range, align 4
  br label %137

; <label>:93                                      ; preds = %84
  %94 = load %struct.InputParameters** @input, align 8
  %95 = getelementptr inbounds %struct.InputParameters* %94, i32 0, i32 78
  %96 = load i32* %95, align 4
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %113

; <label>:98                                      ; preds = %93
  %99 = load %struct.InputParameters** @input, align 8
  %100 = getelementptr inbounds %struct.InputParameters* %99, i32 0, i32 8
  %101 = load i32* %100, align 4
  %102 = load i16* %ref, align 2
  %103 = sext i16 %102 to i32
  %104 = icmp slt i32 %103, 1
  br i1 %104, label %105, label %108

; <label>:105                                     ; preds = %98
  %106 = load i16* %ref, align 2
  %107 = sext i16 %106 to i32
  br label %109

; <label>:108                                     ; preds = %98
  br label %109

; <label>:109                                     ; preds = %108, %105
  %110 = phi i32 [ %107, %105 ], [ 1, %108 ]
  %111 = add nsw i32 %110, 1
  %112 = sdiv i32 %101, %111
  store i32 %112, i32* %search_range, align 4
  br label %136

; <label>:113                                     ; preds = %93
  %114 = load %struct.InputParameters** @input, align 8
  %115 = getelementptr inbounds %struct.InputParameters* %114, i32 0, i32 8
  %116 = load i32* %115, align 4
  %117 = load i16* %ref, align 2
  %118 = sext i16 %117 to i32
  %119 = icmp slt i32 %118, 1
  br i1 %119, label %120, label %123

; <label>:120                                     ; preds = %113
  %121 = load i16* %ref, align 2
  %122 = sext i16 %121 to i32
  br label %124

; <label>:123                                     ; preds = %113
  br label %124

; <label>:124                                     ; preds = %123, %120
  %125 = phi i32 [ %122, %120 ], [ 1, %123 ]
  %126 = add nsw i32 %125, 1
  %127 = load i32* %1, align 4
  %128 = icmp slt i32 2, %127
  br i1 %128, label %129, label %130

; <label>:129                                     ; preds = %124
  br label %132

; <label>:130                                     ; preds = %124
  %131 = load i32* %1, align 4
  br label %132

; <label>:132                                     ; preds = %130, %129
  %133 = phi i32 [ 2, %129 ], [ %131, %130 ]
  %134 = mul nsw i32 %126, %133
  %135 = sdiv i32 %116, %134
  store i32 %135, i32* %search_range, align 4
  br label %136

; <label>:136                                     ; preds = %132, %109
  br label %137

; <label>:137                                     ; preds = %136, %89
  %138 = load i32* %list, align 4
  %139 = sext i32 %138 to i64
  %140 = load %struct.storable_picture** @enc_picture, align 8
  %141 = getelementptr inbounds %struct.storable_picture* %140, i32 0, i32 32
  %142 = load i16**** %141, align 8
  %143 = getelementptr inbounds i16*** %142, i64 %139
  %144 = load i16*** %143, align 8
  store i16** %144, i16*** %ref_array, align 8
  %145 = load i32* %list, align 4
  %146 = sext i32 %145 to i64
  %147 = load %struct.storable_picture** @enc_picture, align 8
  %148 = getelementptr inbounds %struct.storable_picture* %147, i32 0, i32 35
  %149 = load i16***** %148, align 8
  %150 = getelementptr inbounds i16**** %149, i64 %146
  %151 = load i16**** %150, align 8
  store i16*** %151, i16**** %mv_array, align 8
  %152 = load i32* %2, align 4
  %153 = sext i32 %152 to i64
  %154 = load i16* %ref, align 2
  %155 = sext i16 %154 to i64
  %156 = load i32* %list, align 4
  %157 = sext i32 %156 to i64
  %158 = load i32* %1, align 4
  %159 = sext i32 %158 to i64
  %160 = load i32***** @motion_cost, align 8
  %161 = getelementptr inbounds i32**** %160, i64 %159
  %162 = load i32**** %161, align 8
  %163 = getelementptr inbounds i32*** %162, i64 %157
  %164 = load i32*** %163, align 8
  %165 = getelementptr inbounds i32** %164, i64 %155
  %166 = load i32** %165, align 8
  %167 = getelementptr inbounds i32* %166, i64 %153
  store i32 0, i32* %167, align 4
  %168 = load i32* %2, align 4
  %169 = sext i32 %168 to i64
  %170 = load i32* %parttype, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [5 x [4 x i32]]* @PartitionMotionSearch.by0, i32 0, i64 %171
  %173 = getelementptr inbounds [4 x i32]* %172, i32 0, i64 %169
  %174 = load i32* %173, align 4
  store i32 %174, i32* %v, align 4
  br label %175

; <label>:175                                     ; preds = %361, %137
  %176 = load i32* %v, align 4
  %177 = load i32* %2, align 4
  %178 = sext i32 %177 to i64
  %179 = load i32* %parttype, align 4
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [5 x [4 x i32]]* @PartitionMotionSearch.by0, i32 0, i64 %180
  %182 = getelementptr inbounds [4 x i32]* %181, i32 0, i64 %178
  %183 = load i32* %182, align 4
  %184 = load i32* %step_v0, align 4
  %185 = add nsw i32 %183, %184
  %186 = icmp slt i32 %176, %185
  br i1 %186, label %187, label %365

; <label>:187                                     ; preds = %175
  %188 = load %struct.ImageParameters** @img, align 8
  %189 = getelementptr inbounds %struct.ImageParameters* %188, i32 0, i32 32
  %190 = load i32* %189, align 4
  %191 = load i32* %v, align 4
  %192 = add nsw i32 %190, %191
  store i32 %192, i32* %pic_block_y, align 4
  %193 = load i32* %2, align 4
  %194 = sext i32 %193 to i64
  %195 = load i32* %parttype, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds [5 x [4 x i32]]* @PartitionMotionSearch.bx0, i32 0, i64 %196
  %198 = getelementptr inbounds [4 x i32]* %197, i32 0, i64 %194
  %199 = load i32* %198, align 4
  store i32 %199, i32* %h, align 4
  br label %200

; <label>:200                                     ; preds = %356, %187
  %201 = load i32* %h, align 4
  %202 = load i32* %2, align 4
  %203 = sext i32 %202 to i64
  %204 = load i32* %parttype, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds [5 x [4 x i32]]* @PartitionMotionSearch.bx0, i32 0, i64 %205
  %207 = getelementptr inbounds [4 x i32]* %206, i32 0, i64 %203
  %208 = load i32* %207, align 4
  %209 = load i32* %step_h0, align 4
  %210 = add nsw i32 %208, %209
  %211 = icmp slt i32 %201, %210
  br i1 %211, label %212, label %360

; <label>:212                                     ; preds = %200
  %213 = load %struct.ImageParameters** @img, align 8
  %214 = getelementptr inbounds %struct.ImageParameters* %213, i32 0, i32 31
  %215 = load i32* %214, align 4
  %216 = load i32* %h, align 4
  %217 = add nsw i32 %215, %216
  store i32 %217, i32* %pic_block_x, align 4
  %218 = load i16* %ref, align 2
  %219 = load i32* %list, align 4
  %220 = load i32* %h, align 4
  %221 = shl i32 %220, 2
  %222 = load i32* %v, align 4
  %223 = shl i32 %222, 2
  %224 = load i32* %1, align 4
  %225 = load i32* %search_range, align 4
  %226 = load double* %3, align 8
  %227 = call i32 @BlockMotionSearch(i16 signext %218, i32 %219, i32 %221, i32 %223, i32 %224, i32 %225, double %226)
  store i32 %227, i32* %mcost, align 4
  %228 = load i32* %mcost, align 4
  %229 = load i32* %2, align 4
  %230 = sext i32 %229 to i64
  %231 = load i16* %ref, align 2
  %232 = sext i16 %231 to i64
  %233 = load i32* %list, align 4
  %234 = sext i32 %233 to i64
  %235 = load i32* %1, align 4
  %236 = sext i32 %235 to i64
  %237 = load i32***** @motion_cost, align 8
  %238 = getelementptr inbounds i32**** %237, i64 %236
  %239 = load i32**** %238, align 8
  %240 = getelementptr inbounds i32*** %239, i64 %234
  %241 = load i32*** %240, align 8
  %242 = getelementptr inbounds i32** %241, i64 %232
  %243 = load i32** %242, align 8
  %244 = getelementptr inbounds i32* %243, i64 %230
  %245 = load i32* %244, align 4
  %246 = add nsw i32 %245, %228
  store i32 %246, i32* %244, align 4
  store i32 0, i32* %j, align 4
  br label %247

; <label>:247                                     ; preds = %352, %212
  %248 = load i32* %j, align 4
  %249 = load i32* %step_v, align 4
  %250 = icmp slt i32 %248, %249
  br i1 %250, label %251, label %355

; <label>:251                                     ; preds = %247
  store i32 0, i32* %i, align 4
  br label %252

; <label>:252                                     ; preds = %348, %251
  %253 = load i32* %i, align 4
  %254 = load i32* %step_h, align 4
  %255 = icmp slt i32 %253, %254
  br i1 %255, label %256, label %351

; <label>:256                                     ; preds = %252
  %257 = load i32* %1, align 4
  %258 = sext i32 %257 to i64
  %259 = load i16* %ref, align 2
  %260 = sext i16 %259 to i64
  %261 = load i32* %list, align 4
  %262 = sext i32 %261 to i64
  %263 = load i32* %v, align 4
  %264 = sext i32 %263 to i64
  %265 = load i32* %h, align 4
  %266 = sext i32 %265 to i64
  %267 = load %struct.ImageParameters** @img, align 8
  %268 = getelementptr inbounds %struct.ImageParameters* %267, i32 0, i32 71
  %269 = load i16******* %268, align 8
  %270 = getelementptr inbounds i16****** %269, i64 %266
  %271 = load i16****** %270, align 8
  %272 = getelementptr inbounds i16***** %271, i64 %264
  %273 = load i16***** %272, align 8
  %274 = getelementptr inbounds i16**** %273, i64 %262
  %275 = load i16**** %274, align 8
  %276 = getelementptr inbounds i16*** %275, i64 %260
  %277 = load i16*** %276, align 8
  %278 = getelementptr inbounds i16** %277, i64 %258
  %279 = load i16** %278, align 8
  %280 = getelementptr inbounds i16* %279, i64 0
  %281 = load i16* %280, align 2
  %282 = load i32* %pic_block_y, align 4
  %283 = load i32* %j, align 4
  %284 = add nsw i32 %282, %283
  %285 = sext i32 %284 to i64
  %286 = load i32* %pic_block_x, align 4
  %287 = load i32* %i, align 4
  %288 = add nsw i32 %286, %287
  %289 = sext i32 %288 to i64
  %290 = load i16**** %mv_array, align 8
  %291 = getelementptr inbounds i16*** %290, i64 %289
  %292 = load i16*** %291, align 8
  %293 = getelementptr inbounds i16** %292, i64 %285
  %294 = load i16** %293, align 8
  %295 = getelementptr inbounds i16* %294, i64 0
  store i16 %281, i16* %295, align 2
  %296 = load i32* %1, align 4
  %297 = sext i32 %296 to i64
  %298 = load i16* %ref, align 2
  %299 = sext i16 %298 to i64
  %300 = load i32* %list, align 4
  %301 = sext i32 %300 to i64
  %302 = load i32* %v, align 4
  %303 = sext i32 %302 to i64
  %304 = load i32* %h, align 4
  %305 = sext i32 %304 to i64
  %306 = load %struct.ImageParameters** @img, align 8
  %307 = getelementptr inbounds %struct.ImageParameters* %306, i32 0, i32 71
  %308 = load i16******* %307, align 8
  %309 = getelementptr inbounds i16****** %308, i64 %305
  %310 = load i16****** %309, align 8
  %311 = getelementptr inbounds i16***** %310, i64 %303
  %312 = load i16***** %311, align 8
  %313 = getelementptr inbounds i16**** %312, i64 %301
  %314 = load i16**** %313, align 8
  %315 = getelementptr inbounds i16*** %314, i64 %299
  %316 = load i16*** %315, align 8
  %317 = getelementptr inbounds i16** %316, i64 %297
  %318 = load i16** %317, align 8
  %319 = getelementptr inbounds i16* %318, i64 1
  %320 = load i16* %319, align 2
  %321 = load i32* %pic_block_y, align 4
  %322 = load i32* %j, align 4
  %323 = add nsw i32 %321, %322
  %324 = sext i32 %323 to i64
  %325 = load i32* %pic_block_x, align 4
  %326 = load i32* %i, align 4
  %327 = add nsw i32 %325, %326
  %328 = sext i32 %327 to i64
  %329 = load i16**** %mv_array, align 8
  %330 = getelementptr inbounds i16*** %329, i64 %328
  %331 = load i16*** %330, align 8
  %332 = getelementptr inbounds i16** %331, i64 %324
  %333 = load i16** %332, align 8
  %334 = getelementptr inbounds i16* %333, i64 1
  store i16 %320, i16* %334, align 2
  %335 = load i16* %ref, align 2
  %336 = load i32* %pic_block_y, align 4
  %337 = load i32* %j, align 4
  %338 = add nsw i32 %336, %337
  %339 = sext i32 %338 to i64
  %340 = load i32* %pic_block_x, align 4
  %341 = load i32* %i, align 4
  %342 = add nsw i32 %340, %341
  %343 = sext i32 %342 to i64
  %344 = load i16*** %ref_array, align 8
  %345 = getelementptr inbounds i16** %344, i64 %343
  %346 = load i16** %345, align 8
  %347 = getelementptr inbounds i16* %346, i64 %339
  store i16 %335, i16* %347, align 2
  br label %348

; <label>:348                                     ; preds = %256
  %349 = load i32* %i, align 4
  %350 = add nsw i32 %349, 1
  store i32 %350, i32* %i, align 4
  br label %252

; <label>:351                                     ; preds = %252
  br label %352

; <label>:352                                     ; preds = %351
  %353 = load i32* %j, align 4
  %354 = add nsw i32 %353, 1
  store i32 %354, i32* %j, align 4
  br label %247

; <label>:355                                     ; preds = %247
  br label %356

; <label>:356                                     ; preds = %355
  %357 = load i32* %step_h, align 4
  %358 = load i32* %h, align 4
  %359 = add nsw i32 %358, %357
  store i32 %359, i32* %h, align 4
  br label %200

; <label>:360                                     ; preds = %200
  br label %361

; <label>:361                                     ; preds = %360
  %362 = load i32* %step_v, align 4
  %363 = load i32* %v, align 4
  %364 = add nsw i32 %363, %362
  store i32 %364, i32* %v, align 4
  br label %175

; <label>:365                                     ; preds = %175
  br label %366

; <label>:366                                     ; preds = %365
  %367 = load i16* %ref, align 2
  %368 = add i16 %367, 1
  store i16 %368, i16* %ref, align 2
  br label %74

; <label>:369                                     ; preds = %74
  br label %370

; <label>:370                                     ; preds = %369
  %371 = load i32* %list, align 4
  %372 = add nsw i32 %371, 1
  store i32 %372, i32* %list, align 4
  br label %69

; <label>:373                                     ; preds = %69
  ret void
}

; Function Attrs: nounwind uwtable
define void @Get_Direct_Motion_Vectors() #0 {
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %pic_block_x = alloca i32, align 4
  %pic_block_y = alloca i32, align 4
  %opic_block_x = alloca i32, align 4
  %opic_block_y = alloca i32, align 4
  %all_mvs = alloca i16******, align 8
  %mv_scale = alloca i32, align 4
  %moving_block = alloca i8**, align 8
  %co_located_mv = alloca i16****, align 8
  %co_located_ref_idx = alloca i16***, align 8
  %co_located_ref_id = alloca i64***, align 8
  %currMB = alloca %struct.macroblock*, align 8
  %fw_rFrameL = alloca i16, align 2
  %fw_rFrameU = alloca i16, align 2
  %fw_rFrameUL = alloca i16, align 2
  %fw_rFrameUR = alloca i16, align 2
  %bw_rFrameL = alloca i16, align 2
  %bw_rFrameU = alloca i16, align 2
  %bw_rFrameUL = alloca i16, align 2
  %bw_rFrameUR = alloca i16, align 2
  %fw_rFrame = alloca i16, align 2
  %bw_rFrame = alloca i16, align 2
  %pmvfw = alloca [2 x i16], align 2
  %pmvbw = alloca [2 x i16], align 2
  %mb_left = alloca %struct.pix_pos, align 4
  %mb_up = alloca %struct.pix_pos, align 4
  %mb_upleft = alloca %struct.pix_pos, align 4
  %mb_upright = alloca %struct.pix_pos, align 4
  %refList = alloca i32, align 4
  %ref_idx = alloca i32, align 4
  %list_offset = alloca i32, align 4
  %mapped_idx = alloca i32, align 4
  %iref = alloca i32, align 4
  %1 = load %struct.ImageParameters** @img, align 8
  %2 = getelementptr inbounds %struct.ImageParameters* %1, i32 0, i32 71
  %3 = load i16******* %2, align 8
  store i16****** %3, i16******* %all_mvs, align 8
  %4 = load %struct.ImageParameters** @img, align 8
  %5 = getelementptr inbounds %struct.ImageParameters* %4, i32 0, i32 3
  %6 = load i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = load %struct.ImageParameters** @img, align 8
  %9 = getelementptr inbounds %struct.ImageParameters* %8, i32 0, i32 51
  %10 = load %struct.macroblock** %9, align 8
  %11 = getelementptr inbounds %struct.macroblock* %10, i64 %7
  store %struct.macroblock* %11, %struct.macroblock** %currMB, align 8
  %12 = load %struct.ImageParameters** @img, align 8
  %13 = getelementptr inbounds %struct.ImageParameters* %12, i32 0, i32 90
  %14 = load i32* %13, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %54

; <label>:16                                      ; preds = %0
  %17 = load %struct.macroblock** %currMB, align 8
  %18 = getelementptr inbounds %struct.macroblock* %17, i32 0, i32 22
  %19 = load i32* %18, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %54

; <label>:21                                      ; preds = %16
  %22 = load %struct.ImageParameters** @img, align 8
  %23 = getelementptr inbounds %struct.ImageParameters* %22, i32 0, i32 3
  %24 = load i32* %23, align 4
  %25 = srem i32 %24, 2
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %40

; <label>:27                                      ; preds = %21
  %28 = load %struct.colocated_params** @Co_located, align 8
  %29 = getelementptr inbounds %struct.colocated_params* %28, i32 0, i32 17
  %30 = load i8*** %29, align 8
  store i8** %30, i8*** %moving_block, align 8
  %31 = load %struct.colocated_params** @Co_located, align 8
  %32 = getelementptr inbounds %struct.colocated_params* %31, i32 0, i32 16
  %33 = load i16***** %32, align 8
  store i16**** %33, i16***** %co_located_mv, align 8
  %34 = load %struct.colocated_params** @Co_located, align 8
  %35 = getelementptr inbounds %struct.colocated_params* %34, i32 0, i32 14
  %36 = load i16**** %35, align 8
  store i16*** %36, i16**** %co_located_ref_idx, align 8
  %37 = load %struct.colocated_params** @Co_located, align 8
  %38 = getelementptr inbounds %struct.colocated_params* %37, i32 0, i32 15
  %39 = load i64**** %38, align 8
  store i64*** %39, i64**** %co_located_ref_id, align 8
  br label %53

; <label>:40                                      ; preds = %21
  %41 = load %struct.colocated_params** @Co_located, align 8
  %42 = getelementptr inbounds %struct.colocated_params* %41, i32 0, i32 12
  %43 = load i8*** %42, align 8
  store i8** %43, i8*** %moving_block, align 8
  %44 = load %struct.colocated_params** @Co_located, align 8
  %45 = getelementptr inbounds %struct.colocated_params* %44, i32 0, i32 11
  %46 = load i16***** %45, align 8
  store i16**** %46, i16***** %co_located_mv, align 8
  %47 = load %struct.colocated_params** @Co_located, align 8
  %48 = getelementptr inbounds %struct.colocated_params* %47, i32 0, i32 9
  %49 = load i16**** %48, align 8
  store i16*** %49, i16**** %co_located_ref_idx, align 8
  %50 = load %struct.colocated_params** @Co_located, align 8
  %51 = getelementptr inbounds %struct.colocated_params* %50, i32 0, i32 10
  %52 = load i64**** %51, align 8
  store i64*** %52, i64**** %co_located_ref_id, align 8
  br label %53

; <label>:53                                      ; preds = %40, %27
  br label %67

; <label>:54                                      ; preds = %16, %0
  %55 = load %struct.colocated_params** @Co_located, align 8
  %56 = getelementptr inbounds %struct.colocated_params* %55, i32 0, i32 7
  %57 = load i8*** %56, align 8
  store i8** %57, i8*** %moving_block, align 8
  %58 = load %struct.colocated_params** @Co_located, align 8
  %59 = getelementptr inbounds %struct.colocated_params* %58, i32 0, i32 6
  %60 = load i16***** %59, align 8
  store i16**** %60, i16***** %co_located_mv, align 8
  %61 = load %struct.colocated_params** @Co_located, align 8
  %62 = getelementptr inbounds %struct.colocated_params* %61, i32 0, i32 4
  %63 = load i16**** %62, align 8
  store i16*** %63, i16**** %co_located_ref_idx, align 8
  %64 = load %struct.colocated_params** @Co_located, align 8
  %65 = getelementptr inbounds %struct.colocated_params* %64, i32 0, i32 5
  %66 = load i64**** %65, align 8
  store i64*** %66, i64**** %co_located_ref_id, align 8
  br label %67

; <label>:67                                      ; preds = %54, %53
  %68 = load %struct.ImageParameters** @img, align 8
  %69 = getelementptr inbounds %struct.ImageParameters* %68, i32 0, i32 78
  %70 = load i32* %69, align 4
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %2092

; <label>:72                                      ; preds = %67
  %73 = bitcast [2 x i16]* %pmvfw to i8*
  call void @llvm.memset.p0i8.i64(i8* %73, i8 0, i64 4, i32 2, i1 false)
  %74 = bitcast [2 x i16]* %pmvbw to i8*
  call void @llvm.memset.p0i8.i64(i8* %74, i8 0, i64 4, i32 2, i1 false)
  %75 = load %struct.ImageParameters** @img, align 8
  %76 = getelementptr inbounds %struct.ImageParameters* %75, i32 0, i32 3
  %77 = load i32* %76, align 4
  call void @getLuma4x4Neighbour(i32 %77, i32 0, i32 0, i32 -1, i32 0, %struct.pix_pos* %mb_left)
  %78 = load %struct.ImageParameters** @img, align 8
  %79 = getelementptr inbounds %struct.ImageParameters* %78, i32 0, i32 3
  %80 = load i32* %79, align 4
  call void @getLuma4x4Neighbour(i32 %80, i32 0, i32 0, i32 0, i32 -1, %struct.pix_pos* %mb_up)
  %81 = load %struct.ImageParameters** @img, align 8
  %82 = getelementptr inbounds %struct.ImageParameters* %81, i32 0, i32 3
  %83 = load i32* %82, align 4
  call void @getLuma4x4Neighbour(i32 %83, i32 0, i32 0, i32 16, i32 -1, %struct.pix_pos* %mb_upright)
  %84 = load %struct.ImageParameters** @img, align 8
  %85 = getelementptr inbounds %struct.ImageParameters* %84, i32 0, i32 3
  %86 = load i32* %85, align 4
  call void @getLuma4x4Neighbour(i32 %86, i32 0, i32 0, i32 -1, i32 -1, %struct.pix_pos* %mb_upleft)
  %87 = load %struct.ImageParameters** @img, align 8
  %88 = getelementptr inbounds %struct.ImageParameters* %87, i32 0, i32 90
  %89 = load i32* %88, align 4
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %288, label %91

; <label>:91                                      ; preds = %72
  %92 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 0
  %93 = load i32* %92, align 4
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %112

; <label>:95                                      ; preds = %91
  %96 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %97 = load i32* %96, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %100 = load i32* %99, align 4
  %101 = sext i32 %100 to i64
  %102 = load %struct.storable_picture** @enc_picture, align 8
  %103 = getelementptr inbounds %struct.storable_picture* %102, i32 0, i32 32
  %104 = load i16**** %103, align 8
  %105 = getelementptr inbounds i16*** %104, i64 0
  %106 = load i16*** %105, align 8
  %107 = getelementptr inbounds i16** %106, i64 %101
  %108 = load i16** %107, align 8
  %109 = getelementptr inbounds i16* %108, i64 %98
  %110 = load i16* %109, align 2
  %111 = sext i16 %110 to i32
  br label %113

; <label>:112                                     ; preds = %91
  br label %113

; <label>:113                                     ; preds = %112, %95
  %114 = phi i32 [ %111, %95 ], [ -1, %112 ]
  %115 = trunc i32 %114 to i16
  store i16 %115, i16* %fw_rFrameL, align 2
  %116 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 0
  %117 = load i32* %116, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %136

; <label>:119                                     ; preds = %113
  %120 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %121 = load i32* %120, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %124 = load i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = load %struct.storable_picture** @enc_picture, align 8
  %127 = getelementptr inbounds %struct.storable_picture* %126, i32 0, i32 32
  %128 = load i16**** %127, align 8
  %129 = getelementptr inbounds i16*** %128, i64 0
  %130 = load i16*** %129, align 8
  %131 = getelementptr inbounds i16** %130, i64 %125
  %132 = load i16** %131, align 8
  %133 = getelementptr inbounds i16* %132, i64 %122
  %134 = load i16* %133, align 2
  %135 = sext i16 %134 to i32
  br label %137

; <label>:136                                     ; preds = %113
  br label %137

; <label>:137                                     ; preds = %136, %119
  %138 = phi i32 [ %135, %119 ], [ -1, %136 ]
  %139 = trunc i32 %138 to i16
  store i16 %139, i16* %fw_rFrameU, align 2
  %140 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %141 = load i32* %140, align 4
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %160

; <label>:143                                     ; preds = %137
  %144 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %145 = load i32* %144, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %148 = load i32* %147, align 4
  %149 = sext i32 %148 to i64
  %150 = load %struct.storable_picture** @enc_picture, align 8
  %151 = getelementptr inbounds %struct.storable_picture* %150, i32 0, i32 32
  %152 = load i16**** %151, align 8
  %153 = getelementptr inbounds i16*** %152, i64 0
  %154 = load i16*** %153, align 8
  %155 = getelementptr inbounds i16** %154, i64 %149
  %156 = load i16** %155, align 8
  %157 = getelementptr inbounds i16* %156, i64 %146
  %158 = load i16* %157, align 2
  %159 = sext i16 %158 to i32
  br label %161

; <label>:160                                     ; preds = %137
  br label %161

; <label>:161                                     ; preds = %160, %143
  %162 = phi i32 [ %159, %143 ], [ -1, %160 ]
  %163 = trunc i32 %162 to i16
  store i16 %163, i16* %fw_rFrameUL, align 2
  %164 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 0
  %165 = load i32* %164, align 4
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %167, label %184

; <label>:167                                     ; preds = %161
  %168 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %169 = load i32* %168, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %172 = load i32* %171, align 4
  %173 = sext i32 %172 to i64
  %174 = load %struct.storable_picture** @enc_picture, align 8
  %175 = getelementptr inbounds %struct.storable_picture* %174, i32 0, i32 32
  %176 = load i16**** %175, align 8
  %177 = getelementptr inbounds i16*** %176, i64 0
  %178 = load i16*** %177, align 8
  %179 = getelementptr inbounds i16** %178, i64 %173
  %180 = load i16** %179, align 8
  %181 = getelementptr inbounds i16* %180, i64 %170
  %182 = load i16* %181, align 2
  %183 = sext i16 %182 to i32
  br label %187

; <label>:184                                     ; preds = %161
  %185 = load i16* %fw_rFrameUL, align 2
  %186 = sext i16 %185 to i32
  br label %187

; <label>:187                                     ; preds = %184, %167
  %188 = phi i32 [ %183, %167 ], [ %186, %184 ]
  %189 = trunc i32 %188 to i16
  store i16 %189, i16* %fw_rFrameUR, align 2
  %190 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 0
  %191 = load i32* %190, align 4
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %193, label %210

; <label>:193                                     ; preds = %187
  %194 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %195 = load i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %198 = load i32* %197, align 4
  %199 = sext i32 %198 to i64
  %200 = load %struct.storable_picture** @enc_picture, align 8
  %201 = getelementptr inbounds %struct.storable_picture* %200, i32 0, i32 32
  %202 = load i16**** %201, align 8
  %203 = getelementptr inbounds i16*** %202, i64 1
  %204 = load i16*** %203, align 8
  %205 = getelementptr inbounds i16** %204, i64 %199
  %206 = load i16** %205, align 8
  %207 = getelementptr inbounds i16* %206, i64 %196
  %208 = load i16* %207, align 2
  %209 = sext i16 %208 to i32
  br label %211

; <label>:210                                     ; preds = %187
  br label %211

; <label>:211                                     ; preds = %210, %193
  %212 = phi i32 [ %209, %193 ], [ -1, %210 ]
  %213 = trunc i32 %212 to i16
  store i16 %213, i16* %bw_rFrameL, align 2
  %214 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 0
  %215 = load i32* %214, align 4
  %216 = icmp ne i32 %215, 0
  br i1 %216, label %217, label %234

; <label>:217                                     ; preds = %211
  %218 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %219 = load i32* %218, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %222 = load i32* %221, align 4
  %223 = sext i32 %222 to i64
  %224 = load %struct.storable_picture** @enc_picture, align 8
  %225 = getelementptr inbounds %struct.storable_picture* %224, i32 0, i32 32
  %226 = load i16**** %225, align 8
  %227 = getelementptr inbounds i16*** %226, i64 1
  %228 = load i16*** %227, align 8
  %229 = getelementptr inbounds i16** %228, i64 %223
  %230 = load i16** %229, align 8
  %231 = getelementptr inbounds i16* %230, i64 %220
  %232 = load i16* %231, align 2
  %233 = sext i16 %232 to i32
  br label %235

; <label>:234                                     ; preds = %211
  br label %235

; <label>:235                                     ; preds = %234, %217
  %236 = phi i32 [ %233, %217 ], [ -1, %234 ]
  %237 = trunc i32 %236 to i16
  store i16 %237, i16* %bw_rFrameU, align 2
  %238 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %239 = load i32* %238, align 4
  %240 = icmp ne i32 %239, 0
  br i1 %240, label %241, label %258

; <label>:241                                     ; preds = %235
  %242 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %243 = load i32* %242, align 4
  %244 = sext i32 %243 to i64
  %245 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %246 = load i32* %245, align 4
  %247 = sext i32 %246 to i64
  %248 = load %struct.storable_picture** @enc_picture, align 8
  %249 = getelementptr inbounds %struct.storable_picture* %248, i32 0, i32 32
  %250 = load i16**** %249, align 8
  %251 = getelementptr inbounds i16*** %250, i64 1
  %252 = load i16*** %251, align 8
  %253 = getelementptr inbounds i16** %252, i64 %247
  %254 = load i16** %253, align 8
  %255 = getelementptr inbounds i16* %254, i64 %244
  %256 = load i16* %255, align 2
  %257 = sext i16 %256 to i32
  br label %259

; <label>:258                                     ; preds = %235
  br label %259

; <label>:259                                     ; preds = %258, %241
  %260 = phi i32 [ %257, %241 ], [ -1, %258 ]
  %261 = trunc i32 %260 to i16
  store i16 %261, i16* %bw_rFrameUL, align 2
  %262 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 0
  %263 = load i32* %262, align 4
  %264 = icmp ne i32 %263, 0
  br i1 %264, label %265, label %282

; <label>:265                                     ; preds = %259
  %266 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %267 = load i32* %266, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %270 = load i32* %269, align 4
  %271 = sext i32 %270 to i64
  %272 = load %struct.storable_picture** @enc_picture, align 8
  %273 = getelementptr inbounds %struct.storable_picture* %272, i32 0, i32 32
  %274 = load i16**** %273, align 8
  %275 = getelementptr inbounds i16*** %274, i64 1
  %276 = load i16*** %275, align 8
  %277 = getelementptr inbounds i16** %276, i64 %271
  %278 = load i16** %277, align 8
  %279 = getelementptr inbounds i16* %278, i64 %268
  %280 = load i16* %279, align 2
  %281 = sext i16 %280 to i32
  br label %285

; <label>:282                                     ; preds = %259
  %283 = load i16* %bw_rFrameUL, align 2
  %284 = sext i16 %283 to i32
  br label %285

; <label>:285                                     ; preds = %282, %265
  %286 = phi i32 [ %281, %265 ], [ %284, %282 ]
  %287 = trunc i32 %286 to i16
  store i16 %287, i16* %bw_rFrameUR, align 2
  br label %1472

; <label>:288                                     ; preds = %72
  %289 = load %struct.macroblock** %currMB, align 8
  %290 = getelementptr inbounds %struct.macroblock* %289, i32 0, i32 22
  %291 = load i32* %290, align 4
  %292 = icmp ne i32 %291, 0
  br i1 %292, label %293, label %882

; <label>:293                                     ; preds = %288
  %294 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 0
  %295 = load i32* %294, align 4
  %296 = icmp ne i32 %295, 0
  br i1 %296, label %297, label %363

; <label>:297                                     ; preds = %293
  %298 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 1
  %299 = load i32* %298, align 4
  %300 = sext i32 %299 to i64
  %301 = load %struct.ImageParameters** @img, align 8
  %302 = getelementptr inbounds %struct.ImageParameters* %301, i32 0, i32 51
  %303 = load %struct.macroblock** %302, align 8
  %304 = getelementptr inbounds %struct.macroblock* %303, i64 %300
  %305 = getelementptr inbounds %struct.macroblock* %304, i32 0, i32 22
  %306 = load i32* %305, align 4
  %307 = icmp ne i32 %306, 0
  br i1 %307, label %326, label %308

; <label>:308                                     ; preds = %297
  %309 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %310 = load i32* %309, align 4
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %313 = load i32* %312, align 4
  %314 = sext i32 %313 to i64
  %315 = load %struct.storable_picture** @enc_picture, align 8
  %316 = getelementptr inbounds %struct.storable_picture* %315, i32 0, i32 32
  %317 = load i16**** %316, align 8
  %318 = getelementptr inbounds i16*** %317, i64 0
  %319 = load i16*** %318, align 8
  %320 = getelementptr inbounds i16** %319, i64 %314
  %321 = load i16** %320, align 8
  %322 = getelementptr inbounds i16* %321, i64 %311
  %323 = load i16* %322, align 2
  %324 = sext i16 %323 to i32
  %325 = icmp slt i32 %324, 0
  br i1 %325, label %326, label %343

; <label>:326                                     ; preds = %308, %297
  %327 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %328 = load i32* %327, align 4
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %331 = load i32* %330, align 4
  %332 = sext i32 %331 to i64
  %333 = load %struct.storable_picture** @enc_picture, align 8
  %334 = getelementptr inbounds %struct.storable_picture* %333, i32 0, i32 32
  %335 = load i16**** %334, align 8
  %336 = getelementptr inbounds i16*** %335, i64 0
  %337 = load i16*** %336, align 8
  %338 = getelementptr inbounds i16** %337, i64 %332
  %339 = load i16** %338, align 8
  %340 = getelementptr inbounds i16* %339, i64 %329
  %341 = load i16* %340, align 2
  %342 = sext i16 %341 to i32
  br label %361

; <label>:343                                     ; preds = %308
  %344 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %345 = load i32* %344, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %348 = load i32* %347, align 4
  %349 = sext i32 %348 to i64
  %350 = load %struct.storable_picture** @enc_picture, align 8
  %351 = getelementptr inbounds %struct.storable_picture* %350, i32 0, i32 32
  %352 = load i16**** %351, align 8
  %353 = getelementptr inbounds i16*** %352, i64 0
  %354 = load i16*** %353, align 8
  %355 = getelementptr inbounds i16** %354, i64 %349
  %356 = load i16** %355, align 8
  %357 = getelementptr inbounds i16* %356, i64 %346
  %358 = load i16* %357, align 2
  %359 = sext i16 %358 to i32
  %360 = mul nsw i32 %359, 2
  br label %361

; <label>:361                                     ; preds = %343, %326
  %362 = phi i32 [ %342, %326 ], [ %360, %343 ]
  br label %364

; <label>:363                                     ; preds = %293
  br label %364

; <label>:364                                     ; preds = %363, %361
  %365 = phi i32 [ %362, %361 ], [ -1, %363 ]
  %366 = trunc i32 %365 to i16
  store i16 %366, i16* %fw_rFrameL, align 2
  %367 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 0
  %368 = load i32* %367, align 4
  %369 = icmp ne i32 %368, 0
  br i1 %369, label %370, label %436

; <label>:370                                     ; preds = %364
  %371 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 1
  %372 = load i32* %371, align 4
  %373 = sext i32 %372 to i64
  %374 = load %struct.ImageParameters** @img, align 8
  %375 = getelementptr inbounds %struct.ImageParameters* %374, i32 0, i32 51
  %376 = load %struct.macroblock** %375, align 8
  %377 = getelementptr inbounds %struct.macroblock* %376, i64 %373
  %378 = getelementptr inbounds %struct.macroblock* %377, i32 0, i32 22
  %379 = load i32* %378, align 4
  %380 = icmp ne i32 %379, 0
  br i1 %380, label %399, label %381

; <label>:381                                     ; preds = %370
  %382 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %383 = load i32* %382, align 4
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %386 = load i32* %385, align 4
  %387 = sext i32 %386 to i64
  %388 = load %struct.storable_picture** @enc_picture, align 8
  %389 = getelementptr inbounds %struct.storable_picture* %388, i32 0, i32 32
  %390 = load i16**** %389, align 8
  %391 = getelementptr inbounds i16*** %390, i64 0
  %392 = load i16*** %391, align 8
  %393 = getelementptr inbounds i16** %392, i64 %387
  %394 = load i16** %393, align 8
  %395 = getelementptr inbounds i16* %394, i64 %384
  %396 = load i16* %395, align 2
  %397 = sext i16 %396 to i32
  %398 = icmp slt i32 %397, 0
  br i1 %398, label %399, label %416

; <label>:399                                     ; preds = %381, %370
  %400 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %401 = load i32* %400, align 4
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %404 = load i32* %403, align 4
  %405 = sext i32 %404 to i64
  %406 = load %struct.storable_picture** @enc_picture, align 8
  %407 = getelementptr inbounds %struct.storable_picture* %406, i32 0, i32 32
  %408 = load i16**** %407, align 8
  %409 = getelementptr inbounds i16*** %408, i64 0
  %410 = load i16*** %409, align 8
  %411 = getelementptr inbounds i16** %410, i64 %405
  %412 = load i16** %411, align 8
  %413 = getelementptr inbounds i16* %412, i64 %402
  %414 = load i16* %413, align 2
  %415 = sext i16 %414 to i32
  br label %434

; <label>:416                                     ; preds = %381
  %417 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %418 = load i32* %417, align 4
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %421 = load i32* %420, align 4
  %422 = sext i32 %421 to i64
  %423 = load %struct.storable_picture** @enc_picture, align 8
  %424 = getelementptr inbounds %struct.storable_picture* %423, i32 0, i32 32
  %425 = load i16**** %424, align 8
  %426 = getelementptr inbounds i16*** %425, i64 0
  %427 = load i16*** %426, align 8
  %428 = getelementptr inbounds i16** %427, i64 %422
  %429 = load i16** %428, align 8
  %430 = getelementptr inbounds i16* %429, i64 %419
  %431 = load i16* %430, align 2
  %432 = sext i16 %431 to i32
  %433 = mul nsw i32 %432, 2
  br label %434

; <label>:434                                     ; preds = %416, %399
  %435 = phi i32 [ %415, %399 ], [ %433, %416 ]
  br label %437

; <label>:436                                     ; preds = %364
  br label %437

; <label>:437                                     ; preds = %436, %434
  %438 = phi i32 [ %435, %434 ], [ -1, %436 ]
  %439 = trunc i32 %438 to i16
  store i16 %439, i16* %fw_rFrameU, align 2
  %440 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %441 = load i32* %440, align 4
  %442 = icmp ne i32 %441, 0
  br i1 %442, label %443, label %509

; <label>:443                                     ; preds = %437
  %444 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %445 = load i32* %444, align 4
  %446 = sext i32 %445 to i64
  %447 = load %struct.ImageParameters** @img, align 8
  %448 = getelementptr inbounds %struct.ImageParameters* %447, i32 0, i32 51
  %449 = load %struct.macroblock** %448, align 8
  %450 = getelementptr inbounds %struct.macroblock* %449, i64 %446
  %451 = getelementptr inbounds %struct.macroblock* %450, i32 0, i32 22
  %452 = load i32* %451, align 4
  %453 = icmp ne i32 %452, 0
  br i1 %453, label %472, label %454

; <label>:454                                     ; preds = %443
  %455 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %456 = load i32* %455, align 4
  %457 = sext i32 %456 to i64
  %458 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %459 = load i32* %458, align 4
  %460 = sext i32 %459 to i64
  %461 = load %struct.storable_picture** @enc_picture, align 8
  %462 = getelementptr inbounds %struct.storable_picture* %461, i32 0, i32 32
  %463 = load i16**** %462, align 8
  %464 = getelementptr inbounds i16*** %463, i64 0
  %465 = load i16*** %464, align 8
  %466 = getelementptr inbounds i16** %465, i64 %460
  %467 = load i16** %466, align 8
  %468 = getelementptr inbounds i16* %467, i64 %457
  %469 = load i16* %468, align 2
  %470 = sext i16 %469 to i32
  %471 = icmp slt i32 %470, 0
  br i1 %471, label %472, label %489

; <label>:472                                     ; preds = %454, %443
  %473 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %474 = load i32* %473, align 4
  %475 = sext i32 %474 to i64
  %476 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %477 = load i32* %476, align 4
  %478 = sext i32 %477 to i64
  %479 = load %struct.storable_picture** @enc_picture, align 8
  %480 = getelementptr inbounds %struct.storable_picture* %479, i32 0, i32 32
  %481 = load i16**** %480, align 8
  %482 = getelementptr inbounds i16*** %481, i64 0
  %483 = load i16*** %482, align 8
  %484 = getelementptr inbounds i16** %483, i64 %478
  %485 = load i16** %484, align 8
  %486 = getelementptr inbounds i16* %485, i64 %475
  %487 = load i16* %486, align 2
  %488 = sext i16 %487 to i32
  br label %507

; <label>:489                                     ; preds = %454
  %490 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %491 = load i32* %490, align 4
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %494 = load i32* %493, align 4
  %495 = sext i32 %494 to i64
  %496 = load %struct.storable_picture** @enc_picture, align 8
  %497 = getelementptr inbounds %struct.storable_picture* %496, i32 0, i32 32
  %498 = load i16**** %497, align 8
  %499 = getelementptr inbounds i16*** %498, i64 0
  %500 = load i16*** %499, align 8
  %501 = getelementptr inbounds i16** %500, i64 %495
  %502 = load i16** %501, align 8
  %503 = getelementptr inbounds i16* %502, i64 %492
  %504 = load i16* %503, align 2
  %505 = sext i16 %504 to i32
  %506 = mul nsw i32 %505, 2
  br label %507

; <label>:507                                     ; preds = %489, %472
  %508 = phi i32 [ %488, %472 ], [ %506, %489 ]
  br label %510

; <label>:509                                     ; preds = %437
  br label %510

; <label>:510                                     ; preds = %509, %507
  %511 = phi i32 [ %508, %507 ], [ -1, %509 ]
  %512 = trunc i32 %511 to i16
  store i16 %512, i16* %fw_rFrameUL, align 2
  %513 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 0
  %514 = load i32* %513, align 4
  %515 = icmp ne i32 %514, 0
  br i1 %515, label %516, label %582

; <label>:516                                     ; preds = %510
  %517 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 1
  %518 = load i32* %517, align 4
  %519 = sext i32 %518 to i64
  %520 = load %struct.ImageParameters** @img, align 8
  %521 = getelementptr inbounds %struct.ImageParameters* %520, i32 0, i32 51
  %522 = load %struct.macroblock** %521, align 8
  %523 = getelementptr inbounds %struct.macroblock* %522, i64 %519
  %524 = getelementptr inbounds %struct.macroblock* %523, i32 0, i32 22
  %525 = load i32* %524, align 4
  %526 = icmp ne i32 %525, 0
  br i1 %526, label %545, label %527

; <label>:527                                     ; preds = %516
  %528 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %529 = load i32* %528, align 4
  %530 = sext i32 %529 to i64
  %531 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %532 = load i32* %531, align 4
  %533 = sext i32 %532 to i64
  %534 = load %struct.storable_picture** @enc_picture, align 8
  %535 = getelementptr inbounds %struct.storable_picture* %534, i32 0, i32 32
  %536 = load i16**** %535, align 8
  %537 = getelementptr inbounds i16*** %536, i64 0
  %538 = load i16*** %537, align 8
  %539 = getelementptr inbounds i16** %538, i64 %533
  %540 = load i16** %539, align 8
  %541 = getelementptr inbounds i16* %540, i64 %530
  %542 = load i16* %541, align 2
  %543 = sext i16 %542 to i32
  %544 = icmp slt i32 %543, 0
  br i1 %544, label %545, label %562

; <label>:545                                     ; preds = %527, %516
  %546 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %547 = load i32* %546, align 4
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %550 = load i32* %549, align 4
  %551 = sext i32 %550 to i64
  %552 = load %struct.storable_picture** @enc_picture, align 8
  %553 = getelementptr inbounds %struct.storable_picture* %552, i32 0, i32 32
  %554 = load i16**** %553, align 8
  %555 = getelementptr inbounds i16*** %554, i64 0
  %556 = load i16*** %555, align 8
  %557 = getelementptr inbounds i16** %556, i64 %551
  %558 = load i16** %557, align 8
  %559 = getelementptr inbounds i16* %558, i64 %548
  %560 = load i16* %559, align 2
  %561 = sext i16 %560 to i32
  br label %580

; <label>:562                                     ; preds = %527
  %563 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %564 = load i32* %563, align 4
  %565 = sext i32 %564 to i64
  %566 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %567 = load i32* %566, align 4
  %568 = sext i32 %567 to i64
  %569 = load %struct.storable_picture** @enc_picture, align 8
  %570 = getelementptr inbounds %struct.storable_picture* %569, i32 0, i32 32
  %571 = load i16**** %570, align 8
  %572 = getelementptr inbounds i16*** %571, i64 0
  %573 = load i16*** %572, align 8
  %574 = getelementptr inbounds i16** %573, i64 %568
  %575 = load i16** %574, align 8
  %576 = getelementptr inbounds i16* %575, i64 %565
  %577 = load i16* %576, align 2
  %578 = sext i16 %577 to i32
  %579 = mul nsw i32 %578, 2
  br label %580

; <label>:580                                     ; preds = %562, %545
  %581 = phi i32 [ %561, %545 ], [ %579, %562 ]
  br label %585

; <label>:582                                     ; preds = %510
  %583 = load i16* %fw_rFrameUL, align 2
  %584 = sext i16 %583 to i32
  br label %585

; <label>:585                                     ; preds = %582, %580
  %586 = phi i32 [ %581, %580 ], [ %584, %582 ]
  %587 = trunc i32 %586 to i16
  store i16 %587, i16* %fw_rFrameUR, align 2
  %588 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 0
  %589 = load i32* %588, align 4
  %590 = icmp ne i32 %589, 0
  br i1 %590, label %591, label %657

; <label>:591                                     ; preds = %585
  %592 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 1
  %593 = load i32* %592, align 4
  %594 = sext i32 %593 to i64
  %595 = load %struct.ImageParameters** @img, align 8
  %596 = getelementptr inbounds %struct.ImageParameters* %595, i32 0, i32 51
  %597 = load %struct.macroblock** %596, align 8
  %598 = getelementptr inbounds %struct.macroblock* %597, i64 %594
  %599 = getelementptr inbounds %struct.macroblock* %598, i32 0, i32 22
  %600 = load i32* %599, align 4
  %601 = icmp ne i32 %600, 0
  br i1 %601, label %620, label %602

; <label>:602                                     ; preds = %591
  %603 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %604 = load i32* %603, align 4
  %605 = sext i32 %604 to i64
  %606 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %607 = load i32* %606, align 4
  %608 = sext i32 %607 to i64
  %609 = load %struct.storable_picture** @enc_picture, align 8
  %610 = getelementptr inbounds %struct.storable_picture* %609, i32 0, i32 32
  %611 = load i16**** %610, align 8
  %612 = getelementptr inbounds i16*** %611, i64 1
  %613 = load i16*** %612, align 8
  %614 = getelementptr inbounds i16** %613, i64 %608
  %615 = load i16** %614, align 8
  %616 = getelementptr inbounds i16* %615, i64 %605
  %617 = load i16* %616, align 2
  %618 = sext i16 %617 to i32
  %619 = icmp slt i32 %618, 0
  br i1 %619, label %620, label %637

; <label>:620                                     ; preds = %602, %591
  %621 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %622 = load i32* %621, align 4
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %625 = load i32* %624, align 4
  %626 = sext i32 %625 to i64
  %627 = load %struct.storable_picture** @enc_picture, align 8
  %628 = getelementptr inbounds %struct.storable_picture* %627, i32 0, i32 32
  %629 = load i16**** %628, align 8
  %630 = getelementptr inbounds i16*** %629, i64 1
  %631 = load i16*** %630, align 8
  %632 = getelementptr inbounds i16** %631, i64 %626
  %633 = load i16** %632, align 8
  %634 = getelementptr inbounds i16* %633, i64 %623
  %635 = load i16* %634, align 2
  %636 = sext i16 %635 to i32
  br label %655

; <label>:637                                     ; preds = %602
  %638 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %639 = load i32* %638, align 4
  %640 = sext i32 %639 to i64
  %641 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %642 = load i32* %641, align 4
  %643 = sext i32 %642 to i64
  %644 = load %struct.storable_picture** @enc_picture, align 8
  %645 = getelementptr inbounds %struct.storable_picture* %644, i32 0, i32 32
  %646 = load i16**** %645, align 8
  %647 = getelementptr inbounds i16*** %646, i64 1
  %648 = load i16*** %647, align 8
  %649 = getelementptr inbounds i16** %648, i64 %643
  %650 = load i16** %649, align 8
  %651 = getelementptr inbounds i16* %650, i64 %640
  %652 = load i16* %651, align 2
  %653 = sext i16 %652 to i32
  %654 = mul nsw i32 %653, 2
  br label %655

; <label>:655                                     ; preds = %637, %620
  %656 = phi i32 [ %636, %620 ], [ %654, %637 ]
  br label %658

; <label>:657                                     ; preds = %585
  br label %658

; <label>:658                                     ; preds = %657, %655
  %659 = phi i32 [ %656, %655 ], [ -1, %657 ]
  %660 = trunc i32 %659 to i16
  store i16 %660, i16* %bw_rFrameL, align 2
  %661 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 0
  %662 = load i32* %661, align 4
  %663 = icmp ne i32 %662, 0
  br i1 %663, label %664, label %730

; <label>:664                                     ; preds = %658
  %665 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 1
  %666 = load i32* %665, align 4
  %667 = sext i32 %666 to i64
  %668 = load %struct.ImageParameters** @img, align 8
  %669 = getelementptr inbounds %struct.ImageParameters* %668, i32 0, i32 51
  %670 = load %struct.macroblock** %669, align 8
  %671 = getelementptr inbounds %struct.macroblock* %670, i64 %667
  %672 = getelementptr inbounds %struct.macroblock* %671, i32 0, i32 22
  %673 = load i32* %672, align 4
  %674 = icmp ne i32 %673, 0
  br i1 %674, label %693, label %675

; <label>:675                                     ; preds = %664
  %676 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %677 = load i32* %676, align 4
  %678 = sext i32 %677 to i64
  %679 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %680 = load i32* %679, align 4
  %681 = sext i32 %680 to i64
  %682 = load %struct.storable_picture** @enc_picture, align 8
  %683 = getelementptr inbounds %struct.storable_picture* %682, i32 0, i32 32
  %684 = load i16**** %683, align 8
  %685 = getelementptr inbounds i16*** %684, i64 1
  %686 = load i16*** %685, align 8
  %687 = getelementptr inbounds i16** %686, i64 %681
  %688 = load i16** %687, align 8
  %689 = getelementptr inbounds i16* %688, i64 %678
  %690 = load i16* %689, align 2
  %691 = sext i16 %690 to i32
  %692 = icmp slt i32 %691, 0
  br i1 %692, label %693, label %710

; <label>:693                                     ; preds = %675, %664
  %694 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %695 = load i32* %694, align 4
  %696 = sext i32 %695 to i64
  %697 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %698 = load i32* %697, align 4
  %699 = sext i32 %698 to i64
  %700 = load %struct.storable_picture** @enc_picture, align 8
  %701 = getelementptr inbounds %struct.storable_picture* %700, i32 0, i32 32
  %702 = load i16**** %701, align 8
  %703 = getelementptr inbounds i16*** %702, i64 1
  %704 = load i16*** %703, align 8
  %705 = getelementptr inbounds i16** %704, i64 %699
  %706 = load i16** %705, align 8
  %707 = getelementptr inbounds i16* %706, i64 %696
  %708 = load i16* %707, align 2
  %709 = sext i16 %708 to i32
  br label %728

; <label>:710                                     ; preds = %675
  %711 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %712 = load i32* %711, align 4
  %713 = sext i32 %712 to i64
  %714 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %715 = load i32* %714, align 4
  %716 = sext i32 %715 to i64
  %717 = load %struct.storable_picture** @enc_picture, align 8
  %718 = getelementptr inbounds %struct.storable_picture* %717, i32 0, i32 32
  %719 = load i16**** %718, align 8
  %720 = getelementptr inbounds i16*** %719, i64 1
  %721 = load i16*** %720, align 8
  %722 = getelementptr inbounds i16** %721, i64 %716
  %723 = load i16** %722, align 8
  %724 = getelementptr inbounds i16* %723, i64 %713
  %725 = load i16* %724, align 2
  %726 = sext i16 %725 to i32
  %727 = mul nsw i32 %726, 2
  br label %728

; <label>:728                                     ; preds = %710, %693
  %729 = phi i32 [ %709, %693 ], [ %727, %710 ]
  br label %731

; <label>:730                                     ; preds = %658
  br label %731

; <label>:731                                     ; preds = %730, %728
  %732 = phi i32 [ %729, %728 ], [ -1, %730 ]
  %733 = trunc i32 %732 to i16
  store i16 %733, i16* %bw_rFrameU, align 2
  %734 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %735 = load i32* %734, align 4
  %736 = icmp ne i32 %735, 0
  br i1 %736, label %737, label %803

; <label>:737                                     ; preds = %731
  %738 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %739 = load i32* %738, align 4
  %740 = sext i32 %739 to i64
  %741 = load %struct.ImageParameters** @img, align 8
  %742 = getelementptr inbounds %struct.ImageParameters* %741, i32 0, i32 51
  %743 = load %struct.macroblock** %742, align 8
  %744 = getelementptr inbounds %struct.macroblock* %743, i64 %740
  %745 = getelementptr inbounds %struct.macroblock* %744, i32 0, i32 22
  %746 = load i32* %745, align 4
  %747 = icmp ne i32 %746, 0
  br i1 %747, label %766, label %748

; <label>:748                                     ; preds = %737
  %749 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %750 = load i32* %749, align 4
  %751 = sext i32 %750 to i64
  %752 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %753 = load i32* %752, align 4
  %754 = sext i32 %753 to i64
  %755 = load %struct.storable_picture** @enc_picture, align 8
  %756 = getelementptr inbounds %struct.storable_picture* %755, i32 0, i32 32
  %757 = load i16**** %756, align 8
  %758 = getelementptr inbounds i16*** %757, i64 1
  %759 = load i16*** %758, align 8
  %760 = getelementptr inbounds i16** %759, i64 %754
  %761 = load i16** %760, align 8
  %762 = getelementptr inbounds i16* %761, i64 %751
  %763 = load i16* %762, align 2
  %764 = sext i16 %763 to i32
  %765 = icmp slt i32 %764, 0
  br i1 %765, label %766, label %783

; <label>:766                                     ; preds = %748, %737
  %767 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %768 = load i32* %767, align 4
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %771 = load i32* %770, align 4
  %772 = sext i32 %771 to i64
  %773 = load %struct.storable_picture** @enc_picture, align 8
  %774 = getelementptr inbounds %struct.storable_picture* %773, i32 0, i32 32
  %775 = load i16**** %774, align 8
  %776 = getelementptr inbounds i16*** %775, i64 1
  %777 = load i16*** %776, align 8
  %778 = getelementptr inbounds i16** %777, i64 %772
  %779 = load i16** %778, align 8
  %780 = getelementptr inbounds i16* %779, i64 %769
  %781 = load i16* %780, align 2
  %782 = sext i16 %781 to i32
  br label %801

; <label>:783                                     ; preds = %748
  %784 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %785 = load i32* %784, align 4
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %788 = load i32* %787, align 4
  %789 = sext i32 %788 to i64
  %790 = load %struct.storable_picture** @enc_picture, align 8
  %791 = getelementptr inbounds %struct.storable_picture* %790, i32 0, i32 32
  %792 = load i16**** %791, align 8
  %793 = getelementptr inbounds i16*** %792, i64 1
  %794 = load i16*** %793, align 8
  %795 = getelementptr inbounds i16** %794, i64 %789
  %796 = load i16** %795, align 8
  %797 = getelementptr inbounds i16* %796, i64 %786
  %798 = load i16* %797, align 2
  %799 = sext i16 %798 to i32
  %800 = mul nsw i32 %799, 2
  br label %801

; <label>:801                                     ; preds = %783, %766
  %802 = phi i32 [ %782, %766 ], [ %800, %783 ]
  br label %804

; <label>:803                                     ; preds = %731
  br label %804

; <label>:804                                     ; preds = %803, %801
  %805 = phi i32 [ %802, %801 ], [ -1, %803 ]
  %806 = trunc i32 %805 to i16
  store i16 %806, i16* %bw_rFrameUL, align 2
  %807 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 0
  %808 = load i32* %807, align 4
  %809 = icmp ne i32 %808, 0
  br i1 %809, label %810, label %876

; <label>:810                                     ; preds = %804
  %811 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 1
  %812 = load i32* %811, align 4
  %813 = sext i32 %812 to i64
  %814 = load %struct.ImageParameters** @img, align 8
  %815 = getelementptr inbounds %struct.ImageParameters* %814, i32 0, i32 51
  %816 = load %struct.macroblock** %815, align 8
  %817 = getelementptr inbounds %struct.macroblock* %816, i64 %813
  %818 = getelementptr inbounds %struct.macroblock* %817, i32 0, i32 22
  %819 = load i32* %818, align 4
  %820 = icmp ne i32 %819, 0
  br i1 %820, label %839, label %821

; <label>:821                                     ; preds = %810
  %822 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %823 = load i32* %822, align 4
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %826 = load i32* %825, align 4
  %827 = sext i32 %826 to i64
  %828 = load %struct.storable_picture** @enc_picture, align 8
  %829 = getelementptr inbounds %struct.storable_picture* %828, i32 0, i32 32
  %830 = load i16**** %829, align 8
  %831 = getelementptr inbounds i16*** %830, i64 1
  %832 = load i16*** %831, align 8
  %833 = getelementptr inbounds i16** %832, i64 %827
  %834 = load i16** %833, align 8
  %835 = getelementptr inbounds i16* %834, i64 %824
  %836 = load i16* %835, align 2
  %837 = sext i16 %836 to i32
  %838 = icmp slt i32 %837, 0
  br i1 %838, label %839, label %856

; <label>:839                                     ; preds = %821, %810
  %840 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %841 = load i32* %840, align 4
  %842 = sext i32 %841 to i64
  %843 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %844 = load i32* %843, align 4
  %845 = sext i32 %844 to i64
  %846 = load %struct.storable_picture** @enc_picture, align 8
  %847 = getelementptr inbounds %struct.storable_picture* %846, i32 0, i32 32
  %848 = load i16**** %847, align 8
  %849 = getelementptr inbounds i16*** %848, i64 1
  %850 = load i16*** %849, align 8
  %851 = getelementptr inbounds i16** %850, i64 %845
  %852 = load i16** %851, align 8
  %853 = getelementptr inbounds i16* %852, i64 %842
  %854 = load i16* %853, align 2
  %855 = sext i16 %854 to i32
  br label %874

; <label>:856                                     ; preds = %821
  %857 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %858 = load i32* %857, align 4
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %861 = load i32* %860, align 4
  %862 = sext i32 %861 to i64
  %863 = load %struct.storable_picture** @enc_picture, align 8
  %864 = getelementptr inbounds %struct.storable_picture* %863, i32 0, i32 32
  %865 = load i16**** %864, align 8
  %866 = getelementptr inbounds i16*** %865, i64 1
  %867 = load i16*** %866, align 8
  %868 = getelementptr inbounds i16** %867, i64 %862
  %869 = load i16** %868, align 8
  %870 = getelementptr inbounds i16* %869, i64 %859
  %871 = load i16* %870, align 2
  %872 = sext i16 %871 to i32
  %873 = mul nsw i32 %872, 2
  br label %874

; <label>:874                                     ; preds = %856, %839
  %875 = phi i32 [ %855, %839 ], [ %873, %856 ]
  br label %879

; <label>:876                                     ; preds = %804
  %877 = load i16* %bw_rFrameUL, align 2
  %878 = sext i16 %877 to i32
  br label %879

; <label>:879                                     ; preds = %876, %874
  %880 = phi i32 [ %875, %874 ], [ %878, %876 ]
  %881 = trunc i32 %880 to i16
  store i16 %881, i16* %bw_rFrameUR, align 2
  br label %1471

; <label>:882                                     ; preds = %288
  %883 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 0
  %884 = load i32* %883, align 4
  %885 = icmp ne i32 %884, 0
  br i1 %885, label %886, label %952

; <label>:886                                     ; preds = %882
  %887 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 1
  %888 = load i32* %887, align 4
  %889 = sext i32 %888 to i64
  %890 = load %struct.ImageParameters** @img, align 8
  %891 = getelementptr inbounds %struct.ImageParameters* %890, i32 0, i32 51
  %892 = load %struct.macroblock** %891, align 8
  %893 = getelementptr inbounds %struct.macroblock* %892, i64 %889
  %894 = getelementptr inbounds %struct.macroblock* %893, i32 0, i32 22
  %895 = load i32* %894, align 4
  %896 = icmp ne i32 %895, 0
  br i1 %896, label %915, label %897

; <label>:897                                     ; preds = %886
  %898 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %899 = load i32* %898, align 4
  %900 = sext i32 %899 to i64
  %901 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %902 = load i32* %901, align 4
  %903 = sext i32 %902 to i64
  %904 = load %struct.storable_picture** @enc_picture, align 8
  %905 = getelementptr inbounds %struct.storable_picture* %904, i32 0, i32 32
  %906 = load i16**** %905, align 8
  %907 = getelementptr inbounds i16*** %906, i64 0
  %908 = load i16*** %907, align 8
  %909 = getelementptr inbounds i16** %908, i64 %903
  %910 = load i16** %909, align 8
  %911 = getelementptr inbounds i16* %910, i64 %900
  %912 = load i16* %911, align 2
  %913 = sext i16 %912 to i32
  %914 = icmp slt i32 %913, 0
  br i1 %914, label %915, label %933

; <label>:915                                     ; preds = %897, %886
  %916 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %917 = load i32* %916, align 4
  %918 = sext i32 %917 to i64
  %919 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %920 = load i32* %919, align 4
  %921 = sext i32 %920 to i64
  %922 = load %struct.storable_picture** @enc_picture, align 8
  %923 = getelementptr inbounds %struct.storable_picture* %922, i32 0, i32 32
  %924 = load i16**** %923, align 8
  %925 = getelementptr inbounds i16*** %924, i64 0
  %926 = load i16*** %925, align 8
  %927 = getelementptr inbounds i16** %926, i64 %921
  %928 = load i16** %927, align 8
  %929 = getelementptr inbounds i16* %928, i64 %918
  %930 = load i16* %929, align 2
  %931 = sext i16 %930 to i32
  %932 = ashr i32 %931, 1
  br label %950

; <label>:933                                     ; preds = %897
  %934 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %935 = load i32* %934, align 4
  %936 = sext i32 %935 to i64
  %937 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %938 = load i32* %937, align 4
  %939 = sext i32 %938 to i64
  %940 = load %struct.storable_picture** @enc_picture, align 8
  %941 = getelementptr inbounds %struct.storable_picture* %940, i32 0, i32 32
  %942 = load i16**** %941, align 8
  %943 = getelementptr inbounds i16*** %942, i64 0
  %944 = load i16*** %943, align 8
  %945 = getelementptr inbounds i16** %944, i64 %939
  %946 = load i16** %945, align 8
  %947 = getelementptr inbounds i16* %946, i64 %936
  %948 = load i16* %947, align 2
  %949 = sext i16 %948 to i32
  br label %950

; <label>:950                                     ; preds = %933, %915
  %951 = phi i32 [ %932, %915 ], [ %949, %933 ]
  br label %953

; <label>:952                                     ; preds = %882
  br label %953

; <label>:953                                     ; preds = %952, %950
  %954 = phi i32 [ %951, %950 ], [ -1, %952 ]
  %955 = trunc i32 %954 to i16
  store i16 %955, i16* %fw_rFrameL, align 2
  %956 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 0
  %957 = load i32* %956, align 4
  %958 = icmp ne i32 %957, 0
  br i1 %958, label %959, label %1025

; <label>:959                                     ; preds = %953
  %960 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 1
  %961 = load i32* %960, align 4
  %962 = sext i32 %961 to i64
  %963 = load %struct.ImageParameters** @img, align 8
  %964 = getelementptr inbounds %struct.ImageParameters* %963, i32 0, i32 51
  %965 = load %struct.macroblock** %964, align 8
  %966 = getelementptr inbounds %struct.macroblock* %965, i64 %962
  %967 = getelementptr inbounds %struct.macroblock* %966, i32 0, i32 22
  %968 = load i32* %967, align 4
  %969 = icmp ne i32 %968, 0
  br i1 %969, label %988, label %970

; <label>:970                                     ; preds = %959
  %971 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %972 = load i32* %971, align 4
  %973 = sext i32 %972 to i64
  %974 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %975 = load i32* %974, align 4
  %976 = sext i32 %975 to i64
  %977 = load %struct.storable_picture** @enc_picture, align 8
  %978 = getelementptr inbounds %struct.storable_picture* %977, i32 0, i32 32
  %979 = load i16**** %978, align 8
  %980 = getelementptr inbounds i16*** %979, i64 0
  %981 = load i16*** %980, align 8
  %982 = getelementptr inbounds i16** %981, i64 %976
  %983 = load i16** %982, align 8
  %984 = getelementptr inbounds i16* %983, i64 %973
  %985 = load i16* %984, align 2
  %986 = sext i16 %985 to i32
  %987 = icmp slt i32 %986, 0
  br i1 %987, label %988, label %1006

; <label>:988                                     ; preds = %970, %959
  %989 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %990 = load i32* %989, align 4
  %991 = sext i32 %990 to i64
  %992 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %993 = load i32* %992, align 4
  %994 = sext i32 %993 to i64
  %995 = load %struct.storable_picture** @enc_picture, align 8
  %996 = getelementptr inbounds %struct.storable_picture* %995, i32 0, i32 32
  %997 = load i16**** %996, align 8
  %998 = getelementptr inbounds i16*** %997, i64 0
  %999 = load i16*** %998, align 8
  %1000 = getelementptr inbounds i16** %999, i64 %994
  %1001 = load i16** %1000, align 8
  %1002 = getelementptr inbounds i16* %1001, i64 %991
  %1003 = load i16* %1002, align 2
  %1004 = sext i16 %1003 to i32
  %1005 = ashr i32 %1004, 1
  br label %1023

; <label>:1006                                    ; preds = %970
  %1007 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %1008 = load i32* %1007, align 4
  %1009 = sext i32 %1008 to i64
  %1010 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %1011 = load i32* %1010, align 4
  %1012 = sext i32 %1011 to i64
  %1013 = load %struct.storable_picture** @enc_picture, align 8
  %1014 = getelementptr inbounds %struct.storable_picture* %1013, i32 0, i32 32
  %1015 = load i16**** %1014, align 8
  %1016 = getelementptr inbounds i16*** %1015, i64 0
  %1017 = load i16*** %1016, align 8
  %1018 = getelementptr inbounds i16** %1017, i64 %1012
  %1019 = load i16** %1018, align 8
  %1020 = getelementptr inbounds i16* %1019, i64 %1009
  %1021 = load i16* %1020, align 2
  %1022 = sext i16 %1021 to i32
  br label %1023

; <label>:1023                                    ; preds = %1006, %988
  %1024 = phi i32 [ %1005, %988 ], [ %1022, %1006 ]
  br label %1026

; <label>:1025                                    ; preds = %953
  br label %1026

; <label>:1026                                    ; preds = %1025, %1023
  %1027 = phi i32 [ %1024, %1023 ], [ -1, %1025 ]
  %1028 = trunc i32 %1027 to i16
  store i16 %1028, i16* %fw_rFrameU, align 2
  %1029 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %1030 = load i32* %1029, align 4
  %1031 = icmp ne i32 %1030, 0
  br i1 %1031, label %1032, label %1098

; <label>:1032                                    ; preds = %1026
  %1033 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %1034 = load i32* %1033, align 4
  %1035 = sext i32 %1034 to i64
  %1036 = load %struct.ImageParameters** @img, align 8
  %1037 = getelementptr inbounds %struct.ImageParameters* %1036, i32 0, i32 51
  %1038 = load %struct.macroblock** %1037, align 8
  %1039 = getelementptr inbounds %struct.macroblock* %1038, i64 %1035
  %1040 = getelementptr inbounds %struct.macroblock* %1039, i32 0, i32 22
  %1041 = load i32* %1040, align 4
  %1042 = icmp ne i32 %1041, 0
  br i1 %1042, label %1061, label %1043

; <label>:1043                                    ; preds = %1032
  %1044 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %1045 = load i32* %1044, align 4
  %1046 = sext i32 %1045 to i64
  %1047 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %1048 = load i32* %1047, align 4
  %1049 = sext i32 %1048 to i64
  %1050 = load %struct.storable_picture** @enc_picture, align 8
  %1051 = getelementptr inbounds %struct.storable_picture* %1050, i32 0, i32 32
  %1052 = load i16**** %1051, align 8
  %1053 = getelementptr inbounds i16*** %1052, i64 0
  %1054 = load i16*** %1053, align 8
  %1055 = getelementptr inbounds i16** %1054, i64 %1049
  %1056 = load i16** %1055, align 8
  %1057 = getelementptr inbounds i16* %1056, i64 %1046
  %1058 = load i16* %1057, align 2
  %1059 = sext i16 %1058 to i32
  %1060 = icmp slt i32 %1059, 0
  br i1 %1060, label %1061, label %1079

; <label>:1061                                    ; preds = %1043, %1032
  %1062 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %1063 = load i32* %1062, align 4
  %1064 = sext i32 %1063 to i64
  %1065 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %1066 = load i32* %1065, align 4
  %1067 = sext i32 %1066 to i64
  %1068 = load %struct.storable_picture** @enc_picture, align 8
  %1069 = getelementptr inbounds %struct.storable_picture* %1068, i32 0, i32 32
  %1070 = load i16**** %1069, align 8
  %1071 = getelementptr inbounds i16*** %1070, i64 0
  %1072 = load i16*** %1071, align 8
  %1073 = getelementptr inbounds i16** %1072, i64 %1067
  %1074 = load i16** %1073, align 8
  %1075 = getelementptr inbounds i16* %1074, i64 %1064
  %1076 = load i16* %1075, align 2
  %1077 = sext i16 %1076 to i32
  %1078 = ashr i32 %1077, 1
  br label %1096

; <label>:1079                                    ; preds = %1043
  %1080 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %1081 = load i32* %1080, align 4
  %1082 = sext i32 %1081 to i64
  %1083 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %1084 = load i32* %1083, align 4
  %1085 = sext i32 %1084 to i64
  %1086 = load %struct.storable_picture** @enc_picture, align 8
  %1087 = getelementptr inbounds %struct.storable_picture* %1086, i32 0, i32 32
  %1088 = load i16**** %1087, align 8
  %1089 = getelementptr inbounds i16*** %1088, i64 0
  %1090 = load i16*** %1089, align 8
  %1091 = getelementptr inbounds i16** %1090, i64 %1085
  %1092 = load i16** %1091, align 8
  %1093 = getelementptr inbounds i16* %1092, i64 %1082
  %1094 = load i16* %1093, align 2
  %1095 = sext i16 %1094 to i32
  br label %1096

; <label>:1096                                    ; preds = %1079, %1061
  %1097 = phi i32 [ %1078, %1061 ], [ %1095, %1079 ]
  br label %1099

; <label>:1098                                    ; preds = %1026
  br label %1099

; <label>:1099                                    ; preds = %1098, %1096
  %1100 = phi i32 [ %1097, %1096 ], [ -1, %1098 ]
  %1101 = trunc i32 %1100 to i16
  store i16 %1101, i16* %fw_rFrameUL, align 2
  %1102 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 0
  %1103 = load i32* %1102, align 4
  %1104 = icmp ne i32 %1103, 0
  br i1 %1104, label %1105, label %1171

; <label>:1105                                    ; preds = %1099
  %1106 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 1
  %1107 = load i32* %1106, align 4
  %1108 = sext i32 %1107 to i64
  %1109 = load %struct.ImageParameters** @img, align 8
  %1110 = getelementptr inbounds %struct.ImageParameters* %1109, i32 0, i32 51
  %1111 = load %struct.macroblock** %1110, align 8
  %1112 = getelementptr inbounds %struct.macroblock* %1111, i64 %1108
  %1113 = getelementptr inbounds %struct.macroblock* %1112, i32 0, i32 22
  %1114 = load i32* %1113, align 4
  %1115 = icmp ne i32 %1114, 0
  br i1 %1115, label %1134, label %1116

; <label>:1116                                    ; preds = %1105
  %1117 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %1118 = load i32* %1117, align 4
  %1119 = sext i32 %1118 to i64
  %1120 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %1121 = load i32* %1120, align 4
  %1122 = sext i32 %1121 to i64
  %1123 = load %struct.storable_picture** @enc_picture, align 8
  %1124 = getelementptr inbounds %struct.storable_picture* %1123, i32 0, i32 32
  %1125 = load i16**** %1124, align 8
  %1126 = getelementptr inbounds i16*** %1125, i64 0
  %1127 = load i16*** %1126, align 8
  %1128 = getelementptr inbounds i16** %1127, i64 %1122
  %1129 = load i16** %1128, align 8
  %1130 = getelementptr inbounds i16* %1129, i64 %1119
  %1131 = load i16* %1130, align 2
  %1132 = sext i16 %1131 to i32
  %1133 = icmp slt i32 %1132, 0
  br i1 %1133, label %1134, label %1152

; <label>:1134                                    ; preds = %1116, %1105
  %1135 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %1136 = load i32* %1135, align 4
  %1137 = sext i32 %1136 to i64
  %1138 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %1139 = load i32* %1138, align 4
  %1140 = sext i32 %1139 to i64
  %1141 = load %struct.storable_picture** @enc_picture, align 8
  %1142 = getelementptr inbounds %struct.storable_picture* %1141, i32 0, i32 32
  %1143 = load i16**** %1142, align 8
  %1144 = getelementptr inbounds i16*** %1143, i64 0
  %1145 = load i16*** %1144, align 8
  %1146 = getelementptr inbounds i16** %1145, i64 %1140
  %1147 = load i16** %1146, align 8
  %1148 = getelementptr inbounds i16* %1147, i64 %1137
  %1149 = load i16* %1148, align 2
  %1150 = sext i16 %1149 to i32
  %1151 = ashr i32 %1150, 1
  br label %1169

; <label>:1152                                    ; preds = %1116
  %1153 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %1154 = load i32* %1153, align 4
  %1155 = sext i32 %1154 to i64
  %1156 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %1157 = load i32* %1156, align 4
  %1158 = sext i32 %1157 to i64
  %1159 = load %struct.storable_picture** @enc_picture, align 8
  %1160 = getelementptr inbounds %struct.storable_picture* %1159, i32 0, i32 32
  %1161 = load i16**** %1160, align 8
  %1162 = getelementptr inbounds i16*** %1161, i64 0
  %1163 = load i16*** %1162, align 8
  %1164 = getelementptr inbounds i16** %1163, i64 %1158
  %1165 = load i16** %1164, align 8
  %1166 = getelementptr inbounds i16* %1165, i64 %1155
  %1167 = load i16* %1166, align 2
  %1168 = sext i16 %1167 to i32
  br label %1169

; <label>:1169                                    ; preds = %1152, %1134
  %1170 = phi i32 [ %1151, %1134 ], [ %1168, %1152 ]
  br label %1174

; <label>:1171                                    ; preds = %1099
  %1172 = load i16* %fw_rFrameUL, align 2
  %1173 = sext i16 %1172 to i32
  br label %1174

; <label>:1174                                    ; preds = %1171, %1169
  %1175 = phi i32 [ %1170, %1169 ], [ %1173, %1171 ]
  %1176 = trunc i32 %1175 to i16
  store i16 %1176, i16* %fw_rFrameUR, align 2
  %1177 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 0
  %1178 = load i32* %1177, align 4
  %1179 = icmp ne i32 %1178, 0
  br i1 %1179, label %1180, label %1246

; <label>:1180                                    ; preds = %1174
  %1181 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 1
  %1182 = load i32* %1181, align 4
  %1183 = sext i32 %1182 to i64
  %1184 = load %struct.ImageParameters** @img, align 8
  %1185 = getelementptr inbounds %struct.ImageParameters* %1184, i32 0, i32 51
  %1186 = load %struct.macroblock** %1185, align 8
  %1187 = getelementptr inbounds %struct.macroblock* %1186, i64 %1183
  %1188 = getelementptr inbounds %struct.macroblock* %1187, i32 0, i32 22
  %1189 = load i32* %1188, align 4
  %1190 = icmp ne i32 %1189, 0
  br i1 %1190, label %1209, label %1191

; <label>:1191                                    ; preds = %1180
  %1192 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %1193 = load i32* %1192, align 4
  %1194 = sext i32 %1193 to i64
  %1195 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %1196 = load i32* %1195, align 4
  %1197 = sext i32 %1196 to i64
  %1198 = load %struct.storable_picture** @enc_picture, align 8
  %1199 = getelementptr inbounds %struct.storable_picture* %1198, i32 0, i32 32
  %1200 = load i16**** %1199, align 8
  %1201 = getelementptr inbounds i16*** %1200, i64 1
  %1202 = load i16*** %1201, align 8
  %1203 = getelementptr inbounds i16** %1202, i64 %1197
  %1204 = load i16** %1203, align 8
  %1205 = getelementptr inbounds i16* %1204, i64 %1194
  %1206 = load i16* %1205, align 2
  %1207 = sext i16 %1206 to i32
  %1208 = icmp slt i32 %1207, 0
  br i1 %1208, label %1209, label %1227

; <label>:1209                                    ; preds = %1191, %1180
  %1210 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %1211 = load i32* %1210, align 4
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %1214 = load i32* %1213, align 4
  %1215 = sext i32 %1214 to i64
  %1216 = load %struct.storable_picture** @enc_picture, align 8
  %1217 = getelementptr inbounds %struct.storable_picture* %1216, i32 0, i32 32
  %1218 = load i16**** %1217, align 8
  %1219 = getelementptr inbounds i16*** %1218, i64 1
  %1220 = load i16*** %1219, align 8
  %1221 = getelementptr inbounds i16** %1220, i64 %1215
  %1222 = load i16** %1221, align 8
  %1223 = getelementptr inbounds i16* %1222, i64 %1212
  %1224 = load i16* %1223, align 2
  %1225 = sext i16 %1224 to i32
  %1226 = ashr i32 %1225, 1
  br label %1244

; <label>:1227                                    ; preds = %1191
  %1228 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 5
  %1229 = load i32* %1228, align 4
  %1230 = sext i32 %1229 to i64
  %1231 = getelementptr inbounds %struct.pix_pos* %mb_left, i32 0, i32 4
  %1232 = load i32* %1231, align 4
  %1233 = sext i32 %1232 to i64
  %1234 = load %struct.storable_picture** @enc_picture, align 8
  %1235 = getelementptr inbounds %struct.storable_picture* %1234, i32 0, i32 32
  %1236 = load i16**** %1235, align 8
  %1237 = getelementptr inbounds i16*** %1236, i64 1
  %1238 = load i16*** %1237, align 8
  %1239 = getelementptr inbounds i16** %1238, i64 %1233
  %1240 = load i16** %1239, align 8
  %1241 = getelementptr inbounds i16* %1240, i64 %1230
  %1242 = load i16* %1241, align 2
  %1243 = sext i16 %1242 to i32
  br label %1244

; <label>:1244                                    ; preds = %1227, %1209
  %1245 = phi i32 [ %1226, %1209 ], [ %1243, %1227 ]
  br label %1247

; <label>:1246                                    ; preds = %1174
  br label %1247

; <label>:1247                                    ; preds = %1246, %1244
  %1248 = phi i32 [ %1245, %1244 ], [ -1, %1246 ]
  %1249 = trunc i32 %1248 to i16
  store i16 %1249, i16* %bw_rFrameL, align 2
  %1250 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 0
  %1251 = load i32* %1250, align 4
  %1252 = icmp ne i32 %1251, 0
  br i1 %1252, label %1253, label %1319

; <label>:1253                                    ; preds = %1247
  %1254 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 1
  %1255 = load i32* %1254, align 4
  %1256 = sext i32 %1255 to i64
  %1257 = load %struct.ImageParameters** @img, align 8
  %1258 = getelementptr inbounds %struct.ImageParameters* %1257, i32 0, i32 51
  %1259 = load %struct.macroblock** %1258, align 8
  %1260 = getelementptr inbounds %struct.macroblock* %1259, i64 %1256
  %1261 = getelementptr inbounds %struct.macroblock* %1260, i32 0, i32 22
  %1262 = load i32* %1261, align 4
  %1263 = icmp ne i32 %1262, 0
  br i1 %1263, label %1282, label %1264

; <label>:1264                                    ; preds = %1253
  %1265 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %1266 = load i32* %1265, align 4
  %1267 = sext i32 %1266 to i64
  %1268 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %1269 = load i32* %1268, align 4
  %1270 = sext i32 %1269 to i64
  %1271 = load %struct.storable_picture** @enc_picture, align 8
  %1272 = getelementptr inbounds %struct.storable_picture* %1271, i32 0, i32 32
  %1273 = load i16**** %1272, align 8
  %1274 = getelementptr inbounds i16*** %1273, i64 1
  %1275 = load i16*** %1274, align 8
  %1276 = getelementptr inbounds i16** %1275, i64 %1270
  %1277 = load i16** %1276, align 8
  %1278 = getelementptr inbounds i16* %1277, i64 %1267
  %1279 = load i16* %1278, align 2
  %1280 = sext i16 %1279 to i32
  %1281 = icmp slt i32 %1280, 0
  br i1 %1281, label %1282, label %1300

; <label>:1282                                    ; preds = %1264, %1253
  %1283 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %1284 = load i32* %1283, align 4
  %1285 = sext i32 %1284 to i64
  %1286 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %1287 = load i32* %1286, align 4
  %1288 = sext i32 %1287 to i64
  %1289 = load %struct.storable_picture** @enc_picture, align 8
  %1290 = getelementptr inbounds %struct.storable_picture* %1289, i32 0, i32 32
  %1291 = load i16**** %1290, align 8
  %1292 = getelementptr inbounds i16*** %1291, i64 1
  %1293 = load i16*** %1292, align 8
  %1294 = getelementptr inbounds i16** %1293, i64 %1288
  %1295 = load i16** %1294, align 8
  %1296 = getelementptr inbounds i16* %1295, i64 %1285
  %1297 = load i16* %1296, align 2
  %1298 = sext i16 %1297 to i32
  %1299 = ashr i32 %1298, 1
  br label %1317

; <label>:1300                                    ; preds = %1264
  %1301 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 5
  %1302 = load i32* %1301, align 4
  %1303 = sext i32 %1302 to i64
  %1304 = getelementptr inbounds %struct.pix_pos* %mb_up, i32 0, i32 4
  %1305 = load i32* %1304, align 4
  %1306 = sext i32 %1305 to i64
  %1307 = load %struct.storable_picture** @enc_picture, align 8
  %1308 = getelementptr inbounds %struct.storable_picture* %1307, i32 0, i32 32
  %1309 = load i16**** %1308, align 8
  %1310 = getelementptr inbounds i16*** %1309, i64 1
  %1311 = load i16*** %1310, align 8
  %1312 = getelementptr inbounds i16** %1311, i64 %1306
  %1313 = load i16** %1312, align 8
  %1314 = getelementptr inbounds i16* %1313, i64 %1303
  %1315 = load i16* %1314, align 2
  %1316 = sext i16 %1315 to i32
  br label %1317

; <label>:1317                                    ; preds = %1300, %1282
  %1318 = phi i32 [ %1299, %1282 ], [ %1316, %1300 ]
  br label %1320

; <label>:1319                                    ; preds = %1247
  br label %1320

; <label>:1320                                    ; preds = %1319, %1317
  %1321 = phi i32 [ %1318, %1317 ], [ -1, %1319 ]
  %1322 = trunc i32 %1321 to i16
  store i16 %1322, i16* %bw_rFrameU, align 2
  %1323 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %1324 = load i32* %1323, align 4
  %1325 = icmp ne i32 %1324, 0
  br i1 %1325, label %1326, label %1392

; <label>:1326                                    ; preds = %1320
  %1327 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %1328 = load i32* %1327, align 4
  %1329 = sext i32 %1328 to i64
  %1330 = load %struct.ImageParameters** @img, align 8
  %1331 = getelementptr inbounds %struct.ImageParameters* %1330, i32 0, i32 51
  %1332 = load %struct.macroblock** %1331, align 8
  %1333 = getelementptr inbounds %struct.macroblock* %1332, i64 %1329
  %1334 = getelementptr inbounds %struct.macroblock* %1333, i32 0, i32 22
  %1335 = load i32* %1334, align 4
  %1336 = icmp ne i32 %1335, 0
  br i1 %1336, label %1355, label %1337

; <label>:1337                                    ; preds = %1326
  %1338 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %1339 = load i32* %1338, align 4
  %1340 = sext i32 %1339 to i64
  %1341 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %1342 = load i32* %1341, align 4
  %1343 = sext i32 %1342 to i64
  %1344 = load %struct.storable_picture** @enc_picture, align 8
  %1345 = getelementptr inbounds %struct.storable_picture* %1344, i32 0, i32 32
  %1346 = load i16**** %1345, align 8
  %1347 = getelementptr inbounds i16*** %1346, i64 1
  %1348 = load i16*** %1347, align 8
  %1349 = getelementptr inbounds i16** %1348, i64 %1343
  %1350 = load i16** %1349, align 8
  %1351 = getelementptr inbounds i16* %1350, i64 %1340
  %1352 = load i16* %1351, align 2
  %1353 = sext i16 %1352 to i32
  %1354 = icmp slt i32 %1353, 0
  br i1 %1354, label %1355, label %1373

; <label>:1355                                    ; preds = %1337, %1326
  %1356 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %1357 = load i32* %1356, align 4
  %1358 = sext i32 %1357 to i64
  %1359 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %1360 = load i32* %1359, align 4
  %1361 = sext i32 %1360 to i64
  %1362 = load %struct.storable_picture** @enc_picture, align 8
  %1363 = getelementptr inbounds %struct.storable_picture* %1362, i32 0, i32 32
  %1364 = load i16**** %1363, align 8
  %1365 = getelementptr inbounds i16*** %1364, i64 1
  %1366 = load i16*** %1365, align 8
  %1367 = getelementptr inbounds i16** %1366, i64 %1361
  %1368 = load i16** %1367, align 8
  %1369 = getelementptr inbounds i16* %1368, i64 %1358
  %1370 = load i16* %1369, align 2
  %1371 = sext i16 %1370 to i32
  %1372 = ashr i32 %1371, 1
  br label %1390

; <label>:1373                                    ; preds = %1337
  %1374 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %1375 = load i32* %1374, align 4
  %1376 = sext i32 %1375 to i64
  %1377 = getelementptr inbounds %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %1378 = load i32* %1377, align 4
  %1379 = sext i32 %1378 to i64
  %1380 = load %struct.storable_picture** @enc_picture, align 8
  %1381 = getelementptr inbounds %struct.storable_picture* %1380, i32 0, i32 32
  %1382 = load i16**** %1381, align 8
  %1383 = getelementptr inbounds i16*** %1382, i64 1
  %1384 = load i16*** %1383, align 8
  %1385 = getelementptr inbounds i16** %1384, i64 %1379
  %1386 = load i16** %1385, align 8
  %1387 = getelementptr inbounds i16* %1386, i64 %1376
  %1388 = load i16* %1387, align 2
  %1389 = sext i16 %1388 to i32
  br label %1390

; <label>:1390                                    ; preds = %1373, %1355
  %1391 = phi i32 [ %1372, %1355 ], [ %1389, %1373 ]
  br label %1393

; <label>:1392                                    ; preds = %1320
  br label %1393

; <label>:1393                                    ; preds = %1392, %1390
  %1394 = phi i32 [ %1391, %1390 ], [ -1, %1392 ]
  %1395 = trunc i32 %1394 to i16
  store i16 %1395, i16* %bw_rFrameUL, align 2
  %1396 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 0
  %1397 = load i32* %1396, align 4
  %1398 = icmp ne i32 %1397, 0
  br i1 %1398, label %1399, label %1465

; <label>:1399                                    ; preds = %1393
  %1400 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 1
  %1401 = load i32* %1400, align 4
  %1402 = sext i32 %1401 to i64
  %1403 = load %struct.ImageParameters** @img, align 8
  %1404 = getelementptr inbounds %struct.ImageParameters* %1403, i32 0, i32 51
  %1405 = load %struct.macroblock** %1404, align 8
  %1406 = getelementptr inbounds %struct.macroblock* %1405, i64 %1402
  %1407 = getelementptr inbounds %struct.macroblock* %1406, i32 0, i32 22
  %1408 = load i32* %1407, align 4
  %1409 = icmp ne i32 %1408, 0
  br i1 %1409, label %1428, label %1410

; <label>:1410                                    ; preds = %1399
  %1411 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %1412 = load i32* %1411, align 4
  %1413 = sext i32 %1412 to i64
  %1414 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %1415 = load i32* %1414, align 4
  %1416 = sext i32 %1415 to i64
  %1417 = load %struct.storable_picture** @enc_picture, align 8
  %1418 = getelementptr inbounds %struct.storable_picture* %1417, i32 0, i32 32
  %1419 = load i16**** %1418, align 8
  %1420 = getelementptr inbounds i16*** %1419, i64 1
  %1421 = load i16*** %1420, align 8
  %1422 = getelementptr inbounds i16** %1421, i64 %1416
  %1423 = load i16** %1422, align 8
  %1424 = getelementptr inbounds i16* %1423, i64 %1413
  %1425 = load i16* %1424, align 2
  %1426 = sext i16 %1425 to i32
  %1427 = icmp slt i32 %1426, 0
  br i1 %1427, label %1428, label %1446

; <label>:1428                                    ; preds = %1410, %1399
  %1429 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %1430 = load i32* %1429, align 4
  %1431 = sext i32 %1430 to i64
  %1432 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %1433 = load i32* %1432, align 4
  %1434 = sext i32 %1433 to i64
  %1435 = load %struct.storable_picture** @enc_picture, align 8
  %1436 = getelementptr inbounds %struct.storable_picture* %1435, i32 0, i32 32
  %1437 = load i16**** %1436, align 8
  %1438 = getelementptr inbounds i16*** %1437, i64 1
  %1439 = load i16*** %1438, align 8
  %1440 = getelementptr inbounds i16** %1439, i64 %1434
  %1441 = load i16** %1440, align 8
  %1442 = getelementptr inbounds i16* %1441, i64 %1431
  %1443 = load i16* %1442, align 2
  %1444 = sext i16 %1443 to i32
  %1445 = ashr i32 %1444, 1
  br label %1463

; <label>:1446                                    ; preds = %1410
  %1447 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 5
  %1448 = load i32* %1447, align 4
  %1449 = sext i32 %1448 to i64
  %1450 = getelementptr inbounds %struct.pix_pos* %mb_upright, i32 0, i32 4
  %1451 = load i32* %1450, align 4
  %1452 = sext i32 %1451 to i64
  %1453 = load %struct.storable_picture** @enc_picture, align 8
  %1454 = getelementptr inbounds %struct.storable_picture* %1453, i32 0, i32 32
  %1455 = load i16**** %1454, align 8
  %1456 = getelementptr inbounds i16*** %1455, i64 1
  %1457 = load i16*** %1456, align 8
  %1458 = getelementptr inbounds i16** %1457, i64 %1452
  %1459 = load i16** %1458, align 8
  %1460 = getelementptr inbounds i16* %1459, i64 %1449
  %1461 = load i16* %1460, align 2
  %1462 = sext i16 %1461 to i32
  br label %1463

; <label>:1463                                    ; preds = %1446, %1428
  %1464 = phi i32 [ %1445, %1428 ], [ %1462, %1446 ]
  br label %1468

; <label>:1465                                    ; preds = %1393
  %1466 = load i16* %bw_rFrameUL, align 2
  %1467 = sext i16 %1466 to i32
  br label %1468

; <label>:1468                                    ; preds = %1465, %1463
  %1469 = phi i32 [ %1464, %1463 ], [ %1467, %1465 ]
  %1470 = trunc i32 %1469 to i16
  store i16 %1470, i16* %bw_rFrameUR, align 2
  br label %1471

; <label>:1471                                    ; preds = %1468, %879
  br label %1472

; <label>:1472                                    ; preds = %1471, %285
  %1473 = load i16* %fw_rFrameL, align 2
  %1474 = sext i16 %1473 to i32
  %1475 = icmp sge i32 %1474, 0
  br i1 %1475, label %1476, label %1494

; <label>:1476                                    ; preds = %1472
  %1477 = load i16* %fw_rFrameU, align 2
  %1478 = sext i16 %1477 to i32
  %1479 = icmp sge i32 %1478, 0
  br i1 %1479, label %1480, label %1494

; <label>:1480                                    ; preds = %1476
  %1481 = load i16* %fw_rFrameL, align 2
  %1482 = sext i16 %1481 to i32
  %1483 = load i16* %fw_rFrameU, align 2
  %1484 = sext i16 %1483 to i32
  %1485 = icmp slt i32 %1482, %1484
  br i1 %1485, label %1486, label %1489

; <label>:1486                                    ; preds = %1480
  %1487 = load i16* %fw_rFrameL, align 2
  %1488 = sext i16 %1487 to i32
  br label %1492

; <label>:1489                                    ; preds = %1480
  %1490 = load i16* %fw_rFrameU, align 2
  %1491 = sext i16 %1490 to i32
  br label %1492

; <label>:1492                                    ; preds = %1489, %1486
  %1493 = phi i32 [ %1488, %1486 ], [ %1491, %1489 ]
  br label %1508

; <label>:1494                                    ; preds = %1476, %1472
  %1495 = load i16* %fw_rFrameL, align 2
  %1496 = sext i16 %1495 to i32
  %1497 = load i16* %fw_rFrameU, align 2
  %1498 = sext i16 %1497 to i32
  %1499 = icmp sgt i32 %1496, %1498
  br i1 %1499, label %1500, label %1503

; <label>:1500                                    ; preds = %1494
  %1501 = load i16* %fw_rFrameL, align 2
  %1502 = sext i16 %1501 to i32
  br label %1506

; <label>:1503                                    ; preds = %1494
  %1504 = load i16* %fw_rFrameU, align 2
  %1505 = sext i16 %1504 to i32
  br label %1506

; <label>:1506                                    ; preds = %1503, %1500
  %1507 = phi i32 [ %1502, %1500 ], [ %1505, %1503 ]
  br label %1508

; <label>:1508                                    ; preds = %1506, %1492
  %1509 = phi i32 [ %1493, %1492 ], [ %1507, %1506 ]
  %1510 = trunc i32 %1509 to i16
  store i16 %1510, i16* %fw_rFrame, align 2
  %1511 = load i16* %fw_rFrame, align 2
  %1512 = sext i16 %1511 to i32
  %1513 = icmp sge i32 %1512, 0
  br i1 %1513, label %1514, label %1532

; <label>:1514                                    ; preds = %1508
  %1515 = load i16* %fw_rFrameUR, align 2
  %1516 = sext i16 %1515 to i32
  %1517 = icmp sge i32 %1516, 0
  br i1 %1517, label %1518, label %1532

; <label>:1518                                    ; preds = %1514
  %1519 = load i16* %fw_rFrame, align 2
  %1520 = sext i16 %1519 to i32
  %1521 = load i16* %fw_rFrameUR, align 2
  %1522 = sext i16 %1521 to i32
  %1523 = icmp slt i32 %1520, %1522
  br i1 %1523, label %1524, label %1527

; <label>:1524                                    ; preds = %1518
  %1525 = load i16* %fw_rFrame, align 2
  %1526 = sext i16 %1525 to i32
  br label %1530

; <label>:1527                                    ; preds = %1518
  %1528 = load i16* %fw_rFrameUR, align 2
  %1529 = sext i16 %1528 to i32
  br label %1530

; <label>:1530                                    ; preds = %1527, %1524
  %1531 = phi i32 [ %1526, %1524 ], [ %1529, %1527 ]
  br label %1546

; <label>:1532                                    ; preds = %1514, %1508
  %1533 = load i16* %fw_rFrame, align 2
  %1534 = sext i16 %1533 to i32
  %1535 = load i16* %fw_rFrameUR, align 2
  %1536 = sext i16 %1535 to i32
  %1537 = icmp sgt i32 %1534, %1536
  br i1 %1537, label %1538, label %1541

; <label>:1538                                    ; preds = %1532
  %1539 = load i16* %fw_rFrame, align 2
  %1540 = sext i16 %1539 to i32
  br label %1544

; <label>:1541                                    ; preds = %1532
  %1542 = load i16* %fw_rFrameUR, align 2
  %1543 = sext i16 %1542 to i32
  br label %1544

; <label>:1544                                    ; preds = %1541, %1538
  %1545 = phi i32 [ %1540, %1538 ], [ %1543, %1541 ]
  br label %1546

; <label>:1546                                    ; preds = %1544, %1530
  %1547 = phi i32 [ %1531, %1530 ], [ %1545, %1544 ]
  %1548 = trunc i32 %1547 to i16
  store i16 %1548, i16* %fw_rFrame, align 2
  %1549 = load i16* %bw_rFrameL, align 2
  %1550 = sext i16 %1549 to i32
  %1551 = icmp sge i32 %1550, 0
  br i1 %1551, label %1552, label %1570

; <label>:1552                                    ; preds = %1546
  %1553 = load i16* %bw_rFrameU, align 2
  %1554 = sext i16 %1553 to i32
  %1555 = icmp sge i32 %1554, 0
  br i1 %1555, label %1556, label %1570

; <label>:1556                                    ; preds = %1552
  %1557 = load i16* %bw_rFrameL, align 2
  %1558 = sext i16 %1557 to i32
  %1559 = load i16* %bw_rFrameU, align 2
  %1560 = sext i16 %1559 to i32
  %1561 = icmp slt i32 %1558, %1560
  br i1 %1561, label %1562, label %1565

; <label>:1562                                    ; preds = %1556
  %1563 = load i16* %bw_rFrameL, align 2
  %1564 = sext i16 %1563 to i32
  br label %1568

; <label>:1565                                    ; preds = %1556
  %1566 = load i16* %bw_rFrameU, align 2
  %1567 = sext i16 %1566 to i32
  br label %1568

; <label>:1568                                    ; preds = %1565, %1562
  %1569 = phi i32 [ %1564, %1562 ], [ %1567, %1565 ]
  br label %1584

; <label>:1570                                    ; preds = %1552, %1546
  %1571 = load i16* %bw_rFrameL, align 2
  %1572 = sext i16 %1571 to i32
  %1573 = load i16* %bw_rFrameU, align 2
  %1574 = sext i16 %1573 to i32
  %1575 = icmp sgt i32 %1572, %1574
  br i1 %1575, label %1576, label %1579

; <label>:1576                                    ; preds = %1570
  %1577 = load i16* %bw_rFrameL, align 2
  %1578 = sext i16 %1577 to i32
  br label %1582

; <label>:1579                                    ; preds = %1570
  %1580 = load i16* %bw_rFrameU, align 2
  %1581 = sext i16 %1580 to i32
  br label %1582

; <label>:1582                                    ; preds = %1579, %1576
  %1583 = phi i32 [ %1578, %1576 ], [ %1581, %1579 ]
  br label %1584

; <label>:1584                                    ; preds = %1582, %1568
  %1585 = phi i32 [ %1569, %1568 ], [ %1583, %1582 ]
  %1586 = trunc i32 %1585 to i16
  store i16 %1586, i16* %bw_rFrame, align 2
  %1587 = load i16* %bw_rFrame, align 2
  %1588 = sext i16 %1587 to i32
  %1589 = icmp sge i32 %1588, 0
  br i1 %1589, label %1590, label %1608

; <label>:1590                                    ; preds = %1584
  %1591 = load i16* %bw_rFrameUR, align 2
  %1592 = sext i16 %1591 to i32
  %1593 = icmp sge i32 %1592, 0
  br i1 %1593, label %1594, label %1608

; <label>:1594                                    ; preds = %1590
  %1595 = load i16* %bw_rFrame, align 2
  %1596 = sext i16 %1595 to i32
  %1597 = load i16* %bw_rFrameUR, align 2
  %1598 = sext i16 %1597 to i32
  %1599 = icmp slt i32 %1596, %1598
  br i1 %1599, label %1600, label %1603

; <label>:1600                                    ; preds = %1594
  %1601 = load i16* %bw_rFrame, align 2
  %1602 = sext i16 %1601 to i32
  br label %1606

; <label>:1603                                    ; preds = %1594
  %1604 = load i16* %bw_rFrameUR, align 2
  %1605 = sext i16 %1604 to i32
  br label %1606

; <label>:1606                                    ; preds = %1603, %1600
  %1607 = phi i32 [ %1602, %1600 ], [ %1605, %1603 ]
  br label %1622

; <label>:1608                                    ; preds = %1590, %1584
  %1609 = load i16* %bw_rFrame, align 2
  %1610 = sext i16 %1609 to i32
  %1611 = load i16* %bw_rFrameUR, align 2
  %1612 = sext i16 %1611 to i32
  %1613 = icmp sgt i32 %1610, %1612
  br i1 %1613, label %1614, label %1617

; <label>:1614                                    ; preds = %1608
  %1615 = load i16* %bw_rFrame, align 2
  %1616 = sext i16 %1615 to i32
  br label %1620

; <label>:1617                                    ; preds = %1608
  %1618 = load i16* %bw_rFrameUR, align 2
  %1619 = sext i16 %1618 to i32
  br label %1620

; <label>:1620                                    ; preds = %1617, %1614
  %1621 = phi i32 [ %1616, %1614 ], [ %1619, %1617 ]
  br label %1622

; <label>:1622                                    ; preds = %1620, %1606
  %1623 = phi i32 [ %1607, %1606 ], [ %1621, %1620 ]
  %1624 = trunc i32 %1623 to i16
  store i16 %1624, i16* %bw_rFrame, align 2
  %1625 = load i16* %fw_rFrame, align 2
  %1626 = sext i16 %1625 to i32
  %1627 = icmp sge i32 %1626, 0
  br i1 %1627, label %1628, label %1637

; <label>:1628                                    ; preds = %1622
  %1629 = getelementptr inbounds [2 x i16]* %pmvfw, i32 0, i32 0
  %1630 = load %struct.storable_picture** @enc_picture, align 8
  %1631 = getelementptr inbounds %struct.storable_picture* %1630, i32 0, i32 32
  %1632 = load i16**** %1631, align 8
  %1633 = load %struct.storable_picture** @enc_picture, align 8
  %1634 = getelementptr inbounds %struct.storable_picture* %1633, i32 0, i32 35
  %1635 = load i16***** %1634, align 8
  %1636 = load i16* %fw_rFrame, align 2
  call void @SetMotionVectorPredictor(i16* %1629, i16*** %1632, i16**** %1635, i16 signext %1636, i32 0, i32 0, i32 0, i32 16, i32 16)
  br label %1637

; <label>:1637                                    ; preds = %1628, %1622
  %1638 = load i16* %bw_rFrame, align 2
  %1639 = sext i16 %1638 to i32
  %1640 = icmp sge i32 %1639, 0
  br i1 %1640, label %1641, label %1650

; <label>:1641                                    ; preds = %1637
  %1642 = getelementptr inbounds [2 x i16]* %pmvbw, i32 0, i32 0
  %1643 = load %struct.storable_picture** @enc_picture, align 8
  %1644 = getelementptr inbounds %struct.storable_picture* %1643, i32 0, i32 32
  %1645 = load i16**** %1644, align 8
  %1646 = load %struct.storable_picture** @enc_picture, align 8
  %1647 = getelementptr inbounds %struct.storable_picture* %1646, i32 0, i32 35
  %1648 = load i16***** %1647, align 8
  %1649 = load i16* %bw_rFrame, align 2
  call void @SetMotionVectorPredictor(i16* %1642, i16*** %1645, i16**** %1648, i16 signext %1649, i32 1, i32 0, i32 0, i32 16, i32 16)
  br label %1650

; <label>:1650                                    ; preds = %1641, %1637
  store i32 0, i32* %block_y, align 4
  br label %1651

; <label>:1651                                    ; preds = %2088, %1650
  %1652 = load i32* %block_y, align 4
  %1653 = icmp slt i32 %1652, 4
  br i1 %1653, label %1654, label %2091

; <label>:1654                                    ; preds = %1651
  %1655 = load %struct.ImageParameters** @img, align 8
  %1656 = getelementptr inbounds %struct.ImageParameters* %1655, i32 0, i32 34
  %1657 = load i32* %1656, align 4
  %1658 = ashr i32 %1657, 2
  %1659 = load i32* %block_y, align 4
  %1660 = add nsw i32 %1658, %1659
  store i32 %1660, i32* %pic_block_y, align 4
  %1661 = load %struct.ImageParameters** @img, align 8
  %1662 = getelementptr inbounds %struct.ImageParameters* %1661, i32 0, i32 38
  %1663 = load i32* %1662, align 4
  %1664 = ashr i32 %1663, 2
  %1665 = load i32* %block_y, align 4
  %1666 = add nsw i32 %1664, %1665
  store i32 %1666, i32* %opic_block_y, align 4
  store i32 0, i32* %block_x, align 4
  br label %1667

; <label>:1667                                    ; preds = %2084, %1654
  %1668 = load i32* %block_x, align 4
  %1669 = icmp slt i32 %1668, 4
  br i1 %1669, label %1670, label %2087

; <label>:1670                                    ; preds = %1667
  %1671 = load %struct.ImageParameters** @img, align 8
  %1672 = getelementptr inbounds %struct.ImageParameters* %1671, i32 0, i32 33
  %1673 = load i32* %1672, align 4
  %1674 = ashr i32 %1673, 2
  %1675 = load i32* %block_x, align 4
  %1676 = add nsw i32 %1674, %1675
  store i32 %1676, i32* %pic_block_x, align 4
  %1677 = load %struct.ImageParameters** @img, align 8
  %1678 = getelementptr inbounds %struct.ImageParameters* %1677, i32 0, i32 37
  %1679 = load i32* %1678, align 4
  %1680 = ashr i32 %1679, 2
  %1681 = load i32* %block_x, align 4
  %1682 = add nsw i32 %1680, %1681
  store i32 %1682, i32* %opic_block_x, align 4
  %1683 = load i16* %fw_rFrame, align 2
  %1684 = sext i16 %1683 to i32
  %1685 = icmp sge i32 %1684, 0
  br i1 %1685, label %1686, label %1796

; <label>:1686                                    ; preds = %1670
  %1687 = load i16* %fw_rFrame, align 2
  %1688 = icmp ne i16 %1687, 0
  br i1 %1688, label %1743, label %1689

; <label>:1689                                    ; preds = %1686
  %1690 = load i32* %opic_block_y, align 4
  %1691 = sext i32 %1690 to i64
  %1692 = load i32* %opic_block_x, align 4
  %1693 = sext i32 %1692 to i64
  %1694 = load i8*** %moving_block, align 8
  %1695 = getelementptr inbounds i8** %1694, i64 %1693
  %1696 = load i8** %1695, align 8
  %1697 = getelementptr inbounds i8* %1696, i64 %1691
  %1698 = load i8* %1697, align 1
  %1699 = icmp ne i8 %1698, 0
  br i1 %1699, label %1743, label %1700

; <label>:1700                                    ; preds = %1689
  %1701 = load i32* %block_y, align 4
  %1702 = sext i32 %1701 to i64
  %1703 = load i32* %block_x, align 4
  %1704 = sext i32 %1703 to i64
  %1705 = load i16******* %all_mvs, align 8
  %1706 = getelementptr inbounds i16****** %1705, i64 %1704
  %1707 = load i16****** %1706, align 8
  %1708 = getelementptr inbounds i16***** %1707, i64 %1702
  %1709 = load i16***** %1708, align 8
  %1710 = getelementptr inbounds i16**** %1709, i64 0
  %1711 = load i16**** %1710, align 8
  %1712 = getelementptr inbounds i16*** %1711, i64 0
  %1713 = load i16*** %1712, align 8
  %1714 = getelementptr inbounds i16** %1713, i64 0
  %1715 = load i16** %1714, align 8
  %1716 = getelementptr inbounds i16* %1715, i64 0
  store i16 0, i16* %1716, align 2
  %1717 = load i32* %block_y, align 4
  %1718 = sext i32 %1717 to i64
  %1719 = load i32* %block_x, align 4
  %1720 = sext i32 %1719 to i64
  %1721 = load i16******* %all_mvs, align 8
  %1722 = getelementptr inbounds i16****** %1721, i64 %1720
  %1723 = load i16****** %1722, align 8
  %1724 = getelementptr inbounds i16***** %1723, i64 %1718
  %1725 = load i16***** %1724, align 8
  %1726 = getelementptr inbounds i16**** %1725, i64 0
  %1727 = load i16**** %1726, align 8
  %1728 = getelementptr inbounds i16*** %1727, i64 0
  %1729 = load i16*** %1728, align 8
  %1730 = getelementptr inbounds i16** %1729, i64 0
  %1731 = load i16** %1730, align 8
  %1732 = getelementptr inbounds i16* %1731, i64 1
  store i16 0, i16* %1732, align 2
  %1733 = load i32* %pic_block_y, align 4
  %1734 = sext i32 %1733 to i64
  %1735 = load i32* %pic_block_x, align 4
  %1736 = sext i32 %1735 to i64
  %1737 = load i16**** @direct_ref_idx, align 8
  %1738 = getelementptr inbounds i16*** %1737, i64 0
  %1739 = load i16*** %1738, align 8
  %1740 = getelementptr inbounds i16** %1739, i64 %1736
  %1741 = load i16** %1740, align 8
  %1742 = getelementptr inbounds i16* %1741, i64 %1734
  store i16 0, i16* %1742, align 2
  br label %1795

; <label>:1743                                    ; preds = %1689, %1686
  %1744 = getelementptr inbounds [2 x i16]* %pmvfw, i32 0, i64 0
  %1745 = load i16* %1744, align 2
  %1746 = load i16* %fw_rFrame, align 2
  %1747 = sext i16 %1746 to i64
  %1748 = load i32* %block_y, align 4
  %1749 = sext i32 %1748 to i64
  %1750 = load i32* %block_x, align 4
  %1751 = sext i32 %1750 to i64
  %1752 = load i16******* %all_mvs, align 8
  %1753 = getelementptr inbounds i16****** %1752, i64 %1751
  %1754 = load i16****** %1753, align 8
  %1755 = getelementptr inbounds i16***** %1754, i64 %1749
  %1756 = load i16***** %1755, align 8
  %1757 = getelementptr inbounds i16**** %1756, i64 0
  %1758 = load i16**** %1757, align 8
  %1759 = getelementptr inbounds i16*** %1758, i64 %1747
  %1760 = load i16*** %1759, align 8
  %1761 = getelementptr inbounds i16** %1760, i64 0
  %1762 = load i16** %1761, align 8
  %1763 = getelementptr inbounds i16* %1762, i64 0
  store i16 %1745, i16* %1763, align 2
  %1764 = getelementptr inbounds [2 x i16]* %pmvfw, i32 0, i64 1
  %1765 = load i16* %1764, align 2
  %1766 = load i16* %fw_rFrame, align 2
  %1767 = sext i16 %1766 to i64
  %1768 = load i32* %block_y, align 4
  %1769 = sext i32 %1768 to i64
  %1770 = load i32* %block_x, align 4
  %1771 = sext i32 %1770 to i64
  %1772 = load i16******* %all_mvs, align 8
  %1773 = getelementptr inbounds i16****** %1772, i64 %1771
  %1774 = load i16****** %1773, align 8
  %1775 = getelementptr inbounds i16***** %1774, i64 %1769
  %1776 = load i16***** %1775, align 8
  %1777 = getelementptr inbounds i16**** %1776, i64 0
  %1778 = load i16**** %1777, align 8
  %1779 = getelementptr inbounds i16*** %1778, i64 %1767
  %1780 = load i16*** %1779, align 8
  %1781 = getelementptr inbounds i16** %1780, i64 0
  %1782 = load i16** %1781, align 8
  %1783 = getelementptr inbounds i16* %1782, i64 1
  store i16 %1765, i16* %1783, align 2
  %1784 = load i16* %fw_rFrame, align 2
  %1785 = load i32* %pic_block_y, align 4
  %1786 = sext i32 %1785 to i64
  %1787 = load i32* %pic_block_x, align 4
  %1788 = sext i32 %1787 to i64
  %1789 = load i16**** @direct_ref_idx, align 8
  %1790 = getelementptr inbounds i16*** %1789, i64 0
  %1791 = load i16*** %1790, align 8
  %1792 = getelementptr inbounds i16** %1791, i64 %1788
  %1793 = load i16** %1792, align 8
  %1794 = getelementptr inbounds i16* %1793, i64 %1786
  store i16 %1784, i16* %1794, align 2
  br label %1795

; <label>:1795                                    ; preds = %1743, %1700
  br label %1839

; <label>:1796                                    ; preds = %1670
  %1797 = load i32* %block_y, align 4
  %1798 = sext i32 %1797 to i64
  %1799 = load i32* %block_x, align 4
  %1800 = sext i32 %1799 to i64
  %1801 = load i16******* %all_mvs, align 8
  %1802 = getelementptr inbounds i16****** %1801, i64 %1800
  %1803 = load i16****** %1802, align 8
  %1804 = getelementptr inbounds i16***** %1803, i64 %1798
  %1805 = load i16***** %1804, align 8
  %1806 = getelementptr inbounds i16**** %1805, i64 0
  %1807 = load i16**** %1806, align 8
  %1808 = getelementptr inbounds i16*** %1807, i64 0
  %1809 = load i16*** %1808, align 8
  %1810 = getelementptr inbounds i16** %1809, i64 0
  %1811 = load i16** %1810, align 8
  %1812 = getelementptr inbounds i16* %1811, i64 0
  store i16 0, i16* %1812, align 2
  %1813 = load i32* %block_y, align 4
  %1814 = sext i32 %1813 to i64
  %1815 = load i32* %block_x, align 4
  %1816 = sext i32 %1815 to i64
  %1817 = load i16******* %all_mvs, align 8
  %1818 = getelementptr inbounds i16****** %1817, i64 %1816
  %1819 = load i16****** %1818, align 8
  %1820 = getelementptr inbounds i16***** %1819, i64 %1814
  %1821 = load i16***** %1820, align 8
  %1822 = getelementptr inbounds i16**** %1821, i64 0
  %1823 = load i16**** %1822, align 8
  %1824 = getelementptr inbounds i16*** %1823, i64 0
  %1825 = load i16*** %1824, align 8
  %1826 = getelementptr inbounds i16** %1825, i64 0
  %1827 = load i16** %1826, align 8
  %1828 = getelementptr inbounds i16* %1827, i64 1
  store i16 0, i16* %1828, align 2
  %1829 = load i32* %pic_block_y, align 4
  %1830 = sext i32 %1829 to i64
  %1831 = load i32* %pic_block_x, align 4
  %1832 = sext i32 %1831 to i64
  %1833 = load i16**** @direct_ref_idx, align 8
  %1834 = getelementptr inbounds i16*** %1833, i64 0
  %1835 = load i16*** %1834, align 8
  %1836 = getelementptr inbounds i16** %1835, i64 %1832
  %1837 = load i16** %1836, align 8
  %1838 = getelementptr inbounds i16* %1837, i64 %1830
  store i16 -1, i16* %1838, align 2
  br label %1839

; <label>:1839                                    ; preds = %1796, %1795
  %1840 = load i16* %bw_rFrame, align 2
  %1841 = sext i16 %1840 to i32
  %1842 = icmp sge i32 %1841, 0
  br i1 %1842, label %1843, label %1955

; <label>:1843                                    ; preds = %1839
  %1844 = load i16* %bw_rFrame, align 2
  %1845 = sext i16 %1844 to i32
  %1846 = icmp eq i32 %1845, 0
  br i1 %1846, label %1847, label %1902

; <label>:1847                                    ; preds = %1843
  %1848 = load i32* %opic_block_y, align 4
  %1849 = sext i32 %1848 to i64
  %1850 = load i32* %opic_block_x, align 4
  %1851 = sext i32 %1850 to i64
  %1852 = load i8*** %moving_block, align 8
  %1853 = getelementptr inbounds i8** %1852, i64 %1851
  %1854 = load i8** %1853, align 8
  %1855 = getelementptr inbounds i8* %1854, i64 %1849
  %1856 = load i8* %1855, align 1
  %1857 = icmp ne i8 %1856, 0
  br i1 %1857, label %1902, label %1858

; <label>:1858                                    ; preds = %1847
  %1859 = load i32* %block_y, align 4
  %1860 = sext i32 %1859 to i64
  %1861 = load i32* %block_x, align 4
  %1862 = sext i32 %1861 to i64
  %1863 = load i16******* %all_mvs, align 8
  %1864 = getelementptr inbounds i16****** %1863, i64 %1862
  %1865 = load i16****** %1864, align 8
  %1866 = getelementptr inbounds i16***** %1865, i64 %1860
  %1867 = load i16***** %1866, align 8
  %1868 = getelementptr inbounds i16**** %1867, i64 1
  %1869 = load i16**** %1868, align 8
  %1870 = getelementptr inbounds i16*** %1869, i64 0
  %1871 = load i16*** %1870, align 8
  %1872 = getelementptr inbounds i16** %1871, i64 0
  %1873 = load i16** %1872, align 8
  %1874 = getelementptr inbounds i16* %1873, i64 0
  store i16 0, i16* %1874, align 2
  %1875 = load i32* %block_y, align 4
  %1876 = sext i32 %1875 to i64
  %1877 = load i32* %block_x, align 4
  %1878 = sext i32 %1877 to i64
  %1879 = load i16******* %all_mvs, align 8
  %1880 = getelementptr inbounds i16****** %1879, i64 %1878
  %1881 = load i16****** %1880, align 8
  %1882 = getelementptr inbounds i16***** %1881, i64 %1876
  %1883 = load i16***** %1882, align 8
  %1884 = getelementptr inbounds i16**** %1883, i64 1
  %1885 = load i16**** %1884, align 8
  %1886 = getelementptr inbounds i16*** %1885, i64 0
  %1887 = load i16*** %1886, align 8
  %1888 = getelementptr inbounds i16** %1887, i64 0
  %1889 = load i16** %1888, align 8
  %1890 = getelementptr inbounds i16* %1889, i64 1
  store i16 0, i16* %1890, align 2
  %1891 = load i16* %bw_rFrame, align 2
  %1892 = load i32* %pic_block_y, align 4
  %1893 = sext i32 %1892 to i64
  %1894 = load i32* %pic_block_x, align 4
  %1895 = sext i32 %1894 to i64
  %1896 = load i16**** @direct_ref_idx, align 8
  %1897 = getelementptr inbounds i16*** %1896, i64 1
  %1898 = load i16*** %1897, align 8
  %1899 = getelementptr inbounds i16** %1898, i64 %1895
  %1900 = load i16** %1899, align 8
  %1901 = getelementptr inbounds i16* %1900, i64 %1893
  store i16 %1891, i16* %1901, align 2
  br label %1954

; <label>:1902                                    ; preds = %1847, %1843
  %1903 = getelementptr inbounds [2 x i16]* %pmvbw, i32 0, i64 0
  %1904 = load i16* %1903, align 2
  %1905 = load i16* %bw_rFrame, align 2
  %1906 = sext i16 %1905 to i64
  %1907 = load i32* %block_y, align 4
  %1908 = sext i32 %1907 to i64
  %1909 = load i32* %block_x, align 4
  %1910 = sext i32 %1909 to i64
  %1911 = load i16******* %all_mvs, align 8
  %1912 = getelementptr inbounds i16****** %1911, i64 %1910
  %1913 = load i16****** %1912, align 8
  %1914 = getelementptr inbounds i16***** %1913, i64 %1908
  %1915 = load i16***** %1914, align 8
  %1916 = getelementptr inbounds i16**** %1915, i64 1
  %1917 = load i16**** %1916, align 8
  %1918 = getelementptr inbounds i16*** %1917, i64 %1906
  %1919 = load i16*** %1918, align 8
  %1920 = getelementptr inbounds i16** %1919, i64 0
  %1921 = load i16** %1920, align 8
  %1922 = getelementptr inbounds i16* %1921, i64 0
  store i16 %1904, i16* %1922, align 2
  %1923 = getelementptr inbounds [2 x i16]* %pmvbw, i32 0, i64 1
  %1924 = load i16* %1923, align 2
  %1925 = load i16* %bw_rFrame, align 2
  %1926 = sext i16 %1925 to i64
  %1927 = load i32* %block_y, align 4
  %1928 = sext i32 %1927 to i64
  %1929 = load i32* %block_x, align 4
  %1930 = sext i32 %1929 to i64
  %1931 = load i16******* %all_mvs, align 8
  %1932 = getelementptr inbounds i16****** %1931, i64 %1930
  %1933 = load i16****** %1932, align 8
  %1934 = getelementptr inbounds i16***** %1933, i64 %1928
  %1935 = load i16***** %1934, align 8
  %1936 = getelementptr inbounds i16**** %1935, i64 1
  %1937 = load i16**** %1936, align 8
  %1938 = getelementptr inbounds i16*** %1937, i64 %1926
  %1939 = load i16*** %1938, align 8
  %1940 = getelementptr inbounds i16** %1939, i64 0
  %1941 = load i16** %1940, align 8
  %1942 = getelementptr inbounds i16* %1941, i64 1
  store i16 %1924, i16* %1942, align 2
  %1943 = load i16* %bw_rFrame, align 2
  %1944 = load i32* %pic_block_y, align 4
  %1945 = sext i32 %1944 to i64
  %1946 = load i32* %pic_block_x, align 4
  %1947 = sext i32 %1946 to i64
  %1948 = load i16**** @direct_ref_idx, align 8
  %1949 = getelementptr inbounds i16*** %1948, i64 1
  %1950 = load i16*** %1949, align 8
  %1951 = getelementptr inbounds i16** %1950, i64 %1947
  %1952 = load i16** %1951, align 8
  %1953 = getelementptr inbounds i16* %1952, i64 %1945
  store i16 %1943, i16* %1953, align 2
  br label %1954

; <label>:1954                                    ; preds = %1902, %1858
  br label %1998

; <label>:1955                                    ; preds = %1839
  %1956 = load i32* %pic_block_y, align 4
  %1957 = sext i32 %1956 to i64
  %1958 = load i32* %pic_block_x, align 4
  %1959 = sext i32 %1958 to i64
  %1960 = load i16**** @direct_ref_idx, align 8
  %1961 = getelementptr inbounds i16*** %1960, i64 1
  %1962 = load i16*** %1961, align 8
  %1963 = getelementptr inbounds i16** %1962, i64 %1959
  %1964 = load i16** %1963, align 8
  %1965 = getelementptr inbounds i16* %1964, i64 %1957
  store i16 -1, i16* %1965, align 2
  %1966 = load i32* %block_y, align 4
  %1967 = sext i32 %1966 to i64
  %1968 = load i32* %block_x, align 4
  %1969 = sext i32 %1968 to i64
  %1970 = load i16******* %all_mvs, align 8
  %1971 = getelementptr inbounds i16****** %1970, i64 %1969
  %1972 = load i16****** %1971, align 8
  %1973 = getelementptr inbounds i16***** %1972, i64 %1967
  %1974 = load i16***** %1973, align 8
  %1975 = getelementptr inbounds i16**** %1974, i64 1
  %1976 = load i16**** %1975, align 8
  %1977 = getelementptr inbounds i16*** %1976, i64 0
  %1978 = load i16*** %1977, align 8
  %1979 = getelementptr inbounds i16** %1978, i64 0
  %1980 = load i16** %1979, align 8
  %1981 = getelementptr inbounds i16* %1980, i64 0
  store i16 0, i16* %1981, align 2
  %1982 = load i32* %block_y, align 4
  %1983 = sext i32 %1982 to i64
  %1984 = load i32* %block_x, align 4
  %1985 = sext i32 %1984 to i64
  %1986 = load i16******* %all_mvs, align 8
  %1987 = getelementptr inbounds i16****** %1986, i64 %1985
  %1988 = load i16****** %1987, align 8
  %1989 = getelementptr inbounds i16***** %1988, i64 %1983
  %1990 = load i16***** %1989, align 8
  %1991 = getelementptr inbounds i16**** %1990, i64 1
  %1992 = load i16**** %1991, align 8
  %1993 = getelementptr inbounds i16*** %1992, i64 0
  %1994 = load i16*** %1993, align 8
  %1995 = getelementptr inbounds i16** %1994, i64 0
  %1996 = load i16** %1995, align 8
  %1997 = getelementptr inbounds i16* %1996, i64 1
  store i16 0, i16* %1997, align 2
  br label %1998

; <label>:1998                                    ; preds = %1955, %1954
  %1999 = load i16* %fw_rFrame, align 2
  %2000 = sext i16 %1999 to i32
  %2001 = icmp slt i32 %2000, 0
  br i1 %2001, label %2002, label %2027

; <label>:2002                                    ; preds = %1998
  %2003 = load i16* %bw_rFrame, align 2
  %2004 = sext i16 %2003 to i32
  %2005 = icmp slt i32 %2004, 0
  br i1 %2005, label %2006, label %2027

; <label>:2006                                    ; preds = %2002
  %2007 = load i32* %pic_block_y, align 4
  %2008 = sext i32 %2007 to i64
  %2009 = load i32* %pic_block_x, align 4
  %2010 = sext i32 %2009 to i64
  %2011 = load i16**** @direct_ref_idx, align 8
  %2012 = getelementptr inbounds i16*** %2011, i64 1
  %2013 = load i16*** %2012, align 8
  %2014 = getelementptr inbounds i16** %2013, i64 %2010
  %2015 = load i16** %2014, align 8
  %2016 = getelementptr inbounds i16* %2015, i64 %2008
  store i16 0, i16* %2016, align 2
  %2017 = load i32* %pic_block_y, align 4
  %2018 = sext i32 %2017 to i64
  %2019 = load i32* %pic_block_x, align 4
  %2020 = sext i32 %2019 to i64
  %2021 = load i16**** @direct_ref_idx, align 8
  %2022 = getelementptr inbounds i16*** %2021, i64 0
  %2023 = load i16*** %2022, align 8
  %2024 = getelementptr inbounds i16** %2023, i64 %2020
  %2025 = load i16** %2024, align 8
  %2026 = getelementptr inbounds i16* %2025, i64 %2018
  store i16 0, i16* %2026, align 2
  br label %2027

; <label>:2027                                    ; preds = %2006, %2002, %1998
  %2028 = load i32* %pic_block_y, align 4
  %2029 = sext i32 %2028 to i64
  %2030 = load i32* %pic_block_x, align 4
  %2031 = sext i32 %2030 to i64
  %2032 = load i16**** @direct_ref_idx, align 8
  %2033 = getelementptr inbounds i16*** %2032, i64 1
  %2034 = load i16*** %2033, align 8
  %2035 = getelementptr inbounds i16** %2034, i64 %2031
  %2036 = load i16** %2035, align 8
  %2037 = getelementptr inbounds i16* %2036, i64 %2029
  %2038 = load i16* %2037, align 2
  %2039 = sext i16 %2038 to i32
  %2040 = icmp eq i32 %2039, -1
  br i1 %2040, label %2041, label %2050

; <label>:2041                                    ; preds = %2027
  %2042 = load i32* %pic_block_y, align 4
  %2043 = sext i32 %2042 to i64
  %2044 = load i32* %pic_block_x, align 4
  %2045 = sext i32 %2044 to i64
  %2046 = load i16*** @direct_pdir, align 8
  %2047 = getelementptr inbounds i16** %2046, i64 %2045
  %2048 = load i16** %2047, align 8
  %2049 = getelementptr inbounds i16* %2048, i64 %2043
  store i16 0, i16* %2049, align 2
  br label %2083

; <label>:2050                                    ; preds = %2027
  %2051 = load i32* %pic_block_y, align 4
  %2052 = sext i32 %2051 to i64
  %2053 = load i32* %pic_block_x, align 4
  %2054 = sext i32 %2053 to i64
  %2055 = load i16**** @direct_ref_idx, align 8
  %2056 = getelementptr inbounds i16*** %2055, i64 0
  %2057 = load i16*** %2056, align 8
  %2058 = getelementptr inbounds i16** %2057, i64 %2054
  %2059 = load i16** %2058, align 8
  %2060 = getelementptr inbounds i16* %2059, i64 %2052
  %2061 = load i16* %2060, align 2
  %2062 = sext i16 %2061 to i32
  %2063 = icmp eq i32 %2062, -1
  br i1 %2063, label %2064, label %2073

; <label>:2064                                    ; preds = %2050
  %2065 = load i32* %pic_block_y, align 4
  %2066 = sext i32 %2065 to i64
  %2067 = load i32* %pic_block_x, align 4
  %2068 = sext i32 %2067 to i64
  %2069 = load i16*** @direct_pdir, align 8
  %2070 = getelementptr inbounds i16** %2069, i64 %2068
  %2071 = load i16** %2070, align 8
  %2072 = getelementptr inbounds i16* %2071, i64 %2066
  store i16 1, i16* %2072, align 2
  br label %2082

; <label>:2073                                    ; preds = %2050
  %2074 = load i32* %pic_block_y, align 4
  %2075 = sext i32 %2074 to i64
  %2076 = load i32* %pic_block_x, align 4
  %2077 = sext i32 %2076 to i64
  %2078 = load i16*** @direct_pdir, align 8
  %2079 = getelementptr inbounds i16** %2078, i64 %2077
  %2080 = load i16** %2079, align 8
  %2081 = getelementptr inbounds i16* %2080, i64 %2075
  store i16 2, i16* %2081, align 2
  br label %2082

; <label>:2082                                    ; preds = %2073, %2064
  br label %2083

; <label>:2083                                    ; preds = %2082, %2041
  br label %2084

; <label>:2084                                    ; preds = %2083
  %2085 = load i32* %block_x, align 4
  %2086 = add nsw i32 %2085, 1
  store i32 %2086, i32* %block_x, align 4
  br label %1667

; <label>:2087                                    ; preds = %1667
  br label %2088

; <label>:2088                                    ; preds = %2087
  %2089 = load i32* %block_y, align 4
  %2090 = add nsw i32 %2089, 1
  store i32 %2090, i32* %block_y, align 4
  br label %1651

; <label>:2091                                    ; preds = %1651
  br label %2660

; <label>:2092                                    ; preds = %67
  store i32 0, i32* %block_y, align 4
  br label %2093

; <label>:2093                                    ; preds = %2656, %2092
  %2094 = load i32* %block_y, align 4
  %2095 = icmp slt i32 %2094, 4
  br i1 %2095, label %2096, label %2659

; <label>:2096                                    ; preds = %2093
  %2097 = load %struct.ImageParameters** @img, align 8
  %2098 = getelementptr inbounds %struct.ImageParameters* %2097, i32 0, i32 34
  %2099 = load i32* %2098, align 4
  %2100 = ashr i32 %2099, 2
  %2101 = load i32* %block_y, align 4
  %2102 = add nsw i32 %2100, %2101
  store i32 %2102, i32* %pic_block_y, align 4
  %2103 = load %struct.ImageParameters** @img, align 8
  %2104 = getelementptr inbounds %struct.ImageParameters* %2103, i32 0, i32 38
  %2105 = load i32* %2104, align 4
  %2106 = ashr i32 %2105, 2
  %2107 = load i32* %block_y, align 4
  %2108 = add nsw i32 %2106, %2107
  store i32 %2108, i32* %opic_block_y, align 4
  store i32 0, i32* %block_x, align 4
  br label %2109

; <label>:2109                                    ; preds = %2652, %2096
  %2110 = load i32* %block_x, align 4
  %2111 = icmp slt i32 %2110, 4
  br i1 %2111, label %2112, label %2655

; <label>:2112                                    ; preds = %2109
  %2113 = load %struct.ImageParameters** @img, align 8
  %2114 = getelementptr inbounds %struct.ImageParameters* %2113, i32 0, i32 90
  %2115 = load i32* %2114, align 4
  %2116 = icmp ne i32 %2115, 0
  br i1 %2116, label %2117, label %2129

; <label>:2117                                    ; preds = %2112
  %2118 = load %struct.macroblock** %currMB, align 8
  %2119 = getelementptr inbounds %struct.macroblock* %2118, i32 0, i32 22
  %2120 = load i32* %2119, align 4
  %2121 = icmp ne i32 %2120, 0
  br i1 %2121, label %2122, label %2129

; <label>:2122                                    ; preds = %2117
  %2123 = load %struct.ImageParameters** @img, align 8
  %2124 = getelementptr inbounds %struct.ImageParameters* %2123, i32 0, i32 3
  %2125 = load i32* %2124, align 4
  %2126 = srem i32 %2125, 2
  %2127 = icmp ne i32 %2126, 0
  %2128 = select i1 %2127, i32 4, i32 2
  br label %2130

; <label>:2129                                    ; preds = %2117, %2112
  br label %2130

; <label>:2130                                    ; preds = %2129, %2122
  %2131 = phi i32 [ %2128, %2122 ], [ 0, %2129 ]
  store i32 %2131, i32* %list_offset, align 4
  %2132 = load %struct.ImageParameters** @img, align 8
  %2133 = getelementptr inbounds %struct.ImageParameters* %2132, i32 0, i32 33
  %2134 = load i32* %2133, align 4
  %2135 = ashr i32 %2134, 2
  %2136 = load i32* %block_x, align 4
  %2137 = add nsw i32 %2135, %2136
  store i32 %2137, i32* %pic_block_x, align 4
  %2138 = load %struct.ImageParameters** @img, align 8
  %2139 = getelementptr inbounds %struct.ImageParameters* %2138, i32 0, i32 37
  %2140 = load i32* %2139, align 4
  %2141 = ashr i32 %2140, 2
  %2142 = load i32* %block_x, align 4
  %2143 = add nsw i32 %2141, %2142
  store i32 %2143, i32* %opic_block_x, align 4
  %2144 = load i32* %opic_block_y, align 4
  %2145 = sext i32 %2144 to i64
  %2146 = load i32* %opic_block_x, align 4
  %2147 = sext i32 %2146 to i64
  %2148 = load i16**** %co_located_ref_idx, align 8
  %2149 = getelementptr inbounds i16*** %2148, i64 0
  %2150 = load i16*** %2149, align 8
  %2151 = getelementptr inbounds i16** %2150, i64 %2147
  %2152 = load i16** %2151, align 8
  %2153 = getelementptr inbounds i16* %2152, i64 %2145
  %2154 = load i16* %2153, align 2
  %2155 = sext i16 %2154 to i32
  %2156 = icmp eq i32 %2155, -1
  %2157 = select i1 %2156, i32 1, i32 0
  store i32 %2157, i32* %refList, align 4
  %2158 = load i32* %opic_block_y, align 4
  %2159 = sext i32 %2158 to i64
  %2160 = load i32* %opic_block_x, align 4
  %2161 = sext i32 %2160 to i64
  %2162 = load i32* %refList, align 4
  %2163 = sext i32 %2162 to i64
  %2164 = load i16**** %co_located_ref_idx, align 8
  %2165 = getelementptr inbounds i16*** %2164, i64 %2163
  %2166 = load i16*** %2165, align 8
  %2167 = getelementptr inbounds i16** %2166, i64 %2161
  %2168 = load i16** %2167, align 8
  %2169 = getelementptr inbounds i16* %2168, i64 %2159
  %2170 = load i16* %2169, align 2
  %2171 = sext i16 %2170 to i32
  store i32 %2171, i32* %ref_idx, align 4
  %2172 = load i32* %ref_idx, align 4
  %2173 = icmp eq i32 %2172, -1
  br i1 %2173, label %2174, label %2267

; <label>:2174                                    ; preds = %2130
  %2175 = load i32* %block_y, align 4
  %2176 = sext i32 %2175 to i64
  %2177 = load i32* %block_x, align 4
  %2178 = sext i32 %2177 to i64
  %2179 = load i16******* %all_mvs, align 8
  %2180 = getelementptr inbounds i16****** %2179, i64 %2178
  %2181 = load i16****** %2180, align 8
  %2182 = getelementptr inbounds i16***** %2181, i64 %2176
  %2183 = load i16***** %2182, align 8
  %2184 = getelementptr inbounds i16**** %2183, i64 0
  %2185 = load i16**** %2184, align 8
  %2186 = getelementptr inbounds i16*** %2185, i64 0
  %2187 = load i16*** %2186, align 8
  %2188 = getelementptr inbounds i16** %2187, i64 0
  %2189 = load i16** %2188, align 8
  %2190 = getelementptr inbounds i16* %2189, i64 0
  store i16 0, i16* %2190, align 2
  %2191 = load i32* %block_y, align 4
  %2192 = sext i32 %2191 to i64
  %2193 = load i32* %block_x, align 4
  %2194 = sext i32 %2193 to i64
  %2195 = load i16******* %all_mvs, align 8
  %2196 = getelementptr inbounds i16****** %2195, i64 %2194
  %2197 = load i16****** %2196, align 8
  %2198 = getelementptr inbounds i16***** %2197, i64 %2192
  %2199 = load i16***** %2198, align 8
  %2200 = getelementptr inbounds i16**** %2199, i64 0
  %2201 = load i16**** %2200, align 8
  %2202 = getelementptr inbounds i16*** %2201, i64 0
  %2203 = load i16*** %2202, align 8
  %2204 = getelementptr inbounds i16** %2203, i64 0
  %2205 = load i16** %2204, align 8
  %2206 = getelementptr inbounds i16* %2205, i64 1
  store i16 0, i16* %2206, align 2
  %2207 = load i32* %block_y, align 4
  %2208 = sext i32 %2207 to i64
  %2209 = load i32* %block_x, align 4
  %2210 = sext i32 %2209 to i64
  %2211 = load i16******* %all_mvs, align 8
  %2212 = getelementptr inbounds i16****** %2211, i64 %2210
  %2213 = load i16****** %2212, align 8
  %2214 = getelementptr inbounds i16***** %2213, i64 %2208
  %2215 = load i16***** %2214, align 8
  %2216 = getelementptr inbounds i16**** %2215, i64 1
  %2217 = load i16**** %2216, align 8
  %2218 = getelementptr inbounds i16*** %2217, i64 0
  %2219 = load i16*** %2218, align 8
  %2220 = getelementptr inbounds i16** %2219, i64 0
  %2221 = load i16** %2220, align 8
  %2222 = getelementptr inbounds i16* %2221, i64 0
  store i16 0, i16* %2222, align 2
  %2223 = load i32* %block_y, align 4
  %2224 = sext i32 %2223 to i64
  %2225 = load i32* %block_x, align 4
  %2226 = sext i32 %2225 to i64
  %2227 = load i16******* %all_mvs, align 8
  %2228 = getelementptr inbounds i16****** %2227, i64 %2226
  %2229 = load i16****** %2228, align 8
  %2230 = getelementptr inbounds i16***** %2229, i64 %2224
  %2231 = load i16***** %2230, align 8
  %2232 = getelementptr inbounds i16**** %2231, i64 1
  %2233 = load i16**** %2232, align 8
  %2234 = getelementptr inbounds i16*** %2233, i64 0
  %2235 = load i16*** %2234, align 8
  %2236 = getelementptr inbounds i16** %2235, i64 0
  %2237 = load i16** %2236, align 8
  %2238 = getelementptr inbounds i16* %2237, i64 1
  store i16 0, i16* %2238, align 2
  %2239 = load i32* %pic_block_y, align 4
  %2240 = sext i32 %2239 to i64
  %2241 = load i32* %pic_block_x, align 4
  %2242 = sext i32 %2241 to i64
  %2243 = load i16**** @direct_ref_idx, align 8
  %2244 = getelementptr inbounds i16*** %2243, i64 0
  %2245 = load i16*** %2244, align 8
  %2246 = getelementptr inbounds i16** %2245, i64 %2242
  %2247 = load i16** %2246, align 8
  %2248 = getelementptr inbounds i16* %2247, i64 %2240
  store i16 0, i16* %2248, align 2
  %2249 = load i32* %pic_block_y, align 4
  %2250 = sext i32 %2249 to i64
  %2251 = load i32* %pic_block_x, align 4
  %2252 = sext i32 %2251 to i64
  %2253 = load i16**** @direct_ref_idx, align 8
  %2254 = getelementptr inbounds i16*** %2253, i64 1
  %2255 = load i16*** %2254, align 8
  %2256 = getelementptr inbounds i16** %2255, i64 %2252
  %2257 = load i16** %2256, align 8
  %2258 = getelementptr inbounds i16* %2257, i64 %2250
  store i16 0, i16* %2258, align 2
  %2259 = load i32* %pic_block_y, align 4
  %2260 = sext i32 %2259 to i64
  %2261 = load i32* %pic_block_x, align 4
  %2262 = sext i32 %2261 to i64
  %2263 = load i16*** @direct_pdir, align 8
  %2264 = getelementptr inbounds i16** %2263, i64 %2262
  %2265 = load i16** %2264, align 8
  %2266 = getelementptr inbounds i16* %2265, i64 %2260
  store i16 2, i16* %2266, align 2
  br label %2651

; <label>:2267                                    ; preds = %2130
  store i32 -135792468, i32* %mapped_idx, align 4
  store i32 0, i32* %iref, align 4
  br label %2268

; <label>:2268                                    ; preds = %2321, %2267
  %2269 = load i32* %iref, align 4
  %2270 = load %struct.ImageParameters** @img, align 8
  %2271 = getelementptr inbounds %struct.ImageParameters* %2270, i32 0, i32 79
  %2272 = load i32* %2271, align 4
  %2273 = load i32* %list_offset, align 4
  %2274 = add nsw i32 0, %2273
  %2275 = sext i32 %2274 to i64
  %2276 = getelementptr inbounds [6 x i32]* @listXsize, i32 0, i64 %2275
  %2277 = load i32* %2276, align 4
  %2278 = icmp slt i32 %2272, %2277
  br i1 %2278, label %2279, label %2283

; <label>:2279                                    ; preds = %2268
  %2280 = load %struct.ImageParameters** @img, align 8
  %2281 = getelementptr inbounds %struct.ImageParameters* %2280, i32 0, i32 79
  %2282 = load i32* %2281, align 4
  br label %2289

; <label>:2283                                    ; preds = %2268
  %2284 = load i32* %list_offset, align 4
  %2285 = add nsw i32 0, %2284
  %2286 = sext i32 %2285 to i64
  %2287 = getelementptr inbounds [6 x i32]* @listXsize, i32 0, i64 %2286
  %2288 = load i32* %2287, align 4
  br label %2289

; <label>:2289                                    ; preds = %2283, %2279
  %2290 = phi i32 [ %2282, %2279 ], [ %2288, %2283 ]
  %2291 = icmp slt i32 %2269, %2290
  br i1 %2291, label %2292, label %2324

; <label>:2292                                    ; preds = %2289
  %2293 = load i32* %iref, align 4
  %2294 = sext i32 %2293 to i64
  %2295 = load i32* %list_offset, align 4
  %2296 = add nsw i32 0, %2295
  %2297 = sext i32 %2296 to i64
  %2298 = load %struct.storable_picture** @enc_picture, align 8
  %2299 = getelementptr inbounds %struct.storable_picture* %2298, i32 0, i32 6
  %2300 = getelementptr inbounds [6 x [33 x i64]]* %2299, i32 0, i64 %2297
  %2301 = getelementptr inbounds [33 x i64]* %2300, i32 0, i64 %2294
  %2302 = load i64* %2301, align 8
  %2303 = load i32* %opic_block_y, align 4
  %2304 = sext i32 %2303 to i64
  %2305 = load i32* %opic_block_x, align 4
  %2306 = sext i32 %2305 to i64
  %2307 = load i32* %refList, align 4
  %2308 = sext i32 %2307 to i64
  %2309 = load i64**** %co_located_ref_id, align 8
  %2310 = getelementptr inbounds i64*** %2309, i64 %2308
  %2311 = load i64*** %2310, align 8
  %2312 = getelementptr inbounds i64** %2311, i64 %2306
  %2313 = load i64** %2312, align 8
  %2314 = getelementptr inbounds i64* %2313, i64 %2304
  %2315 = load i64* %2314, align 8
  %2316 = icmp eq i64 %2302, %2315
  br i1 %2316, label %2317, label %2319

; <label>:2317                                    ; preds = %2292
  %2318 = load i32* %iref, align 4
  store i32 %2318, i32* %mapped_idx, align 4
  br label %2324

; <label>:2319                                    ; preds = %2292
  store i32 -135792468, i32* %mapped_idx, align 4
  br label %2320

; <label>:2320                                    ; preds = %2319
  br label %2321

; <label>:2321                                    ; preds = %2320
  %2322 = load i32* %iref, align 4
  %2323 = add nsw i32 %2322, 1
  store i32 %2323, i32* %iref, align 4
  br label %2268

; <label>:2324                                    ; preds = %2317, %2289
  %2325 = load i32* %mapped_idx, align 4
  %2326 = icmp ne i32 %2325, -135792468
  br i1 %2326, label %2327, label %2621

; <label>:2327                                    ; preds = %2324
  %2328 = load i32* %mapped_idx, align 4
  %2329 = sext i32 %2328 to i64
  %2330 = load i32* %list_offset, align 4
  %2331 = add nsw i32 0, %2330
  %2332 = sext i32 %2331 to i64
  %2333 = load %struct.ImageParameters** @img, align 8
  %2334 = getelementptr inbounds %struct.ImageParameters* %2333, i32 0, i32 83
  %2335 = getelementptr inbounds [6 x [15 x i32]]* %2334, i32 0, i64 %2332
  %2336 = getelementptr inbounds [15 x i32]* %2335, i32 0, i64 %2329
  %2337 = load i32* %2336, align 4
  store i32 %2337, i32* %mv_scale, align 4
  %2338 = load i32* %mv_scale, align 4
  %2339 = icmp eq i32 %2338, 9999
  br i1 %2339, label %2340, label %2435

; <label>:2340                                    ; preds = %2327
  %2341 = load i32* %opic_block_y, align 4
  %2342 = sext i32 %2341 to i64
  %2343 = load i32* %opic_block_x, align 4
  %2344 = sext i32 %2343 to i64
  %2345 = load i32* %refList, align 4
  %2346 = sext i32 %2345 to i64
  %2347 = load i16***** %co_located_mv, align 8
  %2348 = getelementptr inbounds i16**** %2347, i64 %2346
  %2349 = load i16**** %2348, align 8
  %2350 = getelementptr inbounds i16*** %2349, i64 %2344
  %2351 = load i16*** %2350, align 8
  %2352 = getelementptr inbounds i16** %2351, i64 %2342
  %2353 = load i16** %2352, align 8
  %2354 = getelementptr inbounds i16* %2353, i64 0
  %2355 = load i16* %2354, align 2
  %2356 = load i32* %block_y, align 4
  %2357 = sext i32 %2356 to i64
  %2358 = load i32* %block_x, align 4
  %2359 = sext i32 %2358 to i64
  %2360 = load i16******* %all_mvs, align 8
  %2361 = getelementptr inbounds i16****** %2360, i64 %2359
  %2362 = load i16****** %2361, align 8
  %2363 = getelementptr inbounds i16***** %2362, i64 %2357
  %2364 = load i16***** %2363, align 8
  %2365 = getelementptr inbounds i16**** %2364, i64 0
  %2366 = load i16**** %2365, align 8
  %2367 = getelementptr inbounds i16*** %2366, i64 0
  %2368 = load i16*** %2367, align 8
  %2369 = getelementptr inbounds i16** %2368, i64 0
  %2370 = load i16** %2369, align 8
  %2371 = getelementptr inbounds i16* %2370, i64 0
  store i16 %2355, i16* %2371, align 2
  %2372 = load i32* %opic_block_y, align 4
  %2373 = sext i32 %2372 to i64
  %2374 = load i32* %opic_block_x, align 4
  %2375 = sext i32 %2374 to i64
  %2376 = load i32* %refList, align 4
  %2377 = sext i32 %2376 to i64
  %2378 = load i16***** %co_located_mv, align 8
  %2379 = getelementptr inbounds i16**** %2378, i64 %2377
  %2380 = load i16**** %2379, align 8
  %2381 = getelementptr inbounds i16*** %2380, i64 %2375
  %2382 = load i16*** %2381, align 8
  %2383 = getelementptr inbounds i16** %2382, i64 %2373
  %2384 = load i16** %2383, align 8
  %2385 = getelementptr inbounds i16* %2384, i64 1
  %2386 = load i16* %2385, align 2
  %2387 = load i32* %block_y, align 4
  %2388 = sext i32 %2387 to i64
  %2389 = load i32* %block_x, align 4
  %2390 = sext i32 %2389 to i64
  %2391 = load i16******* %all_mvs, align 8
  %2392 = getelementptr inbounds i16****** %2391, i64 %2390
  %2393 = load i16****** %2392, align 8
  %2394 = getelementptr inbounds i16***** %2393, i64 %2388
  %2395 = load i16***** %2394, align 8
  %2396 = getelementptr inbounds i16**** %2395, i64 0
  %2397 = load i16**** %2396, align 8
  %2398 = getelementptr inbounds i16*** %2397, i64 0
  %2399 = load i16*** %2398, align 8
  %2400 = getelementptr inbounds i16** %2399, i64 0
  %2401 = load i16** %2400, align 8
  %2402 = getelementptr inbounds i16* %2401, i64 1
  store i16 %2386, i16* %2402, align 2
  %2403 = load i32* %block_y, align 4
  %2404 = sext i32 %2403 to i64
  %2405 = load i32* %block_x, align 4
  %2406 = sext i32 %2405 to i64
  %2407 = load i16******* %all_mvs, align 8
  %2408 = getelementptr inbounds i16****** %2407, i64 %2406
  %2409 = load i16****** %2408, align 8
  %2410 = getelementptr inbounds i16***** %2409, i64 %2404
  %2411 = load i16***** %2410, align 8
  %2412 = getelementptr inbounds i16**** %2411, i64 1
  %2413 = load i16**** %2412, align 8
  %2414 = getelementptr inbounds i16*** %2413, i64 0
  %2415 = load i16*** %2414, align 8
  %2416 = getelementptr inbounds i16** %2415, i64 0
  %2417 = load i16** %2416, align 8
  %2418 = getelementptr inbounds i16* %2417, i64 0
  store i16 0, i16* %2418, align 2
  %2419 = load i32* %block_y, align 4
  %2420 = sext i32 %2419 to i64
  %2421 = load i32* %block_x, align 4
  %2422 = sext i32 %2421 to i64
  %2423 = load i16******* %all_mvs, align 8
  %2424 = getelementptr inbounds i16****** %2423, i64 %2422
  %2425 = load i16****** %2424, align 8
  %2426 = getelementptr inbounds i16***** %2425, i64 %2420
  %2427 = load i16***** %2426, align 8
  %2428 = getelementptr inbounds i16**** %2427, i64 1
  %2429 = load i16**** %2428, align 8
  %2430 = getelementptr inbounds i16*** %2429, i64 0
  %2431 = load i16*** %2430, align 8
  %2432 = getelementptr inbounds i16** %2431, i64 0
  %2433 = load i16** %2432, align 8
  %2434 = getelementptr inbounds i16* %2433, i64 1
  store i16 0, i16* %2434, align 2
  br label %2590

; <label>:2435                                    ; preds = %2327
  %2436 = load i32* %mv_scale, align 4
  %2437 = load i32* %opic_block_y, align 4
  %2438 = sext i32 %2437 to i64
  %2439 = load i32* %opic_block_x, align 4
  %2440 = sext i32 %2439 to i64
  %2441 = load i32* %refList, align 4
  %2442 = sext i32 %2441 to i64
  %2443 = load i16***** %co_located_mv, align 8
  %2444 = getelementptr inbounds i16**** %2443, i64 %2442
  %2445 = load i16**** %2444, align 8
  %2446 = getelementptr inbounds i16*** %2445, i64 %2440
  %2447 = load i16*** %2446, align 8
  %2448 = getelementptr inbounds i16** %2447, i64 %2438
  %2449 = load i16** %2448, align 8
  %2450 = getelementptr inbounds i16* %2449, i64 0
  %2451 = load i16* %2450, align 2
  %2452 = sext i16 %2451 to i32
  %2453 = mul nsw i32 %2436, %2452
  %2454 = add nsw i32 %2453, 128
  %2455 = ashr i32 %2454, 8
  %2456 = trunc i32 %2455 to i16
  %2457 = load i32* %mapped_idx, align 4
  %2458 = sext i32 %2457 to i64
  %2459 = load i32* %block_y, align 4
  %2460 = sext i32 %2459 to i64
  %2461 = load i32* %block_x, align 4
  %2462 = sext i32 %2461 to i64
  %2463 = load i16******* %all_mvs, align 8
  %2464 = getelementptr inbounds i16****** %2463, i64 %2462
  %2465 = load i16****** %2464, align 8
  %2466 = getelementptr inbounds i16***** %2465, i64 %2460
  %2467 = load i16***** %2466, align 8
  %2468 = getelementptr inbounds i16**** %2467, i64 0
  %2469 = load i16**** %2468, align 8
  %2470 = getelementptr inbounds i16*** %2469, i64 %2458
  %2471 = load i16*** %2470, align 8
  %2472 = getelementptr inbounds i16** %2471, i64 0
  %2473 = load i16** %2472, align 8
  %2474 = getelementptr inbounds i16* %2473, i64 0
  store i16 %2456, i16* %2474, align 2
  %2475 = load i32* %mv_scale, align 4
  %2476 = load i32* %opic_block_y, align 4
  %2477 = sext i32 %2476 to i64
  %2478 = load i32* %opic_block_x, align 4
  %2479 = sext i32 %2478 to i64
  %2480 = load i32* %refList, align 4
  %2481 = sext i32 %2480 to i64
  %2482 = load i16***** %co_located_mv, align 8
  %2483 = getelementptr inbounds i16**** %2482, i64 %2481
  %2484 = load i16**** %2483, align 8
  %2485 = getelementptr inbounds i16*** %2484, i64 %2479
  %2486 = load i16*** %2485, align 8
  %2487 = getelementptr inbounds i16** %2486, i64 %2477
  %2488 = load i16** %2487, align 8
  %2489 = getelementptr inbounds i16* %2488, i64 1
  %2490 = load i16* %2489, align 2
  %2491 = sext i16 %2490 to i32
  %2492 = mul nsw i32 %2475, %2491
  %2493 = add nsw i32 %2492, 128
  %2494 = ashr i32 %2493, 8
  %2495 = trunc i32 %2494 to i16
  %2496 = load i32* %mapped_idx, align 4
  %2497 = sext i32 %2496 to i64
  %2498 = load i32* %block_y, align 4
  %2499 = sext i32 %2498 to i64
  %2500 = load i32* %block_x, align 4
  %2501 = sext i32 %2500 to i64
  %2502 = load i16******* %all_mvs, align 8
  %2503 = getelementptr inbounds i16****** %2502, i64 %2501
  %2504 = load i16****** %2503, align 8
  %2505 = getelementptr inbounds i16***** %2504, i64 %2499
  %2506 = load i16***** %2505, align 8
  %2507 = getelementptr inbounds i16**** %2506, i64 0
  %2508 = load i16**** %2507, align 8
  %2509 = getelementptr inbounds i16*** %2508, i64 %2497
  %2510 = load i16*** %2509, align 8
  %2511 = getelementptr inbounds i16** %2510, i64 0
  %2512 = load i16** %2511, align 8
  %2513 = getelementptr inbounds i16* %2512, i64 1
  store i16 %2495, i16* %2513, align 2
  %2514 = load i32* %mv_scale, align 4
  %2515 = sub nsw i32 %2514, 256
  %2516 = load i32* %opic_block_y, align 4
  %2517 = sext i32 %2516 to i64
  %2518 = load i32* %opic_block_x, align 4
  %2519 = sext i32 %2518 to i64
  %2520 = load i32* %refList, align 4
  %2521 = sext i32 %2520 to i64
  %2522 = load i16***** %co_located_mv, align 8
  %2523 = getelementptr inbounds i16**** %2522, i64 %2521
  %2524 = load i16**** %2523, align 8
  %2525 = getelementptr inbounds i16*** %2524, i64 %2519
  %2526 = load i16*** %2525, align 8
  %2527 = getelementptr inbounds i16** %2526, i64 %2517
  %2528 = load i16** %2527, align 8
  %2529 = getelementptr inbounds i16* %2528, i64 0
  %2530 = load i16* %2529, align 2
  %2531 = sext i16 %2530 to i32
  %2532 = mul nsw i32 %2515, %2531
  %2533 = add nsw i32 %2532, 128
  %2534 = ashr i32 %2533, 8
  %2535 = trunc i32 %2534 to i16
  %2536 = load i32* %block_y, align 4
  %2537 = sext i32 %2536 to i64
  %2538 = load i32* %block_x, align 4
  %2539 = sext i32 %2538 to i64
  %2540 = load i16******* %all_mvs, align 8
  %2541 = getelementptr inbounds i16****** %2540, i64 %2539
  %2542 = load i16****** %2541, align 8
  %2543 = getelementptr inbounds i16***** %2542, i64 %2537
  %2544 = load i16***** %2543, align 8
  %2545 = getelementptr inbounds i16**** %2544, i64 1
  %2546 = load i16**** %2545, align 8
  %2547 = getelementptr inbounds i16*** %2546, i64 0
  %2548 = load i16*** %2547, align 8
  %2549 = getelementptr inbounds i16** %2548, i64 0
  %2550 = load i16** %2549, align 8
  %2551 = getelementptr inbounds i16* %2550, i64 0
  store i16 %2535, i16* %2551, align 2
  %2552 = load i32* %mv_scale, align 4
  %2553 = sub nsw i32 %2552, 256
  %2554 = load i32* %opic_block_y, align 4
  %2555 = sext i32 %2554 to i64
  %2556 = load i32* %opic_block_x, align 4
  %2557 = sext i32 %2556 to i64
  %2558 = load i32* %refList, align 4
  %2559 = sext i32 %2558 to i64
  %2560 = load i16***** %co_located_mv, align 8
  %2561 = getelementptr inbounds i16**** %2560, i64 %2559
  %2562 = load i16**** %2561, align 8
  %2563 = getelementptr inbounds i16*** %2562, i64 %2557
  %2564 = load i16*** %2563, align 8
  %2565 = getelementptr inbounds i16** %2564, i64 %2555
  %2566 = load i16** %2565, align 8
  %2567 = getelementptr inbounds i16* %2566, i64 1
  %2568 = load i16* %2567, align 2
  %2569 = sext i16 %2568 to i32
  %2570 = mul nsw i32 %2553, %2569
  %2571 = add nsw i32 %2570, 128
  %2572 = ashr i32 %2571, 8
  %2573 = trunc i32 %2572 to i16
  %2574 = load i32* %block_y, align 4
  %2575 = sext i32 %2574 to i64
  %2576 = load i32* %block_x, align 4
  %2577 = sext i32 %2576 to i64
  %2578 = load i16******* %all_mvs, align 8
  %2579 = getelementptr inbounds i16****** %2578, i64 %2577
  %2580 = load i16****** %2579, align 8
  %2581 = getelementptr inbounds i16***** %2580, i64 %2575
  %2582 = load i16***** %2581, align 8
  %2583 = getelementptr inbounds i16**** %2582, i64 1
  %2584 = load i16**** %2583, align 8
  %2585 = getelementptr inbounds i16*** %2584, i64 0
  %2586 = load i16*** %2585, align 8
  %2587 = getelementptr inbounds i16** %2586, i64 0
  %2588 = load i16** %2587, align 8
  %2589 = getelementptr inbounds i16* %2588, i64 1
  store i16 %2573, i16* %2589, align 2
  br label %2590

; <label>:2590                                    ; preds = %2435, %2340
  %2591 = load i32* %mapped_idx, align 4
  %2592 = trunc i32 %2591 to i16
  %2593 = load i32* %pic_block_y, align 4
  %2594 = sext i32 %2593 to i64
  %2595 = load i32* %pic_block_x, align 4
  %2596 = sext i32 %2595 to i64
  %2597 = load i16**** @direct_ref_idx, align 8
  %2598 = getelementptr inbounds i16*** %2597, i64 0
  %2599 = load i16*** %2598, align 8
  %2600 = getelementptr inbounds i16** %2599, i64 %2596
  %2601 = load i16** %2600, align 8
  %2602 = getelementptr inbounds i16* %2601, i64 %2594
  store i16 %2592, i16* %2602, align 2
  %2603 = load i32* %pic_block_y, align 4
  %2604 = sext i32 %2603 to i64
  %2605 = load i32* %pic_block_x, align 4
  %2606 = sext i32 %2605 to i64
  %2607 = load i16**** @direct_ref_idx, align 8
  %2608 = getelementptr inbounds i16*** %2607, i64 1
  %2609 = load i16*** %2608, align 8
  %2610 = getelementptr inbounds i16** %2609, i64 %2606
  %2611 = load i16** %2610, align 8
  %2612 = getelementptr inbounds i16* %2611, i64 %2604
  store i16 0, i16* %2612, align 2
  %2613 = load i32* %pic_block_y, align 4
  %2614 = sext i32 %2613 to i64
  %2615 = load i32* %pic_block_x, align 4
  %2616 = sext i32 %2615 to i64
  %2617 = load i16*** @direct_pdir, align 8
  %2618 = getelementptr inbounds i16** %2617, i64 %2616
  %2619 = load i16** %2618, align 8
  %2620 = getelementptr inbounds i16* %2619, i64 %2614
  store i16 2, i16* %2620, align 2
  br label %2650

; <label>:2621                                    ; preds = %2324
  %2622 = load i32* %pic_block_y, align 4
  %2623 = sext i32 %2622 to i64
  %2624 = load i32* %pic_block_x, align 4
  %2625 = sext i32 %2624 to i64
  %2626 = load i16**** @direct_ref_idx, align 8
  %2627 = getelementptr inbounds i16*** %2626, i64 0
  %2628 = load i16*** %2627, align 8
  %2629 = getelementptr inbounds i16** %2628, i64 %2625
  %2630 = load i16** %2629, align 8
  %2631 = getelementptr inbounds i16* %2630, i64 %2623
  store i16 -1, i16* %2631, align 2
  %2632 = load i32* %pic_block_y, align 4
  %2633 = sext i32 %2632 to i64
  %2634 = load i32* %pic_block_x, align 4
  %2635 = sext i32 %2634 to i64
  %2636 = load i16**** @direct_ref_idx, align 8
  %2637 = getelementptr inbounds i16*** %2636, i64 1
  %2638 = load i16*** %2637, align 8
  %2639 = getelementptr inbounds i16** %2638, i64 %2635
  %2640 = load i16** %2639, align 8
  %2641 = getelementptr inbounds i16* %2640, i64 %2633
  store i16 -1, i16* %2641, align 2
  %2642 = load i32* %pic_block_y, align 4
  %2643 = sext i32 %2642 to i64
  %2644 = load i32* %pic_block_x, align 4
  %2645 = sext i32 %2644 to i64
  %2646 = load i16*** @direct_pdir, align 8
  %2647 = getelementptr inbounds i16** %2646, i64 %2645
  %2648 = load i16** %2647, align 8
  %2649 = getelementptr inbounds i16* %2648, i64 %2643
  store i16 -1, i16* %2649, align 2
  br label %2650

; <label>:2650                                    ; preds = %2621, %2590
  br label %2651

; <label>:2651                                    ; preds = %2650, %2174
  br label %2652

; <label>:2652                                    ; preds = %2651
  %2653 = load i32* %block_x, align 4
  %2654 = add nsw i32 %2653, 1
  store i32 %2654, i32* %block_x, align 4
  br label %2109

; <label>:2655                                    ; preds = %2109
  br label %2656

; <label>:2656                                    ; preds = %2655
  %2657 = load i32* %block_y, align 4
  %2658 = add nsw i32 %2657, 1
  store i32 %2658, i32* %block_y, align 4
  br label %2093

; <label>:2659                                    ; preds = %2093
  br label %2660

; <label>:2660                                    ; preds = %2659, %2091
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define i32 @sign(i32 %a, i32 %b) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %x = alloca i32, align 4
  store i32 %a, i32* %2, align 4
  store i32 %b, i32* %3, align 4
  %4 = load i32* %2, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %0
  %7 = load i32* %2, align 4
  %8 = sub nsw i32 0, %7
  br label %11

; <label>:9                                       ; preds = %0
  %10 = load i32* %2, align 4
  br label %11

; <label>:11                                      ; preds = %9, %6
  %12 = phi i32 [ %8, %6 ], [ %10, %9 ]
  store i32 %12, i32* %x, align 4
  %13 = load i32* %3, align 4
  %14 = icmp sge i32 %13, 0
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %11
  %16 = load i32* %x, align 4
  store i32 %16, i32* %1
  br label %20

; <label>:17                                      ; preds = %11
  %18 = load i32* %x, align 4
  %19 = sub nsw i32 0, %18
  store i32 %19, i32* %1
  br label %20

; <label>:20                                      ; preds = %17, %15
  %21 = load i32* %1
  ret i32 %21
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.6.2 (tags/RELEASE_362/final)"}
