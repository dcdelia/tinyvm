; ModuleID = 'regexec-dbg.ll'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sv = type { i8*, i32, i32 }
%struct.gv = type { %struct.xpvgv*, i32, i32 }
%struct.xpvgv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.gp*, i8*, i64, %struct.hv*, i8 }
%struct.magic = type { %struct.magic*, %struct.mgvtbl*, i16, i8, i8, %struct.sv*, i8*, i32 }
%struct.mgvtbl = type { i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*)*, i32 (%struct.sv*, %struct.magic*, %struct.sv*, i8*, i32)*, i32 (%struct.magic*, %struct.clone_params*)* }
%struct.clone_params = type { %struct.av*, i64, %struct.interpreter* }
%struct.av = type { %struct.xpvav*, i32, i32 }
%struct.xpvav = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.sv**, %struct.sv*, i8 }
%struct.interpreter = type { i8 }
%struct.gp = type { %struct.sv*, i32, %struct.io*, %struct.cv*, %struct.av*, %struct.hv*, %struct.gv*, %struct.cv*, i32, i32, i32, i8* }
%struct.io = type { %struct.xpvio*, i32, i32 }
%struct.xpvio = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct._PerlIO**, %struct._PerlIO**, %union.anon, i64, i64, i64, i64, i8*, %struct.gv*, i8*, %struct.gv*, i8*, %struct.gv*, i16, i8, i8 }
%struct._PerlIO = type opaque
%union.anon = type { %struct.__dirstream* }
%struct.__dirstream = type opaque
%struct.cv = type { %struct.xpvcv*, i32, i32 }
%struct.xpvcv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, %struct.hv*, %struct.op*, %struct.op*, void (%struct.cv*)*, %union.any, %struct.gv*, i8*, i64, %struct.av*, %struct.cv*, i16, i32 }
%struct.op = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8 }
%union.any = type { i8* }
%struct.hv = type { %struct.xpvhv*, i32, i32 }
%struct.xpvhv = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, i32, %struct.he*, %struct.pmop*, i8* }
%struct.he = type { %struct.he*, %struct.hek*, %struct.sv* }
%struct.hek = type { i32, i32, [1 x i8] }
%struct.pmop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, %struct.op*, %struct.op*, %struct.op*, %struct.op*, %struct.pmop*, %struct.regexp*, i32, i32, i8, %struct.hv* }
%struct.regexp = type { i32*, i32*, %struct.regnode*, %struct.reg_substr_data*, i8*, %struct.reg_data*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, [1 x %struct.regnode] }
%struct.regnode = type { i8, i8, i16 }
%struct.reg_substr_data = type { [3 x %struct.reg_substr_datum] }
%struct.reg_substr_datum = type { i32, i32, %struct.sv*, %struct.sv* }
%struct.reg_data = type { i32, i8*, [1 x i8*] }
%struct.cop = type { %struct.op*, %struct.op*, %struct.op* ()*, i64, i16, i16, i8, i8, i8*, %struct.hv*, %struct.gv*, i32, i32, i32, %struct.sv*, %struct.sv* }
%struct.curcur = type { i32, i32, i32, i32, i32, %struct.regnode*, %struct.regnode*, i8*, %struct.curcur* }
%struct.re_cc_state = type { i32, %struct.regnode*, %struct.re_cc_state*, %struct.curcur*, %struct.regexp* }
%struct.xpv = type { i8*, i64, i64 }
%struct.re_scream_pos_data_s = type { i8**, i32* }
%struct.xpvmg = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv* }
%struct.xpvbm = type { i8*, i64, i64, i64, double, %struct.magic*, %struct.hv*, i32, i16, i8 }
%struct.regnode_string = type { i8, i8, i16, [1 x i8] }
%struct.regnode_charclass = type { i8, i8, i16, i32, [32 x i8] }
%struct.regnode_1 = type { i8, i8, i16, i32 }
%struct.xrv = type { %struct.sv* }
%struct.xpviv = type { i8*, i64, i64, i64 }
%struct.xpvnv = type { i8*, i64, i64, i64, double }
%struct.regnode_2 = type { i8, i8, i16, i16, i16 }
%struct.re_unwind_branch_t = type { i32, i32, i32, i32, %struct.regnode*, i8*, i32 }
%union.re_unwind_t = type { %struct.re_unwind_branch_t }

@PL_reg_match_utf8 = external global i8
@PL_reg_flags = external global i32
@PL_regeol = external global i8*
@PL_sv_undef = external global %struct.sv
@PL_multiline = external global i32
@PL_screamfirst = external global i32*
@PL_regkind = external constant [0 x i8]
@PL_replgv = external global %struct.gv*
@PL_curcop = external global %struct.cop*
@PL_regcc = external global %struct.curcur*
@.str = private unnamed_addr constant [22 x i8] c"NULL regexp parameter\00", align 1
@.str1 = private unnamed_addr constant [25 x i8] c"corrupted regexp program\00", align 1
@PL_reg_eval_set = external global i32
@PL_reg_maxiter = external global i32
@PL_regbol = external global i8*
@PL_bostr = external global i8*
@PL_reg_sv = external global %struct.sv*
@PL_regtill = external global i8*
@PL_reg_call_cc = external global %struct.re_cc_state*
@PL_reg_ganch = external global i8*
@PL_utf8skip = external constant [0 x i8]
@PL_reginput = external global i8*
@PL_dowarn = external global i8
@PL_fold = external constant [0 x i8]
@PL_fold_locale = external global [0 x i8]
@PL_utf8_alnum = external global %struct.sv*
@.str2 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@PL_utf8_space = external global %struct.sv*
@.str3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@PL_utf8_digit = external global %struct.sv*
@.str4 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@PL_utf8_mark = external global %struct.sv*
@.str5 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@PL_regstartp = external global i32*
@PL_reg_leftiter = external global i32
@PL_reglastparen = external global i32*
@PL_regendp = external global i32*
@PL_stack_sp = external global %struct.sv**
@PL_op = external global %struct.op*
@PL_reg_re = external global %struct.regexp*
@PL_regdata = external global %struct.reg_data*
@PL_comppad = external global %struct.av*
@PL_curpad = external global %struct.sv**
@PL_reg_magic = external global %struct.magic*
@PL_runops = external global i32 ()*
@PL_regprecomp = external global i8*
@PL_regsize = external global i32
@PL_regnpar = external global i32
@PL_regcompp = external global %struct.regexp* (i8*, i8*, %struct.pmop*)*
@PL_savestack_ix = external global i32
@PL_reglastcloseparen = external global i32*
@PL_regfree = external global void (%struct.regexp*)*
@PL_Xpv = external global %struct.xpv*
@PL_reg_start_tmp = external global i8**
@PL_reg_poscache = external global i8*
@PL_reg_poscache_size = external global i64
@.str6 = private unnamed_addr constant [23 x i8] c"%s limit (%d) exceeded\00", align 1
@.str7 = private unnamed_addr constant [40 x i8] c"Complex regular subexpression recursion\00", align 1
@PL_savestack = external global %union.any*
@PL_stderrgv = external global %struct.gv*
@.str8 = private unnamed_addr constant [8 x i8] c"%lx %d\0A\00", align 1
@.str9 = private unnamed_addr constant [25 x i8] c"regexp memory corruption\00", align 1
@.str10 = private unnamed_addr constant [26 x i8] c"corrupted regexp pointers\00", align 1
@.str11 = private unnamed_addr constant [32 x i8] c"regexp unwind memory corruption\00", align 1
@.str12 = private unnamed_addr constant [5 x i8] c"utf8\00", align 1
@.str13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@PL_reg_oldsaved = external global i8*
@PL_reg_oldsavedlen = external global i64
@PL_reg_oldpos = external global i32
@PL_reg_oldcurpm = external global %struct.pmop*
@PL_curpm = external global %struct.pmop*

; Function Attrs: nounwind uwtable
define i32 @Perl_pregexec(%struct.regexp* %prog, i8* %stringarg, i8* %strend, i8* %strbeg, i32 %minend, %struct.sv* %screamer, i32 %nosave) #0 {
  call void @llvm.dbg.value(metadata %struct.regexp* %prog, i64 0, metadata !565, metadata !566), !dbg !567
  call void @llvm.dbg.value(metadata i8* %stringarg, i64 0, metadata !568, metadata !566), !dbg !569
  call void @llvm.dbg.value(metadata i8* %strend, i64 0, metadata !570, metadata !566), !dbg !571
  call void @llvm.dbg.value(metadata i8* %strbeg, i64 0, metadata !572, metadata !566), !dbg !573
  call void @llvm.dbg.value(metadata i32 %minend, i64 0, metadata !574, metadata !566), !dbg !575
  call void @llvm.dbg.value(metadata %struct.sv* %screamer, i64 0, metadata !576, metadata !566), !dbg !577
  call void @llvm.dbg.value(metadata i32 %nosave, i64 0, metadata !578, metadata !566), !dbg !579
  %1 = icmp ne i32 %nosave, 0, !dbg !580
  %2 = select i1 %1, i32 0, i32 1, !dbg !580
  %3 = call i32 @Perl_regexec_flags(%struct.regexp* %prog, i8* %stringarg, i8* %strend, i8* %strbeg, i32 %minend, %struct.sv* %screamer, i8* null, i32 %2), !dbg !581
  ret i32 %3, !dbg !582
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind uwtable
define i32 @Perl_regexec_flags(%struct.regexp* %prog, i8* %stringarg, i8* %strend, i8* %strbeg, i32 %minend, %struct.sv* %sv, i8* %data, i32 %flags) #0 {
  %scream_pos = alloca i32, align 4
  %scream_olds = alloca i8*, align 8
  %d = alloca %struct.re_scream_pos_data_s, align 8
  %len = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.regexp* %prog, i64 0, metadata !583, metadata !566), !dbg !584
  call void @llvm.dbg.value(metadata i8* %stringarg, i64 0, metadata !585, metadata !566), !dbg !586
  call void @llvm.dbg.value(metadata i8* %strend, i64 0, metadata !587, metadata !566), !dbg !588
  call void @llvm.dbg.value(metadata i8* %strbeg, i64 0, metadata !589, metadata !566), !dbg !590
  call void @llvm.dbg.value(metadata i32 %minend, i64 0, metadata !591, metadata !566), !dbg !592
  call void @llvm.dbg.value(metadata %struct.sv* %sv, i64 0, metadata !593, metadata !566), !dbg !594
  call void @llvm.dbg.value(metadata i8* %data, i64 0, metadata !595, metadata !566), !dbg !596
  call void @llvm.dbg.value(metadata i32 %flags, i64 0, metadata !597, metadata !566), !dbg !598
  call void @llvm.dbg.value(metadata i8* %stringarg, i64 0, metadata !599, metadata !566), !dbg !600
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !601, metadata !566), !dbg !602
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !603, metadata !566), !dbg !604
  call void @llvm.dbg.declare(metadata i32* %scream_pos, metadata !605, metadata !566), !dbg !606
  store i32 -1, i32* %scream_pos, align 4, !dbg !606
  call void @llvm.dbg.declare(metadata i8** %scream_olds, metadata !607, metadata !566), !dbg !608
  %1 = load %struct.gv** @PL_replgv, align 8, !dbg !609
  %2 = getelementptr inbounds %struct.gv* %1, i32 0, i32 0, !dbg !609
  %3 = load %struct.xpvgv** %2, align 8, !dbg !609
  %4 = getelementptr inbounds %struct.xpvgv* %3, i32 0, i32 7, !dbg !609
  %5 = load %struct.gp** %4, align 8, !dbg !609
  %6 = getelementptr inbounds %struct.gp* %5, i32 0, i32 0, !dbg !609
  %7 = load %struct.sv** %6, align 8, !dbg !609
  call void @llvm.dbg.value(metadata %struct.sv* %7, i64 0, metadata !610, metadata !566), !dbg !611
  %8 = getelementptr inbounds %struct.sv* %sv, i32 0, i32 2, !dbg !612
  %9 = load i32* %8, align 4, !dbg !612
  %10 = and i32 %9, 536870912, !dbg !612
  %11 = icmp ne i32 %10, 0, !dbg !612
  br i1 %11, label %12, label %20, !dbg !612

; <label>:12                                      ; preds = %0
  %13 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !613
  %14 = getelementptr inbounds %struct.cop* %13, i32 0, i32 7, !dbg !613
  %15 = load i8* %14, align 1, !dbg !613
  %16 = zext i8 %15 to i32, !dbg !613
  %17 = and i32 %16, 8, !dbg !613
  %18 = icmp ne i32 %17, 0, !dbg !613
  %19 = xor i1 %18, true, !dbg !613
  br label %20

; <label>:20                                      ; preds = %12, %0
  %21 = phi i1 [ false, %0 ], [ %19, %12 ]
  %22 = zext i1 %21 to i32, !dbg !615
  %23 = trunc i32 %22 to i8, !dbg !615
  call void @llvm.dbg.value(metadata i8 %23, i64 0, metadata !617, metadata !566), !dbg !618
  %24 = sext i8 %23 to i32, !dbg !619
  %25 = icmp ne i32 %24, 0, !dbg !619
  br i1 %25, label %26, label %30, !dbg !619

; <label>:26                                      ; preds = %20
  %27 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !620
  %28 = load i32* %27, align 4, !dbg !620
  %29 = or i32 %28, 268435456, !dbg !620
  store i32 %29, i32* %27, align 4, !dbg !620
  store i8 1, i8* @PL_reg_match_utf8, align 1, !dbg !620
  br label %34, !dbg !620

; <label>:30                                      ; preds = %20
  %31 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !621
  %32 = load i32* %31, align 4, !dbg !621
  %33 = and i32 %32, -268435457, !dbg !621
  store i32 %33, i32* %31, align 4, !dbg !621
  store i8 0, i8* @PL_reg_match_utf8, align 1, !dbg !621
  br label %34, !dbg !621

; <label>:34                                      ; preds = %30, %26
  %35 = phi i32 [ 1, %26 ], [ 0, %30 ], !dbg !619
  store %struct.curcur* null, %struct.curcur** @PL_regcc, align 8, !dbg !622
  %36 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !623
  %37 = icmp eq %struct.regexp* %prog, null, !dbg !624
  br i1 %37, label %40, label %38, !dbg !626

; <label>:38                                      ; preds = %34
  %39 = icmp eq i8* %stringarg, null, !dbg !627
  br i1 %39, label %40, label %41, !dbg !626

; <label>:40                                      ; preds = %38, %34
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([22 x i8]* @.str, i32 0, i32 0)), !dbg !629
  br label %1193, !dbg !631

; <label>:41                                      ; preds = %38
  %42 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 10, !dbg !632
  %43 = load i32* %42, align 4, !dbg !632
  call void @llvm.dbg.value(metadata i32 %43, i64 0, metadata !633, metadata !566), !dbg !634
  %44 = ptrtoint i8* %strend to i64, !dbg !635
  %45 = ptrtoint i8* %stringarg to i64, !dbg !635
  %46 = sub i64 %44, %45, !dbg !635
  %47 = sext i32 %43 to i64, !dbg !637
  %48 = icmp slt i64 %46, %47, !dbg !635
  br i1 %48, label %49, label %50, !dbg !638

; <label>:49                                      ; preds = %41
  br label %1188, !dbg !639

; <label>:50                                      ; preds = %41
  %51 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 16, !dbg !641
  %52 = getelementptr inbounds [1 x %struct.regnode]* %51, i32 0, i32 0, !dbg !641
  %53 = bitcast %struct.regnode* %52 to i8*, !dbg !641
  %54 = load i8* %53, align 1, !dbg !641
  %55 = zext i8 %54 to i32, !dbg !641
  %56 = icmp ne i32 %55, 156, !dbg !641
  br i1 %56, label %57, label %58, !dbg !643

; <label>:57                                      ; preds = %50
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([25 x i8]* @.str1, i32 0, i32 0)), !dbg !644
  br label %58, !dbg !646

; <label>:58                                      ; preds = %57, %50
  store i32 0, i32* @PL_reg_flags, align 4, !dbg !647
  store i32 0, i32* @PL_reg_eval_set, align 4, !dbg !648
  store i32 0, i32* @PL_reg_maxiter, align 4, !dbg !649
  %59 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !650
  %60 = load i32* %59, align 4, !dbg !650
  %61 = and i32 %60, 65536, !dbg !650
  %62 = icmp ne i32 %61, 0, !dbg !652
  br i1 %62, label %63, label %66, !dbg !652

; <label>:63                                      ; preds = %58
  %64 = load i32* @PL_reg_flags, align 4, !dbg !653
  %65 = or i32 %64, 8, !dbg !653
  store i32 %65, i32* @PL_reg_flags, align 4, !dbg !653
  br label %66, !dbg !653

; <label>:66                                      ; preds = %63, %58
  store i8* %stringarg, i8** @PL_regbol, align 8, !dbg !654
  store i8* %strbeg, i8** @PL_bostr, align 8, !dbg !655
  store %struct.sv* %sv, %struct.sv** @PL_reg_sv, align 8, !dbg !656
  store i8* %strend, i8** @PL_regeol, align 8, !dbg !657
  %67 = sext i32 %minend to i64, !dbg !658
  %68 = getelementptr inbounds i8* %stringarg, i64 %67, !dbg !658
  store i8* %68, i8** @PL_regtill, align 8, !dbg !659
  store %struct.re_cc_state* null, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !660
  call void @llvm.dbg.value(metadata i8* %stringarg, i64 0, metadata !661, metadata !566), !dbg !662
  %69 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !663
  %70 = load i32* %69, align 4, !dbg !663
  %71 = and i32 %70, 128, !dbg !663
  %72 = icmp ne i32 %71, 0, !dbg !665
  br i1 %72, label %73, label %117, !dbg !665

; <label>:73                                      ; preds = %66
  %74 = and i32 %flags, 8, !dbg !666
  %75 = icmp ne i32 %74, 0, !dbg !669
  br i1 %75, label %76, label %77, !dbg !669

; <label>:76                                      ; preds = %73
  store i8* %stringarg, i8** @PL_reg_ganch, align 8, !dbg !670
  br label %116, !dbg !670

; <label>:77                                      ; preds = %73
  %78 = icmp ne %struct.sv* %sv, null, !dbg !671
  br i1 %78, label %79, label %114, !dbg !671

; <label>:79                                      ; preds = %77
  %80 = getelementptr inbounds %struct.sv* %sv, i32 0, i32 2, !dbg !672
  %81 = load i32* %80, align 4, !dbg !672
  %82 = and i32 %81, 255, !dbg !672
  %83 = icmp uge i32 %82, 7, !dbg !672
  br i1 %83, label %84, label %114, !dbg !671

; <label>:84                                      ; preds = %79
  %85 = getelementptr inbounds %struct.sv* %sv, i32 0, i32 0, !dbg !675
  %86 = load i8** %85, align 8, !dbg !675
  %87 = bitcast i8* %86 to %struct.xpvmg*, !dbg !675
  %88 = getelementptr inbounds %struct.xpvmg* %87, i32 0, i32 5, !dbg !675
  %89 = load %struct.magic** %88, align 8, !dbg !675
  %90 = icmp ne %struct.magic* %89, null, !dbg !671
  br i1 %90, label %91, label %114, !dbg !671

; <label>:91                                      ; preds = %84
  %92 = call %struct.magic* @Perl_mg_find(%struct.sv* %sv, i32 103), !dbg !676
  call void @llvm.dbg.value(metadata %struct.magic* %92, i64 0, metadata !677, metadata !566), !dbg !678
  %93 = icmp ne %struct.magic* %92, null, !dbg !671
  br i1 %93, label %94, label %114, !dbg !671

; <label>:94                                      ; preds = %91
  %95 = getelementptr inbounds %struct.magic* %92, i32 0, i32 7, !dbg !679
  %96 = load i32* %95, align 4, !dbg !679
  %97 = icmp sge i32 %96, 0, !dbg !679
  br i1 %97, label %98, label %114, !dbg !671

; <label>:98                                      ; preds = %94
  %99 = getelementptr inbounds %struct.magic* %92, i32 0, i32 7, !dbg !680
  %100 = load i32* %99, align 4, !dbg !680
  %101 = sext i32 %100 to i64, !dbg !682
  %102 = getelementptr inbounds i8* %strbeg, i64 %101, !dbg !682
  store i8* %102, i8** @PL_reg_ganch, align 8, !dbg !683
  %103 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !684
  %104 = load i32* %103, align 4, !dbg !684
  %105 = and i32 %104, 8, !dbg !684
  %106 = icmp ne i32 %105, 0, !dbg !686
  br i1 %106, label %107, label %113, !dbg !686

; <label>:107                                     ; preds = %98
  %108 = load i8** @PL_reg_ganch, align 8, !dbg !687
  %109 = icmp ugt i8* %stringarg, %108, !dbg !690
  br i1 %109, label %110, label %111, !dbg !691

; <label>:110                                     ; preds = %107
  br label %1188, !dbg !692

; <label>:111                                     ; preds = %107
  %112 = load i8** @PL_reg_ganch, align 8, !dbg !693
  call void @llvm.dbg.value(metadata i8* %112, i64 0, metadata !661, metadata !566), !dbg !662
  br label %113, !dbg !694

; <label>:113                                     ; preds = %111, %98
  %s.0 = phi i8* [ %112, %111 ], [ %stringarg, %98 ]
  br label %115, !dbg !695

; <label>:114                                     ; preds = %94, %91, %84, %79, %77
  store i8* %strbeg, i8** @PL_reg_ganch, align 8, !dbg !696
  br label %115

; <label>:115                                     ; preds = %114, %113
  %s.1 = phi i8* [ %s.0, %113 ], [ %stringarg, %114 ]
  br label %116

; <label>:116                                     ; preds = %115, %76
  %s.2 = phi i8* [ %stringarg, %76 ], [ %s.1, %115 ]
  br label %117, !dbg !697

; <label>:117                                     ; preds = %116, %66
  %s.3 = phi i8* [ %s.2, %116 ], [ %stringarg, %66 ]
  %118 = and i32 %flags, 2, !dbg !698
  %119 = icmp ne i32 %118, 0, !dbg !700
  br i1 %119, label %143, label %120, !dbg !700

; <label>:120                                     ; preds = %117
  %121 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !701
  %122 = load %struct.reg_substr_data** %121, align 8, !dbg !701
  %123 = getelementptr inbounds %struct.reg_substr_data* %122, i32 0, i32 0, !dbg !701
  %124 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %123, i32 0, i64 2, !dbg !701
  %125 = getelementptr inbounds %struct.reg_substr_datum* %124, i32 0, i32 2, !dbg !701
  %126 = load %struct.sv** %125, align 8, !dbg !701
  %127 = icmp ne %struct.sv* %126, null, !dbg !701
  br i1 %127, label %136, label %128, !dbg !700

; <label>:128                                     ; preds = %120
  %129 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !703
  %130 = load %struct.reg_substr_data** %129, align 8, !dbg !703
  %131 = getelementptr inbounds %struct.reg_substr_data* %130, i32 0, i32 0, !dbg !703
  %132 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %131, i32 0, i64 2, !dbg !703
  %133 = getelementptr inbounds %struct.reg_substr_datum* %132, i32 0, i32 3, !dbg !703
  %134 = load %struct.sv** %133, align 8, !dbg !703
  %135 = icmp ne %struct.sv* %134, null, !dbg !703
  br i1 %135, label %136, label %143, !dbg !700

; <label>:136                                     ; preds = %128, %120
  call void @llvm.dbg.declare(metadata %struct.re_scream_pos_data_s* %d, metadata !705, metadata !566), !dbg !707
  %137 = getelementptr inbounds %struct.re_scream_pos_data_s* %d, i32 0, i32 0, !dbg !708
  store i8** %scream_olds, i8*** %137, align 8, !dbg !708
  %138 = getelementptr inbounds %struct.re_scream_pos_data_s* %d, i32 0, i32 1, !dbg !709
  store i32* %scream_pos, i32** %138, align 8, !dbg !709
  %139 = call i8* @Perl_re_intuit_start(%struct.regexp* %prog, %struct.sv* %sv, i8* %s.3, i8* %strend, i32 %flags, %struct.re_scream_pos_data_s* %d), !dbg !710
  call void @llvm.dbg.value(metadata i8* %139, i64 0, metadata !661, metadata !566), !dbg !662
  %140 = icmp ne i8* %139, null, !dbg !711
  br i1 %140, label %142, label %141, !dbg !711

; <label>:141                                     ; preds = %136
  br label %1188, !dbg !712

; <label>:142                                     ; preds = %136
  br label %143, !dbg !715

; <label>:143                                     ; preds = %142, %128, %117
  %s.4 = phi i8* [ %s.3, %117 ], [ %139, %142 ], [ %s.3, %128 ]
  %144 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !716
  %145 = load i32* %144, align 4, !dbg !716
  %146 = and i32 %145, 7, !dbg !716
  %147 = icmp ne i32 %146, 0, !dbg !718
  br i1 %147, label %148, label %250, !dbg !718

; <label>:148                                     ; preds = %143
  %149 = icmp eq i8* %s.4, %stringarg, !dbg !719
  br i1 %149, label %150, label %154, !dbg !722

; <label>:150                                     ; preds = %148
  %151 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %prog, i8* %stringarg), !dbg !723
  %152 = icmp ne i32 %151, 0, !dbg !722
  br i1 %152, label %153, label %154, !dbg !722

; <label>:153                                     ; preds = %150
  br label %1111, !dbg !724

; <label>:154                                     ; preds = %150, %148
  %155 = load i32* @PL_multiline, align 4, !dbg !725
  %156 = icmp ne i32 %155, 0, !dbg !727
  br i1 %156, label %167, label %157, !dbg !727

; <label>:157                                     ; preds = %154
  %158 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !728
  %159 = load i32* %158, align 4, !dbg !728
  %160 = and i32 %159, 32, !dbg !728
  %161 = icmp ne i32 %160, 0, !dbg !727
  br i1 %161, label %167, label %162, !dbg !727

; <label>:162                                     ; preds = %157
  %163 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !730
  %164 = load i32* %163, align 4, !dbg !730
  %165 = and i32 %164, 2, !dbg !730
  %166 = icmp ne i32 %165, 0, !dbg !727
  br i1 %166, label %167, label %248, !dbg !727

; <label>:167                                     ; preds = %162, %157, %154
  %168 = icmp ne i32 %43, 0, !dbg !731
  br i1 %168, label %169, label %171, !dbg !731

; <label>:169                                     ; preds = %167
  %170 = sub nsw i32 %43, 1, !dbg !733
  call void @llvm.dbg.value(metadata i32 %170, i64 0, metadata !601, metadata !566), !dbg !602
  br label %171, !dbg !735

; <label>:171                                     ; preds = %169, %167
  %dontbother.0 = phi i32 [ %170, %169 ], [ 0, %167 ]
  %172 = load i8* @PL_reg_match_utf8, align 1, !dbg !736
  %173 = sext i8 %172 to i32, !dbg !736
  %174 = icmp ne i32 %173, 0, !dbg !736
  br i1 %174, label %175, label %180, !dbg !736

; <label>:175                                     ; preds = %171
  %176 = sub nsw i32 0, %dontbother.0, !dbg !737
  %177 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %strend, i32 %176, i8* %strbeg), !dbg !737
  %178 = sext i32 %177 to i64, !dbg !737
  %179 = inttoptr i64 %178 to i8*, !dbg !737
  br label %184, !dbg !737

; <label>:180                                     ; preds = %171
  %181 = sub nsw i32 0, %dontbother.0, !dbg !739
  %182 = sext i32 %181 to i64, !dbg !739
  %183 = getelementptr inbounds i8* %strend, i64 %182, !dbg !739
  br label %184, !dbg !739

; <label>:184                                     ; preds = %180, %175
  %185 = phi i8* [ %179, %175 ], [ %183, %180 ], !dbg !736
  %186 = getelementptr inbounds i8* %185, i64 -1, !dbg !741
  call void @llvm.dbg.value(metadata i8* %186, i64 0, metadata !744, metadata !566), !dbg !745
  %187 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !746
  %188 = load %struct.reg_substr_data** %187, align 8, !dbg !746
  %189 = getelementptr inbounds %struct.reg_substr_data* %188, i32 0, i32 0, !dbg !746
  %190 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %189, i32 0, i64 2, !dbg !746
  %191 = getelementptr inbounds %struct.reg_substr_datum* %190, i32 0, i32 2, !dbg !746
  %192 = load %struct.sv** %191, align 8, !dbg !746
  %193 = icmp ne %struct.sv* %192, null, !dbg !748
  br i1 %193, label %202, label %194, !dbg !748

; <label>:194                                     ; preds = %184
  %195 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !749
  %196 = load %struct.reg_substr_data** %195, align 8, !dbg !749
  %197 = getelementptr inbounds %struct.reg_substr_data* %196, i32 0, i32 0, !dbg !749
  %198 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %197, i32 0, i64 2, !dbg !749
  %199 = getelementptr inbounds %struct.reg_substr_datum* %198, i32 0, i32 3, !dbg !749
  %200 = load %struct.sv** %199, align 8, !dbg !749
  %201 = icmp ne %struct.sv* %200, null, !dbg !748
  br i1 %201, label %202, label %228, !dbg !748

; <label>:202                                     ; preds = %194, %184
  %203 = icmp eq i8* %s.4, %stringarg, !dbg !751
  br i1 %203, label %204, label %205, !dbg !754

; <label>:204                                     ; preds = %202
  br label %211, !dbg !755

; <label>:205                                     ; preds = %202
  br label %206, !dbg !756

; <label>:206                                     ; preds = %227, %205
  %s.5 = phi i8* [ %s.7, %227 ], [ %s.4, %205 ]
  %207 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %prog, i8* %s.5), !dbg !757
  %208 = icmp ne i32 %207, 0, !dbg !760
  br i1 %208, label %209, label %210, !dbg !760

; <label>:209                                     ; preds = %206
  br label %1111, !dbg !761

; <label>:210                                     ; preds = %206
  br label %211, !dbg !762

; <label>:211                                     ; preds = %210, %204
  %s.6 = phi i8* [ %s.4, %204 ], [ %s.5, %210 ]
  %212 = icmp uge i8* %s.6, %186, !dbg !764
  br i1 %212, label %213, label %214, !dbg !766

; <label>:213                                     ; preds = %211
  br label %1188, !dbg !767

; <label>:214                                     ; preds = %211
  %215 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !768
  %216 = load i32* %215, align 4, !dbg !768
  %217 = and i32 %216, 3145728, !dbg !768
  %218 = icmp ne i32 %217, 0, !dbg !770
  br i1 %218, label %219, label %225, !dbg !770

; <label>:219                                     ; preds = %214
  %220 = getelementptr inbounds i8* %s.6, i64 1, !dbg !771
  %221 = call i8* @Perl_re_intuit_start(%struct.regexp* %prog, %struct.sv* %sv, i8* %220, i8* %strend, i32 %flags, %struct.re_scream_pos_data_s* null), !dbg !773
  call void @llvm.dbg.value(metadata i8* %221, i64 0, metadata !661, metadata !566), !dbg !662
  %222 = icmp ne i8* %221, null, !dbg !774
  br i1 %222, label %224, label %223, !dbg !774

; <label>:223                                     ; preds = %219
  br label %1188, !dbg !775

; <label>:224                                     ; preds = %219
  br label %227, !dbg !777

; <label>:225                                     ; preds = %214
  %226 = getelementptr inbounds i8* %s.6, i32 1, !dbg !778
  call void @llvm.dbg.value(metadata i8* %226, i64 0, metadata !661, metadata !566), !dbg !662
  br label %227

; <label>:227                                     ; preds = %225, %224
  %s.7 = phi i8* [ %221, %224 ], [ %226, %225 ]
  br label %206, !dbg !756

; <label>:228                                     ; preds = %194
  %229 = icmp ugt i8* %s.4, %stringarg, !dbg !779
  br i1 %229, label %230, label %232, !dbg !782

; <label>:230                                     ; preds = %228
  %231 = getelementptr inbounds i8* %s.4, i32 -1, !dbg !783
  call void @llvm.dbg.value(metadata i8* %231, i64 0, metadata !661, metadata !566), !dbg !662
  br label %232, !dbg !783

; <label>:232                                     ; preds = %230, %228
  %s.8 = phi i8* [ %231, %230 ], [ %s.4, %228 ]
  br label %233, !dbg !784

; <label>:233                                     ; preds = %245, %232
  %s.9 = phi i8* [ %s.8, %232 ], [ %236, %245 ]
  %234 = icmp ult i8* %s.9, %186, !dbg !785
  br i1 %234, label %235, label %246, !dbg !784

; <label>:235                                     ; preds = %233
  %236 = getelementptr inbounds i8* %s.9, i32 1, !dbg !786
  call void @llvm.dbg.value(metadata i8* %236, i64 0, metadata !661, metadata !566), !dbg !662
  %237 = load i8* %s.9, align 1, !dbg !789
  %238 = sext i8 %237 to i32, !dbg !789
  %239 = icmp eq i32 %238, 10, !dbg !789
  br i1 %239, label %240, label %245, !dbg !790

; <label>:240                                     ; preds = %235
  %241 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %prog, i8* %236), !dbg !791
  %242 = icmp ne i32 %241, 0, !dbg !794
  br i1 %242, label %243, label %244, !dbg !794

; <label>:243                                     ; preds = %240
  br label %1111, !dbg !795

; <label>:244                                     ; preds = %240
  br label %245, !dbg !796

; <label>:245                                     ; preds = %244, %235
  br label %233, !dbg !784

; <label>:246                                     ; preds = %233
  br label %247

; <label>:247                                     ; preds = %246
  br label %248, !dbg !797

; <label>:248                                     ; preds = %247, %162
  br label %249

; <label>:249                                     ; preds = %248
  br label %1188, !dbg !798

; <label>:250                                     ; preds = %143
  %251 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !799
  %252 = load i32* %251, align 4, !dbg !799
  %253 = and i32 %252, 8, !dbg !799
  %254 = icmp ne i32 %253, 0, !dbg !801
  br i1 %254, label %255, label %261, !dbg !801

; <label>:255                                     ; preds = %250
  %256 = load i8** @PL_reg_ganch, align 8, !dbg !802
  %257 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %prog, i8* %256), !dbg !805
  %258 = icmp ne i32 %257, 0, !dbg !806
  br i1 %258, label %259, label %260, !dbg !806

; <label>:259                                     ; preds = %255
  br label %1111, !dbg !807

; <label>:260                                     ; preds = %255
  br label %1188, !dbg !808

; <label>:261                                     ; preds = %250
  br label %262

; <label>:262                                     ; preds = %261
  %263 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !809
  %264 = load %struct.reg_substr_data** %263, align 8, !dbg !809
  %265 = getelementptr inbounds %struct.reg_substr_data* %264, i32 0, i32 0, !dbg !809
  %266 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %265, i32 0, i64 0, !dbg !809
  %267 = getelementptr inbounds %struct.reg_substr_datum* %266, i32 0, i32 2, !dbg !809
  %268 = load %struct.sv** %267, align 8, !dbg !809
  %269 = icmp ne %struct.sv* %268, null, !dbg !811
  br i1 %269, label %278, label %270, !dbg !811

; <label>:270                                     ; preds = %262
  %271 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !812
  %272 = load %struct.reg_substr_data** %271, align 8, !dbg !812
  %273 = getelementptr inbounds %struct.reg_substr_data* %272, i32 0, i32 0, !dbg !812
  %274 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %273, i32 0, i64 0, !dbg !812
  %275 = getelementptr inbounds %struct.reg_substr_datum* %274, i32 0, i32 3, !dbg !812
  %276 = load %struct.sv** %275, align 8, !dbg !812
  %277 = icmp ne %struct.sv* %276, null, !dbg !811
  br i1 %277, label %278, label %415, !dbg !811

; <label>:278                                     ; preds = %270, %262
  %279 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !814
  %280 = load i32* %279, align 4, !dbg !814
  %281 = and i32 %280, 16, !dbg !814
  %282 = icmp ne i32 %281, 0, !dbg !811
  br i1 %282, label %283, label %415, !dbg !811

; <label>:283                                     ; preds = %278
  %284 = sext i8 %23 to i32, !dbg !817
  %285 = icmp ne i32 %284, 0, !dbg !820
  br i1 %285, label %286, label %294, !dbg !820

; <label>:286                                     ; preds = %283
  %287 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !821
  %288 = load %struct.reg_substr_data** %287, align 8, !dbg !821
  %289 = getelementptr inbounds %struct.reg_substr_data* %288, i32 0, i32 0, !dbg !821
  %290 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %289, i32 0, i64 0, !dbg !821
  %291 = getelementptr inbounds %struct.reg_substr_datum* %290, i32 0, i32 3, !dbg !821
  %292 = load %struct.sv** %291, align 8, !dbg !821
  %293 = icmp ne %struct.sv* %292, null, !dbg !820
  br i1 %293, label %311, label %302, !dbg !820

; <label>:294                                     ; preds = %283
  %295 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !823
  %296 = load %struct.reg_substr_data** %295, align 8, !dbg !823
  %297 = getelementptr inbounds %struct.reg_substr_data* %296, i32 0, i32 0, !dbg !823
  %298 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %297, i32 0, i64 0, !dbg !823
  %299 = getelementptr inbounds %struct.reg_substr_datum* %298, i32 0, i32 2, !dbg !823
  %300 = load %struct.sv** %299, align 8, !dbg !823
  %301 = icmp ne %struct.sv* %300, null, !dbg !820
  br i1 %301, label %311, label %302, !dbg !820

; <label>:302                                     ; preds = %294, %286
  %303 = sext i8 %23 to i32, !dbg !825
  %304 = icmp ne i32 %303, 0, !dbg !825
  br i1 %304, label %305, label %307, !dbg !825

; <label>:305                                     ; preds = %302
  %306 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_utf8_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !826
  br label %309, !dbg !825

; <label>:307                                     ; preds = %302
  %308 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_byte_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !827
  br label %309, !dbg !825

; <label>:309                                     ; preds = %307, %305
  %310 = phi i32 [ %306, %305 ], [ %308, %307 ], !dbg !825
  br label %311, !dbg !828

; <label>:311                                     ; preds = %309, %294, %286
  %312 = sext i8 %23 to i32, !dbg !831
  %313 = icmp ne i32 %312, 0, !dbg !831
  br i1 %313, label %314, label %321, !dbg !831

; <label>:314                                     ; preds = %311
  %315 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !832
  %316 = load %struct.reg_substr_data** %315, align 8, !dbg !832
  %317 = getelementptr inbounds %struct.reg_substr_data* %316, i32 0, i32 0, !dbg !832
  %318 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %317, i32 0, i64 0, !dbg !832
  %319 = getelementptr inbounds %struct.reg_substr_datum* %318, i32 0, i32 3, !dbg !832
  %320 = load %struct.sv** %319, align 8, !dbg !832
  br label %328, !dbg !832

; <label>:321                                     ; preds = %311
  %322 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !834
  %323 = load %struct.reg_substr_data** %322, align 8, !dbg !834
  %324 = getelementptr inbounds %struct.reg_substr_data* %323, i32 0, i32 0, !dbg !834
  %325 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %324, i32 0, i64 0, !dbg !834
  %326 = getelementptr inbounds %struct.reg_substr_datum* %325, i32 0, i32 2, !dbg !834
  %327 = load %struct.sv** %326, align 8, !dbg !834
  br label %328, !dbg !834

; <label>:328                                     ; preds = %321, %314
  %329 = phi %struct.sv* [ %320, %314 ], [ %327, %321 ], !dbg !831
  %330 = getelementptr inbounds %struct.sv* %329, i32 0, i32 0, !dbg !836
  %331 = load i8** %330, align 8, !dbg !836
  %332 = bitcast i8* %331 to %struct.xpv*, !dbg !836
  %333 = getelementptr inbounds %struct.xpv* %332, i32 0, i32 0, !dbg !836
  %334 = load i8** %333, align 8, !dbg !836
  %335 = getelementptr inbounds i8* %334, i64 0, !dbg !836
  %336 = load i8* %335, align 1, !dbg !836
  call void @llvm.dbg.value(metadata i8 %336, i64 0, metadata !839, metadata !566), !dbg !840
  %337 = icmp ne i8 %23, 0, !dbg !841
  br i1 %337, label %338, label %385, !dbg !841

; <label>:338                                     ; preds = %328
  br label %339, !dbg !842

; <label>:339                                     ; preds = %376, %338
  %s.10 = phi i8* [ %s.4, %338 ], [ %383, %376 ]
  %340 = icmp ult i8* %s.10, %strend, !dbg !845
  br i1 %340, label %341, label %384, !dbg !842

; <label>:341                                     ; preds = %339
  %342 = load i8* %s.10, align 1, !dbg !846
  %343 = sext i8 %342 to i32, !dbg !846
  %344 = sext i8 %336 to i32, !dbg !849
  %345 = icmp eq i32 %343, %344, !dbg !846
  br i1 %345, label %346, label %376, !dbg !850

; <label>:346                                     ; preds = %341
  %347 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %prog, i8* %s.10), !dbg !851
  %348 = icmp ne i32 %347, 0, !dbg !854
  br i1 %348, label %349, label %350, !dbg !854

; <label>:349                                     ; preds = %346
  br label %1111, !dbg !855

; <label>:350                                     ; preds = %346
  %351 = load i8* %s.10, align 1, !dbg !857
  %352 = zext i8 %351 to i64, !dbg !857
  %353 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %352, !dbg !857
  %354 = load i8* %353, align 1, !dbg !857
  %355 = zext i8 %354 to i32, !dbg !857
  %356 = sext i32 %355 to i64, !dbg !858
  %357 = getelementptr inbounds i8* %s.10, i64 %356, !dbg !858
  call void @llvm.dbg.value(metadata i8* %357, i64 0, metadata !661, metadata !566), !dbg !662
  br label %358, !dbg !859

; <label>:358                                     ; preds = %367, %350
  %s.11 = phi i8* [ %357, %350 ], [ %374, %367 ]
  %359 = icmp ult i8* %s.11, %strend, !dbg !860
  br i1 %359, label %360, label %365, !dbg !860

; <label>:360                                     ; preds = %358
  %361 = load i8* %s.11, align 1, !dbg !861
  %362 = sext i8 %361 to i32, !dbg !861
  %363 = sext i8 %336 to i32, !dbg !862
  %364 = icmp eq i32 %362, %363, !dbg !861
  br label %365

; <label>:365                                     ; preds = %360, %358
  %366 = phi i1 [ false, %358 ], [ %364, %360 ]
  br i1 %366, label %367, label %375, !dbg !863

; <label>:367                                     ; preds = %365
  %368 = load i8* %s.11, align 1, !dbg !865
  %369 = zext i8 %368 to i64, !dbg !865
  %370 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %369, !dbg !865
  %371 = load i8* %370, align 1, !dbg !865
  %372 = zext i8 %371 to i32, !dbg !865
  %373 = sext i32 %372 to i64, !dbg !866
  %374 = getelementptr inbounds i8* %s.11, i64 %373, !dbg !866
  call void @llvm.dbg.value(metadata i8* %374, i64 0, metadata !661, metadata !566), !dbg !662
  br label %358, !dbg !859

; <label>:375                                     ; preds = %365
  br label %376, !dbg !867

; <label>:376                                     ; preds = %375, %341
  %s.12 = phi i8* [ %s.11, %375 ], [ %s.10, %341 ]
  %377 = load i8* %s.12, align 1, !dbg !868
  %378 = zext i8 %377 to i64, !dbg !868
  %379 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %378, !dbg !868
  %380 = load i8* %379, align 1, !dbg !868
  %381 = zext i8 %380 to i32, !dbg !868
  %382 = sext i32 %381 to i64, !dbg !869
  %383 = getelementptr inbounds i8* %s.12, i64 %382, !dbg !869
  call void @llvm.dbg.value(metadata i8* %383, i64 0, metadata !661, metadata !566), !dbg !662
  br label %339, !dbg !842

; <label>:384                                     ; preds = %339
  br label %414, !dbg !870

; <label>:385                                     ; preds = %328
  br label %386, !dbg !871

; <label>:386                                     ; preds = %411, %385
  %s.13 = phi i8* [ %s.4, %385 ], [ %412, %411 ]
  %387 = icmp ult i8* %s.13, %strend, !dbg !873
  br i1 %387, label %388, label %413, !dbg !871

; <label>:388                                     ; preds = %386
  %389 = load i8* %s.13, align 1, !dbg !874
  %390 = sext i8 %389 to i32, !dbg !874
  %391 = sext i8 %336 to i32, !dbg !877
  %392 = icmp eq i32 %390, %391, !dbg !874
  br i1 %392, label %393, label %411, !dbg !878

; <label>:393                                     ; preds = %388
  %394 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %prog, i8* %s.13), !dbg !879
  %395 = icmp ne i32 %394, 0, !dbg !882
  br i1 %395, label %396, label %397, !dbg !882

; <label>:396                                     ; preds = %393
  br label %1111, !dbg !883

; <label>:397                                     ; preds = %393
  %398 = getelementptr inbounds i8* %s.13, i32 1, !dbg !885
  call void @llvm.dbg.value(metadata i8* %398, i64 0, metadata !661, metadata !566), !dbg !662
  br label %399, !dbg !886

; <label>:399                                     ; preds = %408, %397
  %s.14 = phi i8* [ %398, %397 ], [ %409, %408 ]
  %400 = icmp ult i8* %s.14, %strend, !dbg !887
  br i1 %400, label %401, label %406, !dbg !887

; <label>:401                                     ; preds = %399
  %402 = load i8* %s.14, align 1, !dbg !888
  %403 = sext i8 %402 to i32, !dbg !888
  %404 = sext i8 %336 to i32, !dbg !889
  %405 = icmp eq i32 %403, %404, !dbg !888
  br label %406

; <label>:406                                     ; preds = %401, %399
  %407 = phi i1 [ false, %399 ], [ %405, %401 ]
  br i1 %407, label %408, label %410, !dbg !890

; <label>:408                                     ; preds = %406
  %409 = getelementptr inbounds i8* %s.14, i32 1, !dbg !892
  call void @llvm.dbg.value(metadata i8* %409, i64 0, metadata !661, metadata !566), !dbg !662
  br label %399, !dbg !886

; <label>:410                                     ; preds = %406
  br label %411, !dbg !893

; <label>:411                                     ; preds = %410, %388
  %s.15 = phi i8* [ %s.14, %410 ], [ %s.13, %388 ]
  %412 = getelementptr inbounds i8* %s.15, i32 1, !dbg !894
  call void @llvm.dbg.value(metadata i8* %412, i64 0, metadata !661, metadata !566), !dbg !662
  br label %386, !dbg !871

; <label>:413                                     ; preds = %386
  br label %414

; <label>:414                                     ; preds = %413, %384
  br label %1110, !dbg !895

; <label>:415                                     ; preds = %278, %270
  %416 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !896
  %417 = load %struct.reg_substr_data** %416, align 8, !dbg !896
  %418 = getelementptr inbounds %struct.reg_substr_data* %417, i32 0, i32 0, !dbg !896
  %419 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %418, i32 0, i64 0, !dbg !896
  %420 = getelementptr inbounds %struct.reg_substr_datum* %419, i32 0, i32 2, !dbg !896
  %421 = load %struct.sv** %420, align 8, !dbg !896
  %422 = icmp ne %struct.sv* %421, null, !dbg !896
  br i1 %422, label %459, label %423, !dbg !898

; <label>:423                                     ; preds = %415
  %424 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !899
  %425 = load %struct.reg_substr_data** %424, align 8, !dbg !899
  %426 = getelementptr inbounds %struct.reg_substr_data* %425, i32 0, i32 0, !dbg !899
  %427 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %426, i32 0, i64 0, !dbg !899
  %428 = getelementptr inbounds %struct.reg_substr_datum* %427, i32 0, i32 3, !dbg !899
  %429 = load %struct.sv** %428, align 8, !dbg !899
  %430 = icmp ne %struct.sv* %429, null, !dbg !899
  br i1 %430, label %459, label %431, !dbg !898

; <label>:431                                     ; preds = %423
  %432 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !900
  %433 = load %struct.reg_substr_data** %432, align 8, !dbg !900
  %434 = getelementptr inbounds %struct.reg_substr_data* %433, i32 0, i32 0, !dbg !900
  %435 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %434, i32 0, i64 1, !dbg !900
  %436 = getelementptr inbounds %struct.reg_substr_datum* %435, i32 0, i32 2, !dbg !900
  %437 = load %struct.sv** %436, align 8, !dbg !900
  %438 = icmp ne %struct.sv* %437, null, !dbg !900
  br i1 %438, label %447, label %439, !dbg !898

; <label>:439                                     ; preds = %431
  %440 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !901
  %441 = load %struct.reg_substr_data** %440, align 8, !dbg !901
  %442 = getelementptr inbounds %struct.reg_substr_data* %441, i32 0, i32 0, !dbg !901
  %443 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %442, i32 0, i64 1, !dbg !901
  %444 = getelementptr inbounds %struct.reg_substr_datum* %443, i32 0, i32 3, !dbg !901
  %445 = load %struct.sv** %444, align 8, !dbg !901
  %446 = icmp ne %struct.sv* %445, null, !dbg !901
  br i1 %446, label %447, label %851, !dbg !898

; <label>:447                                     ; preds = %439, %431
  %448 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !902
  %449 = load %struct.reg_substr_data** %448, align 8, !dbg !902
  %450 = getelementptr inbounds %struct.reg_substr_data* %449, i32 0, i32 0, !dbg !902
  %451 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %450, i32 0, i64 1, !dbg !902
  %452 = getelementptr inbounds %struct.reg_substr_datum* %451, i32 0, i32 1, !dbg !902
  %453 = load i32* %452, align 4, !dbg !902
  %454 = sext i32 %453 to i64, !dbg !902
  %455 = ptrtoint i8* %strend to i64, !dbg !903
  %456 = ptrtoint i8* %s.4 to i64, !dbg !903
  %457 = sub i64 %455, %456, !dbg !903
  %458 = icmp slt i64 %454, %457, !dbg !902
  br i1 %458, label %459, label %851, !dbg !898

; <label>:459                                     ; preds = %447, %423, %415
  %460 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !904
  %461 = load %struct.reg_substr_data** %460, align 8, !dbg !904
  %462 = getelementptr inbounds %struct.reg_substr_data* %461, i32 0, i32 0, !dbg !904
  %463 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %462, i32 0, i64 0, !dbg !904
  %464 = getelementptr inbounds %struct.reg_substr_datum* %463, i32 0, i32 2, !dbg !904
  %465 = load %struct.sv** %464, align 8, !dbg !904
  %466 = icmp ne %struct.sv* %465, null, !dbg !907
  br i1 %466, label %475, label %467, !dbg !907

; <label>:467                                     ; preds = %459
  %468 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !908
  %469 = load %struct.reg_substr_data** %468, align 8, !dbg !908
  %470 = getelementptr inbounds %struct.reg_substr_data* %469, i32 0, i32 0, !dbg !908
  %471 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %470, i32 0, i64 0, !dbg !908
  %472 = getelementptr inbounds %struct.reg_substr_datum* %471, i32 0, i32 3, !dbg !908
  %473 = load %struct.sv** %472, align 8, !dbg !908
  %474 = icmp ne %struct.sv* %473, null, !dbg !907
  br i1 %474, label %475, label %528, !dbg !907

; <label>:475                                     ; preds = %467, %459
  %476 = sext i8 %23 to i32, !dbg !910
  %477 = icmp ne i32 %476, 0, !dbg !913
  br i1 %477, label %478, label %486, !dbg !913

; <label>:478                                     ; preds = %475
  %479 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !914
  %480 = load %struct.reg_substr_data** %479, align 8, !dbg !914
  %481 = getelementptr inbounds %struct.reg_substr_data* %480, i32 0, i32 0, !dbg !914
  %482 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %481, i32 0, i64 0, !dbg !914
  %483 = getelementptr inbounds %struct.reg_substr_datum* %482, i32 0, i32 3, !dbg !914
  %484 = load %struct.sv** %483, align 8, !dbg !914
  %485 = icmp ne %struct.sv* %484, null, !dbg !913
  br i1 %485, label %503, label %494, !dbg !913

; <label>:486                                     ; preds = %475
  %487 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !916
  %488 = load %struct.reg_substr_data** %487, align 8, !dbg !916
  %489 = getelementptr inbounds %struct.reg_substr_data* %488, i32 0, i32 0, !dbg !916
  %490 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %489, i32 0, i64 0, !dbg !916
  %491 = getelementptr inbounds %struct.reg_substr_datum* %490, i32 0, i32 2, !dbg !916
  %492 = load %struct.sv** %491, align 8, !dbg !916
  %493 = icmp ne %struct.sv* %492, null, !dbg !913
  br i1 %493, label %503, label %494, !dbg !913

; <label>:494                                     ; preds = %486, %478
  %495 = sext i8 %23 to i32, !dbg !918
  %496 = icmp ne i32 %495, 0, !dbg !918
  br i1 %496, label %497, label %499, !dbg !918

; <label>:497                                     ; preds = %494
  %498 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_utf8_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !919
  br label %501, !dbg !918

; <label>:499                                     ; preds = %494
  %500 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_byte_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !920
  br label %501, !dbg !918

; <label>:501                                     ; preds = %499, %497
  %502 = phi i32 [ %498, %497 ], [ %500, %499 ], !dbg !918
  br label %503, !dbg !921

; <label>:503                                     ; preds = %501, %486, %478
  %504 = sext i8 %23 to i32, !dbg !924
  %505 = icmp ne i32 %504, 0, !dbg !924
  br i1 %505, label %506, label %513, !dbg !924

; <label>:506                                     ; preds = %503
  %507 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !925
  %508 = load %struct.reg_substr_data** %507, align 8, !dbg !925
  %509 = getelementptr inbounds %struct.reg_substr_data* %508, i32 0, i32 0, !dbg !925
  %510 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %509, i32 0, i64 0, !dbg !925
  %511 = getelementptr inbounds %struct.reg_substr_datum* %510, i32 0, i32 3, !dbg !925
  %512 = load %struct.sv** %511, align 8, !dbg !925
  br label %520, !dbg !924

; <label>:513                                     ; preds = %503
  %514 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !927
  %515 = load %struct.reg_substr_data** %514, align 8, !dbg !927
  %516 = getelementptr inbounds %struct.reg_substr_data* %515, i32 0, i32 0, !dbg !927
  %517 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %516, i32 0, i64 0, !dbg !927
  %518 = getelementptr inbounds %struct.reg_substr_datum* %517, i32 0, i32 2, !dbg !927
  %519 = load %struct.sv** %518, align 8, !dbg !927
  br label %520, !dbg !924

; <label>:520                                     ; preds = %513, %506
  %521 = phi %struct.sv* [ %512, %506 ], [ %519, %513 ], !dbg !924
  call void @llvm.dbg.value(metadata %struct.sv* %521, i64 0, metadata !929, metadata !566), !dbg !930
  %522 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !931
  %523 = load %struct.reg_substr_data** %522, align 8, !dbg !931
  %524 = getelementptr inbounds %struct.reg_substr_data* %523, i32 0, i32 0, !dbg !931
  %525 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %524, i32 0, i64 0, !dbg !931
  %526 = getelementptr inbounds %struct.reg_substr_datum* %525, i32 0, i32 0, !dbg !931
  %527 = load i32* %526, align 4, !dbg !931
  call void @llvm.dbg.value(metadata i32 %527, i64 0, metadata !932, metadata !566), !dbg !933
  call void @llvm.dbg.value(metadata i32 %527, i64 0, metadata !934, metadata !566), !dbg !935
  br label %587, !dbg !936

; <label>:528                                     ; preds = %467
  %529 = sext i8 %23 to i32, !dbg !937
  %530 = icmp ne i32 %529, 0, !dbg !940
  br i1 %530, label %531, label %539, !dbg !940

; <label>:531                                     ; preds = %528
  %532 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !941
  %533 = load %struct.reg_substr_data** %532, align 8, !dbg !941
  %534 = getelementptr inbounds %struct.reg_substr_data* %533, i32 0, i32 0, !dbg !941
  %535 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %534, i32 0, i64 1, !dbg !941
  %536 = getelementptr inbounds %struct.reg_substr_datum* %535, i32 0, i32 3, !dbg !941
  %537 = load %struct.sv** %536, align 8, !dbg !941
  %538 = icmp ne %struct.sv* %537, null, !dbg !940
  br i1 %538, label %556, label %547, !dbg !940

; <label>:539                                     ; preds = %528
  %540 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !943
  %541 = load %struct.reg_substr_data** %540, align 8, !dbg !943
  %542 = getelementptr inbounds %struct.reg_substr_data* %541, i32 0, i32 0, !dbg !943
  %543 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %542, i32 0, i64 1, !dbg !943
  %544 = getelementptr inbounds %struct.reg_substr_datum* %543, i32 0, i32 2, !dbg !943
  %545 = load %struct.sv** %544, align 8, !dbg !943
  %546 = icmp ne %struct.sv* %545, null, !dbg !940
  br i1 %546, label %556, label %547, !dbg !940

; <label>:547                                     ; preds = %539, %531
  %548 = sext i8 %23 to i32, !dbg !945
  %549 = icmp ne i32 %548, 0, !dbg !945
  br i1 %549, label %550, label %552, !dbg !945

; <label>:550                                     ; preds = %547
  %551 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_utf8_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !946
  br label %554, !dbg !945

; <label>:552                                     ; preds = %547
  %553 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_byte_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !947
  br label %554, !dbg !945

; <label>:554                                     ; preds = %552, %550
  %555 = phi i32 [ %551, %550 ], [ %553, %552 ], !dbg !945
  br label %556, !dbg !948

; <label>:556                                     ; preds = %554, %539, %531
  %557 = sext i8 %23 to i32, !dbg !951
  %558 = icmp ne i32 %557, 0, !dbg !951
  br i1 %558, label %559, label %566, !dbg !951

; <label>:559                                     ; preds = %556
  %560 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !952
  %561 = load %struct.reg_substr_data** %560, align 8, !dbg !952
  %562 = getelementptr inbounds %struct.reg_substr_data* %561, i32 0, i32 0, !dbg !952
  %563 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %562, i32 0, i64 1, !dbg !952
  %564 = getelementptr inbounds %struct.reg_substr_datum* %563, i32 0, i32 3, !dbg !952
  %565 = load %struct.sv** %564, align 8, !dbg !952
  br label %573, !dbg !951

; <label>:566                                     ; preds = %556
  %567 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !954
  %568 = load %struct.reg_substr_data** %567, align 8, !dbg !954
  %569 = getelementptr inbounds %struct.reg_substr_data* %568, i32 0, i32 0, !dbg !954
  %570 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %569, i32 0, i64 1, !dbg !954
  %571 = getelementptr inbounds %struct.reg_substr_datum* %570, i32 0, i32 2, !dbg !954
  %572 = load %struct.sv** %571, align 8, !dbg !954
  br label %573, !dbg !951

; <label>:573                                     ; preds = %566, %559
  %574 = phi %struct.sv* [ %565, %559 ], [ %572, %566 ], !dbg !951
  call void @llvm.dbg.value(metadata %struct.sv* %574, i64 0, metadata !929, metadata !566), !dbg !930
  %575 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !956
  %576 = load %struct.reg_substr_data** %575, align 8, !dbg !956
  %577 = getelementptr inbounds %struct.reg_substr_data* %576, i32 0, i32 0, !dbg !956
  %578 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %577, i32 0, i64 1, !dbg !956
  %579 = getelementptr inbounds %struct.reg_substr_datum* %578, i32 0, i32 1, !dbg !956
  %580 = load i32* %579, align 4, !dbg !956
  call void @llvm.dbg.value(metadata i32 %580, i64 0, metadata !934, metadata !566), !dbg !935
  %581 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !957
  %582 = load %struct.reg_substr_data** %581, align 8, !dbg !957
  %583 = getelementptr inbounds %struct.reg_substr_data* %582, i32 0, i32 0, !dbg !957
  %584 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %583, i32 0, i64 1, !dbg !957
  %585 = getelementptr inbounds %struct.reg_substr_datum* %584, i32 0, i32 0, !dbg !957
  %586 = load i32* %585, align 4, !dbg !957
  call void @llvm.dbg.value(metadata i32 %586, i64 0, metadata !932, metadata !566), !dbg !933
  br label %587

; <label>:587                                     ; preds = %573, %520
  %must.0 = phi %struct.sv* [ %521, %520 ], [ %574, %573 ]
  %back_max.0 = phi i32 [ %527, %520 ], [ %580, %573 ]
  %back_min.0 = phi i32 [ %527, %520 ], [ %586, %573 ]
  %588 = icmp eq %struct.sv* %must.0, @PL_sv_undef, !dbg !958
  br i1 %588, label %589, label %590, !dbg !960

; <label>:589                                     ; preds = %587
  br label %1188, !dbg !961

; <label>:590                                     ; preds = %587
  %591 = load i8* @PL_reg_match_utf8, align 1, !dbg !962
  %592 = sext i8 %591 to i32, !dbg !962
  %593 = icmp ne i32 %592, 0, !dbg !962
  br i1 %593, label %594, label %621, !dbg !962

; <label>:594                                     ; preds = %590
  %595 = sext i8 %23 to i32, !dbg !963
  %596 = icmp ne i32 %595, 0, !dbg !963
  br i1 %596, label %597, label %599, !dbg !963

; <label>:597                                     ; preds = %594
  %598 = call i64 @Perl_sv_len_utf8(%struct.sv* %must.0), !dbg !965
  br label %605, !dbg !965

; <label>:599                                     ; preds = %594
  %600 = getelementptr inbounds %struct.sv* %must.0, i32 0, i32 0, !dbg !967
  %601 = load i8** %600, align 8, !dbg !967
  %602 = bitcast i8* %601 to %struct.xpv*, !dbg !967
  %603 = getelementptr inbounds %struct.xpv* %602, i32 0, i32 1, !dbg !967
  %604 = load i64* %603, align 8, !dbg !967
  br label %605, !dbg !967

; <label>:605                                     ; preds = %599, %597
  %606 = phi i64 [ %598, %597 ], [ %604, %599 ], !dbg !962
  %607 = getelementptr inbounds %struct.sv* %must.0, i32 0, i32 2, !dbg !969
  %608 = load i32* %607, align 4, !dbg !969
  %609 = and i32 %608, 1073741824, !dbg !969
  %610 = icmp ne i32 %609, 0, !dbg !969
  %611 = zext i1 %610 to i32, !dbg !969
  %612 = sext i32 %611 to i64, !dbg !969
  %613 = sub i64 %606, %612, !dbg !969
  %614 = sext i32 %back_min.0 to i64, !dbg !969
  %615 = add i64 %613, %614, !dbg !969
  %616 = trunc i64 %615 to i32, !dbg !969
  %617 = sub nsw i32 0, %616, !dbg !969
  %618 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %strend, i32 %617, i8* %strbeg), !dbg !969
  %619 = sext i32 %618 to i64, !dbg !969
  %620 = inttoptr i64 %619 to i8*, !dbg !969
  br label %647, !dbg !969

; <label>:621                                     ; preds = %590
  %622 = sext i8 %23 to i32, !dbg !972
  %623 = icmp ne i32 %622, 0, !dbg !972
  br i1 %623, label %624, label %626, !dbg !972

; <label>:624                                     ; preds = %621
  %625 = call i64 @Perl_sv_len_utf8(%struct.sv* %must.0), !dbg !974
  br label %632, !dbg !974

; <label>:626                                     ; preds = %621
  %627 = getelementptr inbounds %struct.sv* %must.0, i32 0, i32 0, !dbg !976
  %628 = load i8** %627, align 8, !dbg !976
  %629 = bitcast i8* %628 to %struct.xpv*, !dbg !976
  %630 = getelementptr inbounds %struct.xpv* %629, i32 0, i32 1, !dbg !976
  %631 = load i64* %630, align 8, !dbg !976
  br label %632, !dbg !976

; <label>:632                                     ; preds = %626, %624
  %633 = phi i64 [ %625, %624 ], [ %631, %626 ], !dbg !962
  %634 = getelementptr inbounds %struct.sv* %must.0, i32 0, i32 2, !dbg !978
  %635 = load i32* %634, align 4, !dbg !978
  %636 = and i32 %635, 1073741824, !dbg !978
  %637 = icmp ne i32 %636, 0, !dbg !978
  %638 = zext i1 %637 to i32, !dbg !978
  %639 = sext i32 %638 to i64, !dbg !978
  %640 = sub i64 %633, %639, !dbg !978
  %641 = sext i32 %back_min.0 to i64, !dbg !978
  %642 = add i64 %640, %641, !dbg !978
  %643 = trunc i64 %642 to i32, !dbg !978
  %644 = sub nsw i32 0, %643, !dbg !978
  %645 = sext i32 %644 to i64, !dbg !978
  %646 = getelementptr inbounds i8* %strend, i64 %645, !dbg !978
  br label %647, !dbg !978

; <label>:647                                     ; preds = %632, %605
  %648 = phi i8* [ %620, %605 ], [ %646, %632 ], !dbg !962
  call void @llvm.dbg.value(metadata i8* %648, i64 0, metadata !981, metadata !566), !dbg !982
  %649 = load i8** @PL_bostr, align 8, !dbg !983
  %650 = icmp ugt i8* %s.4, %649, !dbg !985
  br i1 %650, label %651, label %663, !dbg !986

; <label>:651                                     ; preds = %647
  %652 = load i8* @PL_reg_match_utf8, align 1, !dbg !987
  %653 = sext i8 %652 to i32, !dbg !987
  %654 = icmp ne i32 %653, 0, !dbg !987
  br i1 %654, label %655, label %659, !dbg !987

; <label>:655                                     ; preds = %651
  %656 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %s.4, i32 -1), !dbg !988
  %657 = sext i32 %656 to i64, !dbg !988
  %658 = inttoptr i64 %657 to i8*, !dbg !988
  br label %661, !dbg !988

; <label>:659                                     ; preds = %651
  %660 = getelementptr inbounds i8* %s.4, i64 -1, !dbg !990
  br label %661, !dbg !990

; <label>:661                                     ; preds = %659, %655
  %662 = phi i8* [ %658, %655 ], [ %660, %659 ], !dbg !987
  call void @llvm.dbg.value(metadata i8* %662, i64 0, metadata !992, metadata !566), !dbg !993
  br label %665, !dbg !994

; <label>:663                                     ; preds = %647
  %664 = getelementptr inbounds i8* %s.4, i64 -1, !dbg !997
  call void @llvm.dbg.value(metadata i8* %664, i64 0, metadata !992, metadata !566), !dbg !993
  br label %665

; <label>:665                                     ; preds = %663, %661
  %last1.0 = phi i8* [ %662, %661 ], [ %664, %663 ]
  store i32 -1, i32* %scream_pos, align 4, !dbg !998
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !601, metadata !566), !dbg !602
  %666 = load i8* @PL_reg_match_utf8, align 1, !dbg !999
  %667 = sext i8 %666 to i32, !dbg !999
  %668 = icmp ne i32 %667, 0, !dbg !999
  br i1 %668, label %669, label %674, !dbg !999

; <label>:669                                     ; preds = %665
  %670 = sub nsw i32 0, 0, !dbg !1000
  %671 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %strend, i32 %670), !dbg !1000
  %672 = sext i32 %671 to i64, !dbg !1000
  %673 = inttoptr i64 %672 to i8*, !dbg !1000
  br label %678, !dbg !1000

; <label>:674                                     ; preds = %665
  %675 = sub nsw i32 0, 0, !dbg !1001
  %676 = sext i32 %675 to i64, !dbg !1001
  %677 = getelementptr inbounds i8* %strend, i64 %676, !dbg !1001
  br label %678, !dbg !1001

; <label>:678                                     ; preds = %674, %669
  %679 = phi i8* [ %673, %669 ], [ %677, %674 ], !dbg !999
  call void @llvm.dbg.value(metadata i8* %679, i64 0, metadata !587, metadata !566), !dbg !588
  br label %680, !dbg !1002

; <label>:680                                     ; preds = %849, %678
  %s.16 = phi i8* [ %s.4, %678 ], [ %s.23, %849 ]
  %last1.1 = phi i8* [ %last1.0, %678 ], [ %last1.2, %849 ]
  %681 = icmp ule i8* %s.16, %648, !dbg !1003
  br i1 %681, label %682, label %723, !dbg !1004

; <label>:682                                     ; preds = %680
  %683 = and i32 %flags, 4, !dbg !1005
  %684 = icmp ne i32 %683, 0, !dbg !1006
  br i1 %684, label %685, label %703, !dbg !1006

; <label>:685                                     ; preds = %682
  %686 = load i8* @PL_reg_match_utf8, align 1, !dbg !1007
  %687 = sext i8 %686 to i32, !dbg !1007
  %688 = icmp ne i32 %687, 0, !dbg !1007
  br i1 %688, label %689, label %693, !dbg !1007

; <label>:689                                     ; preds = %685
  %690 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %s.16, i32 %back_min.0, i8* %679), !dbg !1008
  %691 = sext i32 %690 to i64, !dbg !1008
  %692 = inttoptr i64 %691 to i8*, !dbg !1008
  br label %696, !dbg !1008

; <label>:693                                     ; preds = %685
  %694 = sext i32 %back_min.0 to i64, !dbg !1009
  %695 = getelementptr inbounds i8* %s.16, i64 %694, !dbg !1009
  br label %696, !dbg !1009

; <label>:696                                     ; preds = %693, %689
  %697 = phi i8* [ %692, %689 ], [ %695, %693 ], !dbg !1007
  %698 = ptrtoint i8* %697 to i64, !dbg !1007
  %699 = ptrtoint i8* %strbeg to i64, !dbg !1007
  %700 = sub i64 %698, %699, !dbg !1007
  %701 = trunc i64 %700 to i32, !dbg !1007
  %702 = call i8* @Perl_screaminstr(%struct.sv* %sv, %struct.sv* %must.0, i32 %701, i32 0, i32* %scream_pos, i32 0), !dbg !1010
  call void @llvm.dbg.value(metadata i8* %702, i64 0, metadata !661, metadata !566), !dbg !662
  br label %720, !dbg !1006

; <label>:703                                     ; preds = %682
  %704 = load i8* @PL_reg_match_utf8, align 1, !dbg !1011
  %705 = sext i8 %704 to i32, !dbg !1011
  %706 = icmp ne i32 %705, 0, !dbg !1011
  br i1 %706, label %707, label %711, !dbg !1011

; <label>:707                                     ; preds = %703
  %708 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %s.16, i32 %back_min.0, i8* %679), !dbg !1012
  %709 = sext i32 %708 to i64, !dbg !1012
  %710 = inttoptr i64 %709 to i8*, !dbg !1012
  br label %714, !dbg !1012

; <label>:711                                     ; preds = %703
  %712 = sext i32 %back_min.0 to i64, !dbg !1013
  %713 = getelementptr inbounds i8* %s.16, i64 %712, !dbg !1013
  br label %714, !dbg !1013

; <label>:714                                     ; preds = %711, %707
  %715 = phi i8* [ %710, %707 ], [ %713, %711 ], !dbg !1011
  %716 = load i32* @PL_multiline, align 4, !dbg !1014
  %717 = icmp ne i32 %716, 0, !dbg !1014
  %718 = select i1 %717, i32 1, i32 0, !dbg !1014
  %719 = call i8* @Perl_fbm_instr(i8* %715, i8* %679, %struct.sv* %must.0, i32 %718), !dbg !1015
  call void @llvm.dbg.value(metadata i8* %719, i64 0, metadata !661, metadata !566), !dbg !662
  br label %720, !dbg !1006

; <label>:720                                     ; preds = %714, %696
  %s.17 = phi i8* [ %702, %696 ], [ %719, %714 ]
  %721 = phi i8* [ %702, %696 ], [ %719, %714 ], !dbg !1006
  %722 = icmp ne i8* %721, null, !dbg !1004
  br label %723

; <label>:723                                     ; preds = %720, %680
  %s.18 = phi i8* [ %s.17, %720 ], [ %s.16, %680 ]
  %724 = phi i1 [ false, %680 ], [ %722, %720 ]
  br i1 %724, label %725, label %850, !dbg !1016

; <label>:725                                     ; preds = %723
  %726 = and i32 %flags, 4, !dbg !1017
  %727 = icmp ne i32 %726, 0, !dbg !1020
  br i1 %727, label %728, label %743, !dbg !1020

; <label>:728                                     ; preds = %725
  %729 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1021
  %730 = load i32* %729, align 4, !dbg !1021
  %731 = and i32 %730, 262144, !dbg !1021
  %732 = icmp ne i32 %731, 0, !dbg !1020
  br i1 %732, label %733, label %743, !dbg !1020

; <label>:733                                     ; preds = %728
  %734 = getelementptr inbounds %struct.sv* %sv, i32 0, i32 0, !dbg !1023
  %735 = load i8** %734, align 8, !dbg !1023
  %736 = bitcast i8* %735 to %struct.xpv*, !dbg !1023
  %737 = getelementptr inbounds %struct.xpv* %736, i32 0, i32 0, !dbg !1023
  %738 = load i8** %737, align 8, !dbg !1023
  %739 = ptrtoint i8* %s.18 to i64, !dbg !1024
  %740 = ptrtoint i8* %738 to i64, !dbg !1024
  %741 = sub i64 %739, %740, !dbg !1024
  %742 = getelementptr inbounds i8* %strbeg, i64 %741, !dbg !1025
  call void @llvm.dbg.value(metadata i8* %742, i64 0, metadata !661, metadata !566), !dbg !662
  br label %743, !dbg !1026

; <label>:743                                     ; preds = %733, %728, %725
  %s.19 = phi i8* [ %742, %733 ], [ %s.18, %728 ], [ %s.18, %725 ]
  %744 = load i8* @PL_reg_match_utf8, align 1, !dbg !1027
  %745 = sext i8 %744 to i32, !dbg !1027
  %746 = icmp ne i32 %745, 0, !dbg !1027
  br i1 %746, label %747, label %752, !dbg !1027

; <label>:747                                     ; preds = %743
  %748 = sub nsw i32 0, %back_max.0, !dbg !1029
  %749 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %s.19, i32 %748), !dbg !1029
  %750 = sext i32 %749 to i64, !dbg !1029
  %751 = inttoptr i64 %750 to i8*, !dbg !1029
  br label %756, !dbg !1029

; <label>:752                                     ; preds = %743
  %753 = sub nsw i32 0, %back_max.0, !dbg !1031
  %754 = sext i32 %753 to i64, !dbg !1031
  %755 = getelementptr inbounds i8* %s.19, i64 %754, !dbg !1031
  br label %756, !dbg !1031

; <label>:756                                     ; preds = %752, %747
  %757 = phi i8* [ %751, %747 ], [ %755, %752 ], !dbg !1027
  %758 = icmp ugt i8* %757, %last1.1, !dbg !1027
  br i1 %758, label %759, label %788, !dbg !1033

; <label>:759                                     ; preds = %756
  %760 = load i8* @PL_reg_match_utf8, align 1, !dbg !1034
  %761 = sext i8 %760 to i32, !dbg !1034
  %762 = icmp ne i32 %761, 0, !dbg !1034
  br i1 %762, label %763, label %768, !dbg !1034

; <label>:763                                     ; preds = %759
  %764 = sub nsw i32 0, %back_min.0, !dbg !1036
  %765 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %s.19, i32 %764), !dbg !1036
  %766 = sext i32 %765 to i64, !dbg !1036
  %767 = inttoptr i64 %766 to i8*, !dbg !1036
  br label %772, !dbg !1036

; <label>:768                                     ; preds = %759
  %769 = sub nsw i32 0, %back_min.0, !dbg !1038
  %770 = sext i32 %769 to i64, !dbg !1038
  %771 = getelementptr inbounds i8* %s.19, i64 %770, !dbg !1038
  br label %772, !dbg !1038

; <label>:772                                     ; preds = %768, %763
  %773 = phi i8* [ %767, %763 ], [ %771, %768 ], !dbg !1034
  call void @llvm.dbg.value(metadata i8* %773, i64 0, metadata !992, metadata !566), !dbg !993
  %774 = load i8* @PL_reg_match_utf8, align 1, !dbg !1040
  %775 = sext i8 %774 to i32, !dbg !1040
  %776 = icmp ne i32 %775, 0, !dbg !1040
  br i1 %776, label %777, label %782, !dbg !1040

; <label>:777                                     ; preds = %772
  %778 = sub nsw i32 0, %back_max.0, !dbg !1041
  %779 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %s.19, i32 %778), !dbg !1041
  %780 = sext i32 %779 to i64, !dbg !1041
  %781 = inttoptr i64 %780 to i8*, !dbg !1041
  br label %786, !dbg !1041

; <label>:782                                     ; preds = %772
  %783 = sub nsw i32 0, %back_max.0, !dbg !1042
  %784 = sext i32 %783 to i64, !dbg !1042
  %785 = getelementptr inbounds i8* %s.19, i64 %784, !dbg !1042
  br label %786, !dbg !1042

; <label>:786                                     ; preds = %782, %777
  %787 = phi i8* [ %781, %777 ], [ %785, %782 ], !dbg !1040
  call void @llvm.dbg.value(metadata i8* %787, i64 0, metadata !661, metadata !566), !dbg !662
  br label %821, !dbg !1043

; <label>:788                                     ; preds = %756
  %789 = load i8** @PL_bostr, align 8, !dbg !1044
  %790 = icmp uge i8* %last1.1, %789, !dbg !1046
  br i1 %790, label %791, label %803, !dbg !1047

; <label>:791                                     ; preds = %788
  %792 = load i8* @PL_reg_match_utf8, align 1, !dbg !1048
  %793 = sext i8 %792 to i32, !dbg !1048
  %794 = icmp ne i32 %793, 0, !dbg !1048
  br i1 %794, label %795, label %799, !dbg !1048

; <label>:795                                     ; preds = %791
  %796 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %last1.1, i32 1), !dbg !1050
  %797 = sext i32 %796 to i64, !dbg !1050
  %798 = inttoptr i64 %797 to i8*, !dbg !1050
  br label %801, !dbg !1050

; <label>:799                                     ; preds = %791
  %800 = getelementptr inbounds i8* %last1.1, i64 1, !dbg !1052
  br label %801, !dbg !1052

; <label>:801                                     ; preds = %799, %795
  %802 = phi i8* [ %798, %795 ], [ %800, %799 ], !dbg !1054
  br label %805, !dbg !1055

; <label>:803                                     ; preds = %788
  %804 = getelementptr inbounds i8* %last1.1, i64 1, !dbg !1058
  br label %805, !dbg !1047

; <label>:805                                     ; preds = %803, %801
  %806 = phi i8* [ %802, %801 ], [ %804, %803 ], !dbg !1047
  call void @llvm.dbg.value(metadata i8* %806, i64 0, metadata !1060, metadata !566), !dbg !1061
  %807 = load i8* @PL_reg_match_utf8, align 1, !dbg !1062
  %808 = sext i8 %807 to i32, !dbg !1062
  %809 = icmp ne i32 %808, 0, !dbg !1062
  br i1 %809, label %810, label %815, !dbg !1062

; <label>:810                                     ; preds = %805
  %811 = sub nsw i32 0, %back_min.0, !dbg !1063
  %812 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %s.19, i32 %811), !dbg !1063
  %813 = sext i32 %812 to i64, !dbg !1063
  %814 = inttoptr i64 %813 to i8*, !dbg !1063
  br label %819, !dbg !1063

; <label>:815                                     ; preds = %805
  %816 = sub nsw i32 0, %back_min.0, !dbg !1064
  %817 = sext i32 %816 to i64, !dbg !1064
  %818 = getelementptr inbounds i8* %s.19, i64 %817, !dbg !1064
  br label %819, !dbg !1064

; <label>:819                                     ; preds = %815, %810
  %820 = phi i8* [ %814, %810 ], [ %818, %815 ], !dbg !1062
  call void @llvm.dbg.value(metadata i8* %820, i64 0, metadata !992, metadata !566), !dbg !993
  call void @llvm.dbg.value(metadata i8* %806, i64 0, metadata !661, metadata !566), !dbg !662
  br label %821

; <label>:821                                     ; preds = %819, %786
  %s.20 = phi i8* [ %787, %786 ], [ %806, %819 ]
  %last1.2 = phi i8* [ %773, %786 ], [ %820, %819 ]
  %822 = icmp ne i8 %23, 0, !dbg !1065
  br i1 %822, label %823, label %839, !dbg !1065

; <label>:823                                     ; preds = %821
  br label %824, !dbg !1066

; <label>:824                                     ; preds = %830, %823
  %s.21 = phi i8* [ %s.20, %823 ], [ %837, %830 ]
  %825 = icmp ule i8* %s.21, %last1.2, !dbg !1069
  br i1 %825, label %826, label %838, !dbg !1066

; <label>:826                                     ; preds = %824
  %827 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %prog, i8* %s.21), !dbg !1070
  %828 = icmp ne i32 %827, 0, !dbg !1073
  br i1 %828, label %829, label %830, !dbg !1073

; <label>:829                                     ; preds = %826
  br label %1111, !dbg !1074

; <label>:830                                     ; preds = %826
  %831 = load i8* %s.21, align 1, !dbg !1075
  %832 = zext i8 %831 to i64, !dbg !1075
  %833 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %832, !dbg !1075
  %834 = load i8* %833, align 1, !dbg !1075
  %835 = zext i8 %834 to i32, !dbg !1075
  %836 = sext i32 %835 to i64, !dbg !1076
  %837 = getelementptr inbounds i8* %s.21, i64 %836, !dbg !1076
  call void @llvm.dbg.value(metadata i8* %837, i64 0, metadata !661, metadata !566), !dbg !662
  br label %824, !dbg !1066

; <label>:838                                     ; preds = %824
  br label %849, !dbg !1077

; <label>:839                                     ; preds = %821
  br label %840, !dbg !1078

; <label>:840                                     ; preds = %846, %839
  %s.22 = phi i8* [ %s.20, %839 ], [ %847, %846 ]
  %841 = icmp ule i8* %s.22, %last1.2, !dbg !1080
  br i1 %841, label %842, label %848, !dbg !1078

; <label>:842                                     ; preds = %840
  %843 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %prog, i8* %s.22), !dbg !1081
  %844 = icmp ne i32 %843, 0, !dbg !1084
  br i1 %844, label %845, label %846, !dbg !1084

; <label>:845                                     ; preds = %842
  br label %1111, !dbg !1085

; <label>:846                                     ; preds = %842
  %847 = getelementptr inbounds i8* %s.22, i32 1, !dbg !1086
  call void @llvm.dbg.value(metadata i8* %847, i64 0, metadata !661, metadata !566), !dbg !662
  br label %840, !dbg !1078

; <label>:848                                     ; preds = %840
  br label %849

; <label>:849                                     ; preds = %848, %838
  %s.23 = phi i8* [ %s.21, %838 ], [ %s.22, %848 ]
  br label %680, !dbg !1002

; <label>:850                                     ; preds = %723
  br label %1188, !dbg !1087

; <label>:851                                     ; preds = %447, %439
  %852 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 2, !dbg !1088
  %853 = load %struct.regnode** %852, align 8, !dbg !1088
  call void @llvm.dbg.value(metadata %struct.regnode* %853, i64 0, metadata !1090, metadata !566), !dbg !1091
  %854 = icmp ne %struct.regnode* %853, null, !dbg !1092
  br i1 %854, label %855, label %893, !dbg !1092

; <label>:855                                     ; preds = %851
  %856 = icmp ne i32 %43, 0, !dbg !1093
  br i1 %856, label %857, label %888, !dbg !1093

; <label>:857                                     ; preds = %855
  %858 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 2, !dbg !1095
  %859 = load %struct.regnode** %858, align 8, !dbg !1095
  %860 = getelementptr inbounds %struct.regnode* %859, i32 0, i32 1, !dbg !1095
  %861 = load i8* %860, align 1, !dbg !1095
  %862 = zext i8 %861 to i32, !dbg !1098
  call void @llvm.dbg.value(metadata i32 %862, i64 0, metadata !1099, metadata !566), !dbg !1100
  %863 = sext i32 %862 to i64, !dbg !1101
  %864 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %863, !dbg !1101
  %865 = load i8* %864, align 1, !dbg !1101
  %866 = zext i8 %865 to i32, !dbg !1101
  %867 = icmp ne i32 %866, 33, !dbg !1101
  br i1 %867, label %868, label %887, !dbg !1103

; <label>:868                                     ; preds = %857
  %869 = icmp ne i32 %862, 16, !dbg !1104
  br i1 %869, label %870, label %887, !dbg !1103

; <label>:870                                     ; preds = %868
  %871 = load i8* @PL_reg_match_utf8, align 1, !dbg !1106
  %872 = sext i8 %871 to i32, !dbg !1106
  %873 = icmp ne i32 %872, 0, !dbg !1106
  br i1 %873, label %874, label %880, !dbg !1106

; <label>:874                                     ; preds = %870
  %875 = sub nsw i32 %43, 1, !dbg !1107
  %876 = sub nsw i32 0, %875, !dbg !1107
  %877 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %strend, i32 %876), !dbg !1107
  %878 = sext i32 %877 to i64, !dbg !1107
  %879 = inttoptr i64 %878 to i8*, !dbg !1107
  br label %885, !dbg !1107

; <label>:880                                     ; preds = %870
  %881 = sub nsw i32 %43, 1, !dbg !1108
  %882 = sub nsw i32 0, %881, !dbg !1108
  %883 = sext i32 %882 to i64, !dbg !1108
  %884 = getelementptr inbounds i8* %strend, i64 %883, !dbg !1108
  br label %885, !dbg !1108

; <label>:885                                     ; preds = %880, %874
  %886 = phi i8* [ %879, %874 ], [ %884, %880 ], !dbg !1106
  call void @llvm.dbg.value(metadata i8* %886, i64 0, metadata !587, metadata !566), !dbg !588
  br label %887, !dbg !1110

; <label>:887                                     ; preds = %885, %868, %857
  %.01 = phi i8* [ %886, %885 ], [ %strend, %868 ], [ %strend, %857 ]
  br label %888, !dbg !1113

; <label>:888                                     ; preds = %887, %855
  %.1 = phi i8* [ %.01, %887 ], [ %strend, %855 ]
  %889 = call i32 (%struct.regexp*, %struct.regnode*, i8*, i8*, i8*, i32, ...)* bitcast (i32 (...)* @find_byclass to i32 (%struct.regexp*, %struct.regnode*, i8*, i8*, i8*, i32, ...)*)(%struct.regexp* %prog, %struct.regnode* %853, i8* %s.4, i8* %.1, i8* %stringarg, i32 0), !dbg !1114
  %890 = icmp ne i32 %889, 0, !dbg !1116
  br i1 %890, label %891, label %892, !dbg !1116

; <label>:891                                     ; preds = %888
  br label %1111, !dbg !1117

; <label>:892                                     ; preds = %888
  br label %1108, !dbg !1118

; <label>:893                                     ; preds = %851
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !601, metadata !566), !dbg !602
  %894 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1119
  %895 = load %struct.reg_substr_data** %894, align 8, !dbg !1119
  %896 = getelementptr inbounds %struct.reg_substr_data* %895, i32 0, i32 0, !dbg !1119
  %897 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %896, i32 0, i64 1, !dbg !1119
  %898 = getelementptr inbounds %struct.reg_substr_datum* %897, i32 0, i32 2, !dbg !1119
  %899 = load %struct.sv** %898, align 8, !dbg !1119
  %900 = icmp ne %struct.sv* %899, null, !dbg !1119
  br i1 %900, label %909, label %901, !dbg !1122

; <label>:901                                     ; preds = %893
  %902 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1123
  %903 = load %struct.reg_substr_data** %902, align 8, !dbg !1123
  %904 = getelementptr inbounds %struct.reg_substr_data* %903, i32 0, i32 0, !dbg !1123
  %905 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %904, i32 0, i64 1, !dbg !1123
  %906 = getelementptr inbounds %struct.reg_substr_datum* %905, i32 0, i32 3, !dbg !1123
  %907 = load %struct.sv** %906, align 8, !dbg !1123
  %908 = icmp ne %struct.sv* %907, null, !dbg !1123
  br i1 %908, label %909, label %1069, !dbg !1122

; <label>:909                                     ; preds = %901, %893
  %910 = sext i8 %23 to i32, !dbg !1125
  %911 = icmp ne i32 %910, 0, !dbg !1128
  br i1 %911, label %912, label %920, !dbg !1128

; <label>:912                                     ; preds = %909
  %913 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1129
  %914 = load %struct.reg_substr_data** %913, align 8, !dbg !1129
  %915 = getelementptr inbounds %struct.reg_substr_data* %914, i32 0, i32 0, !dbg !1129
  %916 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %915, i32 0, i64 1, !dbg !1129
  %917 = getelementptr inbounds %struct.reg_substr_datum* %916, i32 0, i32 3, !dbg !1129
  %918 = load %struct.sv** %917, align 8, !dbg !1129
  %919 = icmp ne %struct.sv* %918, null, !dbg !1128
  br i1 %919, label %937, label %928, !dbg !1128

; <label>:920                                     ; preds = %909
  %921 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1131
  %922 = load %struct.reg_substr_data** %921, align 8, !dbg !1131
  %923 = getelementptr inbounds %struct.reg_substr_data* %922, i32 0, i32 0, !dbg !1131
  %924 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %923, i32 0, i64 1, !dbg !1131
  %925 = getelementptr inbounds %struct.reg_substr_datum* %924, i32 0, i32 2, !dbg !1131
  %926 = load %struct.sv** %925, align 8, !dbg !1131
  %927 = icmp ne %struct.sv* %926, null, !dbg !1128
  br i1 %927, label %937, label %928, !dbg !1128

; <label>:928                                     ; preds = %920, %912
  %929 = sext i8 %23 to i32, !dbg !1133
  %930 = icmp ne i32 %929, 0, !dbg !1133
  br i1 %930, label %931, label %933, !dbg !1133

; <label>:931                                     ; preds = %928
  %932 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_utf8_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !1134
  br label %935, !dbg !1133

; <label>:933                                     ; preds = %928
  %934 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_byte_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !1135
  br label %935, !dbg !1133

; <label>:935                                     ; preds = %933, %931
  %936 = phi i32 [ %932, %931 ], [ %934, %933 ], !dbg !1133
  br label %937, !dbg !1136

; <label>:937                                     ; preds = %935, %920, %912
  %938 = sext i8 %23 to i32, !dbg !1139
  %939 = icmp ne i32 %938, 0, !dbg !1139
  br i1 %939, label %940, label %947, !dbg !1139

; <label>:940                                     ; preds = %937
  %941 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1140
  %942 = load %struct.reg_substr_data** %941, align 8, !dbg !1140
  %943 = getelementptr inbounds %struct.reg_substr_data* %942, i32 0, i32 0, !dbg !1140
  %944 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %943, i32 0, i64 1, !dbg !1140
  %945 = getelementptr inbounds %struct.reg_substr_datum* %944, i32 0, i32 3, !dbg !1140
  %946 = load %struct.sv** %945, align 8, !dbg !1140
  br label %954, !dbg !1139

; <label>:947                                     ; preds = %937
  %948 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1142
  %949 = load %struct.reg_substr_data** %948, align 8, !dbg !1142
  %950 = getelementptr inbounds %struct.reg_substr_data* %949, i32 0, i32 0, !dbg !1142
  %951 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %950, i32 0, i64 1, !dbg !1142
  %952 = getelementptr inbounds %struct.reg_substr_datum* %951, i32 0, i32 2, !dbg !1142
  %953 = load %struct.sv** %952, align 8, !dbg !1142
  br label %954, !dbg !1139

; <label>:954                                     ; preds = %947, %940
  %955 = phi %struct.sv* [ %946, %940 ], [ %953, %947 ], !dbg !1139
  call void @llvm.dbg.value(metadata %struct.sv* %955, i64 0, metadata !1144, metadata !566), !dbg !1145
  %956 = and i32 %flags, 4, !dbg !1146
  %957 = icmp ne i32 %956, 0, !dbg !1148
  br i1 %957, label %958, label %984, !dbg !1148

; <label>:958                                     ; preds = %954
  %959 = ptrtoint i8* %s.4 to i64, !dbg !1149
  %960 = ptrtoint i8* %strbeg to i64, !dbg !1149
  %961 = sub i64 %959, %960, !dbg !1149
  %962 = trunc i64 %961 to i32, !dbg !1149
  %963 = call i8* @Perl_screaminstr(%struct.sv* %sv, %struct.sv* %955, i32 %962, i32 0, i32* %scream_pos, i32 1), !dbg !1151
  call void @llvm.dbg.value(metadata i8* %963, i64 0, metadata !1152, metadata !566), !dbg !1153
  %964 = icmp ne i8* %963, null, !dbg !1154
  br i1 %964, label %967, label %965, !dbg !1154

; <label>:965                                     ; preds = %958
  %966 = load i8** %scream_olds, align 8, !dbg !1155
  call void @llvm.dbg.value(metadata i8* %966, i64 0, metadata !1152, metadata !566), !dbg !1153
  br label %983, !dbg !1157

; <label>:967                                     ; preds = %958
  %968 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1158
  %969 = load i32* %968, align 4, !dbg !1158
  %970 = and i32 %969, 262144, !dbg !1158
  %971 = icmp ne i32 %970, 0, !dbg !1160
  br i1 %971, label %972, label %982, !dbg !1160

; <label>:972                                     ; preds = %967
  %973 = getelementptr inbounds %struct.sv* %sv, i32 0, i32 0, !dbg !1161
  %974 = load i8** %973, align 8, !dbg !1161
  %975 = bitcast i8* %974 to %struct.xpv*, !dbg !1161
  %976 = getelementptr inbounds %struct.xpv* %975, i32 0, i32 0, !dbg !1161
  %977 = load i8** %976, align 8, !dbg !1161
  %978 = ptrtoint i8* %s.4 to i64, !dbg !1162
  %979 = ptrtoint i8* %977 to i64, !dbg !1162
  %980 = sub i64 %978, %979, !dbg !1162
  %981 = getelementptr inbounds i8* %strbeg, i64 %980, !dbg !1163
  call void @llvm.dbg.value(metadata i8* %981, i64 0, metadata !661, metadata !566), !dbg !662
  br label %982, !dbg !1164

; <label>:982                                     ; preds = %972, %967
  %s.24 = phi i8* [ %981, %972 ], [ %s.4, %967 ]
  br label %983

; <label>:983                                     ; preds = %982, %965
  %s.25 = phi i8* [ %s.24, %982 ], [ %s.4, %965 ]
  %last2.0 = phi i8* [ %963, %982 ], [ %966, %965 ]
  br label %1053, !dbg !1165

; <label>:984                                     ; preds = %954
  call void @llvm.dbg.declare(metadata i64* %len, metadata !1166, metadata !566), !dbg !1168
  %985 = getelementptr inbounds %struct.sv* %955, i32 0, i32 2, !dbg !1169
  %986 = load i32* %985, align 4, !dbg !1169
  %987 = and i32 %986, 262144, !dbg !1169
  %988 = icmp eq i32 %987, 262144, !dbg !1169
  br i1 %988, label %989, label %1000, !dbg !1169

; <label>:989                                     ; preds = %984
  %990 = getelementptr inbounds %struct.sv* %955, i32 0, i32 0, !dbg !1170
  %991 = load i8** %990, align 8, !dbg !1170
  %992 = bitcast i8* %991 to %struct.xpv*, !dbg !1170
  %993 = getelementptr inbounds %struct.xpv* %992, i32 0, i32 1, !dbg !1170
  %994 = load i64* %993, align 8, !dbg !1170
  store i64 %994, i64* %len, align 8, !dbg !1170
  %995 = getelementptr inbounds %struct.sv* %955, i32 0, i32 0, !dbg !1170
  %996 = load i8** %995, align 8, !dbg !1170
  %997 = bitcast i8* %996 to %struct.xpv*, !dbg !1170
  %998 = getelementptr inbounds %struct.xpv* %997, i32 0, i32 0, !dbg !1170
  %999 = load i8** %998, align 8, !dbg !1170
  br label %1002, !dbg !1170

; <label>:1000                                    ; preds = %984
  %1001 = call i8* @Perl_sv_2pv_flags(%struct.sv* %955, i64* %len, i32 2), !dbg !1172
  br label %1002, !dbg !1172

; <label>:1002                                    ; preds = %1000, %989
  %1003 = phi i8* [ %999, %989 ], [ %1001, %1000 ], !dbg !1169
  call void @llvm.dbg.value(metadata i8* %1003, i64 0, metadata !1174, metadata !566), !dbg !1175
  %1004 = getelementptr inbounds %struct.sv* %955, i32 0, i32 2, !dbg !1176
  %1005 = load i32* %1004, align 4, !dbg !1176
  %1006 = and i32 %1005, 1073741824, !dbg !1176
  %1007 = icmp ne i32 %1006, 0, !dbg !1178
  br i1 %1007, label %1008, label %1042, !dbg !1178

; <label>:1008                                    ; preds = %1002
  %1009 = load i64* %len, align 8, !dbg !1179
  %1010 = sub i64 0, %1009, !dbg !1179
  %1011 = getelementptr inbounds i8* %strend, i64 %1010, !dbg !1179
  %1012 = getelementptr inbounds i8* %1011, i64 1, !dbg !1179
  %1013 = load i64* %len, align 8, !dbg !1179
  %1014 = sub i64 %1013, 1, !dbg !1179
  %1015 = call i32 @memcmp(i8* %1012, i8* %1003, i64 %1014), !dbg !1179
  %1016 = icmp ne i32 %1015, 0, !dbg !1182
  br i1 %1016, label %1022, label %1017, !dbg !1182

; <label>:1017                                    ; preds = %1008
  %1018 = load i64* %len, align 8, !dbg !1183
  %1019 = sub i64 0, %1018, !dbg !1184
  %1020 = getelementptr inbounds i8* %strend, i64 %1019, !dbg !1184
  %1021 = getelementptr inbounds i8* %1020, i64 1, !dbg !1184
  call void @llvm.dbg.value(metadata i8* %1021, i64 0, metadata !1152, metadata !566), !dbg !1153
  br label %1041, !dbg !1185

; <label>:1022                                    ; preds = %1008
  %1023 = load i32* @PL_multiline, align 4, !dbg !1186
  %1024 = icmp ne i32 %1023, 0, !dbg !1188
  br i1 %1024, label %1039, label %1025, !dbg !1188

; <label>:1025                                    ; preds = %1022
  %1026 = load i64* %len, align 8, !dbg !1189
  %1027 = sub i64 0, %1026, !dbg !1189
  %1028 = getelementptr inbounds i8* %strend, i64 %1027, !dbg !1189
  %1029 = load i64* %len, align 8, !dbg !1189
  %1030 = call i32 @memcmp(i8* %1028, i8* %1003, i64 %1029), !dbg !1189
  %1031 = icmp ne i32 %1030, 0, !dbg !1189
  br i1 %1031, label %1036, label %1032, !dbg !1189

; <label>:1032                                    ; preds = %1025
  %1033 = load i64* %len, align 8, !dbg !1190
  %1034 = sub i64 0, %1033, !dbg !1191
  %1035 = getelementptr inbounds i8* %strend, i64 %1034, !dbg !1191
  br label %1037, !dbg !1189

; <label>:1036                                    ; preds = %1025
  br label %1037, !dbg !1192

; <label>:1037                                    ; preds = %1036, %1032
  %1038 = phi i8* [ %1035, %1032 ], [ null, %1036 ], !dbg !1189
  call void @llvm.dbg.value(metadata i8* %1038, i64 0, metadata !1152, metadata !566), !dbg !1153
  br label %1040, !dbg !1194

; <label>:1039                                    ; preds = %1022
  br label %1043, !dbg !1197

; <label>:1040                                    ; preds = %1037
  br label %1041

; <label>:1041                                    ; preds = %1040, %1017
  %last2.1 = phi i8* [ %1038, %1040 ], [ %1021, %1017 ]
  br label %1052, !dbg !1198

; <label>:1042                                    ; preds = %1002
  br label %1043, !dbg !1199

; <label>:1043                                    ; preds = %1042, %1039
  %1044 = load i64* %len, align 8, !dbg !1200
  %1045 = icmp ne i64 %1044, 0, !dbg !1203
  br i1 %1045, label %1046, label %1050, !dbg !1203

; <label>:1046                                    ; preds = %1043
  %1047 = load i64* %len, align 8, !dbg !1204
  %1048 = getelementptr inbounds i8* %1003, i64 %1047, !dbg !1205
  %1049 = call i8* @Perl_rninstr(i8* %s.4, i8* %strend, i8* %1003, i8* %1048), !dbg !1206
  call void @llvm.dbg.value(metadata i8* %1049, i64 0, metadata !1152, metadata !566), !dbg !1153
  br label %1051, !dbg !1207

; <label>:1050                                    ; preds = %1043
  call void @llvm.dbg.value(metadata i8* %strend, i64 0, metadata !1152, metadata !566), !dbg !1153
  br label %1051

; <label>:1051                                    ; preds = %1050, %1046
  %last2.2 = phi i8* [ %1049, %1046 ], [ %strend, %1050 ]
  br label %1052

; <label>:1052                                    ; preds = %1051, %1041
  %last2.3 = phi i8* [ %last2.2, %1051 ], [ %last2.1, %1041 ]
  br label %1053

; <label>:1053                                    ; preds = %1052, %983
  %s.26 = phi i8* [ %s.25, %983 ], [ %s.4, %1052 ]
  %last2.4 = phi i8* [ %last2.0, %983 ], [ %last2.3, %1052 ]
  %1054 = icmp eq i8* %last2.4, null, !dbg !1208
  br i1 %1054, label %1055, label %1056, !dbg !1210

; <label>:1055                                    ; preds = %1053
  br label %1188, !dbg !1211

; <label>:1056                                    ; preds = %1053
  %1057 = ptrtoint i8* %strend to i64, !dbg !1213
  %1058 = ptrtoint i8* %last2.4 to i64, !dbg !1213
  %1059 = sub i64 %1057, %1058, !dbg !1213
  %1060 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1214
  %1061 = load %struct.reg_substr_data** %1060, align 8, !dbg !1214
  %1062 = getelementptr inbounds %struct.reg_substr_data* %1061, i32 0, i32 0, !dbg !1214
  %1063 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1062, i32 0, i64 1, !dbg !1214
  %1064 = getelementptr inbounds %struct.reg_substr_datum* %1063, i32 0, i32 0, !dbg !1214
  %1065 = load i32* %1064, align 4, !dbg !1214
  %1066 = sext i32 %1065 to i64, !dbg !1214
  %1067 = add nsw i64 %1059, %1066, !dbg !1213
  %1068 = trunc i64 %1067 to i32, !dbg !1213
  call void @llvm.dbg.value(metadata i32 %1068, i64 0, metadata !601, metadata !566), !dbg !602
  br label %1069, !dbg !1215

; <label>:1069                                    ; preds = %1056, %901
  %s.27 = phi i8* [ %s.26, %1056 ], [ %s.4, %901 ]
  %dontbother.1 = phi i32 [ %1068, %1056 ], [ 0, %901 ]
  %1070 = icmp ne i32 %43, 0, !dbg !1216
  br i1 %1070, label %1071, label %1075, !dbg !1216

; <label>:1071                                    ; preds = %1069
  %1072 = icmp slt i32 %dontbother.1, %43, !dbg !1217
  br i1 %1072, label %1073, label %1075, !dbg !1216

; <label>:1073                                    ; preds = %1071
  %1074 = sub nsw i32 %43, 1, !dbg !1219
  call void @llvm.dbg.value(metadata i32 %1074, i64 0, metadata !601, metadata !566), !dbg !602
  br label %1075, !dbg !1220

; <label>:1075                                    ; preds = %1073, %1071, %1069
  %dontbother.2 = phi i32 [ %1074, %1073 ], [ %dontbother.1, %1071 ], [ %dontbother.1, %1069 ]
  %1076 = sext i32 %dontbother.2 to i64, !dbg !1221
  %1077 = sub i64 0, %1076, !dbg !1221
  %1078 = getelementptr inbounds i8* %strend, i64 %1077, !dbg !1221
  call void @llvm.dbg.value(metadata i8* %1078, i64 0, metadata !587, metadata !566), !dbg !588
  %1079 = icmp ne i8 %23, 0, !dbg !1222
  br i1 %1079, label %1080, label %1097, !dbg !1222

; <label>:1080                                    ; preds = %1075
  br label %1081, !dbg !1223

; <label>:1081                                    ; preds = %1088, %1080
  %s.28 = phi i8* [ %s.27, %1080 ], [ %1095, %1088 ]
  %1082 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %prog, i8* %s.28), !dbg !1226
  %1083 = icmp ne i32 %1082, 0, !dbg !1231
  br i1 %1083, label %1084, label %1085, !dbg !1231

; <label>:1084                                    ; preds = %1081
  br label %1111, !dbg !1232

; <label>:1085                                    ; preds = %1081
  %1086 = icmp uge i8* %s.28, %1078, !dbg !1233
  br i1 %1086, label %1087, label %1088, !dbg !1235

; <label>:1087                                    ; preds = %1085
  br label %1096, !dbg !1236

; <label>:1088                                    ; preds = %1085
  %1089 = load i8* %s.28, align 1, !dbg !1237
  %1090 = zext i8 %1089 to i64, !dbg !1237
  %1091 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1090, !dbg !1237
  %1092 = load i8* %1091, align 1, !dbg !1237
  %1093 = zext i8 %1092 to i32, !dbg !1237
  %1094 = sext i32 %1093 to i64, !dbg !1238
  %1095 = getelementptr inbounds i8* %s.28, i64 %1094, !dbg !1238
  call void @llvm.dbg.value(metadata i8* %1095, i64 0, metadata !661, metadata !566), !dbg !662
  br label %1081, !dbg !1239

; <label>:1096                                    ; preds = %1087
  br label %1107, !dbg !1240

; <label>:1097                                    ; preds = %1075
  br label %1098, !dbg !1241

; <label>:1098                                    ; preds = %1103, %1097
  %s.29 = phi i8* [ %s.27, %1097 ], [ %1104, %1103 ]
  %1099 = call i32 (%struct.regexp*, i8*, ...)* bitcast (i32 (...)* @regtry to i32 (%struct.regexp*, i8*, ...)*)(%struct.regexp* %prog, i8* %s.29), !dbg !1243
  %1100 = icmp ne i32 %1099, 0, !dbg !1246
  br i1 %1100, label %1101, label %1102, !dbg !1246

; <label>:1101                                    ; preds = %1098
  br label %1111, !dbg !1247

; <label>:1102                                    ; preds = %1098
  br label %1103, !dbg !1248

; <label>:1103                                    ; preds = %1102
  %1104 = getelementptr inbounds i8* %s.29, i32 1, !dbg !1249
  call void @llvm.dbg.value(metadata i8* %1104, i64 0, metadata !661, metadata !566), !dbg !662
  %1105 = icmp ult i8* %s.29, %1078, !dbg !1251
  br i1 %1105, label %1098, label %1106, !dbg !1248

; <label>:1106                                    ; preds = %1103
  br label %1107

; <label>:1107                                    ; preds = %1106, %1096
  br label %1108

; <label>:1108                                    ; preds = %1107, %892
  br label %1109

; <label>:1109                                    ; preds = %1108
  br label %1110

; <label>:1110                                    ; preds = %1109, %414
  br label %1188, !dbg !1252

; <label>:1111                                    ; preds = %1101, %1084, %891, %845, %829, %396, %349, %259, %243, %209, %153
  %1112 = load i32* @PL_reg_flags, align 4, !dbg !1253
  %1113 = and i32 %1112, 1, !dbg !1253
  %1114 = icmp ne i32 %1113, 0, !dbg !1253
  br i1 %1114, label %1115, label %1119, !dbg !1253

; <label>:1115                                    ; preds = %1111
  %1116 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1254
  %1117 = load i32* %1116, align 4, !dbg !1254
  %1118 = or i32 %1117, 524288, !dbg !1254
  store i32 %1118, i32* %1116, align 4, !dbg !1254
  br label %1123, !dbg !1254

; <label>:1119                                    ; preds = %1111
  %1120 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1255
  %1121 = load i32* %1120, align 4, !dbg !1255
  %1122 = and i32 %1121, -524289, !dbg !1255
  store i32 %1122, i32* %1120, align 4, !dbg !1255
  br label %1123, !dbg !1255

; <label>:1123                                    ; preds = %1119, %1115
  %1124 = phi i32 [ %1118, %1115 ], [ %1122, %1119 ], !dbg !1253
  %1125 = load i32* @PL_reg_eval_set, align 4, !dbg !1256
  %1126 = icmp ne i32 %1125, 0, !dbg !1258
  br i1 %1126, label %1127, label %1145, !dbg !1258

; <label>:1127                                    ; preds = %1123
  %1128 = load %struct.gv** @PL_replgv, align 8, !dbg !1259
  %1129 = getelementptr inbounds %struct.gv* %1128, i32 0, i32 0, !dbg !1259
  %1130 = load %struct.xpvgv** %1129, align 8, !dbg !1259
  %1131 = getelementptr inbounds %struct.xpvgv* %1130, i32 0, i32 7, !dbg !1259
  %1132 = load %struct.gp** %1131, align 8, !dbg !1259
  %1133 = getelementptr inbounds %struct.gp* %1132, i32 0, i32 0, !dbg !1259
  %1134 = load %struct.sv** %1133, align 8, !dbg !1259
  %1135 = icmp ne %struct.sv* %7, %1134, !dbg !1262
  br i1 %1135, label %1136, label %1144, !dbg !1263

; <label>:1136                                    ; preds = %1127
  %1137 = load %struct.gv** @PL_replgv, align 8, !dbg !1264
  %1138 = getelementptr inbounds %struct.gv* %1137, i32 0, i32 0, !dbg !1264
  %1139 = load %struct.xpvgv** %1138, align 8, !dbg !1264
  %1140 = getelementptr inbounds %struct.xpvgv* %1139, i32 0, i32 7, !dbg !1264
  %1141 = load %struct.gp** %1140, align 8, !dbg !1264
  %1142 = getelementptr inbounds %struct.gp* %1141, i32 0, i32 0, !dbg !1264
  %1143 = load %struct.sv** %1142, align 8, !dbg !1264
  call void @Perl_sv_setsv_flags(%struct.sv* %7, %struct.sv* %1143, i32 2), !dbg !1264
  br label %1144, !dbg !1264

; <label>:1144                                    ; preds = %1136, %1127
  call void @restore_pos(i8* null), !dbg !1265
  br label %1145, !dbg !1266

; <label>:1145                                    ; preds = %1144, %1123
  %1146 = and i32 %flags, 16, !dbg !1267
  %1147 = icmp ne i32 %1146, 0, !dbg !1269
  br i1 %1147, label %1187, label %1148, !dbg !1269

; <label>:1148                                    ; preds = %1145
  %1149 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1270
  %1150 = load i32* %1149, align 4, !dbg !1270
  %1151 = and i32 %1150, 262144, !dbg !1270
  %1152 = icmp ne i32 %1151, 0, !dbg !1273
  br i1 %1152, label %1153, label %1159, !dbg !1273

; <label>:1153                                    ; preds = %1148
  %1154 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 6, !dbg !1274
  %1155 = load i8** %1154, align 8, !dbg !1274
  call void @Perl_safesysfree(i8* %1155), !dbg !1274
  %1156 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1276
  %1157 = load i32* %1156, align 4, !dbg !1276
  %1158 = and i32 %1157, -262145, !dbg !1276
  store i32 %1158, i32* %1156, align 4, !dbg !1276
  br label %1159, !dbg !1277

; <label>:1159                                    ; preds = %1153, %1148
  %1160 = and i32 %flags, 1, !dbg !1278
  %1161 = icmp ne i32 %1160, 0, !dbg !1280
  br i1 %1161, label %1162, label %1178, !dbg !1280

; <label>:1162                                    ; preds = %1159
  %1163 = load i8** @PL_regeol, align 8, !dbg !1281
  %1164 = ptrtoint i8* %1163 to i64, !dbg !1281
  %1165 = ptrtoint i8* %stringarg to i64, !dbg !1281
  %1166 = sub i64 %1164, %1165, !dbg !1281
  %1167 = ptrtoint i8* %stringarg to i64, !dbg !1283
  %1168 = ptrtoint i8* %strbeg to i64, !dbg !1283
  %1169 = sub i64 %1167, %1168, !dbg !1283
  %1170 = add nsw i64 %1166, %1169, !dbg !1281
  %1171 = trunc i64 %1170 to i32, !dbg !1281
  call void @llvm.dbg.value(metadata i32 %1171, i64 0, metadata !1284, metadata !566), !dbg !1285
  %1172 = call i8* @Perl_savepvn(i8* %strbeg, i32 %1171), !dbg !1286
  call void @llvm.dbg.value(metadata i8* %1172, i64 0, metadata !661, metadata !566), !dbg !662
  %1173 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 6, !dbg !1287
  store i8* %1172, i8** %1173, align 8, !dbg !1287
  %1174 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 8, !dbg !1288
  store i32 %1171, i32* %1174, align 4, !dbg !1288
  %1175 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1289
  %1176 = load i32* %1175, align 4, !dbg !1289
  %1177 = or i32 %1176, 262144, !dbg !1289
  store i32 %1177, i32* %1175, align 4, !dbg !1289
  br label %1186, !dbg !1290

; <label>:1178                                    ; preds = %1159
  %1179 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 6, !dbg !1291
  store i8* %strbeg, i8** %1179, align 8, !dbg !1291
  %1180 = load i8** @PL_regeol, align 8, !dbg !1293
  %1181 = ptrtoint i8* %1180 to i64, !dbg !1293
  %1182 = ptrtoint i8* %strbeg to i64, !dbg !1293
  %1183 = sub i64 %1181, %1182, !dbg !1293
  %1184 = trunc i64 %1183 to i32, !dbg !1293
  %1185 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 8, !dbg !1294
  store i32 %1184, i32* %1185, align 4, !dbg !1294
  br label %1186

; <label>:1186                                    ; preds = %1178, %1162
  br label %1187, !dbg !1295

; <label>:1187                                    ; preds = %1186, %1145
  br label %1193, !dbg !1296

; <label>:1188                                    ; preds = %1110, %1055, %850, %589, %260, %249, %223, %213, %141, %110, %49
  %1189 = load i32* @PL_reg_eval_set, align 4, !dbg !1297
  %1190 = icmp ne i32 %1189, 0, !dbg !1299
  br i1 %1190, label %1191, label %1192, !dbg !1299

; <label>:1191                                    ; preds = %1188
  call void @restore_pos(i8* null), !dbg !1300
  br label %1192, !dbg !1300

; <label>:1192                                    ; preds = %1191, %1188
  br label %1193, !dbg !1301

; <label>:1193                                    ; preds = %1192, %1187, %40
  %.0 = phi i32 [ 0, %40 ], [ 0, %1192 ], [ 1, %1187 ]
  ret i32 %.0, !dbg !1302
}

; Function Attrs: nounwind uwtable
define i8* @Perl_re_intuit_start(%struct.regexp* %prog, %struct.sv* %sv, i8* %strpos, i8* %strend, i32 %flags, %struct.re_scream_pos_data_s* %data) #0 {
  %p = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.regexp* %prog, i64 0, metadata !1303, metadata !566), !dbg !1304
  call void @llvm.dbg.value(metadata %struct.sv* %sv, i64 0, metadata !1305, metadata !566), !dbg !1306
  call void @llvm.dbg.value(metadata i8* %strpos, i64 0, metadata !1307, metadata !566), !dbg !1308
  call void @llvm.dbg.value(metadata i8* %strend, i64 0, metadata !1309, metadata !566), !dbg !1310
  call void @llvm.dbg.value(metadata i32 %flags, i64 0, metadata !1311, metadata !566), !dbg !1312
  call void @llvm.dbg.value(metadata %struct.re_scream_pos_data_s* %data, i64 0, metadata !1313, metadata !566), !dbg !1314
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1315, metadata !566), !dbg !1316
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1317, metadata !566), !dbg !1318
  %1 = icmp ne %struct.sv* %sv, null, !dbg !1319
  br i1 %1, label %2, label %6, !dbg !1319

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.sv* %sv, i32 0, i32 2, !dbg !1320
  %4 = load i32* %3, align 4, !dbg !1320
  %5 = and i32 %4, 536870912, !dbg !1320
  br label %7, !dbg !1319

; <label>:6                                       ; preds = %0
  br label %7, !dbg !1322

; <label>:7                                       ; preds = %6, %2
  %8 = phi i32 [ %5, %2 ], [ 0, %6 ], !dbg !1319
  call void @llvm.dbg.value(metadata i32 %8, i64 0, metadata !1324, metadata !566), !dbg !1325
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !1326, metadata !566), !dbg !1327
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !1328, metadata !566), !dbg !1329
  %9 = icmp ne i32 %8, 0, !dbg !1330
  br i1 %9, label %10, label %14, !dbg !1330

; <label>:10                                      ; preds = %7
  %11 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1331
  %12 = load i32* %11, align 4, !dbg !1331
  %13 = or i32 %12, 268435456, !dbg !1331
  store i32 %13, i32* %11, align 4, !dbg !1331
  store i8 1, i8* @PL_reg_match_utf8, align 1, !dbg !1331
  br label %18, !dbg !1331

; <label>:14                                      ; preds = %7
  %15 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1332
  %16 = load i32* %15, align 4, !dbg !1332
  %17 = and i32 %16, -268435457, !dbg !1332
  store i32 %17, i32* %15, align 4, !dbg !1332
  store i8 0, i8* @PL_reg_match_utf8, align 1, !dbg !1332
  br label %18, !dbg !1332

; <label>:18                                      ; preds = %14, %10
  %19 = phi i32 [ 1, %10 ], [ 0, %14 ], !dbg !1330
  %20 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1333
  %21 = load i32* %20, align 4, !dbg !1333
  %22 = and i32 %21, 65536, !dbg !1333
  %23 = icmp ne i32 %22, 0, !dbg !1335
  br i1 %23, label %24, label %27, !dbg !1335

; <label>:24                                      ; preds = %18
  %25 = load i32* @PL_reg_flags, align 4, !dbg !1336
  %26 = or i32 %25, 8, !dbg !1336
  store i32 %26, i32* @PL_reg_flags, align 4, !dbg !1336
  br label %27, !dbg !1338

; <label>:27                                      ; preds = %24, %18
  %28 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 10, !dbg !1339
  %29 = load i32* %28, align 4, !dbg !1339
  %30 = sext i32 %29 to i64, !dbg !1339
  %31 = ptrtoint i8* %strend to i64, !dbg !1341
  %32 = ptrtoint i8* %strpos to i64, !dbg !1341
  %33 = sub i64 %31, %32, !dbg !1341
  %34 = icmp sgt i64 %30, %33, !dbg !1339
  br i1 %34, label %35, label %36, !dbg !1342

; <label>:35                                      ; preds = %27
  br label %1683, !dbg !1343

; <label>:36                                      ; preds = %27
  %37 = icmp ne %struct.sv* %sv, null, !dbg !1345
  br i1 %37, label %38, label %51, !dbg !1345

; <label>:38                                      ; preds = %36
  %39 = getelementptr inbounds %struct.sv* %sv, i32 0, i32 2, !dbg !1346
  %40 = load i32* %39, align 4, !dbg !1346
  %41 = and i32 %40, 262144, !dbg !1346
  %42 = icmp ne i32 %41, 0, !dbg !1345
  br i1 %42, label %43, label %51, !dbg !1345

; <label>:43                                      ; preds = %38
  %44 = getelementptr inbounds %struct.sv* %sv, i32 0, i32 0, !dbg !1347
  %45 = load i8** %44, align 8, !dbg !1347
  %46 = bitcast i8* %45 to %struct.xpv*, !dbg !1347
  %47 = getelementptr inbounds %struct.xpv* %46, i32 0, i32 1, !dbg !1347
  %48 = load i64* %47, align 8, !dbg !1347
  %49 = sub i64 0, %48, !dbg !1348
  %50 = getelementptr inbounds i8* %strend, i64 %49, !dbg !1348
  br label %52, !dbg !1345

; <label>:51                                      ; preds = %38, %36
  br label %52, !dbg !1345

; <label>:52                                      ; preds = %51, %43
  %53 = phi i8* [ %50, %43 ], [ %strpos, %51 ], !dbg !1345
  call void @llvm.dbg.value(metadata i8* %53, i64 0, metadata !1349, metadata !566), !dbg !1350
  store i8* %strend, i8** @PL_regeol, align 8, !dbg !1351
  %54 = icmp ne i32 %8, 0, !dbg !1352
  br i1 %54, label %55, label %80, !dbg !1352

; <label>:55                                      ; preds = %52
  %56 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1353
  %57 = load %struct.reg_substr_data** %56, align 8, !dbg !1353
  %58 = getelementptr inbounds %struct.reg_substr_data* %57, i32 0, i32 0, !dbg !1353
  %59 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %58, i32 0, i64 2, !dbg !1353
  %60 = getelementptr inbounds %struct.reg_substr_datum* %59, i32 0, i32 3, !dbg !1353
  %61 = load %struct.sv** %60, align 8, !dbg !1353
  %62 = icmp ne %struct.sv* %61, null, !dbg !1357
  br i1 %62, label %73, label %63, !dbg !1357

; <label>:63                                      ; preds = %55
  %64 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1358
  %65 = load %struct.reg_substr_data** %64, align 8, !dbg !1358
  %66 = getelementptr inbounds %struct.reg_substr_data* %65, i32 0, i32 0, !dbg !1358
  %67 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %66, i32 0, i64 2, !dbg !1358
  %68 = getelementptr inbounds %struct.reg_substr_datum* %67, i32 0, i32 2, !dbg !1358
  %69 = load %struct.sv** %68, align 8, !dbg !1358
  %70 = icmp ne %struct.sv* %69, null, !dbg !1357
  br i1 %70, label %71, label %73, !dbg !1357

; <label>:71                                      ; preds = %63
  %72 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_utf8_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !1360
  br label %73, !dbg !1360

; <label>:73                                      ; preds = %71, %63, %55
  %74 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1361
  %75 = load %struct.reg_substr_data** %74, align 8, !dbg !1361
  %76 = getelementptr inbounds %struct.reg_substr_data* %75, i32 0, i32 0, !dbg !1361
  %77 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %76, i32 0, i64 2, !dbg !1361
  %78 = getelementptr inbounds %struct.reg_substr_datum* %77, i32 0, i32 3, !dbg !1361
  %79 = load %struct.sv** %78, align 8, !dbg !1361
  call void @llvm.dbg.value(metadata %struct.sv* %79, i64 0, metadata !1362, metadata !566), !dbg !1363
  br label %105, !dbg !1364

; <label>:80                                      ; preds = %52
  %81 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1365
  %82 = load %struct.reg_substr_data** %81, align 8, !dbg !1365
  %83 = getelementptr inbounds %struct.reg_substr_data* %82, i32 0, i32 0, !dbg !1365
  %84 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %83, i32 0, i64 2, !dbg !1365
  %85 = getelementptr inbounds %struct.reg_substr_datum* %84, i32 0, i32 2, !dbg !1365
  %86 = load %struct.sv** %85, align 8, !dbg !1365
  %87 = icmp ne %struct.sv* %86, null, !dbg !1368
  br i1 %87, label %98, label %88, !dbg !1368

; <label>:88                                      ; preds = %80
  %89 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1369
  %90 = load %struct.reg_substr_data** %89, align 8, !dbg !1369
  %91 = getelementptr inbounds %struct.reg_substr_data* %90, i32 0, i32 0, !dbg !1369
  %92 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %91, i32 0, i64 2, !dbg !1369
  %93 = getelementptr inbounds %struct.reg_substr_datum* %92, i32 0, i32 3, !dbg !1369
  %94 = load %struct.sv** %93, align 8, !dbg !1369
  %95 = icmp ne %struct.sv* %94, null, !dbg !1368
  br i1 %95, label %96, label %98, !dbg !1368

; <label>:96                                      ; preds = %88
  %97 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @to_byte_substr to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !1371
  br label %98, !dbg !1371

; <label>:98                                      ; preds = %96, %88, %80
  %99 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1372
  %100 = load %struct.reg_substr_data** %99, align 8, !dbg !1372
  %101 = getelementptr inbounds %struct.reg_substr_data* %100, i32 0, i32 0, !dbg !1372
  %102 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %101, i32 0, i64 2, !dbg !1372
  %103 = getelementptr inbounds %struct.reg_substr_datum* %102, i32 0, i32 2, !dbg !1372
  %104 = load %struct.sv** %103, align 8, !dbg !1372
  call void @llvm.dbg.value(metadata %struct.sv* %104, i64 0, metadata !1362, metadata !566), !dbg !1363
  br label %105

; <label>:105                                     ; preds = %98, %73
  %check.0 = phi %struct.sv* [ %79, %73 ], [ %104, %98 ]
  %106 = icmp eq %struct.sv* %check.0, @PL_sv_undef, !dbg !1373
  br i1 %106, label %107, label %108, !dbg !1375

; <label>:107                                     ; preds = %105
  br label %1683, !dbg !1376

; <label>:108                                     ; preds = %105
  %109 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1378
  %110 = load i32* %109, align 4, !dbg !1378
  %111 = and i32 %110, 15, !dbg !1378
  %112 = icmp ne i32 %111, 0, !dbg !1380
  br i1 %112, label %113, label %366, !dbg !1380

; <label>:113                                     ; preds = %108
  %114 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1381
  %115 = load i32* %114, align 4, !dbg !1381
  %116 = and i32 %115, 12, !dbg !1381
  %117 = icmp ne i32 %116, 0, !dbg !1383
  br i1 %117, label %129, label %118, !dbg !1383

; <label>:118                                     ; preds = %113
  %119 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1384
  %120 = load i32* %119, align 4, !dbg !1384
  %121 = and i32 %120, 1, !dbg !1384
  %122 = icmp ne i32 %121, 0, !dbg !1385
  br i1 %122, label %123, label %127, !dbg !1385

; <label>:123                                     ; preds = %118
  %124 = load i32* @PL_multiline, align 4, !dbg !1386
  %125 = icmp ne i32 %124, 0, !dbg !1387
  %126 = xor i1 %125, true, !dbg !1387
  br label %127

; <label>:127                                     ; preds = %123, %118
  %128 = phi i1 [ false, %118 ], [ %126, %123 ]
  br label %129, !dbg !1383

; <label>:129                                     ; preds = %127, %113
  %130 = phi i1 [ true, %113 ], [ %128, %127 ]
  %131 = xor i1 %130, true, !dbg !1388
  %132 = zext i1 %131 to i32, !dbg !1388
  call void @llvm.dbg.value(metadata i32 %132, i64 0, metadata !1391, metadata !566), !dbg !1392
  %133 = icmp ne i32 %132, 0, !dbg !1393
  br i1 %133, label %288, label %134, !dbg !1393

; <label>:134                                     ; preds = %129
  %135 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1394
  %136 = load i32* %135, align 4, !dbg !1394
  %137 = and i32 %136, 40, !dbg !1394
  %138 = icmp ne i32 %137, 0, !dbg !1398
  br i1 %138, label %149, label %139, !dbg !1398

; <label>:139                                     ; preds = %134
  %140 = icmp ne %struct.sv* %sv, null, !dbg !1398
  br i1 %140, label %141, label %149, !dbg !1398

; <label>:141                                     ; preds = %139
  %142 = getelementptr inbounds %struct.sv* %sv, i32 0, i32 2, !dbg !1399
  %143 = load i32* %142, align 4, !dbg !1399
  %144 = and i32 %143, 524288, !dbg !1399
  %145 = icmp ne i32 %144, 0, !dbg !1398
  br i1 %145, label %149, label %146, !dbg !1398

; <label>:146                                     ; preds = %141
  %147 = icmp ne i8* %strpos, %53, !dbg !1400
  br i1 %147, label %148, label %149, !dbg !1398

; <label>:148                                     ; preds = %146
  br label %1683, !dbg !1401

; <label>:149                                     ; preds = %146, %141, %139, %134
  %150 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1403
  %151 = load %struct.reg_substr_data** %150, align 8, !dbg !1403
  %152 = getelementptr inbounds %struct.reg_substr_data* %151, i32 0, i32 0, !dbg !1403
  %153 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %152, i32 0, i64 2, !dbg !1403
  %154 = getelementptr inbounds %struct.reg_substr_datum* %153, i32 0, i32 0, !dbg !1403
  %155 = load i32* %154, align 4, !dbg !1403
  %156 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1405
  %157 = load %struct.reg_substr_data** %156, align 8, !dbg !1405
  %158 = getelementptr inbounds %struct.reg_substr_data* %157, i32 0, i32 0, !dbg !1405
  %159 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %158, i32 0, i64 2, !dbg !1405
  %160 = getelementptr inbounds %struct.reg_substr_datum* %159, i32 0, i32 1, !dbg !1405
  %161 = load i32* %160, align 4, !dbg !1405
  %162 = icmp eq i32 %155, %161, !dbg !1403
  br i1 %162, label %163, label %287, !dbg !1406

; <label>:163                                     ; preds = %149
  %164 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1407
  %165 = load i32* %164, align 4, !dbg !1407
  %166 = and i32 %165, 2048, !dbg !1407
  %167 = icmp ne i32 %166, 0, !dbg !1406
  br i1 %167, label %287, label %168, !dbg !1406

; <label>:168                                     ; preds = %163
  %169 = load i8* @PL_reg_match_utf8, align 1, !dbg !1408
  %170 = sext i8 %169 to i32, !dbg !1408
  %171 = icmp ne i32 %170, 0, !dbg !1408
  br i1 %171, label %172, label %182, !dbg !1408

; <label>:172                                     ; preds = %168
  %173 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1410
  %174 = load %struct.reg_substr_data** %173, align 8, !dbg !1410
  %175 = getelementptr inbounds %struct.reg_substr_data* %174, i32 0, i32 0, !dbg !1410
  %176 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %175, i32 0, i64 2, !dbg !1410
  %177 = getelementptr inbounds %struct.reg_substr_datum* %176, i32 0, i32 0, !dbg !1410
  %178 = load i32* %177, align 4, !dbg !1410
  %179 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %strpos, i32 %178, i8* %strend), !dbg !1410
  %180 = sext i32 %179 to i64, !dbg !1410
  %181 = inttoptr i64 %180 to i8*, !dbg !1410
  br label %191, !dbg !1410

; <label>:182                                     ; preds = %168
  %183 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1412
  %184 = load %struct.reg_substr_data** %183, align 8, !dbg !1412
  %185 = getelementptr inbounds %struct.reg_substr_data* %184, i32 0, i32 0, !dbg !1412
  %186 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %185, i32 0, i64 2, !dbg !1412
  %187 = getelementptr inbounds %struct.reg_substr_datum* %186, i32 0, i32 0, !dbg !1412
  %188 = load i32* %187, align 4, !dbg !1412
  %189 = sext i32 %188 to i64, !dbg !1412
  %190 = getelementptr inbounds i8* %strpos, i64 %189, !dbg !1412
  br label %191, !dbg !1412

; <label>:191                                     ; preds = %182, %172
  %192 = phi i8* [ %181, %172 ], [ %190, %182 ], !dbg !1408
  call void @llvm.dbg.value(metadata i8* %192, i64 0, metadata !1414, metadata !566), !dbg !1415
  %193 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 2, !dbg !1416
  %194 = load i32* %193, align 4, !dbg !1416
  %195 = and i32 %194, 1073741824, !dbg !1416
  %196 = icmp ne i32 %195, 0, !dbg !1418
  br i1 %196, label %197, label %256, !dbg !1418

; <label>:197                                     ; preds = %191
  %198 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 0, !dbg !1419
  %199 = load i8** %198, align 8, !dbg !1419
  %200 = bitcast i8* %199 to %struct.xpv*, !dbg !1419
  %201 = getelementptr inbounds %struct.xpv* %200, i32 0, i32 1, !dbg !1419
  %202 = load i64* %201, align 8, !dbg !1419
  %203 = trunc i64 %202 to i32, !dbg !1419
  call void @llvm.dbg.value(metadata i32 %203, i64 0, metadata !1421, metadata !566), !dbg !1422
  %204 = ptrtoint i8* %strend to i64, !dbg !1423
  %205 = ptrtoint i8* %192 to i64, !dbg !1423
  %206 = sub i64 %204, %205, !dbg !1423
  %207 = sext i32 %203 to i64, !dbg !1425
  %208 = icmp sgt i64 %206, %207, !dbg !1423
  br i1 %208, label %227, label %209, !dbg !1426

; <label>:209                                     ; preds = %197
  %210 = ptrtoint i8* %strend to i64, !dbg !1427
  %211 = ptrtoint i8* %192 to i64, !dbg !1427
  %212 = sub i64 %210, %211, !dbg !1427
  %213 = sub nsw i32 %203, 1, !dbg !1428
  %214 = sext i32 %213 to i64, !dbg !1428
  %215 = icmp slt i64 %212, %214, !dbg !1427
  br i1 %215, label %227, label %216, !dbg !1426

; <label>:216                                     ; preds = %209
  %217 = ptrtoint i8* %strend to i64, !dbg !1429
  %218 = ptrtoint i8* %192 to i64, !dbg !1429
  %219 = sub i64 %217, %218, !dbg !1429
  %220 = sext i32 %203 to i64, !dbg !1430
  %221 = icmp eq i64 %219, %220, !dbg !1429
  br i1 %221, label %222, label %228, !dbg !1426

; <label>:222                                     ; preds = %216
  %223 = getelementptr inbounds i8* %strend, i64 -1, !dbg !1431
  %224 = load i8* %223, align 1, !dbg !1431
  %225 = sext i8 %224 to i32, !dbg !1431
  %226 = icmp ne i32 %225, 10, !dbg !1431
  br i1 %226, label %227, label %228, !dbg !1426

; <label>:227                                     ; preds = %222, %209, %197
  br label %1642, !dbg !1432

; <label>:228                                     ; preds = %222, %216
  %229 = add nsw i32 %203, -1, !dbg !1434
  call void @llvm.dbg.value(metadata i32 %229, i64 0, metadata !1421, metadata !566), !dbg !1422
  %230 = icmp ne i32 %229, 0, !dbg !1435
  br i1 %230, label %231, label %255, !dbg !1435

; <label>:231                                     ; preds = %228
  %232 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 0, !dbg !1436
  %233 = load i8** %232, align 8, !dbg !1436
  %234 = bitcast i8* %233 to %struct.xpv*, !dbg !1436
  %235 = getelementptr inbounds %struct.xpv* %234, i32 0, i32 0, !dbg !1436
  %236 = load i8** %235, align 8, !dbg !1436
  %237 = load i8* %236, align 1, !dbg !1439
  %238 = sext i8 %237 to i32, !dbg !1439
  %239 = load i8* %192, align 1, !dbg !1440
  %240 = sext i8 %239 to i32, !dbg !1440
  %241 = icmp ne i32 %238, %240, !dbg !1439
  br i1 %241, label %253, label %242, !dbg !1435

; <label>:242                                     ; preds = %231
  %243 = icmp sgt i32 %229, 1, !dbg !1441
  br i1 %243, label %244, label %255, !dbg !1435

; <label>:244                                     ; preds = %242
  %245 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 0, !dbg !1442
  %246 = load i8** %245, align 8, !dbg !1442
  %247 = bitcast i8* %246 to %struct.xpv*, !dbg !1442
  %248 = getelementptr inbounds %struct.xpv* %247, i32 0, i32 0, !dbg !1442
  %249 = load i8** %248, align 8, !dbg !1442
  %250 = sext i32 %229 to i64, !dbg !1442
  %251 = call i32 @memcmp(i8* %249, i8* %192, i64 %250), !dbg !1442
  %252 = icmp ne i32 %251, 0, !dbg !1435
  br i1 %252, label %253, label %255, !dbg !1435

; <label>:253                                     ; preds = %244, %231
  br label %254, !dbg !1443

; <label>:254                                     ; preds = %284, %253
  br label %1642, !dbg !1444

; <label>:255                                     ; preds = %244, %242, %228
  br label %286, !dbg !1446

; <label>:256                                     ; preds = %191
  %257 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 0, !dbg !1447
  %258 = load i8** %257, align 8, !dbg !1447
  %259 = bitcast i8* %258 to %struct.xpv*, !dbg !1447
  %260 = getelementptr inbounds %struct.xpv* %259, i32 0, i32 0, !dbg !1447
  %261 = load i8** %260, align 8, !dbg !1447
  %262 = load i8* %261, align 1, !dbg !1449
  %263 = sext i8 %262 to i32, !dbg !1449
  %264 = load i8* %192, align 1, !dbg !1450
  %265 = sext i8 %264 to i32, !dbg !1450
  %266 = icmp ne i32 %263, %265, !dbg !1449
  br i1 %266, label %284, label %267, !dbg !1451

; <label>:267                                     ; preds = %256
  %268 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 0, !dbg !1452
  %269 = load i8** %268, align 8, !dbg !1452
  %270 = bitcast i8* %269 to %struct.xpv*, !dbg !1452
  %271 = getelementptr inbounds %struct.xpv* %270, i32 0, i32 1, !dbg !1452
  %272 = load i64* %271, align 8, !dbg !1452
  %273 = trunc i64 %272 to i32, !dbg !1452
  call void @llvm.dbg.value(metadata i32 %273, i64 0, metadata !1421, metadata !566), !dbg !1422
  %274 = icmp sgt i32 %273, 1, !dbg !1453
  br i1 %274, label %275, label %285, !dbg !1451

; <label>:275                                     ; preds = %267
  %276 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 0, !dbg !1454
  %277 = load i8** %276, align 8, !dbg !1454
  %278 = bitcast i8* %277 to %struct.xpv*, !dbg !1454
  %279 = getelementptr inbounds %struct.xpv* %278, i32 0, i32 0, !dbg !1454
  %280 = load i8** %279, align 8, !dbg !1454
  %281 = sext i32 %273 to i64, !dbg !1454
  %282 = call i32 @memcmp(i8* %280, i8* %192, i64 %281), !dbg !1454
  %283 = icmp ne i32 %282, 0, !dbg !1451
  br i1 %283, label %284, label %285, !dbg !1451

; <label>:284                                     ; preds = %275, %256
  br label %254, !dbg !1455

; <label>:285                                     ; preds = %275, %267
  br label %286

; <label>:286                                     ; preds = %285, %255
  br label %1204, !dbg !1456

; <label>:287                                     ; preds = %163, %149
  br label %288, !dbg !1457

; <label>:288                                     ; preds = %287, %129
  call void @llvm.dbg.value(metadata i8* %strpos, i64 0, metadata !1414, metadata !566), !dbg !1415
  %289 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1458
  %290 = load %struct.reg_substr_data** %289, align 8, !dbg !1458
  %291 = getelementptr inbounds %struct.reg_substr_data* %290, i32 0, i32 0, !dbg !1458
  %292 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %291, i32 0, i64 2, !dbg !1458
  %293 = getelementptr inbounds %struct.reg_substr_datum* %292, i32 0, i32 0, !dbg !1458
  %294 = load i32* %293, align 4, !dbg !1458
  call void @llvm.dbg.value(metadata i32 %294, i64 0, metadata !1315, metadata !566), !dbg !1316
  %295 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 10, !dbg !1459
  %296 = load i32* %295, align 4, !dbg !1459
  %297 = sub nsw i32 %296, %294, !dbg !1459
  %298 = sext i32 %297 to i64, !dbg !1459
  %299 = icmp ne i32 %8, 0, !dbg !1460
  br i1 %299, label %300, label %302, !dbg !1460

; <label>:300                                     ; preds = %288
  %301 = call i64 @Perl_sv_len_utf8(%struct.sv* %check.0), !dbg !1461
  br label %308, !dbg !1461

; <label>:302                                     ; preds = %288
  %303 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 0, !dbg !1462
  %304 = load i8** %303, align 8, !dbg !1462
  %305 = bitcast i8* %304 to %struct.xpv*, !dbg !1462
  %306 = getelementptr inbounds %struct.xpv* %305, i32 0, i32 1, !dbg !1462
  %307 = load i64* %306, align 8, !dbg !1462
  br label %308, !dbg !1462

; <label>:308                                     ; preds = %302, %300
  %309 = phi i64 [ %301, %300 ], [ %307, %302 ], !dbg !1460
  %310 = sub i64 %298, %309, !dbg !1459
  %311 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 2, !dbg !1464
  %312 = load i32* %311, align 4, !dbg !1464
  %313 = and i32 %312, 1073741824, !dbg !1464
  %314 = icmp ne i32 %313, 0, !dbg !1464
  %315 = zext i1 %314 to i32, !dbg !1464
  %316 = sext i32 %315 to i64, !dbg !1465
  %317 = add i64 %310, %316, !dbg !1459
  %318 = trunc i64 %317 to i32, !dbg !1459
  call void @llvm.dbg.value(metadata i32 %318, i64 0, metadata !1317, metadata !566), !dbg !1318
  %319 = icmp ne i32 %132, 0, !dbg !1466
  br i1 %319, label %365, label %320, !dbg !1466

; <label>:320                                     ; preds = %308
  %321 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1467
  %322 = load %struct.reg_substr_data** %321, align 8, !dbg !1467
  %323 = getelementptr inbounds %struct.reg_substr_data* %322, i32 0, i32 0, !dbg !1467
  %324 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %323, i32 0, i64 2, !dbg !1467
  %325 = getelementptr inbounds %struct.reg_substr_datum* %324, i32 0, i32 1, !dbg !1467
  %326 = load i32* %325, align 4, !dbg !1467
  %327 = sext i32 %326 to i64, !dbg !1467
  %328 = icmp ne i32 %8, 0, !dbg !1470
  br i1 %328, label %329, label %331, !dbg !1470

; <label>:329                                     ; preds = %320
  %330 = call i64 @Perl_sv_len_utf8(%struct.sv* %check.0), !dbg !1471
  br label %337, !dbg !1471

; <label>:331                                     ; preds = %320
  %332 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 0, !dbg !1473
  %333 = load i8** %332, align 8, !dbg !1473
  %334 = bitcast i8* %333 to %struct.xpv*, !dbg !1473
  %335 = getelementptr inbounds %struct.xpv* %334, i32 0, i32 1, !dbg !1473
  %336 = load i64* %335, align 8, !dbg !1473
  br label %337, !dbg !1473

; <label>:337                                     ; preds = %331, %329
  %338 = phi i64 [ %330, %329 ], [ %336, %331 ], !dbg !1470
  %339 = add i64 %327, %338, !dbg !1475
  %340 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 2, !dbg !1478
  %341 = load i32* %340, align 4, !dbg !1478
  %342 = and i32 %341, 1073741824, !dbg !1478
  %343 = icmp ne i32 %342, 0, !dbg !1478
  %344 = zext i1 %343 to i32, !dbg !1478
  %345 = sext i32 %344 to i64, !dbg !1479
  %346 = sub i64 %339, %345, !dbg !1467
  %347 = trunc i64 %346 to i32, !dbg !1467
  call void @llvm.dbg.value(metadata i32 %347, i64 0, metadata !1480, metadata !566), !dbg !1481
  %348 = load i8* @PL_reg_match_utf8, align 1, !dbg !1482
  %349 = sext i8 %348 to i32, !dbg !1482
  %350 = icmp ne i32 %349, 0, !dbg !1482
  br i1 %350, label %351, label %353, !dbg !1482

; <label>:351                                     ; preds = %337
  %352 = call i64 @Perl_utf8_distance(i8* %strend, i8* %strpos), !dbg !1483
  br label %357, !dbg !1483

; <label>:353                                     ; preds = %337
  %354 = ptrtoint i8* %strend to i64, !dbg !1484
  %355 = ptrtoint i8* %strpos to i64, !dbg !1484
  %356 = sub i64 %354, %355, !dbg !1484
  br label %357, !dbg !1484

; <label>:357                                     ; preds = %353, %351
  %358 = phi i64 [ %352, %351 ], [ %356, %353 ], !dbg !1482
  %359 = sext i32 %347 to i64, !dbg !1485
  %360 = sub nsw i64 %358, %359, !dbg !1482
  %361 = trunc i64 %360 to i32, !dbg !1482
  call void @llvm.dbg.value(metadata i32 %361, i64 0, metadata !1486, metadata !566), !dbg !1487
  %362 = icmp slt i32 %318, %361, !dbg !1488
  br i1 %362, label %363, label %364, !dbg !1490

; <label>:363                                     ; preds = %357
  call void @llvm.dbg.value(metadata i32 %361, i64 0, metadata !1317, metadata !566), !dbg !1318
  br label %364, !dbg !1491

; <label>:364                                     ; preds = %363, %357
  %end_shift.0 = phi i32 [ %361, %363 ], [ %318, %357 ]
  br label %365, !dbg !1492

; <label>:365                                     ; preds = %364, %308
  %end_shift.1 = phi i32 [ %318, %308 ], [ %end_shift.0, %364 ]
  br label %397, !dbg !1493

; <label>:366                                     ; preds = %108
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1391, metadata !566), !dbg !1392
  call void @llvm.dbg.value(metadata i8* %strpos, i64 0, metadata !1414, metadata !566), !dbg !1415
  %367 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1494
  %368 = load %struct.reg_substr_data** %367, align 8, !dbg !1494
  %369 = getelementptr inbounds %struct.reg_substr_data* %368, i32 0, i32 0, !dbg !1494
  %370 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %369, i32 0, i64 2, !dbg !1494
  %371 = getelementptr inbounds %struct.reg_substr_datum* %370, i32 0, i32 0, !dbg !1494
  %372 = load i32* %371, align 4, !dbg !1494
  call void @llvm.dbg.value(metadata i32 %372, i64 0, metadata !1315, metadata !566), !dbg !1316
  %373 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 10, !dbg !1496
  %374 = load i32* %373, align 4, !dbg !1496
  %375 = sub nsw i32 %374, %372, !dbg !1496
  %376 = sext i32 %375 to i64, !dbg !1496
  %377 = icmp ne i32 %8, 0, !dbg !1497
  br i1 %377, label %378, label %380, !dbg !1497

; <label>:378                                     ; preds = %366
  %379 = call i64 @Perl_sv_len_utf8(%struct.sv* %check.0), !dbg !1498
  br label %386, !dbg !1498

; <label>:380                                     ; preds = %366
  %381 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 0, !dbg !1500
  %382 = load i8** %381, align 8, !dbg !1500
  %383 = bitcast i8* %382 to %struct.xpv*, !dbg !1500
  %384 = getelementptr inbounds %struct.xpv* %383, i32 0, i32 1, !dbg !1500
  %385 = load i64* %384, align 8, !dbg !1500
  br label %386, !dbg !1500

; <label>:386                                     ; preds = %380, %378
  %387 = phi i64 [ %379, %378 ], [ %385, %380 ], !dbg !1497
  %388 = sub i64 %376, %387, !dbg !1496
  %389 = getelementptr inbounds %struct.sv* %check.0, i32 0, i32 2, !dbg !1502
  %390 = load i32* %389, align 4, !dbg !1502
  %391 = and i32 %390, 1073741824, !dbg !1502
  %392 = icmp ne i32 %391, 0, !dbg !1502
  %393 = zext i1 %392 to i32, !dbg !1502
  %394 = sext i32 %393 to i64, !dbg !1503
  %395 = add i64 %388, %394, !dbg !1496
  %396 = trunc i64 %395 to i32, !dbg !1496
  call void @llvm.dbg.value(metadata i32 %396, i64 0, metadata !1317, metadata !566), !dbg !1318
  br label %397

; <label>:397                                     ; preds = %386, %365
  %ml_anch.0 = phi i32 [ %132, %365 ], [ 0, %386 ]
  %end_shift.2 = phi i32 [ %end_shift.1, %365 ], [ %396, %386 ]
  %start_shift.0 = phi i32 [ %294, %365 ], [ %372, %386 ]
  br label %398, !dbg !1504

; <label>:398                                     ; preds = %1594, %1149, %1052, %836, %397
  %ml_anch.1 = phi i32 [ %ml_anch.0, %397 ], [ %ml_anch.8, %1594 ], [ %ml_anch.4, %1149 ], [ %ml_anch.2, %836 ], [ %ml_anch.1, %1052 ]
  %check.1 = phi %struct.sv* [ %check.0, %397 ], [ %check.9, %1594 ], [ %check.4, %1149 ], [ %check.2, %836 ], [ %check.1, %1052 ]
  %s.1 = phi i8* [ %strpos, %397 ], [ %1584, %1594 ], [ %1150, %1149 ], [ %837, %836 ], [ %1053, %1052 ]
  %end_shift.3 = phi i32 [ %end_shift.2, %397 ], [ %end_shift.10, %1594 ], [ %end_shift.6, %1149 ], [ %end_shift.4, %836 ], [ %end_shift.3, %1052 ]
  %start_shift.1 = phi i32 [ %start_shift.0, %397 ], [ %start_shift.8, %1594 ], [ %start_shift.4, %1149 ], [ %start_shift.2, %836 ], [ %start_shift.1, %1052 ]
  %other_last.0 = phi i8* [ null, %397 ], [ %other_last.8, %1594 ], [ %1150, %1149 ], [ %826, %836 ], [ %last3.0, %1052 ]
  %.01 = phi i8* [ %strpos, %397 ], [ %.7, %1594 ], [ %1150, %1149 ], [ %.1, %836 ], [ %.01, %1052 ]
  %399 = and i32 %flags, 4, !dbg !1505
  %400 = icmp ne i32 %399, 0, !dbg !1507
  br i1 %400, label %401, label %478, !dbg !1507

; <label>:401                                     ; preds = %398
  call void @llvm.dbg.declare(metadata i32* %p, metadata !1508, metadata !566), !dbg !1510
  store i32 -1, i32* %p, align 4, !dbg !1510
  %402 = icmp ne %struct.re_scream_pos_data_s* %data, null, !dbg !1511
  br i1 %402, label %403, label %406, !dbg !1511

; <label>:403                                     ; preds = %401
  %404 = getelementptr inbounds %struct.re_scream_pos_data_s* %data, i32 0, i32 1, !dbg !1512
  %405 = load i32** %404, align 8, !dbg !1512
  br label %407, !dbg !1511

; <label>:406                                     ; preds = %401
  br label %407, !dbg !1514

; <label>:407                                     ; preds = %406, %403
  %408 = phi i32* [ %405, %403 ], [ %p, %406 ], !dbg !1511
  call void @llvm.dbg.value(metadata i32* %408, i64 0, metadata !1516, metadata !566), !dbg !1517
  %409 = getelementptr inbounds %struct.sv* %check.1, i32 0, i32 0, !dbg !1518
  %410 = load i8** %409, align 8, !dbg !1518
  %411 = bitcast i8* %410 to %struct.xpvbm*, !dbg !1518
  %412 = getelementptr inbounds %struct.xpvbm* %411, i32 0, i32 9, !dbg !1518
  %413 = load i8* %412, align 1, !dbg !1518
  %414 = zext i8 %413 to i64, !dbg !1520
  %415 = load i32** @PL_screamfirst, align 8, !dbg !1520
  %416 = getelementptr inbounds i32* %415, i64 %414, !dbg !1520
  %417 = load i32* %416, align 4, !dbg !1520
  %418 = icmp sge i32 %417, 0, !dbg !1520
  br i1 %418, label %446, label %419, !dbg !1521

; <label>:419                                     ; preds = %407
  %420 = getelementptr inbounds %struct.sv* %check.1, i32 0, i32 0, !dbg !1522
  %421 = load i8** %420, align 8, !dbg !1522
  %422 = bitcast i8* %421 to %struct.xpvbm*, !dbg !1522
  %423 = getelementptr inbounds %struct.xpvbm* %422, i32 0, i32 9, !dbg !1522
  %424 = load i8* %423, align 1, !dbg !1522
  %425 = zext i8 %424 to i32, !dbg !1522
  %426 = icmp eq i32 %425, 10, !dbg !1522
  br i1 %426, label %427, label %454, !dbg !1521

; <label>:427                                     ; preds = %419
  %428 = getelementptr inbounds %struct.sv* %check.1, i32 0, i32 0, !dbg !1523
  %429 = load i8** %428, align 8, !dbg !1523
  %430 = bitcast i8* %429 to %struct.xpvbm*, !dbg !1523
  %431 = getelementptr inbounds %struct.xpvbm* %430, i32 0, i32 8, !dbg !1523
  %432 = load i16* %431, align 2, !dbg !1523
  %433 = zext i16 %432 to i64, !dbg !1523
  %434 = getelementptr inbounds %struct.sv* %check.1, i32 0, i32 0, !dbg !1524
  %435 = load i8** %434, align 8, !dbg !1524
  %436 = bitcast i8* %435 to %struct.xpv*, !dbg !1524
  %437 = getelementptr inbounds %struct.xpv* %436, i32 0, i32 1, !dbg !1524
  %438 = load i64* %437, align 8, !dbg !1524
  %439 = sub i64 %438, 1, !dbg !1524
  %440 = icmp eq i64 %433, %439, !dbg !1523
  br i1 %440, label %441, label %454, !dbg !1521

; <label>:441                                     ; preds = %427
  %442 = getelementptr inbounds %struct.sv* %check.1, i32 0, i32 2, !dbg !1525
  %443 = load i32* %442, align 4, !dbg !1525
  %444 = and i32 %443, 1073741824, !dbg !1525
  %445 = icmp ne i32 %444, 0, !dbg !1521
  br i1 %445, label %446, label %454, !dbg !1521

; <label>:446                                     ; preds = %441, %407
  %447 = sext i32 %start_shift.1 to i64, !dbg !1526
  %448 = ptrtoint i8* %s.1 to i64, !dbg !1527
  %449 = ptrtoint i8* %53 to i64, !dbg !1527
  %450 = sub i64 %448, %449, !dbg !1527
  %451 = add nsw i64 %447, %450, !dbg !1526
  %452 = trunc i64 %451 to i32, !dbg !1526
  %453 = call i8* @Perl_screaminstr(%struct.sv* %sv, %struct.sv* %check.1, i32 %452, i32 %end_shift.3, i32* %408, i32 0), !dbg !1528
  call void @llvm.dbg.value(metadata i8* %453, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %455, !dbg !1529

; <label>:454                                     ; preds = %441, %427, %419
  br label %1642, !dbg !1530

; <label>:455                                     ; preds = %446
  %456 = icmp ne i8* %453, null, !dbg !1531
  br i1 %456, label %457, label %472, !dbg !1531

; <label>:457                                     ; preds = %455
  %458 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1532
  %459 = load i32* %458, align 4, !dbg !1532
  %460 = and i32 %459, 262144, !dbg !1532
  %461 = icmp ne i32 %460, 0, !dbg !1531
  br i1 %461, label %462, label %472, !dbg !1531

; <label>:462                                     ; preds = %457
  %463 = getelementptr inbounds %struct.sv* %sv, i32 0, i32 0, !dbg !1535
  %464 = load i8** %463, align 8, !dbg !1535
  %465 = bitcast i8* %464 to %struct.xpv*, !dbg !1535
  %466 = getelementptr inbounds %struct.xpv* %465, i32 0, i32 0, !dbg !1535
  %467 = load i8** %466, align 8, !dbg !1535
  %468 = ptrtoint i8* %453 to i64, !dbg !1536
  %469 = ptrtoint i8* %467 to i64, !dbg !1536
  %470 = sub i64 %468, %469, !dbg !1536
  %471 = getelementptr inbounds i8* %53, i64 %470, !dbg !1537
  call void @llvm.dbg.value(metadata i8* %471, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %472, !dbg !1538

; <label>:472                                     ; preds = %462, %457, %455
  %s.2 = phi i8* [ %471, %462 ], [ %453, %457 ], [ %453, %455 ]
  %473 = icmp ne %struct.re_scream_pos_data_s* %data, null, !dbg !1539
  br i1 %473, label %474, label %477, !dbg !1539

; <label>:474                                     ; preds = %472
  %475 = getelementptr inbounds %struct.re_scream_pos_data_s* %data, i32 0, i32 0, !dbg !1540
  %476 = load i8*** %475, align 8, !dbg !1540
  store i8* %s.2, i8** %476, align 8, !dbg !1542
  br label %477, !dbg !1542

; <label>:477                                     ; preds = %474, %472
  br label %525, !dbg !1543

; <label>:478                                     ; preds = %398
  %479 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1544
  %480 = load i32* %479, align 4, !dbg !1544
  %481 = and i32 %480, 2048, !dbg !1544
  %482 = icmp ne i32 %481, 0, !dbg !1546
  br i1 %482, label %483, label %493, !dbg !1546

; <label>:483                                     ; preds = %478
  %484 = sext i32 %start_shift.1 to i64, !dbg !1547
  %485 = getelementptr inbounds i8* %s.1, i64 %484, !dbg !1547
  %486 = sext i32 %end_shift.3 to i64, !dbg !1548
  %487 = sub i64 0, %486, !dbg !1548
  %488 = getelementptr inbounds i8* %strend, i64 %487, !dbg !1548
  %489 = load i32* @PL_multiline, align 4, !dbg !1549
  %490 = icmp ne i32 %489, 0, !dbg !1549
  %491 = select i1 %490, i32 1, i32 0, !dbg !1549
  %492 = call i8* @Perl_fbm_instr(i8* %485, i8* %488, %struct.sv* %check.1, i32 %491), !dbg !1550
  call void @llvm.dbg.value(metadata i8* %492, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %524, !dbg !1551

; <label>:493                                     ; preds = %478
  %494 = load i8* @PL_reg_match_utf8, align 1, !dbg !1552
  %495 = sext i8 %494 to i32, !dbg !1552
  %496 = icmp ne i32 %495, 0, !dbg !1552
  br i1 %496, label %497, label %501, !dbg !1552

; <label>:497                                     ; preds = %493
  %498 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %s.1, i32 %start_shift.1, i8* %strend), !dbg !1553
  %499 = sext i32 %498 to i64, !dbg !1553
  %500 = inttoptr i64 %499 to i8*, !dbg !1553
  br label %504, !dbg !1553

; <label>:501                                     ; preds = %493
  %502 = sext i32 %start_shift.1 to i64, !dbg !1555
  %503 = getelementptr inbounds i8* %s.1, i64 %502, !dbg !1555
  br label %504, !dbg !1555

; <label>:504                                     ; preds = %501, %497
  %505 = phi i8* [ %500, %497 ], [ %503, %501 ], !dbg !1552
  %506 = load i8* @PL_reg_match_utf8, align 1, !dbg !1557
  %507 = sext i8 %506 to i32, !dbg !1557
  %508 = icmp ne i32 %507, 0, !dbg !1557
  br i1 %508, label %509, label %514, !dbg !1557

; <label>:509                                     ; preds = %504
  %510 = sub nsw i32 0, %end_shift.3, !dbg !1558
  %511 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %strend, i32 %510, i8* %53), !dbg !1558
  %512 = sext i32 %511 to i64, !dbg !1558
  %513 = inttoptr i64 %512 to i8*, !dbg !1558
  br label %518, !dbg !1558

; <label>:514                                     ; preds = %504
  %515 = sub nsw i32 0, %end_shift.3, !dbg !1559
  %516 = sext i32 %515 to i64, !dbg !1559
  %517 = getelementptr inbounds i8* %strend, i64 %516, !dbg !1559
  br label %518, !dbg !1559

; <label>:518                                     ; preds = %514, %509
  %519 = phi i8* [ %513, %509 ], [ %517, %514 ], !dbg !1557
  %520 = load i32* @PL_multiline, align 4, !dbg !1560
  %521 = icmp ne i32 %520, 0, !dbg !1560
  %522 = select i1 %521, i32 1, i32 0, !dbg !1560
  %523 = call i8* @Perl_fbm_instr(i8* %505, i8* %519, %struct.sv* %check.1, i32 %522), !dbg !1561
  call void @llvm.dbg.value(metadata i8* %523, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %524

; <label>:524                                     ; preds = %518, %483
  %s.3 = phi i8* [ %492, %483 ], [ %523, %518 ]
  br label %525

; <label>:525                                     ; preds = %524, %477
  %s.4 = phi i8* [ %s.2, %477 ], [ %s.3, %524 ]
  %526 = icmp ne i8* %s.4, null, !dbg !1562
  br i1 %526, label %528, label %527, !dbg !1562

; <label>:527                                     ; preds = %525
  br label %1642, !dbg !1563

; <label>:528                                     ; preds = %525
  call void @llvm.dbg.value(metadata i8* %s.4, i64 0, metadata !1328, metadata !566), !dbg !1329
  %529 = icmp ne i32 %8, 0, !dbg !1565
  br i1 %529, label %530, label %546, !dbg !1565

; <label>:530                                     ; preds = %528
  %531 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1566
  %532 = load %struct.reg_substr_data** %531, align 8, !dbg !1566
  %533 = getelementptr inbounds %struct.reg_substr_data* %532, i32 0, i32 0, !dbg !1566
  %534 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %533, i32 0, i64 1, !dbg !1566
  %535 = getelementptr inbounds %struct.reg_substr_datum* %534, i32 0, i32 3, !dbg !1566
  %536 = load %struct.sv** %535, align 8, !dbg !1566
  %537 = icmp ne %struct.sv* %536, null, !dbg !1565
  br i1 %537, label %538, label %1058, !dbg !1565

; <label>:538                                     ; preds = %530
  %539 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1569
  %540 = load %struct.reg_substr_data** %539, align 8, !dbg !1569
  %541 = getelementptr inbounds %struct.reg_substr_data* %540, i32 0, i32 0, !dbg !1569
  %542 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %541, i32 0, i64 0, !dbg !1569
  %543 = getelementptr inbounds %struct.reg_substr_datum* %542, i32 0, i32 3, !dbg !1569
  %544 = load %struct.sv** %543, align 8, !dbg !1569
  %545 = icmp ne %struct.sv* %544, null, !dbg !1565
  br i1 %545, label %562, label %1058, !dbg !1565

; <label>:546                                     ; preds = %528
  %547 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1571
  %548 = load %struct.reg_substr_data** %547, align 8, !dbg !1571
  %549 = getelementptr inbounds %struct.reg_substr_data* %548, i32 0, i32 0, !dbg !1571
  %550 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %549, i32 0, i64 1, !dbg !1571
  %551 = getelementptr inbounds %struct.reg_substr_datum* %550, i32 0, i32 2, !dbg !1571
  %552 = load %struct.sv** %551, align 8, !dbg !1571
  %553 = icmp ne %struct.sv* %552, null, !dbg !1565
  br i1 %553, label %554, label %1058, !dbg !1565

; <label>:554                                     ; preds = %546
  %555 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1573
  %556 = load %struct.reg_substr_data** %555, align 8, !dbg !1573
  %557 = getelementptr inbounds %struct.reg_substr_data* %556, i32 0, i32 0, !dbg !1573
  %558 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %557, i32 0, i64 0, !dbg !1573
  %559 = getelementptr inbounds %struct.reg_substr_datum* %558, i32 0, i32 2, !dbg !1573
  %560 = load %struct.sv** %559, align 8, !dbg !1573
  %561 = icmp ne %struct.sv* %560, null, !dbg !1565
  br i1 %561, label %562, label %1058, !dbg !1565

; <label>:562                                     ; preds = %554, %538
  %563 = icmp ne i8* %other_last.0, null, !dbg !1575
  br i1 %563, label %565, label %564, !dbg !1575

; <label>:564                                     ; preds = %562
  call void @llvm.dbg.value(metadata i8* %.01, i64 0, metadata !1326, metadata !566), !dbg !1327
  br label %565, !dbg !1577

; <label>:565                                     ; preds = %564, %562
  %other_last.1 = phi i8* [ %other_last.0, %562 ], [ %.01, %564 ]
  %566 = icmp ne i32 %8, 0, !dbg !1579
  br i1 %566, label %567, label %574, !dbg !1579

; <label>:567                                     ; preds = %565
  %568 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1581
  %569 = load %struct.reg_substr_data** %568, align 8, !dbg !1581
  %570 = getelementptr inbounds %struct.reg_substr_data* %569, i32 0, i32 0, !dbg !1581
  %571 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %570, i32 0, i64 1, !dbg !1581
  %572 = getelementptr inbounds %struct.reg_substr_datum* %571, i32 0, i32 3, !dbg !1581
  %573 = load %struct.sv** %572, align 8, !dbg !1581
  br label %581, !dbg !1579

; <label>:574                                     ; preds = %565
  %575 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1583
  %576 = load %struct.reg_substr_data** %575, align 8, !dbg !1583
  %577 = getelementptr inbounds %struct.reg_substr_data* %576, i32 0, i32 0, !dbg !1583
  %578 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %577, i32 0, i64 1, !dbg !1583
  %579 = getelementptr inbounds %struct.reg_substr_datum* %578, i32 0, i32 2, !dbg !1583
  %580 = load %struct.sv** %579, align 8, !dbg !1583
  br label %581, !dbg !1579

; <label>:581                                     ; preds = %574, %567
  %582 = phi %struct.sv* [ %573, %567 ], [ %580, %574 ], !dbg !1579
  %583 = icmp eq %struct.sv* %check.1, %582, !dbg !1585
  br i1 %583, label %584, label %879, !dbg !1588

; <label>:584                                     ; preds = %581
  br label %585, !dbg !1589

; <label>:585                                     ; preds = %1603, %1145, %584
  %ml_anch.2 = phi i32 [ %ml_anch.1, %584 ], [ %ml_anch.8, %1603 ], [ %ml_anch.4, %1145 ]
  %check.2 = phi %struct.sv* [ %check.1, %584 ], [ %check.9, %1603 ], [ %check.4, %1145 ]
  %s.5 = phi i8* [ %s.4, %584 ], [ %check_at.6, %1603 ], [ %s.10, %1145 ]
  %end_shift.4 = phi i32 [ %end_shift.3, %584 ], [ %end_shift.10, %1603 ], [ %end_shift.6, %1145 ]
  %start_shift.2 = phi i32 [ %start_shift.1, %584 ], [ %start_shift.8, %1603 ], [ %start_shift.4, %1145 ]
  %other_last.2 = phi i8* [ %other_last.1, %584 ], [ %other_last.8, %1603 ], [ %other_last.4, %1145 ]
  %check_at.0 = phi i8* [ %s.4, %584 ], [ %check_at.6, %1603 ], [ %check_at.2, %1145 ]
  %.1 = phi i8* [ %.01, %584 ], [ %.7, %1603 ], [ %1146, %1145 ]
  %586 = load i8* @PL_reg_match_utf8, align 1, !dbg !1591
  %587 = sext i8 %586 to i32, !dbg !1591
  %588 = icmp ne i32 %587, 0, !dbg !1591
  br i1 %588, label %589, label %594, !dbg !1591

; <label>:589                                     ; preds = %585
  %590 = sub nsw i32 0, %start_shift.2, !dbg !1594
  %591 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %s.5, i32 %590, i8* %53), !dbg !1594
  %592 = sext i32 %591 to i64, !dbg !1594
  %593 = inttoptr i64 %592 to i8*, !dbg !1594
  br label %598, !dbg !1594

; <label>:594                                     ; preds = %585
  %595 = sub nsw i32 0, %start_shift.2, !dbg !1596
  %596 = sext i32 %595 to i64, !dbg !1596
  %597 = getelementptr inbounds i8* %s.5, i64 %596, !dbg !1596
  br label %598, !dbg !1596

; <label>:598                                     ; preds = %594, %589
  %599 = phi i8* [ %593, %589 ], [ %597, %594 ], !dbg !1591
  call void @llvm.dbg.value(metadata i8* %599, i64 0, metadata !1598, metadata !566), !dbg !1599
  call void @llvm.dbg.value(metadata i8* %s.5, i64 0, metadata !1600, metadata !566), !dbg !1601
  %600 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1602
  %601 = load %struct.reg_substr_data** %600, align 8, !dbg !1602
  %602 = getelementptr inbounds %struct.reg_substr_data* %601, i32 0, i32 0, !dbg !1602
  %603 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %602, i32 0, i64 2, !dbg !1602
  %604 = getelementptr inbounds %struct.reg_substr_datum* %603, i32 0, i32 1, !dbg !1602
  %605 = load i32* %604, align 4, !dbg !1602
  %606 = sext i32 %605 to i64, !dbg !1603
  %607 = sub i64 0, %606, !dbg !1603
  %608 = getelementptr inbounds i8* %s.5, i64 %607, !dbg !1603
  call void @llvm.dbg.value(metadata i8* %608, i64 0, metadata !1604, metadata !566), !dbg !1605
  %609 = ptrtoint i8* %s.5 to i64, !dbg !1606
  %610 = ptrtoint i8* %.1 to i64, !dbg !1606
  %611 = sub i64 %609, %610, !dbg !1606
  %612 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1608
  %613 = load %struct.reg_substr_data** %612, align 8, !dbg !1608
  %614 = getelementptr inbounds %struct.reg_substr_data* %613, i32 0, i32 0, !dbg !1608
  %615 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %614, i32 0, i64 2, !dbg !1608
  %616 = getelementptr inbounds %struct.reg_substr_datum* %615, i32 0, i32 1, !dbg !1608
  %617 = load i32* %616, align 4, !dbg !1608
  %618 = sext i32 %617 to i64, !dbg !1608
  %619 = icmp sgt i64 %611, %618, !dbg !1606
  br i1 %619, label %620, label %637, !dbg !1609

; <label>:620                                     ; preds = %598
  %621 = icmp ne i32 %8, 0, !dbg !1609
  br i1 %621, label %622, label %636, !dbg !1609

; <label>:622                                     ; preds = %620
  %623 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1610
  %624 = load %struct.reg_substr_data** %623, align 8, !dbg !1610
  %625 = getelementptr inbounds %struct.reg_substr_data* %624, i32 0, i32 0, !dbg !1610
  %626 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %625, i32 0, i64 2, !dbg !1610
  %627 = getelementptr inbounds %struct.reg_substr_datum* %626, i32 0, i32 1, !dbg !1610
  %628 = load i32* %627, align 4, !dbg !1610
  %629 = sub nsw i32 0, %628, !dbg !1610
  %630 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghopmaybe3 to i32 (i8*, i32, i8*, ...)*)(i8* %s.5, i32 %629, i8* %.1), !dbg !1610
  %631 = sext i32 %630 to i64, !dbg !1610
  %632 = inttoptr i64 %631 to i8*, !dbg !1610
  call void @llvm.dbg.value(metadata i8* %632, i64 0, metadata !1604, metadata !566), !dbg !1605
  %633 = icmp ne i8* %632, null, !dbg !1609
  br i1 %633, label %634, label %637, !dbg !1609

; <label>:634                                     ; preds = %622
  %635 = icmp ugt i8* %632, %.1, !dbg !1611
  br i1 %635, label %636, label %637, !dbg !1609

; <label>:636                                     ; preds = %634, %620
  %t.0 = phi i8* [ %632, %634 ], [ %608, %620 ]
  br label %638, !dbg !1612

; <label>:637                                     ; preds = %634, %622, %598
  call void @llvm.dbg.value(metadata i8* %.1, i64 0, metadata !1604, metadata !566), !dbg !1605
  br label %638

; <label>:638                                     ; preds = %637, %636
  %t.1 = phi i8* [ %t.0, %636 ], [ %.1, %637 ]
  %639 = load i8* @PL_reg_match_utf8, align 1, !dbg !1614
  %640 = sext i8 %639 to i32, !dbg !1614
  %641 = icmp ne i32 %640, 0, !dbg !1614
  br i1 %641, label %642, label %652, !dbg !1614

; <label>:642                                     ; preds = %638
  %643 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1615
  %644 = load %struct.reg_substr_data** %643, align 8, !dbg !1615
  %645 = getelementptr inbounds %struct.reg_substr_data* %644, i32 0, i32 0, !dbg !1615
  %646 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %645, i32 0, i64 0, !dbg !1615
  %647 = getelementptr inbounds %struct.reg_substr_datum* %646, i32 0, i32 0, !dbg !1615
  %648 = load i32* %647, align 4, !dbg !1615
  %649 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %t.1, i32 %648, i8* %strend), !dbg !1615
  %650 = sext i32 %649 to i64, !dbg !1615
  %651 = inttoptr i64 %650 to i8*, !dbg !1615
  br label %661, !dbg !1615

; <label>:652                                     ; preds = %638
  %653 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1616
  %654 = load %struct.reg_substr_data** %653, align 8, !dbg !1616
  %655 = getelementptr inbounds %struct.reg_substr_data* %654, i32 0, i32 0, !dbg !1616
  %656 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %655, i32 0, i64 0, !dbg !1616
  %657 = getelementptr inbounds %struct.reg_substr_datum* %656, i32 0, i32 0, !dbg !1616
  %658 = load i32* %657, align 4, !dbg !1616
  %659 = sext i32 %658 to i64, !dbg !1616
  %660 = getelementptr inbounds i8* %t.1, i64 %659, !dbg !1616
  br label %661, !dbg !1616

; <label>:661                                     ; preds = %652, %642
  %662 = phi i8* [ %651, %642 ], [ %660, %652 ], !dbg !1614
  call void @llvm.dbg.value(metadata i8* %662, i64 0, metadata !1604, metadata !566), !dbg !1605
  %663 = icmp ult i8* %662, %other_last.2, !dbg !1617
  br i1 %663, label %664, label %665, !dbg !1619

; <label>:664                                     ; preds = %661
  call void @llvm.dbg.value(metadata i8* %other_last.2, i64 0, metadata !1604, metadata !566), !dbg !1605
  br label %665, !dbg !1620

; <label>:665                                     ; preds = %664, %661
  %t.2 = phi i8* [ %other_last.2, %664 ], [ %662, %661 ]
  %666 = load i8* @PL_reg_match_utf8, align 1, !dbg !1621
  %667 = sext i8 %666 to i32, !dbg !1621
  %668 = icmp ne i32 %667, 0, !dbg !1621
  br i1 %668, label %669, label %676, !dbg !1621

; <label>:669                                     ; preds = %665
  %670 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 10, !dbg !1622
  %671 = load i32* %670, align 4, !dbg !1622
  %672 = sub nsw i32 0, %671, !dbg !1622
  %673 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %strend, i32 %672, i8* %53), !dbg !1622
  %674 = sext i32 %673 to i64, !dbg !1622
  %675 = inttoptr i64 %674 to i8*, !dbg !1622
  br label %682, !dbg !1622

; <label>:676                                     ; preds = %665
  %677 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 10, !dbg !1623
  %678 = load i32* %677, align 4, !dbg !1623
  %679 = sub nsw i32 0, %678, !dbg !1623
  %680 = sext i32 %679 to i64, !dbg !1623
  %681 = getelementptr inbounds i8* %strend, i64 %680, !dbg !1623
  br label %682, !dbg !1623

; <label>:682                                     ; preds = %676, %669
  %683 = phi i8* [ %675, %669 ], [ %681, %676 ], !dbg !1621
  call void @llvm.dbg.value(metadata i8* %683, i64 0, metadata !1624, metadata !566), !dbg !1625
  call void @llvm.dbg.value(metadata i8* %683, i64 0, metadata !1626, metadata !566), !dbg !1627
  %684 = icmp ult i8* %599, %683, !dbg !1628
  br i1 %684, label %685, label %686, !dbg !1630

; <label>:685                                     ; preds = %682
  call void @llvm.dbg.value(metadata i8* %599, i64 0, metadata !1624, metadata !566), !dbg !1625
  br label %686, !dbg !1631

; <label>:686                                     ; preds = %685, %682
  %last1.0 = phi i8* [ %599, %685 ], [ %683, %682 ]
  %687 = icmp ne i32 %8, 0, !dbg !1632
  br i1 %687, label %688, label %695, !dbg !1632

; <label>:688                                     ; preds = %686
  %689 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1633
  %690 = load %struct.reg_substr_data** %689, align 8, !dbg !1633
  %691 = getelementptr inbounds %struct.reg_substr_data* %690, i32 0, i32 0, !dbg !1633
  %692 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %691, i32 0, i64 0, !dbg !1633
  %693 = getelementptr inbounds %struct.reg_substr_datum* %692, i32 0, i32 3, !dbg !1633
  %694 = load %struct.sv** %693, align 8, !dbg !1633
  br label %702, !dbg !1632

; <label>:695                                     ; preds = %686
  %696 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1634
  %697 = load %struct.reg_substr_data** %696, align 8, !dbg !1634
  %698 = getelementptr inbounds %struct.reg_substr_data* %697, i32 0, i32 0, !dbg !1634
  %699 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %698, i32 0, i64 0, !dbg !1634
  %700 = getelementptr inbounds %struct.reg_substr_datum* %699, i32 0, i32 2, !dbg !1634
  %701 = load %struct.sv** %700, align 8, !dbg !1634
  br label %702, !dbg !1632

; <label>:702                                     ; preds = %695, %688
  %703 = phi %struct.sv* [ %694, %688 ], [ %701, %695 ], !dbg !1632
  call void @llvm.dbg.value(metadata %struct.sv* %703, i64 0, metadata !1635, metadata !566), !dbg !1636
  %704 = icmp eq %struct.sv* %703, @PL_sv_undef, !dbg !1637
  br i1 %704, label %705, label %706, !dbg !1639

; <label>:705                                     ; preds = %702
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %795, !dbg !1640

; <label>:706                                     ; preds = %702
  %707 = load i8* @PL_reg_match_utf8, align 1, !dbg !1642
  %708 = sext i8 %707 to i32, !dbg !1642
  %709 = icmp ne i32 %708, 0, !dbg !1642
  br i1 %709, label %710, label %750, !dbg !1642

; <label>:710                                     ; preds = %706
  %711 = load i8* @PL_reg_match_utf8, align 1, !dbg !1643
  %712 = sext i8 %711 to i32, !dbg !1643
  %713 = icmp ne i32 %712, 0, !dbg !1643
  br i1 %713, label %714, label %724, !dbg !1643

; <label>:714                                     ; preds = %710
  %715 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1645
  %716 = load %struct.reg_substr_data** %715, align 8, !dbg !1645
  %717 = getelementptr inbounds %struct.reg_substr_data* %716, i32 0, i32 0, !dbg !1645
  %718 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %717, i32 0, i64 0, !dbg !1645
  %719 = getelementptr inbounds %struct.reg_substr_datum* %718, i32 0, i32 0, !dbg !1645
  %720 = load i32* %719, align 4, !dbg !1645
  %721 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %last1.0, i32 %720, i8* %strend), !dbg !1645
  %722 = sext i32 %721 to i64, !dbg !1645
  %723 = inttoptr i64 %722 to i8*, !dbg !1645
  br label %733, !dbg !1645

; <label>:724                                     ; preds = %710
  %725 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1647
  %726 = load %struct.reg_substr_data** %725, align 8, !dbg !1647
  %727 = getelementptr inbounds %struct.reg_substr_data* %726, i32 0, i32 0, !dbg !1647
  %728 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %727, i32 0, i64 0, !dbg !1647
  %729 = getelementptr inbounds %struct.reg_substr_datum* %728, i32 0, i32 0, !dbg !1647
  %730 = load i32* %729, align 4, !dbg !1647
  %731 = sext i32 %730 to i64, !dbg !1647
  %732 = getelementptr inbounds i8* %last1.0, i64 %731, !dbg !1647
  br label %733, !dbg !1647

; <label>:733                                     ; preds = %724, %714
  %734 = phi i8* [ %723, %714 ], [ %732, %724 ], !dbg !1642
  %735 = getelementptr inbounds %struct.sv* %703, i32 0, i32 0, !dbg !1649
  %736 = load i8** %735, align 8, !dbg !1649
  %737 = bitcast i8* %736 to %struct.xpv*, !dbg !1649
  %738 = getelementptr inbounds %struct.xpv* %737, i32 0, i32 1, !dbg !1649
  %739 = load i64* %738, align 8, !dbg !1649
  %740 = getelementptr inbounds i8* %734, i64 %739, !dbg !1649
  %741 = getelementptr inbounds %struct.sv* %703, i32 0, i32 2, !dbg !1649
  %742 = load i32* %741, align 4, !dbg !1649
  %743 = and i32 %742, 1073741824, !dbg !1649
  %744 = icmp ne i32 %743, 0, !dbg !1649
  %745 = zext i1 %744 to i32, !dbg !1649
  %746 = sub nsw i32 0, %745, !dbg !1649
  %747 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %740, i32 %746, i8* %53), !dbg !1649
  %748 = sext i32 %747 to i64, !dbg !1649
  %749 = inttoptr i64 %748 to i8*, !dbg !1649
  br label %789, !dbg !1649

; <label>:750                                     ; preds = %706
  %751 = load i8* @PL_reg_match_utf8, align 1, !dbg !1652
  %752 = sext i8 %751 to i32, !dbg !1652
  %753 = icmp ne i32 %752, 0, !dbg !1652
  br i1 %753, label %754, label %764, !dbg !1652

; <label>:754                                     ; preds = %750
  %755 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1654
  %756 = load %struct.reg_substr_data** %755, align 8, !dbg !1654
  %757 = getelementptr inbounds %struct.reg_substr_data* %756, i32 0, i32 0, !dbg !1654
  %758 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %757, i32 0, i64 0, !dbg !1654
  %759 = getelementptr inbounds %struct.reg_substr_datum* %758, i32 0, i32 0, !dbg !1654
  %760 = load i32* %759, align 4, !dbg !1654
  %761 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %last1.0, i32 %760, i8* %strend), !dbg !1654
  %762 = sext i32 %761 to i64, !dbg !1654
  %763 = inttoptr i64 %762 to i8*, !dbg !1654
  br label %773, !dbg !1654

; <label>:764                                     ; preds = %750
  %765 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1656
  %766 = load %struct.reg_substr_data** %765, align 8, !dbg !1656
  %767 = getelementptr inbounds %struct.reg_substr_data* %766, i32 0, i32 0, !dbg !1656
  %768 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %767, i32 0, i64 0, !dbg !1656
  %769 = getelementptr inbounds %struct.reg_substr_datum* %768, i32 0, i32 0, !dbg !1656
  %770 = load i32* %769, align 4, !dbg !1656
  %771 = sext i32 %770 to i64, !dbg !1656
  %772 = getelementptr inbounds i8* %last1.0, i64 %771, !dbg !1656
  br label %773, !dbg !1656

; <label>:773                                     ; preds = %764, %754
  %774 = phi i8* [ %763, %754 ], [ %772, %764 ], !dbg !1642
  %775 = getelementptr inbounds %struct.sv* %703, i32 0, i32 0, !dbg !1658
  %776 = load i8** %775, align 8, !dbg !1658
  %777 = bitcast i8* %776 to %struct.xpv*, !dbg !1658
  %778 = getelementptr inbounds %struct.xpv* %777, i32 0, i32 1, !dbg !1658
  %779 = load i64* %778, align 8, !dbg !1658
  %780 = getelementptr inbounds i8* %774, i64 %779, !dbg !1658
  %781 = getelementptr inbounds %struct.sv* %703, i32 0, i32 2, !dbg !1658
  %782 = load i32* %781, align 4, !dbg !1658
  %783 = and i32 %782, 1073741824, !dbg !1658
  %784 = icmp ne i32 %783, 0, !dbg !1658
  %785 = zext i1 %784 to i32, !dbg !1658
  %786 = sub nsw i32 0, %785, !dbg !1658
  %787 = sext i32 %786 to i64, !dbg !1658
  %788 = getelementptr inbounds i8* %780, i64 %787, !dbg !1658
  br label %789, !dbg !1658

; <label>:789                                     ; preds = %773, %733
  %790 = phi i8* [ %749, %733 ], [ %788, %773 ], !dbg !1642
  %791 = load i32* @PL_multiline, align 4, !dbg !1661
  %792 = icmp ne i32 %791, 0, !dbg !1661
  %793 = select i1 %792, i32 1, i32 0, !dbg !1661
  %794 = call i8* @Perl_fbm_instr(i8* %t.2, i8* %790, %struct.sv* %703, i32 %793), !dbg !1662
  call void @llvm.dbg.value(metadata i8* %794, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %795

; <label>:795                                     ; preds = %789, %705
  %s.6 = phi i8* [ null, %705 ], [ %794, %789 ]
  %796 = icmp ne i8* %s.6, null, !dbg !1663
  br i1 %796, label %838, label %797, !dbg !1663

; <label>:797                                     ; preds = %795
  %798 = icmp uge i8* %last1.0, %683, !dbg !1664
  br i1 %798, label %799, label %800, !dbg !1668

; <label>:799                                     ; preds = %797
  br label %1642, !dbg !1669

; <label>:800                                     ; preds = %797
  %801 = load i8* @PL_reg_match_utf8, align 1, !dbg !1671
  %802 = sext i8 %801 to i32, !dbg !1671
  %803 = icmp ne i32 %802, 0, !dbg !1671
  br i1 %803, label %804, label %815, !dbg !1671

; <label>:804                                     ; preds = %800
  %805 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1672
  %806 = load %struct.reg_substr_data** %805, align 8, !dbg !1672
  %807 = getelementptr inbounds %struct.reg_substr_data* %806, i32 0, i32 0, !dbg !1672
  %808 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %807, i32 0, i64 0, !dbg !1672
  %809 = getelementptr inbounds %struct.reg_substr_datum* %808, i32 0, i32 0, !dbg !1672
  %810 = load i32* %809, align 4, !dbg !1672
  %811 = add nsw i32 %810, 1, !dbg !1672
  %812 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %last1.0, i32 %811, i8* %strend), !dbg !1672
  %813 = sext i32 %812 to i64, !dbg !1672
  %814 = inttoptr i64 %813 to i8*, !dbg !1672
  br label %825, !dbg !1672

; <label>:815                                     ; preds = %800
  %816 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1674
  %817 = load %struct.reg_substr_data** %816, align 8, !dbg !1674
  %818 = getelementptr inbounds %struct.reg_substr_data* %817, i32 0, i32 0, !dbg !1674
  %819 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %818, i32 0, i64 0, !dbg !1674
  %820 = getelementptr inbounds %struct.reg_substr_datum* %819, i32 0, i32 0, !dbg !1674
  %821 = load i32* %820, align 4, !dbg !1674
  %822 = sext i32 %821 to i64, !dbg !1674
  %823 = getelementptr inbounds i8* %last1.0, i64 %822, !dbg !1674
  %824 = getelementptr inbounds i8* %823, i64 1, !dbg !1674
  br label %825, !dbg !1674

; <label>:825                                     ; preds = %815, %804
  %826 = phi i8* [ %814, %804 ], [ %824, %815 ], !dbg !1671
  call void @llvm.dbg.value(metadata i8* %826, i64 0, metadata !1326, metadata !566), !dbg !1327
  %827 = load i8* @PL_reg_match_utf8, align 1, !dbg !1676
  %828 = sext i8 %827 to i32, !dbg !1676
  %829 = icmp ne i32 %828, 0, !dbg !1676
  br i1 %829, label %830, label %834, !dbg !1676

; <label>:830                                     ; preds = %825
  %831 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %599, i32 1, i8* %strend), !dbg !1677
  %832 = sext i32 %831 to i64, !dbg !1677
  %833 = inttoptr i64 %832 to i8*, !dbg !1677
  br label %836, !dbg !1677

; <label>:834                                     ; preds = %825
  %835 = getelementptr inbounds i8* %599, i64 1, !dbg !1678
  br label %836, !dbg !1678

; <label>:836                                     ; preds = %834, %830
  %837 = phi i8* [ %833, %830 ], [ %835, %834 ], !dbg !1676
  call void @llvm.dbg.value(metadata i8* %837, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %398, !dbg !1679

; <label>:838                                     ; preds = %795
  %839 = load i8* @PL_reg_match_utf8, align 1, !dbg !1680
  %840 = sext i8 %839 to i32, !dbg !1680
  %841 = icmp ne i32 %840, 0, !dbg !1680
  br i1 %841, label %842, label %853, !dbg !1680

; <label>:842                                     ; preds = %838
  %843 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1682
  %844 = load %struct.reg_substr_data** %843, align 8, !dbg !1682
  %845 = getelementptr inbounds %struct.reg_substr_data* %844, i32 0, i32 0, !dbg !1682
  %846 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %845, i32 0, i64 0, !dbg !1682
  %847 = getelementptr inbounds %struct.reg_substr_datum* %846, i32 0, i32 0, !dbg !1682
  %848 = load i32* %847, align 4, !dbg !1682
  %849 = sub nsw i32 0, %848, !dbg !1682
  %850 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %s.6, i32 %849, i8* %53), !dbg !1682
  %851 = sext i32 %850 to i64, !dbg !1682
  %852 = inttoptr i64 %851 to i8*, !dbg !1682
  br label %863, !dbg !1682

; <label>:853                                     ; preds = %838
  %854 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1684
  %855 = load %struct.reg_substr_data** %854, align 8, !dbg !1684
  %856 = getelementptr inbounds %struct.reg_substr_data* %855, i32 0, i32 0, !dbg !1684
  %857 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %856, i32 0, i64 0, !dbg !1684
  %858 = getelementptr inbounds %struct.reg_substr_datum* %857, i32 0, i32 0, !dbg !1684
  %859 = load i32* %858, align 4, !dbg !1684
  %860 = sub nsw i32 0, %859, !dbg !1684
  %861 = sext i32 %860 to i64, !dbg !1684
  %862 = getelementptr inbounds i8* %s.6, i64 %861, !dbg !1684
  br label %863, !dbg !1684

; <label>:863                                     ; preds = %853, %842
  %864 = phi i8* [ %852, %842 ], [ %862, %853 ], !dbg !1680
  call void @llvm.dbg.value(metadata i8* %864, i64 0, metadata !1604, metadata !566), !dbg !1605
  %865 = load i8* @PL_reg_match_utf8, align 1, !dbg !1686
  %866 = sext i8 %865 to i32, !dbg !1686
  %867 = icmp ne i32 %866, 0, !dbg !1686
  br i1 %867, label %868, label %872, !dbg !1686

; <label>:868                                     ; preds = %863
  %869 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %s.6, i32 1, i8* %strend), !dbg !1687
  %870 = sext i32 %869 to i64, !dbg !1687
  %871 = inttoptr i64 %870 to i8*, !dbg !1687
  br label %874, !dbg !1687

; <label>:872                                     ; preds = %863
  %873 = getelementptr inbounds i8* %s.6, i64 1, !dbg !1688
  br label %874, !dbg !1688

; <label>:874                                     ; preds = %872, %868
  %875 = phi i8* [ %871, %868 ], [ %873, %872 ], !dbg !1686
  call void @llvm.dbg.value(metadata i8* %875, i64 0, metadata !1326, metadata !566), !dbg !1327
  call void @llvm.dbg.value(metadata i8* %s.5, i64 0, metadata !1414, metadata !566), !dbg !1415
  %876 = icmp eq i8* %864, %.1, !dbg !1689
  br i1 %876, label %877, label %878, !dbg !1691

; <label>:877                                     ; preds = %874
  br label %1181, !dbg !1692

; <label>:878                                     ; preds = %874
  br label %1096, !dbg !1693

; <label>:879                                     ; preds = %581
  call void @llvm.dbg.value(metadata i8* %s.4, i64 0, metadata !1694, metadata !566), !dbg !1696
  %880 = load i8* @PL_reg_match_utf8, align 1, !dbg !1697
  %881 = sext i8 %880 to i32, !dbg !1697
  %882 = icmp ne i32 %881, 0, !dbg !1697
  br i1 %882, label %883, label %888, !dbg !1697

; <label>:883                                     ; preds = %879
  %884 = sub nsw i32 0, %start_shift.1, !dbg !1698
  %885 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %s.4, i32 %884, i8* %53), !dbg !1698
  %886 = sext i32 %885 to i64, !dbg !1698
  %887 = inttoptr i64 %886 to i8*, !dbg !1698
  br label %892, !dbg !1698

; <label>:888                                     ; preds = %879
  %889 = sub nsw i32 0, %start_shift.1, !dbg !1700
  %890 = sext i32 %889 to i64, !dbg !1700
  %891 = getelementptr inbounds i8* %s.4, i64 %890, !dbg !1700
  br label %892, !dbg !1700

; <label>:892                                     ; preds = %888, %883
  %893 = phi i8* [ %887, %883 ], [ %891, %888 ], !dbg !1697
  call void @llvm.dbg.value(metadata i8* %893, i64 0, metadata !1604, metadata !566), !dbg !1605
  %894 = load i8* @PL_reg_match_utf8, align 1, !dbg !1702
  %895 = sext i8 %894 to i32, !dbg !1702
  %896 = icmp ne i32 %895, 0, !dbg !1702
  br i1 %896, label %897, label %911, !dbg !1702

; <label>:897                                     ; preds = %892
  %898 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 10, !dbg !1703
  %899 = load i32* %898, align 4, !dbg !1703
  %900 = sub nsw i32 0, %899, !dbg !1703
  %901 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1703
  %902 = load %struct.reg_substr_data** %901, align 8, !dbg !1703
  %903 = getelementptr inbounds %struct.reg_substr_data* %902, i32 0, i32 0, !dbg !1703
  %904 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %903, i32 0, i64 1, !dbg !1703
  %905 = getelementptr inbounds %struct.reg_substr_datum* %904, i32 0, i32 0, !dbg !1703
  %906 = load i32* %905, align 4, !dbg !1703
  %907 = add nsw i32 %900, %906, !dbg !1703
  %908 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %strend, i32 %907, i8* %53), !dbg !1703
  %909 = sext i32 %908 to i64, !dbg !1703
  %910 = inttoptr i64 %909 to i8*, !dbg !1703
  br label %925, !dbg !1703

; <label>:911                                     ; preds = %892
  %912 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 10, !dbg !1704
  %913 = load i32* %912, align 4, !dbg !1704
  %914 = sub nsw i32 0, %913, !dbg !1704
  %915 = sext i32 %914 to i64, !dbg !1704
  %916 = getelementptr inbounds i8* %strend, i64 %915, !dbg !1704
  %917 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1704
  %918 = load %struct.reg_substr_data** %917, align 8, !dbg !1704
  %919 = getelementptr inbounds %struct.reg_substr_data* %918, i32 0, i32 0, !dbg !1704
  %920 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %919, i32 0, i64 1, !dbg !1704
  %921 = getelementptr inbounds %struct.reg_substr_datum* %920, i32 0, i32 0, !dbg !1704
  %922 = load i32* %921, align 4, !dbg !1704
  %923 = sext i32 %922 to i64, !dbg !1704
  %924 = getelementptr inbounds i8* %916, i64 %923, !dbg !1704
  br label %925, !dbg !1704

; <label>:925                                     ; preds = %911, %897
  %926 = phi i8* [ %910, %897 ], [ %924, %911 ], !dbg !1702
  call void @llvm.dbg.value(metadata i8* %926, i64 0, metadata !1705, metadata !566), !dbg !1706
  call void @llvm.dbg.value(metadata i8* %926, i64 0, metadata !1707, metadata !566), !dbg !1708
  %927 = load i8* @PL_reg_match_utf8, align 1, !dbg !1709
  %928 = sext i8 %927 to i32, !dbg !1709
  %929 = icmp ne i32 %928, 0, !dbg !1709
  br i1 %929, label %930, label %932, !dbg !1709

; <label>:930                                     ; preds = %925
  %931 = call i64 @Perl_utf8_distance(i8* %926, i8* %893), !dbg !1711
  br label %936, !dbg !1711

; <label>:932                                     ; preds = %925
  %933 = ptrtoint i8* %926 to i64, !dbg !1713
  %934 = ptrtoint i8* %893 to i64, !dbg !1713
  %935 = sub i64 %933, %934, !dbg !1713
  br label %936, !dbg !1713

; <label>:936                                     ; preds = %932, %930
  %937 = phi i64 [ %931, %930 ], [ %935, %932 ], !dbg !1709
  %938 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1715
  %939 = load %struct.reg_substr_data** %938, align 8, !dbg !1715
  %940 = getelementptr inbounds %struct.reg_substr_data* %939, i32 0, i32 0, !dbg !1715
  %941 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %940, i32 0, i64 1, !dbg !1715
  %942 = getelementptr inbounds %struct.reg_substr_datum* %941, i32 0, i32 1, !dbg !1715
  %943 = load i32* %942, align 4, !dbg !1715
  %944 = sext i32 %943 to i64, !dbg !1715
  %945 = icmp sgt i64 %937, %944, !dbg !1709
  br i1 %945, label %946, label %971, !dbg !1718

; <label>:946                                     ; preds = %936
  %947 = load i8* @PL_reg_match_utf8, align 1, !dbg !1719
  %948 = sext i8 %947 to i32, !dbg !1719
  %949 = icmp ne i32 %948, 0, !dbg !1719
  br i1 %949, label %950, label %960, !dbg !1719

; <label>:950                                     ; preds = %946
  %951 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1720
  %952 = load %struct.reg_substr_data** %951, align 8, !dbg !1720
  %953 = getelementptr inbounds %struct.reg_substr_data* %952, i32 0, i32 0, !dbg !1720
  %954 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %953, i32 0, i64 1, !dbg !1720
  %955 = getelementptr inbounds %struct.reg_substr_datum* %954, i32 0, i32 1, !dbg !1720
  %956 = load i32* %955, align 4, !dbg !1720
  %957 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %893, i32 %956, i8* %strend), !dbg !1720
  %958 = sext i32 %957 to i64, !dbg !1720
  %959 = inttoptr i64 %958 to i8*, !dbg !1720
  br label %969, !dbg !1720

; <label>:960                                     ; preds = %946
  %961 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1721
  %962 = load %struct.reg_substr_data** %961, align 8, !dbg !1721
  %963 = getelementptr inbounds %struct.reg_substr_data* %962, i32 0, i32 0, !dbg !1721
  %964 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %963, i32 0, i64 1, !dbg !1721
  %965 = getelementptr inbounds %struct.reg_substr_datum* %964, i32 0, i32 1, !dbg !1721
  %966 = load i32* %965, align 4, !dbg !1721
  %967 = sext i32 %966 to i64, !dbg !1721
  %968 = getelementptr inbounds i8* %893, i64 %967, !dbg !1721
  br label %969, !dbg !1721

; <label>:969                                     ; preds = %960, %950
  %970 = phi i8* [ %959, %950 ], [ %968, %960 ], !dbg !1719
  call void @llvm.dbg.value(metadata i8* %970, i64 0, metadata !1705, metadata !566), !dbg !1706
  br label %971, !dbg !1722

; <label>:971                                     ; preds = %969, %936
  %last3.0 = phi i8* [ %970, %969 ], [ %926, %936 ]
  %972 = load i8* @PL_reg_match_utf8, align 1, !dbg !1723
  %973 = sext i8 %972 to i32, !dbg !1723
  %974 = icmp ne i32 %973, 0, !dbg !1723
  br i1 %974, label %975, label %985, !dbg !1723

; <label>:975                                     ; preds = %971
  %976 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1724
  %977 = load %struct.reg_substr_data** %976, align 8, !dbg !1724
  %978 = getelementptr inbounds %struct.reg_substr_data* %977, i32 0, i32 0, !dbg !1724
  %979 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %978, i32 0, i64 1, !dbg !1724
  %980 = getelementptr inbounds %struct.reg_substr_datum* %979, i32 0, i32 0, !dbg !1724
  %981 = load i32* %980, align 4, !dbg !1724
  %982 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %893, i32 %981, i8* %strend), !dbg !1724
  %983 = sext i32 %982 to i64, !dbg !1724
  %984 = inttoptr i64 %983 to i8*, !dbg !1724
  br label %994, !dbg !1724

; <label>:985                                     ; preds = %971
  %986 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1725
  %987 = load %struct.reg_substr_data** %986, align 8, !dbg !1725
  %988 = getelementptr inbounds %struct.reg_substr_data* %987, i32 0, i32 0, !dbg !1725
  %989 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %988, i32 0, i64 1, !dbg !1725
  %990 = getelementptr inbounds %struct.reg_substr_datum* %989, i32 0, i32 0, !dbg !1725
  %991 = load i32* %990, align 4, !dbg !1725
  %992 = sext i32 %991 to i64, !dbg !1725
  %993 = getelementptr inbounds i8* %893, i64 %992, !dbg !1725
  br label %994, !dbg !1725

; <label>:994                                     ; preds = %985, %975
  %995 = phi i8* [ %984, %975 ], [ %993, %985 ], !dbg !1723
  call void @llvm.dbg.value(metadata i8* %995, i64 0, metadata !1414, metadata !566), !dbg !1415
  %996 = icmp ult i8* %995, %other_last.1, !dbg !1726
  br i1 %996, label %997, label %998, !dbg !1728

; <label>:997                                     ; preds = %994
  call void @llvm.dbg.value(metadata i8* %other_last.1, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %998, !dbg !1729

; <label>:998                                     ; preds = %997, %994
  %s.7 = phi i8* [ %other_last.1, %997 ], [ %995, %994 ]
  %999 = icmp ne i32 %8, 0, !dbg !1730
  br i1 %999, label %1000, label %1007, !dbg !1730

; <label>:1000                                    ; preds = %998
  %1001 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1731
  %1002 = load %struct.reg_substr_data** %1001, align 8, !dbg !1731
  %1003 = getelementptr inbounds %struct.reg_substr_data* %1002, i32 0, i32 0, !dbg !1731
  %1004 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1003, i32 0, i64 1, !dbg !1731
  %1005 = getelementptr inbounds %struct.reg_substr_datum* %1004, i32 0, i32 3, !dbg !1731
  %1006 = load %struct.sv** %1005, align 8, !dbg !1731
  br label %1014, !dbg !1730

; <label>:1007                                    ; preds = %998
  %1008 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1732
  %1009 = load %struct.reg_substr_data** %1008, align 8, !dbg !1732
  %1010 = getelementptr inbounds %struct.reg_substr_data* %1009, i32 0, i32 0, !dbg !1732
  %1011 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1010, i32 0, i64 1, !dbg !1732
  %1012 = getelementptr inbounds %struct.reg_substr_datum* %1011, i32 0, i32 2, !dbg !1732
  %1013 = load %struct.sv** %1012, align 8, !dbg !1732
  br label %1014, !dbg !1730

; <label>:1014                                    ; preds = %1007, %1000
  %1015 = phi %struct.sv* [ %1006, %1000 ], [ %1013, %1007 ], !dbg !1730
  call void @llvm.dbg.value(metadata %struct.sv* %1015, i64 0, metadata !1733, metadata !566), !dbg !1734
  %1016 = icmp eq %struct.sv* %1015, @PL_sv_undef, !dbg !1735
  br i1 %1016, label %1017, label %1018, !dbg !1737

; <label>:1017                                    ; preds = %1014
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %1037, !dbg !1738

; <label>:1018                                    ; preds = %1014
  %1019 = getelementptr inbounds %struct.sv* %1015, i32 0, i32 0, !dbg !1740
  %1020 = load i8** %1019, align 8, !dbg !1740
  %1021 = bitcast i8* %1020 to %struct.xpv*, !dbg !1740
  %1022 = getelementptr inbounds %struct.xpv* %1021, i32 0, i32 1, !dbg !1740
  %1023 = load i64* %1022, align 8, !dbg !1740
  %1024 = getelementptr inbounds i8* %last3.0, i64 %1023, !dbg !1741
  %1025 = getelementptr inbounds %struct.sv* %1015, i32 0, i32 2, !dbg !1742
  %1026 = load i32* %1025, align 4, !dbg !1742
  %1027 = and i32 %1026, 1073741824, !dbg !1742
  %1028 = icmp ne i32 %1027, 0, !dbg !1742
  %1029 = zext i1 %1028 to i32, !dbg !1742
  %1030 = sext i32 %1029 to i64, !dbg !1741
  %1031 = sub i64 0, %1030, !dbg !1741
  %1032 = getelementptr inbounds i8* %1024, i64 %1031, !dbg !1741
  %1033 = load i32* @PL_multiline, align 4, !dbg !1743
  %1034 = icmp ne i32 %1033, 0, !dbg !1743
  %1035 = select i1 %1034, i32 1, i32 0, !dbg !1743
  %1036 = call i8* @Perl_fbm_instr(i8* %s.7, i8* %1032, %struct.sv* %1015, i32 %1035), !dbg !1744
  call void @llvm.dbg.value(metadata i8* %1036, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %1037

; <label>:1037                                    ; preds = %1018, %1017
  %s.8 = phi i8* [ null, %1017 ], [ %1036, %1018 ]
  %1038 = icmp ne i8* %s.8, null, !dbg !1745
  br i1 %1038, label %1054, label %1039, !dbg !1745

; <label>:1039                                    ; preds = %1037
  %1040 = icmp eq i8* %926, %last3.0, !dbg !1746
  br i1 %1040, label %1041, label %1042, !dbg !1750

; <label>:1041                                    ; preds = %1039
  br label %1642, !dbg !1751

; <label>:1042                                    ; preds = %1039
  call void @llvm.dbg.value(metadata i8* %last3.0, i64 0, metadata !1326, metadata !566), !dbg !1327
  %1043 = load i8* @PL_reg_match_utf8, align 1, !dbg !1753
  %1044 = sext i8 %1043 to i32, !dbg !1753
  %1045 = icmp ne i32 %1044, 0, !dbg !1753
  br i1 %1045, label %1046, label %1050, !dbg !1753

; <label>:1046                                    ; preds = %1042
  %1047 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %893, i32 1, i8* %strend), !dbg !1754
  %1048 = sext i32 %1047 to i64, !dbg !1754
  %1049 = inttoptr i64 %1048 to i8*, !dbg !1754
  br label %1052, !dbg !1754

; <label>:1050                                    ; preds = %1042
  %1051 = getelementptr inbounds i8* %893, i64 1, !dbg !1756
  br label %1052, !dbg !1756

; <label>:1052                                    ; preds = %1050, %1046
  %1053 = phi i8* [ %1049, %1046 ], [ %1051, %1050 ], !dbg !1753
  call void @llvm.dbg.value(metadata i8* %1053, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %398, !dbg !1758

; <label>:1054                                    ; preds = %1037
  call void @llvm.dbg.value(metadata i8* %s.8, i64 0, metadata !1326, metadata !566), !dbg !1327
  call void @llvm.dbg.value(metadata i8* %s.4, i64 0, metadata !1414, metadata !566), !dbg !1415
  %1055 = icmp eq i8* %893, %.01, !dbg !1759
  br i1 %1055, label %1056, label %1057, !dbg !1762

; <label>:1056                                    ; preds = %1054
  br label %1181, !dbg !1763

; <label>:1057                                    ; preds = %1054
  br label %1096, !dbg !1764

; <label>:1058                                    ; preds = %554, %546, %538, %530
  %1059 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1765
  %1060 = load %struct.reg_substr_data** %1059, align 8, !dbg !1765
  %1061 = getelementptr inbounds %struct.reg_substr_data* %1060, i32 0, i32 0, !dbg !1765
  %1062 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1061, i32 0, i64 2, !dbg !1765
  %1063 = getelementptr inbounds %struct.reg_substr_datum* %1062, i32 0, i32 1, !dbg !1765
  %1064 = load i32* %1063, align 4, !dbg !1765
  %1065 = sext i32 %1064 to i64, !dbg !1766
  %1066 = sub i64 0, %1065, !dbg !1766
  %1067 = getelementptr inbounds i8* %s.4, i64 %1066, !dbg !1766
  call void @llvm.dbg.value(metadata i8* %1067, i64 0, metadata !1604, metadata !566), !dbg !1605
  %1068 = ptrtoint i8* %s.4 to i64, !dbg !1767
  %1069 = ptrtoint i8* %.01 to i64, !dbg !1767
  %1070 = sub i64 %1068, %1069, !dbg !1767
  %1071 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1769
  %1072 = load %struct.reg_substr_data** %1071, align 8, !dbg !1769
  %1073 = getelementptr inbounds %struct.reg_substr_data* %1072, i32 0, i32 0, !dbg !1769
  %1074 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1073, i32 0, i64 2, !dbg !1769
  %1075 = getelementptr inbounds %struct.reg_substr_datum* %1074, i32 0, i32 1, !dbg !1769
  %1076 = load i32* %1075, align 4, !dbg !1769
  %1077 = sext i32 %1076 to i64, !dbg !1769
  %1078 = icmp sgt i64 %1070, %1077, !dbg !1767
  br i1 %1078, label %1079, label %1180, !dbg !1770

; <label>:1079                                    ; preds = %1058
  %1080 = icmp ne i32 %8, 0, !dbg !1770
  br i1 %1080, label %1081, label %1095, !dbg !1770

; <label>:1081                                    ; preds = %1079
  %1082 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1771
  %1083 = load %struct.reg_substr_data** %1082, align 8, !dbg !1771
  %1084 = getelementptr inbounds %struct.reg_substr_data* %1083, i32 0, i32 0, !dbg !1771
  %1085 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1084, i32 0, i64 2, !dbg !1771
  %1086 = getelementptr inbounds %struct.reg_substr_datum* %1085, i32 0, i32 1, !dbg !1771
  %1087 = load i32* %1086, align 4, !dbg !1771
  %1088 = sub nsw i32 0, %1087, !dbg !1771
  %1089 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghopmaybe3 to i32 (i8*, i32, i8*, ...)*)(i8* %s.4, i32 %1088, i8* %.01), !dbg !1771
  %1090 = sext i32 %1089 to i64, !dbg !1771
  %1091 = inttoptr i64 %1090 to i8*, !dbg !1771
  call void @llvm.dbg.value(metadata i8* %1091, i64 0, metadata !1604, metadata !566), !dbg !1605
  %1092 = icmp ne i8* %1091, null, !dbg !1770
  br i1 %1092, label %1093, label %1180, !dbg !1770

; <label>:1093                                    ; preds = %1081
  %1094 = icmp ugt i8* %1091, %.01, !dbg !1772
  br i1 %1094, label %1095, label %1180, !dbg !1770

; <label>:1095                                    ; preds = %1093, %1079
  %t.3 = phi i8* [ %1091, %1093 ], [ %1067, %1079 ]
  br label %1096, !dbg !1773

; <label>:1096                                    ; preds = %1610, %1095, %1057, %878
  %t.4 = phi i8* [ %1607, %1610 ], [ %864, %878 ], [ %893, %1057 ], [ %t.3, %1095 ]
  %ml_anch.3 = phi i32 [ %ml_anch.8, %1610 ], [ %ml_anch.2, %878 ], [ %ml_anch.1, %1057 ], [ %ml_anch.1, %1095 ]
  %check.3 = phi %struct.sv* [ %check.9, %1610 ], [ %check.2, %878 ], [ %check.1, %1057 ], [ %check.1, %1095 ]
  %s.9 = phi i8* [ %1607, %1610 ], [ %s.5, %878 ], [ %s.4, %1057 ], [ %s.4, %1095 ]
  %end_shift.5 = phi i32 [ %end_shift.10, %1610 ], [ %end_shift.4, %878 ], [ %end_shift.3, %1057 ], [ %end_shift.3, %1095 ]
  %start_shift.3 = phi i32 [ %start_shift.8, %1610 ], [ %start_shift.2, %878 ], [ %start_shift.1, %1057 ], [ %start_shift.1, %1095 ]
  %other_last.3 = phi i8* [ %other_last.8, %1610 ], [ %875, %878 ], [ %s.8, %1057 ], [ %other_last.0, %1095 ]
  %check_at.1 = phi i8* [ %check_at.6, %1610 ], [ %check_at.0, %878 ], [ %s.4, %1057 ], [ %s.4, %1095 ]
  %.2 = phi i8* [ %.7, %1610 ], [ %.1, %878 ], [ %.01, %1057 ], [ %.01, %1095 ]
  %1097 = icmp ne i32 %ml_anch.3, 0, !dbg !1774
  br i1 %1097, label %1098, label %1154, !dbg !1774

; <label>:1098                                    ; preds = %1096
  %1099 = getelementptr inbounds i8* %t.4, i64 -1, !dbg !1776
  %1100 = load i8* %1099, align 1, !dbg !1776
  %1101 = sext i8 %1100 to i32, !dbg !1776
  %1102 = icmp ne i32 %1101, 10, !dbg !1776
  br i1 %1102, label %1103, label %1154, !dbg !1774

; <label>:1103                                    ; preds = %1098
  br label %1104, !dbg !1779

; <label>:1104                                    ; preds = %1202, %1103
  %t.5 = phi i8* [ %t.4, %1103 ], [ %.5, %1202 ]
  %ml_anch.4 = phi i32 [ %ml_anch.3, %1103 ], [ %ml_anch.6, %1202 ]
  %check.4 = phi %struct.sv* [ %check.3, %1103 ], [ %check.6, %1202 ]
  %s.10 = phi i8* [ %s.9, %1103 ], [ %s.12, %1202 ]
  %end_shift.6 = phi i32 [ %end_shift.5, %1103 ], [ %end_shift.8, %1202 ]
  %start_shift.4 = phi i32 [ %start_shift.3, %1103 ], [ %start_shift.6, %1202 ]
  %other_last.4 = phi i8* [ %other_last.3, %1103 ], [ %other_last.6, %1202 ]
  %check_at.2 = phi i8* [ %check_at.1, %1103 ], [ %check_at.4, %1202 ]
  %.3 = phi i8* [ %.2, %1103 ], [ %.5, %1202 ]
  br label %1105, !dbg !1781

; <label>:1105                                    ; preds = %1151, %1104
  %t.6 = phi i8* [ %t.5, %1104 ], [ %1152, %1151 ]
  %1106 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 10, !dbg !1783
  %1107 = load i32* %1106, align 4, !dbg !1783
  %1108 = sext i32 %1107 to i64, !dbg !1784
  %1109 = sub i64 0, %1108, !dbg !1784
  %1110 = getelementptr inbounds i8* %strend, i64 %1109, !dbg !1784
  %1111 = icmp ult i8* %t.6, %1110, !dbg !1785
  br i1 %1111, label %1112, label %1153, !dbg !1781

; <label>:1112                                    ; preds = %1105
  %1113 = load i8* %t.6, align 1, !dbg !1786
  %1114 = sext i8 %1113 to i32, !dbg !1786
  %1115 = icmp eq i32 %1114, 10, !dbg !1786
  br i1 %1115, label %1116, label %1151, !dbg !1789

; <label>:1116                                    ; preds = %1112
  %1117 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1790
  %1118 = load %struct.reg_substr_data** %1117, align 8, !dbg !1790
  %1119 = getelementptr inbounds %struct.reg_substr_data* %1118, i32 0, i32 0, !dbg !1790
  %1120 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1119, i32 0, i64 2, !dbg !1790
  %1121 = getelementptr inbounds %struct.reg_substr_datum* %1120, i32 0, i32 0, !dbg !1790
  %1122 = load i32* %1121, align 4, !dbg !1790
  %1123 = sext i32 %1122 to i64, !dbg !1793
  %1124 = sub i64 0, %1123, !dbg !1793
  %1125 = getelementptr inbounds i8* %check_at.2, i64 %1124, !dbg !1793
  %1126 = icmp ult i8* %t.6, %1125, !dbg !1794
  br i1 %1126, label %1127, label %1149, !dbg !1795

; <label>:1127                                    ; preds = %1116
  %1128 = icmp ne i32 %8, 0, !dbg !1796
  br i1 %1128, label %1129, label %1137, !dbg !1796

; <label>:1129                                    ; preds = %1127
  %1130 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1798
  %1131 = load %struct.reg_substr_data** %1130, align 8, !dbg !1798
  %1132 = getelementptr inbounds %struct.reg_substr_data* %1131, i32 0, i32 0, !dbg !1798
  %1133 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1132, i32 0, i64 0, !dbg !1798
  %1134 = getelementptr inbounds %struct.reg_substr_datum* %1133, i32 0, i32 3, !dbg !1798
  %1135 = load %struct.sv** %1134, align 8, !dbg !1798
  %1136 = icmp ne %struct.sv* %1135, null, !dbg !1796
  br i1 %1136, label %1145, label %1147, !dbg !1796

; <label>:1137                                    ; preds = %1127
  %1138 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1801
  %1139 = load %struct.reg_substr_data** %1138, align 8, !dbg !1801
  %1140 = getelementptr inbounds %struct.reg_substr_data* %1139, i32 0, i32 0, !dbg !1801
  %1141 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1140, i32 0, i64 0, !dbg !1801
  %1142 = getelementptr inbounds %struct.reg_substr_datum* %1141, i32 0, i32 2, !dbg !1801
  %1143 = load %struct.sv** %1142, align 8, !dbg !1801
  %1144 = icmp ne %struct.sv* %1143, null, !dbg !1796
  br i1 %1144, label %1145, label %1147, !dbg !1796

; <label>:1145                                    ; preds = %1137, %1129
  %1146 = getelementptr inbounds i8* %t.6, i64 1, !dbg !1803
  call void @llvm.dbg.value(metadata i8* %1146, i64 0, metadata !1307, metadata !566), !dbg !1308
  br label %585, !dbg !1805

; <label>:1147                                    ; preds = %1137, %1129
  %1148 = getelementptr inbounds i8* %t.6, i64 1, !dbg !1806
  call void @llvm.dbg.value(metadata i8* %1148, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %1156, !dbg !1807

; <label>:1149                                    ; preds = %1116
  %1150 = getelementptr inbounds i8* %t.6, i64 1, !dbg !1808
  call void @llvm.dbg.value(metadata i8* %1150, i64 0, metadata !1414, metadata !566), !dbg !1415
  call void @llvm.dbg.value(metadata i8* %1150, i64 0, metadata !1307, metadata !566), !dbg !1308
  call void @llvm.dbg.value(metadata i8* %1150, i64 0, metadata !1326, metadata !566), !dbg !1327
  br label %398, !dbg !1809

; <label>:1151                                    ; preds = %1112
  %1152 = getelementptr inbounds i8* %t.6, i32 1, !dbg !1810
  call void @llvm.dbg.value(metadata i8* %1152, i64 0, metadata !1604, metadata !566), !dbg !1605
  br label %1105, !dbg !1781

; <label>:1153                                    ; preds = %1105
  br label %1642, !dbg !1811

; <label>:1154                                    ; preds = %1098, %1096
  br label %1155

; <label>:1155                                    ; preds = %1154
  call void @llvm.dbg.value(metadata i8* %t.4, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %1156, !dbg !1812

; <label>:1156                                    ; preds = %1155, %1147
  %ml_anch.5 = phi i32 [ %ml_anch.4, %1147 ], [ %ml_anch.3, %1155 ]
  %check.5 = phi %struct.sv* [ %check.4, %1147 ], [ %check.3, %1155 ]
  %s.11 = phi i8* [ %1148, %1147 ], [ %t.4, %1155 ]
  %end_shift.7 = phi i32 [ %end_shift.6, %1147 ], [ %end_shift.5, %1155 ]
  %start_shift.5 = phi i32 [ %start_shift.4, %1147 ], [ %start_shift.3, %1155 ]
  %other_last.5 = phi i8* [ %other_last.4, %1147 ], [ %other_last.3, %1155 ]
  %check_at.3 = phi i8* [ %check_at.2, %1147 ], [ %check_at.1, %1155 ]
  %.4 = phi i8* [ %.3, %1147 ], [ %.2, %1155 ]
  %1157 = icmp ne i32 %8, 0, !dbg !1813
  br i1 %1157, label %1158, label %1165, !dbg !1813

; <label>:1158                                    ; preds = %1156
  %1159 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1814
  %1160 = load %struct.reg_substr_data** %1159, align 8, !dbg !1814
  %1161 = getelementptr inbounds %struct.reg_substr_data* %1160, i32 0, i32 0, !dbg !1814
  %1162 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1161, i32 0, i64 2, !dbg !1814
  %1163 = getelementptr inbounds %struct.reg_substr_datum* %1162, i32 0, i32 3, !dbg !1814
  %1164 = load %struct.sv** %1163, align 8, !dbg !1814
  br label %1172, !dbg !1814

; <label>:1165                                    ; preds = %1156
  %1166 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1816
  %1167 = load %struct.reg_substr_data** %1166, align 8, !dbg !1816
  %1168 = getelementptr inbounds %struct.reg_substr_data* %1167, i32 0, i32 0, !dbg !1816
  %1169 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1168, i32 0, i64 2, !dbg !1816
  %1170 = getelementptr inbounds %struct.reg_substr_datum* %1169, i32 0, i32 2, !dbg !1816
  %1171 = load %struct.sv** %1170, align 8, !dbg !1816
  br label %1172, !dbg !1816

; <label>:1172                                    ; preds = %1165, %1158
  %1173 = phi %struct.sv* [ %1164, %1158 ], [ %1171, %1165 ], !dbg !1813
  %1174 = getelementptr inbounds %struct.sv* %1173, i32 0, i32 0, !dbg !1818
  %1175 = load i8** %1174, align 8, !dbg !1818
  %1176 = bitcast i8* %1175 to %struct.xpvbm*, !dbg !1818
  %1177 = getelementptr inbounds %struct.xpvbm* %1176, i32 0, i32 7, !dbg !1821
  %1178 = load i32* %1177, align 4, !dbg !1821
  %1179 = add nsw i32 %1178, 1, !dbg !1821
  store i32 %1179, i32* %1177, align 4, !dbg !1821
  br label %1362, !dbg !1822

; <label>:1180                                    ; preds = %1093, %1081, %1058
  br label %1181, !dbg !1823

; <label>:1181                                    ; preds = %1180, %1056, %877
  %ml_anch.6 = phi i32 [ %ml_anch.2, %877 ], [ %ml_anch.1, %1056 ], [ %ml_anch.1, %1180 ]
  %check.6 = phi %struct.sv* [ %check.2, %877 ], [ %check.1, %1056 ], [ %check.1, %1180 ]
  %s.12 = phi i8* [ %s.5, %877 ], [ %s.4, %1056 ], [ %s.4, %1180 ]
  %end_shift.8 = phi i32 [ %end_shift.4, %877 ], [ %end_shift.3, %1056 ], [ %end_shift.3, %1180 ]
  %start_shift.6 = phi i32 [ %start_shift.2, %877 ], [ %start_shift.1, %1056 ], [ %start_shift.1, %1180 ]
  %other_last.6 = phi i8* [ %875, %877 ], [ %s.8, %1056 ], [ %other_last.0, %1180 ]
  %check_at.4 = phi i8* [ %check_at.0, %877 ], [ %s.4, %1056 ], [ %s.4, %1180 ]
  %.5 = phi i8* [ %.1, %877 ], [ %.01, %1056 ], [ %.01, %1180 ]
  %1182 = icmp ne i32 %ml_anch.6, 0, !dbg !1824
  br i1 %1182, label %1183, label %1203, !dbg !1824

; <label>:1183                                    ; preds = %1181
  %1184 = icmp ne %struct.sv* %sv, null, !dbg !1824
  br i1 %1184, label %1185, label %1203, !dbg !1824

; <label>:1185                                    ; preds = %1183
  %1186 = getelementptr inbounds %struct.sv* %sv, i32 0, i32 2, !dbg !1826
  %1187 = load i32* %1186, align 4, !dbg !1826
  %1188 = and i32 %1187, 524288, !dbg !1826
  %1189 = icmp ne i32 %1188, 0, !dbg !1824
  br i1 %1189, label %1203, label %1190, !dbg !1824

; <label>:1190                                    ; preds = %1185
  %1191 = icmp ne i8* %.5, %53, !dbg !1829
  br i1 %1191, label %1192, label %1203, !dbg !1824

; <label>:1192                                    ; preds = %1190
  %1193 = getelementptr inbounds i8* %.5, i64 -1, !dbg !1830
  %1194 = load i8* %1193, align 1, !dbg !1830
  %1195 = sext i8 %1194 to i32, !dbg !1830
  %1196 = icmp ne i32 %1195, 10, !dbg !1830
  br i1 %1196, label %1197, label %1203, !dbg !1824

; <label>:1197                                    ; preds = %1192
  %1198 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1831
  %1199 = load i32* %1198, align 4, !dbg !1831
  %1200 = and i32 %1199, 32, !dbg !1831
  %1201 = icmp ne i32 %1200, 0, !dbg !1824
  br i1 %1201, label %1203, label %1202, !dbg !1824

; <label>:1202                                    ; preds = %1197
  call void @llvm.dbg.value(metadata i8* %.5, i64 0, metadata !1604, metadata !566), !dbg !1605
  br label %1104, !dbg !1832

; <label>:1203                                    ; preds = %1197, %1192, %1190, %1185, %1183, %1181
  br label %1204, !dbg !1834

; <label>:1204                                    ; preds = %1203, %286
  %ml_anch.7 = phi i32 [ %ml_anch.6, %1203 ], [ %132, %286 ]
  %check.7 = phi %struct.sv* [ %check.6, %1203 ], [ %check.0, %286 ]
  %end_shift.9 = phi i32 [ %end_shift.8, %1203 ], [ 0, %286 ]
  %start_shift.7 = phi i32 [ %start_shift.6, %1203 ], [ 0, %286 ]
  %other_last.7 = phi i8* [ %other_last.6, %1203 ], [ null, %286 ]
  %check_at.5 = phi i8* [ %check_at.4, %1203 ], [ null, %286 ]
  %.6 = phi i8* [ %.5, %1203 ], [ %strpos, %286 ]
  %1205 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1835
  %1206 = load i32* %1205, align 4, !dbg !1835
  %1207 = and i32 %1206, 131072, !dbg !1835
  %1208 = icmp ne i32 %1207, 0, !dbg !1837
  br i1 %1208, label %1360, label %1209, !dbg !1837

; <label>:1209                                    ; preds = %1204
  %1210 = icmp ne i32 %8, 0, !dbg !1837
  br i1 %1210, label %1211, label %1247, !dbg !1837

; <label>:1211                                    ; preds = %1209
  %1212 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1838
  %1213 = load %struct.reg_substr_data** %1212, align 8, !dbg !1838
  %1214 = getelementptr inbounds %struct.reg_substr_data* %1213, i32 0, i32 0, !dbg !1838
  %1215 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1214, i32 0, i64 2, !dbg !1838
  %1216 = getelementptr inbounds %struct.reg_substr_datum* %1215, i32 0, i32 3, !dbg !1838
  %1217 = load %struct.sv** %1216, align 8, !dbg !1838
  %1218 = icmp ne %struct.sv* %1217, null, !dbg !1837
  br i1 %1218, label %1219, label %1360, !dbg !1837

; <label>:1219                                    ; preds = %1211
  %1220 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1839
  %1221 = load %struct.reg_substr_data** %1220, align 8, !dbg !1839
  %1222 = getelementptr inbounds %struct.reg_substr_data* %1221, i32 0, i32 0, !dbg !1839
  %1223 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1222, i32 0, i64 2, !dbg !1839
  %1224 = getelementptr inbounds %struct.reg_substr_datum* %1223, i32 0, i32 3, !dbg !1839
  %1225 = load %struct.sv** %1224, align 8, !dbg !1839
  %1226 = getelementptr inbounds %struct.sv* %1225, i32 0, i32 0, !dbg !1839
  %1227 = load i8** %1226, align 8, !dbg !1839
  %1228 = bitcast i8* %1227 to %struct.xpvbm*, !dbg !1839
  %1229 = getelementptr inbounds %struct.xpvbm* %1228, i32 0, i32 7, !dbg !1840
  %1230 = load i32* %1229, align 4, !dbg !1840
  %1231 = add nsw i32 %1230, -1, !dbg !1840
  store i32 %1231, i32* %1229, align 4, !dbg !1840
  %1232 = icmp slt i32 %1231, 0, !dbg !1840
  br i1 %1232, label %1233, label %1360, !dbg !1837

; <label>:1233                                    ; preds = %1219
  %1234 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1841
  %1235 = load %struct.reg_substr_data** %1234, align 8, !dbg !1841
  %1236 = getelementptr inbounds %struct.reg_substr_data* %1235, i32 0, i32 0, !dbg !1841
  %1237 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1236, i32 0, i64 2, !dbg !1841
  %1238 = getelementptr inbounds %struct.reg_substr_datum* %1237, i32 0, i32 3, !dbg !1841
  %1239 = load %struct.sv** %1238, align 8, !dbg !1841
  %1240 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1842
  %1241 = load %struct.reg_substr_data** %1240, align 8, !dbg !1842
  %1242 = getelementptr inbounds %struct.reg_substr_data* %1241, i32 0, i32 0, !dbg !1842
  %1243 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1242, i32 0, i64 1, !dbg !1842
  %1244 = getelementptr inbounds %struct.reg_substr_datum* %1243, i32 0, i32 3, !dbg !1842
  %1245 = load %struct.sv** %1244, align 8, !dbg !1842
  %1246 = icmp eq %struct.sv* %1239, %1245, !dbg !1841
  br i1 %1246, label %1283, label %1360, !dbg !1837

; <label>:1247                                    ; preds = %1209
  %1248 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1843
  %1249 = load %struct.reg_substr_data** %1248, align 8, !dbg !1843
  %1250 = getelementptr inbounds %struct.reg_substr_data* %1249, i32 0, i32 0, !dbg !1843
  %1251 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1250, i32 0, i64 2, !dbg !1843
  %1252 = getelementptr inbounds %struct.reg_substr_datum* %1251, i32 0, i32 2, !dbg !1843
  %1253 = load %struct.sv** %1252, align 8, !dbg !1843
  %1254 = icmp ne %struct.sv* %1253, null, !dbg !1837
  br i1 %1254, label %1255, label %1360, !dbg !1837

; <label>:1255                                    ; preds = %1247
  %1256 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1844
  %1257 = load %struct.reg_substr_data** %1256, align 8, !dbg !1844
  %1258 = getelementptr inbounds %struct.reg_substr_data* %1257, i32 0, i32 0, !dbg !1844
  %1259 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1258, i32 0, i64 2, !dbg !1844
  %1260 = getelementptr inbounds %struct.reg_substr_datum* %1259, i32 0, i32 2, !dbg !1844
  %1261 = load %struct.sv** %1260, align 8, !dbg !1844
  %1262 = getelementptr inbounds %struct.sv* %1261, i32 0, i32 0, !dbg !1844
  %1263 = load i8** %1262, align 8, !dbg !1844
  %1264 = bitcast i8* %1263 to %struct.xpvbm*, !dbg !1844
  %1265 = getelementptr inbounds %struct.xpvbm* %1264, i32 0, i32 7, !dbg !1845
  %1266 = load i32* %1265, align 4, !dbg !1845
  %1267 = add nsw i32 %1266, -1, !dbg !1845
  store i32 %1267, i32* %1265, align 4, !dbg !1845
  %1268 = icmp slt i32 %1267, 0, !dbg !1845
  br i1 %1268, label %1269, label %1360, !dbg !1837

; <label>:1269                                    ; preds = %1255
  %1270 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1846
  %1271 = load %struct.reg_substr_data** %1270, align 8, !dbg !1846
  %1272 = getelementptr inbounds %struct.reg_substr_data* %1271, i32 0, i32 0, !dbg !1846
  %1273 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1272, i32 0, i64 2, !dbg !1846
  %1274 = getelementptr inbounds %struct.reg_substr_datum* %1273, i32 0, i32 2, !dbg !1846
  %1275 = load %struct.sv** %1274, align 8, !dbg !1846
  %1276 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1847
  %1277 = load %struct.reg_substr_data** %1276, align 8, !dbg !1847
  %1278 = getelementptr inbounds %struct.reg_substr_data* %1277, i32 0, i32 0, !dbg !1847
  %1279 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1278, i32 0, i64 1, !dbg !1847
  %1280 = getelementptr inbounds %struct.reg_substr_datum* %1279, i32 0, i32 2, !dbg !1847
  %1281 = load %struct.sv** %1280, align 8, !dbg !1847
  %1282 = icmp eq %struct.sv* %1275, %1281, !dbg !1846
  br i1 %1282, label %1283, label %1360, !dbg !1837

; <label>:1283                                    ; preds = %1269, %1233
  %1284 = icmp ne i32 %8, 0, !dbg !1848
  br i1 %1284, label %1285, label %1292, !dbg !1848

; <label>:1285                                    ; preds = %1283
  %1286 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1850
  %1287 = load %struct.reg_substr_data** %1286, align 8, !dbg !1850
  %1288 = getelementptr inbounds %struct.reg_substr_data* %1287, i32 0, i32 0, !dbg !1850
  %1289 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1288, i32 0, i64 2, !dbg !1850
  %1290 = getelementptr inbounds %struct.reg_substr_datum* %1289, i32 0, i32 3, !dbg !1850
  %1291 = load %struct.sv** %1290, align 8, !dbg !1850
  br label %1299, !dbg !1850

; <label>:1292                                    ; preds = %1283
  %1293 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1852
  %1294 = load %struct.reg_substr_data** %1293, align 8, !dbg !1852
  %1295 = getelementptr inbounds %struct.reg_substr_data* %1294, i32 0, i32 0, !dbg !1852
  %1296 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1295, i32 0, i64 2, !dbg !1852
  %1297 = getelementptr inbounds %struct.reg_substr_datum* %1296, i32 0, i32 2, !dbg !1852
  %1298 = load %struct.sv** %1297, align 8, !dbg !1852
  br label %1299, !dbg !1852

; <label>:1299                                    ; preds = %1292, %1285
  %1300 = phi %struct.sv* [ %1291, %1285 ], [ %1298, %1292 ], !dbg !1848
  call void @Perl_sv_free(%struct.sv* %1300), !dbg !1854
  %1301 = icmp ne i32 %8, 0, !dbg !1857
  br i1 %1301, label %1302, label %1310, !dbg !1857

; <label>:1302                                    ; preds = %1299
  %1303 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1858
  %1304 = load %struct.reg_substr_data** %1303, align 8, !dbg !1858
  %1305 = getelementptr inbounds %struct.reg_substr_data* %1304, i32 0, i32 0, !dbg !1858
  %1306 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1305, i32 0, i64 2, !dbg !1858
  %1307 = getelementptr inbounds %struct.reg_substr_datum* %1306, i32 0, i32 2, !dbg !1858
  %1308 = load %struct.sv** %1307, align 8, !dbg !1858
  %1309 = icmp ne %struct.sv* %1308, null, !dbg !1857
  br i1 %1309, label %1318, label %1336, !dbg !1857

; <label>:1310                                    ; preds = %1299
  %1311 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1861
  %1312 = load %struct.reg_substr_data** %1311, align 8, !dbg !1861
  %1313 = getelementptr inbounds %struct.reg_substr_data* %1312, i32 0, i32 0, !dbg !1861
  %1314 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1313, i32 0, i64 2, !dbg !1861
  %1315 = getelementptr inbounds %struct.reg_substr_datum* %1314, i32 0, i32 3, !dbg !1861
  %1316 = load %struct.sv** %1315, align 8, !dbg !1861
  %1317 = icmp ne %struct.sv* %1316, null, !dbg !1857
  br i1 %1317, label %1318, label %1336, !dbg !1857

; <label>:1318                                    ; preds = %1310, %1302
  %1319 = icmp ne i32 %8, 0, !dbg !1863
  br i1 %1319, label %1320, label %1327, !dbg !1863

; <label>:1320                                    ; preds = %1318
  %1321 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1864
  %1322 = load %struct.reg_substr_data** %1321, align 8, !dbg !1864
  %1323 = getelementptr inbounds %struct.reg_substr_data* %1322, i32 0, i32 0, !dbg !1864
  %1324 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1323, i32 0, i64 2, !dbg !1864
  %1325 = getelementptr inbounds %struct.reg_substr_datum* %1324, i32 0, i32 2, !dbg !1864
  %1326 = load %struct.sv** %1325, align 8, !dbg !1864
  br label %1334, !dbg !1864

; <label>:1327                                    ; preds = %1318
  %1328 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1865
  %1329 = load %struct.reg_substr_data** %1328, align 8, !dbg !1865
  %1330 = getelementptr inbounds %struct.reg_substr_data* %1329, i32 0, i32 0, !dbg !1865
  %1331 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1330, i32 0, i64 2, !dbg !1865
  %1332 = getelementptr inbounds %struct.reg_substr_datum* %1331, i32 0, i32 3, !dbg !1865
  %1333 = load %struct.sv** %1332, align 8, !dbg !1865
  br label %1334, !dbg !1865

; <label>:1334                                    ; preds = %1327, %1320
  %1335 = phi %struct.sv* [ %1326, %1320 ], [ %1333, %1327 ], !dbg !1863
  call void @Perl_sv_free(%struct.sv* %1335), !dbg !1866
  br label %1336, !dbg !1866

; <label>:1336                                    ; preds = %1334, %1310, %1302
  %1337 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1869
  %1338 = load %struct.reg_substr_data** %1337, align 8, !dbg !1869
  %1339 = getelementptr inbounds %struct.reg_substr_data* %1338, i32 0, i32 0, !dbg !1869
  %1340 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1339, i32 0, i64 2, !dbg !1869
  %1341 = getelementptr inbounds %struct.reg_substr_datum* %1340, i32 0, i32 3, !dbg !1869
  store %struct.sv* null, %struct.sv** %1341, align 8, !dbg !1869
  %1342 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1870
  %1343 = load %struct.reg_substr_data** %1342, align 8, !dbg !1870
  %1344 = getelementptr inbounds %struct.reg_substr_data* %1343, i32 0, i32 0, !dbg !1870
  %1345 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1344, i32 0, i64 2, !dbg !1870
  %1346 = getelementptr inbounds %struct.reg_substr_datum* %1345, i32 0, i32 2, !dbg !1870
  store %struct.sv* null, %struct.sv** %1346, align 8, !dbg !1870
  %1347 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1871
  %1348 = load %struct.reg_substr_data** %1347, align 8, !dbg !1871
  %1349 = getelementptr inbounds %struct.reg_substr_data* %1348, i32 0, i32 0, !dbg !1871
  %1350 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1349, i32 0, i64 1, !dbg !1871
  %1351 = getelementptr inbounds %struct.reg_substr_datum* %1350, i32 0, i32 3, !dbg !1871
  store %struct.sv* null, %struct.sv** %1351, align 8, !dbg !1871
  %1352 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1872
  %1353 = load %struct.reg_substr_data** %1352, align 8, !dbg !1872
  %1354 = getelementptr inbounds %struct.reg_substr_data* %1353, i32 0, i32 0, !dbg !1872
  %1355 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1354, i32 0, i64 1, !dbg !1872
  %1356 = getelementptr inbounds %struct.reg_substr_datum* %1355, i32 0, i32 2, !dbg !1872
  store %struct.sv* null, %struct.sv** %1356, align 8, !dbg !1872
  call void @llvm.dbg.value(metadata %struct.sv* null, i64 0, metadata !1362, metadata !566), !dbg !1363
  call void @llvm.dbg.value(metadata i8* %.6, i64 0, metadata !1414, metadata !566), !dbg !1415
  %1357 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1873
  %1358 = load i32* %1357, align 4, !dbg !1873
  %1359 = and i32 %1358, -3145729, !dbg !1873
  store i32 %1359, i32* %1357, align 4, !dbg !1873
  br label %1361, !dbg !1874

; <label>:1360                                    ; preds = %1269, %1255, %1247, %1233, %1219, %1211, %1204
  call void @llvm.dbg.value(metadata i8* %.6, i64 0, metadata !1414, metadata !566), !dbg !1415
  br label %1361

; <label>:1361                                    ; preds = %1360, %1336
  %check.8 = phi %struct.sv* [ %check.7, %1360 ], [ null, %1336 ]
  br label %1362

; <label>:1362                                    ; preds = %1361, %1172
  %ml_anch.8 = phi i32 [ %ml_anch.7, %1361 ], [ %ml_anch.5, %1172 ]
  %check.9 = phi %struct.sv* [ %check.8, %1361 ], [ %check.5, %1172 ]
  %s.14 = phi i8* [ %.6, %1361 ], [ %s.11, %1172 ]
  %end_shift.10 = phi i32 [ %end_shift.9, %1361 ], [ %end_shift.7, %1172 ]
  %start_shift.8 = phi i32 [ %start_shift.7, %1361 ], [ %start_shift.5, %1172 ]
  %other_last.8 = phi i8* [ %other_last.7, %1361 ], [ %other_last.5, %1172 ]
  %check_at.6 = phi i8* [ %check_at.5, %1361 ], [ %check_at.3, %1172 ]
  %.7 = phi i8* [ %.6, %1361 ], [ %.4, %1172 ]
  %1363 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 2, !dbg !1875
  %1364 = load %struct.regnode** %1363, align 8, !dbg !1875
  %1365 = icmp ne %struct.regnode* %1364, null, !dbg !1877
  br i1 %1365, label %1366, label %1640, !dbg !1877

; <label>:1366                                    ; preds = %1362
  %1367 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 2, !dbg !1878
  %1368 = load %struct.regnode** %1367, align 8, !dbg !1878
  %1369 = bitcast %struct.regnode* %1368 to %struct.regnode_string*, !dbg !1878
  %1370 = getelementptr inbounds %struct.regnode_string* %1369, i32 0, i32 3, !dbg !1878
  %1371 = getelementptr inbounds [1 x i8]* %1370, i32 0, i32 0, !dbg !1878
  call void @llvm.dbg.value(metadata i8* %1371, i64 0, metadata !1880, metadata !566), !dbg !1881
  %1372 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 2, !dbg !1882
  %1373 = load %struct.regnode** %1372, align 8, !dbg !1882
  %1374 = getelementptr inbounds %struct.regnode* %1373, i32 0, i32 1, !dbg !1882
  %1375 = load i8* %1374, align 1, !dbg !1882
  %1376 = zext i8 %1375 to i64, !dbg !1883
  %1377 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %1376, !dbg !1883
  %1378 = load i8* %1377, align 1, !dbg !1883
  %1379 = zext i8 %1378 to i32, !dbg !1883
  %1380 = icmp eq i32 %1379, 33, !dbg !1883
  br i1 %1380, label %1381, label %1409, !dbg !1883

; <label>:1381                                    ; preds = %1366
  %1382 = load i8* @PL_reg_match_utf8, align 1, !dbg !1884
  %1383 = sext i8 %1382 to i32, !dbg !1884
  %1384 = icmp ne i32 %1383, 0, !dbg !1884
  br i1 %1384, label %1385, label %1395, !dbg !1884

; <label>:1385                                    ; preds = %1381
  %1386 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 2, !dbg !1885
  %1387 = load %struct.regnode** %1386, align 8, !dbg !1885
  %1388 = bitcast %struct.regnode* %1387 to %struct.regnode_string*, !dbg !1885
  %1389 = getelementptr inbounds %struct.regnode_string* %1388, i32 0, i32 0, !dbg !1885
  %1390 = load i8* %1389, align 1, !dbg !1885
  %1391 = zext i8 %1390 to i32, !dbg !1885
  %1392 = sext i32 %1391 to i64, !dbg !1885
  %1393 = getelementptr inbounds i8* %1371, i64 %1392, !dbg !1885
  %1394 = call i64 @Perl_utf8_distance(i8* %1393, i8* %1371), !dbg !1885
  br label %1407, !dbg !1885

; <label>:1395                                    ; preds = %1381
  %1396 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 2, !dbg !1887
  %1397 = load %struct.regnode** %1396, align 8, !dbg !1887
  %1398 = bitcast %struct.regnode* %1397 to %struct.regnode_string*, !dbg !1887
  %1399 = getelementptr inbounds %struct.regnode_string* %1398, i32 0, i32 0, !dbg !1887
  %1400 = load i8* %1399, align 1, !dbg !1887
  %1401 = zext i8 %1400 to i32, !dbg !1887
  %1402 = sext i32 %1401 to i64, !dbg !1887
  %1403 = getelementptr inbounds i8* %1371, i64 %1402, !dbg !1887
  %1404 = ptrtoint i8* %1403 to i64, !dbg !1887
  %1405 = ptrtoint i8* %1371 to i64, !dbg !1887
  %1406 = sub i64 %1404, %1405, !dbg !1887
  br label %1407, !dbg !1887

; <label>:1407                                    ; preds = %1395, %1385
  %1408 = phi i64 [ %1394, %1385 ], [ %1406, %1395 ], !dbg !1884
  br label %1410, !dbg !1883

; <label>:1409                                    ; preds = %1366
  br label %1410, !dbg !1889

; <label>:1410                                    ; preds = %1409, %1407
  %1411 = phi i64 [ %1408, %1407 ], [ 1, %1409 ], !dbg !1883
  %1412 = trunc i64 %1411 to i32, !dbg !1890
  call void @llvm.dbg.value(metadata i32 %1412, i64 0, metadata !1892, metadata !566), !dbg !1893
  %1413 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1894
  %1414 = load %struct.reg_substr_data** %1413, align 8, !dbg !1894
  %1415 = getelementptr inbounds %struct.reg_substr_data* %1414, i32 0, i32 0, !dbg !1894
  %1416 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1415, i32 0, i64 0, !dbg !1894
  %1417 = getelementptr inbounds %struct.reg_substr_datum* %1416, i32 0, i32 2, !dbg !1894
  %1418 = load %struct.sv** %1417, align 8, !dbg !1894
  %1419 = icmp ne %struct.sv* %1418, null, !dbg !1895
  br i1 %1419, label %1430, label %1420, !dbg !1895

; <label>:1420                                    ; preds = %1410
  %1421 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1896
  %1422 = load %struct.reg_substr_data** %1421, align 8, !dbg !1896
  %1423 = getelementptr inbounds %struct.reg_substr_data* %1422, i32 0, i32 0, !dbg !1896
  %1424 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1423, i32 0, i64 0, !dbg !1896
  %1425 = getelementptr inbounds %struct.reg_substr_datum* %1424, i32 0, i32 3, !dbg !1896
  %1426 = load %struct.sv** %1425, align 8, !dbg !1896
  %1427 = icmp ne %struct.sv* %1426, null, !dbg !1895
  br i1 %1427, label %1430, label %1428, !dbg !1895

; <label>:1428                                    ; preds = %1420
  %1429 = icmp ne i32 %ml_anch.8, 0, !dbg !1895
  br i1 %1429, label %1430, label %1457, !dbg !1895

; <label>:1430                                    ; preds = %1428, %1420, %1410
  %1431 = load i8* @PL_reg_match_utf8, align 1, !dbg !1897
  %1432 = sext i8 %1431 to i32, !dbg !1897
  %1433 = icmp ne i32 %1432, 0, !dbg !1897
  br i1 %1433, label %1434, label %1445, !dbg !1897

; <label>:1434                                    ; preds = %1430
  %1435 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 10, !dbg !1898
  %1436 = load i32* %1435, align 4, !dbg !1898
  %1437 = icmp ne i32 %1436, 0, !dbg !1898
  br i1 %1437, label %1438, label %1439, !dbg !1898

; <label>:1438                                    ; preds = %1434
  br label %1440, !dbg !1899

; <label>:1439                                    ; preds = %1434
  br label %1440, !dbg !1901

; <label>:1440                                    ; preds = %1439, %1438
  %1441 = phi i32 [ %1412, %1438 ], [ 0, %1439 ], !dbg !1897
  %1442 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %s.14, i32 %1441, i8* %strend), !dbg !1903
  %1443 = sext i32 %1442 to i64, !dbg !1903
  %1444 = inttoptr i64 %1443 to i8*, !dbg !1903
  br label %1455, !dbg !1903

; <label>:1445                                    ; preds = %1430
  %1446 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 10, !dbg !1906
  %1447 = load i32* %1446, align 4, !dbg !1906
  %1448 = icmp ne i32 %1447, 0, !dbg !1906
  br i1 %1448, label %1449, label %1450, !dbg !1906

; <label>:1449                                    ; preds = %1445
  br label %1451, !dbg !1907

; <label>:1450                                    ; preds = %1445
  br label %1451, !dbg !1909

; <label>:1451                                    ; preds = %1450, %1449
  %1452 = phi i32 [ %1412, %1449 ], [ 0, %1450 ], !dbg !1897
  %1453 = sext i32 %1452 to i64, !dbg !1911
  %1454 = getelementptr inbounds i8* %s.14, i64 %1453, !dbg !1911
  br label %1455, !dbg !1911

; <label>:1455                                    ; preds = %1451, %1440
  %1456 = phi i8* [ %1444, %1440 ], [ %1454, %1451 ], !dbg !1897
  br label %1517, !dbg !1895

; <label>:1457                                    ; preds = %1428
  %1458 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1914
  %1459 = load %struct.reg_substr_data** %1458, align 8, !dbg !1914
  %1460 = getelementptr inbounds %struct.reg_substr_data* %1459, i32 0, i32 0, !dbg !1914
  %1461 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1460, i32 0, i64 1, !dbg !1914
  %1462 = getelementptr inbounds %struct.reg_substr_datum* %1461, i32 0, i32 2, !dbg !1914
  %1463 = load %struct.sv** %1462, align 8, !dbg !1914
  %1464 = icmp ne %struct.sv* %1463, null, !dbg !1914
  br i1 %1464, label %1473, label %1465, !dbg !1914

; <label>:1465                                    ; preds = %1457
  %1466 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1915
  %1467 = load %struct.reg_substr_data** %1466, align 8, !dbg !1915
  %1468 = getelementptr inbounds %struct.reg_substr_data* %1467, i32 0, i32 0, !dbg !1915
  %1469 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1468, i32 0, i64 1, !dbg !1915
  %1470 = getelementptr inbounds %struct.reg_substr_datum* %1469, i32 0, i32 3, !dbg !1915
  %1471 = load %struct.sv** %1470, align 8, !dbg !1915
  %1472 = icmp ne %struct.sv* %1471, null, !dbg !1914
  br i1 %1472, label %1473, label %1514, !dbg !1914

; <label>:1473                                    ; preds = %1465, %1457
  %1474 = load i8* @PL_reg_match_utf8, align 1, !dbg !1916
  %1475 = sext i8 %1474 to i32, !dbg !1916
  %1476 = icmp ne i32 %1475, 0, !dbg !1916
  br i1 %1476, label %1477, label %1495, !dbg !1916

; <label>:1477                                    ; preds = %1473
  %1478 = load i8* @PL_reg_match_utf8, align 1, !dbg !1917
  %1479 = sext i8 %1478 to i32, !dbg !1917
  %1480 = icmp ne i32 %1479, 0, !dbg !1917
  br i1 %1480, label %1481, label %1486, !dbg !1917

; <label>:1481                                    ; preds = %1477
  %1482 = sub nsw i32 0, %start_shift.8, !dbg !1918
  %1483 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %check_at.6, i32 %1482, i8* %53), !dbg !1918
  %1484 = sext i32 %1483 to i64, !dbg !1918
  %1485 = inttoptr i64 %1484 to i8*, !dbg !1918
  br label %1490, !dbg !1918

; <label>:1486                                    ; preds = %1477
  %1487 = sub nsw i32 0, %start_shift.8, !dbg !1919
  %1488 = sext i32 %1487 to i64, !dbg !1919
  %1489 = getelementptr inbounds i8* %check_at.6, i64 %1488, !dbg !1919
  br label %1490, !dbg !1919

; <label>:1490                                    ; preds = %1486, %1481
  %1491 = phi i8* [ %1485, %1481 ], [ %1489, %1486 ], !dbg !1916
  %1492 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %1491, i32 %1412, i8* %strend), !dbg !1920
  %1493 = sext i32 %1492 to i64, !dbg !1920
  %1494 = inttoptr i64 %1493 to i8*, !dbg !1920
  br label %1512, !dbg !1920

; <label>:1495                                    ; preds = %1473
  %1496 = load i8* @PL_reg_match_utf8, align 1, !dbg !1921
  %1497 = sext i8 %1496 to i32, !dbg !1921
  %1498 = icmp ne i32 %1497, 0, !dbg !1921
  br i1 %1498, label %1499, label %1504, !dbg !1921

; <label>:1499                                    ; preds = %1495
  %1500 = sub nsw i32 0, %start_shift.8, !dbg !1922
  %1501 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %check_at.6, i32 %1500, i8* %53), !dbg !1922
  %1502 = sext i32 %1501 to i64, !dbg !1922
  %1503 = inttoptr i64 %1502 to i8*, !dbg !1922
  br label %1508, !dbg !1922

; <label>:1504                                    ; preds = %1495
  %1505 = sub nsw i32 0, %start_shift.8, !dbg !1923
  %1506 = sext i32 %1505 to i64, !dbg !1923
  %1507 = getelementptr inbounds i8* %check_at.6, i64 %1506, !dbg !1923
  br label %1508, !dbg !1923

; <label>:1508                                    ; preds = %1504, %1499
  %1509 = phi i8* [ %1503, %1499 ], [ %1507, %1504 ], !dbg !1916
  %1510 = sext i32 %1412 to i64, !dbg !1924
  %1511 = getelementptr inbounds i8* %1509, i64 %1510, !dbg !1924
  br label %1512, !dbg !1924

; <label>:1512                                    ; preds = %1508, %1490
  %1513 = phi i8* [ %1494, %1490 ], [ %1511, %1508 ], !dbg !1916
  br label %1515, !dbg !1914

; <label>:1514                                    ; preds = %1465
  br label %1515, !dbg !1914

; <label>:1515                                    ; preds = %1514, %1512
  %1516 = phi i8* [ %1513, %1512 ], [ %strend, %1514 ], !dbg !1914
  br label %1517, !dbg !1895

; <label>:1517                                    ; preds = %1515, %1455
  %1518 = phi i8* [ %1456, %1455 ], [ %1516, %1515 ], !dbg !1895
  call void @llvm.dbg.value(metadata i8* %1518, i64 0, metadata !1925, metadata !566), !dbg !1926
  call void @llvm.dbg.value(metadata i8* %53, i64 0, metadata !1927, metadata !566), !dbg !1928
  call void @llvm.dbg.value(metadata i8* %s.14, i64 0, metadata !1604, metadata !566), !dbg !1605
  %1519 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %prog), !dbg !1929
  %1520 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 2, !dbg !1930
  %1521 = load %struct.regnode** %1520, align 8, !dbg !1930
  %1522 = call i32 (%struct.regexp*, %struct.regnode*, i8*, i8*, i8*, i32, ...)* bitcast (i32 (...)* @find_byclass to i32 (%struct.regexp*, %struct.regnode*, i8*, i8*, i8*, i32, ...)*)(%struct.regexp* %prog, %struct.regnode* %1521, i8* %s.14, i8* %1518, i8* %53, i32 1), !dbg !1931
  %1523 = sext i32 %1522 to i64, !dbg !1931
  %1524 = inttoptr i64 %1523 to i8*, !dbg !1931
  call void @llvm.dbg.value(metadata i8* %1524, i64 0, metadata !1414, metadata !566), !dbg !1415
  %1525 = icmp ne i8* %1524, null, !dbg !1932
  br i1 %1525, label %1635, label %1526, !dbg !1932

; <label>:1526                                    ; preds = %1517
  %1527 = icmp eq i8* %1518, %strend, !dbg !1933
  br i1 %1527, label %1528, label %1529, !dbg !1937

; <label>:1528                                    ; preds = %1526
  br label %1683, !dbg !1938

; <label>:1529                                    ; preds = %1526
  %1530 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 15, !dbg !1940
  %1531 = load i32* %1530, align 4, !dbg !1940
  %1532 = and i32 %1531, 15, !dbg !1940
  %1533 = icmp ne i32 %1532, 0, !dbg !1942
  br i1 %1533, label %1534, label %1537, !dbg !1942

; <label>:1534                                    ; preds = %1529
  %1535 = icmp ne i32 %ml_anch.8, 0, !dbg !1942
  br i1 %1535, label %1537, label %1536, !dbg !1942

; <label>:1536                                    ; preds = %1534
  br label %1683, !dbg !1943

; <label>:1537                                    ; preds = %1534, %1529
  %1538 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1944
  %1539 = load %struct.reg_substr_data** %1538, align 8, !dbg !1944
  %1540 = getelementptr inbounds %struct.reg_substr_data* %1539, i32 0, i32 0, !dbg !1944
  %1541 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1540, i32 0, i64 0, !dbg !1944
  %1542 = getelementptr inbounds %struct.reg_substr_datum* %1541, i32 0, i32 2, !dbg !1944
  %1543 = load %struct.sv** %1542, align 8, !dbg !1944
  %1544 = icmp ne %struct.sv* %1543, null, !dbg !1946
  br i1 %1544, label %1553, label %1545, !dbg !1946

; <label>:1545                                    ; preds = %1537
  %1546 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1947
  %1547 = load %struct.reg_substr_data** %1546, align 8, !dbg !1947
  %1548 = getelementptr inbounds %struct.reg_substr_data* %1547, i32 0, i32 0, !dbg !1947
  %1549 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1548, i32 0, i64 0, !dbg !1947
  %1550 = getelementptr inbounds %struct.reg_substr_datum* %1549, i32 0, i32 3, !dbg !1947
  %1551 = load %struct.sv** %1550, align 8, !dbg !1947
  %1552 = icmp ne %struct.sv* %1551, null, !dbg !1946
  br i1 %1552, label %1553, label %1604, !dbg !1946

; <label>:1553                                    ; preds = %1545, %1537
  %1554 = icmp ne i32 %8, 0, !dbg !1949
  br i1 %1554, label %1555, label %1562, !dbg !1949

; <label>:1555                                    ; preds = %1553
  %1556 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1952
  %1557 = load %struct.reg_substr_data** %1556, align 8, !dbg !1952
  %1558 = getelementptr inbounds %struct.reg_substr_data* %1557, i32 0, i32 0, !dbg !1952
  %1559 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1558, i32 0, i64 0, !dbg !1952
  %1560 = getelementptr inbounds %struct.reg_substr_datum* %1559, i32 0, i32 3, !dbg !1952
  %1561 = load %struct.sv** %1560, align 8, !dbg !1952
  br label %1569, !dbg !1949

; <label>:1562                                    ; preds = %1553
  %1563 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1954
  %1564 = load %struct.reg_substr_data** %1563, align 8, !dbg !1954
  %1565 = getelementptr inbounds %struct.reg_substr_data* %1564, i32 0, i32 0, !dbg !1954
  %1566 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1565, i32 0, i64 0, !dbg !1954
  %1567 = getelementptr inbounds %struct.reg_substr_datum* %1566, i32 0, i32 2, !dbg !1954
  %1568 = load %struct.sv** %1567, align 8, !dbg !1954
  br label %1569, !dbg !1949

; <label>:1569                                    ; preds = %1562, %1555
  %1570 = phi %struct.sv* [ %1561, %1555 ], [ %1568, %1562 ], !dbg !1949
  %1571 = icmp eq %struct.sv* %1570, %check.9, !dbg !1956
  br i1 %1571, label %1572, label %1595, !dbg !1957

; <label>:1572                                    ; preds = %1569
  br label %1573, !dbg !1958

; <label>:1573                                    ; preds = %1631, %1572
  %t.7 = phi i8* [ %s.14, %1572 ], [ %1634, %1631 ]
  %1574 = load i8* @PL_reg_match_utf8, align 1, !dbg !1960
  %1575 = sext i8 %1574 to i32, !dbg !1960
  %1576 = icmp ne i32 %1575, 0, !dbg !1960
  br i1 %1576, label %1577, label %1581, !dbg !1960

; <label>:1577                                    ; preds = %1573
  %1578 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %t.7, i32 1, i8* %strend), !dbg !1962
  %1579 = sext i32 %1578 to i64, !dbg !1962
  %1580 = inttoptr i64 %1579 to i8*, !dbg !1962
  br label %1583, !dbg !1962

; <label>:1581                                    ; preds = %1573
  %1582 = getelementptr inbounds i8* %t.7, i64 1, !dbg !1964
  br label %1583, !dbg !1964

; <label>:1583                                    ; preds = %1581, %1577
  %1584 = phi i8* [ %1580, %1577 ], [ %1582, %1581 ], !dbg !1960
  call void @llvm.dbg.value(metadata i8* %1584, i64 0, metadata !1414, metadata !566), !dbg !1415
  %1585 = sext i32 %start_shift.8 to i64, !dbg !1966
  %1586 = getelementptr inbounds i8* %1584, i64 %1585, !dbg !1966
  %1587 = sext i32 %end_shift.10 to i64, !dbg !1966
  %1588 = getelementptr inbounds i8* %1586, i64 %1587, !dbg !1966
  %1589 = icmp ugt i8* %1588, %strend, !dbg !1966
  br i1 %1589, label %1590, label %1591, !dbg !1968

; <label>:1590                                    ; preds = %1583
  br label %1683, !dbg !1969

; <label>:1591                                    ; preds = %1583
  %1592 = icmp ne %struct.sv* %check.9, null, !dbg !1971
  br i1 %1592, label %1594, label %1593, !dbg !1971

; <label>:1593                                    ; preds = %1591
  br label %1641, !dbg !1972

; <label>:1594                                    ; preds = %1591
  br label %398, !dbg !1974

; <label>:1595                                    ; preds = %1569
  %1596 = sext i32 %start_shift.8 to i64, !dbg !1975
  %1597 = getelementptr inbounds i8* %s.14, i64 %1596, !dbg !1975
  %1598 = icmp uge i8* %1597, %check_at.6, !dbg !1975
  br i1 %1598, label %1599, label %1600, !dbg !1977

; <label>:1599                                    ; preds = %1595
  br label %1631, !dbg !1978

; <label>:1600                                    ; preds = %1595
  call void @llvm.dbg.value(metadata i8* %check_at.6, i64 0, metadata !1414, metadata !566), !dbg !1415
  %1601 = icmp ne %struct.sv* %check.9, null, !dbg !1979
  br i1 %1601, label %1603, label %1602, !dbg !1979

; <label>:1602                                    ; preds = %1600
  br label %1641, !dbg !1980

; <label>:1603                                    ; preds = %1600
  br label %585, !dbg !1982

; <label>:1604                                    ; preds = %1545
  %1605 = icmp ne i32 %ml_anch.8, 0, !dbg !1983
  br i1 %1605, label %1606, label %1611, !dbg !1983

; <label>:1606                                    ; preds = %1604
  %1607 = getelementptr inbounds i8* %s.14, i64 1, !dbg !1984
  call void @llvm.dbg.value(metadata i8* %1607, i64 0, metadata !1604, metadata !566), !dbg !1605
  call void @llvm.dbg.value(metadata i8* %1607, i64 0, metadata !1414, metadata !566), !dbg !1415
  %1608 = icmp ne %struct.sv* %check.9, null, !dbg !1987
  br i1 %1608, label %1610, label %1609, !dbg !1987

; <label>:1609                                    ; preds = %1606
  br label %1641, !dbg !1988

; <label>:1610                                    ; preds = %1606
  br label %1096, !dbg !1990

; <label>:1611                                    ; preds = %1604
  %1612 = icmp ne i32 %8, 0, !dbg !1991
  br i1 %1612, label %1613, label %1621, !dbg !1991

; <label>:1613                                    ; preds = %1611
  %1614 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1992
  %1615 = load %struct.reg_substr_data** %1614, align 8, !dbg !1992
  %1616 = getelementptr inbounds %struct.reg_substr_data* %1615, i32 0, i32 0, !dbg !1992
  %1617 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1616, i32 0, i64 1, !dbg !1992
  %1618 = getelementptr inbounds %struct.reg_substr_datum* %1617, i32 0, i32 3, !dbg !1992
  %1619 = load %struct.sv** %1618, align 8, !dbg !1992
  %1620 = icmp ne %struct.sv* %1619, null, !dbg !1991
  br i1 %1620, label %1630, label %1629, !dbg !1991

; <label>:1621                                    ; preds = %1611
  %1622 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !1995
  %1623 = load %struct.reg_substr_data** %1622, align 8, !dbg !1995
  %1624 = getelementptr inbounds %struct.reg_substr_data* %1623, i32 0, i32 0, !dbg !1995
  %1625 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1624, i32 0, i64 1, !dbg !1995
  %1626 = getelementptr inbounds %struct.reg_substr_datum* %1625, i32 0, i32 2, !dbg !1995
  %1627 = load %struct.sv** %1626, align 8, !dbg !1995
  %1628 = icmp ne %struct.sv* %1627, null, !dbg !1991
  br i1 %1628, label %1630, label %1629, !dbg !1991

; <label>:1629                                    ; preds = %1621, %1613
  br label %1683, !dbg !1997

; <label>:1630                                    ; preds = %1621, %1613
  br label %1631, !dbg !1998

; <label>:1631                                    ; preds = %1630, %1599
  %1632 = sext i32 %start_shift.8 to i64, !dbg !2001
  %1633 = sub i64 0, %1632, !dbg !2001
  %1634 = getelementptr inbounds i8* %check_at.6, i64 %1633, !dbg !2001
  call void @llvm.dbg.value(metadata i8* %1634, i64 0, metadata !1604, metadata !566), !dbg !1605
  br label %1573, !dbg !2002

; <label>:1635                                    ; preds = %1517
  %1636 = icmp ne i8* %s.14, %1524, !dbg !2003
  br i1 %1636, label %1637, label %1638, !dbg !2005

; <label>:1637                                    ; preds = %1635
  br label %1639, !dbg !2006

; <label>:1638                                    ; preds = %1635
  br label %1639

; <label>:1639                                    ; preds = %1638, %1637
  br label %1640, !dbg !2008

; <label>:1640                                    ; preds = %1639, %1362
  %s.15 = phi i8* [ %1524, %1639 ], [ %s.14, %1362 ]
  br label %1641, !dbg !2009

; <label>:1641                                    ; preds = %1640, %1609, %1602, %1593
  %s.16 = phi i8* [ %s.15, %1640 ], [ %1584, %1593 ], [ %check_at.6, %1602 ], [ %1607, %1609 ]
  br label %1684, !dbg !2011

; <label>:1642                                    ; preds = %1153, %1041, %799, %527, %454, %254, %227
  %1643 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !2012
  %1644 = load %struct.reg_substr_data** %1643, align 8, !dbg !2012
  %1645 = getelementptr inbounds %struct.reg_substr_data* %1644, i32 0, i32 0, !dbg !2012
  %1646 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1645, i32 0, i64 2, !dbg !2012
  %1647 = getelementptr inbounds %struct.reg_substr_datum* %1646, i32 0, i32 2, !dbg !2012
  %1648 = load %struct.sv** %1647, align 8, !dbg !2012
  %1649 = icmp ne %struct.sv* %1648, null, !dbg !2014
  br i1 %1649, label %1658, label %1650, !dbg !2014

; <label>:1650                                    ; preds = %1642
  %1651 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !2015
  %1652 = load %struct.reg_substr_data** %1651, align 8, !dbg !2015
  %1653 = getelementptr inbounds %struct.reg_substr_data* %1652, i32 0, i32 0, !dbg !2015
  %1654 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1653, i32 0, i64 2, !dbg !2015
  %1655 = getelementptr inbounds %struct.reg_substr_datum* %1654, i32 0, i32 3, !dbg !2015
  %1656 = load %struct.sv** %1655, align 8, !dbg !2015
  %1657 = icmp ne %struct.sv* %1656, null, !dbg !2014
  br i1 %1657, label %1658, label %1682, !dbg !2014

; <label>:1658                                    ; preds = %1650, %1642
  %1659 = icmp ne i32 %8, 0, !dbg !2017
  br i1 %1659, label %1660, label %1667, !dbg !2017

; <label>:1660                                    ; preds = %1658
  %1661 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !2018
  %1662 = load %struct.reg_substr_data** %1661, align 8, !dbg !2018
  %1663 = getelementptr inbounds %struct.reg_substr_data* %1662, i32 0, i32 0, !dbg !2018
  %1664 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1663, i32 0, i64 2, !dbg !2018
  %1665 = getelementptr inbounds %struct.reg_substr_datum* %1664, i32 0, i32 3, !dbg !2018
  %1666 = load %struct.sv** %1665, align 8, !dbg !2018
  br label %1674, !dbg !2018

; <label>:1667                                    ; preds = %1658
  %1668 = getelementptr inbounds %struct.regexp* %prog, i32 0, i32 3, !dbg !2019
  %1669 = load %struct.reg_substr_data** %1668, align 8, !dbg !2019
  %1670 = getelementptr inbounds %struct.reg_substr_data* %1669, i32 0, i32 0, !dbg !2019
  %1671 = getelementptr inbounds [3 x %struct.reg_substr_datum]* %1670, i32 0, i64 2, !dbg !2019
  %1672 = getelementptr inbounds %struct.reg_substr_datum* %1671, i32 0, i32 2, !dbg !2019
  %1673 = load %struct.sv** %1672, align 8, !dbg !2019
  br label %1674, !dbg !2019

; <label>:1674                                    ; preds = %1667, %1660
  %1675 = phi %struct.sv* [ %1666, %1660 ], [ %1673, %1667 ], !dbg !2017
  %1676 = getelementptr inbounds %struct.sv* %1675, i32 0, i32 0, !dbg !2021
  %1677 = load i8** %1676, align 8, !dbg !2021
  %1678 = bitcast i8* %1677 to %struct.xpvbm*, !dbg !2021
  %1679 = getelementptr inbounds %struct.xpvbm* %1678, i32 0, i32 7, !dbg !2021
  %1680 = load i32* %1679, align 4, !dbg !2021
  %1681 = add nsw i32 %1680, 5, !dbg !2021
  store i32 %1681, i32* %1679, align 4, !dbg !2021
  br label %1682, !dbg !2021

; <label>:1682                                    ; preds = %1674, %1650
  br label %1683, !dbg !2024

; <label>:1683                                    ; preds = %1682, %1629, %1590, %1536, %1528, %148, %107, %35
  br label %1684, !dbg !2025

; <label>:1684                                    ; preds = %1683, %1641
  %.0 = phi i8* [ null, %1683 ], [ %s.16, %1641 ]
  ret i8* %.0, !dbg !2026
}

declare i32 @to_utf8_substr(...) #2

declare i32 @to_byte_substr(...) #2

declare i32 @reghop3(...) #2

declare i32 @memcmp(i8*, i8*, i64) #2

declare i64 @Perl_sv_len_utf8(%struct.sv*) #2

declare i64 @Perl_utf8_distance(i8*, i8*) #2

declare i8* @Perl_screaminstr(%struct.sv*, %struct.sv*, i32, i32, i32*, i32) #2

declare i8* @Perl_fbm_instr(i8*, i8*, %struct.sv*, i32) #2

declare i32 @reghopmaybe3(...) #2

declare void @Perl_sv_free(%struct.sv*) #2

declare i32 @cache_re(...) #2

declare i32 @find_byclass(...) #2

declare void @Perl_croak(i8*, ...) #2

declare %struct.magic* @Perl_mg_find(%struct.sv*, i32) #2

declare i32 @regtry(...) #2

declare i32 @reghop(...) #2

declare i8* @Perl_sv_2pv_flags(%struct.sv*, i64*, i32) #2

declare i8* @Perl_rninstr(i8*, i8*, i8*, i8*) #2

declare void @Perl_sv_setsv_flags(%struct.sv*, %struct.sv*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @restore_pos(i8* %arg) #0 {
  call void @llvm.dbg.value(metadata i8* %arg, i64 0, metadata !2027, metadata !566), !dbg !2028
  %1 = load i32* @PL_reg_eval_set, align 4, !dbg !2029
  %2 = icmp ne i32 %1, 0, !dbg !2031
  br i1 %2, label %3, label %23, !dbg !2031

; <label>:3                                       ; preds = %0
  %4 = load i8** @PL_reg_oldsaved, align 8, !dbg !2032
  %5 = icmp ne i8* %4, null, !dbg !2035
  br i1 %5, label %6, label %18, !dbg !2035

; <label>:6                                       ; preds = %3
  %7 = load i8** @PL_reg_oldsaved, align 8, !dbg !2036
  %8 = load %struct.regexp** @PL_reg_re, align 8, !dbg !2038
  %9 = getelementptr inbounds %struct.regexp* %8, i32 0, i32 6, !dbg !2038
  store i8* %7, i8** %9, align 8, !dbg !2038
  %10 = load i64* @PL_reg_oldsavedlen, align 8, !dbg !2039
  %11 = trunc i64 %10 to i32, !dbg !2039
  %12 = load %struct.regexp** @PL_reg_re, align 8, !dbg !2040
  %13 = getelementptr inbounds %struct.regexp* %12, i32 0, i32 8, !dbg !2040
  store i32 %11, i32* %13, align 4, !dbg !2040
  %14 = load %struct.regexp** @PL_reg_re, align 8, !dbg !2041
  %15 = getelementptr inbounds %struct.regexp* %14, i32 0, i32 15, !dbg !2041
  %16 = load i32* %15, align 4, !dbg !2041
  %17 = or i32 %16, 262144, !dbg !2041
  store i32 %17, i32* %15, align 4, !dbg !2041
  br label %18, !dbg !2042

; <label>:18                                      ; preds = %6, %3
  %19 = load i32* @PL_reg_oldpos, align 4, !dbg !2043
  %20 = load %struct.magic** @PL_reg_magic, align 8, !dbg !2044
  %21 = getelementptr inbounds %struct.magic* %20, i32 0, i32 7, !dbg !2044
  store i32 %19, i32* %21, align 4, !dbg !2044
  store i32 0, i32* @PL_reg_eval_set, align 4, !dbg !2045
  %22 = load %struct.pmop** @PL_reg_oldcurpm, align 8, !dbg !2046
  store %struct.pmop* %22, %struct.pmop** @PL_curpm, align 8, !dbg !2047
  br label %23, !dbg !2048

; <label>:23                                      ; preds = %18, %0
  ret void, !dbg !2049
}

declare void @Perl_safesysfree(i8*) #2

declare i8* @Perl_savepvn(i8*, i32) #2

; Function Attrs: nounwind uwtable
define i32 @S_regmatch(%struct.regnode* %prog) #0 {
  %ulen = alloca i64, align 8
  %e2 = alloca i8*, align 8
  %inclasslen = alloca i64, align 8
  %ulen1 = alloca i64, align 8
  %ulen2 = alloca i64, align 8
  %tmpbuf1 = alloca [7 x i8], align 1
  %tmpbuf2 = alloca [7 x i8], align 1
  %state = alloca %struct.re_cc_state, align 8
  %len = alloca i64, align 8
  %pm = alloca %struct.pmop, align 8
  %cc = alloca %struct.curcur, align 8
  %l9 = alloca i32, align 4
  %ulen114 = alloca i64, align 8
  %ulen215 = alloca i64, align 8
  %tmpbuf116 = alloca [7 x i8], align 1
  %tmpbuf217 = alloca [7 x i8], align 1
  %len20 = alloca i64, align 8
  call void @llvm.dbg.value(metadata %struct.regnode* %prog, i64 0, metadata !2050, metadata !566), !dbg !2051
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2052, metadata !566), !dbg !2053
  call void @llvm.dbg.value(metadata i8* null, i64 0, metadata !2054, metadata !566), !dbg !2055
  %1 = load i8** @PL_reginput, align 8, !dbg !2056
  call void @llvm.dbg.value(metadata i8* %1, i64 0, metadata !2057, metadata !566), !dbg !2058
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2059, metadata !566), !dbg !2060
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2061, metadata !566), !dbg !2062
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2063, metadata !566), !dbg !2064
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2065, metadata !566), !dbg !2066
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2067, metadata !566), !dbg !2068
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2069, metadata !566), !dbg !2070
  %2 = load i8* @PL_reg_match_utf8, align 1, !dbg !2071
  call void @llvm.dbg.value(metadata i8 %2, i64 0, metadata !2072, metadata !566), !dbg !2073
  %3 = load i8* %1, align 1, !dbg !2074
  %4 = zext i8 %3 to i32, !dbg !2074
  call void @llvm.dbg.value(metadata i32 %4, i64 0, metadata !2075, metadata !566), !dbg !2076
  call void @llvm.dbg.value(metadata %struct.regnode* %prog, i64 0, metadata !2077, metadata !566), !dbg !2078
  br label %5, !dbg !2079

; <label>:5                                       ; preds = %5024, %0
  %unwind.0 = phi i32 [ 0, %0 ], [ %unwind.3, %5024 ]
  %logical.0 = phi i32 [ 0, %0 ], [ %logical.6, %5024 ]
  %sw.0 = phi i32 [ 0, %0 ], [ %sw.6, %5024 ]
  %minmod.0 = phi i32 [ 0, %0 ], [ %minmod.4, %5024 ]
  %c2.0 = phi i32 [ 0, %0 ], [ %c2.20, %5024 ]
  %c1.0 = phi i32 [ 0, %0 ], [ %c1.15, %5024 ]
  %locinput.0 = phi i8* [ %1, %0 ], [ %locinput.24, %5024 ]
  %ln.0 = phi i32 [ 0, %0 ], [ %ln.18, %5024 ]
  %nextchr.0 = phi i32 [ %4, %0 ], [ %nextchr.9, %5024 ]
  %scan.0 = phi %struct.regnode* [ %prog, %0 ], [ %next.9, %5024 ]
  %6 = icmp ne %struct.regnode* %scan.0, null, !dbg !2080
  br i1 %6, label %7, label %5025, !dbg !2079

; <label>:7                                       ; preds = %5
  %8 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 2, !dbg !2083
  %9 = load i16* %8, align 2, !dbg !2083
  %10 = zext i16 %9 to i32, !dbg !2083
  %11 = sext i32 %10 to i64, !dbg !2085
  %12 = getelementptr inbounds %struct.regnode* %scan.0, i64 %11, !dbg !2085
  call void @llvm.dbg.value(metadata %struct.regnode* %12, i64 0, metadata !2086, metadata !566), !dbg !2087
  %13 = icmp eq %struct.regnode* %12, %scan.0, !dbg !2088
  br i1 %13, label %14, label %15, !dbg !2090

; <label>:14                                      ; preds = %7
  call void @llvm.dbg.value(metadata %struct.regnode* null, i64 0, metadata !2086, metadata !566), !dbg !2087
  br label %15, !dbg !2091

; <label>:15                                      ; preds = %14, %7
  %next.0 = phi %struct.regnode* [ null, %14 ], [ %12, %7 ]
  %16 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2092
  %17 = load i8* %16, align 1, !dbg !2092
  %18 = zext i8 %17 to i32, !dbg !2092
  switch i32 %18, label %4971 [
    i32 2, label %19
    i32 3, label %37
    i32 4, label %52
    i32 13, label %57
    i32 6, label %62
    i32 7, label %67
    i32 8, label %77
    i32 5, label %94
    i32 15, label %99
    i32 16, label %125
    i32 14, label %135
    i32 33, label %163
    i32 35, label %331
    i32 34, label %334
    i32 17, label %474
    i32 19, label %620
    i32 18, label %623
    i32 21, label %724
    i32 20, label %727
    i32 10, label %831
    i32 12, label %831
    i32 9, label %834
    i32 11, label %834
    i32 23, label %1047
    i32 22, label %1050
    i32 25, label %1178
    i32 24, label %1181
    i32 27, label %1274
    i32 26, label %1277
    i32 29, label %1361
    i32 28, label %1364
    i32 30, label %1451
    i32 49, label %1501
    i32 47, label %1504
    i32 48, label %1504
    i32 36, label %1642
    i32 37, label %1642
    i32 32, label %1643
    i32 57, label %1644
    i32 45, label %1974
    i32 46, label %1985
    i32 54, label %2016
    i32 53, label %2032
    i32 59, label %2053
    i32 43, label %2057
    i32 44, label %2112
    i32 56, label %2737
    i32 31, label %2748
    i32 58, label %2779
    i32 42, label %2780
    i32 41, label %3519
    i32 40, label %3544
    i32 38, label %3555
    i32 39, label %3557
    i32 0, label %4807
    i32 1, label %4851
    i32 52, label %4852
    i32 51, label %4853
    i32 50, label %4895
    i32 55, label %4961
  ], !dbg !2093

; <label>:19                                      ; preds = %15
  %20 = load i8** @PL_bostr, align 8, !dbg !2094
  %21 = icmp eq i8* %locinput.0, %20, !dbg !2097
  br i1 %21, label %35, label %22, !dbg !2098

; <label>:22                                      ; preds = %19
  %23 = load i32* @PL_multiline, align 4, !dbg !2099
  %24 = icmp ne i32 %23, 0, !dbg !2098
  br i1 %24, label %25, label %36, !dbg !2098

; <label>:25                                      ; preds = %22
  %26 = icmp ne i32 %nextchr.0, 0, !dbg !2098
  br i1 %26, label %30, label %27, !dbg !2098

; <label>:27                                      ; preds = %25
  %28 = load i8** @PL_regeol, align 8, !dbg !2101
  %29 = icmp ult i8* %locinput.0, %28, !dbg !2102
  br i1 %29, label %30, label %36, !dbg !2098

; <label>:30                                      ; preds = %27, %25
  %31 = getelementptr inbounds i8* %locinput.0, i64 -1, !dbg !2103
  %32 = load i8* %31, align 1, !dbg !2103
  %33 = sext i8 %32 to i32, !dbg !2103
  %34 = icmp eq i32 %33, 10, !dbg !2103
  br i1 %34, label %35, label %36, !dbg !2098

; <label>:35                                      ; preds = %30, %19
  br label %5023, !dbg !2104

; <label>:36                                      ; preds = %30, %27, %22
  br label %5029, !dbg !2106

; <label>:37                                      ; preds = %15
  %38 = load i8** @PL_bostr, align 8, !dbg !2107
  %39 = icmp eq i8* %locinput.0, %38, !dbg !2109
  br i1 %39, label %50, label %40, !dbg !2110

; <label>:40                                      ; preds = %37
  %41 = icmp ne i32 %nextchr.0, 0, !dbg !2110
  br i1 %41, label %45, label %42, !dbg !2110

; <label>:42                                      ; preds = %40
  %43 = load i8** @PL_regeol, align 8, !dbg !2111
  %44 = icmp ult i8* %locinput.0, %43, !dbg !2112
  br i1 %44, label %45, label %51, !dbg !2110

; <label>:45                                      ; preds = %42, %40
  %46 = getelementptr inbounds i8* %locinput.0, i64 -1, !dbg !2113
  %47 = load i8* %46, align 1, !dbg !2113
  %48 = sext i8 %47 to i32, !dbg !2113
  %49 = icmp eq i32 %48, 10, !dbg !2113
  br i1 %49, label %50, label %51, !dbg !2110

; <label>:50                                      ; preds = %45, %37
  br label %5023, !dbg !2114

; <label>:51                                      ; preds = %45, %42
  br label %5029, !dbg !2116

; <label>:52                                      ; preds = %15
  %53 = load i8** @PL_bostr, align 8, !dbg !2117
  %54 = icmp eq i8* %locinput.0, %53, !dbg !2119
  br i1 %54, label %55, label %56, !dbg !2120

; <label>:55                                      ; preds = %52
  br label %5023, !dbg !2121

; <label>:56                                      ; preds = %52
  br label %5029, !dbg !2122

; <label>:57                                      ; preds = %15
  %58 = load i8** @PL_reg_ganch, align 8, !dbg !2123
  %59 = icmp eq i8* %locinput.0, %58, !dbg !2125
  br i1 %59, label %60, label %61, !dbg !2126

; <label>:60                                      ; preds = %57
  br label %5023, !dbg !2127

; <label>:61                                      ; preds = %57
  br label %5029, !dbg !2128

; <label>:62                                      ; preds = %15
  %63 = load i32* @PL_multiline, align 4, !dbg !2129
  %64 = icmp ne i32 %63, 0, !dbg !2131
  br i1 %64, label %65, label %66, !dbg !2131

; <label>:65                                      ; preds = %62
  br label %68, !dbg !2132

; <label>:66                                      ; preds = %62
  br label %78, !dbg !2133

; <label>:67                                      ; preds = %15
  br label %68, !dbg !2129

; <label>:68                                      ; preds = %67, %65
  %69 = icmp ne i32 %nextchr.0, 0, !dbg !2134
  br i1 %69, label %73, label %70, !dbg !2134

; <label>:70                                      ; preds = %68
  %71 = load i8** @PL_regeol, align 8, !dbg !2135
  %72 = icmp ult i8* %locinput.0, %71, !dbg !2137
  br i1 %72, label %73, label %76, !dbg !2134

; <label>:73                                      ; preds = %70, %68
  %74 = icmp ne i32 %nextchr.0, 10, !dbg !2138
  br i1 %74, label %75, label %76, !dbg !2134

; <label>:75                                      ; preds = %73
  br label %5029, !dbg !2141

; <label>:76                                      ; preds = %73, %70
  br label %5023, !dbg !2142

; <label>:77                                      ; preds = %15
  br label %78, !dbg !2142

; <label>:78                                      ; preds = %77, %66
  %79 = icmp ne i32 %nextchr.0, 0, !dbg !2143
  br i1 %79, label %83, label %80, !dbg !2143

; <label>:80                                      ; preds = %78
  %81 = load i8** @PL_regeol, align 8, !dbg !2144
  %82 = icmp ult i8* %locinput.0, %81, !dbg !2146
  br i1 %82, label %83, label %86, !dbg !2143

; <label>:83                                      ; preds = %80, %78
  %84 = icmp ne i32 %nextchr.0, 10, !dbg !2147
  br i1 %84, label %85, label %86, !dbg !2143

; <label>:85                                      ; preds = %83
  br label %5029, !dbg !2150

; <label>:86                                      ; preds = %83, %80
  %87 = load i8** @PL_regeol, align 8, !dbg !2151
  %88 = ptrtoint i8* %87 to i64, !dbg !2151
  %89 = ptrtoint i8* %locinput.0 to i64, !dbg !2151
  %90 = sub i64 %88, %89, !dbg !2151
  %91 = icmp sgt i64 %90, 1, !dbg !2151
  br i1 %91, label %92, label %93, !dbg !2153

; <label>:92                                      ; preds = %86
  br label %5029, !dbg !2154

; <label>:93                                      ; preds = %86
  br label %5023, !dbg !2155

; <label>:94                                      ; preds = %15
  %95 = load i8** @PL_regeol, align 8, !dbg !2156
  %96 = icmp ne i8* %95, %locinput.0, !dbg !2156
  br i1 %96, label %97, label %98, !dbg !2158

; <label>:97                                      ; preds = %94
  br label %5029, !dbg !2159

; <label>:98                                      ; preds = %94
  br label %5023, !dbg !2160

; <label>:99                                      ; preds = %15
  %100 = icmp ne i32 %nextchr.0, 0, !dbg !2161
  br i1 %100, label %105, label %101, !dbg !2161

; <label>:101                                     ; preds = %99
  %102 = load i8** @PL_regeol, align 8, !dbg !2162
  %103 = icmp uge i8* %locinput.0, %102, !dbg !2164
  br i1 %103, label %104, label %105, !dbg !2161

; <label>:104                                     ; preds = %101
  br label %5029, !dbg !2165

; <label>:105                                     ; preds = %101, %99
  %106 = icmp ne i8 %2, 0, !dbg !2166
  br i1 %106, label %107, label %120, !dbg !2166

; <label>:107                                     ; preds = %105
  %108 = sext i32 %nextchr.0 to i64, !dbg !2167
  %109 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %108, !dbg !2167
  %110 = load i8* %109, align 1, !dbg !2167
  %111 = zext i8 %110 to i32, !dbg !2167
  %112 = sext i32 %111 to i64, !dbg !2170
  %113 = getelementptr inbounds i8* %locinput.0, i64 %112, !dbg !2170
  call void @llvm.dbg.value(metadata i8* %113, i64 0, metadata !2057, metadata !566), !dbg !2058
  %114 = load i8** @PL_regeol, align 8, !dbg !2171
  %115 = icmp ugt i8* %113, %114, !dbg !2173
  br i1 %115, label %116, label %117, !dbg !2174

; <label>:116                                     ; preds = %107
  br label %5029, !dbg !2175

; <label>:117                                     ; preds = %107
  %118 = load i8* %113, align 1, !dbg !2176
  %119 = zext i8 %118 to i32, !dbg !2176
  call void @llvm.dbg.value(metadata i32 %119, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %124, !dbg !2177

; <label>:120                                     ; preds = %105
  %121 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2178
  call void @llvm.dbg.value(metadata i8* %121, i64 0, metadata !2057, metadata !566), !dbg !2058
  %122 = load i8* %121, align 1, !dbg !2178
  %123 = zext i8 %122 to i32, !dbg !2178
  call void @llvm.dbg.value(metadata i32 %123, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %124

; <label>:124                                     ; preds = %120, %117
  %locinput.1 = phi i8* [ %113, %117 ], [ %121, %120 ]
  %nextchr.1 = phi i32 [ %119, %117 ], [ %123, %120 ]
  br label %5023, !dbg !2179

; <label>:125                                     ; preds = %15
  %126 = icmp ne i32 %nextchr.0, 0, !dbg !2180
  br i1 %126, label %131, label %127, !dbg !2180

; <label>:127                                     ; preds = %125
  %128 = load i8** @PL_regeol, align 8, !dbg !2181
  %129 = icmp uge i8* %locinput.0, %128, !dbg !2183
  br i1 %129, label %130, label %131, !dbg !2180

; <label>:130                                     ; preds = %127
  br label %5029, !dbg !2184

; <label>:131                                     ; preds = %127, %125
  %132 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2185
  call void @llvm.dbg.value(metadata i8* %132, i64 0, metadata !2057, metadata !566), !dbg !2058
  %133 = load i8* %132, align 1, !dbg !2185
  %134 = zext i8 %133 to i32, !dbg !2185
  call void @llvm.dbg.value(metadata i32 %134, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2186

; <label>:135                                     ; preds = %15
  %136 = icmp ne i32 %nextchr.0, 0, !dbg !2187
  br i1 %136, label %140, label %137, !dbg !2187

; <label>:137                                     ; preds = %135
  %138 = load i8** @PL_regeol, align 8, !dbg !2188
  %139 = icmp uge i8* %locinput.0, %138, !dbg !2190
  br i1 %139, label %142, label %140, !dbg !2187

; <label>:140                                     ; preds = %137, %135
  %141 = icmp eq i32 %nextchr.0, 10, !dbg !2191
  br i1 %141, label %142, label %143, !dbg !2187

; <label>:142                                     ; preds = %140, %137
  br label %5029, !dbg !2194

; <label>:143                                     ; preds = %140
  %144 = icmp ne i8 %2, 0, !dbg !2195
  br i1 %144, label %145, label %158, !dbg !2195

; <label>:145                                     ; preds = %143
  %146 = sext i32 %nextchr.0 to i64, !dbg !2196
  %147 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %146, !dbg !2196
  %148 = load i8* %147, align 1, !dbg !2196
  %149 = zext i8 %148 to i32, !dbg !2196
  %150 = sext i32 %149 to i64, !dbg !2199
  %151 = getelementptr inbounds i8* %locinput.0, i64 %150, !dbg !2199
  call void @llvm.dbg.value(metadata i8* %151, i64 0, metadata !2057, metadata !566), !dbg !2058
  %152 = load i8** @PL_regeol, align 8, !dbg !2200
  %153 = icmp ugt i8* %151, %152, !dbg !2202
  br i1 %153, label %154, label %155, !dbg !2203

; <label>:154                                     ; preds = %145
  br label %5029, !dbg !2204

; <label>:155                                     ; preds = %145
  %156 = load i8* %151, align 1, !dbg !2205
  %157 = zext i8 %156 to i32, !dbg !2205
  call void @llvm.dbg.value(metadata i32 %157, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %162, !dbg !2206

; <label>:158                                     ; preds = %143
  %159 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2207
  call void @llvm.dbg.value(metadata i8* %159, i64 0, metadata !2057, metadata !566), !dbg !2058
  %160 = load i8* %159, align 1, !dbg !2207
  %161 = zext i8 %160 to i32, !dbg !2207
  call void @llvm.dbg.value(metadata i32 %161, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %162

; <label>:162                                     ; preds = %158, %155
  %locinput.2 = phi i8* [ %151, %155 ], [ %159, %158 ]
  %nextchr.2 = phi i32 [ %157, %155 ], [ %161, %158 ]
  br label %5023, !dbg !2208

; <label>:163                                     ; preds = %15
  %164 = bitcast %struct.regnode* %scan.0 to %struct.regnode_string*, !dbg !2209
  %165 = getelementptr inbounds %struct.regnode_string* %164, i32 0, i32 3, !dbg !2209
  %166 = getelementptr inbounds [1 x i8]* %165, i32 0, i32 0, !dbg !2209
  call void @llvm.dbg.value(metadata i8* %166, i64 0, metadata !2054, metadata !566), !dbg !2055
  %167 = bitcast %struct.regnode* %scan.0 to %struct.regnode_string*, !dbg !2210
  %168 = getelementptr inbounds %struct.regnode_string* %167, i32 0, i32 0, !dbg !2210
  %169 = load i8* %168, align 1, !dbg !2210
  %170 = zext i8 %169 to i32, !dbg !2210
  call void @llvm.dbg.value(metadata i32 %170, i64 0, metadata !2052, metadata !566), !dbg !2053
  %171 = sext i8 %2 to i32, !dbg !2211
  %172 = load i32* @PL_reg_flags, align 4, !dbg !2213
  %173 = and i32 %172, 8, !dbg !2213
  %174 = icmp ne i32 %173, 0, !dbg !2213
  %175 = zext i1 %174 to i32, !dbg !2213
  %176 = icmp ne i32 %171, %175, !dbg !2211
  br i1 %176, label %177, label %306, !dbg !2214

; <label>:177                                     ; preds = %163
  call void @llvm.dbg.value(metadata i8* %locinput.0, i64 0, metadata !2215, metadata !566), !dbg !2217
  %178 = sext i32 %170 to i64, !dbg !2218
  %179 = getelementptr inbounds i8* %166, i64 %178, !dbg !2218
  call void @llvm.dbg.value(metadata i8* %179, i64 0, metadata !2219, metadata !566), !dbg !2220
  call void @llvm.dbg.declare(metadata i64* %ulen, metadata !2221, metadata !566), !dbg !2222
  %180 = icmp ne i8 %2, 0, !dbg !2223
  br i1 %180, label %181, label %242, !dbg !2223

; <label>:181                                     ; preds = %177
  br label %182, !dbg !2224

; <label>:182                                     ; preds = %237, %181
  %l.0 = phi i8* [ %locinput.0, %181 ], [ %239, %237 ]
  %s.0 = phi i8* [ %166, %181 ], [ %240, %237 ]
  %183 = icmp ult i8* %s.0, %179, !dbg !2227
  br i1 %183, label %184, label %241, !dbg !2224

; <label>:184                                     ; preds = %182
  %185 = load i8** @PL_regeol, align 8, !dbg !2228
  %186 = icmp uge i8* %l.0, %185, !dbg !2231
  br i1 %186, label %187, label %188, !dbg !2232

; <label>:187                                     ; preds = %184
  br label %5029, !dbg !2233

; <label>:188                                     ; preds = %184
  %189 = load i8* %s.0, align 1, !dbg !2234
  %190 = zext i8 %189 to i64, !dbg !2234
  %191 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2236
  %192 = getelementptr inbounds %struct.cop* %191, i32 0, i32 14, !dbg !2236
  %193 = load %struct.sv** %192, align 8, !dbg !2236
  %194 = icmp ne %struct.sv* %193, null, !dbg !2236
  br i1 %194, label %195, label %219, !dbg !2236

; <label>:195                                     ; preds = %188
  %196 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2237
  %197 = getelementptr inbounds %struct.cop* %196, i32 0, i32 14, !dbg !2237
  %198 = load %struct.sv** %197, align 8, !dbg !2237
  %199 = icmp ne %struct.sv* %198, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !2237
  br i1 %199, label %200, label %219, !dbg !2237

; <label>:200                                     ; preds = %195
  %201 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2239
  %202 = getelementptr inbounds %struct.cop* %201, i32 0, i32 14, !dbg !2239
  %203 = load %struct.sv** %202, align 8, !dbg !2239
  %204 = icmp eq %struct.sv* %203, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !2239
  br i1 %204, label %231, label %205, !dbg !2239

; <label>:205                                     ; preds = %200
  %206 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2241
  %207 = getelementptr inbounds %struct.cop* %206, i32 0, i32 14, !dbg !2241
  %208 = load %struct.sv** %207, align 8, !dbg !2241
  %209 = getelementptr inbounds %struct.sv* %208, i32 0, i32 0, !dbg !2241
  %210 = load i8** %209, align 8, !dbg !2241
  %211 = bitcast i8* %210 to %struct.xpv*, !dbg !2241
  %212 = getelementptr inbounds %struct.xpv* %211, i32 0, i32 0, !dbg !2241
  %213 = load i8** %212, align 8, !dbg !2241
  %214 = getelementptr inbounds i8* %213, i64 11, !dbg !2241
  %215 = load i8* %214, align 1, !dbg !2241
  %216 = sext i8 %215 to i32, !dbg !2241
  %217 = and i32 %216, 1, !dbg !2241
  %218 = icmp ne i32 %217, 0, !dbg !2241
  br i1 %218, label %231, label %219, !dbg !2241

; <label>:219                                     ; preds = %205, %195, %188
  %220 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2243
  %221 = getelementptr inbounds %struct.cop* %220, i32 0, i32 14, !dbg !2243
  %222 = load %struct.sv** %221, align 8, !dbg !2243
  %223 = icmp eq %struct.sv* %222, null, !dbg !2243
  br i1 %223, label %224, label %229, !dbg !2243

; <label>:224                                     ; preds = %219
  %225 = load i8* @PL_dowarn, align 1, !dbg !2247
  %226 = zext i8 %225 to i32, !dbg !2247
  %227 = and i32 %226, 1, !dbg !2247
  %228 = icmp ne i32 %227, 0, !dbg !2247
  br label %229

; <label>:229                                     ; preds = %224, %219
  %230 = phi i1 [ false, %219 ], [ %228, %224 ]
  br label %231, !dbg !2249

; <label>:231                                     ; preds = %229, %205, %200
  %232 = phi i1 [ true, %205 ], [ true, %200 ], [ %230, %229 ]
  %233 = select i1 %232, i32 0, i32 255, !dbg !2251
  %234 = call i64 @Perl_utf8n_to_uvuni(i8* %l.0, i64 13, i64* %ulen, i32 %233), !dbg !2255
  %235 = icmp ne i64 %190, %234, !dbg !2234
  br i1 %235, label %236, label %237, !dbg !2256

; <label>:236                                     ; preds = %231
  br label %5029, !dbg !2257

; <label>:237                                     ; preds = %231
  %238 = load i64* %ulen, align 8, !dbg !2258
  %239 = getelementptr inbounds i8* %l.0, i64 %238, !dbg !2259
  call void @llvm.dbg.value(metadata i8* %239, i64 0, metadata !2215, metadata !566), !dbg !2217
  %240 = getelementptr inbounds i8* %s.0, i32 1, !dbg !2260
  call void @llvm.dbg.value(metadata i8* %240, i64 0, metadata !2054, metadata !566), !dbg !2055
  br label %182, !dbg !2224

; <label>:241                                     ; preds = %182
  br label %303, !dbg !2261

; <label>:242                                     ; preds = %177
  br label %243, !dbg !2262

; <label>:243                                     ; preds = %298, %242
  %l.1 = phi i8* [ %locinput.0, %242 ], [ %301, %298 ]
  %s.1 = phi i8* [ %166, %242 ], [ %300, %298 ]
  %244 = icmp ult i8* %s.1, %179, !dbg !2264
  br i1 %244, label %245, label %302, !dbg !2262

; <label>:245                                     ; preds = %243
  %246 = load i8** @PL_regeol, align 8, !dbg !2265
  %247 = icmp uge i8* %l.1, %246, !dbg !2268
  br i1 %247, label %248, label %249, !dbg !2269

; <label>:248                                     ; preds = %245
  br label %5029, !dbg !2270

; <label>:249                                     ; preds = %245
  %250 = load i8* %l.1, align 1, !dbg !2271
  %251 = zext i8 %250 to i64, !dbg !2271
  %252 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2273
  %253 = getelementptr inbounds %struct.cop* %252, i32 0, i32 14, !dbg !2273
  %254 = load %struct.sv** %253, align 8, !dbg !2273
  %255 = icmp ne %struct.sv* %254, null, !dbg !2273
  br i1 %255, label %256, label %280, !dbg !2273

; <label>:256                                     ; preds = %249
  %257 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2274
  %258 = getelementptr inbounds %struct.cop* %257, i32 0, i32 14, !dbg !2274
  %259 = load %struct.sv** %258, align 8, !dbg !2274
  %260 = icmp ne %struct.sv* %259, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !2274
  br i1 %260, label %261, label %280, !dbg !2274

; <label>:261                                     ; preds = %256
  %262 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2276
  %263 = getelementptr inbounds %struct.cop* %262, i32 0, i32 14, !dbg !2276
  %264 = load %struct.sv** %263, align 8, !dbg !2276
  %265 = icmp eq %struct.sv* %264, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !2276
  br i1 %265, label %292, label %266, !dbg !2276

; <label>:266                                     ; preds = %261
  %267 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2278
  %268 = getelementptr inbounds %struct.cop* %267, i32 0, i32 14, !dbg !2278
  %269 = load %struct.sv** %268, align 8, !dbg !2278
  %270 = getelementptr inbounds %struct.sv* %269, i32 0, i32 0, !dbg !2278
  %271 = load i8** %270, align 8, !dbg !2278
  %272 = bitcast i8* %271 to %struct.xpv*, !dbg !2278
  %273 = getelementptr inbounds %struct.xpv* %272, i32 0, i32 0, !dbg !2278
  %274 = load i8** %273, align 8, !dbg !2278
  %275 = getelementptr inbounds i8* %274, i64 11, !dbg !2278
  %276 = load i8* %275, align 1, !dbg !2278
  %277 = sext i8 %276 to i32, !dbg !2278
  %278 = and i32 %277, 1, !dbg !2278
  %279 = icmp ne i32 %278, 0, !dbg !2278
  br i1 %279, label %292, label %280, !dbg !2278

; <label>:280                                     ; preds = %266, %256, %249
  %281 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !2280
  %282 = getelementptr inbounds %struct.cop* %281, i32 0, i32 14, !dbg !2280
  %283 = load %struct.sv** %282, align 8, !dbg !2280
  %284 = icmp eq %struct.sv* %283, null, !dbg !2280
  br i1 %284, label %285, label %290, !dbg !2280

; <label>:285                                     ; preds = %280
  %286 = load i8* @PL_dowarn, align 1, !dbg !2284
  %287 = zext i8 %286 to i32, !dbg !2284
  %288 = and i32 %287, 1, !dbg !2284
  %289 = icmp ne i32 %288, 0, !dbg !2284
  br label %290

; <label>:290                                     ; preds = %285, %280
  %291 = phi i1 [ false, %280 ], [ %289, %285 ]
  br label %292, !dbg !2286

; <label>:292                                     ; preds = %290, %266, %261
  %293 = phi i1 [ true, %266 ], [ true, %261 ], [ %291, %290 ]
  %294 = select i1 %293, i32 0, i32 255, !dbg !2288
  %295 = call i64 @Perl_utf8n_to_uvuni(i8* %s.1, i64 13, i64* %ulen, i32 %294), !dbg !2292
  %296 = icmp ne i64 %251, %295, !dbg !2271
  br i1 %296, label %297, label %298, !dbg !2293

; <label>:297                                     ; preds = %292
  br label %5029, !dbg !2294

; <label>:298                                     ; preds = %292
  %299 = load i64* %ulen, align 8, !dbg !2295
  %300 = getelementptr inbounds i8* %s.1, i64 %299, !dbg !2296
  call void @llvm.dbg.value(metadata i8* %300, i64 0, metadata !2054, metadata !566), !dbg !2055
  %301 = getelementptr inbounds i8* %l.1, i32 1, !dbg !2297
  call void @llvm.dbg.value(metadata i8* %301, i64 0, metadata !2215, metadata !566), !dbg !2217
  br label %243, !dbg !2262

; <label>:302                                     ; preds = %243
  br label %303

; <label>:303                                     ; preds = %302, %241
  %l.2 = phi i8* [ %l.0, %241 ], [ %l.1, %302 ]
  call void @llvm.dbg.value(metadata i8* %l.2, i64 0, metadata !2057, metadata !566), !dbg !2058
  %304 = load i8* %l.2, align 1, !dbg !2298
  %305 = zext i8 %304 to i32, !dbg !2298
  call void @llvm.dbg.value(metadata i32 %305, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2299

; <label>:306                                     ; preds = %163
  %307 = load i8* %166, align 1, !dbg !2300
  %308 = zext i8 %307 to i32, !dbg !2300
  %309 = icmp ne i32 %308, %nextchr.0, !dbg !2300
  br i1 %309, label %310, label %311, !dbg !2302

; <label>:310                                     ; preds = %306
  br label %5029, !dbg !2303

; <label>:311                                     ; preds = %306
  %312 = load i8** @PL_regeol, align 8, !dbg !2304
  %313 = ptrtoint i8* %312 to i64, !dbg !2304
  %314 = ptrtoint i8* %locinput.0 to i64, !dbg !2304
  %315 = sub i64 %313, %314, !dbg !2304
  %316 = sext i32 %170 to i64, !dbg !2306
  %317 = icmp slt i64 %315, %316, !dbg !2304
  br i1 %317, label %318, label %319, !dbg !2307

; <label>:318                                     ; preds = %311
  br label %5029, !dbg !2308

; <label>:319                                     ; preds = %311
  %320 = icmp sgt i32 %170, 1, !dbg !2309
  br i1 %320, label %321, label %326, !dbg !2311

; <label>:321                                     ; preds = %319
  %322 = sext i32 %170 to i64, !dbg !2312
  %323 = call i32 @memcmp(i8* %166, i8* %locinput.0, i64 %322), !dbg !2312
  %324 = icmp ne i32 %323, 0, !dbg !2311
  br i1 %324, label %325, label %326, !dbg !2311

; <label>:325                                     ; preds = %321
  br label %5029, !dbg !2314

; <label>:326                                     ; preds = %321, %319
  %327 = sext i32 %170 to i64, !dbg !2315
  %328 = getelementptr inbounds i8* %locinput.0, i64 %327, !dbg !2315
  call void @llvm.dbg.value(metadata i8* %328, i64 0, metadata !2057, metadata !566), !dbg !2058
  %329 = load i8* %328, align 1, !dbg !2316
  %330 = zext i8 %329 to i32, !dbg !2316
  call void @llvm.dbg.value(metadata i32 %330, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2317

; <label>:331                                     ; preds = %15
  %332 = load i32* @PL_reg_flags, align 4, !dbg !2318
  %333 = or i32 %332, 1, !dbg !2318
  store i32 %333, i32* @PL_reg_flags, align 4, !dbg !2318
  br label %334, !dbg !2318

; <label>:334                                     ; preds = %331, %15
  %335 = bitcast %struct.regnode* %scan.0 to %struct.regnode_string*, !dbg !2319
  %336 = getelementptr inbounds %struct.regnode_string* %335, i32 0, i32 3, !dbg !2319
  %337 = getelementptr inbounds [1 x i8]* %336, i32 0, i32 0, !dbg !2319
  call void @llvm.dbg.value(metadata i8* %337, i64 0, metadata !2054, metadata !566), !dbg !2055
  %338 = bitcast %struct.regnode* %scan.0 to %struct.regnode_string*, !dbg !2320
  %339 = getelementptr inbounds %struct.regnode_string* %338, i32 0, i32 0, !dbg !2320
  %340 = load i8* %339, align 1, !dbg !2320
  %341 = zext i8 %340 to i32, !dbg !2320
  call void @llvm.dbg.value(metadata i32 %341, i64 0, metadata !2052, metadata !566), !dbg !2053
  %342 = sext i8 %2 to i32, !dbg !2321
  %343 = icmp ne i32 %342, 0, !dbg !2323
  br i1 %343, label %348, label %344, !dbg !2323

; <label>:344                                     ; preds = %334
  %345 = load i32* @PL_reg_flags, align 4, !dbg !2324
  %346 = and i32 %345, 8, !dbg !2324
  %347 = icmp ne i32 %346, 0, !dbg !2324
  br i1 %347, label %348, label %429, !dbg !2323

; <label>:348                                     ; preds = %344, %334
  call void @llvm.dbg.value(metadata i8* %locinput.0, i64 0, metadata !2326, metadata !566), !dbg !2328
  call void @llvm.dbg.declare(metadata i8** %e2, metadata !2329, metadata !566), !dbg !2330
  %349 = load i8** @PL_regeol, align 8, !dbg !2331
  store i8* %349, i8** %e2, align 8, !dbg !2330
  %350 = sext i32 %341 to i64, !dbg !2332
  %351 = load i32* @PL_reg_flags, align 4, !dbg !2334
  %352 = and i32 %351, 8, !dbg !2334
  %353 = icmp ne i32 %352, 0, !dbg !2334
  %354 = zext i1 %353 to i32, !dbg !2334
  %355 = trunc i32 %354 to i8, !dbg !2335
  %356 = call i32 @Perl_ibcmp_utf8(i8* %337, i8** null, i64 %350, i8 signext %355, i8* %locinput.0, i8** %e2, i64 0, i8 signext %2), !dbg !2336
  %357 = icmp ne i32 %356, 0, !dbg !2337
  br i1 %357, label %358, label %425, !dbg !2337

; <label>:358                                     ; preds = %348
  %359 = sext i8 %2 to i32, !dbg !2338
  %360 = icmp ne i32 %359, 0, !dbg !2341
  br i1 %360, label %361, label %423, !dbg !2341

; <label>:361                                     ; preds = %358
  %362 = getelementptr inbounds i8* %337, i64 0, !dbg !2342
  %363 = load i8* %362, align 1, !dbg !2342
  %364 = sext i8 %363 to i32, !dbg !2342
  %365 = icmp sge i32 %364, 65, !dbg !2342
  br i1 %365, label %366, label %376, !dbg !2342

; <label>:366                                     ; preds = %361
  %367 = getelementptr inbounds i8* %337, i64 0, !dbg !2343
  %368 = load i8* %367, align 1, !dbg !2343
  %369 = sext i8 %368 to i32, !dbg !2343
  %370 = icmp sle i32 %369, 90, !dbg !2343
  br i1 %370, label %371, label %376, !dbg !2343

; <label>:371                                     ; preds = %366
  %372 = getelementptr inbounds i8* %337, i64 0, !dbg !2345
  %373 = load i8* %372, align 1, !dbg !2345
  %374 = sext i8 %373 to i32, !dbg !2345
  %375 = add nsw i32 %374, 32, !dbg !2345
  br label %380, !dbg !2345

; <label>:376                                     ; preds = %366, %361
  %377 = getelementptr inbounds i8* %337, i64 0, !dbg !2347
  %378 = load i8* %377, align 1, !dbg !2347
  %379 = sext i8 %378 to i32, !dbg !2347
  br label %380, !dbg !2347

; <label>:380                                     ; preds = %376, %371
  %381 = phi i32 [ %375, %371 ], [ %379, %376 ], !dbg !2342
  %382 = icmp eq i32 %381, 115, !dbg !2350
  br i1 %382, label %383, label %423, !dbg !2341

; <label>:383                                     ; preds = %380
  %384 = icmp sge i32 %341, 2, !dbg !2353
  br i1 %384, label %385, label %423, !dbg !2341

; <label>:385                                     ; preds = %383
  %386 = getelementptr inbounds i8* %337, i64 1, !dbg !2354
  %387 = load i8* %386, align 1, !dbg !2354
  %388 = sext i8 %387 to i32, !dbg !2354
  %389 = icmp sge i32 %388, 65, !dbg !2354
  br i1 %389, label %390, label %400, !dbg !2354

; <label>:390                                     ; preds = %385
  %391 = getelementptr inbounds i8* %337, i64 1, !dbg !2355
  %392 = load i8* %391, align 1, !dbg !2355
  %393 = sext i8 %392 to i32, !dbg !2355
  %394 = icmp sle i32 %393, 90, !dbg !2355
  br i1 %394, label %395, label %400, !dbg !2355

; <label>:395                                     ; preds = %390
  %396 = getelementptr inbounds i8* %337, i64 1, !dbg !2356
  %397 = load i8* %396, align 1, !dbg !2356
  %398 = sext i8 %397 to i32, !dbg !2356
  %399 = add nsw i32 %398, 32, !dbg !2356
  br label %404, !dbg !2356

; <label>:400                                     ; preds = %390, %385
  %401 = getelementptr inbounds i8* %337, i64 1, !dbg !2357
  %402 = load i8* %401, align 1, !dbg !2357
  %403 = sext i8 %402 to i32, !dbg !2357
  br label %404, !dbg !2357

; <label>:404                                     ; preds = %400, %395
  %405 = phi i32 [ %399, %395 ], [ %403, %400 ], !dbg !2354
  %406 = icmp eq i32 %405, 115, !dbg !2358
  br i1 %406, label %407, label %423, !dbg !2341

; <label>:407                                     ; preds = %404
  %408 = getelementptr inbounds i8* %locinput.0, i64 0, !dbg !2359
  %409 = load i8* %408, align 1, !dbg !2359
  %410 = zext i8 %409 to i32, !dbg !2360
  %411 = icmp eq i32 %410, 195, !dbg !2360
  br i1 %411, label %412, label %423, !dbg !2341

; <label>:412                                     ; preds = %407
  %413 = load i8** %e2, align 8, !dbg !2361
  %414 = ptrtoint i8* %413 to i64, !dbg !2361
  %415 = ptrtoint i8* %locinput.0 to i64, !dbg !2361
  %416 = sub i64 %414, %415, !dbg !2361
  %417 = icmp sge i64 %416, 2, !dbg !2361
  br i1 %417, label %418, label %423, !dbg !2341

; <label>:418                                     ; preds = %412
  %419 = getelementptr inbounds i8* %locinput.0, i64 1, !dbg !2362
  %420 = load i8* %419, align 1, !dbg !2362
  %421 = zext i8 %420 to i32, !dbg !2363
  %422 = icmp eq i32 %421, 159, !dbg !2363
  br i1 %422, label %424, label %423, !dbg !2341

; <label>:423                                     ; preds = %418, %412, %407, %404, %383, %380, %358
  br label %5029, !dbg !2364

; <label>:424                                     ; preds = %418
  br label %425, !dbg !2365

; <label>:425                                     ; preds = %424, %348
  %426 = load i8** %e2, align 8, !dbg !2366
  call void @llvm.dbg.value(metadata i8* %426, i64 0, metadata !2057, metadata !566), !dbg !2058
  %427 = load i8* %426, align 1, !dbg !2367
  %428 = zext i8 %427 to i32, !dbg !2367
  call void @llvm.dbg.value(metadata i32 %428, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2368

; <label>:429                                     ; preds = %344
  %430 = load i8* %337, align 1, !dbg !2369
  %431 = zext i8 %430 to i32, !dbg !2369
  %432 = icmp ne i32 %431, %nextchr.0, !dbg !2369
  br i1 %432, label %433, label %447, !dbg !2371

; <label>:433                                     ; preds = %429
  %434 = load i8* %337, align 1, !dbg !2372
  %435 = zext i8 %434 to i32, !dbg !2372
  %436 = sext i32 %nextchr.0 to i64, !dbg !2373
  %437 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2374
  %438 = load i8* %437, align 1, !dbg !2374
  %439 = zext i8 %438 to i32, !dbg !2374
  %440 = icmp eq i32 %439, 34, !dbg !2374
  %441 = select i1 %440, i8* getelementptr inbounds ([0 x i8]* @PL_fold, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8]* @PL_fold_locale, i32 0, i32 0), !dbg !2375
  %442 = getelementptr inbounds i8* %441, i64 %436, !dbg !2373
  %443 = load i8* %442, align 1, !dbg !2373
  %444 = zext i8 %443 to i32, !dbg !2373
  %445 = icmp ne i32 %435, %444, !dbg !2372
  br i1 %445, label %446, label %447, !dbg !2371

; <label>:446                                     ; preds = %433
  br label %5029, !dbg !2376

; <label>:447                                     ; preds = %433, %429
  %448 = load i8** @PL_regeol, align 8, !dbg !2377
  %449 = ptrtoint i8* %448 to i64, !dbg !2377
  %450 = ptrtoint i8* %locinput.0 to i64, !dbg !2377
  %451 = sub i64 %449, %450, !dbg !2377
  %452 = sext i32 %341 to i64, !dbg !2379
  %453 = icmp slt i64 %451, %452, !dbg !2377
  br i1 %453, label %454, label %455, !dbg !2380

; <label>:454                                     ; preds = %447
  br label %5029, !dbg !2381

; <label>:455                                     ; preds = %447
  %456 = icmp sgt i32 %341, 1, !dbg !2382
  br i1 %456, label %457, label %469, !dbg !2384

; <label>:457                                     ; preds = %455
  %458 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2385
  %459 = load i8* %458, align 1, !dbg !2385
  %460 = zext i8 %459 to i32, !dbg !2385
  %461 = icmp eq i32 %460, 34, !dbg !2385
  br i1 %461, label %462, label %465, !dbg !2384

; <label>:462                                     ; preds = %457
  %463 = call i32 @Perl_ibcmp(i8* %337, i8* %locinput.0, i32 %341), !dbg !2387
  %464 = icmp ne i32 %463, 0, !dbg !2384
  br i1 %464, label %468, label %469, !dbg !2384

; <label>:465                                     ; preds = %457
  %466 = call i32 @Perl_ibcmp_locale(i8* %337, i8* %locinput.0, i32 %341), !dbg !2388
  %467 = icmp ne i32 %466, 0, !dbg !2384
  br i1 %467, label %468, label %469, !dbg !2384

; <label>:468                                     ; preds = %465, %462
  br label %5029, !dbg !2389

; <label>:469                                     ; preds = %465, %462, %455
  %470 = sext i32 %341 to i64, !dbg !2390
  %471 = getelementptr inbounds i8* %locinput.0, i64 %470, !dbg !2390
  call void @llvm.dbg.value(metadata i8* %471, i64 0, metadata !2057, metadata !566), !dbg !2058
  %472 = load i8* %471, align 1, !dbg !2391
  %473 = zext i8 %472 to i32, !dbg !2391
  call void @llvm.dbg.value(metadata i32 %473, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2392

; <label>:474                                     ; preds = %15
  %475 = icmp ne i8 %2, 0, !dbg !2393
  br i1 %475, label %476, label %505, !dbg !2393

; <label>:476                                     ; preds = %474
  call void @llvm.dbg.declare(metadata i64* %inclasslen, metadata !2394, metadata !566), !dbg !2397
  %477 = load i8** @PL_regeol, align 8, !dbg !2398
  %478 = ptrtoint i8* %477 to i64, !dbg !2398
  %479 = ptrtoint i8* %locinput.0 to i64, !dbg !2398
  %480 = sub i64 %478, %479, !dbg !2398
  store i64 %480, i64* %inclasslen, align 8, !dbg !2397
  %481 = sext i8 %2 to i32, !dbg !2399
  %482 = call i32 (%struct.regnode*, i8*, i64*, i32, ...)* bitcast (i32 (...)* @reginclass to i32 (%struct.regnode*, i8*, i64*, i32, ...)*)(%struct.regnode* %scan.0, i8* %locinput.0, i64* %inclasslen, i32 %481), !dbg !2401
  %483 = icmp ne i32 %482, 0, !dbg !2402
  br i1 %483, label %485, label %484, !dbg !2402

; <label>:484                                     ; preds = %476
  br label %546, !dbg !2403

; <label>:485                                     ; preds = %476
  %486 = load i8** @PL_regeol, align 8, !dbg !2404
  %487 = icmp uge i8* %locinput.0, %486, !dbg !2406
  br i1 %487, label %488, label %489, !dbg !2407

; <label>:488                                     ; preds = %485
  br label %5029, !dbg !2408

; <label>:489                                     ; preds = %485
  %490 = load i64* %inclasslen, align 8, !dbg !2409
  %491 = icmp ne i64 %490, 0, !dbg !2409
  br i1 %491, label %492, label %494, !dbg !2409

; <label>:492                                     ; preds = %489
  %493 = load i64* %inclasslen, align 8, !dbg !2410
  br label %500, !dbg !2409

; <label>:494                                     ; preds = %489
  %495 = load i8* %locinput.0, align 1, !dbg !2412
  %496 = zext i8 %495 to i64, !dbg !2412
  %497 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %496, !dbg !2412
  %498 = load i8* %497, align 1, !dbg !2412
  %499 = zext i8 %498 to i64, !dbg !2412
  br label %500, !dbg !2409

; <label>:500                                     ; preds = %494, %492
  %501 = phi i64 [ %493, %492 ], [ %499, %494 ], !dbg !2409
  %502 = getelementptr inbounds i8* %locinput.0, i64 %501, !dbg !2414
  call void @llvm.dbg.value(metadata i8* %502, i64 0, metadata !2057, metadata !566), !dbg !2058
  %503 = load i8* %502, align 1, !dbg !2417
  %504 = zext i8 %503 to i32, !dbg !2417
  call void @llvm.dbg.value(metadata i32 %504, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2418

; <label>:505                                     ; preds = %474
  %506 = icmp slt i32 %nextchr.0, 0, !dbg !2419
  br i1 %506, label %507, label %510, !dbg !2422

; <label>:507                                     ; preds = %505
  %508 = load i8* %locinput.0, align 1, !dbg !2423
  %509 = zext i8 %508 to i32, !dbg !2423
  call void @llvm.dbg.value(metadata i32 %509, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %510, !dbg !2424

; <label>:510                                     ; preds = %507, %505
  %nextchr.3 = phi i32 [ %509, %507 ], [ %nextchr.0, %505 ]
  %511 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !2425
  %512 = load i8* %511, align 1, !dbg !2425
  %513 = zext i8 %512 to i32, !dbg !2425
  %514 = icmp ne i32 %513, 0, !dbg !2427
  br i1 %514, label %515, label %518, !dbg !2427

; <label>:515                                     ; preds = %510
  %516 = call i32 (%struct.regnode*, i8*, i32, i32, ...)* bitcast (i32 (...)* @reginclass to i32 (%struct.regnode*, i8*, i32, i32, ...)*)(%struct.regnode* %scan.0, i8* %locinput.0, i32 0, i32 0), !dbg !2428
  %517 = icmp ne i32 %516, 0, !dbg !2427
  br i1 %517, label %536, label %535, !dbg !2427

; <label>:518                                     ; preds = %510
  %519 = load i8* %locinput.0, align 1, !dbg !2430
  %520 = zext i8 %519 to i32, !dbg !2430
  %521 = ashr i32 %520, 3, !dbg !2430
  %522 = and i32 %521, 31, !dbg !2430
  %523 = sext i32 %522 to i64, !dbg !2430
  %524 = bitcast %struct.regnode* %scan.0 to %struct.regnode_charclass*, !dbg !2430
  %525 = getelementptr inbounds %struct.regnode_charclass* %524, i32 0, i32 4, !dbg !2430
  %526 = getelementptr inbounds [32 x i8]* %525, i32 0, i64 %523, !dbg !2430
  %527 = load i8* %526, align 1, !dbg !2430
  %528 = sext i8 %527 to i32, !dbg !2430
  %529 = load i8* %locinput.0, align 1, !dbg !2430
  %530 = zext i8 %529 to i32, !dbg !2430
  %531 = and i32 %530, 7, !dbg !2430
  %532 = shl i32 1, %531, !dbg !2430
  %533 = and i32 %528, %532, !dbg !2430
  %534 = icmp ne i32 %533, 0, !dbg !2427
  br i1 %534, label %536, label %535, !dbg !2427

; <label>:535                                     ; preds = %518, %515
  br label %546, !dbg !2432

; <label>:536                                     ; preds = %518, %515
  %537 = icmp ne i32 %nextchr.3, 0, !dbg !2433
  br i1 %537, label %542, label %538, !dbg !2433

; <label>:538                                     ; preds = %536
  %539 = load i8** @PL_regeol, align 8, !dbg !2434
  %540 = icmp uge i8* %locinput.0, %539, !dbg !2436
  br i1 %540, label %541, label %542, !dbg !2433

; <label>:541                                     ; preds = %538
  br label %5029, !dbg !2437

; <label>:542                                     ; preds = %538, %536
  %543 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2438
  call void @llvm.dbg.value(metadata i8* %543, i64 0, metadata !2057, metadata !566), !dbg !2058
  %544 = load i8* %543, align 1, !dbg !2438
  %545 = zext i8 %544 to i32, !dbg !2438
  call void @llvm.dbg.value(metadata i32 %545, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2439

; <label>:546                                     ; preds = %535, %484
  %547 = bitcast %struct.regnode* %scan.0 to %struct.regnode_charclass*, !dbg !2440
  %548 = getelementptr inbounds %struct.regnode_charclass* %547, i32 0, i32 4, !dbg !2440
  %549 = getelementptr inbounds [32 x i8]* %548, i32 0, i64 27, !dbg !2440
  %550 = load i8* %549, align 1, !dbg !2440
  %551 = sext i8 %550 to i32, !dbg !2440
  %552 = and i32 %551, 128, !dbg !2440
  %553 = icmp ne i32 %552, 0, !dbg !2442
  br i1 %553, label %554, label %618, !dbg !2442

; <label>:554                                     ; preds = %546
  %555 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !2443
  %556 = load i8* %555, align 1, !dbg !2443
  %557 = zext i8 %556 to i32, !dbg !2443
  %558 = and i32 %557, 32, !dbg !2443
  %559 = icmp ne i32 %558, 0, !dbg !2442
  br i1 %559, label %560, label %618, !dbg !2442

; <label>:560                                     ; preds = %554
  %561 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !2445
  %562 = load i8* %561, align 1, !dbg !2445
  %563 = zext i8 %562 to i32, !dbg !2445
  %564 = and i32 %563, 2, !dbg !2445
  %565 = icmp ne i32 %564, 0, !dbg !2442
  br i1 %565, label %566, label %618, !dbg !2442

; <label>:566                                     ; preds = %560
  %567 = load i8** @PL_regeol, align 8, !dbg !2447
  %568 = getelementptr inbounds i8* %locinput.0, i64 1, !dbg !2447
  %569 = icmp ugt i8* %567, %568, !dbg !2447
  br i1 %569, label %570, label %618, !dbg !2442

; <label>:570                                     ; preds = %566
  %571 = getelementptr inbounds i8* %locinput.0, i64 0, !dbg !2449
  %572 = load i8* %571, align 1, !dbg !2449
  %573 = sext i8 %572 to i32, !dbg !2449
  %574 = icmp sge i32 %573, 65, !dbg !2449
  br i1 %574, label %575, label %585, !dbg !2449

; <label>:575                                     ; preds = %570
  %576 = getelementptr inbounds i8* %locinput.0, i64 0, !dbg !2451
  %577 = load i8* %576, align 1, !dbg !2451
  %578 = sext i8 %577 to i32, !dbg !2451
  %579 = icmp sle i32 %578, 90, !dbg !2451
  br i1 %579, label %580, label %585, !dbg !2451

; <label>:580                                     ; preds = %575
  %581 = getelementptr inbounds i8* %locinput.0, i64 0, !dbg !2453
  %582 = load i8* %581, align 1, !dbg !2453
  %583 = sext i8 %582 to i32, !dbg !2453
  %584 = add nsw i32 %583, 32, !dbg !2453
  br label %589, !dbg !2453

; <label>:585                                     ; preds = %575, %570
  %586 = getelementptr inbounds i8* %locinput.0, i64 0, !dbg !2455
  %587 = load i8* %586, align 1, !dbg !2455
  %588 = sext i8 %587 to i32, !dbg !2455
  br label %589, !dbg !2455

; <label>:589                                     ; preds = %585, %580
  %590 = phi i32 [ %584, %580 ], [ %588, %585 ], !dbg !2440
  %591 = icmp eq i32 %590, 115, !dbg !2458
  br i1 %591, label %592, label %618, !dbg !2442

; <label>:592                                     ; preds = %589
  %593 = getelementptr inbounds i8* %locinput.0, i64 1, !dbg !2461
  %594 = load i8* %593, align 1, !dbg !2461
  %595 = sext i8 %594 to i32, !dbg !2461
  %596 = icmp sge i32 %595, 65, !dbg !2461
  br i1 %596, label %597, label %607, !dbg !2461

; <label>:597                                     ; preds = %592
  %598 = getelementptr inbounds i8* %locinput.0, i64 1, !dbg !2463
  %599 = load i8* %598, align 1, !dbg !2463
  %600 = sext i8 %599 to i32, !dbg !2463
  %601 = icmp sle i32 %600, 90, !dbg !2463
  br i1 %601, label %602, label %607, !dbg !2463

; <label>:602                                     ; preds = %597
  %603 = getelementptr inbounds i8* %locinput.0, i64 1, !dbg !2465
  %604 = load i8* %603, align 1, !dbg !2465
  %605 = sext i8 %604 to i32, !dbg !2465
  %606 = add nsw i32 %605, 32, !dbg !2465
  br label %611, !dbg !2465

; <label>:607                                     ; preds = %597, %592
  %608 = getelementptr inbounds i8* %locinput.0, i64 1, !dbg !2467
  %609 = load i8* %608, align 1, !dbg !2467
  %610 = sext i8 %609 to i32, !dbg !2467
  br label %611, !dbg !2467

; <label>:611                                     ; preds = %607, %602
  %612 = phi i32 [ %606, %602 ], [ %610, %607 ], !dbg !2440
  %613 = icmp eq i32 %612, 115, !dbg !2470
  br i1 %613, label %614, label %618, !dbg !2442

; <label>:614                                     ; preds = %611
  %615 = getelementptr inbounds i8* %locinput.0, i64 2, !dbg !2473
  call void @llvm.dbg.value(metadata i8* %615, i64 0, metadata !2057, metadata !566), !dbg !2058
  %616 = load i8* %615, align 1, !dbg !2475
  %617 = zext i8 %616 to i32, !dbg !2475
  call void @llvm.dbg.value(metadata i32 %617, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %619, !dbg !2476

; <label>:618                                     ; preds = %611, %589, %566, %560, %554, %546
  br label %5029, !dbg !2477

; <label>:619                                     ; preds = %614
  br label %5023, !dbg !2478

; <label>:620                                     ; preds = %15
  %621 = load i32* @PL_reg_flags, align 4, !dbg !2479
  %622 = or i32 %621, 1, !dbg !2479
  store i32 %622, i32* @PL_reg_flags, align 4, !dbg !2479
  br label %623, !dbg !2479

; <label>:623                                     ; preds = %620, %15
  %624 = icmp ne i32 %nextchr.0, 0, !dbg !2480
  br i1 %624, label %626, label %625, !dbg !2480

; <label>:625                                     ; preds = %623
  br label %5029, !dbg !2481

; <label>:626                                     ; preds = %623
  %627 = icmp ne i8 %2, 0, !dbg !2483
  br i1 %627, label %628, label %686, !dbg !2483

; <label>:628                                     ; preds = %626
  %629 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !2484
  %630 = icmp ne %struct.sv* %629, null, !dbg !2489
  br i1 %630, label %633, label %631, !dbg !2489

; <label>:631                                     ; preds = %628
  call void @Perl_push_scope(), !dbg !2490
  call void @Perl_save_re_context(), !dbg !2490
  %632 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8]* @.str2, i32 0, i32 0)), !dbg !2490
  call void @Perl_pop_scope(), !dbg !2490
  br label %633, !dbg !2490

; <label>:633                                     ; preds = %631, %628
  %634 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2493
  %635 = load i8* %634, align 1, !dbg !2493
  %636 = zext i8 %635 to i32, !dbg !2493
  %637 = icmp eq i32 %636, 18, !dbg !2493
  br i1 %637, label %638, label %642, !dbg !2495

; <label>:638                                     ; preds = %633
  %639 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !2496
  %640 = call i64 @Perl_swash_fetch(%struct.sv* %639, i8* %locinput.0, i8 signext %2), !dbg !2497
  %641 = icmp ne i64 %640, 0, !dbg !2495
  br i1 %641, label %677, label %676, !dbg !2495

; <label>:642                                     ; preds = %633
  %643 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2498
  %644 = icmp ult i64 %643, 256, !dbg !2498
  br i1 %644, label %645, label %668, !dbg !2498

; <label>:645                                     ; preds = %642
  %646 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2499
  %647 = and i64 %646, -128, !dbg !2499
  %648 = icmp eq i64 %647, 0, !dbg !2499
  br i1 %648, label %649, label %665, !dbg !2499

; <label>:649                                     ; preds = %645
  %650 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2501
  %651 = trunc i64 %650 to i32, !dbg !2501
  %652 = sext i32 %651 to i64, !dbg !2501
  %653 = call i16** @__ctype_b_loc(), !dbg !2501
  %654 = load i16** %653, align 8, !dbg !2501
  %655 = getelementptr inbounds i16* %654, i64 %652, !dbg !2501
  %656 = load i16* %655, align 2, !dbg !2501
  %657 = zext i16 %656 to i32, !dbg !2501
  %658 = and i32 %657, 8, !dbg !2501
  %659 = icmp ne i32 %658, 0, !dbg !2501
  br i1 %659, label %663, label %660, !dbg !2501

; <label>:660                                     ; preds = %649
  %661 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2503
  %662 = icmp eq i64 %661, 95, !dbg !2503
  br label %663, !dbg !2503

; <label>:663                                     ; preds = %660, %649
  %664 = phi i1 [ true, %649 ], [ %662, %660 ]
  br label %665

; <label>:665                                     ; preds = %663, %645
  %666 = phi i1 [ false, %645 ], [ %664, %663 ]
  %667 = zext i1 %666 to i32, !dbg !2505
  br label %672, !dbg !2505

; <label>:668                                     ; preds = %642
  %669 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2507
  %670 = call signext i8 @Perl_is_uni_alnum_lc(i64 %669), !dbg !2507
  %671 = sext i8 %670 to i32, !dbg !2507
  br label %672, !dbg !2507

; <label>:672                                     ; preds = %668, %665
  %673 = phi i32 [ %667, %665 ], [ %671, %668 ], !dbg !2498
  %674 = sext i32 %673 to i64, !dbg !2509
  %675 = icmp ne i64 %674, 0, !dbg !2495
  br i1 %675, label %677, label %676, !dbg !2495

; <label>:676                                     ; preds = %672, %638
  br label %5029, !dbg !2512

; <label>:677                                     ; preds = %672, %638
  %678 = sext i32 %nextchr.0 to i64, !dbg !2514
  %679 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %678, !dbg !2514
  %680 = load i8* %679, align 1, !dbg !2514
  %681 = zext i8 %680 to i32, !dbg !2514
  %682 = sext i32 %681 to i64, !dbg !2515
  %683 = getelementptr inbounds i8* %locinput.0, i64 %682, !dbg !2515
  call void @llvm.dbg.value(metadata i8* %683, i64 0, metadata !2057, metadata !566), !dbg !2058
  %684 = load i8* %683, align 1, !dbg !2516
  %685 = zext i8 %684 to i32, !dbg !2516
  call void @llvm.dbg.value(metadata i32 %685, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2517

; <label>:686                                     ; preds = %626
  %687 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2518
  %688 = load i8* %687, align 1, !dbg !2518
  %689 = zext i8 %688 to i32, !dbg !2518
  %690 = icmp eq i32 %689, 18, !dbg !2518
  br i1 %690, label %691, label %705, !dbg !2520

; <label>:691                                     ; preds = %686
  %692 = icmp sge i32 %nextchr.0, 65, !dbg !2521
  br i1 %692, label %693, label %695, !dbg !2520

; <label>:693                                     ; preds = %691
  %694 = icmp sle i32 %nextchr.0, 90, !dbg !2521
  br i1 %694, label %720, label %695, !dbg !2520

; <label>:695                                     ; preds = %693, %691
  %696 = icmp sge i32 %nextchr.0, 97, !dbg !2521
  br i1 %696, label %697, label %699, !dbg !2520

; <label>:697                                     ; preds = %695
  %698 = icmp sle i32 %nextchr.0, 122, !dbg !2521
  br i1 %698, label %720, label %699, !dbg !2520

; <label>:699                                     ; preds = %697, %695
  %700 = icmp sge i32 %nextchr.0, 48, !dbg !2521
  br i1 %700, label %701, label %703, !dbg !2520

; <label>:701                                     ; preds = %699
  %702 = icmp sle i32 %nextchr.0, 57, !dbg !2521
  br i1 %702, label %720, label %703, !dbg !2520

; <label>:703                                     ; preds = %701, %699
  %704 = icmp eq i32 %nextchr.0, 95, !dbg !2521
  br i1 %704, label %720, label %719, !dbg !2520

; <label>:705                                     ; preds = %686
  %706 = and i32 %nextchr.0, -128, !dbg !2522
  %707 = icmp eq i32 %706, 0, !dbg !2522
  br i1 %707, label %708, label %719, !dbg !2520

; <label>:708                                     ; preds = %705
  %709 = sext i32 %nextchr.0 to i64, !dbg !2522
  %710 = call i16** @__ctype_b_loc(), !dbg !2522
  %711 = load i16** %710, align 8, !dbg !2522
  %712 = getelementptr inbounds i16* %711, i64 %709, !dbg !2522
  %713 = load i16* %712, align 2, !dbg !2522
  %714 = zext i16 %713 to i32, !dbg !2522
  %715 = and i32 %714, 8, !dbg !2522
  %716 = icmp ne i32 %715, 0, !dbg !2520
  br i1 %716, label %720, label %717, !dbg !2520

; <label>:717                                     ; preds = %708
  %718 = icmp eq i32 %nextchr.0, 95, !dbg !2522
  br i1 %718, label %720, label %719, !dbg !2520

; <label>:719                                     ; preds = %717, %705, %703
  br label %5029, !dbg !2523

; <label>:720                                     ; preds = %717, %708, %703, %701, %697, %693
  %721 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2524
  call void @llvm.dbg.value(metadata i8* %721, i64 0, metadata !2057, metadata !566), !dbg !2058
  %722 = load i8* %721, align 1, !dbg !2524
  %723 = zext i8 %722 to i32, !dbg !2524
  call void @llvm.dbg.value(metadata i32 %723, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2525

; <label>:724                                     ; preds = %15
  %725 = load i32* @PL_reg_flags, align 4, !dbg !2526
  %726 = or i32 %725, 1, !dbg !2526
  store i32 %726, i32* @PL_reg_flags, align 4, !dbg !2526
  br label %727, !dbg !2526

; <label>:727                                     ; preds = %724, %15
  %728 = icmp ne i32 %nextchr.0, 0, !dbg !2527
  br i1 %728, label %733, label %729, !dbg !2527

; <label>:729                                     ; preds = %727
  %730 = load i8** @PL_regeol, align 8, !dbg !2528
  %731 = icmp uge i8* %locinput.0, %730, !dbg !2530
  br i1 %731, label %732, label %733, !dbg !2527

; <label>:732                                     ; preds = %729
  br label %5029, !dbg !2531

; <label>:733                                     ; preds = %729, %727
  %734 = icmp ne i8 %2, 0, !dbg !2532
  br i1 %734, label %735, label %793, !dbg !2532

; <label>:735                                     ; preds = %733
  %736 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !2533
  %737 = icmp ne %struct.sv* %736, null, !dbg !2538
  br i1 %737, label %740, label %738, !dbg !2538

; <label>:738                                     ; preds = %735
  call void @Perl_push_scope(), !dbg !2539
  call void @Perl_save_re_context(), !dbg !2539
  %739 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8]* @.str2, i32 0, i32 0)), !dbg !2539
  call void @Perl_pop_scope(), !dbg !2539
  br label %740, !dbg !2539

; <label>:740                                     ; preds = %738, %735
  %741 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2542
  %742 = load i8* %741, align 1, !dbg !2542
  %743 = zext i8 %742 to i32, !dbg !2542
  %744 = icmp eq i32 %743, 20, !dbg !2542
  br i1 %744, label %745, label %749, !dbg !2544

; <label>:745                                     ; preds = %740
  %746 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !2545
  %747 = call i64 @Perl_swash_fetch(%struct.sv* %746, i8* %locinput.0, i8 signext %2), !dbg !2546
  %748 = icmp ne i64 %747, 0, !dbg !2544
  br i1 %748, label %783, label %784, !dbg !2544

; <label>:749                                     ; preds = %740
  %750 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2547
  %751 = icmp ult i64 %750, 256, !dbg !2547
  br i1 %751, label %752, label %775, !dbg !2547

; <label>:752                                     ; preds = %749
  %753 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2548
  %754 = and i64 %753, -128, !dbg !2548
  %755 = icmp eq i64 %754, 0, !dbg !2548
  br i1 %755, label %756, label %772, !dbg !2548

; <label>:756                                     ; preds = %752
  %757 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2550
  %758 = trunc i64 %757 to i32, !dbg !2550
  %759 = sext i32 %758 to i64, !dbg !2550
  %760 = call i16** @__ctype_b_loc(), !dbg !2550
  %761 = load i16** %760, align 8, !dbg !2550
  %762 = getelementptr inbounds i16* %761, i64 %759, !dbg !2550
  %763 = load i16* %762, align 2, !dbg !2550
  %764 = zext i16 %763 to i32, !dbg !2550
  %765 = and i32 %764, 8, !dbg !2550
  %766 = icmp ne i32 %765, 0, !dbg !2550
  br i1 %766, label %770, label %767, !dbg !2550

; <label>:767                                     ; preds = %756
  %768 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2552
  %769 = icmp eq i64 %768, 95, !dbg !2552
  br label %770, !dbg !2552

; <label>:770                                     ; preds = %767, %756
  %771 = phi i1 [ true, %756 ], [ %769, %767 ]
  br label %772

; <label>:772                                     ; preds = %770, %752
  %773 = phi i1 [ false, %752 ], [ %771, %770 ]
  %774 = zext i1 %773 to i32, !dbg !2554
  br label %779, !dbg !2554

; <label>:775                                     ; preds = %749
  %776 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2556
  %777 = call signext i8 @Perl_is_uni_alnum_lc(i64 %776), !dbg !2556
  %778 = sext i8 %777 to i32, !dbg !2556
  br label %779, !dbg !2556

; <label>:779                                     ; preds = %775, %772
  %780 = phi i32 [ %774, %772 ], [ %778, %775 ], !dbg !2547
  %781 = sext i32 %780 to i64, !dbg !2558
  %782 = icmp ne i64 %781, 0, !dbg !2544
  br i1 %782, label %783, label %784, !dbg !2544

; <label>:783                                     ; preds = %779, %745
  br label %5029, !dbg !2561

; <label>:784                                     ; preds = %779, %745
  %785 = sext i32 %nextchr.0 to i64, !dbg !2563
  %786 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %785, !dbg !2563
  %787 = load i8* %786, align 1, !dbg !2563
  %788 = zext i8 %787 to i32, !dbg !2563
  %789 = sext i32 %788 to i64, !dbg !2564
  %790 = getelementptr inbounds i8* %locinput.0, i64 %789, !dbg !2564
  call void @llvm.dbg.value(metadata i8* %790, i64 0, metadata !2057, metadata !566), !dbg !2058
  %791 = load i8* %790, align 1, !dbg !2565
  %792 = zext i8 %791 to i32, !dbg !2565
  call void @llvm.dbg.value(metadata i32 %792, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2566

; <label>:793                                     ; preds = %733
  %794 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2567
  %795 = load i8* %794, align 1, !dbg !2567
  %796 = zext i8 %795 to i32, !dbg !2567
  %797 = icmp eq i32 %796, 20, !dbg !2567
  br i1 %797, label %798, label %812, !dbg !2569

; <label>:798                                     ; preds = %793
  %799 = icmp sge i32 %nextchr.0, 65, !dbg !2570
  br i1 %799, label %800, label %802, !dbg !2569

; <label>:800                                     ; preds = %798
  %801 = icmp sle i32 %nextchr.0, 90, !dbg !2570
  br i1 %801, label %826, label %802, !dbg !2569

; <label>:802                                     ; preds = %800, %798
  %803 = icmp sge i32 %nextchr.0, 97, !dbg !2570
  br i1 %803, label %804, label %806, !dbg !2569

; <label>:804                                     ; preds = %802
  %805 = icmp sle i32 %nextchr.0, 122, !dbg !2570
  br i1 %805, label %826, label %806, !dbg !2569

; <label>:806                                     ; preds = %804, %802
  %807 = icmp sge i32 %nextchr.0, 48, !dbg !2570
  br i1 %807, label %808, label %810, !dbg !2569

; <label>:808                                     ; preds = %806
  %809 = icmp sle i32 %nextchr.0, 57, !dbg !2570
  br i1 %809, label %826, label %810, !dbg !2569

; <label>:810                                     ; preds = %808, %806
  %811 = icmp eq i32 %nextchr.0, 95, !dbg !2570
  br i1 %811, label %826, label %827, !dbg !2569

; <label>:812                                     ; preds = %793
  %813 = and i32 %nextchr.0, -128, !dbg !2571
  %814 = icmp eq i32 %813, 0, !dbg !2571
  br i1 %814, label %815, label %827, !dbg !2569

; <label>:815                                     ; preds = %812
  %816 = sext i32 %nextchr.0 to i64, !dbg !2571
  %817 = call i16** @__ctype_b_loc(), !dbg !2571
  %818 = load i16** %817, align 8, !dbg !2571
  %819 = getelementptr inbounds i16* %818, i64 %816, !dbg !2571
  %820 = load i16* %819, align 2, !dbg !2571
  %821 = zext i16 %820 to i32, !dbg !2571
  %822 = and i32 %821, 8, !dbg !2571
  %823 = icmp ne i32 %822, 0, !dbg !2569
  br i1 %823, label %826, label %824, !dbg !2569

; <label>:824                                     ; preds = %815
  %825 = icmp eq i32 %nextchr.0, 95, !dbg !2571
  br i1 %825, label %826, label %827, !dbg !2569

; <label>:826                                     ; preds = %824, %815, %810, %808, %804, %800
  br label %5029, !dbg !2572

; <label>:827                                     ; preds = %824, %812, %810
  %828 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2573
  call void @llvm.dbg.value(metadata i8* %828, i64 0, metadata !2057, metadata !566), !dbg !2058
  %829 = load i8* %828, align 1, !dbg !2573
  %830 = zext i8 %829 to i32, !dbg !2573
  call void @llvm.dbg.value(metadata i32 %830, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2574

; <label>:831                                     ; preds = %15, %15
  %832 = load i32* @PL_reg_flags, align 4, !dbg !2575
  %833 = or i32 %832, 1, !dbg !2575
  store i32 %833, i32* @PL_reg_flags, align 4, !dbg !2575
  br label %834, !dbg !2575

; <label>:834                                     ; preds = %831, %15, %15
  %835 = icmp ne i8 %2, 0, !dbg !2576
  br i1 %835, label %836, label %933, !dbg !2576

; <label>:836                                     ; preds = %834
  %837 = load i8** @PL_bostr, align 8, !dbg !2577
  %838 = icmp eq i8* %locinput.0, %837, !dbg !2581
  br i1 %838, label %839, label %840, !dbg !2582

; <label>:839                                     ; preds = %836
  call void @llvm.dbg.value(metadata i32 10, i64 0, metadata !2052, metadata !566), !dbg !2053
  br label %852, !dbg !2583

; <label>:840                                     ; preds = %836
  %841 = load i8** @PL_bostr, align 8, !dbg !2584
  %842 = call i32 (i8*, i32, i8*, ...)* bitcast (i32 (...)* @reghop3 to i32 (i8*, i32, i8*, ...)*)(i8* %locinput.0, i32 -1, i8* %841), !dbg !2586
  %843 = sext i32 %842 to i64, !dbg !2586
  %844 = inttoptr i64 %843 to i8*, !dbg !2586
  call void @llvm.dbg.value(metadata i8* %844, i64 0, metadata !2587, metadata !566), !dbg !2588
  %845 = load i8* %844, align 1, !dbg !2589
  %846 = zext i8 %845 to i64, !dbg !2589
  %847 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %846, !dbg !2589
  %848 = load i8* %847, align 1, !dbg !2589
  %849 = zext i8 %848 to i64, !dbg !2589
  %850 = call i64 @Perl_utf8n_to_uvuni(i8* %844, i64 %849, i64* null, i32 0), !dbg !2590
  %851 = trunc i64 %850 to i32, !dbg !2590
  call void @llvm.dbg.value(metadata i32 %851, i64 0, metadata !2052, metadata !566), !dbg !2053
  br label %852

; <label>:852                                     ; preds = %840, %839
  %ln.1 = phi i32 [ 10, %839 ], [ %851, %840 ]
  %853 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2591
  %854 = load i8* %853, align 1, !dbg !2591
  %855 = zext i8 %854 to i32, !dbg !2591
  %856 = icmp eq i32 %855, 9, !dbg !2591
  br i1 %856, label %862, label %857, !dbg !2593

; <label>:857                                     ; preds = %852
  %858 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2594
  %859 = load i8* %858, align 1, !dbg !2594
  %860 = zext i8 %859 to i32, !dbg !2594
  %861 = icmp eq i32 %860, 11, !dbg !2594
  br i1 %861, label %862, label %874, !dbg !2593

; <label>:862                                     ; preds = %857, %852
  %863 = sext i32 %ln.1 to i64, !dbg !2596
  %864 = call signext i8 @Perl_is_uni_alnum(i64 %863), !dbg !2596
  %865 = sext i8 %864 to i32, !dbg !2596
  call void @llvm.dbg.value(metadata i32 %865, i64 0, metadata !2052, metadata !566), !dbg !2053
  %866 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !2598
  %867 = icmp ne %struct.sv* %866, null, !dbg !2601
  br i1 %867, label %870, label %868, !dbg !2601

; <label>:868                                     ; preds = %862
  call void @Perl_push_scope(), !dbg !2602
  call void @Perl_save_re_context(), !dbg !2602
  %869 = call signext i8 @Perl_is_utf8_alnum(i8* getelementptr inbounds ([2 x i8]* @.str2, i32 0, i32 0)), !dbg !2602
  call void @Perl_pop_scope(), !dbg !2602
  br label %870, !dbg !2602

; <label>:870                                     ; preds = %868, %862
  %871 = load %struct.sv** @PL_utf8_alnum, align 8, !dbg !2605
  %872 = call i64 @Perl_swash_fetch(%struct.sv* %871, i8* %locinput.0, i8 signext %2), !dbg !2606
  %873 = trunc i64 %872 to i32, !dbg !2606
  call void @llvm.dbg.value(metadata i32 %873, i64 0, metadata !2607, metadata !566), !dbg !2608
  br label %932, !dbg !2609

; <label>:874                                     ; preds = %857
  %875 = icmp slt i32 %ln.1, 256, !dbg !2610
  br i1 %875, label %876, label %895, !dbg !2610

; <label>:876                                     ; preds = %874
  %877 = and i32 %ln.1, -128, !dbg !2612
  %878 = icmp eq i32 %877, 0, !dbg !2612
  br i1 %878, label %879, label %892, !dbg !2612

; <label>:879                                     ; preds = %876
  %880 = sext i32 %ln.1 to i64, !dbg !2614
  %881 = call i16** @__ctype_b_loc(), !dbg !2614
  %882 = load i16** %881, align 8, !dbg !2614
  %883 = getelementptr inbounds i16* %882, i64 %880, !dbg !2614
  %884 = load i16* %883, align 2, !dbg !2614
  %885 = zext i16 %884 to i32, !dbg !2614
  %886 = and i32 %885, 8, !dbg !2614
  %887 = icmp ne i32 %886, 0, !dbg !2614
  br i1 %887, label %890, label %888, !dbg !2614

; <label>:888                                     ; preds = %879
  %889 = icmp eq i32 %ln.1, 95, !dbg !2616
  br label %890, !dbg !2616

; <label>:890                                     ; preds = %888, %879
  %891 = phi i1 [ true, %879 ], [ %889, %888 ]
  br label %892

; <label>:892                                     ; preds = %890, %876
  %893 = phi i1 [ false, %876 ], [ %891, %890 ]
  %894 = zext i1 %893 to i32, !dbg !2618
  br label %899, !dbg !2618

; <label>:895                                     ; preds = %874
  %896 = sext i32 %ln.1 to i64, !dbg !2620
  %897 = call signext i8 @Perl_is_uni_alnum_lc(i64 %896), !dbg !2620
  %898 = sext i8 %897 to i32, !dbg !2620
  br label %899, !dbg !2620

; <label>:899                                     ; preds = %895, %892
  %900 = phi i32 [ %894, %892 ], [ %898, %895 ], !dbg !2610
  call void @llvm.dbg.value(metadata i32 %900, i64 0, metadata !2052, metadata !566), !dbg !2053
  %901 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2622
  %902 = icmp ult i64 %901, 256, !dbg !2622
  br i1 %902, label %903, label %926, !dbg !2622

; <label>:903                                     ; preds = %899
  %904 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2623
  %905 = and i64 %904, -128, !dbg !2623
  %906 = icmp eq i64 %905, 0, !dbg !2623
  br i1 %906, label %907, label %923, !dbg !2623

; <label>:907                                     ; preds = %903
  %908 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2624
  %909 = trunc i64 %908 to i32, !dbg !2624
  %910 = sext i32 %909 to i64, !dbg !2624
  %911 = call i16** @__ctype_b_loc(), !dbg !2624
  %912 = load i16** %911, align 8, !dbg !2624
  %913 = getelementptr inbounds i16* %912, i64 %910, !dbg !2624
  %914 = load i16* %913, align 2, !dbg !2624
  %915 = zext i16 %914 to i32, !dbg !2624
  %916 = and i32 %915, 8, !dbg !2624
  %917 = icmp ne i32 %916, 0, !dbg !2624
  br i1 %917, label %921, label %918, !dbg !2624

; <label>:918                                     ; preds = %907
  %919 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2625
  %920 = icmp eq i64 %919, 95, !dbg !2625
  br label %921, !dbg !2625

; <label>:921                                     ; preds = %918, %907
  %922 = phi i1 [ true, %907 ], [ %920, %918 ]
  br label %923

; <label>:923                                     ; preds = %921, %903
  %924 = phi i1 [ false, %903 ], [ %922, %921 ]
  %925 = zext i1 %924 to i32, !dbg !2626
  br label %930, !dbg !2626

; <label>:926                                     ; preds = %899
  %927 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2627
  %928 = call signext i8 @Perl_is_uni_alnum_lc(i64 %927), !dbg !2627
  %929 = sext i8 %928 to i32, !dbg !2627
  br label %930, !dbg !2627

; <label>:930                                     ; preds = %926, %923
  %931 = phi i32 [ %925, %923 ], [ %929, %926 ], !dbg !2622
  call void @llvm.dbg.value(metadata i32 %931, i64 0, metadata !2607, metadata !566), !dbg !2608
  br label %932

; <label>:932                                     ; preds = %930, %870
  %ln.2 = phi i32 [ %865, %870 ], [ %900, %930 ]
  %n.0 = phi i32 [ %873, %870 ], [ %931, %930 ]
  br label %1023, !dbg !2628

; <label>:933                                     ; preds = %834
  %934 = load i8** @PL_bostr, align 8, !dbg !2629
  %935 = icmp ne i8* %locinput.0, %934, !dbg !2631
  br i1 %935, label %936, label %940, !dbg !2632

; <label>:936                                     ; preds = %933
  %937 = getelementptr inbounds i8* %locinput.0, i64 -1, !dbg !2633
  %938 = load i8* %937, align 1, !dbg !2633
  %939 = zext i8 %938 to i32, !dbg !2633
  br label %941, !dbg !2632

; <label>:940                                     ; preds = %933
  br label %941, !dbg !2634

; <label>:941                                     ; preds = %940, %936
  %942 = phi i32 [ %939, %936 ], [ 10, %940 ], !dbg !2632
  call void @llvm.dbg.value(metadata i32 %942, i64 0, metadata !2052, metadata !566), !dbg !2053
  %943 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2636
  %944 = load i8* %943, align 1, !dbg !2636
  %945 = zext i8 %944 to i32, !dbg !2636
  %946 = icmp eq i32 %945, 9, !dbg !2636
  br i1 %946, label %952, label %947, !dbg !2638

; <label>:947                                     ; preds = %941
  %948 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2639
  %949 = load i8* %948, align 1, !dbg !2639
  %950 = zext i8 %949 to i32, !dbg !2639
  %951 = icmp eq i32 %950, 11, !dbg !2639
  br i1 %951, label %952, label %985, !dbg !2638

; <label>:952                                     ; preds = %947, %941
  %953 = icmp sge i32 %942, 65, !dbg !2641
  br i1 %953, label %954, label %956, !dbg !2641

; <label>:954                                     ; preds = %952
  %955 = icmp sle i32 %942, 90, !dbg !2643
  br i1 %955, label %966, label %956, !dbg !2643

; <label>:956                                     ; preds = %954, %952
  %957 = icmp sge i32 %942, 97, !dbg !2645
  br i1 %957, label %958, label %960, !dbg !2645

; <label>:958                                     ; preds = %956
  %959 = icmp sle i32 %942, 122, !dbg !2648
  br i1 %959, label %966, label %960, !dbg !2648

; <label>:960                                     ; preds = %958, %956
  %961 = icmp sge i32 %942, 48, !dbg !2650
  br i1 %961, label %962, label %964, !dbg !2650

; <label>:962                                     ; preds = %960
  %963 = icmp sle i32 %942, 57, !dbg !2653
  br i1 %963, label %966, label %964, !dbg !2653

; <label>:964                                     ; preds = %962, %960
  %965 = icmp eq i32 %942, 95, !dbg !2655
  br label %966, !dbg !2655

; <label>:966                                     ; preds = %964, %962, %958, %954
  %967 = phi i1 [ true, %962 ], [ true, %958 ], [ true, %954 ], [ %965, %964 ]
  %968 = zext i1 %967 to i32, !dbg !2658
  call void @llvm.dbg.value(metadata i32 %968, i64 0, metadata !2052, metadata !566), !dbg !2053
  %969 = icmp sge i32 %nextchr.0, 65, !dbg !2663
  br i1 %969, label %970, label %972, !dbg !2663

; <label>:970                                     ; preds = %966
  %971 = icmp sle i32 %nextchr.0, 90, !dbg !2664
  br i1 %971, label %982, label %972, !dbg !2664

; <label>:972                                     ; preds = %970, %966
  %973 = icmp sge i32 %nextchr.0, 97, !dbg !2665
  br i1 %973, label %974, label %976, !dbg !2665

; <label>:974                                     ; preds = %972
  %975 = icmp sle i32 %nextchr.0, 122, !dbg !2666
  br i1 %975, label %982, label %976, !dbg !2666

; <label>:976                                     ; preds = %974, %972
  %977 = icmp sge i32 %nextchr.0, 48, !dbg !2667
  br i1 %977, label %978, label %980, !dbg !2667

; <label>:978                                     ; preds = %976
  %979 = icmp sle i32 %nextchr.0, 57, !dbg !2668
  br i1 %979, label %982, label %980, !dbg !2668

; <label>:980                                     ; preds = %978, %976
  %981 = icmp eq i32 %nextchr.0, 95, !dbg !2669
  br label %982, !dbg !2669

; <label>:982                                     ; preds = %980, %978, %974, %970
  %983 = phi i1 [ true, %978 ], [ true, %974 ], [ true, %970 ], [ %981, %980 ]
  %984 = zext i1 %983 to i32, !dbg !2670
  call void @llvm.dbg.value(metadata i32 %984, i64 0, metadata !2607, metadata !566), !dbg !2608
  br label %1022, !dbg !2671

; <label>:985                                     ; preds = %947
  %986 = and i32 %942, -128, !dbg !2672
  %987 = icmp eq i32 %986, 0, !dbg !2672
  br i1 %987, label %988, label %1001, !dbg !2672

; <label>:988                                     ; preds = %985
  %989 = sext i32 %942 to i64, !dbg !2674
  %990 = call i16** @__ctype_b_loc(), !dbg !2674
  %991 = load i16** %990, align 8, !dbg !2674
  %992 = getelementptr inbounds i16* %991, i64 %989, !dbg !2674
  %993 = load i16* %992, align 2, !dbg !2674
  %994 = zext i16 %993 to i32, !dbg !2674
  %995 = and i32 %994, 8, !dbg !2674
  %996 = icmp ne i32 %995, 0, !dbg !2674
  br i1 %996, label %999, label %997, !dbg !2674

; <label>:997                                     ; preds = %988
  %998 = icmp eq i32 %942, 95, !dbg !2676
  br label %999, !dbg !2676

; <label>:999                                     ; preds = %997, %988
  %1000 = phi i1 [ true, %988 ], [ %998, %997 ]
  br label %1001

; <label>:1001                                    ; preds = %999, %985
  %1002 = phi i1 [ false, %985 ], [ %1000, %999 ]
  %1003 = zext i1 %1002 to i32, !dbg !2678
  call void @llvm.dbg.value(metadata i32 %1003, i64 0, metadata !2052, metadata !566), !dbg !2053
  %1004 = and i32 %nextchr.0, -128, !dbg !2680
  %1005 = icmp eq i32 %1004, 0, !dbg !2680
  br i1 %1005, label %1006, label %1019, !dbg !2680

; <label>:1006                                    ; preds = %1001
  %1007 = sext i32 %nextchr.0 to i64, !dbg !2681
  %1008 = call i16** @__ctype_b_loc(), !dbg !2681
  %1009 = load i16** %1008, align 8, !dbg !2681
  %1010 = getelementptr inbounds i16* %1009, i64 %1007, !dbg !2681
  %1011 = load i16* %1010, align 2, !dbg !2681
  %1012 = zext i16 %1011 to i32, !dbg !2681
  %1013 = and i32 %1012, 8, !dbg !2681
  %1014 = icmp ne i32 %1013, 0, !dbg !2681
  br i1 %1014, label %1017, label %1015, !dbg !2681

; <label>:1015                                    ; preds = %1006
  %1016 = icmp eq i32 %nextchr.0, 95, !dbg !2682
  br label %1017, !dbg !2682

; <label>:1017                                    ; preds = %1015, %1006
  %1018 = phi i1 [ true, %1006 ], [ %1016, %1015 ]
  br label %1019

; <label>:1019                                    ; preds = %1017, %1001
  %1020 = phi i1 [ false, %1001 ], [ %1018, %1017 ]
  %1021 = zext i1 %1020 to i32, !dbg !2683
  call void @llvm.dbg.value(metadata i32 %1021, i64 0, metadata !2607, metadata !566), !dbg !2608
  br label %1022

; <label>:1022                                    ; preds = %1019, %982
  %ln.3 = phi i32 [ %968, %982 ], [ %1003, %1019 ]
  %n.1 = phi i32 [ %984, %982 ], [ %1021, %1019 ]
  br label %1023

; <label>:1023                                    ; preds = %1022, %932
  %ln.4 = phi i32 [ %ln.2, %932 ], [ %ln.3, %1022 ]
  %n.2 = phi i32 [ %n.0, %932 ], [ %n.1, %1022 ]
  %1024 = icmp ne i32 %ln.4, 0, !dbg !2684
  %1025 = xor i1 %1024, true, !dbg !2684
  %1026 = zext i1 %1025 to i32, !dbg !2684
  %1027 = icmp ne i32 %n.2, 0, !dbg !2686
  %1028 = xor i1 %1027, true, !dbg !2686
  %1029 = zext i1 %1028 to i32, !dbg !2686
  %1030 = icmp eq i32 %1026, %1029, !dbg !2687
  %1031 = zext i1 %1030 to i32, !dbg !2687
  %1032 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2688
  %1033 = load i8* %1032, align 1, !dbg !2688
  %1034 = zext i8 %1033 to i32, !dbg !2688
  %1035 = icmp eq i32 %1034, 9, !dbg !2688
  br i1 %1035, label %1041, label %1036, !dbg !2688

; <label>:1036                                    ; preds = %1023
  %1037 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2689
  %1038 = load i8* %1037, align 1, !dbg !2689
  %1039 = zext i8 %1038 to i32, !dbg !2689
  %1040 = icmp eq i32 %1039, 10, !dbg !2689
  br label %1041, !dbg !2688

; <label>:1041                                    ; preds = %1036, %1023
  %1042 = phi i1 [ true, %1023 ], [ %1040, %1036 ]
  %1043 = zext i1 %1042 to i32, !dbg !2690
  %1044 = icmp eq i32 %1031, %1043, !dbg !2693
  br i1 %1044, label %1045, label %1046, !dbg !2694

; <label>:1045                                    ; preds = %1041
  br label %5029, !dbg !2695

; <label>:1046                                    ; preds = %1041
  br label %5023, !dbg !2696

; <label>:1047                                    ; preds = %15
  %1048 = load i32* @PL_reg_flags, align 4, !dbg !2697
  %1049 = or i32 %1048, 1, !dbg !2697
  store i32 %1049, i32* @PL_reg_flags, align 4, !dbg !2697
  br label %1050, !dbg !2697

; <label>:1050                                    ; preds = %1047, %15
  %1051 = icmp ne i32 %nextchr.0, 0, !dbg !2698
  br i1 %1051, label %1053, label %1052, !dbg !2698

; <label>:1052                                    ; preds = %1050
  br label %5029, !dbg !2699

; <label>:1053                                    ; preds = %1050
  %1054 = icmp ne i8 %2, 0, !dbg !2701
  br i1 %1054, label %1055, label %1145, !dbg !2701

; <label>:1055                                    ; preds = %1053
  %1056 = trunc i32 %nextchr.0 to i8, !dbg !2702
  %1057 = zext i8 %1056 to i32, !dbg !2702
  %1058 = and i32 %1057, 128, !dbg !2702
  %1059 = icmp ne i32 %1058, 0, !dbg !2706
  br i1 %1059, label %1060, label %1113, !dbg !2706

; <label>:1060                                    ; preds = %1055
  %1061 = load %struct.sv** @PL_utf8_space, align 8, !dbg !2707
  %1062 = icmp ne %struct.sv* %1061, null, !dbg !2711
  br i1 %1062, label %1065, label %1063, !dbg !2711

; <label>:1063                                    ; preds = %1060
  call void @Perl_push_scope(), !dbg !2712
  call void @Perl_save_re_context(), !dbg !2712
  %1064 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8]* @.str3, i32 0, i32 0)), !dbg !2712
  call void @Perl_pop_scope(), !dbg !2712
  br label %1065, !dbg !2712

; <label>:1065                                    ; preds = %1063, %1060
  %1066 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2715
  %1067 = load i8* %1066, align 1, !dbg !2715
  %1068 = zext i8 %1067 to i32, !dbg !2715
  %1069 = icmp eq i32 %1068, 22, !dbg !2715
  br i1 %1069, label %1070, label %1074, !dbg !2717

; <label>:1070                                    ; preds = %1065
  %1071 = load %struct.sv** @PL_utf8_space, align 8, !dbg !2718
  %1072 = call i64 @Perl_swash_fetch(%struct.sv* %1071, i8* %locinput.0, i8 signext %2), !dbg !2719
  %1073 = icmp ne i64 %1072, 0, !dbg !2717
  br i1 %1073, label %1104, label %1103, !dbg !2717

; <label>:1074                                    ; preds = %1065
  %1075 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2720
  %1076 = icmp ult i64 %1075, 256, !dbg !2720
  br i1 %1076, label %1077, label %1095, !dbg !2720

; <label>:1077                                    ; preds = %1074
  %1078 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2721
  %1079 = and i64 %1078, -128, !dbg !2721
  %1080 = icmp eq i64 %1079, 0, !dbg !2721
  br i1 %1080, label %1081, label %1092, !dbg !2721

; <label>:1081                                    ; preds = %1077
  %1082 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2723
  %1083 = trunc i64 %1082 to i32, !dbg !2723
  %1084 = sext i32 %1083 to i64, !dbg !2723
  %1085 = call i16** @__ctype_b_loc(), !dbg !2723
  %1086 = load i16** %1085, align 8, !dbg !2723
  %1087 = getelementptr inbounds i16* %1086, i64 %1084, !dbg !2723
  %1088 = load i16* %1087, align 2, !dbg !2723
  %1089 = zext i16 %1088 to i32, !dbg !2723
  %1090 = and i32 %1089, 8192, !dbg !2723
  %1091 = icmp ne i32 %1090, 0, !dbg !2723
  br label %1092

; <label>:1092                                    ; preds = %1081, %1077
  %1093 = phi i1 [ false, %1077 ], [ %1091, %1081 ]
  %1094 = zext i1 %1093 to i32, !dbg !2725
  br label %1099, !dbg !2725

; <label>:1095                                    ; preds = %1074
  %1096 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2727
  %1097 = call signext i8 @Perl_is_uni_space_lc(i64 %1096), !dbg !2727
  %1098 = sext i8 %1097 to i32, !dbg !2727
  br label %1099, !dbg !2727

; <label>:1099                                    ; preds = %1095, %1092
  %1100 = phi i32 [ %1094, %1092 ], [ %1098, %1095 ], !dbg !2720
  %1101 = sext i32 %1100 to i64, !dbg !2729
  %1102 = icmp ne i64 %1101, 0, !dbg !2717
  br i1 %1102, label %1104, label %1103, !dbg !2717

; <label>:1103                                    ; preds = %1099, %1070
  br label %5029, !dbg !2732

; <label>:1104                                    ; preds = %1099, %1070
  %1105 = sext i32 %nextchr.0 to i64, !dbg !2734
  %1106 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1105, !dbg !2734
  %1107 = load i8* %1106, align 1, !dbg !2734
  %1108 = zext i8 %1107 to i32, !dbg !2734
  %1109 = sext i32 %1108 to i64, !dbg !2735
  %1110 = getelementptr inbounds i8* %locinput.0, i64 %1109, !dbg !2735
  call void @llvm.dbg.value(metadata i8* %1110, i64 0, metadata !2057, metadata !566), !dbg !2058
  %1111 = load i8* %1110, align 1, !dbg !2736
  %1112 = zext i8 %1111 to i32, !dbg !2736
  call void @llvm.dbg.value(metadata i32 %1112, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2737

; <label>:1113                                    ; preds = %1055
  %1114 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2738
  %1115 = load i8* %1114, align 1, !dbg !2738
  %1116 = zext i8 %1115 to i32, !dbg !2738
  %1117 = icmp eq i32 %1116, 22, !dbg !2738
  br i1 %1117, label %1118, label %1128, !dbg !2740

; <label>:1118                                    ; preds = %1113
  %1119 = icmp eq i32 %nextchr.0, 32, !dbg !2741
  br i1 %1119, label %1141, label %1120, !dbg !2740

; <label>:1120                                    ; preds = %1118
  %1121 = icmp eq i32 %nextchr.0, 9, !dbg !2741
  br i1 %1121, label %1141, label %1122, !dbg !2740

; <label>:1122                                    ; preds = %1120
  %1123 = icmp eq i32 %nextchr.0, 10, !dbg !2741
  br i1 %1123, label %1141, label %1124, !dbg !2740

; <label>:1124                                    ; preds = %1122
  %1125 = icmp eq i32 %nextchr.0, 13, !dbg !2741
  br i1 %1125, label %1141, label %1126, !dbg !2740

; <label>:1126                                    ; preds = %1124
  %1127 = icmp eq i32 %nextchr.0, 12, !dbg !2741
  br i1 %1127, label %1141, label %1140, !dbg !2740

; <label>:1128                                    ; preds = %1113
  %1129 = and i32 %nextchr.0, -128, !dbg !2742
  %1130 = icmp eq i32 %1129, 0, !dbg !2742
  br i1 %1130, label %1131, label %1140, !dbg !2740

; <label>:1131                                    ; preds = %1128
  %1132 = sext i32 %nextchr.0 to i64, !dbg !2742
  %1133 = call i16** @__ctype_b_loc(), !dbg !2742
  %1134 = load i16** %1133, align 8, !dbg !2742
  %1135 = getelementptr inbounds i16* %1134, i64 %1132, !dbg !2742
  %1136 = load i16* %1135, align 2, !dbg !2742
  %1137 = zext i16 %1136 to i32, !dbg !2742
  %1138 = and i32 %1137, 8192, !dbg !2742
  %1139 = icmp ne i32 %1138, 0, !dbg !2740
  br i1 %1139, label %1141, label %1140, !dbg !2740

; <label>:1140                                    ; preds = %1131, %1128, %1126
  br label %5029, !dbg !2743

; <label>:1141                                    ; preds = %1131, %1126, %1124, %1122, %1120, %1118
  %1142 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2744
  call void @llvm.dbg.value(metadata i8* %1142, i64 0, metadata !2057, metadata !566), !dbg !2058
  %1143 = load i8* %1142, align 1, !dbg !2744
  %1144 = zext i8 %1143 to i32, !dbg !2744
  call void @llvm.dbg.value(metadata i32 %1144, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %1177, !dbg !2745

; <label>:1145                                    ; preds = %1053
  %1146 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2746
  %1147 = load i8* %1146, align 1, !dbg !2746
  %1148 = zext i8 %1147 to i32, !dbg !2746
  %1149 = icmp eq i32 %1148, 22, !dbg !2746
  br i1 %1149, label %1150, label %1160, !dbg !2749

; <label>:1150                                    ; preds = %1145
  %1151 = icmp eq i32 %nextchr.0, 32, !dbg !2750
  br i1 %1151, label %1173, label %1152, !dbg !2749

; <label>:1152                                    ; preds = %1150
  %1153 = icmp eq i32 %nextchr.0, 9, !dbg !2750
  br i1 %1153, label %1173, label %1154, !dbg !2749

; <label>:1154                                    ; preds = %1152
  %1155 = icmp eq i32 %nextchr.0, 10, !dbg !2750
  br i1 %1155, label %1173, label %1156, !dbg !2749

; <label>:1156                                    ; preds = %1154
  %1157 = icmp eq i32 %nextchr.0, 13, !dbg !2750
  br i1 %1157, label %1173, label %1158, !dbg !2749

; <label>:1158                                    ; preds = %1156
  %1159 = icmp eq i32 %nextchr.0, 12, !dbg !2750
  br i1 %1159, label %1173, label %1172, !dbg !2749

; <label>:1160                                    ; preds = %1145
  %1161 = and i32 %nextchr.0, -128, !dbg !2751
  %1162 = icmp eq i32 %1161, 0, !dbg !2751
  br i1 %1162, label %1163, label %1172, !dbg !2749

; <label>:1163                                    ; preds = %1160
  %1164 = sext i32 %nextchr.0 to i64, !dbg !2751
  %1165 = call i16** @__ctype_b_loc(), !dbg !2751
  %1166 = load i16** %1165, align 8, !dbg !2751
  %1167 = getelementptr inbounds i16* %1166, i64 %1164, !dbg !2751
  %1168 = load i16* %1167, align 2, !dbg !2751
  %1169 = zext i16 %1168 to i32, !dbg !2751
  %1170 = and i32 %1169, 8192, !dbg !2751
  %1171 = icmp ne i32 %1170, 0, !dbg !2749
  br i1 %1171, label %1173, label %1172, !dbg !2749

; <label>:1172                                    ; preds = %1163, %1160, %1158
  br label %5029, !dbg !2752

; <label>:1173                                    ; preds = %1163, %1158, %1156, %1154, %1152, %1150
  %1174 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2753
  call void @llvm.dbg.value(metadata i8* %1174, i64 0, metadata !2057, metadata !566), !dbg !2058
  %1175 = load i8* %1174, align 1, !dbg !2753
  %1176 = zext i8 %1175 to i32, !dbg !2753
  call void @llvm.dbg.value(metadata i32 %1176, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %1177

; <label>:1177                                    ; preds = %1173, %1141
  %locinput.3 = phi i8* [ %1142, %1141 ], [ %1174, %1173 ]
  %nextchr.4 = phi i32 [ %1144, %1141 ], [ %1176, %1173 ]
  br label %5023, !dbg !2754

; <label>:1178                                    ; preds = %15
  %1179 = load i32* @PL_reg_flags, align 4, !dbg !2755
  %1180 = or i32 %1179, 1, !dbg !2755
  store i32 %1180, i32* @PL_reg_flags, align 4, !dbg !2755
  br label %1181, !dbg !2755

; <label>:1181                                    ; preds = %1178, %15
  %1182 = icmp ne i32 %nextchr.0, 0, !dbg !2756
  br i1 %1182, label %1187, label %1183, !dbg !2756

; <label>:1183                                    ; preds = %1181
  %1184 = load i8** @PL_regeol, align 8, !dbg !2757
  %1185 = icmp uge i8* %locinput.0, %1184, !dbg !2759
  br i1 %1185, label %1186, label %1187, !dbg !2756

; <label>:1186                                    ; preds = %1183
  br label %5029, !dbg !2760

; <label>:1187                                    ; preds = %1183, %1181
  %1188 = icmp ne i8 %2, 0, !dbg !2761
  br i1 %1188, label %1189, label %1242, !dbg !2761

; <label>:1189                                    ; preds = %1187
  %1190 = load %struct.sv** @PL_utf8_space, align 8, !dbg !2762
  %1191 = icmp ne %struct.sv* %1190, null, !dbg !2767
  br i1 %1191, label %1194, label %1192, !dbg !2767

; <label>:1192                                    ; preds = %1189
  call void @Perl_push_scope(), !dbg !2768
  call void @Perl_save_re_context(), !dbg !2768
  %1193 = call signext i8 @Perl_is_utf8_space(i8* getelementptr inbounds ([2 x i8]* @.str3, i32 0, i32 0)), !dbg !2768
  call void @Perl_pop_scope(), !dbg !2768
  br label %1194, !dbg !2768

; <label>:1194                                    ; preds = %1192, %1189
  %1195 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2771
  %1196 = load i8* %1195, align 1, !dbg !2771
  %1197 = zext i8 %1196 to i32, !dbg !2771
  %1198 = icmp eq i32 %1197, 24, !dbg !2771
  br i1 %1198, label %1199, label %1203, !dbg !2773

; <label>:1199                                    ; preds = %1194
  %1200 = load %struct.sv** @PL_utf8_space, align 8, !dbg !2774
  %1201 = call i64 @Perl_swash_fetch(%struct.sv* %1200, i8* %locinput.0, i8 signext %2), !dbg !2775
  %1202 = icmp ne i64 %1201, 0, !dbg !2773
  br i1 %1202, label %1232, label %1233, !dbg !2773

; <label>:1203                                    ; preds = %1194
  %1204 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2776
  %1205 = icmp ult i64 %1204, 256, !dbg !2776
  br i1 %1205, label %1206, label %1224, !dbg !2776

; <label>:1206                                    ; preds = %1203
  %1207 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2777
  %1208 = and i64 %1207, -128, !dbg !2777
  %1209 = icmp eq i64 %1208, 0, !dbg !2777
  br i1 %1209, label %1210, label %1221, !dbg !2777

; <label>:1210                                    ; preds = %1206
  %1211 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2779
  %1212 = trunc i64 %1211 to i32, !dbg !2779
  %1213 = sext i32 %1212 to i64, !dbg !2779
  %1214 = call i16** @__ctype_b_loc(), !dbg !2779
  %1215 = load i16** %1214, align 8, !dbg !2779
  %1216 = getelementptr inbounds i16* %1215, i64 %1213, !dbg !2779
  %1217 = load i16* %1216, align 2, !dbg !2779
  %1218 = zext i16 %1217 to i32, !dbg !2779
  %1219 = and i32 %1218, 8192, !dbg !2779
  %1220 = icmp ne i32 %1219, 0, !dbg !2779
  br label %1221

; <label>:1221                                    ; preds = %1210, %1206
  %1222 = phi i1 [ false, %1206 ], [ %1220, %1210 ]
  %1223 = zext i1 %1222 to i32, !dbg !2781
  br label %1228, !dbg !2781

; <label>:1224                                    ; preds = %1203
  %1225 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2783
  %1226 = call signext i8 @Perl_is_uni_space_lc(i64 %1225), !dbg !2783
  %1227 = sext i8 %1226 to i32, !dbg !2783
  br label %1228, !dbg !2783

; <label>:1228                                    ; preds = %1224, %1221
  %1229 = phi i32 [ %1223, %1221 ], [ %1227, %1224 ], !dbg !2776
  %1230 = sext i32 %1229 to i64, !dbg !2785
  %1231 = icmp ne i64 %1230, 0, !dbg !2773
  br i1 %1231, label %1232, label %1233, !dbg !2773

; <label>:1232                                    ; preds = %1228, %1199
  br label %5029, !dbg !2788

; <label>:1233                                    ; preds = %1228, %1199
  %1234 = sext i32 %nextchr.0 to i64, !dbg !2790
  %1235 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1234, !dbg !2790
  %1236 = load i8* %1235, align 1, !dbg !2790
  %1237 = zext i8 %1236 to i32, !dbg !2790
  %1238 = sext i32 %1237 to i64, !dbg !2791
  %1239 = getelementptr inbounds i8* %locinput.0, i64 %1238, !dbg !2791
  call void @llvm.dbg.value(metadata i8* %1239, i64 0, metadata !2057, metadata !566), !dbg !2058
  %1240 = load i8* %1239, align 1, !dbg !2792
  %1241 = zext i8 %1240 to i32, !dbg !2792
  call void @llvm.dbg.value(metadata i32 %1241, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2793

; <label>:1242                                    ; preds = %1187
  %1243 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2794
  %1244 = load i8* %1243, align 1, !dbg !2794
  %1245 = zext i8 %1244 to i32, !dbg !2794
  %1246 = icmp eq i32 %1245, 24, !dbg !2794
  br i1 %1246, label %1247, label %1257, !dbg !2796

; <label>:1247                                    ; preds = %1242
  %1248 = icmp eq i32 %nextchr.0, 32, !dbg !2797
  br i1 %1248, label %1269, label %1249, !dbg !2796

; <label>:1249                                    ; preds = %1247
  %1250 = icmp eq i32 %nextchr.0, 9, !dbg !2797
  br i1 %1250, label %1269, label %1251, !dbg !2796

; <label>:1251                                    ; preds = %1249
  %1252 = icmp eq i32 %nextchr.0, 10, !dbg !2797
  br i1 %1252, label %1269, label %1253, !dbg !2796

; <label>:1253                                    ; preds = %1251
  %1254 = icmp eq i32 %nextchr.0, 13, !dbg !2797
  br i1 %1254, label %1269, label %1255, !dbg !2796

; <label>:1255                                    ; preds = %1253
  %1256 = icmp eq i32 %nextchr.0, 12, !dbg !2797
  br i1 %1256, label %1269, label %1270, !dbg !2796

; <label>:1257                                    ; preds = %1242
  %1258 = and i32 %nextchr.0, -128, !dbg !2798
  %1259 = icmp eq i32 %1258, 0, !dbg !2798
  br i1 %1259, label %1260, label %1270, !dbg !2796

; <label>:1260                                    ; preds = %1257
  %1261 = sext i32 %nextchr.0 to i64, !dbg !2798
  %1262 = call i16** @__ctype_b_loc(), !dbg !2798
  %1263 = load i16** %1262, align 8, !dbg !2798
  %1264 = getelementptr inbounds i16* %1263, i64 %1261, !dbg !2798
  %1265 = load i16* %1264, align 2, !dbg !2798
  %1266 = zext i16 %1265 to i32, !dbg !2798
  %1267 = and i32 %1266, 8192, !dbg !2798
  %1268 = icmp ne i32 %1267, 0, !dbg !2796
  br i1 %1268, label %1269, label %1270, !dbg !2796

; <label>:1269                                    ; preds = %1260, %1255, %1253, %1251, %1249, %1247
  br label %5029, !dbg !2799

; <label>:1270                                    ; preds = %1260, %1257, %1255
  %1271 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2800
  call void @llvm.dbg.value(metadata i8* %1271, i64 0, metadata !2057, metadata !566), !dbg !2058
  %1272 = load i8* %1271, align 1, !dbg !2800
  %1273 = zext i8 %1272 to i32, !dbg !2800
  call void @llvm.dbg.value(metadata i32 %1273, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2801

; <label>:1274                                    ; preds = %15
  %1275 = load i32* @PL_reg_flags, align 4, !dbg !2802
  %1276 = or i32 %1275, 1, !dbg !2802
  store i32 %1276, i32* @PL_reg_flags, align 4, !dbg !2802
  br label %1277, !dbg !2802

; <label>:1277                                    ; preds = %1274, %15
  %1278 = icmp ne i32 %nextchr.0, 0, !dbg !2803
  br i1 %1278, label %1280, label %1279, !dbg !2803

; <label>:1279                                    ; preds = %1277
  br label %5029, !dbg !2804

; <label>:1280                                    ; preds = %1277
  %1281 = icmp ne i8 %2, 0, !dbg !2806
  br i1 %1281, label %1282, label %1335, !dbg !2806

; <label>:1282                                    ; preds = %1280
  %1283 = load %struct.sv** @PL_utf8_digit, align 8, !dbg !2807
  %1284 = icmp ne %struct.sv* %1283, null, !dbg !2812
  br i1 %1284, label %1287, label %1285, !dbg !2812

; <label>:1285                                    ; preds = %1282
  call void @Perl_push_scope(), !dbg !2813
  call void @Perl_save_re_context(), !dbg !2813
  %1286 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8]* @.str4, i32 0, i32 0)), !dbg !2813
  call void @Perl_pop_scope(), !dbg !2813
  br label %1287, !dbg !2813

; <label>:1287                                    ; preds = %1285, %1282
  %1288 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2816
  %1289 = load i8* %1288, align 1, !dbg !2816
  %1290 = zext i8 %1289 to i32, !dbg !2816
  %1291 = icmp eq i32 %1290, 26, !dbg !2816
  br i1 %1291, label %1292, label %1296, !dbg !2818

; <label>:1292                                    ; preds = %1287
  %1293 = load %struct.sv** @PL_utf8_digit, align 8, !dbg !2819
  %1294 = call i64 @Perl_swash_fetch(%struct.sv* %1293, i8* %locinput.0, i8 signext %2), !dbg !2820
  %1295 = icmp ne i64 %1294, 0, !dbg !2818
  br i1 %1295, label %1326, label %1325, !dbg !2818

; <label>:1296                                    ; preds = %1287
  %1297 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2821
  %1298 = icmp ult i64 %1297, 256, !dbg !2821
  br i1 %1298, label %1299, label %1317, !dbg !2821

; <label>:1299                                    ; preds = %1296
  %1300 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2822
  %1301 = and i64 %1300, -128, !dbg !2822
  %1302 = icmp eq i64 %1301, 0, !dbg !2822
  br i1 %1302, label %1303, label %1314, !dbg !2822

; <label>:1303                                    ; preds = %1299
  %1304 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2824
  %1305 = trunc i64 %1304 to i32, !dbg !2824
  %1306 = sext i32 %1305 to i64, !dbg !2824
  %1307 = call i16** @__ctype_b_loc(), !dbg !2824
  %1308 = load i16** %1307, align 8, !dbg !2824
  %1309 = getelementptr inbounds i16* %1308, i64 %1306, !dbg !2824
  %1310 = load i16* %1309, align 2, !dbg !2824
  %1311 = zext i16 %1310 to i32, !dbg !2824
  %1312 = and i32 %1311, 2048, !dbg !2824
  %1313 = icmp ne i32 %1312, 0, !dbg !2824
  br label %1314

; <label>:1314                                    ; preds = %1303, %1299
  %1315 = phi i1 [ false, %1299 ], [ %1313, %1303 ]
  %1316 = zext i1 %1315 to i32, !dbg !2826
  br label %1321, !dbg !2826

; <label>:1317                                    ; preds = %1296
  %1318 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2828
  %1319 = call signext i8 @Perl_is_uni_digit_lc(i64 %1318), !dbg !2828
  %1320 = sext i8 %1319 to i32, !dbg !2828
  br label %1321, !dbg !2828

; <label>:1321                                    ; preds = %1317, %1314
  %1322 = phi i32 [ %1316, %1314 ], [ %1320, %1317 ], !dbg !2821
  %1323 = sext i32 %1322 to i64, !dbg !2830
  %1324 = icmp ne i64 %1323, 0, !dbg !2818
  br i1 %1324, label %1326, label %1325, !dbg !2818

; <label>:1325                                    ; preds = %1321, %1292
  br label %5029, !dbg !2833

; <label>:1326                                    ; preds = %1321, %1292
  %1327 = sext i32 %nextchr.0 to i64, !dbg !2835
  %1328 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1327, !dbg !2835
  %1329 = load i8* %1328, align 1, !dbg !2835
  %1330 = zext i8 %1329 to i32, !dbg !2835
  %1331 = sext i32 %1330 to i64, !dbg !2836
  %1332 = getelementptr inbounds i8* %locinput.0, i64 %1331, !dbg !2836
  call void @llvm.dbg.value(metadata i8* %1332, i64 0, metadata !2057, metadata !566), !dbg !2058
  %1333 = load i8* %1332, align 1, !dbg !2837
  %1334 = zext i8 %1333 to i32, !dbg !2837
  call void @llvm.dbg.value(metadata i32 %1334, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2838

; <label>:1335                                    ; preds = %1280
  %1336 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2839
  %1337 = load i8* %1336, align 1, !dbg !2839
  %1338 = zext i8 %1337 to i32, !dbg !2839
  %1339 = icmp eq i32 %1338, 26, !dbg !2839
  br i1 %1339, label %1340, label %1344, !dbg !2841

; <label>:1340                                    ; preds = %1335
  %1341 = icmp sge i32 %nextchr.0, 48, !dbg !2842
  br i1 %1341, label %1342, label %1356, !dbg !2841

; <label>:1342                                    ; preds = %1340
  %1343 = icmp sle i32 %nextchr.0, 57, !dbg !2842
  br i1 %1343, label %1357, label %1356, !dbg !2841

; <label>:1344                                    ; preds = %1335
  %1345 = and i32 %nextchr.0, -128, !dbg !2843
  %1346 = icmp eq i32 %1345, 0, !dbg !2843
  br i1 %1346, label %1347, label %1356, !dbg !2841

; <label>:1347                                    ; preds = %1344
  %1348 = sext i32 %nextchr.0 to i64, !dbg !2843
  %1349 = call i16** @__ctype_b_loc(), !dbg !2843
  %1350 = load i16** %1349, align 8, !dbg !2843
  %1351 = getelementptr inbounds i16* %1350, i64 %1348, !dbg !2843
  %1352 = load i16* %1351, align 2, !dbg !2843
  %1353 = zext i16 %1352 to i32, !dbg !2843
  %1354 = and i32 %1353, 2048, !dbg !2843
  %1355 = icmp ne i32 %1354, 0, !dbg !2841
  br i1 %1355, label %1357, label %1356, !dbg !2841

; <label>:1356                                    ; preds = %1347, %1344, %1342, %1340
  br label %5029, !dbg !2844

; <label>:1357                                    ; preds = %1347, %1342
  %1358 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2845
  call void @llvm.dbg.value(metadata i8* %1358, i64 0, metadata !2057, metadata !566), !dbg !2058
  %1359 = load i8* %1358, align 1, !dbg !2845
  %1360 = zext i8 %1359 to i32, !dbg !2845
  call void @llvm.dbg.value(metadata i32 %1360, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2846

; <label>:1361                                    ; preds = %15
  %1362 = load i32* @PL_reg_flags, align 4, !dbg !2847
  %1363 = or i32 %1362, 1, !dbg !2847
  store i32 %1363, i32* @PL_reg_flags, align 4, !dbg !2847
  br label %1364, !dbg !2847

; <label>:1364                                    ; preds = %1361, %15
  %1365 = icmp ne i32 %nextchr.0, 0, !dbg !2848
  br i1 %1365, label %1370, label %1366, !dbg !2848

; <label>:1366                                    ; preds = %1364
  %1367 = load i8** @PL_regeol, align 8, !dbg !2849
  %1368 = icmp uge i8* %locinput.0, %1367, !dbg !2851
  br i1 %1368, label %1369, label %1370, !dbg !2848

; <label>:1369                                    ; preds = %1366
  br label %5029, !dbg !2852

; <label>:1370                                    ; preds = %1366, %1364
  %1371 = icmp ne i8 %2, 0, !dbg !2853
  br i1 %1371, label %1372, label %1425, !dbg !2853

; <label>:1372                                    ; preds = %1370
  %1373 = load %struct.sv** @PL_utf8_digit, align 8, !dbg !2854
  %1374 = icmp ne %struct.sv* %1373, null, !dbg !2859
  br i1 %1374, label %1377, label %1375, !dbg !2859

; <label>:1375                                    ; preds = %1372
  call void @Perl_push_scope(), !dbg !2860
  call void @Perl_save_re_context(), !dbg !2860
  %1376 = call signext i8 @Perl_is_utf8_digit(i8* getelementptr inbounds ([2 x i8]* @.str4, i32 0, i32 0)), !dbg !2860
  call void @Perl_pop_scope(), !dbg !2860
  br label %1377, !dbg !2860

; <label>:1377                                    ; preds = %1375, %1372
  %1378 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2863
  %1379 = load i8* %1378, align 1, !dbg !2863
  %1380 = zext i8 %1379 to i32, !dbg !2863
  %1381 = icmp eq i32 %1380, 28, !dbg !2863
  br i1 %1381, label %1382, label %1386, !dbg !2865

; <label>:1382                                    ; preds = %1377
  %1383 = load %struct.sv** @PL_utf8_digit, align 8, !dbg !2866
  %1384 = call i64 @Perl_swash_fetch(%struct.sv* %1383, i8* %locinput.0, i8 signext %2), !dbg !2867
  %1385 = icmp ne i64 %1384, 0, !dbg !2865
  br i1 %1385, label %1415, label %1416, !dbg !2865

; <label>:1386                                    ; preds = %1377
  %1387 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2868
  %1388 = icmp ult i64 %1387, 256, !dbg !2868
  br i1 %1388, label %1389, label %1407, !dbg !2868

; <label>:1389                                    ; preds = %1386
  %1390 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2869
  %1391 = and i64 %1390, -128, !dbg !2869
  %1392 = icmp eq i64 %1391, 0, !dbg !2869
  br i1 %1392, label %1393, label %1404, !dbg !2869

; <label>:1393                                    ; preds = %1389
  %1394 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2871
  %1395 = trunc i64 %1394 to i32, !dbg !2871
  %1396 = sext i32 %1395 to i64, !dbg !2871
  %1397 = call i16** @__ctype_b_loc(), !dbg !2871
  %1398 = load i16** %1397, align 8, !dbg !2871
  %1399 = getelementptr inbounds i16* %1398, i64 %1396, !dbg !2871
  %1400 = load i16* %1399, align 2, !dbg !2871
  %1401 = zext i16 %1400 to i32, !dbg !2871
  %1402 = and i32 %1401, 2048, !dbg !2871
  %1403 = icmp ne i32 %1402, 0, !dbg !2871
  br label %1404

; <label>:1404                                    ; preds = %1393, %1389
  %1405 = phi i1 [ false, %1389 ], [ %1403, %1393 ]
  %1406 = zext i1 %1405 to i32, !dbg !2873
  br label %1411, !dbg !2873

; <label>:1407                                    ; preds = %1386
  %1408 = call i64 @Perl_utf8_to_uvchr(i8* %locinput.0, i64* null), !dbg !2875
  %1409 = call signext i8 @Perl_is_uni_digit_lc(i64 %1408), !dbg !2875
  %1410 = sext i8 %1409 to i32, !dbg !2875
  br label %1411, !dbg !2875

; <label>:1411                                    ; preds = %1407, %1404
  %1412 = phi i32 [ %1406, %1404 ], [ %1410, %1407 ], !dbg !2868
  %1413 = sext i32 %1412 to i64, !dbg !2877
  %1414 = icmp ne i64 %1413, 0, !dbg !2865
  br i1 %1414, label %1415, label %1416, !dbg !2865

; <label>:1415                                    ; preds = %1411, %1382
  br label %5029, !dbg !2880

; <label>:1416                                    ; preds = %1411, %1382
  %1417 = sext i32 %nextchr.0 to i64, !dbg !2882
  %1418 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1417, !dbg !2882
  %1419 = load i8* %1418, align 1, !dbg !2882
  %1420 = zext i8 %1419 to i32, !dbg !2882
  %1421 = sext i32 %1420 to i64, !dbg !2883
  %1422 = getelementptr inbounds i8* %locinput.0, i64 %1421, !dbg !2883
  call void @llvm.dbg.value(metadata i8* %1422, i64 0, metadata !2057, metadata !566), !dbg !2058
  %1423 = load i8* %1422, align 1, !dbg !2884
  %1424 = zext i8 %1423 to i32, !dbg !2884
  call void @llvm.dbg.value(metadata i32 %1424, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2885

; <label>:1425                                    ; preds = %1370
  %1426 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2886
  %1427 = load i8* %1426, align 1, !dbg !2886
  %1428 = zext i8 %1427 to i32, !dbg !2886
  %1429 = icmp eq i32 %1428, 28, !dbg !2886
  br i1 %1429, label %1430, label %1434, !dbg !2888

; <label>:1430                                    ; preds = %1425
  %1431 = icmp sge i32 %nextchr.0, 48, !dbg !2889
  br i1 %1431, label %1432, label %1447, !dbg !2888

; <label>:1432                                    ; preds = %1430
  %1433 = icmp sle i32 %nextchr.0, 57, !dbg !2889
  br i1 %1433, label %1446, label %1447, !dbg !2888

; <label>:1434                                    ; preds = %1425
  %1435 = and i32 %nextchr.0, -128, !dbg !2890
  %1436 = icmp eq i32 %1435, 0, !dbg !2890
  br i1 %1436, label %1437, label %1447, !dbg !2888

; <label>:1437                                    ; preds = %1434
  %1438 = sext i32 %nextchr.0 to i64, !dbg !2890
  %1439 = call i16** @__ctype_b_loc(), !dbg !2890
  %1440 = load i16** %1439, align 8, !dbg !2890
  %1441 = getelementptr inbounds i16* %1440, i64 %1438, !dbg !2890
  %1442 = load i16* %1441, align 2, !dbg !2890
  %1443 = zext i16 %1442 to i32, !dbg !2890
  %1444 = and i32 %1443, 2048, !dbg !2890
  %1445 = icmp ne i32 %1444, 0, !dbg !2888
  br i1 %1445, label %1446, label %1447, !dbg !2888

; <label>:1446                                    ; preds = %1437, %1432
  br label %5029, !dbg !2891

; <label>:1447                                    ; preds = %1437, %1434, %1432, %1430
  %1448 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2892
  call void @llvm.dbg.value(metadata i8* %1448, i64 0, metadata !2057, metadata !566), !dbg !2058
  %1449 = load i8* %1448, align 1, !dbg !2892
  %1450 = zext i8 %1449 to i32, !dbg !2892
  call void @llvm.dbg.value(metadata i32 %1450, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2893

; <label>:1451                                    ; preds = %15
  %1452 = load i8** @PL_regeol, align 8, !dbg !2894
  %1453 = icmp uge i8* %locinput.0, %1452, !dbg !2896
  br i1 %1453, label %1454, label %1455, !dbg !2897

; <label>:1454                                    ; preds = %1451
  br label %5029, !dbg !2898

; <label>:1455                                    ; preds = %1451
  %1456 = icmp ne i8 %2, 0, !dbg !2899
  br i1 %1456, label %1457, label %1496, !dbg !2899

; <label>:1457                                    ; preds = %1455
  %1458 = load %struct.sv** @PL_utf8_mark, align 8, !dbg !2900
  %1459 = icmp ne %struct.sv* %1458, null, !dbg !2905
  br i1 %1459, label %1462, label %1460, !dbg !2905

; <label>:1460                                    ; preds = %1457
  call void @Perl_push_scope(), !dbg !2906
  call void @Perl_save_re_context(), !dbg !2906
  %1461 = call signext i8 @Perl_is_utf8_mark(i8* getelementptr inbounds ([2 x i8]* @.str5, i32 0, i32 0)), !dbg !2906
  call void @Perl_pop_scope(), !dbg !2906
  br label %1462, !dbg !2906

; <label>:1462                                    ; preds = %1460, %1457
  %1463 = load %struct.sv** @PL_utf8_mark, align 8, !dbg !2909
  %1464 = call i64 @Perl_swash_fetch(%struct.sv* %1463, i8* %locinput.0, i8 signext %2), !dbg !2911
  %1465 = icmp ne i64 %1464, 0, !dbg !2912
  br i1 %1465, label %1466, label %1467, !dbg !2912

; <label>:1466                                    ; preds = %1462
  br label %5029, !dbg !2913

; <label>:1467                                    ; preds = %1462
  %1468 = sext i32 %nextchr.0 to i64, !dbg !2914
  %1469 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1468, !dbg !2914
  %1470 = load i8* %1469, align 1, !dbg !2914
  %1471 = zext i8 %1470 to i32, !dbg !2914
  %1472 = sext i32 %1471 to i64, !dbg !2915
  %1473 = getelementptr inbounds i8* %locinput.0, i64 %1472, !dbg !2915
  call void @llvm.dbg.value(metadata i8* %1473, i64 0, metadata !2057, metadata !566), !dbg !2058
  br label %1474, !dbg !2916

; <label>:1474                                    ; preds = %1483, %1467
  %locinput.4 = phi i8* [ %1473, %1467 ], [ %1490, %1483 ]
  %1475 = load i8** @PL_regeol, align 8, !dbg !2917
  %1476 = icmp ult i8* %locinput.4, %1475, !dbg !2918
  br i1 %1476, label %1477, label %1481, !dbg !2918

; <label>:1477                                    ; preds = %1474
  %1478 = load %struct.sv** @PL_utf8_mark, align 8, !dbg !2919
  %1479 = call i64 @Perl_swash_fetch(%struct.sv* %1478, i8* %locinput.4, i8 signext %2), !dbg !2920
  %1480 = icmp ne i64 %1479, 0, !dbg !2918
  br label %1481

; <label>:1481                                    ; preds = %1477, %1474
  %1482 = phi i1 [ false, %1474 ], [ %1480, %1477 ]
  br i1 %1482, label %1483, label %1491, !dbg !2921

; <label>:1483                                    ; preds = %1481
  %1484 = load i8* %locinput.4, align 1, !dbg !2923
  %1485 = zext i8 %1484 to i64, !dbg !2923
  %1486 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %1485, !dbg !2923
  %1487 = load i8* %1486, align 1, !dbg !2923
  %1488 = zext i8 %1487 to i32, !dbg !2923
  %1489 = sext i32 %1488 to i64, !dbg !2924
  %1490 = getelementptr inbounds i8* %locinput.4, i64 %1489, !dbg !2924
  call void @llvm.dbg.value(metadata i8* %1490, i64 0, metadata !2057, metadata !566), !dbg !2058
  br label %1474, !dbg !2916

; <label>:1491                                    ; preds = %1481
  %1492 = load i8** @PL_regeol, align 8, !dbg !2925
  %1493 = icmp ugt i8* %locinput.4, %1492, !dbg !2927
  br i1 %1493, label %1494, label %1495, !dbg !2928

; <label>:1494                                    ; preds = %1491
  br label %5029, !dbg !2929

; <label>:1495                                    ; preds = %1491
  br label %1498, !dbg !2930

; <label>:1496                                    ; preds = %1455
  %1497 = getelementptr inbounds i8* %locinput.0, i32 1, !dbg !2931
  call void @llvm.dbg.value(metadata i8* %1497, i64 0, metadata !2057, metadata !566), !dbg !2058
  br label %1498

; <label>:1498                                    ; preds = %1496, %1495
  %locinput.5 = phi i8* [ %locinput.4, %1495 ], [ %1497, %1496 ]
  %1499 = load i8* %locinput.5, align 1, !dbg !2932
  %1500 = zext i8 %1499 to i32, !dbg !2932
  call void @llvm.dbg.value(metadata i32 %1500, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !2933

; <label>:1501                                    ; preds = %15
  %1502 = load i32* @PL_reg_flags, align 4, !dbg !2934
  %1503 = or i32 %1502, 1, !dbg !2934
  store i32 %1503, i32* @PL_reg_flags, align 4, !dbg !2934
  br label %1504, !dbg !2934

; <label>:1504                                    ; preds = %1501, %15, %15
  %1505 = bitcast %struct.regnode* %scan.0 to %struct.regnode_1*, !dbg !2935
  %1506 = getelementptr inbounds %struct.regnode_1* %1505, i32 0, i32 3, !dbg !2935
  %1507 = load i32* %1506, align 4, !dbg !2935
  call void @llvm.dbg.value(metadata i32 %1507, i64 0, metadata !2607, metadata !566), !dbg !2608
  %1508 = sext i32 %1507 to i64, !dbg !2936
  %1509 = load i32** @PL_regstartp, align 8, !dbg !2936
  %1510 = getelementptr inbounds i32* %1509, i64 %1508, !dbg !2936
  %1511 = load i32* %1510, align 4, !dbg !2936
  call void @llvm.dbg.value(metadata i32 %1511, i64 0, metadata !2052, metadata !566), !dbg !2053
  %1512 = load i32* @PL_reg_maxiter, align 4, !dbg !2937
  store i32 %1512, i32* @PL_reg_leftiter, align 4, !dbg !2938
  %1513 = load i32** @PL_reglastparen, align 8, !dbg !2939
  %1514 = load i32* %1513, align 4, !dbg !2941
  %1515 = icmp slt i32 %1514, %1507, !dbg !2942
  br i1 %1515, label %1518, label %1516, !dbg !2943

; <label>:1516                                    ; preds = %1504
  %1517 = icmp eq i32 %1511, -1, !dbg !2944
  br i1 %1517, label %1518, label %1519, !dbg !2943

; <label>:1518                                    ; preds = %1516, %1504
  br label %5029, !dbg !2946

; <label>:1519                                    ; preds = %1516
  %1520 = sext i32 %1507 to i64, !dbg !2947
  %1521 = load i32** @PL_regendp, align 8, !dbg !2947
  %1522 = getelementptr inbounds i32* %1521, i64 %1520, !dbg !2947
  %1523 = load i32* %1522, align 4, !dbg !2947
  %1524 = icmp eq i32 %1511, %1523, !dbg !2949
  br i1 %1524, label %1525, label %1526, !dbg !2950

; <label>:1525                                    ; preds = %1519
  br label %5023, !dbg !2951

; <label>:1526                                    ; preds = %1519
  %1527 = load i8** @PL_bostr, align 8, !dbg !2952
  %1528 = sext i32 %1511 to i64, !dbg !2952
  %1529 = getelementptr inbounds i8* %1527, i64 %1528, !dbg !2952
  call void @llvm.dbg.value(metadata i8* %1529, i64 0, metadata !2054, metadata !566), !dbg !2055
  %1530 = sext i8 %2 to i32, !dbg !2953
  %1531 = icmp ne i32 %1530, 0, !dbg !2955
  br i1 %1531, label %1532, label %1580, !dbg !2955

; <label>:1532                                    ; preds = %1526
  %1533 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2956
  %1534 = load i8* %1533, align 1, !dbg !2956
  %1535 = zext i8 %1534 to i32, !dbg !2956
  %1536 = icmp ne i32 %1535, 47, !dbg !2956
  br i1 %1536, label %1537, label %1580, !dbg !2955

; <label>:1537                                    ; preds = %1532
  call void @llvm.dbg.value(metadata i8* %locinput.0, i64 0, metadata !2958, metadata !566), !dbg !2960
  %1538 = load i8** @PL_bostr, align 8, !dbg !2961
  %1539 = sext i32 %1507 to i64, !dbg !2962
  %1540 = load i32** @PL_regendp, align 8, !dbg !2962
  %1541 = getelementptr inbounds i32* %1540, i64 %1539, !dbg !2962
  %1542 = load i32* %1541, align 4, !dbg !2962
  %1543 = sext i32 %1542 to i64, !dbg !2961
  %1544 = getelementptr inbounds i8* %1538, i64 %1543, !dbg !2961
  call void @llvm.dbg.value(metadata i8* %1544, i64 0, metadata !2963, metadata !566), !dbg !2964
  %1545 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !2965
  %1546 = load i8* %1545, align 1, !dbg !2965
  %1547 = zext i8 %1546 to i32, !dbg !2965
  %1548 = icmp eq i32 %1547, 48, !dbg !2965
  br i1 %1548, label %1549, label %1577, !dbg !2967

; <label>:1549                                    ; preds = %1537
  call void @llvm.dbg.declare(metadata i64* %ulen1, metadata !2968, metadata !566), !dbg !2970
  call void @llvm.dbg.declare(metadata i64* %ulen2, metadata !2971, metadata !566), !dbg !2972
  call void @llvm.dbg.declare(metadata [7 x i8]* %tmpbuf1, metadata !2973, metadata !566), !dbg !2977
  call void @llvm.dbg.declare(metadata [7 x i8]* %tmpbuf2, metadata !2978, metadata !566), !dbg !2979
  br label %1550, !dbg !2980

; <label>:1550                                    ; preds = %1571, %1549
  %l3.0 = phi i8* [ %locinput.0, %1549 ], [ %1575, %1571 ]
  %s.2 = phi i8* [ %1529, %1549 ], [ %1573, %1571 ]
  %1551 = icmp ult i8* %s.2, %1544, !dbg !2981
  br i1 %1551, label %1552, label %1576, !dbg !2980

; <label>:1552                                    ; preds = %1550
  %1553 = load i8** @PL_regeol, align 8, !dbg !2982
  %1554 = icmp uge i8* %l3.0, %1553, !dbg !2985
  br i1 %1554, label %1555, label %1556, !dbg !2986

; <label>:1555                                    ; preds = %1552
  br label %5029, !dbg !2987

; <label>:1556                                    ; preds = %1552
  %1557 = getelementptr inbounds [7 x i8]* %tmpbuf1, i32 0, i32 0, !dbg !2988
  %1558 = call i64 @Perl_to_utf8_lower(i8* %s.2, i8* %1557, i64* %ulen1), !dbg !2988
  %1559 = getelementptr inbounds [7 x i8]* %tmpbuf2, i32 0, i32 0, !dbg !2989
  %1560 = call i64 @Perl_to_utf8_lower(i8* %l3.0, i8* %1559, i64* %ulen2), !dbg !2989
  %1561 = load i64* %ulen1, align 8, !dbg !2990
  %1562 = load i64* %ulen2, align 8, !dbg !2992
  %1563 = icmp ne i64 %1561, %1562, !dbg !2990
  br i1 %1563, label %1570, label %1564, !dbg !2993

; <label>:1564                                    ; preds = %1556
  %1565 = getelementptr inbounds [7 x i8]* %tmpbuf1, i32 0, i32 0, !dbg !2994
  %1566 = getelementptr inbounds [7 x i8]* %tmpbuf2, i32 0, i32 0, !dbg !2994
  %1567 = load i64* %ulen1, align 8, !dbg !2994
  %1568 = call i32 @memcmp(i8* %1565, i8* %1566, i64 %1567), !dbg !2994
  %1569 = icmp ne i32 %1568, 0, !dbg !2993
  br i1 %1569, label %1570, label %1571, !dbg !2993

; <label>:1570                                    ; preds = %1564, %1556
  br label %5029, !dbg !2996

; <label>:1571                                    ; preds = %1564
  %1572 = load i64* %ulen1, align 8, !dbg !2997
  %1573 = getelementptr inbounds i8* %s.2, i64 %1572, !dbg !2998
  call void @llvm.dbg.value(metadata i8* %1573, i64 0, metadata !2054, metadata !566), !dbg !2055
  %1574 = load i64* %ulen2, align 8, !dbg !2999
  %1575 = getelementptr inbounds i8* %l3.0, i64 %1574, !dbg !3000
  call void @llvm.dbg.value(metadata i8* %1575, i64 0, metadata !2958, metadata !566), !dbg !2960
  br label %1550, !dbg !2980

; <label>:1576                                    ; preds = %1550
  br label %1577, !dbg !3001

; <label>:1577                                    ; preds = %1576, %1537
  %l3.1 = phi i8* [ %l3.0, %1576 ], [ %locinput.0, %1537 ]
  call void @llvm.dbg.value(metadata i8* %l3.1, i64 0, metadata !2057, metadata !566), !dbg !2058
  %1578 = load i8* %l3.1, align 1, !dbg !3002
  %1579 = zext i8 %1578 to i32, !dbg !3002
  call void @llvm.dbg.value(metadata i32 %1579, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !3003

; <label>:1580                                    ; preds = %1532, %1526
  %1581 = load i8* %1529, align 1, !dbg !3004
  %1582 = zext i8 %1581 to i32, !dbg !3004
  %1583 = icmp ne i32 %1582, %nextchr.0, !dbg !3004
  br i1 %1583, label %1584, label %1603, !dbg !3006

; <label>:1584                                    ; preds = %1580
  %1585 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !3007
  %1586 = load i8* %1585, align 1, !dbg !3007
  %1587 = zext i8 %1586 to i32, !dbg !3007
  %1588 = icmp eq i32 %1587, 47, !dbg !3007
  br i1 %1588, label %1602, label %1589, !dbg !3006

; <label>:1589                                    ; preds = %1584
  %1590 = load i8* %1529, align 1, !dbg !3008
  %1591 = zext i8 %1590 to i32, !dbg !3008
  %1592 = sext i32 %nextchr.0 to i64, !dbg !3009
  %1593 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !3010
  %1594 = load i8* %1593, align 1, !dbg !3010
  %1595 = zext i8 %1594 to i32, !dbg !3010
  %1596 = icmp eq i32 %1595, 48, !dbg !3010
  %1597 = select i1 %1596, i8* getelementptr inbounds ([0 x i8]* @PL_fold, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8]* @PL_fold_locale, i32 0, i32 0), !dbg !3010
  %1598 = getelementptr inbounds i8* %1597, i64 %1592, !dbg !3009
  %1599 = load i8* %1598, align 1, !dbg !3009
  %1600 = zext i8 %1599 to i32, !dbg !3011
  %1601 = icmp ne i32 %1591, %1600, !dbg !3008
  br i1 %1601, label %1602, label %1603, !dbg !3006

; <label>:1602                                    ; preds = %1589, %1584
  br label %5029, !dbg !3012

; <label>:1603                                    ; preds = %1589, %1580
  %1604 = sext i32 %1507 to i64, !dbg !3013
  %1605 = load i32** @PL_regendp, align 8, !dbg !3013
  %1606 = getelementptr inbounds i32* %1605, i64 %1604, !dbg !3013
  %1607 = load i32* %1606, align 4, !dbg !3013
  %1608 = sub nsw i32 %1607, %1511, !dbg !3013
  call void @llvm.dbg.value(metadata i32 %1608, i64 0, metadata !2052, metadata !566), !dbg !2053
  %1609 = sext i32 %1608 to i64, !dbg !3014
  %1610 = getelementptr inbounds i8* %locinput.0, i64 %1609, !dbg !3014
  %1611 = load i8** @PL_regeol, align 8, !dbg !3016
  %1612 = icmp ugt i8* %1610, %1611, !dbg !3014
  br i1 %1612, label %1613, label %1614, !dbg !3017

; <label>:1613                                    ; preds = %1603
  br label %5029, !dbg !3018

; <label>:1614                                    ; preds = %1603
  %1615 = icmp sgt i32 %1608, 1, !dbg !3019
  br i1 %1615, label %1616, label %1637, !dbg !3021

; <label>:1616                                    ; preds = %1614
  %1617 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !3022
  %1618 = load i8* %1617, align 1, !dbg !3022
  %1619 = zext i8 %1618 to i32, !dbg !3022
  %1620 = icmp eq i32 %1619, 47, !dbg !3022
  br i1 %1620, label %1621, label %1625, !dbg !3021

; <label>:1621                                    ; preds = %1616
  %1622 = sext i32 %1608 to i64, !dbg !3024
  %1623 = call i32 @memcmp(i8* %1529, i8* %locinput.0, i64 %1622), !dbg !3024
  %1624 = icmp ne i32 %1623, 0, !dbg !3021
  br i1 %1624, label %1636, label %1637, !dbg !3021

; <label>:1625                                    ; preds = %1616
  %1626 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !3025
  %1627 = load i8* %1626, align 1, !dbg !3025
  %1628 = zext i8 %1627 to i32, !dbg !3025
  %1629 = icmp eq i32 %1628, 48, !dbg !3025
  br i1 %1629, label %1630, label %1633, !dbg !3021

; <label>:1630                                    ; preds = %1625
  %1631 = call i32 @Perl_ibcmp(i8* %1529, i8* %locinput.0, i32 %1608), !dbg !3026
  %1632 = icmp ne i32 %1631, 0, !dbg !3021
  br i1 %1632, label %1636, label %1637, !dbg !3021

; <label>:1633                                    ; preds = %1625
  %1634 = call i32 @Perl_ibcmp_locale(i8* %1529, i8* %locinput.0, i32 %1608), !dbg !3027
  %1635 = icmp ne i32 %1634, 0, !dbg !3021
  br i1 %1635, label %1636, label %1637, !dbg !3021

; <label>:1636                                    ; preds = %1633, %1630, %1621
  br label %5029, !dbg !3028

; <label>:1637                                    ; preds = %1633, %1630, %1621, %1614
  %1638 = sext i32 %1608 to i64, !dbg !3029
  %1639 = getelementptr inbounds i8* %locinput.0, i64 %1638, !dbg !3029
  call void @llvm.dbg.value(metadata i8* %1639, i64 0, metadata !2057, metadata !566), !dbg !2058
  %1640 = load i8* %1639, align 1, !dbg !3030
  %1641 = zext i8 %1640 to i32, !dbg !3030
  call void @llvm.dbg.value(metadata i32 %1641, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5023, !dbg !3031

; <label>:1642                                    ; preds = %15, %15
  br label %5023, !dbg !3032

; <label>:1643                                    ; preds = %15
  br label %5023, !dbg !3033

; <label>:1644                                    ; preds = %15
  %1645 = load %struct.sv*** @PL_stack_sp, align 8, !dbg !3034
  call void @llvm.dbg.value(metadata %struct.sv** %1645, i64 0, metadata !3036, metadata !566), !dbg !3034
  %1646 = load %struct.op** @PL_op, align 8, !dbg !3037
  call void @llvm.dbg.value(metadata %struct.op* %1646, i64 0, metadata !3038, metadata !566), !dbg !3039
  %1647 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3040
  call void @llvm.dbg.value(metadata %struct.cop* %1647, i64 0, metadata !3041, metadata !566), !dbg !3063
  %1648 = load %struct.regexp** @PL_reg_re, align 8, !dbg !3064
  call void @llvm.dbg.value(metadata %struct.regexp* %1648, i64 0, metadata !3065, metadata !566), !dbg !3067
  %1649 = bitcast %struct.regnode* %scan.0 to %struct.regnode_1*, !dbg !3068
  %1650 = getelementptr inbounds %struct.regnode_1* %1649, i32 0, i32 3, !dbg !3068
  %1651 = load i32* %1650, align 4, !dbg !3068
  call void @llvm.dbg.value(metadata i32 %1651, i64 0, metadata !2607, metadata !566), !dbg !2608
  %1652 = sext i32 %1651 to i64, !dbg !3069
  %1653 = load %struct.reg_data** @PL_regdata, align 8, !dbg !3069
  %1654 = getelementptr inbounds %struct.reg_data* %1653, i32 0, i32 2, !dbg !3069
  %1655 = getelementptr inbounds [1 x i8*]* %1654, i32 0, i64 %1652, !dbg !3069
  %1656 = load i8** %1655, align 8, !dbg !3069
  %1657 = bitcast i8* %1656 to %struct.op*, !dbg !3070
  store %struct.op* %1657, %struct.op** @PL_op, align 8, !dbg !3071
  %1658 = load %struct.av** @PL_comppad, align 8, !dbg !3072
  call void @llvm.dbg.value(metadata %struct.av* %1658, i64 0, metadata !3073, metadata !566), !dbg !3074
  %1659 = add nsw i32 %1651, 2, !dbg !3072
  %1660 = sext i32 %1659 to i64, !dbg !3072
  %1661 = load %struct.reg_data** @PL_regdata, align 8, !dbg !3072
  %1662 = getelementptr inbounds %struct.reg_data* %1661, i32 0, i32 2, !dbg !3072
  %1663 = getelementptr inbounds [1 x i8*]* %1662, i32 0, i64 %1660, !dbg !3072
  %1664 = load i8** %1663, align 8, !dbg !3072
  %1665 = bitcast i8* %1664 to %struct.av*, !dbg !3072
  store %struct.av* %1665, %struct.av** @PL_comppad, align 8, !dbg !3072
  %1666 = load %struct.av** @PL_comppad, align 8, !dbg !3072
  %1667 = icmp ne %struct.av* %1666, null, !dbg !3072
  br i1 %1667, label %1668, label %1675, !dbg !3072

; <label>:1668                                    ; preds = %1644
  %1669 = load %struct.av** @PL_comppad, align 8, !dbg !3075
  %1670 = getelementptr inbounds %struct.av* %1669, i32 0, i32 0, !dbg !3075
  %1671 = load %struct.xpvav** %1670, align 8, !dbg !3075
  %1672 = getelementptr inbounds %struct.xpvav* %1671, i32 0, i32 0, !dbg !3075
  %1673 = load i8** %1672, align 8, !dbg !3075
  %1674 = bitcast i8* %1673 to %struct.sv**, !dbg !3075
  br label %1676, !dbg !3075

; <label>:1675                                    ; preds = %1644
  br label %1676, !dbg !3077

; <label>:1676                                    ; preds = %1675, %1668
  %1677 = phi %struct.sv** [ %1674, %1668 ], [ null, %1675 ], !dbg !3072
  store %struct.sv** %1677, %struct.sv*** @PL_curpad, align 8, !dbg !3079
  %1678 = load i8** @PL_bostr, align 8, !dbg !3082
  %1679 = ptrtoint i8* %locinput.0 to i64, !dbg !3083
  %1680 = ptrtoint i8* %1678 to i64, !dbg !3083
  %1681 = sub i64 %1679, %1680, !dbg !3083
  %1682 = trunc i64 %1681 to i32, !dbg !3083
  %1683 = load %struct.magic** @PL_reg_magic, align 8, !dbg !3084
  %1684 = getelementptr inbounds %struct.magic* %1683, i32 0, i32 7, !dbg !3084
  store i32 %1682, i32* %1684, align 4, !dbg !3084
  %1685 = load i32** @PL_regendp, align 8, !dbg !3085
  %1686 = getelementptr inbounds i32* %1685, i64 0, !dbg !3085
  store i32 %1682, i32* %1686, align 4, !dbg !3085
  call void @llvm.dbg.value(metadata %struct.sv** %1645, i64 0, metadata !3086, metadata !566), !dbg !3088
  %1687 = load i32 ()** @PL_runops, align 8, !dbg !3089
  %1688 = call i32 %1687(), !dbg !3089
  %1689 = load %struct.sv*** @PL_stack_sp, align 8, !dbg !3090
  call void @llvm.dbg.value(metadata %struct.sv** %1689, i64 0, metadata !3036, metadata !566), !dbg !3034
  %1690 = icmp eq %struct.sv** %1689, %1645, !dbg !3091
  br i1 %1690, label %1691, label %1692, !dbg !3093

; <label>:1691                                    ; preds = %1676
  call void @llvm.dbg.value(metadata %struct.sv* @PL_sv_undef, i64 0, metadata !3094, metadata !566), !dbg !3095
  br label %1695, !dbg !3096

; <label>:1692                                    ; preds = %1676
  %1693 = getelementptr inbounds %struct.sv** %1689, i32 -1, !dbg !3097
  call void @llvm.dbg.value(metadata %struct.sv** %1693, i64 0, metadata !3036, metadata !566), !dbg !3034
  %1694 = load %struct.sv** %1689, align 8, !dbg !3097
  call void @llvm.dbg.value(metadata %struct.sv* %1694, i64 0, metadata !3094, metadata !566), !dbg !3095
  store %struct.sv** %1693, %struct.sv*** @PL_stack_sp, align 8, !dbg !3099
  br label %1695

; <label>:1695                                    ; preds = %1692, %1691
  %ret.0 = phi %struct.sv* [ @PL_sv_undef, %1691 ], [ %1694, %1692 ]
  store %struct.op* %1646, %struct.op** @PL_op, align 8, !dbg !3100
  store %struct.av* %1658, %struct.av** @PL_comppad, align 8, !dbg !3101
  %1696 = load %struct.av** @PL_comppad, align 8, !dbg !3101
  %1697 = icmp ne %struct.av* %1696, null, !dbg !3101
  br i1 %1697, label %1698, label %1705, !dbg !3101

; <label>:1698                                    ; preds = %1695
  %1699 = load %struct.av** @PL_comppad, align 8, !dbg !3102
  %1700 = getelementptr inbounds %struct.av* %1699, i32 0, i32 0, !dbg !3102
  %1701 = load %struct.xpvav** %1700, align 8, !dbg !3102
  %1702 = getelementptr inbounds %struct.xpvav* %1701, i32 0, i32 0, !dbg !3102
  %1703 = load i8** %1702, align 8, !dbg !3102
  %1704 = bitcast i8* %1703 to %struct.sv**, !dbg !3102
  br label %1706, !dbg !3102

; <label>:1705                                    ; preds = %1695
  br label %1706, !dbg !3103

; <label>:1706                                    ; preds = %1705, %1698
  %1707 = phi %struct.sv** [ %1704, %1698 ], [ null, %1705 ], !dbg !3101
  store %struct.sv** %1707, %struct.sv*** @PL_curpad, align 8, !dbg !3104
  store volatile %struct.cop* %1647, %struct.cop** @PL_curcop, align 8, !dbg !3105
  %1708 = icmp ne i32 %logical.0, 0, !dbg !3106
  br i1 %1708, label %1709, label %1969, !dbg !3106

; <label>:1709                                    ; preds = %1706
  %1710 = icmp eq i32 %logical.0, 2, !dbg !3107
  br i1 %1710, label %1711, label %1895, !dbg !3111

; <label>:1711                                    ; preds = %1709
  call void @llvm.dbg.value(metadata %struct.magic* null, i64 0, metadata !3112, metadata !566), !dbg !3114
  call void @llvm.dbg.declare(metadata %struct.re_cc_state* %state, metadata !3115, metadata !566), !dbg !3138
  %1712 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 2, !dbg !3139
  %1713 = load i32* %1712, align 4, !dbg !3139
  %1714 = and i32 %1713, 524288, !dbg !3139
  %1715 = icmp ne i32 %1714, 0, !dbg !3141
  br i1 %1715, label %1716, label %1728, !dbg !3141

; <label>:1716                                    ; preds = %1711
  %1717 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 0, !dbg !3142
  %1718 = load i8** %1717, align 8, !dbg !3142
  %1719 = bitcast i8* %1718 to %struct.xrv*, !dbg !3142
  %1720 = getelementptr inbounds %struct.xrv* %1719, i32 0, i32 0, !dbg !3142
  %1721 = load %struct.sv** %1720, align 8, !dbg !3142
  call void @llvm.dbg.value(metadata %struct.sv* %1721, i64 0, metadata !3144, metadata !566), !dbg !3145
  %1722 = getelementptr inbounds %struct.sv* %1721, i32 0, i32 2, !dbg !3142
  %1723 = load i32* %1722, align 4, !dbg !3142
  %1724 = and i32 %1723, 16384, !dbg !3142
  %1725 = icmp ne i32 %1724, 0, !dbg !3141
  br i1 %1725, label %1726, label %1728, !dbg !3141

; <label>:1726                                    ; preds = %1716
  %1727 = call %struct.magic* @Perl_mg_find(%struct.sv* %1721, i32 114), !dbg !3146
  call void @llvm.dbg.value(metadata %struct.magic* %1727, i64 0, metadata !3112, metadata !566), !dbg !3114
  br label %1744, !dbg !3147

; <label>:1728                                    ; preds = %1716, %1711
  %1729 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 2, !dbg !3148
  %1730 = load i32* %1729, align 4, !dbg !3148
  %1731 = and i32 %1730, 16384, !dbg !3148
  %1732 = icmp ne i32 %1731, 0, !dbg !3150
  br i1 %1732, label %1733, label %1743, !dbg !3150

; <label>:1733                                    ; preds = %1728
  %1734 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 2, !dbg !3151
  %1735 = load i32* %1734, align 4, !dbg !3151
  %1736 = and i32 %1735, 8192, !dbg !3151
  %1737 = icmp ne i32 %1736, 0, !dbg !3154
  br i1 %1737, label %1738, label %1740, !dbg !3154

; <label>:1738                                    ; preds = %1733
  %1739 = call i32 @Perl_sv_unmagic(%struct.sv* %ret.0, i32 114), !dbg !3155
  br label %1742, !dbg !3155

; <label>:1740                                    ; preds = %1733
  %1741 = call %struct.magic* @Perl_mg_find(%struct.sv* %ret.0, i32 114), !dbg !3156
  call void @llvm.dbg.value(metadata %struct.magic* %1741, i64 0, metadata !3112, metadata !566), !dbg !3114
  br label %1742

; <label>:1742                                    ; preds = %1740, %1738
  %mg.0 = phi %struct.magic* [ null, %1738 ], [ %1741, %1740 ]
  br label %1743, !dbg !3157

; <label>:1743                                    ; preds = %1742, %1728
  %mg.1 = phi %struct.magic* [ %mg.0, %1742 ], [ null, %1728 ]
  br label %1744

; <label>:1744                                    ; preds = %1743, %1726
  %mg.2 = phi %struct.magic* [ %1727, %1726 ], [ %mg.1, %1743 ]
  %1745 = icmp ne %struct.magic* %mg.2, null, !dbg !3158
  br i1 %1745, label %1746, label %1759, !dbg !3158

; <label>:1746                                    ; preds = %1744
  %1747 = getelementptr inbounds %struct.magic* %mg.2, i32 0, i32 5, !dbg !3159
  %1748 = load %struct.sv** %1747, align 8, !dbg !3159
  %1749 = bitcast %struct.sv* %1748 to %struct.regexp*, !dbg !3162
  call void @llvm.dbg.value(metadata %struct.regexp* %1749, i64 0, metadata !3163, metadata !566), !dbg !3164
  %1750 = icmp ne %struct.regexp* %1749, null, !dbg !3165
  br i1 %1750, label %1751, label %1756, !dbg !3165

; <label>:1751                                    ; preds = %1746
  %1752 = getelementptr inbounds %struct.regexp* %1749, i32 0, i32 9, !dbg !3166
  %1753 = load i32* %1752, align 4, !dbg !3166
  %1754 = add nsw i32 %1753, 1, !dbg !3166
  store i32 %1754, i32* %1752, align 4, !dbg !3166
  %1755 = icmp ne i32 %1753, 0, !dbg !3166
  br label %1756

; <label>:1756                                    ; preds = %1751, %1746
  %1757 = phi i1 [ false, %1746 ], [ %1755, %1751 ]
  %1758 = zext i1 %1757 to i32, !dbg !3168
  br label %1821, !dbg !3170

; <label>:1759                                    ; preds = %1744
  call void @llvm.dbg.declare(metadata i64* %len, metadata !3171, metadata !566), !dbg !3173
  %1760 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 2, !dbg !3174
  %1761 = load i32* %1760, align 4, !dbg !3174
  %1762 = and i32 %1761, 262144, !dbg !3174
  %1763 = icmp eq i32 %1762, 262144, !dbg !3174
  br i1 %1763, label %1764, label %1775, !dbg !3174

; <label>:1764                                    ; preds = %1759
  %1765 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 0, !dbg !3175
  %1766 = load i8** %1765, align 8, !dbg !3175
  %1767 = bitcast i8* %1766 to %struct.xpv*, !dbg !3175
  %1768 = getelementptr inbounds %struct.xpv* %1767, i32 0, i32 1, !dbg !3175
  %1769 = load i64* %1768, align 8, !dbg !3175
  store i64 %1769, i64* %len, align 8, !dbg !3175
  %1770 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 0, !dbg !3175
  %1771 = load i8** %1770, align 8, !dbg !3175
  %1772 = bitcast i8* %1771 to %struct.xpv*, !dbg !3175
  %1773 = getelementptr inbounds %struct.xpv* %1772, i32 0, i32 0, !dbg !3175
  %1774 = load i8** %1773, align 8, !dbg !3175
  br label %1777, !dbg !3175

; <label>:1775                                    ; preds = %1759
  %1776 = call i8* @Perl_sv_2pv_flags(%struct.sv* %ret.0, i64* %len, i32 2), !dbg !3177
  br label %1777, !dbg !3177

; <label>:1777                                    ; preds = %1775, %1764
  %1778 = phi i8* [ %1774, %1764 ], [ %1776, %1775 ], !dbg !3174
  call void @llvm.dbg.value(metadata i8* %1778, i64 0, metadata !3179, metadata !566), !dbg !3180
  call void @llvm.dbg.declare(metadata %struct.pmop* %pm, metadata !3181, metadata !566), !dbg !3182
  %1779 = load i8** @PL_regprecomp, align 8, !dbg !3183
  call void @llvm.dbg.value(metadata i8* %1779, i64 0, metadata !3184, metadata !566), !dbg !3185
  %1780 = load i32* @PL_regsize, align 4, !dbg !3186
  call void @llvm.dbg.value(metadata i32 %1780, i64 0, metadata !3187, metadata !566), !dbg !3188
  %1781 = load i32* @PL_regnpar, align 4, !dbg !3189
  call void @llvm.dbg.value(metadata i32 %1781, i64 0, metadata !3190, metadata !566), !dbg !3191
  %1782 = bitcast %struct.pmop* %pm to i8*, !dbg !3192
  call void @llvm.memset.p0i8.i64(i8* %1782, i8 0, i64 112, i32 1, i1 false), !dbg !3192
  %1783 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 2, !dbg !3193
  %1784 = load i32* %1783, align 4, !dbg !3193
  %1785 = and i32 %1784, 536870912, !dbg !3193
  %1786 = icmp ne i32 %1785, 0, !dbg !3195
  br i1 %1786, label %1787, label %1800, !dbg !3195

; <label>:1787                                    ; preds = %1777
  %1788 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3196
  %1789 = getelementptr inbounds %struct.cop* %1788, i32 0, i32 7, !dbg !3196
  %1790 = load i8* %1789, align 1, !dbg !3196
  %1791 = zext i8 %1790 to i32, !dbg !3196
  %1792 = and i32 %1791, 8, !dbg !3196
  %1793 = icmp ne i32 %1792, 0, !dbg !3195
  br i1 %1793, label %1800, label %1794, !dbg !3195

; <label>:1794                                    ; preds = %1787
  %1795 = getelementptr inbounds %struct.pmop* %pm, i32 0, i32 16, !dbg !3198
  %1796 = load i8* %1795, align 1, !dbg !3198
  %1797 = zext i8 %1796 to i32, !dbg !3198
  %1798 = or i32 %1797, 8, !dbg !3198
  %1799 = trunc i32 %1798 to i8, !dbg !3198
  store i8 %1799, i8* %1795, align 1, !dbg !3198
  br label %1800, !dbg !3198

; <label>:1800                                    ; preds = %1794, %1787, %1777
  %1801 = load %struct.regexp* (i8*, i8*, %struct.pmop*)** @PL_regcompp, align 8, !dbg !3200
  %1802 = load i64* %len, align 8, !dbg !3201
  %1803 = getelementptr inbounds i8* %1778, i64 %1802, !dbg !3202
  %1804 = call %struct.regexp* %1801(i8* %1778, i8* %1803, %struct.pmop* %pm), !dbg !3200
  call void @llvm.dbg.value(metadata %struct.regexp* %1804, i64 0, metadata !3163, metadata !566), !dbg !3164
  %1805 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 2, !dbg !3203
  %1806 = load i32* %1805, align 4, !dbg !3203
  %1807 = and i32 %1806, 8399360, !dbg !3203
  %1808 = icmp ne i32 %1807, 0, !dbg !3205
  br i1 %1808, label %1820, label %1809, !dbg !3205

; <label>:1809                                    ; preds = %1800
  %1810 = icmp ne %struct.regexp* %1804, null, !dbg !3206
  br i1 %1810, label %1811, label %1816, !dbg !3206

; <label>:1811                                    ; preds = %1809
  %1812 = getelementptr inbounds %struct.regexp* %1804, i32 0, i32 9, !dbg !3207
  %1813 = load i32* %1812, align 4, !dbg !3207
  %1814 = add nsw i32 %1813, 1, !dbg !3207
  store i32 %1814, i32* %1812, align 4, !dbg !3207
  %1815 = icmp ne i32 %1813, 0, !dbg !3207
  br label %1816

; <label>:1816                                    ; preds = %1811, %1809
  %1817 = phi i1 [ false, %1809 ], [ %1815, %1811 ]
  %1818 = zext i1 %1817 to i32, !dbg !3209
  %1819 = bitcast %struct.regexp* %1804 to %struct.sv*, !dbg !3211
  call void @Perl_sv_magic(%struct.sv* %ret.0, %struct.sv* %1819, i32 114, i8* null, i32 0), !dbg !3212
  br label %1820, !dbg !3212

; <label>:1820                                    ; preds = %1816, %1800
  store i8* %1779, i8** @PL_regprecomp, align 8, !dbg !3213
  store i32 %1780, i32* @PL_regsize, align 4, !dbg !3214
  store i32 %1781, i32* @PL_regnpar, align 4, !dbg !3215
  br label %1821

; <label>:1821                                    ; preds = %1820, %1756
  %re.0 = phi %struct.regexp* [ %1749, %1756 ], [ %1804, %1820 ]
  %1822 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 1, !dbg !3216
  store %struct.regnode* %next.0, %struct.regnode** %1822, align 8, !dbg !3216
  %1823 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !3217
  %1824 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 2, !dbg !3218
  store %struct.re_cc_state* %1823, %struct.re_cc_state** %1824, align 8, !dbg !3218
  %1825 = load %struct.curcur** @PL_regcc, align 8, !dbg !3219
  %1826 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 3, !dbg !3220
  store %struct.curcur* %1825, %struct.curcur** %1826, align 8, !dbg !3220
  %1827 = load %struct.regexp** @PL_reg_re, align 8, !dbg !3221
  %1828 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 4, !dbg !3222
  store %struct.regexp* %1827, %struct.regexp** %1828, align 8, !dbg !3222
  store %struct.curcur* null, %struct.curcur** @PL_regcc, align 8, !dbg !3223
  %1829 = call i32 (i32, ...)* bitcast (i32 (...)* @regcppush to i32 (i32, ...)*)(i32 0), !dbg !3224
  call void @llvm.dbg.value(metadata i32 %1829, i64 0, metadata !3225, metadata !566), !dbg !3226
  %1830 = load i32* @PL_savestack_ix, align 4, !dbg !3227
  call void @llvm.dbg.value(metadata i32 %1830, i64 0, metadata !3228, metadata !566), !dbg !3229
  %1831 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %re.0), !dbg !3230
  %1832 = load i32* @PL_savestack_ix, align 4, !dbg !3231
  %1833 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 0, !dbg !3232
  store i32 %1832, i32* %1833, align 4, !dbg !3232
  %1834 = load i32** @PL_reglastparen, align 8, !dbg !3233
  store i32 0, i32* %1834, align 4, !dbg !3234
  %1835 = load i32** @PL_reglastcloseparen, align 8, !dbg !3235
  store i32 0, i32* %1835, align 4, !dbg !3236
  store %struct.re_cc_state* %state, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !3237
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !3238
  %1836 = load i32* @PL_reg_flags, align 4, !dbg !3239
  %1837 = and i32 %1836, 8, !dbg !3239
  %1838 = icmp ne i32 %1837, 0, !dbg !3240
  %1839 = zext i1 %1838 to i32, !dbg !3240
  %1840 = getelementptr inbounds %struct.regexp* %re.0, i32 0, i32 15, !dbg !3241
  %1841 = load i32* %1840, align 4, !dbg !3241
  %1842 = and i32 %1841, 65536, !dbg !3241
  %1843 = icmp ne i32 %1842, 0, !dbg !3242
  %1844 = zext i1 %1843 to i32, !dbg !3242
  %1845 = xor i32 %1839, %1844, !dbg !3243
  call void @llvm.dbg.value(metadata i32 %1845, i64 0, metadata !3244, metadata !566), !dbg !3245
  %1846 = icmp ne i32 %1845, 0, !dbg !3246
  br i1 %1846, label %1847, label %1850, !dbg !3246

; <label>:1847                                    ; preds = %1821
  %1848 = load i32* @PL_reg_flags, align 4, !dbg !3247
  %1849 = xor i32 %1848, 8, !dbg !3247
  store i32 %1849, i32* @PL_reg_flags, align 4, !dbg !3247
  br label %1850, !dbg !3247

; <label>:1850                                    ; preds = %1847, %1821
  store i32 0, i32* @PL_reg_maxiter, align 4, !dbg !3250
  %1851 = getelementptr inbounds %struct.regexp* %re.0, i32 0, i32 16, !dbg !3251
  %1852 = getelementptr inbounds [1 x %struct.regnode]* %1851, i32 0, i32 0, !dbg !3251
  %1853 = getelementptr inbounds %struct.regnode* %1852, i64 1, !dbg !3251
  %1854 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %1853), !dbg !3253
  %1855 = icmp ne i32 %1854, 0, !dbg !3254
  br i1 %1855, label %1856, label %1875, !dbg !3254

; <label>:1856                                    ; preds = %1850
  %1857 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 2, !dbg !3255
  %1858 = load %struct.re_cc_state** %1857, align 8, !dbg !3255
  store %struct.re_cc_state* %1858, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !3257
  %1859 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 3, !dbg !3258
  %1860 = load %struct.curcur** %1859, align 8, !dbg !3258
  store %struct.curcur* %1860, %struct.curcur** @PL_regcc, align 8, !dbg !3259
  %1861 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 4, !dbg !3260
  %1862 = load %struct.regexp** %1861, align 8, !dbg !3260
  store %struct.regexp* %1862, %struct.regexp** @PL_reg_re, align 8, !dbg !3261
  %1863 = load %struct.regexp** @PL_reg_re, align 8, !dbg !3262
  %1864 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %1863), !dbg !3263
  %1865 = icmp ne i32 %1845, 0, !dbg !3264
  br i1 %1865, label %1866, label %1869, !dbg !3264

; <label>:1866                                    ; preds = %1856
  %1867 = load i32* @PL_reg_flags, align 4, !dbg !3265
  %1868 = xor i32 %1867, 8, !dbg !3265
  store i32 %1868, i32* @PL_reg_flags, align 4, !dbg !3265
  br label %1869, !dbg !3265

; <label>:1869                                    ; preds = %1866, %1856
  store i32 0, i32* @PL_reg_maxiter, align 4, !dbg !3268
  %1870 = load void (%struct.regexp*)** @PL_regfree, align 8, !dbg !3269
  call void %1870(%struct.regexp* %re.0), !dbg !3269
  %1871 = load i32* @PL_savestack_ix, align 4, !dbg !3270
  %1872 = icmp sgt i32 %1871, %1829, !dbg !3270
  br i1 %1872, label %1873, label %1874, !dbg !3272

; <label>:1873                                    ; preds = %1869
  call void @Perl_leave_scope(i32 %1829), !dbg !3273
  br label %1874, !dbg !3273

; <label>:1874                                    ; preds = %1873, %1869
  br label %5028, !dbg !3275

; <label>:1875                                    ; preds = %1850
  %1876 = load void (%struct.regexp*)** @PL_regfree, align 8, !dbg !3276
  call void %1876(%struct.regexp* %re.0), !dbg !3276
  %1877 = load i32* @PL_savestack_ix, align 4, !dbg !3277
  %1878 = icmp sgt i32 %1877, %1830, !dbg !3277
  br i1 %1878, label %1879, label %1880, !dbg !3279

; <label>:1879                                    ; preds = %1875
  call void @Perl_leave_scope(i32 %1830), !dbg !3280
  br label %1880, !dbg !3280

; <label>:1880                                    ; preds = %1879, %1875
  %1881 = call i32 (...)* @regcppop(), !dbg !3282
  %1882 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 2, !dbg !3283
  %1883 = load %struct.re_cc_state** %1882, align 8, !dbg !3283
  store %struct.re_cc_state* %1883, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !3284
  %1884 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 3, !dbg !3285
  %1885 = load %struct.curcur** %1884, align 8, !dbg !3285
  store %struct.curcur* %1885, %struct.curcur** @PL_regcc, align 8, !dbg !3286
  %1886 = getelementptr inbounds %struct.re_cc_state* %state, i32 0, i32 4, !dbg !3287
  %1887 = load %struct.regexp** %1886, align 8, !dbg !3287
  store %struct.regexp* %1887, %struct.regexp** @PL_reg_re, align 8, !dbg !3288
  %1888 = load %struct.regexp** @PL_reg_re, align 8, !dbg !3289
  %1889 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %1888), !dbg !3290
  %1890 = icmp ne i32 %1845, 0, !dbg !3291
  br i1 %1890, label %1891, label %1894, !dbg !3291

; <label>:1891                                    ; preds = %1880
  %1892 = load i32* @PL_reg_flags, align 4, !dbg !3292
  %1893 = xor i32 %1892, 8, !dbg !3292
  store i32 %1893, i32* @PL_reg_flags, align 4, !dbg !3292
  br label %1894, !dbg !3292

; <label>:1894                                    ; preds = %1891, %1880
  store i32 0, i32* @PL_reg_maxiter, align 4, !dbg !3295
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2067, metadata !566), !dbg !2068
  br label %5029, !dbg !3296

; <label>:1895                                    ; preds = %1709
  %1896 = icmp ne %struct.sv* %ret.0, null, !dbg !3297
  br i1 %1896, label %1898, label %1897, !dbg !3297

; <label>:1897                                    ; preds = %1895
  br label %1967, !dbg !3298

; <label>:1898                                    ; preds = %1895
  %1899 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 2, !dbg !3300
  %1900 = load i32* %1899, align 4, !dbg !3300
  %1901 = and i32 %1900, 262144, !dbg !3300
  %1902 = icmp ne i32 %1901, 0, !dbg !3300
  br i1 %1902, label %1903, label %1932, !dbg !3300

; <label>:1903                                    ; preds = %1898
  %1904 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 0, !dbg !3302
  %1905 = load i8** %1904, align 8, !dbg !3302
  %1906 = bitcast i8* %1905 to %struct.xpv*, !dbg !3302
  store %struct.xpv* %1906, %struct.xpv** @PL_Xpv, align 8, !dbg !3302
  %1907 = icmp ne %struct.xpv* %1906, null, !dbg !3302
  br i1 %1907, label %1908, label %1929, !dbg !3302

; <label>:1908                                    ; preds = %1903
  %1909 = load %struct.xpv** @PL_Xpv, align 8, !dbg !3304
  %1910 = getelementptr inbounds %struct.xpv* %1909, i32 0, i32 1, !dbg !3304
  %1911 = load i64* %1910, align 8, !dbg !3304
  %1912 = icmp ugt i64 %1911, 1, !dbg !3304
  br i1 %1912, label %1927, label %1913, !dbg !3304

; <label>:1913                                    ; preds = %1908
  %1914 = load %struct.xpv** @PL_Xpv, align 8, !dbg !3306
  %1915 = getelementptr inbounds %struct.xpv* %1914, i32 0, i32 1, !dbg !3306
  %1916 = load i64* %1915, align 8, !dbg !3306
  %1917 = icmp ne i64 %1916, 0, !dbg !3306
  br i1 %1917, label %1918, label %1925, !dbg !3306

; <label>:1918                                    ; preds = %1913
  %1919 = load %struct.xpv** @PL_Xpv, align 8, !dbg !3308
  %1920 = getelementptr inbounds %struct.xpv* %1919, i32 0, i32 0, !dbg !3308
  %1921 = load i8** %1920, align 8, !dbg !3308
  %1922 = load i8* %1921, align 1, !dbg !3308
  %1923 = sext i8 %1922 to i32, !dbg !3308
  %1924 = icmp ne i32 %1923, 48, !dbg !3308
  br label %1925

; <label>:1925                                    ; preds = %1918, %1913
  %1926 = phi i1 [ false, %1913 ], [ %1924, %1918 ]
  br label %1927, !dbg !3310

; <label>:1927                                    ; preds = %1925, %1908
  %1928 = phi i1 [ true, %1908 ], [ %1926, %1925 ]
  br label %1929

; <label>:1929                                    ; preds = %1927, %1903
  %1930 = phi i1 [ false, %1903 ], [ %1928, %1927 ]
  %1931 = select i1 %1930, i32 1, i32 0, !dbg !3312
  br label %1965, !dbg !3312

; <label>:1932                                    ; preds = %1898
  %1933 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 2, !dbg !3314
  %1934 = load i32* %1933, align 4, !dbg !3314
  %1935 = and i32 %1934, 65536, !dbg !3314
  %1936 = icmp ne i32 %1935, 0, !dbg !3314
  br i1 %1936, label %1937, label %1945, !dbg !3314

; <label>:1937                                    ; preds = %1932
  %1938 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 0, !dbg !3316
  %1939 = load i8** %1938, align 8, !dbg !3316
  %1940 = bitcast i8* %1939 to %struct.xpviv*, !dbg !3316
  %1941 = getelementptr inbounds %struct.xpviv* %1940, i32 0, i32 3, !dbg !3316
  %1942 = load i64* %1941, align 8, !dbg !3316
  %1943 = icmp ne i64 %1942, 0, !dbg !3316
  %1944 = zext i1 %1943 to i32, !dbg !3316
  br label %1963, !dbg !3316

; <label>:1945                                    ; preds = %1932
  %1946 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 2, !dbg !3318
  %1947 = load i32* %1946, align 4, !dbg !3318
  %1948 = and i32 %1947, 131072, !dbg !3318
  %1949 = icmp ne i32 %1948, 0, !dbg !3318
  br i1 %1949, label %1950, label %1958, !dbg !3318

; <label>:1950                                    ; preds = %1945
  %1951 = getelementptr inbounds %struct.sv* %ret.0, i32 0, i32 0, !dbg !3320
  %1952 = load i8** %1951, align 8, !dbg !3320
  %1953 = bitcast i8* %1952 to %struct.xpvnv*, !dbg !3320
  %1954 = getelementptr inbounds %struct.xpvnv* %1953, i32 0, i32 4, !dbg !3320
  %1955 = load double* %1954, align 8, !dbg !3320
  %1956 = fcmp une double %1955, 0.000000e+00, !dbg !3320
  %1957 = zext i1 %1956 to i32, !dbg !3320
  br label %1961, !dbg !3320

; <label>:1958                                    ; preds = %1945
  %1959 = call signext i8 @Perl_sv_2bool(%struct.sv* %ret.0), !dbg !3322
  %1960 = sext i8 %1959 to i32, !dbg !3322
  br label %1961, !dbg !3322

; <label>:1961                                    ; preds = %1958, %1950
  %1962 = phi i32 [ %1957, %1950 ], [ %1960, %1958 ], !dbg !3297
  br label %1963, !dbg !3324

; <label>:1963                                    ; preds = %1961, %1937
  %1964 = phi i32 [ %1944, %1937 ], [ %1962, %1961 ], !dbg !3297
  br label %1965, !dbg !3327

; <label>:1965                                    ; preds = %1963, %1929
  %1966 = phi i32 [ %1931, %1929 ], [ %1964, %1963 ], !dbg !3297
  br label %1967, !dbg !3330

; <label>:1967                                    ; preds = %1965, %1897
  %1968 = phi i32 [ 0, %1897 ], [ %1966, %1965 ], !dbg !3297
  call void @llvm.dbg.value(metadata i32 %1968, i64 0, metadata !2065, metadata !566), !dbg !2066
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2067, metadata !566), !dbg !2068
  br label %1973, !dbg !3333

; <label>:1969                                    ; preds = %1706
  %1970 = load %struct.gv** @PL_replgv, align 8, !dbg !3334
  %1971 = call %struct.sv* @Perl_save_scalar(%struct.gv* %1970), !dbg !3334
  call void @Perl_sv_setsv_flags(%struct.sv* %1971, %struct.sv* %ret.0, i32 2), !dbg !3334
  %1972 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %1648), !dbg !3336
  br label %1973

; <label>:1973                                    ; preds = %1969, %1967
  %logical.1 = phi i32 [ 0, %1967 ], [ %logical.0, %1969 ]
  %sw.1 = phi i32 [ %1968, %1967 ], [ %sw.0, %1969 ]
  br label %5023, !dbg !3337

; <label>:1974                                    ; preds = %15
  %1975 = bitcast %struct.regnode* %scan.0 to %struct.regnode_1*, !dbg !3338
  %1976 = getelementptr inbounds %struct.regnode_1* %1975, i32 0, i32 3, !dbg !3338
  %1977 = load i32* %1976, align 4, !dbg !3338
  call void @llvm.dbg.value(metadata i32 %1977, i64 0, metadata !2607, metadata !566), !dbg !2608
  %1978 = sext i32 %1977 to i64, !dbg !3339
  %1979 = load i8*** @PL_reg_start_tmp, align 8, !dbg !3339
  %1980 = getelementptr inbounds i8** %1979, i64 %1978, !dbg !3339
  store i8* %locinput.0, i8** %1980, align 8, !dbg !3339
  %1981 = load i32* @PL_regsize, align 4, !dbg !3340
  %1982 = icmp sgt i32 %1977, %1981, !dbg !3342
  br i1 %1982, label %1983, label %1984, !dbg !3343

; <label>:1983                                    ; preds = %1974
  store i32 %1977, i32* @PL_regsize, align 4, !dbg !3344
  br label %1984, !dbg !3344

; <label>:1984                                    ; preds = %1983, %1974
  br label %5023, !dbg !3345

; <label>:1985                                    ; preds = %15
  %1986 = bitcast %struct.regnode* %scan.0 to %struct.regnode_1*, !dbg !3346
  %1987 = getelementptr inbounds %struct.regnode_1* %1986, i32 0, i32 3, !dbg !3346
  %1988 = load i32* %1987, align 4, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %1988, i64 0, metadata !2607, metadata !566), !dbg !2608
  %1989 = sext i32 %1988 to i64, !dbg !3347
  %1990 = load i8*** @PL_reg_start_tmp, align 8, !dbg !3347
  %1991 = getelementptr inbounds i8** %1990, i64 %1989, !dbg !3347
  %1992 = load i8** %1991, align 8, !dbg !3347
  %1993 = load i8** @PL_bostr, align 8, !dbg !3348
  %1994 = ptrtoint i8* %1992 to i64, !dbg !3347
  %1995 = ptrtoint i8* %1993 to i64, !dbg !3347
  %1996 = sub i64 %1994, %1995, !dbg !3347
  %1997 = trunc i64 %1996 to i32, !dbg !3347
  %1998 = sext i32 %1988 to i64, !dbg !3349
  %1999 = load i32** @PL_regstartp, align 8, !dbg !3349
  %2000 = getelementptr inbounds i32* %1999, i64 %1998, !dbg !3349
  store i32 %1997, i32* %2000, align 4, !dbg !3349
  %2001 = load i8** @PL_bostr, align 8, !dbg !3350
  %2002 = ptrtoint i8* %locinput.0 to i64, !dbg !3351
  %2003 = ptrtoint i8* %2001 to i64, !dbg !3351
  %2004 = sub i64 %2002, %2003, !dbg !3351
  %2005 = trunc i64 %2004 to i32, !dbg !3351
  %2006 = sext i32 %1988 to i64, !dbg !3352
  %2007 = load i32** @PL_regendp, align 8, !dbg !3352
  %2008 = getelementptr inbounds i32* %2007, i64 %2006, !dbg !3352
  store i32 %2005, i32* %2008, align 4, !dbg !3352
  %2009 = load i32** @PL_reglastparen, align 8, !dbg !3353
  %2010 = load i32* %2009, align 4, !dbg !3355
  %2011 = icmp sgt i32 %1988, %2010, !dbg !3356
  br i1 %2011, label %2012, label %2014, !dbg !3357

; <label>:2012                                    ; preds = %1985
  %2013 = load i32** @PL_reglastparen, align 8, !dbg !3358
  store i32 %1988, i32* %2013, align 4, !dbg !3359
  br label %2014, !dbg !3359

; <label>:2014                                    ; preds = %2012, %1985
  %2015 = load i32** @PL_reglastcloseparen, align 8, !dbg !3360
  store i32 %1988, i32* %2015, align 4, !dbg !3361
  br label %5023, !dbg !3362

; <label>:2016                                    ; preds = %15
  %2017 = bitcast %struct.regnode* %scan.0 to %struct.regnode_1*, !dbg !3363
  %2018 = getelementptr inbounds %struct.regnode_1* %2017, i32 0, i32 3, !dbg !3363
  %2019 = load i32* %2018, align 4, !dbg !3363
  call void @llvm.dbg.value(metadata i32 %2019, i64 0, metadata !2607, metadata !566), !dbg !2608
  %2020 = load i32** @PL_reglastparen, align 8, !dbg !3364
  %2021 = load i32* %2020, align 4, !dbg !3365
  %2022 = icmp sge i32 %2021, %2019, !dbg !3366
  br i1 %2022, label %2023, label %2029, !dbg !3366

; <label>:2023                                    ; preds = %2016
  %2024 = sext i32 %2019 to i64, !dbg !3367
  %2025 = load i32** @PL_regendp, align 8, !dbg !3367
  %2026 = getelementptr inbounds i32* %2025, i64 %2024, !dbg !3367
  %2027 = load i32* %2026, align 4, !dbg !3367
  %2028 = icmp ne i32 %2027, -1, !dbg !3367
  br label %2029

; <label>:2029                                    ; preds = %2023, %2016
  %2030 = phi i1 [ false, %2016 ], [ %2028, %2023 ]
  %2031 = zext i1 %2030 to i32, !dbg !3368
  call void @llvm.dbg.value(metadata i32 %2031, i64 0, metadata !2065, metadata !566), !dbg !2066
  br label %5023, !dbg !3370

; <label>:2032                                    ; preds = %15
  %2033 = load i32* @PL_reg_maxiter, align 4, !dbg !3371
  store i32 %2033, i32* @PL_reg_leftiter, align 4, !dbg !3372
  %2034 = icmp ne i32 %sw.0, 0, !dbg !3373
  br i1 %2034, label %2035, label %2038, !dbg !3373

; <label>:2035                                    ; preds = %2032
  %2036 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, !dbg !3374
  %2037 = getelementptr inbounds %struct.regnode* %2036, i64 1, !dbg !3374
  call void @llvm.dbg.value(metadata %struct.regnode* %2037, i64 0, metadata !2086, metadata !566), !dbg !2087
  br label %2052, !dbg !3376

; <label>:2038                                    ; preds = %2032
  %2039 = bitcast %struct.regnode* %scan.0 to %struct.regnode_1*, !dbg !3377
  %2040 = getelementptr inbounds %struct.regnode_1* %2039, i32 0, i32 3, !dbg !3377
  %2041 = load i32* %2040, align 4, !dbg !3377
  %2042 = zext i32 %2041 to i64, !dbg !3379
  %2043 = getelementptr inbounds %struct.regnode* %scan.0, i64 %2042, !dbg !3379
  call void @llvm.dbg.value(metadata %struct.regnode* %2043, i64 0, metadata !2086, metadata !566), !dbg !2087
  %2044 = getelementptr inbounds %struct.regnode* %2043, i32 0, i32 1, !dbg !3380
  %2045 = load i8* %2044, align 1, !dbg !3380
  %2046 = zext i8 %2045 to i32, !dbg !3380
  %2047 = icmp eq i32 %2046, 53, !dbg !3380
  br i1 %2047, label %2048, label %2051, !dbg !3382

; <label>:2048                                    ; preds = %2038
  %2049 = getelementptr inbounds %struct.regnode* %2043, i64 1, !dbg !3383
  %2050 = getelementptr inbounds %struct.regnode* %2049, i64 1, !dbg !3383
  call void @llvm.dbg.value(metadata %struct.regnode* %2050, i64 0, metadata !2086, metadata !566), !dbg !2087
  br label %2051, !dbg !3384

; <label>:2051                                    ; preds = %2048, %2038
  %next.1 = phi %struct.regnode* [ %2050, %2048 ], [ %2043, %2038 ]
  br label %2052

; <label>:2052                                    ; preds = %2051, %2035
  %next.2 = phi %struct.regnode* [ %2037, %2035 ], [ %next.1, %2051 ]
  br label %5023, !dbg !3385

; <label>:2053                                    ; preds = %15
  %2054 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !3386
  %2055 = load i8* %2054, align 1, !dbg !3386
  %2056 = zext i8 %2055 to i32, !dbg !3386
  call void @llvm.dbg.value(metadata i32 %2056, i64 0, metadata !2067, metadata !566), !dbg !2068
  br label %5023, !dbg !3387

; <label>:2057                                    ; preds = %15
  call void @llvm.dbg.declare(metadata %struct.curcur* %cc, metadata !3388, metadata !566), !dbg !3390
  %2058 = load i32* @PL_savestack_ix, align 4, !dbg !3391
  call void @llvm.dbg.value(metadata i32 %2058, i64 0, metadata !3392, metadata !566), !dbg !3393
  %2059 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !3394
  %2060 = load i8* %2059, align 1, !dbg !3394
  %2061 = zext i8 %2060 to i32, !dbg !3394
  call void @llvm.dbg.value(metadata i32 %2061, i64 0, metadata !3395, metadata !566), !dbg !3396
  %2062 = getelementptr inbounds %struct.regnode* %next.0, i64 -1, !dbg !3397
  %2063 = getelementptr inbounds %struct.regnode* %2062, i32 0, i32 1, !dbg !3397
  %2064 = load i8* %2063, align 1, !dbg !3397
  %2065 = zext i8 %2064 to i32, !dbg !3397
  %2066 = icmp eq i32 %2065, 36, !dbg !3397
  br i1 %2066, label %2067, label %2073, !dbg !3399

; <label>:2067                                    ; preds = %2057
  %2068 = bitcast %struct.regnode* %next.0 to %struct.regnode_1*, !dbg !3400
  %2069 = getelementptr inbounds %struct.regnode_1* %2068, i32 0, i32 3, !dbg !3400
  %2070 = load i32* %2069, align 4, !dbg !3400
  %2071 = zext i32 %2070 to i64, !dbg !3401
  %2072 = getelementptr inbounds %struct.regnode* %next.0, i64 %2071, !dbg !3401
  call void @llvm.dbg.value(metadata %struct.regnode* %2072, i64 0, metadata !2086, metadata !566), !dbg !2087
  br label %2073, !dbg !3401

; <label>:2073                                    ; preds = %2067, %2057
  %next.3 = phi %struct.regnode* [ %2072, %2067 ], [ %next.0, %2057 ]
  %2074 = load %struct.curcur** @PL_regcc, align 8, !dbg !3402
  %2075 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 8, !dbg !3403
  store %struct.curcur* %2074, %struct.curcur** %2075, align 8, !dbg !3403
  store %struct.curcur* %cc, %struct.curcur** @PL_regcc, align 8, !dbg !3404
  %2076 = load i32** @PL_reglastparen, align 8, !dbg !3405
  %2077 = load i32* %2076, align 4, !dbg !3407
  %2078 = icmp sgt i32 %2061, %2077, !dbg !3408
  br i1 %2078, label %2079, label %2082, !dbg !3409

; <label>:2079                                    ; preds = %2073
  %2080 = load i32** @PL_reglastparen, align 8, !dbg !3410
  %2081 = load i32* %2080, align 4, !dbg !3411
  call void @llvm.dbg.value(metadata i32 %2081, i64 0, metadata !3395, metadata !566), !dbg !3396
  br label %2082, !dbg !3412

; <label>:2082                                    ; preds = %2079, %2073
  %parenfloor.0 = phi i32 [ %2081, %2079 ], [ %2061, %2073 ]
  %2083 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 0, !dbg !3413
  store i32 %parenfloor.0, i32* %2083, align 4, !dbg !3413
  %2084 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 1, !dbg !3414
  store i32 -1, i32* %2084, align 4, !dbg !3414
  %2085 = bitcast %struct.regnode* %scan.0 to %struct.regnode_2*, !dbg !3415
  %2086 = getelementptr inbounds %struct.regnode_2* %2085, i32 0, i32 3, !dbg !3415
  %2087 = load i16* %2086, align 2, !dbg !3415
  %2088 = zext i16 %2087 to i32, !dbg !3415
  %2089 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 2, !dbg !3416
  store i32 %2088, i32* %2089, align 4, !dbg !3416
  %2090 = bitcast %struct.regnode* %scan.0 to %struct.regnode_2*, !dbg !3417
  %2091 = getelementptr inbounds %struct.regnode_2* %2090, i32 0, i32 4, !dbg !3417
  %2092 = load i16* %2091, align 2, !dbg !3417
  %2093 = zext i16 %2092 to i32, !dbg !3417
  %2094 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 3, !dbg !3418
  store i32 %2093, i32* %2094, align 4, !dbg !3418
  %2095 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, !dbg !3419
  %2096 = getelementptr inbounds %struct.regnode* %2095, i64 1, !dbg !3419
  %2097 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 5, !dbg !3420
  store %struct.regnode* %2096, %struct.regnode** %2097, align 8, !dbg !3420
  %2098 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 6, !dbg !3421
  store %struct.regnode* %next.3, %struct.regnode** %2098, align 8, !dbg !3421
  %2099 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 4, !dbg !3422
  store i32 %minmod.0, i32* %2099, align 4, !dbg !3422
  %2100 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 7, !dbg !3423
  store i8* null, i8** %2100, align 8, !dbg !3423
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !3424
  %2101 = getelementptr inbounds %struct.regnode* %next.3, i64 -1, !dbg !3425
  %2102 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2101), !dbg !3426
  call void @llvm.dbg.value(metadata i32 %2102, i64 0, metadata !2607, metadata !566), !dbg !2608
  %2103 = load i32* @PL_savestack_ix, align 4, !dbg !3427
  %2104 = icmp sgt i32 %2103, %2058, !dbg !3427
  br i1 %2104, label %2105, label %2106, !dbg !3429

; <label>:2105                                    ; preds = %2082
  call void @Perl_leave_scope(i32 %2058), !dbg !3430
  br label %2106, !dbg !3430

; <label>:2106                                    ; preds = %2105, %2082
  %2107 = getelementptr inbounds %struct.curcur* %cc, i32 0, i32 8, !dbg !3432
  %2108 = load %struct.curcur** %2107, align 8, !dbg !3432
  store %struct.curcur* %2108, %struct.curcur** @PL_regcc, align 8, !dbg !3433
  %2109 = icmp ne i32 %2102, 0, !dbg !3434
  br i1 %2109, label %2110, label %2111, !dbg !3434

; <label>:2110                                    ; preds = %2106
  br label %5028, !dbg !3435

; <label>:2111                                    ; preds = %2106
  br label %5029, !dbg !3438

; <label>:2112                                    ; preds = %15
  %2113 = load %struct.curcur** @PL_regcc, align 8, !dbg !3440
  call void @llvm.dbg.value(metadata %struct.curcur* %2113, i64 0, metadata !3442, metadata !566), !dbg !3443
  %2114 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 7, !dbg !3444
  %2115 = load i8** %2114, align 8, !dbg !3444
  call void @llvm.dbg.value(metadata i8* %2115, i64 0, metadata !3445, metadata !566), !dbg !3446
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !3447, metadata !566), !dbg !3448
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !3449, metadata !566), !dbg !3450
  %2116 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 1, !dbg !3451
  %2117 = load i32* %2116, align 4, !dbg !3451
  %2118 = add nsw i32 %2117, 1, !dbg !3451
  call void @llvm.dbg.value(metadata i32 %2118, i64 0, metadata !2607, metadata !566), !dbg !2608
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !3452
  %2119 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 7, !dbg !3453
  %2120 = load i8** %2119, align 8, !dbg !3453
  %2121 = icmp eq i8* %locinput.0, %2120, !dbg !3455
  br i1 %2121, label %2122, label %2148, !dbg !3456

; <label>:2122                                    ; preds = %2112
  %2123 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 2, !dbg !3457
  %2124 = load i32* %2123, align 4, !dbg !3457
  %2125 = icmp sge i32 %2118, %2124, !dbg !3458
  br i1 %2125, label %2126, label %2148, !dbg !3456

; <label>:2126                                    ; preds = %2122
  %2127 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 8, !dbg !3459
  %2128 = load %struct.curcur** %2127, align 8, !dbg !3459
  store %struct.curcur* %2128, %struct.curcur** @PL_regcc, align 8, !dbg !3461
  %2129 = load %struct.curcur** @PL_regcc, align 8, !dbg !3462
  %2130 = icmp ne %struct.curcur* %2129, null, !dbg !3464
  br i1 %2130, label %2131, label %2135, !dbg !3464

; <label>:2131                                    ; preds = %2126
  %2132 = load %struct.curcur** @PL_regcc, align 8, !dbg !3465
  %2133 = getelementptr inbounds %struct.curcur* %2132, i32 0, i32 1, !dbg !3465
  %2134 = load i32* %2133, align 4, !dbg !3465
  call void @llvm.dbg.value(metadata i32 %2134, i64 0, metadata !2052, metadata !566), !dbg !2053
  br label %2135, !dbg !3466

; <label>:2135                                    ; preds = %2131, %2126
  %ln.5 = phi i32 [ %2134, %2131 ], [ %ln.0, %2126 ]
  %2136 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 6, !dbg !3467
  %2137 = load %struct.regnode** %2136, align 8, !dbg !3467
  %2138 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2137), !dbg !3469
  %2139 = icmp ne i32 %2138, 0, !dbg !3470
  br i1 %2139, label %2140, label %2141, !dbg !3470

; <label>:2140                                    ; preds = %2135
  br label %5028, !dbg !3471

; <label>:2141                                    ; preds = %2135
  %2142 = load %struct.curcur** @PL_regcc, align 8, !dbg !3472
  %2143 = icmp ne %struct.curcur* %2142, null, !dbg !3474
  br i1 %2143, label %2144, label %2147, !dbg !3474

; <label>:2144                                    ; preds = %2141
  %2145 = load %struct.curcur** @PL_regcc, align 8, !dbg !3475
  %2146 = getelementptr inbounds %struct.curcur* %2145, i32 0, i32 1, !dbg !3475
  store i32 %ln.5, i32* %2146, align 4, !dbg !3475
  br label %2147, !dbg !3475

; <label>:2147                                    ; preds = %2144, %2141
  store %struct.curcur* %2113, %struct.curcur** @PL_regcc, align 8, !dbg !3476
  br label %5029, !dbg !3477

; <label>:2148                                    ; preds = %2122, %2112
  %2149 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 2, !dbg !3478
  %2150 = load i32* %2149, align 4, !dbg !3478
  %2151 = icmp slt i32 %2118, %2150, !dbg !3480
  br i1 %2151, label %2152, label %2164, !dbg !3481

; <label>:2152                                    ; preds = %2148
  %2153 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 1, !dbg !3482
  store i32 %2118, i32* %2153, align 4, !dbg !3482
  %2154 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 7, !dbg !3484
  store i8* %locinput.0, i8** %2154, align 8, !dbg !3484
  %2155 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 5, !dbg !3485
  %2156 = load %struct.regnode** %2155, align 8, !dbg !3485
  %2157 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2156), !dbg !3487
  %2158 = icmp ne i32 %2157, 0, !dbg !3488
  br i1 %2158, label %2159, label %2160, !dbg !3488

; <label>:2159                                    ; preds = %2152
  br label %5028, !dbg !3489

; <label>:2160                                    ; preds = %2152
  %2161 = sub nsw i32 %2118, 1, !dbg !3490
  %2162 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 1, !dbg !3491
  store i32 %2161, i32* %2162, align 4, !dbg !3491
  %2163 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 7, !dbg !3492
  store i8* %2115, i8** %2163, align 8, !dbg !3492
  br label %5029, !dbg !3493

; <label>:2164                                    ; preds = %2148
  %2165 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !3494
  %2166 = load i8* %2165, align 1, !dbg !3494
  %2167 = icmp ne i8 %2166, 0, !dbg !3496
  br i1 %2167, label %2168, label %2270, !dbg !3496

; <label>:2168                                    ; preds = %2164
  %2169 = load i32* @PL_reg_maxiter, align 4, !dbg !3497
  %2170 = icmp ne i32 %2169, 0, !dbg !3500
  br i1 %2170, label %2186, label %2171, !dbg !3500

; <label>:2171                                    ; preds = %2168
  %2172 = load i8** @PL_regeol, align 8, !dbg !3501
  %2173 = load i8** @PL_bostr, align 8, !dbg !3503
  %2174 = ptrtoint i8* %2172 to i64, !dbg !3501
  %2175 = ptrtoint i8* %2173 to i64, !dbg !3501
  %2176 = sub i64 %2174, %2175, !dbg !3501
  %2177 = add nsw i64 %2176, 1, !dbg !3501
  %2178 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !3504
  %2179 = load i8* %2178, align 1, !dbg !3504
  %2180 = zext i8 %2179 to i32, !dbg !3504
  %2181 = ashr i32 %2180, 4, !dbg !3504
  %2182 = sext i32 %2181 to i64, !dbg !3505
  %2183 = mul nsw i64 %2177, %2182, !dbg !3506
  %2184 = trunc i64 %2183 to i32, !dbg !3506
  store i32 %2184, i32* @PL_reg_maxiter, align 4, !dbg !3507
  %2185 = load i32* @PL_reg_maxiter, align 4, !dbg !3508
  store i32 %2185, i32* @PL_reg_leftiter, align 4, !dbg !3509
  br label %2186, !dbg !3510

; <label>:2186                                    ; preds = %2171, %2168
  %2187 = load i32* @PL_reg_leftiter, align 4, !dbg !3511
  %2188 = add nsw i32 %2187, -1, !dbg !3511
  store i32 %2188, i32* @PL_reg_leftiter, align 4, !dbg !3511
  %2189 = icmp eq i32 %2187, 0, !dbg !3511
  br i1 %2189, label %2190, label %2220, !dbg !3513

; <label>:2190                                    ; preds = %2186
  %2191 = load i32* @PL_reg_maxiter, align 4, !dbg !3514
  %2192 = add nsw i32 %2191, 7, !dbg !3514
  %2193 = add nsw i32 %2192, 2, !dbg !3514
  %2194 = sdiv i32 %2193, 8, !dbg !3516
  call void @llvm.dbg.value(metadata i32 %2194, i64 0, metadata !3517, metadata !566), !dbg !3518
  %2195 = load i8** @PL_reg_poscache, align 8, !dbg !3519
  %2196 = icmp ne i8* %2195, null, !dbg !3521
  br i1 %2196, label %2197, label %2211, !dbg !3521

; <label>:2197                                    ; preds = %2190
  %2198 = load i64* @PL_reg_poscache_size, align 8, !dbg !3522
  %2199 = trunc i64 %2198 to i32, !dbg !3525
  %2200 = icmp slt i32 %2199, %2194, !dbg !3525
  br i1 %2200, label %2201, label %2207, !dbg !3526

; <label>:2201                                    ; preds = %2197
  %2202 = load i8** @PL_reg_poscache, align 8, !dbg !3527
  %2203 = sext i32 %2194 to i64, !dbg !3527
  %2204 = mul i64 %2203, 1, !dbg !3527
  %2205 = call i8* @Perl_safesysrealloc(i8* %2202, i64 %2204), !dbg !3527
  store i8* %2205, i8** @PL_reg_poscache, align 8, !dbg !3527
  %2206 = sext i32 %2194 to i64, !dbg !3529
  store i64 %2206, i64* @PL_reg_poscache_size, align 8, !dbg !3530
  br label %2207, !dbg !3531

; <label>:2207                                    ; preds = %2201, %2197
  %2208 = load i8** @PL_reg_poscache, align 8, !dbg !3532
  %2209 = sext i32 %2194 to i64, !dbg !3532
  %2210 = mul i64 %2209, 1, !dbg !3532
  call void @llvm.memset.p0i8.i64(i8* %2208, i8 0, i64 %2210, i32 1, i1 false), !dbg !3532
  br label %2219, !dbg !3533

; <label>:2211                                    ; preds = %2190
  %2212 = sext i32 %2194 to i64, !dbg !3534
  store i64 %2212, i64* @PL_reg_poscache_size, align 8, !dbg !3536
  %2213 = sext i32 %2194 to i64, !dbg !3537
  %2214 = mul i64 %2213, 1, !dbg !3537
  %2215 = call i8* @Perl_safesysmalloc(i64 %2214), !dbg !3537
  store i8* %2215, i8** @PL_reg_poscache, align 8, !dbg !3537
  %2216 = load i8** @PL_reg_poscache, align 8, !dbg !3537
  %2217 = sext i32 %2194 to i64, !dbg !3537
  %2218 = mul i64 %2217, 1, !dbg !3537
  call void @llvm.memset.p0i8.i64(i8* %2216, i8 0, i64 %2218, i32 1, i1 false), !dbg !3537
  br label %2219

; <label>:2219                                    ; preds = %2211, %2207
  br label %2220, !dbg !3538

; <label>:2220                                    ; preds = %2219, %2186
  %2221 = load i32* @PL_reg_leftiter, align 4, !dbg !3539
  %2222 = icmp slt i32 %2221, 0, !dbg !3539
  br i1 %2222, label %2223, label %2269, !dbg !3541

; <label>:2223                                    ; preds = %2220
  %2224 = load i8** @PL_bostr, align 8, !dbg !3542
  %2225 = ptrtoint i8* %locinput.0 to i64, !dbg !3544
  %2226 = ptrtoint i8* %2224 to i64, !dbg !3544
  %2227 = sub i64 %2225, %2226, !dbg !3544
  %2228 = trunc i64 %2227 to i32, !dbg !3544
  call void @llvm.dbg.value(metadata i32 %2228, i64 0, metadata !3447, metadata !566), !dbg !3448
  %2229 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !3545
  %2230 = load i8* %2229, align 1, !dbg !3545
  %2231 = zext i8 %2230 to i32, !dbg !3545
  %2232 = and i32 %2231, 15, !dbg !3545
  %2233 = sub nsw i32 %2232, 1, !dbg !3546
  %2234 = add nsw i32 %2233, 2, !dbg !3546
  %2235 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !3547
  %2236 = load i8* %2235, align 1, !dbg !3547
  %2237 = zext i8 %2236 to i32, !dbg !3547
  %2238 = ashr i32 %2237, 4, !dbg !3547
  %2239 = mul nsw i32 %2228, %2238, !dbg !3548
  %2240 = add nsw i32 %2234, %2239, !dbg !3546
  call void @llvm.dbg.value(metadata i32 %2240, i64 0, metadata !3447, metadata !566), !dbg !3448
  %2241 = srem i32 %2240, 8, !dbg !3549
  call void @llvm.dbg.value(metadata i32 %2241, i64 0, metadata !3449, metadata !566), !dbg !3450
  %2242 = sdiv i32 %2240, 8, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %2242, i64 0, metadata !3447, metadata !566), !dbg !3448
  %2243 = sext i32 %2242 to i64, !dbg !3551
  %2244 = load i8** @PL_reg_poscache, align 8, !dbg !3551
  %2245 = getelementptr inbounds i8* %2244, i64 %2243, !dbg !3551
  %2246 = load i8* %2245, align 1, !dbg !3551
  %2247 = sext i8 %2246 to i32, !dbg !3551
  %2248 = shl i32 1, %2241, !dbg !3553
  %2249 = and i32 %2247, %2248, !dbg !3551
  %2250 = icmp ne i32 %2249, 0, !dbg !3554
  br i1 %2250, label %2251, label %2260, !dbg !3554

; <label>:2251                                    ; preds = %2223
  %2252 = load i8** @PL_reg_poscache, align 8, !dbg !3555
  %2253 = getelementptr inbounds i8* %2252, i64 0, !dbg !3555
  %2254 = load i8* %2253, align 1, !dbg !3555
  %2255 = sext i8 %2254 to i32, !dbg !3555
  %2256 = and i32 %2255, 1, !dbg !3555
  %2257 = icmp ne i32 %2256, 0, !dbg !3558
  br i1 %2257, label %2258, label %2259, !dbg !3558

; <label>:2258                                    ; preds = %2251
  br label %5028, !dbg !3559

; <label>:2259                                    ; preds = %2251
  br label %5031, !dbg !3560

; <label>:2260                                    ; preds = %2223
  %2261 = shl i32 1, %2241, !dbg !3561
  %2262 = sext i32 %2242 to i64, !dbg !3562
  %2263 = load i8** @PL_reg_poscache, align 8, !dbg !3562
  %2264 = getelementptr inbounds i8* %2263, i64 %2262, !dbg !3562
  %2265 = load i8* %2264, align 1, !dbg !3562
  %2266 = sext i8 %2265 to i32, !dbg !3562
  %2267 = or i32 %2266, %2261, !dbg !3562
  %2268 = trunc i32 %2267 to i8, !dbg !3562
  store i8 %2268, i8* %2264, align 1, !dbg !3562
  br label %2269, !dbg !3563

; <label>:2269                                    ; preds = %2260, %2220
  %cache_offset.0 = phi i32 [ %2242, %2260 ], [ 0, %2220 ]
  %cache_bit.0 = phi i32 [ %2241, %2260 ], [ 0, %2220 ]
  br label %2270, !dbg !3564

; <label>:2270                                    ; preds = %2269, %2164
  %cache_offset.1 = phi i32 [ %cache_offset.0, %2269 ], [ 0, %2164 ]
  %cache_bit.1 = phi i32 [ %cache_bit.0, %2269 ], [ 0, %2164 ]
  %2271 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 4, !dbg !3565
  %2272 = load i32* %2271, align 4, !dbg !3565
  %2273 = icmp ne i32 %2272, 0, !dbg !3567
  br i1 %2273, label %2274, label %2530, !dbg !3567

; <label>:2274                                    ; preds = %2270
  %2275 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 8, !dbg !3568
  %2276 = load %struct.curcur** %2275, align 8, !dbg !3568
  store %struct.curcur* %2276, %struct.curcur** @PL_regcc, align 8, !dbg !3570
  %2277 = load %struct.curcur** @PL_regcc, align 8, !dbg !3571
  %2278 = icmp ne %struct.curcur* %2277, null, !dbg !3573
  br i1 %2278, label %2279, label %2283, !dbg !3573

; <label>:2279                                    ; preds = %2274
  %2280 = load %struct.curcur** @PL_regcc, align 8, !dbg !3574
  %2281 = getelementptr inbounds %struct.curcur* %2280, i32 0, i32 1, !dbg !3574
  %2282 = load i32* %2281, align 4, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %2282, i64 0, metadata !2052, metadata !566), !dbg !2053
  br label %2283, !dbg !3575

; <label>:2283                                    ; preds = %2279, %2274
  %ln.6 = phi i32 [ %2282, %2279 ], [ %ln.0, %2274 ]
  %2284 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 0, !dbg !3576
  %2285 = load i32* %2284, align 4, !dbg !3576
  %2286 = call i32 (i32, ...)* bitcast (i32 (...)* @regcppush to i32 (i32, ...)*)(i32 %2285), !dbg !3577
  call void @llvm.dbg.value(metadata i32 %2286, i64 0, metadata !3578, metadata !566), !dbg !3579
  %2287 = load i32* @PL_savestack_ix, align 4, !dbg !3580
  call void @llvm.dbg.value(metadata i32 %2287, i64 0, metadata !3581, metadata !566), !dbg !3582
  %2288 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 6, !dbg !3583
  %2289 = load %struct.regnode** %2288, align 8, !dbg !3583
  %2290 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2289), !dbg !3585
  %2291 = icmp ne i32 %2290, 0, !dbg !3586
  br i1 %2291, label %2292, label %2333, !dbg !3586

; <label>:2292                                    ; preds = %2283
  %2293 = load i32* @PL_savestack_ix, align 4, !dbg !3587
  %2294 = icmp sgt i32 %2293, %2286, !dbg !3587
  br i1 %2294, label %2295, label %2296, !dbg !3590

; <label>:2295                                    ; preds = %2292
  call void @Perl_leave_scope(i32 %2286), !dbg !3591
  br label %2296, !dbg !3591

; <label>:2296                                    ; preds = %2295, %2292
  %2297 = or i32 %cache_offset.1, %cache_bit.1, !dbg !3593
  %2298 = icmp ne i32 %2297, 0, !dbg !3596
  br i1 %2298, label %2299, label %2332, !dbg !3596

; <label>:2299                                    ; preds = %2296
  %2300 = load i8** @PL_reg_poscache, align 8, !dbg !3597
  %2301 = getelementptr inbounds i8* %2300, i64 0, !dbg !3597
  %2302 = load i8* %2301, align 1, !dbg !3597
  %2303 = sext i8 %2302 to i32, !dbg !3597
  %2304 = and i32 %2303, 2, !dbg !3597
  %2305 = icmp ne i32 %2304, 0, !dbg !3601
  br i1 %2305, label %2313, label %2306, !dbg !3601

; <label>:2306                                    ; preds = %2299
  %2307 = load i8** @PL_reg_poscache, align 8, !dbg !3602
  %2308 = getelementptr inbounds i8* %2307, i64 0, !dbg !3602
  %2309 = load i8* %2308, align 1, !dbg !3602
  %2310 = sext i8 %2309 to i32, !dbg !3602
  %2311 = or i32 %2310, 1, !dbg !3602
  %2312 = trunc i32 %2311 to i8, !dbg !3602
  store i8 %2312, i8* %2308, align 1, !dbg !3602
  br label %2331, !dbg !3602

; <label>:2313                                    ; preds = %2299
  %2314 = load i8** @PL_reg_poscache, align 8, !dbg !3604
  %2315 = getelementptr inbounds i8* %2314, i64 0, !dbg !3604
  %2316 = load i8* %2315, align 1, !dbg !3604
  %2317 = sext i8 %2316 to i32, !dbg !3604
  %2318 = and i32 %2317, 1, !dbg !3604
  %2319 = icmp ne i32 %2318, 0, !dbg !3607
  br i1 %2319, label %2330, label %2320, !dbg !3607

; <label>:2320                                    ; preds = %2313
  %2321 = shl i32 1, %cache_bit.1, !dbg !3608
  %2322 = xor i32 %2321, -1, !dbg !3608
  %2323 = sext i32 %cache_offset.1 to i64, !dbg !3608
  %2324 = load i8** @PL_reg_poscache, align 8, !dbg !3608
  %2325 = getelementptr inbounds i8* %2324, i64 %2323, !dbg !3608
  %2326 = load i8* %2325, align 1, !dbg !3608
  %2327 = sext i8 %2326 to i32, !dbg !3608
  %2328 = and i32 %2327, %2322, !dbg !3608
  %2329 = trunc i32 %2328 to i8, !dbg !3608
  store i8 %2329, i8* %2325, align 1, !dbg !3608
  br label %2330, !dbg !3608

; <label>:2330                                    ; preds = %2320, %2313
  br label %2331

; <label>:2331                                    ; preds = %2330, %2306
  br label %2332, !dbg !3611

; <label>:2332                                    ; preds = %2331, %2296
  br label %5028, !dbg !3613

; <label>:2333                                    ; preds = %2283
  %2334 = load i32* @PL_savestack_ix, align 4, !dbg !3616
  %2335 = icmp sgt i32 %2334, %2287, !dbg !3616
  br i1 %2335, label %2336, label %2337, !dbg !3618

; <label>:2336                                    ; preds = %2333
  call void @Perl_leave_scope(i32 %2287), !dbg !3619
  br label %2337, !dbg !3619

; <label>:2337                                    ; preds = %2336, %2333
  %2338 = call i32 (...)* @regcppop(), !dbg !3621
  %2339 = load %struct.curcur** @PL_regcc, align 8, !dbg !3622
  %2340 = icmp ne %struct.curcur* %2339, null, !dbg !3624
  br i1 %2340, label %2341, label %2344, !dbg !3624

; <label>:2341                                    ; preds = %2337
  %2342 = load %struct.curcur** @PL_regcc, align 8, !dbg !3625
  %2343 = getelementptr inbounds %struct.curcur* %2342, i32 0, i32 1, !dbg !3625
  store i32 %ln.6, i32* %2343, align 4, !dbg !3625
  br label %2344, !dbg !3625

; <label>:2344                                    ; preds = %2341, %2337
  store %struct.curcur* %2113, %struct.curcur** @PL_regcc, align 8, !dbg !3626
  %2345 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 3, !dbg !3627
  %2346 = load i32* %2345, align 4, !dbg !3627
  %2347 = icmp sge i32 %2118, %2346, !dbg !3629
  br i1 %2347, label %2348, label %2433, !dbg !3630

; <label>:2348                                    ; preds = %2344
  %2349 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3631
  %2350 = getelementptr inbounds %struct.cop* %2349, i32 0, i32 14, !dbg !3631
  %2351 = load %struct.sv** %2350, align 8, !dbg !3631
  %2352 = icmp ne %struct.sv* %2351, null, !dbg !3631
  br i1 %2352, label %2353, label %2377, !dbg !3634

; <label>:2353                                    ; preds = %2348
  %2354 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3635
  %2355 = getelementptr inbounds %struct.cop* %2354, i32 0, i32 14, !dbg !3635
  %2356 = load %struct.sv** %2355, align 8, !dbg !3635
  %2357 = icmp ne %struct.sv* %2356, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !3635
  br i1 %2357, label %2358, label %2377, !dbg !3634

; <label>:2358                                    ; preds = %2353
  %2359 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3637
  %2360 = getelementptr inbounds %struct.cop* %2359, i32 0, i32 14, !dbg !3637
  %2361 = load %struct.sv** %2360, align 8, !dbg !3637
  %2362 = icmp eq %struct.sv* %2361, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !3637
  br i1 %2362, label %2387, label %2363, !dbg !3634

; <label>:2363                                    ; preds = %2358
  %2364 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3639
  %2365 = getelementptr inbounds %struct.cop* %2364, i32 0, i32 14, !dbg !3639
  %2366 = load %struct.sv** %2365, align 8, !dbg !3639
  %2367 = getelementptr inbounds %struct.sv* %2366, i32 0, i32 0, !dbg !3639
  %2368 = load i8** %2367, align 8, !dbg !3639
  %2369 = bitcast i8* %2368 to %struct.xpv*, !dbg !3639
  %2370 = getelementptr inbounds %struct.xpv* %2369, i32 0, i32 0, !dbg !3639
  %2371 = load i8** %2370, align 8, !dbg !3639
  %2372 = getelementptr inbounds i8* %2371, i64 5, !dbg !3639
  %2373 = load i8* %2372, align 1, !dbg !3639
  %2374 = sext i8 %2373 to i32, !dbg !3639
  %2375 = and i32 %2374, 1, !dbg !3639
  %2376 = icmp ne i32 %2375, 0, !dbg !3634
  br i1 %2376, label %2387, label %2377, !dbg !3634

; <label>:2377                                    ; preds = %2363, %2353, %2348
  %2378 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3641
  %2379 = getelementptr inbounds %struct.cop* %2378, i32 0, i32 14, !dbg !3641
  %2380 = load %struct.sv** %2379, align 8, !dbg !3641
  %2381 = icmp eq %struct.sv* %2380, null, !dbg !3641
  br i1 %2381, label %2382, label %2396, !dbg !3634

; <label>:2382                                    ; preds = %2377
  %2383 = load i8* @PL_dowarn, align 1, !dbg !3645
  %2384 = zext i8 %2383 to i32, !dbg !3645
  %2385 = and i32 %2384, 1, !dbg !3645
  %2386 = icmp ne i32 %2385, 0, !dbg !3634
  br i1 %2386, label %2387, label %2396, !dbg !3634

; <label>:2387                                    ; preds = %2382, %2363, %2358
  %2388 = icmp sge i32 %2118, 32767, !dbg !3647
  br i1 %2388, label %2389, label %2396, !dbg !3634

; <label>:2389                                    ; preds = %2387
  %2390 = load i32* @PL_reg_flags, align 4, !dbg !3651
  %2391 = and i32 %2390, 2, !dbg !3651
  %2392 = icmp ne i32 %2391, 0, !dbg !3634
  br i1 %2392, label %2396, label %2393, !dbg !3634

; <label>:2393                                    ; preds = %2389
  %2394 = load i32* @PL_reg_flags, align 4, !dbg !3652
  %2395 = or i32 %2394, 2, !dbg !3652
  store i32 %2395, i32* @PL_reg_flags, align 4, !dbg !3652
  call void (i32, i8*, ...)* @Perl_warner(i32 20, i8* getelementptr inbounds ([23 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8]* @.str7, i32 0, i32 0), i32 32766), !dbg !3654
  br label %2396, !dbg !3655

; <label>:2396                                    ; preds = %2393, %2389, %2387, %2382, %2377
  %2397 = or i32 %cache_offset.1, %cache_bit.1, !dbg !3656
  %2398 = icmp ne i32 %2397, 0, !dbg !3659
  br i1 %2398, label %2399, label %2432, !dbg !3659

; <label>:2399                                    ; preds = %2396
  %2400 = load i8** @PL_reg_poscache, align 8, !dbg !3660
  %2401 = getelementptr inbounds i8* %2400, i64 0, !dbg !3660
  %2402 = load i8* %2401, align 1, !dbg !3660
  %2403 = sext i8 %2402 to i32, !dbg !3660
  %2404 = and i32 %2403, 2, !dbg !3660
  %2405 = icmp ne i32 %2404, 0, !dbg !3664
  br i1 %2405, label %2413, label %2406, !dbg !3664

; <label>:2406                                    ; preds = %2399
  %2407 = load i8** @PL_reg_poscache, align 8, !dbg !3665
  %2408 = getelementptr inbounds i8* %2407, i64 0, !dbg !3665
  %2409 = load i8* %2408, align 1, !dbg !3665
  %2410 = sext i8 %2409 to i32, !dbg !3665
  %2411 = or i32 %2410, 2, !dbg !3665
  %2412 = trunc i32 %2411 to i8, !dbg !3665
  store i8 %2412, i8* %2408, align 1, !dbg !3665
  br label %2431, !dbg !3665

; <label>:2413                                    ; preds = %2399
  %2414 = load i8** @PL_reg_poscache, align 8, !dbg !3667
  %2415 = getelementptr inbounds i8* %2414, i64 0, !dbg !3667
  %2416 = load i8* %2415, align 1, !dbg !3667
  %2417 = sext i8 %2416 to i32, !dbg !3667
  %2418 = and i32 %2417, 1, !dbg !3667
  %2419 = icmp ne i32 %2418, 0, !dbg !3670
  br i1 %2419, label %2420, label %2430, !dbg !3670

; <label>:2420                                    ; preds = %2413
  %2421 = shl i32 1, %cache_bit.1, !dbg !3671
  %2422 = xor i32 %2421, -1, !dbg !3671
  %2423 = sext i32 %cache_offset.1 to i64, !dbg !3671
  %2424 = load i8** @PL_reg_poscache, align 8, !dbg !3671
  %2425 = getelementptr inbounds i8* %2424, i64 %2423, !dbg !3671
  %2426 = load i8* %2425, align 1, !dbg !3671
  %2427 = sext i8 %2426 to i32, !dbg !3671
  %2428 = and i32 %2427, %2422, !dbg !3671
  %2429 = trunc i32 %2428 to i8, !dbg !3671
  store i8 %2429, i8* %2425, align 1, !dbg !3671
  br label %2430, !dbg !3671

; <label>:2430                                    ; preds = %2420, %2413
  br label %2431

; <label>:2431                                    ; preds = %2430, %2406
  br label %2432, !dbg !3674

; <label>:2432                                    ; preds = %2431, %2396
  br label %5029, !dbg !3676

; <label>:2433                                    ; preds = %2344
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !3679
  %2434 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 1, !dbg !3680
  store i32 %2118, i32* %2434, align 4, !dbg !3680
  %2435 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 7, !dbg !3681
  store i8* %locinput.0, i8** %2435, align 8, !dbg !3681
  %2436 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 0, !dbg !3682
  %2437 = load i32* %2436, align 4, !dbg !3682
  %2438 = call i32 (i32, ...)* bitcast (i32 (...)* @regcppush to i32 (i32, ...)*)(i32 %2437), !dbg !3683
  call void @llvm.dbg.value(metadata i32 %2438, i64 0, metadata !3578, metadata !566), !dbg !3579
  %2439 = load i32* @PL_savestack_ix, align 4, !dbg !3684
  call void @llvm.dbg.value(metadata i32 %2439, i64 0, metadata !3581, metadata !566), !dbg !3582
  %2440 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 5, !dbg !3685
  %2441 = load %struct.regnode** %2440, align 8, !dbg !3685
  %2442 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2441), !dbg !3687
  %2443 = icmp ne i32 %2442, 0, !dbg !3688
  br i1 %2443, label %2444, label %2485, !dbg !3688

; <label>:2444                                    ; preds = %2433
  %2445 = load i32* @PL_savestack_ix, align 4, !dbg !3689
  %2446 = icmp sgt i32 %2445, %2438, !dbg !3689
  br i1 %2446, label %2447, label %2448, !dbg !3692

; <label>:2447                                    ; preds = %2444
  call void @Perl_leave_scope(i32 %2438), !dbg !3693
  br label %2448, !dbg !3693

; <label>:2448                                    ; preds = %2447, %2444
  %2449 = or i32 %cache_offset.1, %cache_bit.1, !dbg !3695
  %2450 = icmp ne i32 %2449, 0, !dbg !3698
  br i1 %2450, label %2451, label %2484, !dbg !3698

; <label>:2451                                    ; preds = %2448
  %2452 = load i8** @PL_reg_poscache, align 8, !dbg !3699
  %2453 = getelementptr inbounds i8* %2452, i64 0, !dbg !3699
  %2454 = load i8* %2453, align 1, !dbg !3699
  %2455 = sext i8 %2454 to i32, !dbg !3699
  %2456 = and i32 %2455, 2, !dbg !3699
  %2457 = icmp ne i32 %2456, 0, !dbg !3703
  br i1 %2457, label %2465, label %2458, !dbg !3703

; <label>:2458                                    ; preds = %2451
  %2459 = load i8** @PL_reg_poscache, align 8, !dbg !3704
  %2460 = getelementptr inbounds i8* %2459, i64 0, !dbg !3704
  %2461 = load i8* %2460, align 1, !dbg !3704
  %2462 = sext i8 %2461 to i32, !dbg !3704
  %2463 = or i32 %2462, 1, !dbg !3704
  %2464 = trunc i32 %2463 to i8, !dbg !3704
  store i8 %2464, i8* %2460, align 1, !dbg !3704
  br label %2483, !dbg !3704

; <label>:2465                                    ; preds = %2451
  %2466 = load i8** @PL_reg_poscache, align 8, !dbg !3706
  %2467 = getelementptr inbounds i8* %2466, i64 0, !dbg !3706
  %2468 = load i8* %2467, align 1, !dbg !3706
  %2469 = sext i8 %2468 to i32, !dbg !3706
  %2470 = and i32 %2469, 1, !dbg !3706
  %2471 = icmp ne i32 %2470, 0, !dbg !3709
  br i1 %2471, label %2482, label %2472, !dbg !3709

; <label>:2472                                    ; preds = %2465
  %2473 = shl i32 1, %cache_bit.1, !dbg !3710
  %2474 = xor i32 %2473, -1, !dbg !3710
  %2475 = sext i32 %cache_offset.1 to i64, !dbg !3710
  %2476 = load i8** @PL_reg_poscache, align 8, !dbg !3710
  %2477 = getelementptr inbounds i8* %2476, i64 %2475, !dbg !3710
  %2478 = load i8* %2477, align 1, !dbg !3710
  %2479 = sext i8 %2478 to i32, !dbg !3710
  %2480 = and i32 %2479, %2474, !dbg !3710
  %2481 = trunc i32 %2480 to i8, !dbg !3710
  store i8 %2481, i8* %2477, align 1, !dbg !3710
  br label %2482, !dbg !3710

; <label>:2482                                    ; preds = %2472, %2465
  br label %2483

; <label>:2483                                    ; preds = %2482, %2458
  br label %2484, !dbg !3713

; <label>:2484                                    ; preds = %2483, %2448
  br label %5028, !dbg !3715

; <label>:2485                                    ; preds = %2433
  %2486 = load i32* @PL_savestack_ix, align 4, !dbg !3718
  %2487 = icmp sgt i32 %2486, %2439, !dbg !3718
  br i1 %2487, label %2488, label %2489, !dbg !3720

; <label>:2488                                    ; preds = %2485
  call void @Perl_leave_scope(i32 %2439), !dbg !3721
  br label %2489, !dbg !3721

; <label>:2489                                    ; preds = %2488, %2485
  %2490 = call i32 (...)* @regcppop(), !dbg !3723
  %2491 = sub nsw i32 %2118, 1, !dbg !3724
  %2492 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 1, !dbg !3725
  store i32 %2491, i32* %2492, align 4, !dbg !3725
  %2493 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 7, !dbg !3726
  store i8* %2115, i8** %2493, align 8, !dbg !3726
  %2494 = or i32 %cache_offset.1, %cache_bit.1, !dbg !3727
  %2495 = icmp ne i32 %2494, 0, !dbg !3730
  br i1 %2495, label %2496, label %2529, !dbg !3730

; <label>:2496                                    ; preds = %2489
  %2497 = load i8** @PL_reg_poscache, align 8, !dbg !3731
  %2498 = getelementptr inbounds i8* %2497, i64 0, !dbg !3731
  %2499 = load i8* %2498, align 1, !dbg !3731
  %2500 = sext i8 %2499 to i32, !dbg !3731
  %2501 = and i32 %2500, 2, !dbg !3731
  %2502 = icmp ne i32 %2501, 0, !dbg !3735
  br i1 %2502, label %2510, label %2503, !dbg !3735

; <label>:2503                                    ; preds = %2496
  %2504 = load i8** @PL_reg_poscache, align 8, !dbg !3736
  %2505 = getelementptr inbounds i8* %2504, i64 0, !dbg !3736
  %2506 = load i8* %2505, align 1, !dbg !3736
  %2507 = sext i8 %2506 to i32, !dbg !3736
  %2508 = or i32 %2507, 2, !dbg !3736
  %2509 = trunc i32 %2508 to i8, !dbg !3736
  store i8 %2509, i8* %2505, align 1, !dbg !3736
  br label %2528, !dbg !3736

; <label>:2510                                    ; preds = %2496
  %2511 = load i8** @PL_reg_poscache, align 8, !dbg !3738
  %2512 = getelementptr inbounds i8* %2511, i64 0, !dbg !3738
  %2513 = load i8* %2512, align 1, !dbg !3738
  %2514 = sext i8 %2513 to i32, !dbg !3738
  %2515 = and i32 %2514, 1, !dbg !3738
  %2516 = icmp ne i32 %2515, 0, !dbg !3741
  br i1 %2516, label %2517, label %2527, !dbg !3741

; <label>:2517                                    ; preds = %2510
  %2518 = shl i32 1, %cache_bit.1, !dbg !3742
  %2519 = xor i32 %2518, -1, !dbg !3742
  %2520 = sext i32 %cache_offset.1 to i64, !dbg !3742
  %2521 = load i8** @PL_reg_poscache, align 8, !dbg !3742
  %2522 = getelementptr inbounds i8* %2521, i64 %2520, !dbg !3742
  %2523 = load i8* %2522, align 1, !dbg !3742
  %2524 = sext i8 %2523 to i32, !dbg !3742
  %2525 = and i32 %2524, %2519, !dbg !3742
  %2526 = trunc i32 %2525 to i8, !dbg !3742
  store i8 %2526, i8* %2522, align 1, !dbg !3742
  br label %2527, !dbg !3742

; <label>:2527                                    ; preds = %2517, %2510
  br label %2528

; <label>:2528                                    ; preds = %2527, %2503
  br label %2529, !dbg !3745

; <label>:2529                                    ; preds = %2528, %2489
  br label %5029, !dbg !3747

; <label>:2530                                    ; preds = %2270
  %2531 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 3, !dbg !3750
  %2532 = load i32* %2531, align 4, !dbg !3750
  %2533 = icmp slt i32 %2118, %2532, !dbg !3752
  br i1 %2533, label %2534, label %2592, !dbg !3753

; <label>:2534                                    ; preds = %2530
  %2535 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 0, !dbg !3754
  %2536 = load i32* %2535, align 4, !dbg !3754
  %2537 = call i32 (i32, ...)* bitcast (i32 (...)* @regcppush to i32 (i32, ...)*)(i32 %2536), !dbg !3756
  call void @llvm.dbg.value(metadata i32 %2537, i64 0, metadata !3578, metadata !566), !dbg !3579
  %2538 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 1, !dbg !3757
  store i32 %2118, i32* %2538, align 4, !dbg !3757
  %2539 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 7, !dbg !3758
  store i8* %locinput.0, i8** %2539, align 8, !dbg !3758
  %2540 = load i32* @PL_savestack_ix, align 4, !dbg !3759
  call void @llvm.dbg.value(metadata i32 %2540, i64 0, metadata !3581, metadata !566), !dbg !3582
  %2541 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 5, !dbg !3760
  %2542 = load %struct.regnode** %2541, align 8, !dbg !3760
  %2543 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2542), !dbg !3762
  %2544 = icmp ne i32 %2543, 0, !dbg !3763
  br i1 %2544, label %2545, label %2586, !dbg !3763

; <label>:2545                                    ; preds = %2534
  %2546 = load i32* @PL_savestack_ix, align 4, !dbg !3764
  %2547 = icmp sgt i32 %2546, %2537, !dbg !3764
  br i1 %2547, label %2548, label %2549, !dbg !3767

; <label>:2548                                    ; preds = %2545
  call void @Perl_leave_scope(i32 %2537), !dbg !3768
  br label %2549, !dbg !3768

; <label>:2549                                    ; preds = %2548, %2545
  %2550 = or i32 %cache_offset.1, %cache_bit.1, !dbg !3770
  %2551 = icmp ne i32 %2550, 0, !dbg !3773
  br i1 %2551, label %2552, label %2585, !dbg !3773

; <label>:2552                                    ; preds = %2549
  %2553 = load i8** @PL_reg_poscache, align 8, !dbg !3774
  %2554 = getelementptr inbounds i8* %2553, i64 0, !dbg !3774
  %2555 = load i8* %2554, align 1, !dbg !3774
  %2556 = sext i8 %2555 to i32, !dbg !3774
  %2557 = and i32 %2556, 2, !dbg !3774
  %2558 = icmp ne i32 %2557, 0, !dbg !3778
  br i1 %2558, label %2566, label %2559, !dbg !3778

; <label>:2559                                    ; preds = %2552
  %2560 = load i8** @PL_reg_poscache, align 8, !dbg !3779
  %2561 = getelementptr inbounds i8* %2560, i64 0, !dbg !3779
  %2562 = load i8* %2561, align 1, !dbg !3779
  %2563 = sext i8 %2562 to i32, !dbg !3779
  %2564 = or i32 %2563, 1, !dbg !3779
  %2565 = trunc i32 %2564 to i8, !dbg !3779
  store i8 %2565, i8* %2561, align 1, !dbg !3779
  br label %2584, !dbg !3779

; <label>:2566                                    ; preds = %2552
  %2567 = load i8** @PL_reg_poscache, align 8, !dbg !3781
  %2568 = getelementptr inbounds i8* %2567, i64 0, !dbg !3781
  %2569 = load i8* %2568, align 1, !dbg !3781
  %2570 = sext i8 %2569 to i32, !dbg !3781
  %2571 = and i32 %2570, 1, !dbg !3781
  %2572 = icmp ne i32 %2571, 0, !dbg !3784
  br i1 %2572, label %2583, label %2573, !dbg !3784

; <label>:2573                                    ; preds = %2566
  %2574 = shl i32 1, %cache_bit.1, !dbg !3785
  %2575 = xor i32 %2574, -1, !dbg !3785
  %2576 = sext i32 %cache_offset.1 to i64, !dbg !3785
  %2577 = load i8** @PL_reg_poscache, align 8, !dbg !3785
  %2578 = getelementptr inbounds i8* %2577, i64 %2576, !dbg !3785
  %2579 = load i8* %2578, align 1, !dbg !3785
  %2580 = sext i8 %2579 to i32, !dbg !3785
  %2581 = and i32 %2580, %2575, !dbg !3785
  %2582 = trunc i32 %2581 to i8, !dbg !3785
  store i8 %2582, i8* %2578, align 1, !dbg !3785
  br label %2583, !dbg !3785

; <label>:2583                                    ; preds = %2573, %2566
  br label %2584

; <label>:2584                                    ; preds = %2583, %2559
  br label %2585, !dbg !3788

; <label>:2585                                    ; preds = %2584, %2549
  br label %5028, !dbg !3790

; <label>:2586                                    ; preds = %2534
  %2587 = load i32* @PL_savestack_ix, align 4, !dbg !3793
  %2588 = icmp sgt i32 %2587, %2540, !dbg !3793
  br i1 %2588, label %2589, label %2590, !dbg !3795

; <label>:2589                                    ; preds = %2586
  call void @Perl_leave_scope(i32 %2540), !dbg !3796
  br label %2590, !dbg !3796

; <label>:2590                                    ; preds = %2589, %2586
  %2591 = call i32 (...)* @regcppop(), !dbg !3798
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !3799
  br label %2592, !dbg !3800

; <label>:2592                                    ; preds = %2590, %2530
  %2593 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3801
  %2594 = getelementptr inbounds %struct.cop* %2593, i32 0, i32 14, !dbg !3801
  %2595 = load %struct.sv** %2594, align 8, !dbg !3801
  %2596 = icmp ne %struct.sv* %2595, null, !dbg !3801
  br i1 %2596, label %2597, label %2621, !dbg !3803

; <label>:2597                                    ; preds = %2592
  %2598 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3804
  %2599 = getelementptr inbounds %struct.cop* %2598, i32 0, i32 14, !dbg !3804
  %2600 = load %struct.sv** %2599, align 8, !dbg !3804
  %2601 = icmp ne %struct.sv* %2600, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !3804
  br i1 %2601, label %2602, label %2621, !dbg !3803

; <label>:2602                                    ; preds = %2597
  %2603 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3806
  %2604 = getelementptr inbounds %struct.cop* %2603, i32 0, i32 14, !dbg !3806
  %2605 = load %struct.sv** %2604, align 8, !dbg !3806
  %2606 = icmp eq %struct.sv* %2605, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !3806
  br i1 %2606, label %2631, label %2607, !dbg !3803

; <label>:2607                                    ; preds = %2602
  %2608 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3808
  %2609 = getelementptr inbounds %struct.cop* %2608, i32 0, i32 14, !dbg !3808
  %2610 = load %struct.sv** %2609, align 8, !dbg !3808
  %2611 = getelementptr inbounds %struct.sv* %2610, i32 0, i32 0, !dbg !3808
  %2612 = load i8** %2611, align 8, !dbg !3808
  %2613 = bitcast i8* %2612 to %struct.xpv*, !dbg !3808
  %2614 = getelementptr inbounds %struct.xpv* %2613, i32 0, i32 0, !dbg !3808
  %2615 = load i8** %2614, align 8, !dbg !3808
  %2616 = getelementptr inbounds i8* %2615, i64 5, !dbg !3808
  %2617 = load i8* %2616, align 1, !dbg !3808
  %2618 = sext i8 %2617 to i32, !dbg !3808
  %2619 = and i32 %2618, 1, !dbg !3808
  %2620 = icmp ne i32 %2619, 0, !dbg !3803
  br i1 %2620, label %2631, label %2621, !dbg !3803

; <label>:2621                                    ; preds = %2607, %2597, %2592
  %2622 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !3810
  %2623 = getelementptr inbounds %struct.cop* %2622, i32 0, i32 14, !dbg !3810
  %2624 = load %struct.sv** %2623, align 8, !dbg !3810
  %2625 = icmp eq %struct.sv* %2624, null, !dbg !3810
  br i1 %2625, label %2626, label %2640, !dbg !3803

; <label>:2626                                    ; preds = %2621
  %2627 = load i8* @PL_dowarn, align 1, !dbg !3814
  %2628 = zext i8 %2627 to i32, !dbg !3814
  %2629 = and i32 %2628, 1, !dbg !3814
  %2630 = icmp ne i32 %2629, 0, !dbg !3803
  br i1 %2630, label %2631, label %2640, !dbg !3803

; <label>:2631                                    ; preds = %2626, %2607, %2602
  %2632 = icmp sge i32 %2118, 32767, !dbg !3816
  br i1 %2632, label %2633, label %2640, !dbg !3803

; <label>:2633                                    ; preds = %2631
  %2634 = load i32* @PL_reg_flags, align 4, !dbg !3820
  %2635 = and i32 %2634, 2, !dbg !3820
  %2636 = icmp ne i32 %2635, 0, !dbg !3803
  br i1 %2636, label %2640, label %2637, !dbg !3803

; <label>:2637                                    ; preds = %2633
  %2638 = load i32* @PL_reg_flags, align 4, !dbg !3821
  %2639 = or i32 %2638, 2, !dbg !3821
  store i32 %2639, i32* @PL_reg_flags, align 4, !dbg !3821
  call void (i32, i8*, ...)* @Perl_warner(i32 20, i8* getelementptr inbounds ([23 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8]* @.str7, i32 0, i32 0), i32 32766), !dbg !3823
  br label %2640, !dbg !3824

; <label>:2640                                    ; preds = %2637, %2633, %2631, %2626, %2621
  %2641 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 8, !dbg !3825
  %2642 = load %struct.curcur** %2641, align 8, !dbg !3825
  store %struct.curcur* %2642, %struct.curcur** @PL_regcc, align 8, !dbg !3826
  %2643 = load %struct.curcur** @PL_regcc, align 8, !dbg !3827
  %2644 = icmp ne %struct.curcur* %2643, null, !dbg !3829
  br i1 %2644, label %2645, label %2649, !dbg !3829

; <label>:2645                                    ; preds = %2640
  %2646 = load %struct.curcur** @PL_regcc, align 8, !dbg !3830
  %2647 = getelementptr inbounds %struct.curcur* %2646, i32 0, i32 1, !dbg !3830
  %2648 = load i32* %2647, align 4, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %2648, i64 0, metadata !2052, metadata !566), !dbg !2053
  br label %2649, !dbg !3831

; <label>:2649                                    ; preds = %2645, %2640
  %ln.7 = phi i32 [ %2648, %2645 ], [ %ln.0, %2640 ]
  %2650 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 6, !dbg !3832
  %2651 = load %struct.regnode** %2650, align 8, !dbg !3832
  %2652 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %2651), !dbg !3834
  %2653 = icmp ne i32 %2652, 0, !dbg !3835
  br i1 %2653, label %2654, label %2691, !dbg !3835

; <label>:2654                                    ; preds = %2649
  %2655 = or i32 %cache_offset.1, %cache_bit.1, !dbg !3836
  %2656 = icmp ne i32 %2655, 0, !dbg !3839
  br i1 %2656, label %2657, label %2690, !dbg !3839

; <label>:2657                                    ; preds = %2654
  %2658 = load i8** @PL_reg_poscache, align 8, !dbg !3840
  %2659 = getelementptr inbounds i8* %2658, i64 0, !dbg !3840
  %2660 = load i8* %2659, align 1, !dbg !3840
  %2661 = sext i8 %2660 to i32, !dbg !3840
  %2662 = and i32 %2661, 2, !dbg !3840
  %2663 = icmp ne i32 %2662, 0, !dbg !3844
  br i1 %2663, label %2671, label %2664, !dbg !3844

; <label>:2664                                    ; preds = %2657
  %2665 = load i8** @PL_reg_poscache, align 8, !dbg !3845
  %2666 = getelementptr inbounds i8* %2665, i64 0, !dbg !3845
  %2667 = load i8* %2666, align 1, !dbg !3845
  %2668 = sext i8 %2667 to i32, !dbg !3845
  %2669 = or i32 %2668, 1, !dbg !3845
  %2670 = trunc i32 %2669 to i8, !dbg !3845
  store i8 %2670, i8* %2666, align 1, !dbg !3845
  br label %2689, !dbg !3845

; <label>:2671                                    ; preds = %2657
  %2672 = load i8** @PL_reg_poscache, align 8, !dbg !3847
  %2673 = getelementptr inbounds i8* %2672, i64 0, !dbg !3847
  %2674 = load i8* %2673, align 1, !dbg !3847
  %2675 = sext i8 %2674 to i32, !dbg !3847
  %2676 = and i32 %2675, 1, !dbg !3847
  %2677 = icmp ne i32 %2676, 0, !dbg !3850
  br i1 %2677, label %2688, label %2678, !dbg !3850

; <label>:2678                                    ; preds = %2671
  %2679 = shl i32 1, %cache_bit.1, !dbg !3851
  %2680 = xor i32 %2679, -1, !dbg !3851
  %2681 = sext i32 %cache_offset.1 to i64, !dbg !3851
  %2682 = load i8** @PL_reg_poscache, align 8, !dbg !3851
  %2683 = getelementptr inbounds i8* %2682, i64 %2681, !dbg !3851
  %2684 = load i8* %2683, align 1, !dbg !3851
  %2685 = sext i8 %2684 to i32, !dbg !3851
  %2686 = and i32 %2685, %2680, !dbg !3851
  %2687 = trunc i32 %2686 to i8, !dbg !3851
  store i8 %2687, i8* %2683, align 1, !dbg !3851
  br label %2688, !dbg !3851

; <label>:2688                                    ; preds = %2678, %2671
  br label %2689

; <label>:2689                                    ; preds = %2688, %2664
  br label %2690, !dbg !3854

; <label>:2690                                    ; preds = %2689, %2654
  br label %5028, !dbg !3856

; <label>:2691                                    ; preds = %2649
  %2692 = load %struct.curcur** @PL_regcc, align 8, !dbg !3859
  %2693 = icmp ne %struct.curcur* %2692, null, !dbg !3861
  br i1 %2693, label %2694, label %2697, !dbg !3861

; <label>:2694                                    ; preds = %2691
  %2695 = load %struct.curcur** @PL_regcc, align 8, !dbg !3862
  %2696 = getelementptr inbounds %struct.curcur* %2695, i32 0, i32 1, !dbg !3862
  store i32 %ln.7, i32* %2696, align 4, !dbg !3862
  br label %2697, !dbg !3862

; <label>:2697                                    ; preds = %2694, %2691
  store %struct.curcur* %2113, %struct.curcur** @PL_regcc, align 8, !dbg !3863
  %2698 = sub nsw i32 %2118, 1, !dbg !3864
  %2699 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 1, !dbg !3865
  store i32 %2698, i32* %2699, align 4, !dbg !3865
  %2700 = getelementptr inbounds %struct.curcur* %2113, i32 0, i32 7, !dbg !3866
  store i8* %2115, i8** %2700, align 8, !dbg !3866
  %2701 = or i32 %cache_offset.1, %cache_bit.1, !dbg !3867
  %2702 = icmp ne i32 %2701, 0, !dbg !3870
  br i1 %2702, label %2703, label %2736, !dbg !3870

; <label>:2703                                    ; preds = %2697
  %2704 = load i8** @PL_reg_poscache, align 8, !dbg !3871
  %2705 = getelementptr inbounds i8* %2704, i64 0, !dbg !3871
  %2706 = load i8* %2705, align 1, !dbg !3871
  %2707 = sext i8 %2706 to i32, !dbg !3871
  %2708 = and i32 %2707, 2, !dbg !3871
  %2709 = icmp ne i32 %2708, 0, !dbg !3875
  br i1 %2709, label %2717, label %2710, !dbg !3875

; <label>:2710                                    ; preds = %2703
  %2711 = load i8** @PL_reg_poscache, align 8, !dbg !3876
  %2712 = getelementptr inbounds i8* %2711, i64 0, !dbg !3876
  %2713 = load i8* %2712, align 1, !dbg !3876
  %2714 = sext i8 %2713 to i32, !dbg !3876
  %2715 = or i32 %2714, 2, !dbg !3876
  %2716 = trunc i32 %2715 to i8, !dbg !3876
  store i8 %2716, i8* %2712, align 1, !dbg !3876
  br label %2735, !dbg !3876

; <label>:2717                                    ; preds = %2703
  %2718 = load i8** @PL_reg_poscache, align 8, !dbg !3878
  %2719 = getelementptr inbounds i8* %2718, i64 0, !dbg !3878
  %2720 = load i8* %2719, align 1, !dbg !3878
  %2721 = sext i8 %2720 to i32, !dbg !3878
  %2722 = and i32 %2721, 1, !dbg !3878
  %2723 = icmp ne i32 %2722, 0, !dbg !3881
  br i1 %2723, label %2724, label %2734, !dbg !3881

; <label>:2724                                    ; preds = %2717
  %2725 = shl i32 1, %cache_bit.1, !dbg !3882
  %2726 = xor i32 %2725, -1, !dbg !3882
  %2727 = sext i32 %cache_offset.1 to i64, !dbg !3882
  %2728 = load i8** @PL_reg_poscache, align 8, !dbg !3882
  %2729 = getelementptr inbounds i8* %2728, i64 %2727, !dbg !3882
  %2730 = load i8* %2729, align 1, !dbg !3882
  %2731 = sext i8 %2730 to i32, !dbg !3882
  %2732 = and i32 %2731, %2726, !dbg !3882
  %2733 = trunc i32 %2732 to i8, !dbg !3882
  store i8 %2733, i8* %2729, align 1, !dbg !3882
  br label %2734, !dbg !3882

; <label>:2734                                    ; preds = %2724, %2717
  br label %2735

; <label>:2735                                    ; preds = %2734, %2710
  br label %2736, !dbg !3885

; <label>:2736                                    ; preds = %2735, %2697
  br label %5029, !dbg !3887

; <label>:2737                                    ; preds = %15
  %2738 = bitcast %struct.regnode* %scan.0 to %struct.regnode_1*, !dbg !3890
  %2739 = getelementptr inbounds %struct.regnode_1* %2738, i32 0, i32 3, !dbg !3890
  %2740 = load i32* %2739, align 4, !dbg !3890
  %2741 = zext i32 %2740 to i64, !dbg !3891
  %2742 = getelementptr inbounds %struct.regnode* %scan.0, i64 %2741, !dbg !3891
  call void @llvm.dbg.value(metadata %struct.regnode* %2742, i64 0, metadata !2086, metadata !566), !dbg !2087
  %2743 = icmp eq %struct.regnode* %2742, %scan.0, !dbg !3892
  br i1 %2743, label %2744, label %2745, !dbg !3894

; <label>:2744                                    ; preds = %2737
  call void @llvm.dbg.value(metadata %struct.regnode* null, i64 0, metadata !2086, metadata !566), !dbg !2087
  br label %2745, !dbg !3895

; <label>:2745                                    ; preds = %2744, %2737
  %next.4 = phi %struct.regnode* [ null, %2744 ], [ %2742, %2737 ]
  %2746 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, !dbg !3896
  %2747 = getelementptr inbounds %struct.regnode* %2746, i64 1, !dbg !3896
  call void @llvm.dbg.value(metadata %struct.regnode* %2747, i64 0, metadata !3897, metadata !566), !dbg !3898
  br label %2750, !dbg !3899

; <label>:2748                                    ; preds = %15
  %2749 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, !dbg !3900
  call void @llvm.dbg.value(metadata %struct.regnode* %2749, i64 0, metadata !3897, metadata !566), !dbg !3898
  br label %2750, !dbg !3901

; <label>:2750                                    ; preds = %2748, %2745
  %inner.0 = phi %struct.regnode* [ %2749, %2748 ], [ %2747, %2745 ]
  %next.5 = phi %struct.regnode* [ %next.0, %2748 ], [ %next.4, %2745 ]
  %2751 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !3902
  %2752 = load i8* %2751, align 1, !dbg !3902
  %2753 = zext i8 %2752 to i32, !dbg !3902
  call void @llvm.dbg.value(metadata i32 %2753, i64 0, metadata !2059, metadata !566), !dbg !2060
  %2754 = getelementptr inbounds %struct.regnode* %next.5, i32 0, i32 1, !dbg !3904
  %2755 = load i8* %2754, align 1, !dbg !3904
  %2756 = zext i8 %2755 to i32, !dbg !3904
  %2757 = icmp ne i32 %2756, %2753, !dbg !3904
  br i1 %2757, label %2758, label %2759, !dbg !3906

; <label>:2758                                    ; preds = %2750
  call void @llvm.dbg.value(metadata %struct.regnode* %inner.0, i64 0, metadata !2086, metadata !566), !dbg !2087
  br label %2778, !dbg !3907

; <label>:2759                                    ; preds = %2750
  %2760 = load i32** @PL_reglastparen, align 8, !dbg !3908
  %2761 = load i32* %2760, align 4, !dbg !3910
  call void @llvm.dbg.value(metadata i32 %2761, i64 0, metadata !3911, metadata !566), !dbg !3912
  %2762 = call i32 @Perl_save_alloc(i32 40, i32 0), !dbg !3913
  call void @llvm.dbg.value(metadata i32 %2762, i64 0, metadata !3914, metadata !566), !dbg !3915
  %2763 = load %union.any** @PL_savestack, align 8, !dbg !3916
  %2764 = bitcast %union.any* %2763 to i8*, !dbg !3916
  %2765 = sext i32 %2762 to i64, !dbg !3916
  %2766 = getelementptr inbounds i8* %2764, i64 %2765, !dbg !3916
  %2767 = bitcast i8* %2766 to %struct.re_unwind_branch_t*, !dbg !3916
  call void @llvm.dbg.value(metadata %struct.re_unwind_branch_t* %2767, i64 0, metadata !3917, metadata !566), !dbg !3918
  %2768 = getelementptr inbounds %struct.re_unwind_branch_t* %2767, i32 0, i32 1, !dbg !3919
  store i32 %unwind.0, i32* %2768, align 4, !dbg !3919
  call void @llvm.dbg.value(metadata i32 %2762, i64 0, metadata !2069, metadata !566), !dbg !2070
  %2769 = icmp eq i32 %2753, 31, !dbg !3920
  %2770 = select i1 %2769, i32 1, i32 2, !dbg !3921
  %2771 = getelementptr inbounds %struct.re_unwind_branch_t* %2767, i32 0, i32 0, !dbg !3922
  store i32 %2770, i32* %2771, align 4, !dbg !3922
  %2772 = getelementptr inbounds %struct.re_unwind_branch_t* %2767, i32 0, i32 3, !dbg !3923
  store i32 %2761, i32* %2772, align 4, !dbg !3923
  %2773 = getelementptr inbounds %struct.re_unwind_branch_t* %2767, i32 0, i32 4, !dbg !3924
  store %struct.regnode* %next.5, %struct.regnode** %2773, align 8, !dbg !3924
  %2774 = getelementptr inbounds %struct.re_unwind_branch_t* %2767, i32 0, i32 5, !dbg !3925
  store i8* %locinput.0, i8** %2774, align 8, !dbg !3925
  %2775 = getelementptr inbounds %struct.re_unwind_branch_t* %2767, i32 0, i32 6, !dbg !3926
  store i32 %nextchr.0, i32* %2775, align 4, !dbg !3926
  %2776 = load i32* @PL_savestack_ix, align 4, !dbg !3927
  %2777 = getelementptr inbounds %struct.re_unwind_branch_t* %2767, i32 0, i32 2, !dbg !3927
  store i32 %2776, i32* %2777, align 4, !dbg !3927
  call void @llvm.dbg.value(metadata %struct.regnode* %inner.0, i64 0, metadata !2086, metadata !566), !dbg !2087
  br label %2778

; <label>:2778                                    ; preds = %2759, %2758
  %unwind.1 = phi i32 [ %unwind.0, %2758 ], [ %2762, %2759 ]
  br label %5023, !dbg !3928

; <label>:2779                                    ; preds = %15
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2063, metadata !566), !dbg !2064
  br label %5023, !dbg !3929

; <label>:2780                                    ; preds = %15
  call void @llvm.dbg.declare(metadata i32* %l9, metadata !3930, metadata !566), !dbg !3932
  store i32 0, i32* %l9, align 4, !dbg !3932
  %2781 = bitcast %struct.regnode* %scan.0 to %struct.regnode_2*, !dbg !3933
  %2782 = getelementptr inbounds %struct.regnode_2* %2781, i32 0, i32 3, !dbg !3933
  %2783 = load i16* %2782, align 2, !dbg !3933
  %2784 = zext i16 %2783 to i32, !dbg !3933
  call void @llvm.dbg.value(metadata i32 %2784, i64 0, metadata !2052, metadata !566), !dbg !2053
  %2785 = bitcast %struct.regnode* %scan.0 to %struct.regnode_2*, !dbg !3934
  %2786 = getelementptr inbounds %struct.regnode_2* %2785, i32 0, i32 4, !dbg !3934
  %2787 = load i16* %2786, align 2, !dbg !3934
  %2788 = zext i16 %2787 to i32, !dbg !3934
  call void @llvm.dbg.value(metadata i32 %2788, i64 0, metadata !2607, metadata !566), !dbg !2608
  %2789 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !3935
  %2790 = load i8* %2789, align 1, !dbg !3935
  %2791 = zext i8 %2790 to i32, !dbg !3935
  call void @llvm.dbg.value(metadata i32 %2791, i64 0, metadata !3936, metadata !566), !dbg !3937
  %2792 = icmp ne i32 %2791, 0, !dbg !3938
  br i1 %2792, label %2793, label %2804, !dbg !3938

; <label>:2793                                    ; preds = %2780
  %2794 = load i32* @PL_regsize, align 4, !dbg !3939
  %2795 = icmp sgt i32 %2791, %2794, !dbg !3943
  br i1 %2795, label %2796, label %2797, !dbg !3944

; <label>:2796                                    ; preds = %2793
  store i32 %2791, i32* @PL_regsize, align 4, !dbg !3945
  br label %2797, !dbg !3945

; <label>:2797                                    ; preds = %2796, %2793
  %2798 = load i32** @PL_reglastparen, align 8, !dbg !3946
  %2799 = load i32* %2798, align 4, !dbg !3948
  %2800 = icmp sgt i32 %2791, %2799, !dbg !3949
  br i1 %2800, label %2801, label %2803, !dbg !3950

; <label>:2801                                    ; preds = %2797
  %2802 = load i32** @PL_reglastparen, align 8, !dbg !3951
  store i32 %2791, i32* %2802, align 4, !dbg !3952
  br label %2803, !dbg !3952

; <label>:2803                                    ; preds = %2801, %2797
  br label %2804, !dbg !3953

; <label>:2804                                    ; preds = %2803, %2780
  %2805 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, !dbg !3954
  %2806 = getelementptr inbounds %struct.regnode* %2805, i64 1, !dbg !3954
  call void @llvm.dbg.value(metadata %struct.regnode* %2806, i64 0, metadata !2077, metadata !566), !dbg !2078
  %2807 = icmp ne i32 %2791, 0, !dbg !3955
  br i1 %2807, label %2808, label %2814, !dbg !3955

; <label>:2808                                    ; preds = %2804
  %2809 = getelementptr inbounds %struct.regnode* %2806, i32 0, i32 2, !dbg !3956
  %2810 = load i16* %2809, align 2, !dbg !3956
  %2811 = zext i16 %2810 to i32, !dbg !3956
  %2812 = sext i32 %2811 to i64, !dbg !3958
  %2813 = getelementptr inbounds %struct.regnode* %2806, i64 %2812, !dbg !3958
  call void @llvm.dbg.value(metadata %struct.regnode* %2813, i64 0, metadata !2077, metadata !566), !dbg !2078
  br label %2814, !dbg !3958

; <label>:2814                                    ; preds = %2808, %2804
  %scan.1 = phi %struct.regnode* [ %2813, %2808 ], [ %2806, %2804 ]
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !3959
  %2815 = icmp ne i32 %minmod.0, 0, !dbg !3960
  br i1 %2815, label %2816, label %3167, !dbg !3960

; <label>:2816                                    ; preds = %2814
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2063, metadata !566), !dbg !2064
  %2817 = icmp ne i32 %2784, 0, !dbg !3961
  br i1 %2817, label %2818, label %2822, !dbg !3961

; <label>:2818                                    ; preds = %2816
  %2819 = call i32 (%struct.regnode*, i32, i32*, ...)* bitcast (i32 (...)* @regrepeat_hard to i32 (%struct.regnode*, i32, i32*, ...)*)(%struct.regnode* %scan.1, i32 %2784, i32* %l9), !dbg !3964
  %2820 = icmp slt i32 %2819, %2784, !dbg !3964
  br i1 %2820, label %2821, label %2822, !dbg !3961

; <label>:2821                                    ; preds = %2818
  br label %5029, !dbg !3966

; <label>:2822                                    ; preds = %2818, %2816
  %2823 = load i8** @PL_reginput, align 8, !dbg !3967
  call void @llvm.dbg.value(metadata i8* %2823, i64 0, metadata !2057, metadata !566), !dbg !2058
  %2824 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3968
  %2825 = load i8* %2824, align 1, !dbg !3968
  %2826 = zext i8 %2825 to i64, !dbg !3968
  %2827 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %2826, !dbg !3968
  %2828 = load i8* %2827, align 1, !dbg !3968
  %2829 = zext i8 %2828 to i32, !dbg !3968
  %2830 = icmp eq i32 %2829, 33, !dbg !3968
  br i1 %2830, label %2888, label %2831, !dbg !3970

; <label>:2831                                    ; preds = %2822
  %2832 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3971
  %2833 = load i8* %2832, align 1, !dbg !3971
  %2834 = zext i8 %2833 to i64, !dbg !3971
  %2835 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %2834, !dbg !3971
  %2836 = load i8* %2835, align 1, !dbg !3971
  %2837 = zext i8 %2836 to i32, !dbg !3971
  %2838 = icmp eq i32 %2837, 47, !dbg !3971
  br i1 %2838, label %2888, label %2839, !dbg !3970

; <label>:2839                                    ; preds = %2831
  %2840 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3973
  %2841 = load i8* %2840, align 1, !dbg !3973
  %2842 = zext i8 %2841 to i32, !dbg !3973
  %2843 = icmp eq i32 %2842, 45, !dbg !3973
  br i1 %2843, label %2888, label %2844, !dbg !3970

; <label>:2844                                    ; preds = %2839
  %2845 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3975
  %2846 = load i8* %2845, align 1, !dbg !3975
  %2847 = zext i8 %2846 to i32, !dbg !3975
  %2848 = icmp eq i32 %2847, 46, !dbg !3975
  br i1 %2848, label %2888, label %2849, !dbg !3970

; <label>:2849                                    ; preds = %2844
  %2850 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3977
  %2851 = load i8* %2850, align 1, !dbg !3977
  %2852 = zext i8 %2851 to i32, !dbg !3977
  %2853 = icmp eq i32 %2852, 57, !dbg !3977
  br i1 %2853, label %2888, label %2854, !dbg !3970

; <label>:2854                                    ; preds = %2849
  %2855 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3979
  %2856 = load i8* %2855, align 1, !dbg !3979
  %2857 = zext i8 %2856 to i32, !dbg !3979
  %2858 = icmp eq i32 %2857, 52, !dbg !3979
  br i1 %2858, label %2888, label %2859, !dbg !3970

; <label>:2859                                    ; preds = %2854
  %2860 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3981
  %2861 = load i8* %2860, align 1, !dbg !3981
  %2862 = zext i8 %2861 to i32, !dbg !3981
  %2863 = icmp eq i32 %2862, 50, !dbg !3981
  br i1 %2863, label %2888, label %2864, !dbg !3970

; <label>:2864                                    ; preds = %2859
  %2865 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3983
  %2866 = load i8* %2865, align 1, !dbg !3983
  %2867 = zext i8 %2866 to i32, !dbg !3983
  %2868 = icmp eq i32 %2867, 39, !dbg !3983
  br i1 %2868, label %2888, label %2869, !dbg !3970

; <label>:2869                                    ; preds = %2864
  %2870 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3985
  %2871 = load i8* %2870, align 1, !dbg !3985
  %2872 = zext i8 %2871 to i32, !dbg !3985
  %2873 = icmp eq i32 %2872, 58, !dbg !3985
  br i1 %2873, label %2888, label %2874, !dbg !3970

; <label>:2874                                    ; preds = %2869
  %2875 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3987
  %2876 = load i8* %2875, align 1, !dbg !3987
  %2877 = zext i8 %2876 to i64, !dbg !3987
  %2878 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %2877, !dbg !3987
  %2879 = load i8* %2878, align 1, !dbg !3987
  %2880 = zext i8 %2879 to i32, !dbg !3987
  %2881 = icmp eq i32 %2880, 40, !dbg !3987
  br i1 %2881, label %2882, label %3078, !dbg !3970

; <label>:2882                                    ; preds = %2874
  %2883 = bitcast %struct.regnode* %next.0 to %struct.regnode_2*, !dbg !3989
  %2884 = getelementptr inbounds %struct.regnode_2* %2883, i32 0, i32 3, !dbg !3989
  %2885 = load i16* %2884, align 2, !dbg !3989
  %2886 = zext i16 %2885 to i32, !dbg !3989
  %2887 = icmp sgt i32 %2886, 0, !dbg !3989
  br i1 %2887, label %2888, label %3078, !dbg !3970

; <label>:2888                                    ; preds = %2882, %2869, %2864, %2859, %2854, %2849, %2844, %2839, %2831, %2822
  call void @llvm.dbg.value(metadata %struct.regnode* %next.0, i64 0, metadata !3991, metadata !566), !dbg !3993
  %2889 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3994
  %2890 = load i8* %2889, align 1, !dbg !3994
  %2891 = zext i8 %2890 to i64, !dbg !3994
  %2892 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %2891, !dbg !3994
  %2893 = load i8* %2892, align 1, !dbg !3994
  %2894 = zext i8 %2893 to i32, !dbg !3994
  %2895 = icmp eq i32 %2894, 33, !dbg !3994
  br i1 %2895, label %3012, label %2896, !dbg !3996

; <label>:2896                                    ; preds = %2888
  %2897 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !3997
  %2898 = load i8* %2897, align 1, !dbg !3997
  %2899 = zext i8 %2898 to i64, !dbg !3997
  %2900 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %2899, !dbg !3997
  %2901 = load i8* %2900, align 1, !dbg !3997
  %2902 = zext i8 %2901 to i32, !dbg !3997
  %2903 = icmp eq i32 %2902, 47, !dbg !3997
  br i1 %2903, label %3012, label %2904, !dbg !3996

; <label>:2904                                    ; preds = %2896
  br label %2905, !dbg !3999

; <label>:2905                                    ; preds = %3010, %2904
  %text_node.0 = phi %struct.regnode* [ %next.0, %2904 ], [ %text_node.3, %3010 ]
  %2906 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4002
  %2907 = load i8* %2906, align 1, !dbg !4002
  %2908 = zext i8 %2907 to i32, !dbg !4002
  %2909 = icmp eq i32 %2908, 45, !dbg !4002
  br i1 %2909, label %2956, label %2910, !dbg !4002

; <label>:2910                                    ; preds = %2905
  %2911 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4005
  %2912 = load i8* %2911, align 1, !dbg !4005
  %2913 = zext i8 %2912 to i32, !dbg !4005
  %2914 = icmp eq i32 %2913, 46, !dbg !4005
  br i1 %2914, label %2956, label %2915, !dbg !4005

; <label>:2915                                    ; preds = %2910
  %2916 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4007
  %2917 = load i8* %2916, align 1, !dbg !4007
  %2918 = zext i8 %2917 to i32, !dbg !4007
  %2919 = icmp eq i32 %2918, 57, !dbg !4007
  br i1 %2919, label %2956, label %2920, !dbg !4007

; <label>:2920                                    ; preds = %2915
  %2921 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4009
  %2922 = load i8* %2921, align 1, !dbg !4009
  %2923 = zext i8 %2922 to i32, !dbg !4009
  %2924 = icmp eq i32 %2923, 52, !dbg !4009
  br i1 %2924, label %2956, label %2925, !dbg !4009

; <label>:2925                                    ; preds = %2920
  %2926 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4011
  %2927 = load i8* %2926, align 1, !dbg !4011
  %2928 = zext i8 %2927 to i32, !dbg !4011
  %2929 = icmp eq i32 %2928, 50, !dbg !4011
  br i1 %2929, label %2956, label %2930, !dbg !4011

; <label>:2930                                    ; preds = %2925
  %2931 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4013
  %2932 = load i8* %2931, align 1, !dbg !4013
  %2933 = zext i8 %2932 to i32, !dbg !4013
  %2934 = icmp eq i32 %2933, 39, !dbg !4013
  br i1 %2934, label %2956, label %2935, !dbg !4013

; <label>:2935                                    ; preds = %2930
  %2936 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4015
  %2937 = load i8* %2936, align 1, !dbg !4015
  %2938 = zext i8 %2937 to i32, !dbg !4015
  %2939 = icmp eq i32 %2938, 58, !dbg !4015
  br i1 %2939, label %2956, label %2940, !dbg !4015

; <label>:2940                                    ; preds = %2935
  %2941 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4017
  %2942 = load i8* %2941, align 1, !dbg !4017
  %2943 = zext i8 %2942 to i64, !dbg !4017
  %2944 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %2943, !dbg !4017
  %2945 = load i8* %2944, align 1, !dbg !4017
  %2946 = zext i8 %2945 to i32, !dbg !4017
  %2947 = icmp eq i32 %2946, 40, !dbg !4017
  br i1 %2947, label %2948, label %2954, !dbg !4017

; <label>:2948                                    ; preds = %2940
  %2949 = bitcast %struct.regnode* %text_node.0 to %struct.regnode_2*, !dbg !4019
  %2950 = getelementptr inbounds %struct.regnode_2* %2949, i32 0, i32 3, !dbg !4019
  %2951 = load i16* %2950, align 2, !dbg !4019
  %2952 = zext i16 %2951 to i32, !dbg !4019
  %2953 = icmp sgt i32 %2952, 0, !dbg !4019
  br label %2954

; <label>:2954                                    ; preds = %2948, %2940
  %2955 = phi i1 [ false, %2940 ], [ %2953, %2948 ]
  br label %2956, !dbg !4021

; <label>:2956                                    ; preds = %2954, %2935, %2930, %2925, %2920, %2915, %2910, %2905
  %2957 = phi i1 [ true, %2935 ], [ true, %2930 ], [ true, %2925 ], [ true, %2920 ], [ true, %2915 ], [ true, %2910 ], [ true, %2905 ], [ %2955, %2954 ]
  br i1 %2957, label %2958, label %3011, !dbg !4023

; <label>:2958                                    ; preds = %2956
  %2959 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4032
  %2960 = load i8* %2959, align 1, !dbg !4032
  %2961 = zext i8 %2960 to i32, !dbg !4032
  %2962 = icmp eq i32 %2961, 52, !dbg !4032
  br i1 %2962, label %2971, label %2963, !dbg !4035

; <label>:2963                                    ; preds = %2958
  %2964 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4036
  %2965 = load i8* %2964, align 1, !dbg !4036
  %2966 = zext i8 %2965 to i64, !dbg !4036
  %2967 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %2966, !dbg !4036
  %2968 = load i8* %2967, align 1, !dbg !4036
  %2969 = zext i8 %2968 to i32, !dbg !4036
  %2970 = icmp eq i32 %2969, 40, !dbg !4036
  br i1 %2970, label %2971, label %2974, !dbg !4035

; <label>:2971                                    ; preds = %2963, %2958
  %2972 = getelementptr inbounds %struct.regnode* %text_node.0, i64 1, !dbg !4038
  %2973 = getelementptr inbounds %struct.regnode* %2972, i64 1, !dbg !4038
  call void @llvm.dbg.value(metadata %struct.regnode* %2973, i64 0, metadata !3991, metadata !566), !dbg !3993
  br label %3010, !dbg !4038

; <label>:2974                                    ; preds = %2963
  %2975 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4041
  %2976 = load i8* %2975, align 1, !dbg !4041
  %2977 = zext i8 %2976 to i32, !dbg !4041
  %2978 = icmp eq i32 %2977, 39, !dbg !4041
  br i1 %2978, label %2979, label %2981, !dbg !4044

; <label>:2979                                    ; preds = %2974
  %2980 = getelementptr inbounds %struct.regnode* %text_node.0, i64 1, !dbg !4045
  call void @llvm.dbg.value(metadata %struct.regnode* %2980, i64 0, metadata !3991, metadata !566), !dbg !3993
  br label %3009, !dbg !4045

; <label>:2981                                    ; preds = %2974
  %2982 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 1, !dbg !4047
  %2983 = load i8* %2982, align 1, !dbg !4047
  %2984 = zext i8 %2983 to i32, !dbg !4047
  %2985 = icmp eq i32 %2984, 50, !dbg !4047
  br i1 %2985, label %2986, label %3002, !dbg !4050

; <label>:2986                                    ; preds = %2981
  %2987 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 0, !dbg !4051
  %2988 = load i8* %2987, align 1, !dbg !4051
  %2989 = zext i8 %2988 to i32, !dbg !4051
  %2990 = icmp eq i32 %2989, 0, !dbg !4051
  br i1 %2990, label %2991, label %2994, !dbg !4051

; <label>:2991                                    ; preds = %2986
  %2992 = getelementptr inbounds %struct.regnode* %text_node.0, i64 1, !dbg !4053
  %2993 = getelementptr inbounds %struct.regnode* %2992, i64 1, !dbg !4053
  br label %3000, !dbg !4053

; <label>:2994                                    ; preds = %2986
  %2995 = bitcast %struct.regnode* %text_node.0 to %struct.regnode_1*, !dbg !4055
  %2996 = getelementptr inbounds %struct.regnode_1* %2995, i32 0, i32 3, !dbg !4055
  %2997 = load i32* %2996, align 4, !dbg !4055
  %2998 = zext i32 %2997 to i64, !dbg !4055
  %2999 = getelementptr inbounds %struct.regnode* %text_node.0, i64 %2998, !dbg !4055
  br label %3000, !dbg !4055

; <label>:3000                                    ; preds = %2994, %2991
  %3001 = phi %struct.regnode* [ %2993, %2991 ], [ %2999, %2994 ], !dbg !4057
  call void @llvm.dbg.value(metadata %struct.regnode* %3001, i64 0, metadata !3991, metadata !566), !dbg !3993
  br label %3008, !dbg !4058

; <label>:3002                                    ; preds = %2981
  %3003 = getelementptr inbounds %struct.regnode* %text_node.0, i32 0, i32 2, !dbg !4061
  %3004 = load i16* %3003, align 2, !dbg !4061
  %3005 = zext i16 %3004 to i32, !dbg !4061
  %3006 = sext i32 %3005 to i64, !dbg !4061
  %3007 = getelementptr inbounds %struct.regnode* %text_node.0, i64 %3006, !dbg !4061
  call void @llvm.dbg.value(metadata %struct.regnode* %3007, i64 0, metadata !3991, metadata !566), !dbg !3993
  br label %3008

; <label>:3008                                    ; preds = %3002, %3000
  %text_node.1 = phi %struct.regnode* [ %3001, %3000 ], [ %3007, %3002 ]
  br label %3009

; <label>:3009                                    ; preds = %3008, %2979
  %text_node.2 = phi %struct.regnode* [ %2980, %2979 ], [ %text_node.1, %3008 ]
  br label %3010

; <label>:3010                                    ; preds = %3009, %2971
  %text_node.3 = phi %struct.regnode* [ %2973, %2971 ], [ %text_node.2, %3009 ]
  br label %2905, !dbg !4063

; <label>:3011                                    ; preds = %2956
  br label %3012, !dbg !4065

; <label>:3012                                    ; preds = %3011, %2896, %2888
  %text_node.4 = phi %struct.regnode* [ %next.0, %2888 ], [ %next.0, %2896 ], [ %text_node.0, %3011 ]
  %3013 = getelementptr inbounds %struct.regnode* %text_node.4, i32 0, i32 1, !dbg !4067
  %3014 = load i8* %3013, align 1, !dbg !4067
  %3015 = zext i8 %3014 to i64, !dbg !4067
  %3016 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3015, !dbg !4067
  %3017 = load i8* %3016, align 1, !dbg !4067
  %3018 = zext i8 %3017 to i32, !dbg !4067
  %3019 = icmp eq i32 %3018, 33, !dbg !4067
  br i1 %3019, label %3029, label %3020, !dbg !4069

; <label>:3020                                    ; preds = %3012
  %3021 = getelementptr inbounds %struct.regnode* %text_node.4, i32 0, i32 1, !dbg !4070
  %3022 = load i8* %3021, align 1, !dbg !4070
  %3023 = zext i8 %3022 to i64, !dbg !4070
  %3024 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3023, !dbg !4070
  %3025 = load i8* %3024, align 1, !dbg !4070
  %3026 = zext i8 %3025 to i32, !dbg !4070
  %3027 = icmp eq i32 %3026, 47, !dbg !4070
  br i1 %3027, label %3029, label %3028, !dbg !4069

; <label>:3028                                    ; preds = %3020
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2061, metadata !566), !dbg !2062
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2059, metadata !566), !dbg !2060
  br label %3077, !dbg !4072

; <label>:3029                                    ; preds = %3020, %3012
  %3030 = getelementptr inbounds %struct.regnode* %text_node.4, i32 0, i32 1, !dbg !4073
  %3031 = load i8* %3030, align 1, !dbg !4073
  %3032 = zext i8 %3031 to i64, !dbg !4076
  %3033 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3032, !dbg !4076
  %3034 = load i8* %3033, align 1, !dbg !4076
  %3035 = zext i8 %3034 to i32, !dbg !4076
  %3036 = icmp eq i32 %3035, 47, !dbg !4076
  br i1 %3036, label %3037, label %3038, !dbg !4077

; <label>:3037                                    ; preds = %3029
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2061, metadata !566), !dbg !2062
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2059, metadata !566), !dbg !2060
  br label %3080, !dbg !4078

; <label>:3038                                    ; preds = %3029
  %3039 = bitcast %struct.regnode* %text_node.4 to %struct.regnode_string*, !dbg !4080
  %3040 = getelementptr inbounds %struct.regnode_string* %3039, i32 0, i32 3, !dbg !4080
  %3041 = getelementptr inbounds [1 x i8]* %3040, i32 0, i32 0, !dbg !4080
  %3042 = load i8* %3041, align 1, !dbg !4082
  %3043 = zext i8 %3042 to i32, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %3043, i64 0, metadata !2059, metadata !566), !dbg !2060
  br label %3044

; <label>:3044                                    ; preds = %3038
  %3045 = getelementptr inbounds %struct.regnode* %text_node.4, i32 0, i32 1, !dbg !4084
  %3046 = load i8* %3045, align 1, !dbg !4084
  %3047 = zext i8 %3046 to i32, !dbg !4084
  %3048 = icmp eq i32 %3047, 34, !dbg !4084
  br i1 %3048, label %3054, label %3049, !dbg !4086

; <label>:3049                                    ; preds = %3044
  %3050 = getelementptr inbounds %struct.regnode* %text_node.4, i32 0, i32 1, !dbg !4087
  %3051 = load i8* %3050, align 1, !dbg !4087
  %3052 = zext i8 %3051 to i32, !dbg !4087
  %3053 = icmp eq i32 %3052, 48, !dbg !4087
  br i1 %3053, label %3054, label %3059, !dbg !4086

; <label>:3054                                    ; preds = %3049, %3044
  %3055 = sext i32 %3043 to i64, !dbg !4089
  %3056 = getelementptr inbounds [0 x i8]* @PL_fold, i32 0, i64 %3055, !dbg !4089
  %3057 = load i8* %3056, align 1, !dbg !4089
  %3058 = zext i8 %3057 to i32, !dbg !4089
  call void @llvm.dbg.value(metadata i32 %3058, i64 0, metadata !2061, metadata !566), !dbg !2062
  br label %3076, !dbg !4090

; <label>:3059                                    ; preds = %3049
  %3060 = getelementptr inbounds %struct.regnode* %text_node.4, i32 0, i32 1, !dbg !4091
  %3061 = load i8* %3060, align 1, !dbg !4091
  %3062 = zext i8 %3061 to i32, !dbg !4091
  %3063 = icmp eq i32 %3062, 35, !dbg !4091
  br i1 %3063, label %3069, label %3064, !dbg !4093

; <label>:3064                                    ; preds = %3059
  %3065 = getelementptr inbounds %struct.regnode* %text_node.4, i32 0, i32 1, !dbg !4094
  %3066 = load i8* %3065, align 1, !dbg !4094
  %3067 = zext i8 %3066 to i32, !dbg !4094
  %3068 = icmp eq i32 %3067, 49, !dbg !4094
  br i1 %3068, label %3069, label %3074, !dbg !4093

; <label>:3069                                    ; preds = %3064, %3059
  %3070 = sext i32 %3043 to i64, !dbg !4096
  %3071 = getelementptr inbounds [0 x i8]* @PL_fold_locale, i32 0, i64 %3070, !dbg !4096
  %3072 = load i8* %3071, align 1, !dbg !4096
  %3073 = zext i8 %3072 to i32, !dbg !4096
  call void @llvm.dbg.value(metadata i32 %3073, i64 0, metadata !2061, metadata !566), !dbg !2062
  br label %3075, !dbg !4097

; <label>:3074                                    ; preds = %3064
  call void @llvm.dbg.value(metadata i32 %3043, i64 0, metadata !2061, metadata !566), !dbg !2062
  br label %3075

; <label>:3075                                    ; preds = %3074, %3069
  %c2.1 = phi i32 [ %3073, %3069 ], [ %3043, %3074 ]
  br label %3076

; <label>:3076                                    ; preds = %3075, %3054
  %c2.2 = phi i32 [ %3058, %3054 ], [ %c2.1, %3075 ]
  br label %3077

; <label>:3077                                    ; preds = %3076, %3028
  %c2.3 = phi i32 [ %c2.2, %3076 ], [ -1000, %3028 ]
  %c1.1 = phi i32 [ %3043, %3076 ], [ -1000, %3028 ]
  br label %3079, !dbg !4098

; <label>:3078                                    ; preds = %2882, %2874
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2061, metadata !566), !dbg !2062
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2059, metadata !566), !dbg !2060
  br label %3079

; <label>:3079                                    ; preds = %3078, %3077
  %c2.4 = phi i32 [ %c2.3, %3077 ], [ -1000, %3078 ]
  %c1.2 = phi i32 [ %c1.1, %3077 ], [ -1000, %3078 ]
  br label %3080, !dbg !4099

; <label>:3080                                    ; preds = %3079, %3037
  %c2.5 = phi i32 [ -1000, %3037 ], [ %c2.4, %3079 ]
  %c1.3 = phi i32 [ -1000, %3037 ], [ %c1.2, %3079 ]
  %3081 = load i32* @PL_savestack_ix, align 4, !dbg !4100
  call void @llvm.dbg.value(metadata i32 %3081, i64 0, metadata !4101, metadata !566), !dbg !4102
  br label %3082, !dbg !4103

; <label>:3082                                    ; preds = %3165, %3080
  %locinput.6 = phi i8* [ %2823, %3080 ], [ %3163, %3165 ]
  %ln.8 = phi i32 [ %2784, %3080 ], [ %3162, %3165 ]
  %3083 = icmp sge i32 %2788, %ln.8, !dbg !4104
  br i1 %3083, label %3090, label %3084, !dbg !4104

; <label>:3084                                    ; preds = %3082
  %3085 = icmp eq i32 %2788, 32767, !dbg !4105
  br i1 %3085, label %3086, label %3088, !dbg !4105

; <label>:3086                                    ; preds = %3084
  %3087 = icmp sgt i32 %ln.8, 0, !dbg !4107
  br label %3088

; <label>:3088                                    ; preds = %3086, %3084
  %3089 = phi i1 [ false, %3084 ], [ %3087, %3086 ]
  br label %3090, !dbg !4109

; <label>:3090                                    ; preds = %3088, %3082
  %3091 = phi i1 [ true, %3082 ], [ %3089, %3088 ]
  br i1 %3091, label %3092, label %3166, !dbg !4111

; <label>:3092                                    ; preds = %3090
  %3093 = icmp eq i32 %c1.3, -1000, !dbg !4114
  br i1 %3093, label %3104, label %3094, !dbg !4117

; <label>:3094                                    ; preds = %3092
  %3095 = load i8** @PL_reginput, align 8, !dbg !4118
  %3096 = load i8* %3095, align 1, !dbg !4118
  %3097 = zext i8 %3096 to i32, !dbg !4118
  %3098 = icmp eq i32 %3097, %c1.3, !dbg !4118
  br i1 %3098, label %3104, label %3099, !dbg !4117

; <label>:3099                                    ; preds = %3094
  %3100 = load i8** @PL_reginput, align 8, !dbg !4119
  %3101 = load i8* %3100, align 1, !dbg !4119
  %3102 = zext i8 %3101 to i32, !dbg !4119
  %3103 = icmp eq i32 %3102, %c2.5, !dbg !4119
  br i1 %3103, label %3104, label %3158, !dbg !4117

; <label>:3104                                    ; preds = %3099, %3094, %3092
  %3105 = icmp ne i32 %2791, 0, !dbg !4120
  br i1 %3105, label %3106, label %3149, !dbg !4120

; <label>:3106                                    ; preds = %3104
  %3107 = icmp ne i32 %ln.8, 0, !dbg !4122
  br i1 %3107, label %3108, label %3144, !dbg !4122

; <label>:3108                                    ; preds = %3106
  %3109 = load i8* @PL_reg_match_utf8, align 1, !dbg !4125
  %3110 = sext i8 %3109 to i32, !dbg !4125
  %3111 = icmp ne i32 %3110, 0, !dbg !4125
  br i1 %3111, label %3112, label %3119, !dbg !4125

; <label>:3112                                    ; preds = %3108
  %3113 = load i8** @PL_reginput, align 8, !dbg !4128
  %3114 = load i32* %l9, align 4, !dbg !4128
  %3115 = sub nsw i32 0, %3114, !dbg !4128
  %3116 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %3113, i32 %3115), !dbg !4128
  %3117 = sext i32 %3116 to i64, !dbg !4128
  %3118 = inttoptr i64 %3117 to i8*, !dbg !4128
  br label %3125, !dbg !4128

; <label>:3119                                    ; preds = %3108
  %3120 = load i8** @PL_reginput, align 8, !dbg !4130
  %3121 = load i32* %l9, align 4, !dbg !4130
  %3122 = sub nsw i32 0, %3121, !dbg !4130
  %3123 = sext i32 %3122 to i64, !dbg !4130
  %3124 = getelementptr inbounds i8* %3120, i64 %3123, !dbg !4130
  br label %3125, !dbg !4130

; <label>:3125                                    ; preds = %3119, %3112
  %3126 = phi i8* [ %3118, %3112 ], [ %3124, %3119 ], !dbg !4125
  %3127 = load i8** @PL_bostr, align 8, !dbg !4132
  %3128 = ptrtoint i8* %3126 to i64, !dbg !4125
  %3129 = ptrtoint i8* %3127 to i64, !dbg !4125
  %3130 = sub i64 %3128, %3129, !dbg !4125
  %3131 = trunc i64 %3130 to i32, !dbg !4125
  %3132 = sext i32 %2791 to i64, !dbg !4135
  %3133 = load i32** @PL_regstartp, align 8, !dbg !4135
  %3134 = getelementptr inbounds i32* %3133, i64 %3132, !dbg !4135
  store i32 %3131, i32* %3134, align 4, !dbg !4135
  %3135 = load i8** @PL_reginput, align 8, !dbg !4136
  %3136 = load i8** @PL_bostr, align 8, !dbg !4137
  %3137 = ptrtoint i8* %3135 to i64, !dbg !4136
  %3138 = ptrtoint i8* %3136 to i64, !dbg !4136
  %3139 = sub i64 %3137, %3138, !dbg !4136
  %3140 = trunc i64 %3139 to i32, !dbg !4136
  %3141 = sext i32 %2791 to i64, !dbg !4138
  %3142 = load i32** @PL_regendp, align 8, !dbg !4138
  %3143 = getelementptr inbounds i32* %3142, i64 %3141, !dbg !4138
  store i32 %3140, i32* %3143, align 4, !dbg !4138
  br label %3148, !dbg !4139

; <label>:3144                                    ; preds = %3106
  %3145 = sext i32 %2791 to i64, !dbg !4140
  %3146 = load i32** @PL_regendp, align 8, !dbg !4140
  %3147 = getelementptr inbounds i32* %3146, i64 %3145, !dbg !4140
  store i32 -1, i32* %3147, align 4, !dbg !4140
  br label %3148

; <label>:3148                                    ; preds = %3144, %3125
  br label %3149, !dbg !4141

; <label>:3149                                    ; preds = %3148, %3104
  %3150 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %next.0), !dbg !4142
  %3151 = icmp ne i32 %3150, 0, !dbg !4144
  br i1 %3151, label %3152, label %3153, !dbg !4144

; <label>:3152                                    ; preds = %3149
  br label %5028, !dbg !4145

; <label>:3153                                    ; preds = %3149
  %3154 = load i32* @PL_savestack_ix, align 4, !dbg !4146
  %3155 = icmp sgt i32 %3154, %3081, !dbg !4146
  br i1 %3155, label %3156, label %3157, !dbg !4148

; <label>:3156                                    ; preds = %3153
  call void @Perl_leave_scope(i32 %3081), !dbg !4149
  br label %3157, !dbg !4149

; <label>:3157                                    ; preds = %3156, %3153
  br label %3158, !dbg !4151

; <label>:3158                                    ; preds = %3157, %3099
  store i8* %locinput.6, i8** @PL_reginput, align 8, !dbg !4152
  %3159 = call i32 (%struct.regnode*, i32, i32*, ...)* bitcast (i32 (...)* @regrepeat_hard to i32 (%struct.regnode*, i32, i32*, ...)*)(%struct.regnode* %scan.1, i32 1, i32* %l9), !dbg !4153
  %3160 = icmp ne i32 %3159, 0, !dbg !4155
  br i1 %3160, label %3161, label %3164, !dbg !4155

; <label>:3161                                    ; preds = %3158
  %3162 = add nsw i32 %ln.8, 1, !dbg !4156
  call void @llvm.dbg.value(metadata i32 %3162, i64 0, metadata !2052, metadata !566), !dbg !2053
  %3163 = load i8** @PL_reginput, align 8, !dbg !4158
  call void @llvm.dbg.value(metadata i8* %3163, i64 0, metadata !2057, metadata !566), !dbg !2058
  br label %3165, !dbg !4159

; <label>:3164                                    ; preds = %3158
  br label %5029, !dbg !4160

; <label>:3165                                    ; preds = %3161
  br label %3082, !dbg !4103

; <label>:3166                                    ; preds = %3090
  br label %3518, !dbg !4161

; <label>:3167                                    ; preds = %2814
  %3168 = call i32 (%struct.regnode*, i32, i32*, ...)* bitcast (i32 (...)* @regrepeat_hard to i32 (%struct.regnode*, i32, i32*, ...)*)(%struct.regnode* %scan.1, i32 %2788, i32* %l9), !dbg !4162
  call void @llvm.dbg.value(metadata i32 %3168, i64 0, metadata !2607, metadata !566), !dbg !2608
  %3169 = load i8** @PL_reginput, align 8, !dbg !4164
  call void @llvm.dbg.value(metadata i8* %3169, i64 0, metadata !2057, metadata !566), !dbg !2058
  %3170 = icmp sge i32 %3168, %2784, !dbg !4165
  br i1 %3170, label %3171, label %3428, !dbg !4167

; <label>:3171                                    ; preds = %3167
  %3172 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4168
  %3173 = load i8* %3172, align 1, !dbg !4168
  %3174 = zext i8 %3173 to i64, !dbg !4168
  %3175 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3174, !dbg !4168
  %3176 = load i8* %3175, align 1, !dbg !4168
  %3177 = zext i8 %3176 to i32, !dbg !4168
  %3178 = icmp eq i32 %3177, 33, !dbg !4168
  br i1 %3178, label %3236, label %3179, !dbg !4171

; <label>:3179                                    ; preds = %3171
  %3180 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4172
  %3181 = load i8* %3180, align 1, !dbg !4172
  %3182 = zext i8 %3181 to i64, !dbg !4172
  %3183 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3182, !dbg !4172
  %3184 = load i8* %3183, align 1, !dbg !4172
  %3185 = zext i8 %3184 to i32, !dbg !4172
  %3186 = icmp eq i32 %3185, 47, !dbg !4172
  br i1 %3186, label %3236, label %3187, !dbg !4171

; <label>:3187                                    ; preds = %3179
  %3188 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4174
  %3189 = load i8* %3188, align 1, !dbg !4174
  %3190 = zext i8 %3189 to i32, !dbg !4174
  %3191 = icmp eq i32 %3190, 45, !dbg !4174
  br i1 %3191, label %3236, label %3192, !dbg !4171

; <label>:3192                                    ; preds = %3187
  %3193 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4176
  %3194 = load i8* %3193, align 1, !dbg !4176
  %3195 = zext i8 %3194 to i32, !dbg !4176
  %3196 = icmp eq i32 %3195, 46, !dbg !4176
  br i1 %3196, label %3236, label %3197, !dbg !4171

; <label>:3197                                    ; preds = %3192
  %3198 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4178
  %3199 = load i8* %3198, align 1, !dbg !4178
  %3200 = zext i8 %3199 to i32, !dbg !4178
  %3201 = icmp eq i32 %3200, 57, !dbg !4178
  br i1 %3201, label %3236, label %3202, !dbg !4171

; <label>:3202                                    ; preds = %3197
  %3203 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4180
  %3204 = load i8* %3203, align 1, !dbg !4180
  %3205 = zext i8 %3204 to i32, !dbg !4180
  %3206 = icmp eq i32 %3205, 52, !dbg !4180
  br i1 %3206, label %3236, label %3207, !dbg !4171

; <label>:3207                                    ; preds = %3202
  %3208 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4182
  %3209 = load i8* %3208, align 1, !dbg !4182
  %3210 = zext i8 %3209 to i32, !dbg !4182
  %3211 = icmp eq i32 %3210, 50, !dbg !4182
  br i1 %3211, label %3236, label %3212, !dbg !4171

; <label>:3212                                    ; preds = %3207
  %3213 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4184
  %3214 = load i8* %3213, align 1, !dbg !4184
  %3215 = zext i8 %3214 to i32, !dbg !4184
  %3216 = icmp eq i32 %3215, 39, !dbg !4184
  br i1 %3216, label %3236, label %3217, !dbg !4171

; <label>:3217                                    ; preds = %3212
  %3218 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4186
  %3219 = load i8* %3218, align 1, !dbg !4186
  %3220 = zext i8 %3219 to i32, !dbg !4186
  %3221 = icmp eq i32 %3220, 58, !dbg !4186
  br i1 %3221, label %3236, label %3222, !dbg !4171

; <label>:3222                                    ; preds = %3217
  %3223 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4188
  %3224 = load i8* %3223, align 1, !dbg !4188
  %3225 = zext i8 %3224 to i64, !dbg !4188
  %3226 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3225, !dbg !4188
  %3227 = load i8* %3226, align 1, !dbg !4188
  %3228 = zext i8 %3227 to i32, !dbg !4188
  %3229 = icmp eq i32 %3228, 40, !dbg !4188
  br i1 %3229, label %3230, label %3426, !dbg !4171

; <label>:3230                                    ; preds = %3222
  %3231 = bitcast %struct.regnode* %next.0 to %struct.regnode_2*, !dbg !4190
  %3232 = getelementptr inbounds %struct.regnode_2* %3231, i32 0, i32 3, !dbg !4190
  %3233 = load i16* %3232, align 2, !dbg !4190
  %3234 = zext i16 %3233 to i32, !dbg !4190
  %3235 = icmp sgt i32 %3234, 0, !dbg !4190
  br i1 %3235, label %3236, label %3426, !dbg !4171

; <label>:3236                                    ; preds = %3230, %3217, %3212, %3207, %3202, %3197, %3192, %3187, %3179, %3171
  call void @llvm.dbg.value(metadata %struct.regnode* %next.0, i64 0, metadata !4192, metadata !566), !dbg !4194
  %3237 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4195
  %3238 = load i8* %3237, align 1, !dbg !4195
  %3239 = zext i8 %3238 to i64, !dbg !4195
  %3240 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3239, !dbg !4195
  %3241 = load i8* %3240, align 1, !dbg !4195
  %3242 = zext i8 %3241 to i32, !dbg !4195
  %3243 = icmp eq i32 %3242, 33, !dbg !4195
  br i1 %3243, label %3360, label %3244, !dbg !4197

; <label>:3244                                    ; preds = %3236
  %3245 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4198
  %3246 = load i8* %3245, align 1, !dbg !4198
  %3247 = zext i8 %3246 to i64, !dbg !4198
  %3248 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3247, !dbg !4198
  %3249 = load i8* %3248, align 1, !dbg !4198
  %3250 = zext i8 %3249 to i32, !dbg !4198
  %3251 = icmp eq i32 %3250, 47, !dbg !4198
  br i1 %3251, label %3360, label %3252, !dbg !4197

; <label>:3252                                    ; preds = %3244
  br label %3253, !dbg !4200

; <label>:3253                                    ; preds = %3358, %3252
  %text_node11.0 = phi %struct.regnode* [ %next.0, %3252 ], [ %text_node11.3, %3358 ]
  %3254 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4203
  %3255 = load i8* %3254, align 1, !dbg !4203
  %3256 = zext i8 %3255 to i32, !dbg !4203
  %3257 = icmp eq i32 %3256, 45, !dbg !4203
  br i1 %3257, label %3304, label %3258, !dbg !4203

; <label>:3258                                    ; preds = %3253
  %3259 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4206
  %3260 = load i8* %3259, align 1, !dbg !4206
  %3261 = zext i8 %3260 to i32, !dbg !4206
  %3262 = icmp eq i32 %3261, 46, !dbg !4206
  br i1 %3262, label %3304, label %3263, !dbg !4206

; <label>:3263                                    ; preds = %3258
  %3264 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4208
  %3265 = load i8* %3264, align 1, !dbg !4208
  %3266 = zext i8 %3265 to i32, !dbg !4208
  %3267 = icmp eq i32 %3266, 57, !dbg !4208
  br i1 %3267, label %3304, label %3268, !dbg !4208

; <label>:3268                                    ; preds = %3263
  %3269 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4210
  %3270 = load i8* %3269, align 1, !dbg !4210
  %3271 = zext i8 %3270 to i32, !dbg !4210
  %3272 = icmp eq i32 %3271, 52, !dbg !4210
  br i1 %3272, label %3304, label %3273, !dbg !4210

; <label>:3273                                    ; preds = %3268
  %3274 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4212
  %3275 = load i8* %3274, align 1, !dbg !4212
  %3276 = zext i8 %3275 to i32, !dbg !4212
  %3277 = icmp eq i32 %3276, 50, !dbg !4212
  br i1 %3277, label %3304, label %3278, !dbg !4212

; <label>:3278                                    ; preds = %3273
  %3279 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4214
  %3280 = load i8* %3279, align 1, !dbg !4214
  %3281 = zext i8 %3280 to i32, !dbg !4214
  %3282 = icmp eq i32 %3281, 39, !dbg !4214
  br i1 %3282, label %3304, label %3283, !dbg !4214

; <label>:3283                                    ; preds = %3278
  %3284 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4216
  %3285 = load i8* %3284, align 1, !dbg !4216
  %3286 = zext i8 %3285 to i32, !dbg !4216
  %3287 = icmp eq i32 %3286, 58, !dbg !4216
  br i1 %3287, label %3304, label %3288, !dbg !4216

; <label>:3288                                    ; preds = %3283
  %3289 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4218
  %3290 = load i8* %3289, align 1, !dbg !4218
  %3291 = zext i8 %3290 to i64, !dbg !4218
  %3292 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3291, !dbg !4218
  %3293 = load i8* %3292, align 1, !dbg !4218
  %3294 = zext i8 %3293 to i32, !dbg !4218
  %3295 = icmp eq i32 %3294, 40, !dbg !4218
  br i1 %3295, label %3296, label %3302, !dbg !4218

; <label>:3296                                    ; preds = %3288
  %3297 = bitcast %struct.regnode* %text_node11.0 to %struct.regnode_2*, !dbg !4220
  %3298 = getelementptr inbounds %struct.regnode_2* %3297, i32 0, i32 3, !dbg !4220
  %3299 = load i16* %3298, align 2, !dbg !4220
  %3300 = zext i16 %3299 to i32, !dbg !4220
  %3301 = icmp sgt i32 %3300, 0, !dbg !4220
  br label %3302

; <label>:3302                                    ; preds = %3296, %3288
  %3303 = phi i1 [ false, %3288 ], [ %3301, %3296 ]
  br label %3304, !dbg !4222

; <label>:3304                                    ; preds = %3302, %3283, %3278, %3273, %3268, %3263, %3258, %3253
  %3305 = phi i1 [ true, %3283 ], [ true, %3278 ], [ true, %3273 ], [ true, %3268 ], [ true, %3263 ], [ true, %3258 ], [ true, %3253 ], [ %3303, %3302 ]
  br i1 %3305, label %3306, label %3359, !dbg !4224

; <label>:3306                                    ; preds = %3304
  %3307 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4233
  %3308 = load i8* %3307, align 1, !dbg !4233
  %3309 = zext i8 %3308 to i32, !dbg !4233
  %3310 = icmp eq i32 %3309, 52, !dbg !4233
  br i1 %3310, label %3319, label %3311, !dbg !4236

; <label>:3311                                    ; preds = %3306
  %3312 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4237
  %3313 = load i8* %3312, align 1, !dbg !4237
  %3314 = zext i8 %3313 to i64, !dbg !4237
  %3315 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3314, !dbg !4237
  %3316 = load i8* %3315, align 1, !dbg !4237
  %3317 = zext i8 %3316 to i32, !dbg !4237
  %3318 = icmp eq i32 %3317, 40, !dbg !4237
  br i1 %3318, label %3319, label %3322, !dbg !4236

; <label>:3319                                    ; preds = %3311, %3306
  %3320 = getelementptr inbounds %struct.regnode* %text_node11.0, i64 1, !dbg !4239
  %3321 = getelementptr inbounds %struct.regnode* %3320, i64 1, !dbg !4239
  call void @llvm.dbg.value(metadata %struct.regnode* %3321, i64 0, metadata !4192, metadata !566), !dbg !4194
  br label %3358, !dbg !4239

; <label>:3322                                    ; preds = %3311
  %3323 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4242
  %3324 = load i8* %3323, align 1, !dbg !4242
  %3325 = zext i8 %3324 to i32, !dbg !4242
  %3326 = icmp eq i32 %3325, 39, !dbg !4242
  br i1 %3326, label %3327, label %3329, !dbg !4245

; <label>:3327                                    ; preds = %3322
  %3328 = getelementptr inbounds %struct.regnode* %text_node11.0, i64 1, !dbg !4246
  call void @llvm.dbg.value(metadata %struct.regnode* %3328, i64 0, metadata !4192, metadata !566), !dbg !4194
  br label %3357, !dbg !4246

; <label>:3329                                    ; preds = %3322
  %3330 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 1, !dbg !4248
  %3331 = load i8* %3330, align 1, !dbg !4248
  %3332 = zext i8 %3331 to i32, !dbg !4248
  %3333 = icmp eq i32 %3332, 50, !dbg !4248
  br i1 %3333, label %3334, label %3350, !dbg !4251

; <label>:3334                                    ; preds = %3329
  %3335 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 0, !dbg !4252
  %3336 = load i8* %3335, align 1, !dbg !4252
  %3337 = zext i8 %3336 to i32, !dbg !4252
  %3338 = icmp eq i32 %3337, 0, !dbg !4252
  br i1 %3338, label %3339, label %3342, !dbg !4252

; <label>:3339                                    ; preds = %3334
  %3340 = getelementptr inbounds %struct.regnode* %text_node11.0, i64 1, !dbg !4254
  %3341 = getelementptr inbounds %struct.regnode* %3340, i64 1, !dbg !4254
  br label %3348, !dbg !4254

; <label>:3342                                    ; preds = %3334
  %3343 = bitcast %struct.regnode* %text_node11.0 to %struct.regnode_1*, !dbg !4256
  %3344 = getelementptr inbounds %struct.regnode_1* %3343, i32 0, i32 3, !dbg !4256
  %3345 = load i32* %3344, align 4, !dbg !4256
  %3346 = zext i32 %3345 to i64, !dbg !4256
  %3347 = getelementptr inbounds %struct.regnode* %text_node11.0, i64 %3346, !dbg !4256
  br label %3348, !dbg !4256

; <label>:3348                                    ; preds = %3342, %3339
  %3349 = phi %struct.regnode* [ %3341, %3339 ], [ %3347, %3342 ], !dbg !4258
  call void @llvm.dbg.value(metadata %struct.regnode* %3349, i64 0, metadata !4192, metadata !566), !dbg !4194
  br label %3356, !dbg !4259

; <label>:3350                                    ; preds = %3329
  %3351 = getelementptr inbounds %struct.regnode* %text_node11.0, i32 0, i32 2, !dbg !4262
  %3352 = load i16* %3351, align 2, !dbg !4262
  %3353 = zext i16 %3352 to i32, !dbg !4262
  %3354 = sext i32 %3353 to i64, !dbg !4262
  %3355 = getelementptr inbounds %struct.regnode* %text_node11.0, i64 %3354, !dbg !4262
  call void @llvm.dbg.value(metadata %struct.regnode* %3355, i64 0, metadata !4192, metadata !566), !dbg !4194
  br label %3356

; <label>:3356                                    ; preds = %3350, %3348
  %text_node11.1 = phi %struct.regnode* [ %3349, %3348 ], [ %3355, %3350 ]
  br label %3357

; <label>:3357                                    ; preds = %3356, %3327
  %text_node11.2 = phi %struct.regnode* [ %3328, %3327 ], [ %text_node11.1, %3356 ]
  br label %3358

; <label>:3358                                    ; preds = %3357, %3319
  %text_node11.3 = phi %struct.regnode* [ %3321, %3319 ], [ %text_node11.2, %3357 ]
  br label %3253, !dbg !4264

; <label>:3359                                    ; preds = %3304
  br label %3360, !dbg !4266

; <label>:3360                                    ; preds = %3359, %3244, %3236
  %text_node11.4 = phi %struct.regnode* [ %next.0, %3236 ], [ %next.0, %3244 ], [ %text_node11.0, %3359 ]
  %3361 = getelementptr inbounds %struct.regnode* %text_node11.4, i32 0, i32 1, !dbg !4268
  %3362 = load i8* %3361, align 1, !dbg !4268
  %3363 = zext i8 %3362 to i64, !dbg !4268
  %3364 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3363, !dbg !4268
  %3365 = load i8* %3364, align 1, !dbg !4268
  %3366 = zext i8 %3365 to i32, !dbg !4268
  %3367 = icmp eq i32 %3366, 33, !dbg !4268
  br i1 %3367, label %3377, label %3368, !dbg !4270

; <label>:3368                                    ; preds = %3360
  %3369 = getelementptr inbounds %struct.regnode* %text_node11.4, i32 0, i32 1, !dbg !4271
  %3370 = load i8* %3369, align 1, !dbg !4271
  %3371 = zext i8 %3370 to i64, !dbg !4271
  %3372 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3371, !dbg !4271
  %3373 = load i8* %3372, align 1, !dbg !4271
  %3374 = zext i8 %3373 to i32, !dbg !4271
  %3375 = icmp eq i32 %3374, 47, !dbg !4271
  br i1 %3375, label %3377, label %3376, !dbg !4270

; <label>:3376                                    ; preds = %3368
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2061, metadata !566), !dbg !2062
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2059, metadata !566), !dbg !2060
  br label %3425, !dbg !4273

; <label>:3377                                    ; preds = %3368, %3360
  %3378 = getelementptr inbounds %struct.regnode* %text_node11.4, i32 0, i32 1, !dbg !4274
  %3379 = load i8* %3378, align 1, !dbg !4274
  %3380 = zext i8 %3379 to i64, !dbg !4277
  %3381 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3380, !dbg !4277
  %3382 = load i8* %3381, align 1, !dbg !4277
  %3383 = zext i8 %3382 to i32, !dbg !4277
  %3384 = icmp eq i32 %3383, 47, !dbg !4277
  br i1 %3384, label %3385, label %3386, !dbg !4278

; <label>:3385                                    ; preds = %3377
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2061, metadata !566), !dbg !2062
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2059, metadata !566), !dbg !2060
  br label %3429, !dbg !4279

; <label>:3386                                    ; preds = %3377
  %3387 = bitcast %struct.regnode* %text_node11.4 to %struct.regnode_string*, !dbg !4281
  %3388 = getelementptr inbounds %struct.regnode_string* %3387, i32 0, i32 3, !dbg !4281
  %3389 = getelementptr inbounds [1 x i8]* %3388, i32 0, i32 0, !dbg !4281
  %3390 = load i8* %3389, align 1, !dbg !4283
  %3391 = zext i8 %3390 to i32, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %3391, i64 0, metadata !2059, metadata !566), !dbg !2060
  br label %3392

; <label>:3392                                    ; preds = %3386
  %3393 = getelementptr inbounds %struct.regnode* %text_node11.4, i32 0, i32 1, !dbg !4285
  %3394 = load i8* %3393, align 1, !dbg !4285
  %3395 = zext i8 %3394 to i32, !dbg !4285
  %3396 = icmp eq i32 %3395, 34, !dbg !4285
  br i1 %3396, label %3402, label %3397, !dbg !4287

; <label>:3397                                    ; preds = %3392
  %3398 = getelementptr inbounds %struct.regnode* %text_node11.4, i32 0, i32 1, !dbg !4288
  %3399 = load i8* %3398, align 1, !dbg !4288
  %3400 = zext i8 %3399 to i32, !dbg !4288
  %3401 = icmp eq i32 %3400, 48, !dbg !4288
  br i1 %3401, label %3402, label %3407, !dbg !4287

; <label>:3402                                    ; preds = %3397, %3392
  %3403 = sext i32 %3391 to i64, !dbg !4290
  %3404 = getelementptr inbounds [0 x i8]* @PL_fold, i32 0, i64 %3403, !dbg !4290
  %3405 = load i8* %3404, align 1, !dbg !4290
  %3406 = zext i8 %3405 to i32, !dbg !4290
  call void @llvm.dbg.value(metadata i32 %3406, i64 0, metadata !2061, metadata !566), !dbg !2062
  br label %3424, !dbg !4291

; <label>:3407                                    ; preds = %3397
  %3408 = getelementptr inbounds %struct.regnode* %text_node11.4, i32 0, i32 1, !dbg !4292
  %3409 = load i8* %3408, align 1, !dbg !4292
  %3410 = zext i8 %3409 to i32, !dbg !4292
  %3411 = icmp eq i32 %3410, 35, !dbg !4292
  br i1 %3411, label %3417, label %3412, !dbg !4294

; <label>:3412                                    ; preds = %3407
  %3413 = getelementptr inbounds %struct.regnode* %text_node11.4, i32 0, i32 1, !dbg !4295
  %3414 = load i8* %3413, align 1, !dbg !4295
  %3415 = zext i8 %3414 to i32, !dbg !4295
  %3416 = icmp eq i32 %3415, 49, !dbg !4295
  br i1 %3416, label %3417, label %3422, !dbg !4294

; <label>:3417                                    ; preds = %3412, %3407
  %3418 = sext i32 %3391 to i64, !dbg !4297
  %3419 = getelementptr inbounds [0 x i8]* @PL_fold_locale, i32 0, i64 %3418, !dbg !4297
  %3420 = load i8* %3419, align 1, !dbg !4297
  %3421 = zext i8 %3420 to i32, !dbg !4297
  call void @llvm.dbg.value(metadata i32 %3421, i64 0, metadata !2061, metadata !566), !dbg !2062
  br label %3423, !dbg !4298

; <label>:3422                                    ; preds = %3412
  call void @llvm.dbg.value(metadata i32 %3391, i64 0, metadata !2061, metadata !566), !dbg !2062
  br label %3423

; <label>:3423                                    ; preds = %3422, %3417
  %c2.6 = phi i32 [ %3421, %3417 ], [ %3391, %3422 ]
  br label %3424

; <label>:3424                                    ; preds = %3423, %3402
  %c2.7 = phi i32 [ %3406, %3402 ], [ %c2.6, %3423 ]
  br label %3425

; <label>:3425                                    ; preds = %3424, %3376
  %c2.8 = phi i32 [ %c2.7, %3424 ], [ -1000, %3376 ]
  %c1.4 = phi i32 [ %3391, %3424 ], [ -1000, %3376 ]
  br label %3427, !dbg !4299

; <label>:3426                                    ; preds = %3230, %3222
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2061, metadata !566), !dbg !2062
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2059, metadata !566), !dbg !2060
  br label %3427

; <label>:3427                                    ; preds = %3426, %3425
  %c2.9 = phi i32 [ %c2.8, %3425 ], [ -1000, %3426 ]
  %c1.5 = phi i32 [ %c1.4, %3425 ], [ -1000, %3426 ]
  br label %3428, !dbg !4300

; <label>:3428                                    ; preds = %3427, %3167
  %c2.10 = phi i32 [ %c2.9, %3427 ], [ %c2.0, %3167 ]
  %c1.6 = phi i32 [ %c1.5, %3427 ], [ %c1.0, %3167 ]
  br label %3429, !dbg !4301

; <label>:3429                                    ; preds = %3428, %3385
  %c2.11 = phi i32 [ -1000, %3385 ], [ %c2.10, %3428 ]
  %c1.7 = phi i32 [ -1000, %3385 ], [ %c1.6, %3428 ]
  %3430 = load i32* @PL_savestack_ix, align 4, !dbg !4303
  call void @llvm.dbg.value(metadata i32 %3430, i64 0, metadata !4101, metadata !566), !dbg !4102
  br label %3431, !dbg !4304

; <label>:3431                                    ; preds = %3515, %3429
  %locinput.7 = phi i8* [ %3169, %3429 ], [ %3516, %3515 ]
  %n.3 = phi i32 [ %3168, %3429 ], [ %3500, %3515 ]
  %3432 = icmp sge i32 %n.3, %2784, !dbg !4305
  br i1 %3432, label %3433, label %3517, !dbg !4304

; <label>:3433                                    ; preds = %3431
  %3434 = icmp eq i32 %c1.7, -1000, !dbg !4306
  br i1 %3434, label %3445, label %3435, !dbg !4309

; <label>:3435                                    ; preds = %3433
  %3436 = load i8** @PL_reginput, align 8, !dbg !4310
  %3437 = load i8* %3436, align 1, !dbg !4310
  %3438 = zext i8 %3437 to i32, !dbg !4310
  %3439 = icmp eq i32 %3438, %c1.7, !dbg !4310
  br i1 %3439, label %3445, label %3440, !dbg !4309

; <label>:3440                                    ; preds = %3435
  %3441 = load i8** @PL_reginput, align 8, !dbg !4311
  %3442 = load i8* %3441, align 1, !dbg !4311
  %3443 = zext i8 %3442 to i32, !dbg !4311
  %3444 = icmp eq i32 %3443, %c2.11, !dbg !4311
  br i1 %3444, label %3445, label %3499, !dbg !4309

; <label>:3445                                    ; preds = %3440, %3435, %3433
  %3446 = icmp ne i32 %2791, 0, !dbg !4312
  br i1 %3446, label %3447, label %3490, !dbg !4312

; <label>:3447                                    ; preds = %3445
  %3448 = icmp ne i32 %n.3, 0, !dbg !4314
  br i1 %3448, label %3449, label %3485, !dbg !4314

; <label>:3449                                    ; preds = %3447
  %3450 = load i8* @PL_reg_match_utf8, align 1, !dbg !4317
  %3451 = sext i8 %3450 to i32, !dbg !4317
  %3452 = icmp ne i32 %3451, 0, !dbg !4317
  br i1 %3452, label %3453, label %3460, !dbg !4317

; <label>:3453                                    ; preds = %3449
  %3454 = load i8** @PL_reginput, align 8, !dbg !4320
  %3455 = load i32* %l9, align 4, !dbg !4320
  %3456 = sub nsw i32 0, %3455, !dbg !4320
  %3457 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %3454, i32 %3456), !dbg !4320
  %3458 = sext i32 %3457 to i64, !dbg !4320
  %3459 = inttoptr i64 %3458 to i8*, !dbg !4320
  br label %3466, !dbg !4320

; <label>:3460                                    ; preds = %3449
  %3461 = load i8** @PL_reginput, align 8, !dbg !4322
  %3462 = load i32* %l9, align 4, !dbg !4322
  %3463 = sub nsw i32 0, %3462, !dbg !4322
  %3464 = sext i32 %3463 to i64, !dbg !4322
  %3465 = getelementptr inbounds i8* %3461, i64 %3464, !dbg !4322
  br label %3466, !dbg !4322

; <label>:3466                                    ; preds = %3460, %3453
  %3467 = phi i8* [ %3459, %3453 ], [ %3465, %3460 ], !dbg !4317
  %3468 = load i8** @PL_bostr, align 8, !dbg !4324
  %3469 = ptrtoint i8* %3467 to i64, !dbg !4317
  %3470 = ptrtoint i8* %3468 to i64, !dbg !4317
  %3471 = sub i64 %3469, %3470, !dbg !4317
  %3472 = trunc i64 %3471 to i32, !dbg !4317
  %3473 = sext i32 %2791 to i64, !dbg !4327
  %3474 = load i32** @PL_regstartp, align 8, !dbg !4327
  %3475 = getelementptr inbounds i32* %3474, i64 %3473, !dbg !4327
  store i32 %3472, i32* %3475, align 4, !dbg !4327
  %3476 = load i8** @PL_reginput, align 8, !dbg !4328
  %3477 = load i8** @PL_bostr, align 8, !dbg !4329
  %3478 = ptrtoint i8* %3476 to i64, !dbg !4328
  %3479 = ptrtoint i8* %3477 to i64, !dbg !4328
  %3480 = sub i64 %3478, %3479, !dbg !4328
  %3481 = trunc i64 %3480 to i32, !dbg !4328
  %3482 = sext i32 %2791 to i64, !dbg !4330
  %3483 = load i32** @PL_regendp, align 8, !dbg !4330
  %3484 = getelementptr inbounds i32* %3483, i64 %3482, !dbg !4330
  store i32 %3481, i32* %3484, align 4, !dbg !4330
  br label %3489, !dbg !4331

; <label>:3485                                    ; preds = %3447
  %3486 = sext i32 %2791 to i64, !dbg !4332
  %3487 = load i32** @PL_regendp, align 8, !dbg !4332
  %3488 = getelementptr inbounds i32* %3487, i64 %3486, !dbg !4332
  store i32 -1, i32* %3488, align 4, !dbg !4332
  br label %3489

; <label>:3489                                    ; preds = %3485, %3466
  br label %3490, !dbg !4333

; <label>:3490                                    ; preds = %3489, %3445
  %3491 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %next.0), !dbg !4334
  %3492 = icmp ne i32 %3491, 0, !dbg !4336
  br i1 %3492, label %3493, label %3494, !dbg !4336

; <label>:3493                                    ; preds = %3490
  br label %5028, !dbg !4337

; <label>:3494                                    ; preds = %3490
  %3495 = load i32* @PL_savestack_ix, align 4, !dbg !4338
  %3496 = icmp sgt i32 %3495, %3430, !dbg !4338
  br i1 %3496, label %3497, label %3498, !dbg !4340

; <label>:3497                                    ; preds = %3494
  call void @Perl_leave_scope(i32 %3430), !dbg !4341
  br label %3498, !dbg !4341

; <label>:3498                                    ; preds = %3497, %3494
  br label %3499, !dbg !4343

; <label>:3499                                    ; preds = %3498, %3440
  %3500 = add nsw i32 %n.3, -1, !dbg !4344
  call void @llvm.dbg.value(metadata i32 %3500, i64 0, metadata !2607, metadata !566), !dbg !2608
  %3501 = load i8* @PL_reg_match_utf8, align 1, !dbg !4345
  %3502 = sext i8 %3501 to i32, !dbg !4345
  %3503 = icmp ne i32 %3502, 0, !dbg !4345
  br i1 %3503, label %3504, label %3510, !dbg !4345

; <label>:3504                                    ; preds = %3499
  %3505 = load i32* %l9, align 4, !dbg !4346
  %3506 = sub nsw i32 0, %3505, !dbg !4346
  %3507 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %locinput.7, i32 %3506), !dbg !4346
  %3508 = sext i32 %3507 to i64, !dbg !4346
  %3509 = inttoptr i64 %3508 to i8*, !dbg !4346
  br label %3515, !dbg !4346

; <label>:3510                                    ; preds = %3499
  %3511 = load i32* %l9, align 4, !dbg !4348
  %3512 = sub nsw i32 0, %3511, !dbg !4348
  %3513 = sext i32 %3512 to i64, !dbg !4348
  %3514 = getelementptr inbounds i8* %locinput.7, i64 %3513, !dbg !4348
  br label %3515, !dbg !4348

; <label>:3515                                    ; preds = %3510, %3504
  %3516 = phi i8* [ %3509, %3504 ], [ %3514, %3510 ], !dbg !4345
  call void @llvm.dbg.value(metadata i8* %3516, i64 0, metadata !2057, metadata !566), !dbg !2058
  store i8* %3516, i8** @PL_reginput, align 8, !dbg !4350
  br label %3431, !dbg !4304

; <label>:3517                                    ; preds = %3431
  br label %3518

; <label>:3518                                    ; preds = %3517, %3166
  %minmod.1 = phi i32 [ 0, %3166 ], [ %minmod.0, %3517 ]
  %c2.12 = phi i32 [ %c2.5, %3166 ], [ %c2.11, %3517 ]
  %c1.8 = phi i32 [ %c1.3, %3166 ], [ %c1.7, %3517 ]
  %ln.9 = phi i32 [ %ln.8, %3166 ], [ %2784, %3517 ]
  br label %5029, !dbg !4351

; <label>:3519                                    ; preds = %15
  %3520 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !4352
  %3521 = load i8* %3520, align 1, !dbg !4352
  %3522 = zext i8 %3521 to i32, !dbg !4352
  call void @llvm.dbg.value(metadata i32 %3522, i64 0, metadata !3936, metadata !566), !dbg !3937
  %3523 = load i32* @PL_regsize, align 4, !dbg !4353
  %3524 = icmp sgt i32 %3522, %3523, !dbg !4355
  br i1 %3524, label %3525, label %3526, !dbg !4356

; <label>:3525                                    ; preds = %3519
  store i32 %3522, i32* @PL_regsize, align 4, !dbg !4357
  br label %3526, !dbg !4357

; <label>:3526                                    ; preds = %3525, %3519
  %3527 = load i32** @PL_reglastparen, align 8, !dbg !4358
  %3528 = load i32* %3527, align 4, !dbg !4360
  %3529 = icmp sgt i32 %3522, %3528, !dbg !4361
  br i1 %3529, label %3530, label %3532, !dbg !4362

; <label>:3530                                    ; preds = %3526
  %3531 = load i32** @PL_reglastparen, align 8, !dbg !4363
  store i32 %3522, i32* %3531, align 4, !dbg !4364
  br label %3532, !dbg !4364

; <label>:3532                                    ; preds = %3530, %3526
  %3533 = bitcast %struct.regnode* %scan.0 to %struct.regnode_2*, !dbg !4365
  %3534 = getelementptr inbounds %struct.regnode_2* %3533, i32 0, i32 3, !dbg !4365
  %3535 = load i16* %3534, align 2, !dbg !4365
  %3536 = zext i16 %3535 to i32, !dbg !4365
  call void @llvm.dbg.value(metadata i32 %3536, i64 0, metadata !2052, metadata !566), !dbg !2053
  %3537 = bitcast %struct.regnode* %scan.0 to %struct.regnode_2*, !dbg !4366
  %3538 = getelementptr inbounds %struct.regnode_2* %3537, i32 0, i32 4, !dbg !4366
  %3539 = load i16* %3538, align 2, !dbg !4366
  %3540 = zext i16 %3539 to i32, !dbg !4366
  call void @llvm.dbg.value(metadata i32 %3540, i64 0, metadata !2607, metadata !566), !dbg !2608
  %3541 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, !dbg !4367
  %3542 = getelementptr inbounds %struct.regnode* %3541, i64 1, !dbg !4367
  %3543 = call %struct.regnode* @Perl_regnext(%struct.regnode* %3542), !dbg !4368
  call void @llvm.dbg.value(metadata %struct.regnode* %3543, i64 0, metadata !2077, metadata !566), !dbg !2078
  br label %3559, !dbg !4369

; <label>:3544                                    ; preds = %15
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !3936, metadata !566), !dbg !3937
  %3545 = bitcast %struct.regnode* %scan.0 to %struct.regnode_2*, !dbg !4370
  %3546 = getelementptr inbounds %struct.regnode_2* %3545, i32 0, i32 3, !dbg !4370
  %3547 = load i16* %3546, align 2, !dbg !4370
  %3548 = zext i16 %3547 to i32, !dbg !4370
  call void @llvm.dbg.value(metadata i32 %3548, i64 0, metadata !2052, metadata !566), !dbg !2053
  %3549 = bitcast %struct.regnode* %scan.0 to %struct.regnode_2*, !dbg !4371
  %3550 = getelementptr inbounds %struct.regnode_2* %3549, i32 0, i32 4, !dbg !4371
  %3551 = load i16* %3550, align 2, !dbg !4371
  %3552 = zext i16 %3551 to i32, !dbg !4371
  call void @llvm.dbg.value(metadata i32 %3552, i64 0, metadata !2607, metadata !566), !dbg !2608
  %3553 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, !dbg !4372
  %3554 = getelementptr inbounds %struct.regnode* %3553, i64 1, !dbg !4372
  call void @llvm.dbg.value(metadata %struct.regnode* %3554, i64 0, metadata !2077, metadata !566), !dbg !2078
  br label %3559, !dbg !4373

; <label>:3555                                    ; preds = %15
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2052, metadata !566), !dbg !2053
  call void @llvm.dbg.value(metadata i32 32767, i64 0, metadata !2607, metadata !566), !dbg !2608
  %3556 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, !dbg !4374
  call void @llvm.dbg.value(metadata %struct.regnode* %3556, i64 0, metadata !2077, metadata !566), !dbg !2078
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !3936, metadata !566), !dbg !3937
  br label %3559, !dbg !4375

; <label>:3557                                    ; preds = %15
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2052, metadata !566), !dbg !2053
  call void @llvm.dbg.value(metadata i32 32767, i64 0, metadata !2607, metadata !566), !dbg !2608
  %3558 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, !dbg !4376
  call void @llvm.dbg.value(metadata %struct.regnode* %3558, i64 0, metadata !2077, metadata !566), !dbg !2078
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !3936, metadata !566), !dbg !3937
  br label %3559, !dbg !4377

; <label>:3559                                    ; preds = %3557, %3555, %3544, %3532
  %paren.0 = phi i32 [ 0, %3557 ], [ 0, %3555 ], [ 0, %3544 ], [ %3522, %3532 ]
  %ln.10 = phi i32 [ 1, %3557 ], [ 0, %3555 ], [ %3548, %3544 ], [ %3536, %3532 ]
  %n.4 = phi i32 [ 32767, %3557 ], [ 32767, %3555 ], [ %3552, %3544 ], [ %3540, %3532 ]
  %scan.2 = phi %struct.regnode* [ %3558, %3557 ], [ %3556, %3555 ], [ %3554, %3544 ], [ %3543, %3532 ]
  %3560 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4378
  %3561 = load i8* %3560, align 1, !dbg !4378
  %3562 = zext i8 %3561 to i64, !dbg !4378
  %3563 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3562, !dbg !4378
  %3564 = load i8* %3563, align 1, !dbg !4378
  %3565 = zext i8 %3564 to i32, !dbg !4378
  %3566 = icmp eq i32 %3565, 33, !dbg !4378
  br i1 %3566, label %3624, label %3567, !dbg !4380

; <label>:3567                                    ; preds = %3559
  %3568 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4381
  %3569 = load i8* %3568, align 1, !dbg !4381
  %3570 = zext i8 %3569 to i64, !dbg !4381
  %3571 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3570, !dbg !4381
  %3572 = load i8* %3571, align 1, !dbg !4381
  %3573 = zext i8 %3572 to i32, !dbg !4381
  %3574 = icmp eq i32 %3573, 47, !dbg !4381
  br i1 %3574, label %3624, label %3575, !dbg !4380

; <label>:3575                                    ; preds = %3567
  %3576 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4383
  %3577 = load i8* %3576, align 1, !dbg !4383
  %3578 = zext i8 %3577 to i32, !dbg !4383
  %3579 = icmp eq i32 %3578, 45, !dbg !4383
  br i1 %3579, label %3624, label %3580, !dbg !4380

; <label>:3580                                    ; preds = %3575
  %3581 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4385
  %3582 = load i8* %3581, align 1, !dbg !4385
  %3583 = zext i8 %3582 to i32, !dbg !4385
  %3584 = icmp eq i32 %3583, 46, !dbg !4385
  br i1 %3584, label %3624, label %3585, !dbg !4380

; <label>:3585                                    ; preds = %3580
  %3586 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4387
  %3587 = load i8* %3586, align 1, !dbg !4387
  %3588 = zext i8 %3587 to i32, !dbg !4387
  %3589 = icmp eq i32 %3588, 57, !dbg !4387
  br i1 %3589, label %3624, label %3590, !dbg !4380

; <label>:3590                                    ; preds = %3585
  %3591 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4389
  %3592 = load i8* %3591, align 1, !dbg !4389
  %3593 = zext i8 %3592 to i32, !dbg !4389
  %3594 = icmp eq i32 %3593, 52, !dbg !4389
  br i1 %3594, label %3624, label %3595, !dbg !4380

; <label>:3595                                    ; preds = %3590
  %3596 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4391
  %3597 = load i8* %3596, align 1, !dbg !4391
  %3598 = zext i8 %3597 to i32, !dbg !4391
  %3599 = icmp eq i32 %3598, 50, !dbg !4391
  br i1 %3599, label %3624, label %3600, !dbg !4380

; <label>:3600                                    ; preds = %3595
  %3601 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4393
  %3602 = load i8* %3601, align 1, !dbg !4393
  %3603 = zext i8 %3602 to i32, !dbg !4393
  %3604 = icmp eq i32 %3603, 39, !dbg !4393
  br i1 %3604, label %3624, label %3605, !dbg !4380

; <label>:3605                                    ; preds = %3600
  %3606 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4395
  %3607 = load i8* %3606, align 1, !dbg !4395
  %3608 = zext i8 %3607 to i32, !dbg !4395
  %3609 = icmp eq i32 %3608, 58, !dbg !4395
  br i1 %3609, label %3624, label %3610, !dbg !4380

; <label>:3610                                    ; preds = %3605
  %3611 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4397
  %3612 = load i8* %3611, align 1, !dbg !4397
  %3613 = zext i8 %3612 to i64, !dbg !4397
  %3614 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3613, !dbg !4397
  %3615 = load i8* %3614, align 1, !dbg !4397
  %3616 = zext i8 %3615 to i32, !dbg !4397
  %3617 = icmp eq i32 %3616, 40, !dbg !4397
  br i1 %3617, label %3618, label %3972, !dbg !4380

; <label>:3618                                    ; preds = %3610
  %3619 = bitcast %struct.regnode* %next.0 to %struct.regnode_2*, !dbg !4399
  %3620 = getelementptr inbounds %struct.regnode_2* %3619, i32 0, i32 3, !dbg !4399
  %3621 = load i16* %3620, align 2, !dbg !4399
  %3622 = zext i16 %3621 to i32, !dbg !4399
  %3623 = icmp sgt i32 %3622, 0, !dbg !4399
  br i1 %3623, label %3624, label %3972, !dbg !4380

; <label>:3624                                    ; preds = %3618, %3605, %3600, %3595, %3590, %3585, %3580, %3575, %3567, %3559
  call void @llvm.dbg.value(metadata %struct.regnode* %next.0, i64 0, metadata !4401, metadata !566), !dbg !4403
  %3625 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4404
  %3626 = load i8* %3625, align 1, !dbg !4404
  %3627 = zext i8 %3626 to i64, !dbg !4404
  %3628 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3627, !dbg !4404
  %3629 = load i8* %3628, align 1, !dbg !4404
  %3630 = zext i8 %3629 to i32, !dbg !4404
  %3631 = icmp eq i32 %3630, 33, !dbg !4404
  br i1 %3631, label %3748, label %3632, !dbg !4406

; <label>:3632                                    ; preds = %3624
  %3633 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4407
  %3634 = load i8* %3633, align 1, !dbg !4407
  %3635 = zext i8 %3634 to i64, !dbg !4407
  %3636 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3635, !dbg !4407
  %3637 = load i8* %3636, align 1, !dbg !4407
  %3638 = zext i8 %3637 to i32, !dbg !4407
  %3639 = icmp eq i32 %3638, 47, !dbg !4407
  br i1 %3639, label %3748, label %3640, !dbg !4406

; <label>:3640                                    ; preds = %3632
  br label %3641, !dbg !4409

; <label>:3641                                    ; preds = %3746, %3640
  %text_node13.0 = phi %struct.regnode* [ %next.0, %3640 ], [ %text_node13.3, %3746 ]
  %3642 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4412
  %3643 = load i8* %3642, align 1, !dbg !4412
  %3644 = zext i8 %3643 to i32, !dbg !4412
  %3645 = icmp eq i32 %3644, 45, !dbg !4412
  br i1 %3645, label %3692, label %3646, !dbg !4412

; <label>:3646                                    ; preds = %3641
  %3647 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4415
  %3648 = load i8* %3647, align 1, !dbg !4415
  %3649 = zext i8 %3648 to i32, !dbg !4415
  %3650 = icmp eq i32 %3649, 46, !dbg !4415
  br i1 %3650, label %3692, label %3651, !dbg !4415

; <label>:3651                                    ; preds = %3646
  %3652 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4417
  %3653 = load i8* %3652, align 1, !dbg !4417
  %3654 = zext i8 %3653 to i32, !dbg !4417
  %3655 = icmp eq i32 %3654, 57, !dbg !4417
  br i1 %3655, label %3692, label %3656, !dbg !4417

; <label>:3656                                    ; preds = %3651
  %3657 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4419
  %3658 = load i8* %3657, align 1, !dbg !4419
  %3659 = zext i8 %3658 to i32, !dbg !4419
  %3660 = icmp eq i32 %3659, 52, !dbg !4419
  br i1 %3660, label %3692, label %3661, !dbg !4419

; <label>:3661                                    ; preds = %3656
  %3662 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4421
  %3663 = load i8* %3662, align 1, !dbg !4421
  %3664 = zext i8 %3663 to i32, !dbg !4421
  %3665 = icmp eq i32 %3664, 50, !dbg !4421
  br i1 %3665, label %3692, label %3666, !dbg !4421

; <label>:3666                                    ; preds = %3661
  %3667 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4423
  %3668 = load i8* %3667, align 1, !dbg !4423
  %3669 = zext i8 %3668 to i32, !dbg !4423
  %3670 = icmp eq i32 %3669, 39, !dbg !4423
  br i1 %3670, label %3692, label %3671, !dbg !4423

; <label>:3671                                    ; preds = %3666
  %3672 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4425
  %3673 = load i8* %3672, align 1, !dbg !4425
  %3674 = zext i8 %3673 to i32, !dbg !4425
  %3675 = icmp eq i32 %3674, 58, !dbg !4425
  br i1 %3675, label %3692, label %3676, !dbg !4425

; <label>:3676                                    ; preds = %3671
  %3677 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4427
  %3678 = load i8* %3677, align 1, !dbg !4427
  %3679 = zext i8 %3678 to i64, !dbg !4427
  %3680 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3679, !dbg !4427
  %3681 = load i8* %3680, align 1, !dbg !4427
  %3682 = zext i8 %3681 to i32, !dbg !4427
  %3683 = icmp eq i32 %3682, 40, !dbg !4427
  br i1 %3683, label %3684, label %3690, !dbg !4427

; <label>:3684                                    ; preds = %3676
  %3685 = bitcast %struct.regnode* %text_node13.0 to %struct.regnode_2*, !dbg !4429
  %3686 = getelementptr inbounds %struct.regnode_2* %3685, i32 0, i32 3, !dbg !4429
  %3687 = load i16* %3686, align 2, !dbg !4429
  %3688 = zext i16 %3687 to i32, !dbg !4429
  %3689 = icmp sgt i32 %3688, 0, !dbg !4429
  br label %3690

; <label>:3690                                    ; preds = %3684, %3676
  %3691 = phi i1 [ false, %3676 ], [ %3689, %3684 ]
  br label %3692, !dbg !4431

; <label>:3692                                    ; preds = %3690, %3671, %3666, %3661, %3656, %3651, %3646, %3641
  %3693 = phi i1 [ true, %3671 ], [ true, %3666 ], [ true, %3661 ], [ true, %3656 ], [ true, %3651 ], [ true, %3646 ], [ true, %3641 ], [ %3691, %3690 ]
  br i1 %3693, label %3694, label %3747, !dbg !4433

; <label>:3694                                    ; preds = %3692
  %3695 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4442
  %3696 = load i8* %3695, align 1, !dbg !4442
  %3697 = zext i8 %3696 to i32, !dbg !4442
  %3698 = icmp eq i32 %3697, 52, !dbg !4442
  br i1 %3698, label %3707, label %3699, !dbg !4445

; <label>:3699                                    ; preds = %3694
  %3700 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4446
  %3701 = load i8* %3700, align 1, !dbg !4446
  %3702 = zext i8 %3701 to i64, !dbg !4446
  %3703 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3702, !dbg !4446
  %3704 = load i8* %3703, align 1, !dbg !4446
  %3705 = zext i8 %3704 to i32, !dbg !4446
  %3706 = icmp eq i32 %3705, 40, !dbg !4446
  br i1 %3706, label %3707, label %3710, !dbg !4445

; <label>:3707                                    ; preds = %3699, %3694
  %3708 = getelementptr inbounds %struct.regnode* %text_node13.0, i64 1, !dbg !4448
  %3709 = getelementptr inbounds %struct.regnode* %3708, i64 1, !dbg !4448
  call void @llvm.dbg.value(metadata %struct.regnode* %3709, i64 0, metadata !4401, metadata !566), !dbg !4403
  br label %3746, !dbg !4448

; <label>:3710                                    ; preds = %3699
  %3711 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4451
  %3712 = load i8* %3711, align 1, !dbg !4451
  %3713 = zext i8 %3712 to i32, !dbg !4451
  %3714 = icmp eq i32 %3713, 39, !dbg !4451
  br i1 %3714, label %3715, label %3717, !dbg !4454

; <label>:3715                                    ; preds = %3710
  %3716 = getelementptr inbounds %struct.regnode* %text_node13.0, i64 1, !dbg !4455
  call void @llvm.dbg.value(metadata %struct.regnode* %3716, i64 0, metadata !4401, metadata !566), !dbg !4403
  br label %3745, !dbg !4455

; <label>:3717                                    ; preds = %3710
  %3718 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 1, !dbg !4457
  %3719 = load i8* %3718, align 1, !dbg !4457
  %3720 = zext i8 %3719 to i32, !dbg !4457
  %3721 = icmp eq i32 %3720, 50, !dbg !4457
  br i1 %3721, label %3722, label %3738, !dbg !4460

; <label>:3722                                    ; preds = %3717
  %3723 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 0, !dbg !4461
  %3724 = load i8* %3723, align 1, !dbg !4461
  %3725 = zext i8 %3724 to i32, !dbg !4461
  %3726 = icmp eq i32 %3725, 0, !dbg !4461
  br i1 %3726, label %3727, label %3730, !dbg !4461

; <label>:3727                                    ; preds = %3722
  %3728 = getelementptr inbounds %struct.regnode* %text_node13.0, i64 1, !dbg !4463
  %3729 = getelementptr inbounds %struct.regnode* %3728, i64 1, !dbg !4463
  br label %3736, !dbg !4463

; <label>:3730                                    ; preds = %3722
  %3731 = bitcast %struct.regnode* %text_node13.0 to %struct.regnode_1*, !dbg !4465
  %3732 = getelementptr inbounds %struct.regnode_1* %3731, i32 0, i32 3, !dbg !4465
  %3733 = load i32* %3732, align 4, !dbg !4465
  %3734 = zext i32 %3733 to i64, !dbg !4465
  %3735 = getelementptr inbounds %struct.regnode* %text_node13.0, i64 %3734, !dbg !4465
  br label %3736, !dbg !4465

; <label>:3736                                    ; preds = %3730, %3727
  %3737 = phi %struct.regnode* [ %3729, %3727 ], [ %3735, %3730 ], !dbg !4467
  call void @llvm.dbg.value(metadata %struct.regnode* %3737, i64 0, metadata !4401, metadata !566), !dbg !4403
  br label %3744, !dbg !4468

; <label>:3738                                    ; preds = %3717
  %3739 = getelementptr inbounds %struct.regnode* %text_node13.0, i32 0, i32 2, !dbg !4471
  %3740 = load i16* %3739, align 2, !dbg !4471
  %3741 = zext i16 %3740 to i32, !dbg !4471
  %3742 = sext i32 %3741 to i64, !dbg !4471
  %3743 = getelementptr inbounds %struct.regnode* %text_node13.0, i64 %3742, !dbg !4471
  call void @llvm.dbg.value(metadata %struct.regnode* %3743, i64 0, metadata !4401, metadata !566), !dbg !4403
  br label %3744

; <label>:3744                                    ; preds = %3738, %3736
  %text_node13.1 = phi %struct.regnode* [ %3737, %3736 ], [ %3743, %3738 ]
  br label %3745

; <label>:3745                                    ; preds = %3744, %3715
  %text_node13.2 = phi %struct.regnode* [ %3716, %3715 ], [ %text_node13.1, %3744 ]
  br label %3746

; <label>:3746                                    ; preds = %3745, %3707
  %text_node13.3 = phi %struct.regnode* [ %3709, %3707 ], [ %text_node13.2, %3745 ]
  br label %3641, !dbg !4473

; <label>:3747                                    ; preds = %3692
  br label %3748, !dbg !4475

; <label>:3748                                    ; preds = %3747, %3632, %3624
  %text_node13.4 = phi %struct.regnode* [ %next.0, %3624 ], [ %next.0, %3632 ], [ %text_node13.0, %3747 ]
  %3749 = getelementptr inbounds %struct.regnode* %text_node13.4, i32 0, i32 1, !dbg !4477
  %3750 = load i8* %3749, align 1, !dbg !4477
  %3751 = zext i8 %3750 to i64, !dbg !4477
  %3752 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3751, !dbg !4477
  %3753 = load i8* %3752, align 1, !dbg !4477
  %3754 = zext i8 %3753 to i32, !dbg !4477
  %3755 = icmp eq i32 %3754, 33, !dbg !4477
  br i1 %3755, label %3765, label %3756, !dbg !4479

; <label>:3756                                    ; preds = %3748
  %3757 = getelementptr inbounds %struct.regnode* %text_node13.4, i32 0, i32 1, !dbg !4480
  %3758 = load i8* %3757, align 1, !dbg !4480
  %3759 = zext i8 %3758 to i64, !dbg !4480
  %3760 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3759, !dbg !4480
  %3761 = load i8* %3760, align 1, !dbg !4480
  %3762 = zext i8 %3761 to i32, !dbg !4480
  %3763 = icmp eq i32 %3762, 47, !dbg !4480
  br i1 %3763, label %3765, label %3764, !dbg !4479

; <label>:3764                                    ; preds = %3756
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2061, metadata !566), !dbg !2062
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2059, metadata !566), !dbg !2060
  br label %3971, !dbg !4482

; <label>:3765                                    ; preds = %3756, %3748
  %3766 = getelementptr inbounds %struct.regnode* %text_node13.4, i32 0, i32 1, !dbg !4483
  %3767 = load i8* %3766, align 1, !dbg !4483
  %3768 = zext i8 %3767 to i64, !dbg !4486
  %3769 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %3768, !dbg !4486
  %3770 = load i8* %3769, align 1, !dbg !4486
  %3771 = zext i8 %3770 to i32, !dbg !4486
  %3772 = icmp eq i32 %3771, 47, !dbg !4486
  br i1 %3772, label %3773, label %3774, !dbg !4487

; <label>:3773                                    ; preds = %3765
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2061, metadata !566), !dbg !2062
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2059, metadata !566), !dbg !2060
  br label %3974, !dbg !4488

; <label>:3774                                    ; preds = %3765
  %3775 = bitcast %struct.regnode* %text_node13.4 to %struct.regnode_string*, !dbg !4490
  %3776 = getelementptr inbounds %struct.regnode_string* %3775, i32 0, i32 3, !dbg !4490
  %3777 = getelementptr inbounds [1 x i8]* %3776, i32 0, i32 0, !dbg !4490
  call void @llvm.dbg.value(metadata i8* %3777, i64 0, metadata !4492, metadata !566), !dbg !4493
  br label %3778

; <label>:3778                                    ; preds = %3774
  %3779 = load i32* @PL_reg_flags, align 4, !dbg !4494
  %3780 = and i32 %3779, 8, !dbg !4494
  %3781 = icmp ne i32 %3780, 0, !dbg !4494
  br i1 %3781, label %3816, label %3782, !dbg !4496

; <label>:3782                                    ; preds = %3778
  %3783 = load i8* %3777, align 1, !dbg !4497
  %3784 = zext i8 %3783 to i32, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %3784, i64 0, metadata !2059, metadata !566), !dbg !2060
  call void @llvm.dbg.value(metadata i32 %3784, i64 0, metadata !2061, metadata !566), !dbg !2062
  %3785 = getelementptr inbounds %struct.regnode* %text_node13.4, i32 0, i32 1, !dbg !4499
  %3786 = load i8* %3785, align 1, !dbg !4499
  %3787 = zext i8 %3786 to i32, !dbg !4499
  %3788 = icmp eq i32 %3787, 34, !dbg !4499
  br i1 %3788, label %3794, label %3789, !dbg !4501

; <label>:3789                                    ; preds = %3782
  %3790 = getelementptr inbounds %struct.regnode* %text_node13.4, i32 0, i32 1, !dbg !4502
  %3791 = load i8* %3790, align 1, !dbg !4502
  %3792 = zext i8 %3791 to i32, !dbg !4502
  %3793 = icmp eq i32 %3792, 48, !dbg !4502
  br i1 %3793, label %3794, label %3799, !dbg !4501

; <label>:3794                                    ; preds = %3789, %3782
  %3795 = sext i32 %3784 to i64, !dbg !4504
  %3796 = getelementptr inbounds [0 x i8]* @PL_fold, i32 0, i64 %3795, !dbg !4504
  %3797 = load i8* %3796, align 1, !dbg !4504
  %3798 = zext i8 %3797 to i32, !dbg !4504
  call void @llvm.dbg.value(metadata i32 %3798, i64 0, metadata !2061, metadata !566), !dbg !2062
  br label %3815, !dbg !4505

; <label>:3799                                    ; preds = %3789
  %3800 = getelementptr inbounds %struct.regnode* %text_node13.4, i32 0, i32 1, !dbg !4506
  %3801 = load i8* %3800, align 1, !dbg !4506
  %3802 = zext i8 %3801 to i32, !dbg !4506
  %3803 = icmp eq i32 %3802, 35, !dbg !4506
  br i1 %3803, label %3809, label %3804, !dbg !4508

; <label>:3804                                    ; preds = %3799
  %3805 = getelementptr inbounds %struct.regnode* %text_node13.4, i32 0, i32 1, !dbg !4509
  %3806 = load i8* %3805, align 1, !dbg !4509
  %3807 = zext i8 %3806 to i32, !dbg !4509
  %3808 = icmp eq i32 %3807, 49, !dbg !4509
  br i1 %3808, label %3809, label %3814, !dbg !4508

; <label>:3809                                    ; preds = %3804, %3799
  %3810 = sext i32 %3784 to i64, !dbg !4511
  %3811 = getelementptr inbounds [0 x i8]* @PL_fold_locale, i32 0, i64 %3810, !dbg !4511
  %3812 = load i8* %3811, align 1, !dbg !4511
  %3813 = zext i8 %3812 to i32, !dbg !4511
  call void @llvm.dbg.value(metadata i32 %3813, i64 0, metadata !2061, metadata !566), !dbg !2062
  br label %3814, !dbg !4512

; <label>:3814                                    ; preds = %3809, %3804
  %c2.13 = phi i32 [ %3813, %3809 ], [ %3784, %3804 ]
  br label %3815

; <label>:3815                                    ; preds = %3814, %3794
  %c2.14 = phi i32 [ %3798, %3794 ], [ %c2.13, %3814 ]
  br label %3970, !dbg !4513

; <label>:3816                                    ; preds = %3778
  %3817 = getelementptr inbounds %struct.regnode* %text_node13.4, i32 0, i32 1, !dbg !4514
  %3818 = load i8* %3817, align 1, !dbg !4514
  %3819 = zext i8 %3818 to i32, !dbg !4514
  %3820 = icmp eq i32 %3819, 34, !dbg !4514
  br i1 %3820, label %3826, label %3821, !dbg !4517

; <label>:3821                                    ; preds = %3816
  %3822 = getelementptr inbounds %struct.regnode* %text_node13.4, i32 0, i32 1, !dbg !4518
  %3823 = load i8* %3822, align 1, !dbg !4518
  %3824 = zext i8 %3823 to i32, !dbg !4518
  %3825 = icmp eq i32 %3824, 48, !dbg !4518
  br i1 %3825, label %3826, label %3923, !dbg !4517

; <label>:3826                                    ; preds = %3821, %3816
  call void @llvm.dbg.declare(metadata i64* %ulen114, metadata !4520, metadata !566), !dbg !4522
  call void @llvm.dbg.declare(metadata i64* %ulen215, metadata !4523, metadata !566), !dbg !4524
  call void @llvm.dbg.declare(metadata [7 x i8]* %tmpbuf116, metadata !4525, metadata !566), !dbg !4526
  call void @llvm.dbg.declare(metadata [7 x i8]* %tmpbuf217, metadata !4527, metadata !566), !dbg !4528
  %3827 = getelementptr inbounds [7 x i8]* %tmpbuf116, i32 0, i32 0, !dbg !4529
  %3828 = call i64 @Perl_to_utf8_lower(i8* %3777, i8* %3827, i64* %ulen114), !dbg !4530
  %3829 = getelementptr inbounds [7 x i8]* %tmpbuf217, i32 0, i32 0, !dbg !4531
  %3830 = call i64 @Perl_to_utf8_upper(i8* %3777, i8* %3829, i64* %ulen215), !dbg !4532
  %3831 = getelementptr inbounds [7 x i8]* %tmpbuf116, i32 0, i32 0, !dbg !4533
  %3832 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4534
  %3833 = getelementptr inbounds %struct.cop* %3832, i32 0, i32 14, !dbg !4534
  %3834 = load %struct.sv** %3833, align 8, !dbg !4534
  %3835 = icmp ne %struct.sv* %3834, null, !dbg !4534
  br i1 %3835, label %3836, label %3860, !dbg !4534

; <label>:3836                                    ; preds = %3826
  %3837 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4535
  %3838 = getelementptr inbounds %struct.cop* %3837, i32 0, i32 14, !dbg !4535
  %3839 = load %struct.sv** %3838, align 8, !dbg !4535
  %3840 = icmp ne %struct.sv* %3839, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !4535
  br i1 %3840, label %3841, label %3860, !dbg !4535

; <label>:3841                                    ; preds = %3836
  %3842 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4537
  %3843 = getelementptr inbounds %struct.cop* %3842, i32 0, i32 14, !dbg !4537
  %3844 = load %struct.sv** %3843, align 8, !dbg !4537
  %3845 = icmp eq %struct.sv* %3844, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !4537
  br i1 %3845, label %3872, label %3846, !dbg !4537

; <label>:3846                                    ; preds = %3841
  %3847 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4539
  %3848 = getelementptr inbounds %struct.cop* %3847, i32 0, i32 14, !dbg !4539
  %3849 = load %struct.sv** %3848, align 8, !dbg !4539
  %3850 = getelementptr inbounds %struct.sv* %3849, i32 0, i32 0, !dbg !4539
  %3851 = load i8** %3850, align 8, !dbg !4539
  %3852 = bitcast i8* %3851 to %struct.xpv*, !dbg !4539
  %3853 = getelementptr inbounds %struct.xpv* %3852, i32 0, i32 0, !dbg !4539
  %3854 = load i8** %3853, align 8, !dbg !4539
  %3855 = getelementptr inbounds i8* %3854, i64 11, !dbg !4539
  %3856 = load i8* %3855, align 1, !dbg !4539
  %3857 = sext i8 %3856 to i32, !dbg !4539
  %3858 = and i32 %3857, 1, !dbg !4539
  %3859 = icmp ne i32 %3858, 0, !dbg !4539
  br i1 %3859, label %3872, label %3860, !dbg !4539

; <label>:3860                                    ; preds = %3846, %3836, %3826
  %3861 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4541
  %3862 = getelementptr inbounds %struct.cop* %3861, i32 0, i32 14, !dbg !4541
  %3863 = load %struct.sv** %3862, align 8, !dbg !4541
  %3864 = icmp eq %struct.sv* %3863, null, !dbg !4541
  br i1 %3864, label %3865, label %3870, !dbg !4541

; <label>:3865                                    ; preds = %3860
  %3866 = load i8* @PL_dowarn, align 1, !dbg !4545
  %3867 = zext i8 %3866 to i32, !dbg !4545
  %3868 = and i32 %3867, 1, !dbg !4545
  %3869 = icmp ne i32 %3868, 0, !dbg !4545
  br label %3870

; <label>:3870                                    ; preds = %3865, %3860
  %3871 = phi i1 [ false, %3860 ], [ %3869, %3865 ]
  br label %3872, !dbg !4547

; <label>:3872                                    ; preds = %3870, %3846, %3841
  %3873 = phi i1 [ true, %3846 ], [ true, %3841 ], [ %3871, %3870 ]
  %3874 = select i1 %3873, i32 0, i32 255, !dbg !4549
  %3875 = call i64 @Perl_utf8n_to_uvuni(i8* %3831, i64 13, i64* null, i32 %3874), !dbg !4553
  %3876 = trunc i64 %3875 to i32, !dbg !4553
  call void @llvm.dbg.value(metadata i32 %3876, i64 0, metadata !2059, metadata !566), !dbg !2060
  %3877 = getelementptr inbounds [7 x i8]* %tmpbuf217, i32 0, i32 0, !dbg !4554
  %3878 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4555
  %3879 = getelementptr inbounds %struct.cop* %3878, i32 0, i32 14, !dbg !4555
  %3880 = load %struct.sv** %3879, align 8, !dbg !4555
  %3881 = icmp ne %struct.sv* %3880, null, !dbg !4555
  br i1 %3881, label %3882, label %3906, !dbg !4555

; <label>:3882                                    ; preds = %3872
  %3883 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4556
  %3884 = getelementptr inbounds %struct.cop* %3883, i32 0, i32 14, !dbg !4556
  %3885 = load %struct.sv** %3884, align 8, !dbg !4556
  %3886 = icmp ne %struct.sv* %3885, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !4556
  br i1 %3886, label %3887, label %3906, !dbg !4556

; <label>:3887                                    ; preds = %3882
  %3888 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4557
  %3889 = getelementptr inbounds %struct.cop* %3888, i32 0, i32 14, !dbg !4557
  %3890 = load %struct.sv** %3889, align 8, !dbg !4557
  %3891 = icmp eq %struct.sv* %3890, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !4557
  br i1 %3891, label %3918, label %3892, !dbg !4557

; <label>:3892                                    ; preds = %3887
  %3893 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4558
  %3894 = getelementptr inbounds %struct.cop* %3893, i32 0, i32 14, !dbg !4558
  %3895 = load %struct.sv** %3894, align 8, !dbg !4558
  %3896 = getelementptr inbounds %struct.sv* %3895, i32 0, i32 0, !dbg !4558
  %3897 = load i8** %3896, align 8, !dbg !4558
  %3898 = bitcast i8* %3897 to %struct.xpv*, !dbg !4558
  %3899 = getelementptr inbounds %struct.xpv* %3898, i32 0, i32 0, !dbg !4558
  %3900 = load i8** %3899, align 8, !dbg !4558
  %3901 = getelementptr inbounds i8* %3900, i64 11, !dbg !4558
  %3902 = load i8* %3901, align 1, !dbg !4558
  %3903 = sext i8 %3902 to i32, !dbg !4558
  %3904 = and i32 %3903, 1, !dbg !4558
  %3905 = icmp ne i32 %3904, 0, !dbg !4558
  br i1 %3905, label %3918, label %3906, !dbg !4558

; <label>:3906                                    ; preds = %3892, %3882, %3872
  %3907 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4559
  %3908 = getelementptr inbounds %struct.cop* %3907, i32 0, i32 14, !dbg !4559
  %3909 = load %struct.sv** %3908, align 8, !dbg !4559
  %3910 = icmp eq %struct.sv* %3909, null, !dbg !4559
  br i1 %3910, label %3911, label %3916, !dbg !4559

; <label>:3911                                    ; preds = %3906
  %3912 = load i8* @PL_dowarn, align 1, !dbg !4560
  %3913 = zext i8 %3912 to i32, !dbg !4560
  %3914 = and i32 %3913, 1, !dbg !4560
  %3915 = icmp ne i32 %3914, 0, !dbg !4560
  br label %3916

; <label>:3916                                    ; preds = %3911, %3906
  %3917 = phi i1 [ false, %3906 ], [ %3915, %3911 ]
  br label %3918, !dbg !4561

; <label>:3918                                    ; preds = %3916, %3892, %3887
  %3919 = phi i1 [ true, %3892 ], [ true, %3887 ], [ %3917, %3916 ]
  %3920 = select i1 %3919, i32 0, i32 255, !dbg !4562
  %3921 = call i64 @Perl_utf8n_to_uvuni(i8* %3877, i64 13, i64* null, i32 %3920), !dbg !4563
  %3922 = trunc i64 %3921 to i32, !dbg !4563
  call void @llvm.dbg.value(metadata i32 %3922, i64 0, metadata !2061, metadata !566), !dbg !2062
  br label %3969, !dbg !4564

; <label>:3923                                    ; preds = %3821
  %3924 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4565
  %3925 = getelementptr inbounds %struct.cop* %3924, i32 0, i32 14, !dbg !4565
  %3926 = load %struct.sv** %3925, align 8, !dbg !4565
  %3927 = icmp ne %struct.sv* %3926, null, !dbg !4565
  br i1 %3927, label %3928, label %3952, !dbg !4565

; <label>:3928                                    ; preds = %3923
  %3929 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4567
  %3930 = getelementptr inbounds %struct.cop* %3929, i32 0, i32 14, !dbg !4567
  %3931 = load %struct.sv** %3930, align 8, !dbg !4567
  %3932 = icmp ne %struct.sv* %3931, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !4567
  br i1 %3932, label %3933, label %3952, !dbg !4567

; <label>:3933                                    ; preds = %3928
  %3934 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4569
  %3935 = getelementptr inbounds %struct.cop* %3934, i32 0, i32 14, !dbg !4569
  %3936 = load %struct.sv** %3935, align 8, !dbg !4569
  %3937 = icmp eq %struct.sv* %3936, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !4569
  br i1 %3937, label %3964, label %3938, !dbg !4569

; <label>:3938                                    ; preds = %3933
  %3939 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4571
  %3940 = getelementptr inbounds %struct.cop* %3939, i32 0, i32 14, !dbg !4571
  %3941 = load %struct.sv** %3940, align 8, !dbg !4571
  %3942 = getelementptr inbounds %struct.sv* %3941, i32 0, i32 0, !dbg !4571
  %3943 = load i8** %3942, align 8, !dbg !4571
  %3944 = bitcast i8* %3943 to %struct.xpv*, !dbg !4571
  %3945 = getelementptr inbounds %struct.xpv* %3944, i32 0, i32 0, !dbg !4571
  %3946 = load i8** %3945, align 8, !dbg !4571
  %3947 = getelementptr inbounds i8* %3946, i64 11, !dbg !4571
  %3948 = load i8* %3947, align 1, !dbg !4571
  %3949 = sext i8 %3948 to i32, !dbg !4571
  %3950 = and i32 %3949, 1, !dbg !4571
  %3951 = icmp ne i32 %3950, 0, !dbg !4571
  br i1 %3951, label %3964, label %3952, !dbg !4571

; <label>:3952                                    ; preds = %3938, %3928, %3923
  %3953 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4573
  %3954 = getelementptr inbounds %struct.cop* %3953, i32 0, i32 14, !dbg !4573
  %3955 = load %struct.sv** %3954, align 8, !dbg !4573
  %3956 = icmp eq %struct.sv* %3955, null, !dbg !4573
  br i1 %3956, label %3957, label %3962, !dbg !4573

; <label>:3957                                    ; preds = %3952
  %3958 = load i8* @PL_dowarn, align 1, !dbg !4577
  %3959 = zext i8 %3958 to i32, !dbg !4577
  %3960 = and i32 %3959, 1, !dbg !4577
  %3961 = icmp ne i32 %3960, 0, !dbg !4577
  br label %3962

; <label>:3962                                    ; preds = %3957, %3952
  %3963 = phi i1 [ false, %3952 ], [ %3961, %3957 ]
  br label %3964, !dbg !4579

; <label>:3964                                    ; preds = %3962, %3938, %3933
  %3965 = phi i1 [ true, %3938 ], [ true, %3933 ], [ %3963, %3962 ]
  %3966 = select i1 %3965, i32 0, i32 255, !dbg !4581
  %3967 = call i64 @Perl_utf8n_to_uvuni(i8* %3777, i64 13, i64* null, i32 %3966), !dbg !4585
  %3968 = trunc i64 %3967 to i32, !dbg !4585
  call void @llvm.dbg.value(metadata i32 %3968, i64 0, metadata !2059, metadata !566), !dbg !2060
  call void @llvm.dbg.value(metadata i32 %3968, i64 0, metadata !2061, metadata !566), !dbg !2062
  br label %3969

; <label>:3969                                    ; preds = %3964, %3918
  %c2.15 = phi i32 [ %3922, %3918 ], [ %3968, %3964 ]
  %c1.9 = phi i32 [ %3876, %3918 ], [ %3968, %3964 ]
  br label %3970

; <label>:3970                                    ; preds = %3969, %3815
  %c2.16 = phi i32 [ %c2.15, %3969 ], [ %c2.14, %3815 ]
  %c1.10 = phi i32 [ %c1.9, %3969 ], [ %3784, %3815 ]
  br label %3971

; <label>:3971                                    ; preds = %3970, %3764
  %c2.17 = phi i32 [ %c2.16, %3970 ], [ -1000, %3764 ]
  %c1.11 = phi i32 [ %c1.10, %3970 ], [ -1000, %3764 ]
  br label %3973, !dbg !4586

; <label>:3972                                    ; preds = %3618, %3610
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2061, metadata !566), !dbg !2062
  call void @llvm.dbg.value(metadata i32 -1000, i64 0, metadata !2059, metadata !566), !dbg !2060
  br label %3973

; <label>:3973                                    ; preds = %3972, %3971
  %c2.18 = phi i32 [ %c2.17, %3971 ], [ -1000, %3972 ]
  %c1.12 = phi i32 [ %c1.11, %3971 ], [ -1000, %3972 ]
  br label %3974, !dbg !4587

; <label>:3974                                    ; preds = %3973, %3773
  %c2.19 = phi i32 [ -1000, %3773 ], [ %c2.18, %3973 ]
  %c1.13 = phi i32 [ -1000, %3773 ], [ %c1.12, %3973 ]
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !4588
  %3975 = icmp ne i32 %minmod.0, 0, !dbg !4589
  br i1 %3975, label %3976, label %4482, !dbg !4589

; <label>:3976                                    ; preds = %3974
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2063, metadata !566), !dbg !2064
  %3977 = icmp ne i32 %ln.10, 0, !dbg !4590
  br i1 %3977, label %3978, label %3982, !dbg !4590

; <label>:3978                                    ; preds = %3976
  %3979 = call i32 (%struct.regnode*, i32, ...)* bitcast (i32 (...)* @regrepeat to i32 (%struct.regnode*, i32, ...)*)(%struct.regnode* %scan.2, i32 %ln.10), !dbg !4593
  %3980 = icmp slt i32 %3979, %ln.10, !dbg !4593
  br i1 %3980, label %3981, label %3982, !dbg !4590

; <label>:3981                                    ; preds = %3978
  br label %5029, !dbg !4595

; <label>:3982                                    ; preds = %3978, %3976
  %3983 = load i8** @PL_reginput, align 8, !dbg !4596
  call void @llvm.dbg.value(metadata i8* %3983, i64 0, metadata !2057, metadata !566), !dbg !2058
  %3984 = load i32* @PL_savestack_ix, align 4, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %3984, i64 0, metadata !4598, metadata !566), !dbg !4599
  %3985 = icmp ne i32 %c1.13, -1000, !dbg !4600
  br i1 %3985, label %3986, label %4282, !dbg !4602

; <label>:3986                                    ; preds = %3982
  call void @llvm.dbg.value(metadata i8* %3983, i64 0, metadata !4603, metadata !566), !dbg !4605
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !4606, metadata !566), !dbg !4607
  %3987 = icmp eq i32 %n.4, 32767, !dbg !4608
  br i1 %3987, label %3988, label %4007, !dbg !4610

; <label>:3988                                    ; preds = %3986
  %3989 = load i8** @PL_regeol, align 8, !dbg !4611
  %3990 = getelementptr inbounds i8* %3989, i64 -1, !dbg !4611
  call void @llvm.dbg.value(metadata i8* %3990, i64 0, metadata !4613, metadata !566), !dbg !4614
  %3991 = icmp ne i8 %2, 0, !dbg !4615
  br i1 %3991, label %3992, label %4006, !dbg !4615

; <label>:3992                                    ; preds = %3988
  br label %3993, !dbg !4616

; <label>:3993                                    ; preds = %4003, %3992
  %e19.0 = phi i8* [ %3990, %3992 ], [ %4004, %4003 ]
  %3994 = load i8* %e19.0, align 1, !dbg !4618
  %3995 = zext i8 %3994 to i32, !dbg !4618
  %3996 = icmp sge i32 %3995, 128, !dbg !4618
  br i1 %3996, label %3997, label %4001, !dbg !4618

; <label>:3997                                    ; preds = %3993
  %3998 = load i8* %e19.0, align 1, !dbg !4621
  %3999 = zext i8 %3998 to i32, !dbg !4621
  %4000 = icmp sle i32 %3999, 191, !dbg !4621
  br label %4001

; <label>:4001                                    ; preds = %3997, %3993
  %4002 = phi i1 [ false, %3993 ], [ %4000, %3997 ]
  br i1 %4002, label %4003, label %4005, !dbg !4623

; <label>:4003                                    ; preds = %4001
  %4004 = getelementptr inbounds i8* %e19.0, i32 -1, !dbg !4625
  call void @llvm.dbg.value(metadata i8* %4004, i64 0, metadata !4613, metadata !566), !dbg !4614
  br label %3993, !dbg !4616

; <label>:4005                                    ; preds = %4001
  br label %4006, !dbg !4626

; <label>:4006                                    ; preds = %4005, %3988
  %e19.1 = phi i8* [ %e19.0, %4005 ], [ %3990, %3988 ]
  br label %4049, !dbg !4628

; <label>:4007                                    ; preds = %3986
  %4008 = icmp ne i8 %2, 0, !dbg !4629
  br i1 %4008, label %4009, label %4036, !dbg !4629

; <label>:4009                                    ; preds = %4007
  %4010 = sub nsw i32 %n.4, %ln.10, !dbg !4630
  call void @llvm.dbg.value(metadata i32 %4010, i64 0, metadata !4633, metadata !566), !dbg !4634
  call void @llvm.dbg.value(metadata i8* %3983, i64 0, metadata !4613, metadata !566), !dbg !4614
  br label %4011, !dbg !4635

; <label>:4011                                    ; preds = %4033, %4009
  %e19.2 = phi i8* [ %3983, %4009 ], [ %4032, %4033 ]
  %m.0 = phi i32 [ %4010, %4009 ], [ %4034, %4033 ]
  %4012 = icmp sgt i32 %m.0, 0, !dbg !4637
  br i1 %4012, label %4013, label %4023, !dbg !4637

; <label>:4013                                    ; preds = %4011
  %4014 = load i8* %e19.2, align 1, !dbg !4639
  %4015 = zext i8 %4014 to i64, !dbg !4639
  %4016 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %4015, !dbg !4639
  %4017 = load i8* %4016, align 1, !dbg !4639
  %4018 = zext i8 %4017 to i32, !dbg !4639
  %4019 = sext i32 %4018 to i64, !dbg !4640
  %4020 = getelementptr inbounds i8* %e19.2, i64 %4019, !dbg !4640
  %4021 = load i8** @PL_regeol, align 8, !dbg !4641
  %4022 = icmp ule i8* %4020, %4021, !dbg !4640
  br label %4023

; <label>:4023                                    ; preds = %4013, %4011
  %4024 = phi i1 [ false, %4011 ], [ %4022, %4013 ]
  br i1 %4024, label %4025, label %4035, !dbg !4642

; <label>:4025                                    ; preds = %4023
  %4026 = load i8* %e19.2, align 1, !dbg !4643
  %4027 = zext i8 %4026 to i64, !dbg !4643
  %4028 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %4027, !dbg !4643
  %4029 = load i8* %4028, align 1, !dbg !4643
  %4030 = zext i8 %4029 to i32, !dbg !4643
  %4031 = sext i32 %4030 to i64, !dbg !4644
  %4032 = getelementptr inbounds i8* %e19.2, i64 %4031, !dbg !4644
  call void @llvm.dbg.value(metadata i8* %4032, i64 0, metadata !4613, metadata !566), !dbg !4614
  br label %4033, !dbg !4644

; <label>:4033                                    ; preds = %4025
  %4034 = add nsw i32 %m.0, -1, !dbg !4645
  call void @llvm.dbg.value(metadata i32 %4034, i64 0, metadata !4633, metadata !566), !dbg !4634
  br label %4011, !dbg !4646

; <label>:4035                                    ; preds = %4023
  br label %4048, !dbg !4647

; <label>:4036                                    ; preds = %4007
  %4037 = sext i32 %n.4 to i64, !dbg !4648
  %4038 = getelementptr inbounds i8* %3983, i64 %4037, !dbg !4648
  %4039 = sext i32 %ln.10 to i64, !dbg !4648
  %4040 = sub i64 0, %4039, !dbg !4648
  %4041 = getelementptr inbounds i8* %4038, i64 %4040, !dbg !4648
  call void @llvm.dbg.value(metadata i8* %4041, i64 0, metadata !4613, metadata !566), !dbg !4614
  %4042 = load i8** @PL_regeol, align 8, !dbg !4650
  %4043 = icmp uge i8* %4041, %4042, !dbg !4652
  br i1 %4043, label %4044, label %4047, !dbg !4653

; <label>:4044                                    ; preds = %4036
  %4045 = load i8** @PL_regeol, align 8, !dbg !4654
  %4046 = getelementptr inbounds i8* %4045, i64 -1, !dbg !4654
  call void @llvm.dbg.value(metadata i8* %4046, i64 0, metadata !4613, metadata !566), !dbg !4614
  br label %4047, !dbg !4655

; <label>:4047                                    ; preds = %4044, %4036
  %e19.3 = phi i8* [ %4046, %4044 ], [ %4041, %4036 ]
  br label %4048

; <label>:4048                                    ; preds = %4047, %4035
  %e19.4 = phi i8* [ %e19.2, %4035 ], [ %e19.3, %4047 ]
  br label %4049

; <label>:4049                                    ; preds = %4048, %4006
  %e19.5 = phi i8* [ %e19.1, %4006 ], [ %e19.4, %4048 ]
  br label %4050, !dbg !4656

; <label>:4050                                    ; preds = %4281, %4049
  %old.0 = phi i8* [ %3983, %4049 ], [ %locinput.15, %4281 ]
  %count.0 = phi i32 [ 0, %4049 ], [ 1, %4281 ]
  %locinput.8 = phi i8* [ %3983, %4049 ], [ %locinput.16, %4281 ]
  %ln.11 = phi i32 [ %ln.10, %4049 ], [ %ln.12, %4281 ]
  %4051 = icmp ne i8 %2, 0, !dbg !4657
  br i1 %4051, label %4087, label %4052, !dbg !4657

; <label>:4052                                    ; preds = %4050
  %4053 = icmp eq i32 %c1.13, %c2.19, !dbg !4659
  br i1 %4053, label %4054, label %4066, !dbg !4663

; <label>:4054                                    ; preds = %4052
  br label %4055, !dbg !4664

; <label>:4055                                    ; preds = %4063, %4054
  %locinput.9 = phi i8* [ %locinput.8, %4054 ], [ %4064, %4063 ]
  %4056 = icmp ule i8* %locinput.9, %e19.5, !dbg !4666
  br i1 %4056, label %4057, label %4061, !dbg !4666

; <label>:4057                                    ; preds = %4055
  %4058 = load i8* %locinput.9, align 1, !dbg !4667
  %4059 = zext i8 %4058 to i32, !dbg !4667
  %4060 = icmp ne i32 %4059, %c1.13, !dbg !4667
  br label %4061

; <label>:4061                                    ; preds = %4057, %4055
  %4062 = phi i1 [ false, %4055 ], [ %4060, %4057 ]
  br i1 %4062, label %4063, label %4065, !dbg !4668

; <label>:4063                                    ; preds = %4061
  %4064 = getelementptr inbounds i8* %locinput.9, i32 1, !dbg !4670
  call void @llvm.dbg.value(metadata i8* %4064, i64 0, metadata !2057, metadata !566), !dbg !2058
  br label %4055, !dbg !4664

; <label>:4065                                    ; preds = %4061
  br label %4082, !dbg !4671

; <label>:4066                                    ; preds = %4052
  br label %4067, !dbg !4672

; <label>:4067                                    ; preds = %4079, %4066
  %locinput.10 = phi i8* [ %locinput.8, %4066 ], [ %4080, %4079 ]
  %4068 = icmp ule i8* %locinput.10, %e19.5, !dbg !4674
  br i1 %4068, label %4069, label %4077, !dbg !4674

; <label>:4069                                    ; preds = %4067
  %4070 = load i8* %locinput.10, align 1, !dbg !4675
  %4071 = zext i8 %4070 to i32, !dbg !4675
  %4072 = icmp ne i32 %4071, %c1.13, !dbg !4675
  br i1 %4072, label %4073, label %4077, !dbg !4674

; <label>:4073                                    ; preds = %4069
  %4074 = load i8* %locinput.10, align 1, !dbg !4676
  %4075 = zext i8 %4074 to i32, !dbg !4676
  %4076 = icmp ne i32 %4075, %c2.19, !dbg !4676
  br label %4077

; <label>:4077                                    ; preds = %4073, %4069, %4067
  %4078 = phi i1 [ false, %4069 ], [ false, %4067 ], [ %4076, %4073 ]
  br i1 %4078, label %4079, label %4081, !dbg !4677

; <label>:4079                                    ; preds = %4077
  %4080 = getelementptr inbounds i8* %locinput.10, i32 1, !dbg !4680
  call void @llvm.dbg.value(metadata i8* %4080, i64 0, metadata !2057, metadata !566), !dbg !2058
  br label %4067, !dbg !4672

; <label>:4081                                    ; preds = %4077
  br label %4082

; <label>:4082                                    ; preds = %4081, %4065
  %locinput.11 = phi i8* [ %locinput.9, %4065 ], [ %locinput.10, %4081 ]
  %4083 = ptrtoint i8* %locinput.11 to i64, !dbg !4681
  %4084 = ptrtoint i8* %old.0 to i64, !dbg !4681
  %4085 = sub i64 %4083, %4084, !dbg !4681
  %4086 = trunc i64 %4085 to i32, !dbg !4681
  call void @llvm.dbg.value(metadata i32 %4086, i64 0, metadata !4606, metadata !566), !dbg !4607
  br label %4206, !dbg !4682

; <label>:4087                                    ; preds = %4050
  call void @llvm.dbg.declare(metadata i64* %len20, metadata !4683, metadata !566), !dbg !4685
  %4088 = icmp eq i32 %c1.13, %c2.19, !dbg !4686
  br i1 %4088, label %4089, label %4146, !dbg !4688

; <label>:4089                                    ; preds = %4087
  br label %4090, !dbg !4689

; <label>:4090                                    ; preds = %4141, %4089
  %count.1 = phi i32 [ %count.0, %4089 ], [ %4144, %4141 ]
  %locinput.12 = phi i8* [ %locinput.8, %4089 ], [ %4143, %4141 ]
  %4091 = icmp ule i8* %locinput.12, %e19.5, !dbg !4691
  br i1 %4091, label %4092, label %4139, !dbg !4691

; <label>:4092                                    ; preds = %4090
  %4093 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4692
  %4094 = getelementptr inbounds %struct.cop* %4093, i32 0, i32 14, !dbg !4692
  %4095 = load %struct.sv** %4094, align 8, !dbg !4692
  %4096 = icmp ne %struct.sv* %4095, null, !dbg !4692
  br i1 %4096, label %4097, label %4121, !dbg !4692

; <label>:4097                                    ; preds = %4092
  %4098 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4693
  %4099 = getelementptr inbounds %struct.cop* %4098, i32 0, i32 14, !dbg !4693
  %4100 = load %struct.sv** %4099, align 8, !dbg !4693
  %4101 = icmp ne %struct.sv* %4100, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !4693
  br i1 %4101, label %4102, label %4121, !dbg !4693

; <label>:4102                                    ; preds = %4097
  %4103 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4695
  %4104 = getelementptr inbounds %struct.cop* %4103, i32 0, i32 14, !dbg !4695
  %4105 = load %struct.sv** %4104, align 8, !dbg !4695
  %4106 = icmp eq %struct.sv* %4105, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !4695
  br i1 %4106, label %4133, label %4107, !dbg !4695

; <label>:4107                                    ; preds = %4102
  %4108 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4697
  %4109 = getelementptr inbounds %struct.cop* %4108, i32 0, i32 14, !dbg !4697
  %4110 = load %struct.sv** %4109, align 8, !dbg !4697
  %4111 = getelementptr inbounds %struct.sv* %4110, i32 0, i32 0, !dbg !4697
  %4112 = load i8** %4111, align 8, !dbg !4697
  %4113 = bitcast i8* %4112 to %struct.xpv*, !dbg !4697
  %4114 = getelementptr inbounds %struct.xpv* %4113, i32 0, i32 0, !dbg !4697
  %4115 = load i8** %4114, align 8, !dbg !4697
  %4116 = getelementptr inbounds i8* %4115, i64 11, !dbg !4697
  %4117 = load i8* %4116, align 1, !dbg !4697
  %4118 = sext i8 %4117 to i32, !dbg !4697
  %4119 = and i32 %4118, 1, !dbg !4697
  %4120 = icmp ne i32 %4119, 0, !dbg !4697
  br i1 %4120, label %4133, label %4121, !dbg !4697

; <label>:4121                                    ; preds = %4107, %4097, %4092
  %4122 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4699
  %4123 = getelementptr inbounds %struct.cop* %4122, i32 0, i32 14, !dbg !4699
  %4124 = load %struct.sv** %4123, align 8, !dbg !4699
  %4125 = icmp eq %struct.sv* %4124, null, !dbg !4699
  br i1 %4125, label %4126, label %4131, !dbg !4699

; <label>:4126                                    ; preds = %4121
  %4127 = load i8* @PL_dowarn, align 1, !dbg !4703
  %4128 = zext i8 %4127 to i32, !dbg !4703
  %4129 = and i32 %4128, 1, !dbg !4703
  %4130 = icmp ne i32 %4129, 0, !dbg !4703
  br label %4131

; <label>:4131                                    ; preds = %4126, %4121
  %4132 = phi i1 [ false, %4121 ], [ %4130, %4126 ]
  br label %4133, !dbg !4705

; <label>:4133                                    ; preds = %4131, %4107, %4102
  %4134 = phi i1 [ true, %4107 ], [ true, %4102 ], [ %4132, %4131 ]
  %4135 = select i1 %4134, i32 0, i32 255, !dbg !4707
  %4136 = call i64 @Perl_utf8n_to_uvuni(i8* %locinput.12, i64 13, i64* %len20, i32 %4135), !dbg !4711
  %4137 = sext i32 %c1.13 to i64, !dbg !4712
  %4138 = icmp ne i64 %4136, %4137, !dbg !4711
  br label %4139

; <label>:4139                                    ; preds = %4133, %4090
  %4140 = phi i1 [ false, %4090 ], [ %4138, %4133 ]
  br i1 %4140, label %4141, label %4145, !dbg !4713

; <label>:4141                                    ; preds = %4139
  %4142 = load i64* %len20, align 8, !dbg !4714
  %4143 = getelementptr inbounds i8* %locinput.12, i64 %4142, !dbg !4716
  call void @llvm.dbg.value(metadata i8* %4143, i64 0, metadata !2057, metadata !566), !dbg !2058
  %4144 = add nsw i32 %count.1, 1, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %4144, i64 0, metadata !4606, metadata !566), !dbg !4607
  br label %4090, !dbg !4689

; <label>:4145                                    ; preds = %4139
  br label %4205, !dbg !4718

; <label>:4146                                    ; preds = %4087
  br label %4147, !dbg !4719

; <label>:4147                                    ; preds = %4200, %4146
  %count.2 = phi i32 [ %count.0, %4146 ], [ %4203, %4200 ]
  %locinput.13 = phi i8* [ %locinput.8, %4146 ], [ %4202, %4200 ]
  %4148 = icmp ule i8* %locinput.13, %e19.5, !dbg !4721
  br i1 %4148, label %4149, label %4204, !dbg !4719

; <label>:4149                                    ; preds = %4147
  %4150 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4722
  %4151 = getelementptr inbounds %struct.cop* %4150, i32 0, i32 14, !dbg !4722
  %4152 = load %struct.sv** %4151, align 8, !dbg !4722
  %4153 = icmp ne %struct.sv* %4152, null, !dbg !4722
  br i1 %4153, label %4154, label %4178, !dbg !4722

; <label>:4154                                    ; preds = %4149
  %4155 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4724
  %4156 = getelementptr inbounds %struct.cop* %4155, i32 0, i32 14, !dbg !4724
  %4157 = load %struct.sv** %4156, align 8, !dbg !4724
  %4158 = icmp ne %struct.sv* %4157, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !4724
  br i1 %4158, label %4159, label %4178, !dbg !4724

; <label>:4159                                    ; preds = %4154
  %4160 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4726
  %4161 = getelementptr inbounds %struct.cop* %4160, i32 0, i32 14, !dbg !4726
  %4162 = load %struct.sv** %4161, align 8, !dbg !4726
  %4163 = icmp eq %struct.sv* %4162, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !4726
  br i1 %4163, label %4190, label %4164, !dbg !4726

; <label>:4164                                    ; preds = %4159
  %4165 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4728
  %4166 = getelementptr inbounds %struct.cop* %4165, i32 0, i32 14, !dbg !4728
  %4167 = load %struct.sv** %4166, align 8, !dbg !4728
  %4168 = getelementptr inbounds %struct.sv* %4167, i32 0, i32 0, !dbg !4728
  %4169 = load i8** %4168, align 8, !dbg !4728
  %4170 = bitcast i8* %4169 to %struct.xpv*, !dbg !4728
  %4171 = getelementptr inbounds %struct.xpv* %4170, i32 0, i32 0, !dbg !4728
  %4172 = load i8** %4171, align 8, !dbg !4728
  %4173 = getelementptr inbounds i8* %4172, i64 11, !dbg !4728
  %4174 = load i8* %4173, align 1, !dbg !4728
  %4175 = sext i8 %4174 to i32, !dbg !4728
  %4176 = and i32 %4175, 1, !dbg !4728
  %4177 = icmp ne i32 %4176, 0, !dbg !4728
  br i1 %4177, label %4190, label %4178, !dbg !4728

; <label>:4178                                    ; preds = %4164, %4154, %4149
  %4179 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4730
  %4180 = getelementptr inbounds %struct.cop* %4179, i32 0, i32 14, !dbg !4730
  %4181 = load %struct.sv** %4180, align 8, !dbg !4730
  %4182 = icmp eq %struct.sv* %4181, null, !dbg !4730
  br i1 %4182, label %4183, label %4188, !dbg !4730

; <label>:4183                                    ; preds = %4178
  %4184 = load i8* @PL_dowarn, align 1, !dbg !4734
  %4185 = zext i8 %4184 to i32, !dbg !4734
  %4186 = and i32 %4185, 1, !dbg !4734
  %4187 = icmp ne i32 %4186, 0, !dbg !4734
  br label %4188

; <label>:4188                                    ; preds = %4183, %4178
  %4189 = phi i1 [ false, %4178 ], [ %4187, %4183 ]
  br label %4190, !dbg !4736

; <label>:4190                                    ; preds = %4188, %4164, %4159
  %4191 = phi i1 [ true, %4164 ], [ true, %4159 ], [ %4189, %4188 ]
  %4192 = select i1 %4191, i32 0, i32 255, !dbg !4738
  %4193 = call i64 @Perl_utf8n_to_uvuni(i8* %locinput.13, i64 13, i64* %len20, i32 %4192), !dbg !4742
  call void @llvm.dbg.value(metadata i64 %4193, i64 0, metadata !4743, metadata !566), !dbg !4744
  %4194 = sext i32 %c1.13 to i64, !dbg !4745
  %4195 = icmp eq i64 %4193, %4194, !dbg !4747
  br i1 %4195, label %4199, label %4196, !dbg !4748

; <label>:4196                                    ; preds = %4190
  %4197 = sext i32 %c2.19 to i64, !dbg !4749
  %4198 = icmp eq i64 %4193, %4197, !dbg !4750
  br i1 %4198, label %4199, label %4200, !dbg !4748

; <label>:4199                                    ; preds = %4196, %4190
  br label %4204, !dbg !4751

; <label>:4200                                    ; preds = %4196
  %4201 = load i64* %len20, align 8, !dbg !4752
  %4202 = getelementptr inbounds i8* %locinput.13, i64 %4201, !dbg !4753
  call void @llvm.dbg.value(metadata i8* %4202, i64 0, metadata !2057, metadata !566), !dbg !2058
  %4203 = add nsw i32 %count.2, 1, !dbg !4754
  call void @llvm.dbg.value(metadata i32 %4203, i64 0, metadata !4606, metadata !566), !dbg !4607
  br label %4147, !dbg !4719

; <label>:4204                                    ; preds = %4199, %4147
  br label %4205

; <label>:4205                                    ; preds = %4204, %4145
  %count.3 = phi i32 [ %count.1, %4145 ], [ %count.2, %4204 ]
  %locinput.14 = phi i8* [ %locinput.12, %4145 ], [ %locinput.13, %4204 ]
  br label %4206

; <label>:4206                                    ; preds = %4205, %4082
  %count.4 = phi i32 [ %count.3, %4205 ], [ %4086, %4082 ]
  %locinput.15 = phi i8* [ %locinput.14, %4205 ], [ %locinput.11, %4082 ]
  %4207 = icmp ugt i8* %locinput.15, %e19.5, !dbg !4755
  br i1 %4207, label %4208, label %4209, !dbg !4757

; <label>:4208                                    ; preds = %4206
  br label %5029, !dbg !4758

; <label>:4209                                    ; preds = %4206
  %4210 = icmp ne i8* %locinput.15, %old.0, !dbg !4759
  br i1 %4210, label %4211, label %4216, !dbg !4761

; <label>:4211                                    ; preds = %4209
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2052, metadata !566), !dbg !2053
  %4212 = call i32 (%struct.regnode*, i32, ...)* bitcast (i32 (...)* @regrepeat to i32 (%struct.regnode*, i32, ...)*)(%struct.regnode* %scan.2, i32 %count.4), !dbg !4762
  %4213 = icmp slt i32 %4212, %count.4, !dbg !4762
  br i1 %4213, label %4214, label %4215, !dbg !4765

; <label>:4214                                    ; preds = %4211
  br label %5029, !dbg !4766

; <label>:4215                                    ; preds = %4211
  br label %4216, !dbg !4767

; <label>:4216                                    ; preds = %4215, %4209
  %ln.12 = phi i32 [ 1, %4215 ], [ %ln.11, %4209 ]
  %4217 = icmp ne i32 %paren.0, 0, !dbg !4768
  br i1 %4217, label %4218, label %4253, !dbg !4768

; <label>:4218                                    ; preds = %4216
  %4219 = icmp ne i32 %ln.12, 0, !dbg !4770
  br i1 %4219, label %4220, label %4248, !dbg !4770

; <label>:4220                                    ; preds = %4218
  %4221 = load i8* @PL_reg_match_utf8, align 1, !dbg !4773
  %4222 = sext i8 %4221 to i32, !dbg !4773
  %4223 = icmp ne i32 %4222, 0, !dbg !4773
  br i1 %4223, label %4224, label %4228, !dbg !4773

; <label>:4224                                    ; preds = %4220
  %4225 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %locinput.15, i32 -1), !dbg !4777
  %4226 = sext i32 %4225 to i64, !dbg !4777
  %4227 = inttoptr i64 %4226 to i8*, !dbg !4777
  br label %4230, !dbg !4777

; <label>:4228                                    ; preds = %4220
  %4229 = getelementptr inbounds i8* %locinput.15, i64 -1, !dbg !4779
  br label %4230, !dbg !4779

; <label>:4230                                    ; preds = %4228, %4224
  %4231 = phi i8* [ %4227, %4224 ], [ %4229, %4228 ], !dbg !4781
  %4232 = load i8** @PL_bostr, align 8, !dbg !4782
  %4233 = ptrtoint i8* %4231 to i64, !dbg !4782
  %4234 = ptrtoint i8* %4232 to i64, !dbg !4782
  %4235 = sub i64 %4233, %4234, !dbg !4782
  %4236 = trunc i64 %4235 to i32, !dbg !4782
  %4237 = sext i32 %paren.0 to i64, !dbg !4782
  %4238 = load i32** @PL_regstartp, align 8, !dbg !4782
  %4239 = getelementptr inbounds i32* %4238, i64 %4237, !dbg !4782
  store i32 %4236, i32* %4239, align 4, !dbg !4782
  %4240 = load i8** @PL_bostr, align 8, !dbg !4782
  %4241 = ptrtoint i8* %locinput.15 to i64, !dbg !4782
  %4242 = ptrtoint i8* %4240 to i64, !dbg !4782
  %4243 = sub i64 %4241, %4242, !dbg !4782
  %4244 = trunc i64 %4243 to i32, !dbg !4782
  %4245 = sext i32 %paren.0 to i64, !dbg !4782
  %4246 = load i32** @PL_regendp, align 8, !dbg !4782
  %4247 = getelementptr inbounds i32* %4246, i64 %4245, !dbg !4782
  store i32 %4244, i32* %4247, align 4, !dbg !4782
  br label %4252, !dbg !4782

; <label>:4248                                    ; preds = %4218
  %4249 = sext i32 %paren.0 to i64, !dbg !4785
  %4250 = load i32** @PL_regendp, align 8, !dbg !4785
  %4251 = getelementptr inbounds i32* %4250, i64 %4249, !dbg !4785
  store i32 -1, i32* %4251, align 4, !dbg !4785
  br label %4252

; <label>:4252                                    ; preds = %4248, %4230
  br label %4253, !dbg !4787

; <label>:4253                                    ; preds = %4252, %4216
  %4254 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %next.0), !dbg !4789
  %4255 = icmp ne i32 %4254, 0, !dbg !4768
  br i1 %4255, label %4256, label %4257, !dbg !4768

; <label>:4256                                    ; preds = %4253
  br label %5028, !dbg !4793

; <label>:4257                                    ; preds = %4253
  %4258 = icmp ne i32 %paren.0, 0, !dbg !4768
  br i1 %4258, label %4259, label %4265, !dbg !4768

; <label>:4259                                    ; preds = %4257
  %4260 = icmp ne i32 %ln.12, 0, !dbg !4768
  br i1 %4260, label %4261, label %4265, !dbg !4768

; <label>:4261                                    ; preds = %4259
  %4262 = sext i32 %paren.0 to i64, !dbg !4795
  %4263 = load i32** @PL_regendp, align 8, !dbg !4795
  %4264 = getelementptr inbounds i32* %4263, i64 %4262, !dbg !4795
  store i32 -1, i32* %4264, align 4, !dbg !4795
  br label %4265, !dbg !4795

; <label>:4265                                    ; preds = %4261, %4259, %4257
  store i8* %locinput.15, i8** @PL_reginput, align 8, !dbg !4798
  %4266 = load i32* @PL_savestack_ix, align 4, !dbg !4799
  %4267 = icmp sgt i32 %4266, %3984, !dbg !4799
  br i1 %4267, label %4268, label %4269, !dbg !4801

; <label>:4268                                    ; preds = %4265
  call void @Perl_leave_scope(i32 %3984), !dbg !4802
  br label %4269, !dbg !4802

; <label>:4269                                    ; preds = %4268, %4265
  call void @llvm.dbg.value(metadata i8* %locinput.15, i64 0, metadata !4603, metadata !566), !dbg !4605
  %4270 = icmp ne i8 %2, 0, !dbg !4804
  br i1 %4270, label %4271, label %4279, !dbg !4804

; <label>:4271                                    ; preds = %4269
  %4272 = load i8* %locinput.15, align 1, !dbg !4805
  %4273 = zext i8 %4272 to i64, !dbg !4805
  %4274 = getelementptr inbounds [0 x i8]* @PL_utf8skip, i32 0, i64 %4273, !dbg !4805
  %4275 = load i8* %4274, align 1, !dbg !4805
  %4276 = zext i8 %4275 to i32, !dbg !4805
  %4277 = sext i32 %4276 to i64, !dbg !4807
  %4278 = getelementptr inbounds i8* %locinput.15, i64 %4277, !dbg !4807
  call void @llvm.dbg.value(metadata i8* %4278, i64 0, metadata !2057, metadata !566), !dbg !2058
  br label %4281, !dbg !4807

; <label>:4279                                    ; preds = %4269
  %4280 = getelementptr inbounds i8* %locinput.15, i32 1, !dbg !4808
  call void @llvm.dbg.value(metadata i8* %4280, i64 0, metadata !2057, metadata !566), !dbg !2058
  br label %4281

; <label>:4281                                    ; preds = %4279, %4271
  %locinput.16 = phi i8* [ %4278, %4271 ], [ %4280, %4279 ]
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !4606, metadata !566), !dbg !4607
  br label %4050, !dbg !4656

; <label>:4282                                    ; preds = %3982
  br label %4283, !dbg !4809

; <label>:4283                                    ; preds = %4479, %4282
  %locinput.17 = phi i8* [ %3983, %4282 ], [ %4477, %4479 ]
  %ln.13 = phi i32 [ %ln.10, %4282 ], [ %4476, %4479 ]
  %4284 = icmp sge i32 %n.4, %ln.13, !dbg !4810
  br i1 %4284, label %4291, label %4285, !dbg !4810

; <label>:4285                                    ; preds = %4283
  %4286 = icmp eq i32 %n.4, 32767, !dbg !4811
  br i1 %4286, label %4287, label %4289, !dbg !4811

; <label>:4287                                    ; preds = %4285
  %4288 = icmp sgt i32 %ln.13, 0, !dbg !4813
  br label %4289

; <label>:4289                                    ; preds = %4287, %4285
  %4290 = phi i1 [ false, %4285 ], [ %4288, %4287 ]
  br label %4291, !dbg !4815

; <label>:4291                                    ; preds = %4289, %4283
  %4292 = phi i1 [ true, %4283 ], [ %4290, %4289 ]
  br i1 %4292, label %4293, label %4480, !dbg !4817

; <label>:4293                                    ; preds = %4291
  %4294 = icmp ne i32 %c1.13, -1000, !dbg !4820
  br i1 %4294, label %4295, label %4412, !dbg !4823

; <label>:4295                                    ; preds = %4293
  %4296 = icmp ne i8 %2, 0, !dbg !4824
  br i1 %4296, label %4297, label %4343, !dbg !4824

; <label>:4297                                    ; preds = %4295
  %4298 = load i8** @PL_reginput, align 8, !dbg !4826
  %4299 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4828
  %4300 = getelementptr inbounds %struct.cop* %4299, i32 0, i32 14, !dbg !4828
  %4301 = load %struct.sv** %4300, align 8, !dbg !4828
  %4302 = icmp ne %struct.sv* %4301, null, !dbg !4828
  br i1 %4302, label %4303, label %4327, !dbg !4828

; <label>:4303                                    ; preds = %4297
  %4304 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4829
  %4305 = getelementptr inbounds %struct.cop* %4304, i32 0, i32 14, !dbg !4829
  %4306 = load %struct.sv** %4305, align 8, !dbg !4829
  %4307 = icmp ne %struct.sv* %4306, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !4829
  br i1 %4307, label %4308, label %4327, !dbg !4829

; <label>:4308                                    ; preds = %4303
  %4309 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4831
  %4310 = getelementptr inbounds %struct.cop* %4309, i32 0, i32 14, !dbg !4831
  %4311 = load %struct.sv** %4310, align 8, !dbg !4831
  %4312 = icmp eq %struct.sv* %4311, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !4831
  br i1 %4312, label %4339, label %4313, !dbg !4831

; <label>:4313                                    ; preds = %4308
  %4314 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4833
  %4315 = getelementptr inbounds %struct.cop* %4314, i32 0, i32 14, !dbg !4833
  %4316 = load %struct.sv** %4315, align 8, !dbg !4833
  %4317 = getelementptr inbounds %struct.sv* %4316, i32 0, i32 0, !dbg !4833
  %4318 = load i8** %4317, align 8, !dbg !4833
  %4319 = bitcast i8* %4318 to %struct.xpv*, !dbg !4833
  %4320 = getelementptr inbounds %struct.xpv* %4319, i32 0, i32 0, !dbg !4833
  %4321 = load i8** %4320, align 8, !dbg !4833
  %4322 = getelementptr inbounds i8* %4321, i64 11, !dbg !4833
  %4323 = load i8* %4322, align 1, !dbg !4833
  %4324 = sext i8 %4323 to i32, !dbg !4833
  %4325 = and i32 %4324, 1, !dbg !4833
  %4326 = icmp ne i32 %4325, 0, !dbg !4833
  br i1 %4326, label %4339, label %4327, !dbg !4833

; <label>:4327                                    ; preds = %4313, %4303, %4297
  %4328 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4835
  %4329 = getelementptr inbounds %struct.cop* %4328, i32 0, i32 14, !dbg !4835
  %4330 = load %struct.sv** %4329, align 8, !dbg !4835
  %4331 = icmp eq %struct.sv* %4330, null, !dbg !4835
  br i1 %4331, label %4332, label %4337, !dbg !4835

; <label>:4332                                    ; preds = %4327
  %4333 = load i8* @PL_dowarn, align 1, !dbg !4839
  %4334 = zext i8 %4333 to i32, !dbg !4839
  %4335 = and i32 %4334, 1, !dbg !4839
  %4336 = icmp ne i32 %4335, 0, !dbg !4839
  br label %4337

; <label>:4337                                    ; preds = %4332, %4327
  %4338 = phi i1 [ false, %4327 ], [ %4336, %4332 ]
  br label %4339, !dbg !4841

; <label>:4339                                    ; preds = %4337, %4313, %4308
  %4340 = phi i1 [ true, %4313 ], [ true, %4308 ], [ %4338, %4337 ]
  %4341 = select i1 %4340, i32 0, i32 255, !dbg !4843
  %4342 = call i64 @Perl_utf8n_to_uvuni(i8* %4298, i64 13, i64* null, i32 %4341), !dbg !4847
  call void @llvm.dbg.value(metadata i64 %4342, i64 0, metadata !4848, metadata !566), !dbg !4849
  br label %4348, !dbg !4850

; <label>:4343                                    ; preds = %4295
  %4344 = load i8** @PL_reginput, align 8, !dbg !4851
  %4345 = load i8* %4344, align 1, !dbg !4851
  %4346 = zext i8 %4345 to i32, !dbg !4851
  %4347 = sext i32 %4346 to i64, !dbg !4851
  call void @llvm.dbg.value(metadata i64 %4347, i64 0, metadata !4848, metadata !566), !dbg !4849
  br label %4348

; <label>:4348                                    ; preds = %4343, %4339
  %c21.0 = phi i64 [ %4342, %4339 ], [ %4347, %4343 ]
  %4349 = sext i32 %c1.13 to i64, !dbg !4852
  %4350 = icmp eq i64 %c21.0, %4349, !dbg !4854
  br i1 %4350, label %4354, label %4351, !dbg !4855

; <label>:4351                                    ; preds = %4348
  %4352 = sext i32 %c2.19 to i64, !dbg !4856
  %4353 = icmp eq i64 %c21.0, %4352, !dbg !4857
  br i1 %4353, label %4354, label %4411, !dbg !4855

; <label>:4354                                    ; preds = %4351, %4348
  %4355 = icmp ne i32 %paren.0, 0, !dbg !4858
  br i1 %4355, label %4356, label %4394, !dbg !4858

; <label>:4356                                    ; preds = %4354
  %4357 = icmp ne i32 %ln.13, 0, !dbg !4861
  br i1 %4357, label %4358, label %4389, !dbg !4861

; <label>:4358                                    ; preds = %4356
  %4359 = load i8* @PL_reg_match_utf8, align 1, !dbg !4864
  %4360 = sext i8 %4359 to i32, !dbg !4864
  %4361 = icmp ne i32 %4360, 0, !dbg !4864
  br i1 %4361, label %4362, label %4367, !dbg !4864

; <label>:4362                                    ; preds = %4358
  %4363 = load i8** @PL_reginput, align 8, !dbg !4868
  %4364 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %4363, i32 -1), !dbg !4868
  %4365 = sext i32 %4364 to i64, !dbg !4868
  %4366 = inttoptr i64 %4365 to i8*, !dbg !4868
  br label %4370, !dbg !4868

; <label>:4367                                    ; preds = %4358
  %4368 = load i8** @PL_reginput, align 8, !dbg !4870
  %4369 = getelementptr inbounds i8* %4368, i64 -1, !dbg !4870
  br label %4370, !dbg !4870

; <label>:4370                                    ; preds = %4367, %4362
  %4371 = phi i8* [ %4366, %4362 ], [ %4369, %4367 ], !dbg !4872
  %4372 = load i8** @PL_bostr, align 8, !dbg !4873
  %4373 = ptrtoint i8* %4371 to i64, !dbg !4873
  %4374 = ptrtoint i8* %4372 to i64, !dbg !4873
  %4375 = sub i64 %4373, %4374, !dbg !4873
  %4376 = trunc i64 %4375 to i32, !dbg !4873
  %4377 = sext i32 %paren.0 to i64, !dbg !4873
  %4378 = load i32** @PL_regstartp, align 8, !dbg !4873
  %4379 = getelementptr inbounds i32* %4378, i64 %4377, !dbg !4873
  store i32 %4376, i32* %4379, align 4, !dbg !4873
  %4380 = load i8** @PL_reginput, align 8, !dbg !4873
  %4381 = load i8** @PL_bostr, align 8, !dbg !4873
  %4382 = ptrtoint i8* %4380 to i64, !dbg !4873
  %4383 = ptrtoint i8* %4381 to i64, !dbg !4873
  %4384 = sub i64 %4382, %4383, !dbg !4873
  %4385 = trunc i64 %4384 to i32, !dbg !4873
  %4386 = sext i32 %paren.0 to i64, !dbg !4873
  %4387 = load i32** @PL_regendp, align 8, !dbg !4873
  %4388 = getelementptr inbounds i32* %4387, i64 %4386, !dbg !4873
  store i32 %4385, i32* %4388, align 4, !dbg !4873
  br label %4393, !dbg !4873

; <label>:4389                                    ; preds = %4356
  %4390 = sext i32 %paren.0 to i64, !dbg !4876
  %4391 = load i32** @PL_regendp, align 8, !dbg !4876
  %4392 = getelementptr inbounds i32* %4391, i64 %4390, !dbg !4876
  store i32 -1, i32* %4392, align 4, !dbg !4876
  br label %4393

; <label>:4393                                    ; preds = %4389, %4370
  br label %4394, !dbg !4878

; <label>:4394                                    ; preds = %4393, %4354
  %4395 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %next.0), !dbg !4880
  %4396 = icmp ne i32 %4395, 0, !dbg !4858
  br i1 %4396, label %4397, label %4398, !dbg !4858

; <label>:4397                                    ; preds = %4394
  br label %5028, !dbg !4884

; <label>:4398                                    ; preds = %4394
  %4399 = icmp ne i32 %paren.0, 0, !dbg !4858
  br i1 %4399, label %4400, label %4406, !dbg !4858

; <label>:4400                                    ; preds = %4398
  %4401 = icmp ne i32 %ln.13, 0, !dbg !4858
  br i1 %4401, label %4402, label %4406, !dbg !4858

; <label>:4402                                    ; preds = %4400
  %4403 = sext i32 %paren.0 to i64, !dbg !4886
  %4404 = load i32** @PL_regendp, align 8, !dbg !4886
  %4405 = getelementptr inbounds i32* %4404, i64 %4403, !dbg !4886
  store i32 -1, i32* %4405, align 4, !dbg !4886
  br label %4406, !dbg !4886

; <label>:4406                                    ; preds = %4402, %4400, %4398
  %4407 = load i32* @PL_savestack_ix, align 4, !dbg !4889
  %4408 = icmp sgt i32 %4407, %3984, !dbg !4889
  br i1 %4408, label %4409, label %4410, !dbg !4891

; <label>:4409                                    ; preds = %4406
  call void @Perl_leave_scope(i32 %3984), !dbg !4892
  br label %4410, !dbg !4892

; <label>:4410                                    ; preds = %4409, %4406
  br label %4411, !dbg !4894

; <label>:4411                                    ; preds = %4410, %4351
  br label %4472, !dbg !4895

; <label>:4412                                    ; preds = %4293
  %4413 = icmp eq i32 %c1.13, -1000, !dbg !4896
  br i1 %4413, label %4414, label %4471, !dbg !4898

; <label>:4414                                    ; preds = %4412
  %4415 = icmp ne i32 %paren.0, 0, !dbg !4899
  br i1 %4415, label %4416, label %4454, !dbg !4899

; <label>:4416                                    ; preds = %4414
  %4417 = icmp ne i32 %ln.13, 0, !dbg !4902
  br i1 %4417, label %4418, label %4449, !dbg !4902

; <label>:4418                                    ; preds = %4416
  %4419 = load i8* @PL_reg_match_utf8, align 1, !dbg !4905
  %4420 = sext i8 %4419 to i32, !dbg !4905
  %4421 = icmp ne i32 %4420, 0, !dbg !4905
  br i1 %4421, label %4422, label %4427, !dbg !4905

; <label>:4422                                    ; preds = %4418
  %4423 = load i8** @PL_reginput, align 8, !dbg !4909
  %4424 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %4423, i32 -1), !dbg !4909
  %4425 = sext i32 %4424 to i64, !dbg !4909
  %4426 = inttoptr i64 %4425 to i8*, !dbg !4909
  br label %4430, !dbg !4909

; <label>:4427                                    ; preds = %4418
  %4428 = load i8** @PL_reginput, align 8, !dbg !4911
  %4429 = getelementptr inbounds i8* %4428, i64 -1, !dbg !4911
  br label %4430, !dbg !4911

; <label>:4430                                    ; preds = %4427, %4422
  %4431 = phi i8* [ %4426, %4422 ], [ %4429, %4427 ], !dbg !4913
  %4432 = load i8** @PL_bostr, align 8, !dbg !4914
  %4433 = ptrtoint i8* %4431 to i64, !dbg !4914
  %4434 = ptrtoint i8* %4432 to i64, !dbg !4914
  %4435 = sub i64 %4433, %4434, !dbg !4914
  %4436 = trunc i64 %4435 to i32, !dbg !4914
  %4437 = sext i32 %paren.0 to i64, !dbg !4914
  %4438 = load i32** @PL_regstartp, align 8, !dbg !4914
  %4439 = getelementptr inbounds i32* %4438, i64 %4437, !dbg !4914
  store i32 %4436, i32* %4439, align 4, !dbg !4914
  %4440 = load i8** @PL_reginput, align 8, !dbg !4914
  %4441 = load i8** @PL_bostr, align 8, !dbg !4914
  %4442 = ptrtoint i8* %4440 to i64, !dbg !4914
  %4443 = ptrtoint i8* %4441 to i64, !dbg !4914
  %4444 = sub i64 %4442, %4443, !dbg !4914
  %4445 = trunc i64 %4444 to i32, !dbg !4914
  %4446 = sext i32 %paren.0 to i64, !dbg !4914
  %4447 = load i32** @PL_regendp, align 8, !dbg !4914
  %4448 = getelementptr inbounds i32* %4447, i64 %4446, !dbg !4914
  store i32 %4445, i32* %4448, align 4, !dbg !4914
  br label %4453, !dbg !4914

; <label>:4449                                    ; preds = %4416
  %4450 = sext i32 %paren.0 to i64, !dbg !4917
  %4451 = load i32** @PL_regendp, align 8, !dbg !4917
  %4452 = getelementptr inbounds i32* %4451, i64 %4450, !dbg !4917
  store i32 -1, i32* %4452, align 4, !dbg !4917
  br label %4453

; <label>:4453                                    ; preds = %4449, %4430
  br label %4454, !dbg !4919

; <label>:4454                                    ; preds = %4453, %4414
  %4455 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %next.0), !dbg !4921
  %4456 = icmp ne i32 %4455, 0, !dbg !4899
  br i1 %4456, label %4457, label %4458, !dbg !4899

; <label>:4457                                    ; preds = %4454
  br label %5028, !dbg !4925

; <label>:4458                                    ; preds = %4454
  %4459 = icmp ne i32 %paren.0, 0, !dbg !4899
  br i1 %4459, label %4460, label %4466, !dbg !4899

; <label>:4460                                    ; preds = %4458
  %4461 = icmp ne i32 %ln.13, 0, !dbg !4899
  br i1 %4461, label %4462, label %4466, !dbg !4899

; <label>:4462                                    ; preds = %4460
  %4463 = sext i32 %paren.0 to i64, !dbg !4927
  %4464 = load i32** @PL_regendp, align 8, !dbg !4927
  %4465 = getelementptr inbounds i32* %4464, i64 %4463, !dbg !4927
  store i32 -1, i32* %4465, align 4, !dbg !4927
  br label %4466, !dbg !4927

; <label>:4466                                    ; preds = %4462, %4460, %4458
  %4467 = load i32* @PL_savestack_ix, align 4, !dbg !4930
  %4468 = icmp sgt i32 %4467, %3984, !dbg !4930
  br i1 %4468, label %4469, label %4470, !dbg !4932

; <label>:4469                                    ; preds = %4466
  call void @Perl_leave_scope(i32 %3984), !dbg !4933
  br label %4470, !dbg !4933

; <label>:4470                                    ; preds = %4469, %4466
  br label %4471, !dbg !4935

; <label>:4471                                    ; preds = %4470, %4412
  br label %4472

; <label>:4472                                    ; preds = %4471, %4411
  store i8* %locinput.17, i8** @PL_reginput, align 8, !dbg !4936
  %4473 = call i32 (%struct.regnode*, i32, ...)* bitcast (i32 (...)* @regrepeat to i32 (%struct.regnode*, i32, ...)*)(%struct.regnode* %scan.2, i32 1), !dbg !4937
  %4474 = icmp ne i32 %4473, 0, !dbg !4939
  br i1 %4474, label %4475, label %4478, !dbg !4939

; <label>:4475                                    ; preds = %4472
  %4476 = add nsw i32 %ln.13, 1, !dbg !4940
  call void @llvm.dbg.value(metadata i32 %4476, i64 0, metadata !2052, metadata !566), !dbg !2053
  %4477 = load i8** @PL_reginput, align 8, !dbg !4942
  call void @llvm.dbg.value(metadata i8* %4477, i64 0, metadata !2057, metadata !566), !dbg !2058
  br label %4479, !dbg !4943

; <label>:4478                                    ; preds = %4472
  br label %5029, !dbg !4944

; <label>:4479                                    ; preds = %4475
  br label %4283, !dbg !4809

; <label>:4480                                    ; preds = %4291
  br label %4481

; <label>:4481                                    ; preds = %4480
  br label %4806, !dbg !4945

; <label>:4482                                    ; preds = %3974
  %4483 = call i32 (%struct.regnode*, i32, ...)* bitcast (i32 (...)* @regrepeat to i32 (%struct.regnode*, i32, ...)*)(%struct.regnode* %scan.2, i32 %n.4), !dbg !4946
  call void @llvm.dbg.value(metadata i32 %4483, i64 0, metadata !2607, metadata !566), !dbg !2608
  %4484 = load i8** @PL_reginput, align 8, !dbg !4948
  call void @llvm.dbg.value(metadata i8* %4484, i64 0, metadata !2057, metadata !566), !dbg !2058
  %4485 = icmp slt i32 %ln.10, %4483, !dbg !4949
  br i1 %4485, label %4486, label %4526, !dbg !4951

; <label>:4486                                    ; preds = %4482
  %4487 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4952
  %4488 = load i8* %4487, align 1, !dbg !4952
  %4489 = zext i8 %4488 to i64, !dbg !4954
  %4490 = getelementptr inbounds [0 x i8]* @PL_regkind, i32 0, i64 %4489, !dbg !4954
  %4491 = load i8* %4490, align 1, !dbg !4954
  %4492 = zext i8 %4491 to i32, !dbg !4954
  %4493 = icmp eq i32 %4492, 6, !dbg !4954
  br i1 %4493, label %4494, label %4526, !dbg !4951

; <label>:4494                                    ; preds = %4486
  %4495 = load i32* @PL_multiline, align 4, !dbg !4955
  %4496 = icmp ne i32 %4495, 0, !dbg !4951
  br i1 %4496, label %4502, label %4497, !dbg !4951

; <label>:4497                                    ; preds = %4494
  %4498 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4956
  %4499 = load i8* %4498, align 1, !dbg !4956
  %4500 = zext i8 %4499 to i32, !dbg !4956
  %4501 = icmp ne i32 %4500, 7, !dbg !4956
  br i1 %4501, label %4512, label %4502, !dbg !4951

; <label>:4502                                    ; preds = %4497, %4494
  %4503 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4957
  %4504 = load i8* %4503, align 1, !dbg !4957
  %4505 = zext i8 %4504 to i32, !dbg !4957
  %4506 = icmp eq i32 %4505, 8, !dbg !4957
  br i1 %4506, label %4512, label %4507, !dbg !4951

; <label>:4507                                    ; preds = %4502
  %4508 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4958
  %4509 = load i8* %4508, align 1, !dbg !4958
  %4510 = zext i8 %4509 to i32, !dbg !4958
  %4511 = icmp eq i32 %4510, 5, !dbg !4958
  br i1 %4511, label %4512, label %4526, !dbg !4951

; <label>:4512                                    ; preds = %4507, %4502, %4497
  call void @llvm.dbg.value(metadata i32 %4483, i64 0, metadata !2052, metadata !566), !dbg !2053
  %4513 = load i8** @PL_reginput, align 8, !dbg !4959
  %4514 = getelementptr inbounds i8* %4513, i64 -1, !dbg !4959
  %4515 = load i8* %4514, align 1, !dbg !4959
  %4516 = zext i8 %4515 to i32, !dbg !4959
  %4517 = icmp eq i32 %4516, 10, !dbg !4959
  br i1 %4517, label %4518, label %4525, !dbg !4962

; <label>:4518                                    ; preds = %4512
  %4519 = getelementptr inbounds %struct.regnode* %next.0, i32 0, i32 1, !dbg !4963
  %4520 = load i8* %4519, align 1, !dbg !4963
  %4521 = zext i8 %4520 to i32, !dbg !4963
  %4522 = icmp ne i32 %4521, 5, !dbg !4963
  br i1 %4522, label %4523, label %4525, !dbg !4962

; <label>:4523                                    ; preds = %4518
  %4524 = add nsw i32 %4483, -1, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %4524, i64 0, metadata !2052, metadata !566), !dbg !2053
  br label %4525, !dbg !4965

; <label>:4525                                    ; preds = %4523, %4518, %4512
  %ln.14 = phi i32 [ %4524, %4523 ], [ %4483, %4518 ], [ %4483, %4512 ]
  br label %4526, !dbg !4966

; <label>:4526                                    ; preds = %4525, %4507, %4486, %4482
  %ln.15 = phi i32 [ %ln.14, %4525 ], [ %ln.10, %4507 ], [ %ln.10, %4486 ], [ %ln.10, %4482 ]
  %4527 = load i32* @PL_savestack_ix, align 4, !dbg !4967
  call void @llvm.dbg.value(metadata i32 %4527, i64 0, metadata !4968, metadata !566), !dbg !4969
  %4528 = icmp ne i32 %paren.0, 0, !dbg !4970
  br i1 %4528, label %4529, label %4667, !dbg !4970

; <label>:4529                                    ; preds = %4526
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !4971, metadata !566), !dbg !4974
  br label %4530, !dbg !4975

; <label>:4530                                    ; preds = %4664, %4529
  %c23.0 = phi i64 [ 0, %4529 ], [ %c23.2, %4664 ]
  %locinput.18 = phi i8* [ %4484, %4529 ], [ %4665, %4664 ]
  %n.5 = phi i32 [ %4483, %4529 ], [ %4654, %4664 ]
  %4531 = icmp sge i32 %n.5, %ln.15, !dbg !4976
  br i1 %4531, label %4532, label %4666, !dbg !4975

; <label>:4532                                    ; preds = %4530
  %4533 = icmp ne i32 %c1.13, -1000, !dbg !4977
  br i1 %4533, label %4534, label %4588, !dbg !4980

; <label>:4534                                    ; preds = %4532
  %4535 = icmp ne i8 %2, 0, !dbg !4981
  br i1 %4535, label %4536, label %4582, !dbg !4981

; <label>:4536                                    ; preds = %4534
  %4537 = load i8** @PL_reginput, align 8, !dbg !4983
  %4538 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4985
  %4539 = getelementptr inbounds %struct.cop* %4538, i32 0, i32 14, !dbg !4985
  %4540 = load %struct.sv** %4539, align 8, !dbg !4985
  %4541 = icmp ne %struct.sv* %4540, null, !dbg !4985
  br i1 %4541, label %4542, label %4566, !dbg !4985

; <label>:4542                                    ; preds = %4536
  %4543 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4986
  %4544 = getelementptr inbounds %struct.cop* %4543, i32 0, i32 14, !dbg !4986
  %4545 = load %struct.sv** %4544, align 8, !dbg !4986
  %4546 = icmp ne %struct.sv* %4545, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !4986
  br i1 %4546, label %4547, label %4566, !dbg !4986

; <label>:4547                                    ; preds = %4542
  %4548 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4988
  %4549 = getelementptr inbounds %struct.cop* %4548, i32 0, i32 14, !dbg !4988
  %4550 = load %struct.sv** %4549, align 8, !dbg !4988
  %4551 = icmp eq %struct.sv* %4550, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !4988
  br i1 %4551, label %4578, label %4552, !dbg !4988

; <label>:4552                                    ; preds = %4547
  %4553 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4990
  %4554 = getelementptr inbounds %struct.cop* %4553, i32 0, i32 14, !dbg !4990
  %4555 = load %struct.sv** %4554, align 8, !dbg !4990
  %4556 = getelementptr inbounds %struct.sv* %4555, i32 0, i32 0, !dbg !4990
  %4557 = load i8** %4556, align 8, !dbg !4990
  %4558 = bitcast i8* %4557 to %struct.xpv*, !dbg !4990
  %4559 = getelementptr inbounds %struct.xpv* %4558, i32 0, i32 0, !dbg !4990
  %4560 = load i8** %4559, align 8, !dbg !4990
  %4561 = getelementptr inbounds i8* %4560, i64 11, !dbg !4990
  %4562 = load i8* %4561, align 1, !dbg !4990
  %4563 = sext i8 %4562 to i32, !dbg !4990
  %4564 = and i32 %4563, 1, !dbg !4990
  %4565 = icmp ne i32 %4564, 0, !dbg !4990
  br i1 %4565, label %4578, label %4566, !dbg !4990

; <label>:4566                                    ; preds = %4552, %4542, %4536
  %4567 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !4992
  %4568 = getelementptr inbounds %struct.cop* %4567, i32 0, i32 14, !dbg !4992
  %4569 = load %struct.sv** %4568, align 8, !dbg !4992
  %4570 = icmp eq %struct.sv* %4569, null, !dbg !4992
  br i1 %4570, label %4571, label %4576, !dbg !4992

; <label>:4571                                    ; preds = %4566
  %4572 = load i8* @PL_dowarn, align 1, !dbg !4996
  %4573 = zext i8 %4572 to i32, !dbg !4996
  %4574 = and i32 %4573, 1, !dbg !4996
  %4575 = icmp ne i32 %4574, 0, !dbg !4996
  br label %4576

; <label>:4576                                    ; preds = %4571, %4566
  %4577 = phi i1 [ false, %4566 ], [ %4575, %4571 ]
  br label %4578, !dbg !4998

; <label>:4578                                    ; preds = %4576, %4552, %4547
  %4579 = phi i1 [ true, %4552 ], [ true, %4547 ], [ %4577, %4576 ]
  %4580 = select i1 %4579, i32 0, i32 255, !dbg !5000
  %4581 = call i64 @Perl_utf8n_to_uvuni(i8* %4537, i64 13, i64* null, i32 %4580), !dbg !5004
  call void @llvm.dbg.value(metadata i64 %4581, i64 0, metadata !4971, metadata !566), !dbg !4974
  br label %4587, !dbg !5005

; <label>:4582                                    ; preds = %4534
  %4583 = load i8** @PL_reginput, align 8, !dbg !5006
  %4584 = load i8* %4583, align 1, !dbg !5006
  %4585 = zext i8 %4584 to i32, !dbg !5006
  %4586 = sext i32 %4585 to i64, !dbg !5006
  call void @llvm.dbg.value(metadata i64 %4586, i64 0, metadata !4971, metadata !566), !dbg !4974
  br label %4587

; <label>:4587                                    ; preds = %4582, %4578
  %c23.1 = phi i64 [ %4581, %4578 ], [ %4586, %4582 ]
  br label %4588, !dbg !5007

; <label>:4588                                    ; preds = %4587, %4532
  %c23.2 = phi i64 [ %c23.1, %4587 ], [ %c23.0, %4532 ]
  %4589 = icmp eq i32 %c1.13, -1000, !dbg !5008
  br i1 %4589, label %4596, label %4590, !dbg !5010

; <label>:4590                                    ; preds = %4588
  %4591 = sext i32 %c1.13 to i64, !dbg !5011
  %4592 = icmp eq i64 %c23.2, %4591, !dbg !5012
  br i1 %4592, label %4596, label %4593, !dbg !5010

; <label>:4593                                    ; preds = %4590
  %4594 = sext i32 %c2.19 to i64, !dbg !5013
  %4595 = icmp eq i64 %c23.2, %4594, !dbg !5014
  br i1 %4595, label %4596, label %4653, !dbg !5010

; <label>:4596                                    ; preds = %4593, %4590, %4588
  %4597 = icmp ne i32 %paren.0, 0, !dbg !5015
  br i1 %4597, label %4598, label %4636, !dbg !5015

; <label>:4598                                    ; preds = %4596
  %4599 = icmp ne i32 %n.5, 0, !dbg !5018
  br i1 %4599, label %4600, label %4631, !dbg !5018

; <label>:4600                                    ; preds = %4598
  %4601 = load i8* @PL_reg_match_utf8, align 1, !dbg !5021
  %4602 = sext i8 %4601 to i32, !dbg !5021
  %4603 = icmp ne i32 %4602, 0, !dbg !5021
  br i1 %4603, label %4604, label %4609, !dbg !5021

; <label>:4604                                    ; preds = %4600
  %4605 = load i8** @PL_reginput, align 8, !dbg !5025
  %4606 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %4605, i32 -1), !dbg !5025
  %4607 = sext i32 %4606 to i64, !dbg !5025
  %4608 = inttoptr i64 %4607 to i8*, !dbg !5025
  br label %4612, !dbg !5025

; <label>:4609                                    ; preds = %4600
  %4610 = load i8** @PL_reginput, align 8, !dbg !5027
  %4611 = getelementptr inbounds i8* %4610, i64 -1, !dbg !5027
  br label %4612, !dbg !5027

; <label>:4612                                    ; preds = %4609, %4604
  %4613 = phi i8* [ %4608, %4604 ], [ %4611, %4609 ], !dbg !5029
  %4614 = load i8** @PL_bostr, align 8, !dbg !5030
  %4615 = ptrtoint i8* %4613 to i64, !dbg !5030
  %4616 = ptrtoint i8* %4614 to i64, !dbg !5030
  %4617 = sub i64 %4615, %4616, !dbg !5030
  %4618 = trunc i64 %4617 to i32, !dbg !5030
  %4619 = sext i32 %paren.0 to i64, !dbg !5030
  %4620 = load i32** @PL_regstartp, align 8, !dbg !5030
  %4621 = getelementptr inbounds i32* %4620, i64 %4619, !dbg !5030
  store i32 %4618, i32* %4621, align 4, !dbg !5030
  %4622 = load i8** @PL_reginput, align 8, !dbg !5030
  %4623 = load i8** @PL_bostr, align 8, !dbg !5030
  %4624 = ptrtoint i8* %4622 to i64, !dbg !5030
  %4625 = ptrtoint i8* %4623 to i64, !dbg !5030
  %4626 = sub i64 %4624, %4625, !dbg !5030
  %4627 = trunc i64 %4626 to i32, !dbg !5030
  %4628 = sext i32 %paren.0 to i64, !dbg !5030
  %4629 = load i32** @PL_regendp, align 8, !dbg !5030
  %4630 = getelementptr inbounds i32* %4629, i64 %4628, !dbg !5030
  store i32 %4627, i32* %4630, align 4, !dbg !5030
  br label %4635, !dbg !5030

; <label>:4631                                    ; preds = %4598
  %4632 = sext i32 %paren.0 to i64, !dbg !5033
  %4633 = load i32** @PL_regendp, align 8, !dbg !5033
  %4634 = getelementptr inbounds i32* %4633, i64 %4632, !dbg !5033
  store i32 -1, i32* %4634, align 4, !dbg !5033
  br label %4635

; <label>:4635                                    ; preds = %4631, %4612
  br label %4636, !dbg !5035

; <label>:4636                                    ; preds = %4635, %4596
  %4637 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %next.0), !dbg !5037
  %4638 = icmp ne i32 %4637, 0, !dbg !5015
  br i1 %4638, label %4639, label %4640, !dbg !5015

; <label>:4639                                    ; preds = %4636
  br label %5028, !dbg !5041

; <label>:4640                                    ; preds = %4636
  %4641 = icmp ne i32 %paren.0, 0, !dbg !5015
  br i1 %4641, label %4642, label %4648, !dbg !5015

; <label>:4642                                    ; preds = %4640
  %4643 = icmp ne i32 %n.5, 0, !dbg !5015
  br i1 %4643, label %4644, label %4648, !dbg !5015

; <label>:4644                                    ; preds = %4642
  %4645 = sext i32 %paren.0 to i64, !dbg !5043
  %4646 = load i32** @PL_regendp, align 8, !dbg !5043
  %4647 = getelementptr inbounds i32* %4646, i64 %4645, !dbg !5043
  store i32 -1, i32* %4647, align 4, !dbg !5043
  br label %4648, !dbg !5043

; <label>:4648                                    ; preds = %4644, %4642, %4640
  %4649 = load i32* @PL_savestack_ix, align 4, !dbg !5046
  %4650 = icmp sgt i32 %4649, %4527, !dbg !5046
  br i1 %4650, label %4651, label %4652, !dbg !5048

; <label>:4651                                    ; preds = %4648
  call void @Perl_leave_scope(i32 %4527), !dbg !5049
  br label %4652, !dbg !5049

; <label>:4652                                    ; preds = %4651, %4648
  br label %4653, !dbg !5051

; <label>:4653                                    ; preds = %4652, %4593
  %4654 = add nsw i32 %n.5, -1, !dbg !5052
  call void @llvm.dbg.value(metadata i32 %4654, i64 0, metadata !2607, metadata !566), !dbg !2608
  %4655 = load i8* @PL_reg_match_utf8, align 1, !dbg !5053
  %4656 = sext i8 %4655 to i32, !dbg !5053
  %4657 = icmp ne i32 %4656, 0, !dbg !5053
  br i1 %4657, label %4658, label %4662, !dbg !5053

; <label>:4658                                    ; preds = %4653
  %4659 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %locinput.18, i32 -1), !dbg !5054
  %4660 = sext i32 %4659 to i64, !dbg !5054
  %4661 = inttoptr i64 %4660 to i8*, !dbg !5054
  br label %4664, !dbg !5054

; <label>:4662                                    ; preds = %4653
  %4663 = getelementptr inbounds i8* %locinput.18, i64 -1, !dbg !5056
  br label %4664, !dbg !5056

; <label>:4664                                    ; preds = %4662, %4658
  %4665 = phi i8* [ %4661, %4658 ], [ %4663, %4662 ], !dbg !5053
  call void @llvm.dbg.value(metadata i8* %4665, i64 0, metadata !2057, metadata !566), !dbg !2058
  store i8* %4665, i8** @PL_reginput, align 8, !dbg !5058
  br label %4530, !dbg !4975

; <label>:4666                                    ; preds = %4530
  br label %4805, !dbg !5059

; <label>:4667                                    ; preds = %4526
  call void @llvm.dbg.value(metadata i64 0, i64 0, metadata !5060, metadata !566), !dbg !5062
  br label %4668, !dbg !5063

; <label>:4668                                    ; preds = %4802, %4667
  %locinput.19 = phi i8* [ %4484, %4667 ], [ %4803, %4802 ]
  %n.6 = phi i32 [ %4483, %4667 ], [ %4792, %4802 ]
  %c24.0 = phi i64 [ 0, %4667 ], [ %c24.2, %4802 ]
  %4669 = icmp sge i32 %n.6, %ln.15, !dbg !5064
  br i1 %4669, label %4670, label %4804, !dbg !5063

; <label>:4670                                    ; preds = %4668
  %4671 = icmp ne i32 %c1.13, -1000, !dbg !5065
  br i1 %4671, label %4672, label %4726, !dbg !5068

; <label>:4672                                    ; preds = %4670
  %4673 = icmp ne i8 %2, 0, !dbg !5069
  br i1 %4673, label %4674, label %4720, !dbg !5069

; <label>:4674                                    ; preds = %4672
  %4675 = load i8** @PL_reginput, align 8, !dbg !5071
  %4676 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5073
  %4677 = getelementptr inbounds %struct.cop* %4676, i32 0, i32 14, !dbg !5073
  %4678 = load %struct.sv** %4677, align 8, !dbg !5073
  %4679 = icmp ne %struct.sv* %4678, null, !dbg !5073
  br i1 %4679, label %4680, label %4704, !dbg !5073

; <label>:4680                                    ; preds = %4674
  %4681 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5074
  %4682 = getelementptr inbounds %struct.cop* %4681, i32 0, i32 14, !dbg !5074
  %4683 = load %struct.sv** %4682, align 8, !dbg !5074
  %4684 = icmp ne %struct.sv* %4683, getelementptr inbounds (%struct.sv* null, i64 2), !dbg !5074
  br i1 %4684, label %4685, label %4704, !dbg !5074

; <label>:4685                                    ; preds = %4680
  %4686 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5076
  %4687 = getelementptr inbounds %struct.cop* %4686, i32 0, i32 14, !dbg !5076
  %4688 = load %struct.sv** %4687, align 8, !dbg !5076
  %4689 = icmp eq %struct.sv* %4688, getelementptr inbounds (%struct.sv* null, i64 1), !dbg !5076
  br i1 %4689, label %4716, label %4690, !dbg !5076

; <label>:4690                                    ; preds = %4685
  %4691 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5078
  %4692 = getelementptr inbounds %struct.cop* %4691, i32 0, i32 14, !dbg !5078
  %4693 = load %struct.sv** %4692, align 8, !dbg !5078
  %4694 = getelementptr inbounds %struct.sv* %4693, i32 0, i32 0, !dbg !5078
  %4695 = load i8** %4694, align 8, !dbg !5078
  %4696 = bitcast i8* %4695 to %struct.xpv*, !dbg !5078
  %4697 = getelementptr inbounds %struct.xpv* %4696, i32 0, i32 0, !dbg !5078
  %4698 = load i8** %4697, align 8, !dbg !5078
  %4699 = getelementptr inbounds i8* %4698, i64 11, !dbg !5078
  %4700 = load i8* %4699, align 1, !dbg !5078
  %4701 = sext i8 %4700 to i32, !dbg !5078
  %4702 = and i32 %4701, 1, !dbg !5078
  %4703 = icmp ne i32 %4702, 0, !dbg !5078
  br i1 %4703, label %4716, label %4704, !dbg !5078

; <label>:4704                                    ; preds = %4690, %4680, %4674
  %4705 = load volatile %struct.cop** @PL_curcop, align 8, !dbg !5080
  %4706 = getelementptr inbounds %struct.cop* %4705, i32 0, i32 14, !dbg !5080
  %4707 = load %struct.sv** %4706, align 8, !dbg !5080
  %4708 = icmp eq %struct.sv* %4707, null, !dbg !5080
  br i1 %4708, label %4709, label %4714, !dbg !5080

; <label>:4709                                    ; preds = %4704
  %4710 = load i8* @PL_dowarn, align 1, !dbg !5084
  %4711 = zext i8 %4710 to i32, !dbg !5084
  %4712 = and i32 %4711, 1, !dbg !5084
  %4713 = icmp ne i32 %4712, 0, !dbg !5084
  br label %4714

; <label>:4714                                    ; preds = %4709, %4704
  %4715 = phi i1 [ false, %4704 ], [ %4713, %4709 ]
  br label %4716, !dbg !5086

; <label>:4716                                    ; preds = %4714, %4690, %4685
  %4717 = phi i1 [ true, %4690 ], [ true, %4685 ], [ %4715, %4714 ]
  %4718 = select i1 %4717, i32 0, i32 255, !dbg !5088
  %4719 = call i64 @Perl_utf8n_to_uvuni(i8* %4675, i64 13, i64* null, i32 %4718), !dbg !5092
  call void @llvm.dbg.value(metadata i64 %4719, i64 0, metadata !5060, metadata !566), !dbg !5062
  br label %4725, !dbg !5093

; <label>:4720                                    ; preds = %4672
  %4721 = load i8** @PL_reginput, align 8, !dbg !5094
  %4722 = load i8* %4721, align 1, !dbg !5094
  %4723 = zext i8 %4722 to i32, !dbg !5094
  %4724 = sext i32 %4723 to i64, !dbg !5094
  call void @llvm.dbg.value(metadata i64 %4724, i64 0, metadata !5060, metadata !566), !dbg !5062
  br label %4725

; <label>:4725                                    ; preds = %4720, %4716
  %c24.1 = phi i64 [ %4719, %4716 ], [ %4724, %4720 ]
  br label %4726, !dbg !5095

; <label>:4726                                    ; preds = %4725, %4670
  %c24.2 = phi i64 [ %c24.1, %4725 ], [ %c24.0, %4670 ]
  %4727 = icmp eq i32 %c1.13, -1000, !dbg !5096
  br i1 %4727, label %4734, label %4728, !dbg !5098

; <label>:4728                                    ; preds = %4726
  %4729 = sext i32 %c1.13 to i64, !dbg !5099
  %4730 = icmp eq i64 %c24.2, %4729, !dbg !5100
  br i1 %4730, label %4734, label %4731, !dbg !5098

; <label>:4731                                    ; preds = %4728
  %4732 = sext i32 %c2.19 to i64, !dbg !5101
  %4733 = icmp eq i64 %c24.2, %4732, !dbg !5102
  br i1 %4733, label %4734, label %4791, !dbg !5098

; <label>:4734                                    ; preds = %4731, %4728, %4726
  %4735 = icmp ne i32 %paren.0, 0, !dbg !5103
  br i1 %4735, label %4736, label %4774, !dbg !5103

; <label>:4736                                    ; preds = %4734
  %4737 = icmp ne i32 %n.6, 0, !dbg !5106
  br i1 %4737, label %4738, label %4769, !dbg !5106

; <label>:4738                                    ; preds = %4736
  %4739 = load i8* @PL_reg_match_utf8, align 1, !dbg !5109
  %4740 = sext i8 %4739 to i32, !dbg !5109
  %4741 = icmp ne i32 %4740, 0, !dbg !5109
  br i1 %4741, label %4742, label %4747, !dbg !5109

; <label>:4742                                    ; preds = %4738
  %4743 = load i8** @PL_reginput, align 8, !dbg !5113
  %4744 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %4743, i32 -1), !dbg !5113
  %4745 = sext i32 %4744 to i64, !dbg !5113
  %4746 = inttoptr i64 %4745 to i8*, !dbg !5113
  br label %4750, !dbg !5113

; <label>:4747                                    ; preds = %4738
  %4748 = load i8** @PL_reginput, align 8, !dbg !5115
  %4749 = getelementptr inbounds i8* %4748, i64 -1, !dbg !5115
  br label %4750, !dbg !5115

; <label>:4750                                    ; preds = %4747, %4742
  %4751 = phi i8* [ %4746, %4742 ], [ %4749, %4747 ], !dbg !5117
  %4752 = load i8** @PL_bostr, align 8, !dbg !5118
  %4753 = ptrtoint i8* %4751 to i64, !dbg !5118
  %4754 = ptrtoint i8* %4752 to i64, !dbg !5118
  %4755 = sub i64 %4753, %4754, !dbg !5118
  %4756 = trunc i64 %4755 to i32, !dbg !5118
  %4757 = sext i32 %paren.0 to i64, !dbg !5118
  %4758 = load i32** @PL_regstartp, align 8, !dbg !5118
  %4759 = getelementptr inbounds i32* %4758, i64 %4757, !dbg !5118
  store i32 %4756, i32* %4759, align 4, !dbg !5118
  %4760 = load i8** @PL_reginput, align 8, !dbg !5118
  %4761 = load i8** @PL_bostr, align 8, !dbg !5118
  %4762 = ptrtoint i8* %4760 to i64, !dbg !5118
  %4763 = ptrtoint i8* %4761 to i64, !dbg !5118
  %4764 = sub i64 %4762, %4763, !dbg !5118
  %4765 = trunc i64 %4764 to i32, !dbg !5118
  %4766 = sext i32 %paren.0 to i64, !dbg !5118
  %4767 = load i32** @PL_regendp, align 8, !dbg !5118
  %4768 = getelementptr inbounds i32* %4767, i64 %4766, !dbg !5118
  store i32 %4765, i32* %4768, align 4, !dbg !5118
  br label %4773, !dbg !5118

; <label>:4769                                    ; preds = %4736
  %4770 = sext i32 %paren.0 to i64, !dbg !5121
  %4771 = load i32** @PL_regendp, align 8, !dbg !5121
  %4772 = getelementptr inbounds i32* %4771, i64 %4770, !dbg !5121
  store i32 -1, i32* %4772, align 4, !dbg !5121
  br label %4773

; <label>:4773                                    ; preds = %4769, %4750
  br label %4774, !dbg !5123

; <label>:4774                                    ; preds = %4773, %4734
  %4775 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %next.0), !dbg !5125
  %4776 = icmp ne i32 %4775, 0, !dbg !5103
  br i1 %4776, label %4777, label %4778, !dbg !5103

; <label>:4777                                    ; preds = %4774
  br label %5028, !dbg !5129

; <label>:4778                                    ; preds = %4774
  %4779 = icmp ne i32 %paren.0, 0, !dbg !5103
  br i1 %4779, label %4780, label %4786, !dbg !5103

; <label>:4780                                    ; preds = %4778
  %4781 = icmp ne i32 %n.6, 0, !dbg !5103
  br i1 %4781, label %4782, label %4786, !dbg !5103

; <label>:4782                                    ; preds = %4780
  %4783 = sext i32 %paren.0 to i64, !dbg !5131
  %4784 = load i32** @PL_regendp, align 8, !dbg !5131
  %4785 = getelementptr inbounds i32* %4784, i64 %4783, !dbg !5131
  store i32 -1, i32* %4785, align 4, !dbg !5131
  br label %4786, !dbg !5131

; <label>:4786                                    ; preds = %4782, %4780, %4778
  %4787 = load i32* @PL_savestack_ix, align 4, !dbg !5134
  %4788 = icmp sgt i32 %4787, %4527, !dbg !5134
  br i1 %4788, label %4789, label %4790, !dbg !5136

; <label>:4789                                    ; preds = %4786
  call void @Perl_leave_scope(i32 %4527), !dbg !5137
  br label %4790, !dbg !5137

; <label>:4790                                    ; preds = %4789, %4786
  br label %4791, !dbg !5139

; <label>:4791                                    ; preds = %4790, %4731
  %4792 = add nsw i32 %n.6, -1, !dbg !5140
  call void @llvm.dbg.value(metadata i32 %4792, i64 0, metadata !2607, metadata !566), !dbg !2608
  %4793 = load i8* @PL_reg_match_utf8, align 1, !dbg !5141
  %4794 = sext i8 %4793 to i32, !dbg !5141
  %4795 = icmp ne i32 %4794, 0, !dbg !5141
  br i1 %4795, label %4796, label %4800, !dbg !5141

; <label>:4796                                    ; preds = %4791
  %4797 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghop to i32 (i8*, i32, ...)*)(i8* %locinput.19, i32 -1), !dbg !5142
  %4798 = sext i32 %4797 to i64, !dbg !5142
  %4799 = inttoptr i64 %4798 to i8*, !dbg !5142
  br label %4802, !dbg !5142

; <label>:4800                                    ; preds = %4791
  %4801 = getelementptr inbounds i8* %locinput.19, i64 -1, !dbg !5144
  br label %4802, !dbg !5144

; <label>:4802                                    ; preds = %4800, %4796
  %4803 = phi i8* [ %4799, %4796 ], [ %4801, %4800 ], !dbg !5141
  call void @llvm.dbg.value(metadata i8* %4803, i64 0, metadata !2057, metadata !566), !dbg !2058
  store i8* %4803, i8** @PL_reginput, align 8, !dbg !5146
  br label %4668, !dbg !5063

; <label>:4804                                    ; preds = %4668
  br label %4805

; <label>:4805                                    ; preds = %4804, %4666
  br label %4806

; <label>:4806                                    ; preds = %4805, %4481
  %minmod.2 = phi i32 [ 0, %4481 ], [ %minmod.0, %4805 ]
  %ln.16 = phi i32 [ %ln.13, %4481 ], [ %ln.15, %4805 ]
  br label %5029, !dbg !5147

; <label>:4807                                    ; preds = %15
  %4808 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !5148
  %4809 = icmp ne %struct.re_cc_state* %4808, null, !dbg !5150
  br i1 %4809, label %4810, label %4846, !dbg !5150

; <label>:4810                                    ; preds = %4807
  %4811 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !5151
  call void @llvm.dbg.value(metadata %struct.re_cc_state* %4811, i64 0, metadata !5153, metadata !566), !dbg !5155
  %4812 = load %struct.curcur** @PL_regcc, align 8, !dbg !5156
  call void @llvm.dbg.value(metadata %struct.curcur* %4812, i64 0, metadata !5157, metadata !566), !dbg !5158
  %4813 = load %struct.regexp** @PL_reg_re, align 8, !dbg !5159
  call void @llvm.dbg.value(metadata %struct.regexp* %4813, i64 0, metadata !5160, metadata !566), !dbg !5161
  %4814 = call i32 (i32, ...)* bitcast (i32 (...)* @regcppush to i32 (i32, ...)*)(i32 0), !dbg !5162
  call void @llvm.dbg.value(metadata i32 %4814, i64 0, metadata !5163, metadata !566), !dbg !5164
  %4815 = load i32* @PL_savestack_ix, align 4, !dbg !5165
  call void @llvm.dbg.value(metadata i32 %4815, i64 0, metadata !5166, metadata !566), !dbg !5167
  %4816 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !5168
  %4817 = getelementptr inbounds %struct.re_cc_state* %4816, i32 0, i32 0, !dbg !5168
  %4818 = load i32* %4817, align 4, !dbg !5168
  %4819 = call i32 (i32, ...)* bitcast (i32 (...)* @regcp_set_to to i32 (i32, ...)*)(i32 %4818), !dbg !5169
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !5170
  %4820 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !5171
  %4821 = getelementptr inbounds %struct.re_cc_state* %4820, i32 0, i32 4, !dbg !5171
  %4822 = load %struct.regexp** %4821, align 8, !dbg !5171
  %4823 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %4822), !dbg !5172
  %4824 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !5173
  %4825 = getelementptr inbounds %struct.re_cc_state* %4824, i32 0, i32 3, !dbg !5173
  %4826 = load %struct.curcur** %4825, align 8, !dbg !5173
  store %struct.curcur* %4826, %struct.curcur** @PL_regcc, align 8, !dbg !5174
  %4827 = load %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !5175
  %4828 = getelementptr inbounds %struct.re_cc_state* %4827, i32 0, i32 2, !dbg !5175
  %4829 = load %struct.re_cc_state** %4828, align 8, !dbg !5175
  store %struct.re_cc_state* %4829, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !5176
  %4830 = getelementptr inbounds %struct.re_cc_state* %4811, i32 0, i32 1, !dbg !5177
  %4831 = load %struct.regnode** %4830, align 8, !dbg !5177
  %4832 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %4831), !dbg !5179
  %4833 = icmp ne i32 %4832, 0, !dbg !5180
  br i1 %4833, label %4834, label %4839, !dbg !5180

; <label>:4834                                    ; preds = %4810
  store %struct.re_cc_state* %4811, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !5181
  %4835 = load i32* @PL_savestack_ix, align 4, !dbg !5183
  %4836 = icmp sgt i32 %4835, %4814, !dbg !5183
  br i1 %4836, label %4837, label %4838, !dbg !5185

; <label>:4837                                    ; preds = %4834
  call void @Perl_leave_scope(i32 %4814), !dbg !5186
  br label %4838, !dbg !5186

; <label>:4838                                    ; preds = %4837, %4834
  br label %5028, !dbg !5188

; <label>:4839                                    ; preds = %4810
  %4840 = load i32* @PL_savestack_ix, align 4, !dbg !5189
  %4841 = icmp sgt i32 %4840, %4815, !dbg !5189
  br i1 %4841, label %4842, label %4843, !dbg !5191

; <label>:4842                                    ; preds = %4839
  call void @Perl_leave_scope(i32 %4815), !dbg !5192
  br label %4843, !dbg !5192

; <label>:4843                                    ; preds = %4842, %4839
  %4844 = call i32 (...)* @regcppop(), !dbg !5194
  store %struct.re_cc_state* %4811, %struct.re_cc_state** @PL_reg_call_cc, align 8, !dbg !5195
  store %struct.curcur* %4812, %struct.curcur** @PL_regcc, align 8, !dbg !5196
  store %struct.regexp* %4813, %struct.regexp** @PL_reg_re, align 8, !dbg !5197
  %4845 = call i32 (%struct.regexp*, ...)* bitcast (i32 (...)* @cache_re to i32 (%struct.regexp*, ...)*)(%struct.regexp* %4813), !dbg !5198
  br label %5031, !dbg !5199

; <label>:4846                                    ; preds = %4807
  %4847 = load i8** @PL_regtill, align 8, !dbg !5200
  %4848 = icmp ult i8* %locinput.0, %4847, !dbg !5202
  br i1 %4848, label %4849, label %4850, !dbg !5203

; <label>:4849                                    ; preds = %4846
  br label %5030, !dbg !5204

; <label>:4850                                    ; preds = %4846
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !5206
  br label %5027, !dbg !5207

; <label>:4851                                    ; preds = %15
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !5208
  br label %5026, !dbg !5209

; <label>:4852                                    ; preds = %15
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2607, metadata !566), !dbg !2608
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !5210
  br label %4937, !dbg !5211

; <label>:4853                                    ; preds = %15
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2607, metadata !566), !dbg !2608
  %4854 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !5212
  %4855 = load i8* %4854, align 1, !dbg !5212
  %4856 = icmp ne i8 %4855, 0, !dbg !5214
  br i1 %4856, label %4857, label %4893, !dbg !5214

; <label>:4857                                    ; preds = %4853
  %4858 = load i8* @PL_reg_match_utf8, align 1, !dbg !5215
  %4859 = sext i8 %4858 to i32, !dbg !5215
  %4860 = icmp ne i32 %4859, 0, !dbg !5215
  br i1 %4860, label %4861, label %4869, !dbg !5215

; <label>:4861                                    ; preds = %4857
  %4862 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !5217
  %4863 = load i8* %4862, align 1, !dbg !5217
  %4864 = zext i8 %4863 to i32, !dbg !5217
  %4865 = sub nsw i32 0, %4864, !dbg !5217
  %4866 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghopmaybe to i32 (i8*, i32, ...)*)(i8* %locinput.0, i32 %4865), !dbg !5217
  %4867 = sext i32 %4866 to i64, !dbg !5217
  %4868 = inttoptr i64 %4867 to i8*, !dbg !5217
  br label %4888, !dbg !5217

; <label>:4869                                    ; preds = %4857
  %4870 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !5219
  %4871 = load i8* %4870, align 1, !dbg !5219
  %4872 = zext i8 %4871 to i32, !dbg !5219
  %4873 = sext i32 %4872 to i64, !dbg !5219
  %4874 = sub i64 0, %4873, !dbg !5219
  %4875 = getelementptr inbounds i8* %locinput.0, i64 %4874, !dbg !5219
  %4876 = load i8** @PL_bostr, align 8, !dbg !5219
  %4877 = icmp uge i8* %4875, %4876, !dbg !5219
  br i1 %4877, label %4878, label %4885, !dbg !5219

; <label>:4878                                    ; preds = %4869
  %4879 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !5221
  %4880 = load i8* %4879, align 1, !dbg !5221
  %4881 = zext i8 %4880 to i32, !dbg !5221
  %4882 = sext i32 %4881 to i64, !dbg !5221
  %4883 = sub i64 0, %4882, !dbg !5221
  %4884 = getelementptr inbounds i8* %locinput.0, i64 %4883, !dbg !5221
  br label %4886, !dbg !5221

; <label>:4885                                    ; preds = %4869
  br label %4886, !dbg !5223

; <label>:4886                                    ; preds = %4885, %4878
  %4887 = phi i8* [ %4884, %4878 ], [ null, %4885 ], !dbg !5215
  br label %4888, !dbg !5225

; <label>:4888                                    ; preds = %4886, %4861
  %4889 = phi i8* [ %4868, %4861 ], [ %4887, %4886 ], !dbg !5215
  call void @llvm.dbg.value(metadata i8* %4889, i64 0, metadata !2054, metadata !566), !dbg !2055
  %4890 = icmp ne i8* %4889, null, !dbg !5228
  br i1 %4890, label %4892, label %4891, !dbg !5228

; <label>:4891                                    ; preds = %4888
  br label %4948, !dbg !5229

; <label>:4892                                    ; preds = %4888
  store i8* %4889, i8** @PL_reginput, align 8, !dbg !5231
  br label %4894, !dbg !5232

; <label>:4893                                    ; preds = %4853
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !5233
  br label %4894

; <label>:4894                                    ; preds = %4893, %4892
  br label %4937, !dbg !5234

; <label>:4895                                    ; preds = %15
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2607, metadata !566), !dbg !2608
  %4896 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !5235
  %4897 = load i8* %4896, align 1, !dbg !5235
  %4898 = icmp ne i8 %4897, 0, !dbg !5237
  br i1 %4898, label %4899, label %4935, !dbg !5237

; <label>:4899                                    ; preds = %4895
  %4900 = load i8* @PL_reg_match_utf8, align 1, !dbg !5238
  %4901 = sext i8 %4900 to i32, !dbg !5238
  %4902 = icmp ne i32 %4901, 0, !dbg !5238
  br i1 %4902, label %4903, label %4911, !dbg !5238

; <label>:4903                                    ; preds = %4899
  %4904 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !5240
  %4905 = load i8* %4904, align 1, !dbg !5240
  %4906 = zext i8 %4905 to i32, !dbg !5240
  %4907 = sub nsw i32 0, %4906, !dbg !5240
  %4908 = call i32 (i8*, i32, ...)* bitcast (i32 (...)* @reghopmaybe to i32 (i8*, i32, ...)*)(i8* %locinput.0, i32 %4907), !dbg !5240
  %4909 = sext i32 %4908 to i64, !dbg !5240
  %4910 = inttoptr i64 %4909 to i8*, !dbg !5240
  br label %4930, !dbg !5240

; <label>:4911                                    ; preds = %4899
  %4912 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !5242
  %4913 = load i8* %4912, align 1, !dbg !5242
  %4914 = zext i8 %4913 to i32, !dbg !5242
  %4915 = sext i32 %4914 to i64, !dbg !5242
  %4916 = sub i64 0, %4915, !dbg !5242
  %4917 = getelementptr inbounds i8* %locinput.0, i64 %4916, !dbg !5242
  %4918 = load i8** @PL_bostr, align 8, !dbg !5242
  %4919 = icmp uge i8* %4917, %4918, !dbg !5242
  br i1 %4919, label %4920, label %4927, !dbg !5242

; <label>:4920                                    ; preds = %4911
  %4921 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 0, !dbg !5244
  %4922 = load i8* %4921, align 1, !dbg !5244
  %4923 = zext i8 %4922 to i32, !dbg !5244
  %4924 = sext i32 %4923 to i64, !dbg !5244
  %4925 = sub i64 0, %4924, !dbg !5244
  %4926 = getelementptr inbounds i8* %locinput.0, i64 %4925, !dbg !5244
  br label %4928, !dbg !5244

; <label>:4927                                    ; preds = %4911
  br label %4928, !dbg !5246

; <label>:4928                                    ; preds = %4927, %4920
  %4929 = phi i8* [ %4926, %4920 ], [ null, %4927 ], !dbg !5238
  br label %4930, !dbg !5248

; <label>:4930                                    ; preds = %4928, %4903
  %4931 = phi i8* [ %4910, %4903 ], [ %4929, %4928 ], !dbg !5238
  call void @llvm.dbg.value(metadata i8* %4931, i64 0, metadata !2054, metadata !566), !dbg !2055
  %4932 = icmp ne i8* %4931, null, !dbg !5251
  br i1 %4932, label %4934, label %4933, !dbg !5251

; <label>:4933                                    ; preds = %4930
  br label %4943, !dbg !5252

; <label>:4934                                    ; preds = %4930
  store i8* %4931, i8** @PL_reginput, align 8, !dbg !5254
  br label %4936, !dbg !5255

; <label>:4935                                    ; preds = %4895
  store i8* %locinput.0, i8** @PL_reginput, align 8, !dbg !5256
  br label %4936

; <label>:4936                                    ; preds = %4935, %4934
  br label %4937, !dbg !5257

; <label>:4937                                    ; preds = %4936, %4894, %4852
  %n.7 = phi i32 [ 1, %4936 ], [ 0, %4894 ], [ 1, %4852 ]
  %4938 = getelementptr inbounds %struct.regnode* %scan.0, i64 1, !dbg !5258
  %4939 = getelementptr inbounds %struct.regnode* %4938, i64 1, !dbg !5258
  call void @llvm.dbg.value(metadata %struct.regnode* %4939, i64 0, metadata !3897, metadata !566), !dbg !3898
  %4940 = call i32 (%struct.regnode*, ...)* bitcast (i32 (...)* @regmatch to i32 (%struct.regnode*, ...)*)(%struct.regnode* %4939), !dbg !5259
  %4941 = icmp ne i32 %4940, %n.7, !dbg !5259
  br i1 %4941, label %4942, label %4947, !dbg !5261

; <label>:4942                                    ; preds = %4937
  br label %4943, !dbg !5262

; <label>:4943                                    ; preds = %4942, %4933
  %4944 = icmp ne i32 %logical.0, 0, !dbg !5264
  br i1 %4944, label %4945, label %4946, !dbg !5264

; <label>:4945                                    ; preds = %4943
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2067, metadata !566), !dbg !2068
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2065, metadata !566), !dbg !2066
  br label %4962, !dbg !5266

; <label>:4946                                    ; preds = %4943
  br label %5029, !dbg !5269

; <label>:4947                                    ; preds = %4937
  br label %4948, !dbg !5270

; <label>:4948                                    ; preds = %4947, %4891
  %4949 = icmp ne i32 %logical.0, 0, !dbg !5272
  br i1 %4949, label %4950, label %4951, !dbg !5272

; <label>:4950                                    ; preds = %4948
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !2067, metadata !566), !dbg !2068
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !2065, metadata !566), !dbg !2066
  br label %4951, !dbg !5273

; <label>:4951                                    ; preds = %4950, %4948
  %logical.2 = phi i32 [ 0, %4950 ], [ %logical.0, %4948 ]
  %sw.2 = phi i32 [ 1, %4950 ], [ %sw.0, %4948 ]
  %4952 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !5276
  %4953 = load i8* %4952, align 1, !dbg !5276
  %4954 = zext i8 %4953 to i32, !dbg !5276
  %4955 = icmp eq i32 %4954, 52, !dbg !5276
  br i1 %4955, label %4956, label %4960, !dbg !5278

; <label>:4956                                    ; preds = %4951
  %4957 = load i8** @PL_reginput, align 8, !dbg !5279
  call void @llvm.dbg.value(metadata i8* %4957, i64 0, metadata !2057, metadata !566), !dbg !2058
  %4958 = load i8* %4957, align 1, !dbg !5281
  %4959 = zext i8 %4958 to i32, !dbg !5281
  call void @llvm.dbg.value(metadata i32 %4959, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %4960, !dbg !5282

; <label>:4960                                    ; preds = %4956, %4951
  %locinput.20 = phi i8* [ %4957, %4956 ], [ %locinput.0, %4951 ]
  %nextchr.5 = phi i32 [ %4959, %4956 ], [ %nextchr.0, %4951 ]
  br label %4961, !dbg !5283

; <label>:4961                                    ; preds = %4960, %15
  %logical.3 = phi i32 [ %logical.0, %15 ], [ %logical.2, %4960 ]
  %sw.3 = phi i32 [ %sw.0, %15 ], [ %sw.2, %4960 ]
  %locinput.21 = phi i8* [ %locinput.0, %15 ], [ %locinput.20, %4960 ]
  %nextchr.6 = phi i32 [ %nextchr.0, %15 ], [ %nextchr.5, %4960 ]
  br label %4962, !dbg !5285

; <label>:4962                                    ; preds = %4961, %4945
  %logical.4 = phi i32 [ %logical.3, %4961 ], [ 0, %4945 ]
  %sw.4 = phi i32 [ %sw.3, %4961 ], [ 0, %4945 ]
  %locinput.22 = phi i8* [ %locinput.21, %4961 ], [ %locinput.0, %4945 ]
  %nextchr.7 = phi i32 [ %nextchr.6, %4961 ], [ %nextchr.0, %4945 ]
  %4963 = bitcast %struct.regnode* %scan.0 to %struct.regnode_1*, !dbg !5287
  %4964 = getelementptr inbounds %struct.regnode_1* %4963, i32 0, i32 3, !dbg !5287
  %4965 = load i32* %4964, align 4, !dbg !5287
  %4966 = zext i32 %4965 to i64, !dbg !5288
  %4967 = getelementptr inbounds %struct.regnode* %scan.0, i64 %4966, !dbg !5288
  call void @llvm.dbg.value(metadata %struct.regnode* %4967, i64 0, metadata !2086, metadata !566), !dbg !2087
  %4968 = icmp eq %struct.regnode* %4967, %scan.0, !dbg !5289
  br i1 %4968, label %4969, label %4970, !dbg !5291

; <label>:4969                                    ; preds = %4962
  call void @llvm.dbg.value(metadata %struct.regnode* null, i64 0, metadata !2086, metadata !566), !dbg !2087
  br label %4970, !dbg !5292

; <label>:4970                                    ; preds = %4969, %4962
  %next.7 = phi %struct.regnode* [ null, %4969 ], [ %4967, %4962 ]
  br label %5023, !dbg !5293

; <label>:4971                                    ; preds = %15
  %4972 = load %struct.gv** @PL_stderrgv, align 8, !dbg !5294
  %4973 = icmp ne %struct.gv* %4972, null, !dbg !5294
  br i1 %4973, label %4974, label %5014, !dbg !5294

; <label>:4974                                    ; preds = %4971
  %4975 = load %struct.gv** @PL_stderrgv, align 8, !dbg !5295
  %4976 = getelementptr inbounds %struct.gv* %4975, i32 0, i32 2, !dbg !5295
  %4977 = load i32* %4976, align 4, !dbg !5295
  %4978 = and i32 %4977, 255, !dbg !5295
  %4979 = icmp eq i32 %4978, 13, !dbg !5295
  br i1 %4979, label %4980, label %5014, !dbg !5295

; <label>:4980                                    ; preds = %4974
  %4981 = load %struct.gv** @PL_stderrgv, align 8, !dbg !5297
  %4982 = getelementptr inbounds %struct.gv* %4981, i32 0, i32 0, !dbg !5297
  %4983 = load %struct.xpvgv** %4982, align 8, !dbg !5297
  %4984 = getelementptr inbounds %struct.xpvgv* %4983, i32 0, i32 7, !dbg !5297
  %4985 = load %struct.gp** %4984, align 8, !dbg !5297
  %4986 = getelementptr inbounds %struct.gp* %4985, i32 0, i32 2, !dbg !5297
  %4987 = load %struct.io** %4986, align 8, !dbg !5297
  %4988 = icmp ne %struct.io* %4987, null, !dbg !5297
  br i1 %4988, label %4989, label %5014, !dbg !5297

; <label>:4989                                    ; preds = %4980
  %4990 = load %struct.gv** @PL_stderrgv, align 8, !dbg !5299
  %4991 = getelementptr inbounds %struct.gv* %4990, i32 0, i32 0, !dbg !5299
  %4992 = load %struct.xpvgv** %4991, align 8, !dbg !5299
  %4993 = getelementptr inbounds %struct.xpvgv* %4992, i32 0, i32 7, !dbg !5299
  %4994 = load %struct.gp** %4993, align 8, !dbg !5299
  %4995 = getelementptr inbounds %struct.gp* %4994, i32 0, i32 2, !dbg !5299
  %4996 = load %struct.io** %4995, align 8, !dbg !5299
  %4997 = getelementptr inbounds %struct.io* %4996, i32 0, i32 0, !dbg !5299
  %4998 = load %struct.xpvio** %4997, align 8, !dbg !5299
  %4999 = getelementptr inbounds %struct.xpvio* %4998, i32 0, i32 8, !dbg !5299
  %5000 = load %struct._PerlIO*** %4999, align 8, !dbg !5299
  %5001 = icmp ne %struct._PerlIO** %5000, null, !dbg !5299
  br i1 %5001, label %5002, label %5014, !dbg !5299

; <label>:5002                                    ; preds = %4989
  %5003 = load %struct.gv** @PL_stderrgv, align 8, !dbg !5301
  %5004 = getelementptr inbounds %struct.gv* %5003, i32 0, i32 0, !dbg !5301
  %5005 = load %struct.xpvgv** %5004, align 8, !dbg !5301
  %5006 = getelementptr inbounds %struct.xpvgv* %5005, i32 0, i32 7, !dbg !5301
  %5007 = load %struct.gp** %5006, align 8, !dbg !5301
  %5008 = getelementptr inbounds %struct.gp* %5007, i32 0, i32 2, !dbg !5301
  %5009 = load %struct.io** %5008, align 8, !dbg !5301
  %5010 = getelementptr inbounds %struct.io* %5009, i32 0, i32 0, !dbg !5301
  %5011 = load %struct.xpvio** %5010, align 8, !dbg !5301
  %5012 = getelementptr inbounds %struct.xpvio* %5011, i32 0, i32 8, !dbg !5301
  %5013 = load %struct._PerlIO*** %5012, align 8, !dbg !5301
  br label %5016, !dbg !5301

; <label>:5014                                    ; preds = %4989, %4980, %4974, %4971
  %5015 = call %struct._PerlIO** @Perl_PerlIO_stderr(), !dbg !5303
  br label %5016, !dbg !5303

; <label>:5016                                    ; preds = %5014, %5002
  %5017 = phi %struct._PerlIO** [ %5013, %5002 ], [ %5015, %5014 ], !dbg !5294
  %5018 = ptrtoint %struct.regnode* %scan.0 to i64, !dbg !5307
  %5019 = getelementptr inbounds %struct.regnode* %scan.0, i32 0, i32 1, !dbg !5308
  %5020 = load i8* %5019, align 1, !dbg !5308
  %5021 = zext i8 %5020 to i32, !dbg !5308
  %5022 = call i32 (%struct._PerlIO**, i8*, ...)* @PerlIO_printf(%struct._PerlIO** %5017, i8* getelementptr inbounds ([8 x i8]* @.str8, i32 0, i32 0), i64 %5018, i32 %5021), !dbg !5309
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([25 x i8]* @.str9, i32 0, i32 0)), !dbg !5310
  br label %5023, !dbg !5311

; <label>:5023                                    ; preds = %5016, %4970, %2779, %2778, %2053, %2052, %2029, %2014, %1984, %1973, %1643, %1642, %1637, %1577, %1525, %1498, %1447, %1416, %1357, %1326, %1270, %1233, %1177, %1104, %1046, %827, %784, %720, %677, %619, %542, %500, %469, %425, %326, %303, %162, %131, %124, %98, %93, %76, %60, %55, %50, %35
  %unwind.2 = phi i32 [ %unwind.0, %5016 ], [ %unwind.0, %4970 ], [ %unwind.0, %2779 ], [ %unwind.1, %2778 ], [ %unwind.0, %2053 ], [ %unwind.0, %2052 ], [ %unwind.0, %2029 ], [ %unwind.0, %2014 ], [ %unwind.0, %1984 ], [ %unwind.0, %1973 ], [ %unwind.0, %1643 ], [ %unwind.0, %1642 ], [ %unwind.0, %1525 ], [ %unwind.0, %1577 ], [ %unwind.0, %1637 ], [ %unwind.0, %1498 ], [ %unwind.0, %1416 ], [ %unwind.0, %1447 ], [ %unwind.0, %1326 ], [ %unwind.0, %1357 ], [ %unwind.0, %1233 ], [ %unwind.0, %1270 ], [ %unwind.0, %1104 ], [ %unwind.0, %1177 ], [ %unwind.0, %1046 ], [ %unwind.0, %784 ], [ %unwind.0, %827 ], [ %unwind.0, %677 ], [ %unwind.0, %720 ], [ %unwind.0, %500 ], [ %unwind.0, %619 ], [ %unwind.0, %542 ], [ %unwind.0, %425 ], [ %unwind.0, %469 ], [ %unwind.0, %303 ], [ %unwind.0, %326 ], [ %unwind.0, %162 ], [ %unwind.0, %131 ], [ %unwind.0, %124 ], [ %unwind.0, %98 ], [ %unwind.0, %93 ], [ %unwind.0, %76 ], [ %unwind.0, %60 ], [ %unwind.0, %55 ], [ %unwind.0, %50 ], [ %unwind.0, %35 ]
  %logical.5 = phi i32 [ %logical.0, %5016 ], [ %logical.4, %4970 ], [ %logical.0, %2779 ], [ %logical.0, %2778 ], [ %2056, %2053 ], [ %logical.0, %2052 ], [ %logical.0, %2029 ], [ %logical.0, %2014 ], [ %logical.0, %1984 ], [ %logical.1, %1973 ], [ %logical.0, %1643 ], [ %logical.0, %1642 ], [ %logical.0, %1525 ], [ %logical.0, %1577 ], [ %logical.0, %1637 ], [ %logical.0, %1498 ], [ %logical.0, %1416 ], [ %logical.0, %1447 ], [ %logical.0, %1326 ], [ %logical.0, %1357 ], [ %logical.0, %1233 ], [ %logical.0, %1270 ], [ %logical.0, %1104 ], [ %logical.0, %1177 ], [ %logical.0, %1046 ], [ %logical.0, %784 ], [ %logical.0, %827 ], [ %logical.0, %677 ], [ %logical.0, %720 ], [ %logical.0, %500 ], [ %logical.0, %619 ], [ %logical.0, %542 ], [ %logical.0, %425 ], [ %logical.0, %469 ], [ %logical.0, %303 ], [ %logical.0, %326 ], [ %logical.0, %162 ], [ %logical.0, %131 ], [ %logical.0, %124 ], [ %logical.0, %98 ], [ %logical.0, %93 ], [ %logical.0, %76 ], [ %logical.0, %60 ], [ %logical.0, %55 ], [ %logical.0, %50 ], [ %logical.0, %35 ]
  %sw.5 = phi i32 [ %sw.0, %5016 ], [ %sw.4, %4970 ], [ %sw.0, %2779 ], [ %sw.0, %2778 ], [ %sw.0, %2053 ], [ %sw.0, %2052 ], [ %2031, %2029 ], [ %sw.0, %2014 ], [ %sw.0, %1984 ], [ %sw.1, %1973 ], [ %sw.0, %1643 ], [ %sw.0, %1642 ], [ %sw.0, %1525 ], [ %sw.0, %1577 ], [ %sw.0, %1637 ], [ %sw.0, %1498 ], [ %sw.0, %1416 ], [ %sw.0, %1447 ], [ %sw.0, %1326 ], [ %sw.0, %1357 ], [ %sw.0, %1233 ], [ %sw.0, %1270 ], [ %sw.0, %1104 ], [ %sw.0, %1177 ], [ %sw.0, %1046 ], [ %sw.0, %784 ], [ %sw.0, %827 ], [ %sw.0, %677 ], [ %sw.0, %720 ], [ %sw.0, %500 ], [ %sw.0, %619 ], [ %sw.0, %542 ], [ %sw.0, %425 ], [ %sw.0, %469 ], [ %sw.0, %303 ], [ %sw.0, %326 ], [ %sw.0, %162 ], [ %sw.0, %131 ], [ %sw.0, %124 ], [ %sw.0, %98 ], [ %sw.0, %93 ], [ %sw.0, %76 ], [ %sw.0, %60 ], [ %sw.0, %55 ], [ %sw.0, %50 ], [ %sw.0, %35 ]
  %minmod.3 = phi i32 [ %minmod.0, %5016 ], [ %minmod.0, %4970 ], [ 1, %2779 ], [ %minmod.0, %2778 ], [ %minmod.0, %2053 ], [ %minmod.0, %2052 ], [ %minmod.0, %2029 ], [ %minmod.0, %2014 ], [ %minmod.0, %1984 ], [ %minmod.0, %1973 ], [ %minmod.0, %1643 ], [ %minmod.0, %1642 ], [ %minmod.0, %1525 ], [ %minmod.0, %1577 ], [ %minmod.0, %1637 ], [ %minmod.0, %1498 ], [ %minmod.0, %1416 ], [ %minmod.0, %1447 ], [ %minmod.0, %1326 ], [ %minmod.0, %1357 ], [ %minmod.0, %1233 ], [ %minmod.0, %1270 ], [ %minmod.0, %1104 ], [ %minmod.0, %1177 ], [ %minmod.0, %1046 ], [ %minmod.0, %784 ], [ %minmod.0, %827 ], [ %minmod.0, %677 ], [ %minmod.0, %720 ], [ %minmod.0, %500 ], [ %minmod.0, %619 ], [ %minmod.0, %542 ], [ %minmod.0, %425 ], [ %minmod.0, %469 ], [ %minmod.0, %303 ], [ %minmod.0, %326 ], [ %minmod.0, %162 ], [ %minmod.0, %131 ], [ %minmod.0, %124 ], [ %minmod.0, %98 ], [ %minmod.0, %93 ], [ %minmod.0, %76 ], [ %minmod.0, %60 ], [ %minmod.0, %55 ], [ %minmod.0, %50 ], [ %minmod.0, %35 ]
  %c1.14 = phi i32 [ %c1.0, %5016 ], [ %c1.0, %4970 ], [ %c1.0, %2779 ], [ %2753, %2778 ], [ %c1.0, %2053 ], [ %c1.0, %2052 ], [ %c1.0, %2029 ], [ %c1.0, %2014 ], [ %c1.0, %1984 ], [ %c1.0, %1973 ], [ %c1.0, %1643 ], [ %c1.0, %1642 ], [ %c1.0, %1525 ], [ %c1.0, %1577 ], [ %c1.0, %1637 ], [ %c1.0, %1498 ], [ %c1.0, %1416 ], [ %c1.0, %1447 ], [ %c1.0, %1326 ], [ %c1.0, %1357 ], [ %c1.0, %1233 ], [ %c1.0, %1270 ], [ %c1.0, %1104 ], [ %c1.0, %1177 ], [ %c1.0, %1046 ], [ %c1.0, %784 ], [ %c1.0, %827 ], [ %c1.0, %677 ], [ %c1.0, %720 ], [ %c1.0, %500 ], [ %c1.0, %619 ], [ %c1.0, %542 ], [ %c1.0, %425 ], [ %c1.0, %469 ], [ %c1.0, %303 ], [ %c1.0, %326 ], [ %c1.0, %162 ], [ %c1.0, %131 ], [ %c1.0, %124 ], [ %c1.0, %98 ], [ %c1.0, %93 ], [ %c1.0, %76 ], [ %c1.0, %60 ], [ %c1.0, %55 ], [ %c1.0, %50 ], [ %c1.0, %35 ]
  %locinput.23 = phi i8* [ %locinput.0, %5016 ], [ %locinput.22, %4970 ], [ %locinput.0, %2779 ], [ %locinput.0, %2778 ], [ %locinput.0, %2053 ], [ %locinput.0, %2052 ], [ %locinput.0, %2029 ], [ %locinput.0, %2014 ], [ %locinput.0, %1984 ], [ %locinput.0, %1973 ], [ %locinput.0, %1643 ], [ %locinput.0, %1642 ], [ %locinput.0, %1525 ], [ %l3.1, %1577 ], [ %1639, %1637 ], [ %locinput.5, %1498 ], [ %1422, %1416 ], [ %1448, %1447 ], [ %1332, %1326 ], [ %1358, %1357 ], [ %1239, %1233 ], [ %1271, %1270 ], [ %1110, %1104 ], [ %locinput.3, %1177 ], [ %locinput.0, %1046 ], [ %790, %784 ], [ %828, %827 ], [ %683, %677 ], [ %721, %720 ], [ %502, %500 ], [ %615, %619 ], [ %543, %542 ], [ %426, %425 ], [ %471, %469 ], [ %l.2, %303 ], [ %328, %326 ], [ %locinput.2, %162 ], [ %132, %131 ], [ %locinput.1, %124 ], [ %locinput.0, %98 ], [ %locinput.0, %93 ], [ %locinput.0, %76 ], [ %locinput.0, %60 ], [ %locinput.0, %55 ], [ %locinput.0, %50 ], [ %locinput.0, %35 ]
  %ln.17 = phi i32 [ %ln.0, %5016 ], [ %ln.0, %4970 ], [ %ln.0, %2779 ], [ %ln.0, %2778 ], [ %ln.0, %2053 ], [ %ln.0, %2052 ], [ %ln.0, %2029 ], [ %ln.0, %2014 ], [ %ln.0, %1984 ], [ %ln.0, %1973 ], [ %ln.0, %1643 ], [ %ln.0, %1642 ], [ %1511, %1525 ], [ %1511, %1577 ], [ %1608, %1637 ], [ %ln.0, %1498 ], [ %ln.0, %1416 ], [ %ln.0, %1447 ], [ %ln.0, %1326 ], [ %ln.0, %1357 ], [ %ln.0, %1233 ], [ %ln.0, %1270 ], [ %ln.0, %1104 ], [ %ln.0, %1177 ], [ %ln.4, %1046 ], [ %ln.0, %784 ], [ %ln.0, %827 ], [ %ln.0, %677 ], [ %ln.0, %720 ], [ %ln.0, %500 ], [ %ln.0, %619 ], [ %ln.0, %542 ], [ %341, %425 ], [ %341, %469 ], [ %170, %303 ], [ %170, %326 ], [ %ln.0, %162 ], [ %ln.0, %131 ], [ %ln.0, %124 ], [ %ln.0, %98 ], [ %ln.0, %93 ], [ %ln.0, %76 ], [ %ln.0, %60 ], [ %ln.0, %55 ], [ %ln.0, %50 ], [ %ln.0, %35 ]
  %nextchr.8 = phi i32 [ %nextchr.0, %5016 ], [ %nextchr.7, %4970 ], [ %nextchr.0, %2779 ], [ %nextchr.0, %2778 ], [ %nextchr.0, %2053 ], [ %nextchr.0, %2052 ], [ %nextchr.0, %2029 ], [ %nextchr.0, %2014 ], [ %nextchr.0, %1984 ], [ %nextchr.0, %1973 ], [ %nextchr.0, %1643 ], [ %nextchr.0, %1642 ], [ %nextchr.0, %1525 ], [ %1579, %1577 ], [ %1641, %1637 ], [ %1500, %1498 ], [ %1424, %1416 ], [ %1450, %1447 ], [ %1334, %1326 ], [ %1360, %1357 ], [ %1241, %1233 ], [ %1273, %1270 ], [ %1112, %1104 ], [ %nextchr.4, %1177 ], [ %nextchr.0, %1046 ], [ %792, %784 ], [ %830, %827 ], [ %685, %677 ], [ %723, %720 ], [ %504, %500 ], [ %617, %619 ], [ %545, %542 ], [ %428, %425 ], [ %473, %469 ], [ %305, %303 ], [ %330, %326 ], [ %nextchr.2, %162 ], [ %134, %131 ], [ %nextchr.1, %124 ], [ %nextchr.0, %98 ], [ %nextchr.0, %93 ], [ %nextchr.0, %76 ], [ %nextchr.0, %60 ], [ %nextchr.0, %55 ], [ %nextchr.0, %50 ], [ %nextchr.0, %35 ]
  %next.8 = phi %struct.regnode* [ %next.0, %5016 ], [ %next.7, %4970 ], [ %next.0, %2779 ], [ %inner.0, %2778 ], [ %next.0, %2053 ], [ %next.2, %2052 ], [ %next.0, %2029 ], [ %next.0, %2014 ], [ %next.0, %1984 ], [ %next.0, %1973 ], [ %next.0, %1643 ], [ %next.0, %1642 ], [ %next.0, %1525 ], [ %next.0, %1577 ], [ %next.0, %1637 ], [ %next.0, %1498 ], [ %next.0, %1416 ], [ %next.0, %1447 ], [ %next.0, %1326 ], [ %next.0, %1357 ], [ %next.0, %1233 ], [ %next.0, %1270 ], [ %next.0, %1104 ], [ %next.0, %1177 ], [ %next.0, %1046 ], [ %next.0, %784 ], [ %next.0, %827 ], [ %next.0, %677 ], [ %next.0, %720 ], [ %next.0, %500 ], [ %next.0, %619 ], [ %next.0, %542 ], [ %next.0, %425 ], [ %next.0, %469 ], [ %next.0, %303 ], [ %next.0, %326 ], [ %next.0, %162 ], [ %next.0, %131 ], [ %next.0, %124 ], [ %next.0, %98 ], [ %next.0, %93 ], [ %next.0, %76 ], [ %next.0, %60 ], [ %next.0, %55 ], [ %next.0, %50 ], [ %next.0, %35 ]
  br label %5024, !dbg !5312

; <label>:5024                                    ; preds = %5107, %5023
  %unwind.3 = phi i32 [ %unwind.2, %5023 ], [ %unwind.4, %5107 ]
  %logical.6 = phi i32 [ %logical.5, %5023 ], [ %logical.8, %5107 ]
  %sw.6 = phi i32 [ %sw.5, %5023 ], [ %sw.0, %5107 ]
  %minmod.4 = phi i32 [ %minmod.3, %5023 ], [ %minmod.6, %5107 ]
  %c2.20 = phi i32 [ %c2.0, %5023 ], [ %c2.22, %5107 ]
  %c1.15 = phi i32 [ %c1.14, %5023 ], [ %c1.17, %5107 ]
  %locinput.24 = phi i8* [ %locinput.23, %5023 ], [ %5109, %5107 ]
  %ln.18 = phi i32 [ %ln.17, %5023 ], [ %ln.20, %5107 ]
  %nextchr.9 = phi i32 [ %nextchr.8, %5023 ], [ %5111, %5107 ]
  %next.9 = phi %struct.regnode* [ %next.8, %5023 ], [ %next.11, %5107 ]
  call void @llvm.dbg.value(metadata %struct.regnode* %next.9, i64 0, metadata !2077, metadata !566), !dbg !2078
  br label %5, !dbg !2079

; <label>:5025                                    ; preds = %5
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([26 x i8]* @.str10, i32 0, i32 0)), !dbg !5313
  br label %5029, !dbg !5314

; <label>:5026                                    ; preds = %4851
  br label %5028, !dbg !5315

; <label>:5027                                    ; preds = %4850
  br label %5028, !dbg !5315

; <label>:5028                                    ; preds = %5027, %5026, %4838, %4777, %4639, %4457, %4397, %4256, %3493, %3152, %2690, %2585, %2484, %2332, %2258, %2159, %2140, %2110, %1874
  br label %5115, !dbg !5316

; <label>:5029                                    ; preds = %5025, %4946, %4806, %4478, %4214, %4208, %3981, %3518, %3164, %2821, %2736, %2529, %2432, %2160, %2147, %2111, %1894, %1636, %1613, %1602, %1570, %1555, %1518, %1494, %1466, %1454, %1446, %1415, %1369, %1356, %1325, %1279, %1269, %1232, %1186, %1172, %1140, %1103, %1052, %1045, %826, %783, %732, %719, %676, %625, %618, %541, %488, %468, %454, %446, %423, %325, %318, %310, %297, %248, %236, %187, %154, %142, %130, %116, %104, %97, %92, %85, %75, %61, %56, %51, %36
  %logical.7 = phi i32 [ %logical.0, %4946 ], [ %logical.0, %3981 ], [ %logical.0, %4208 ], [ %logical.0, %4214 ], [ %logical.0, %4478 ], [ %logical.0, %4806 ], [ %logical.0, %2821 ], [ %logical.0, %3164 ], [ %logical.0, %3518 ], [ %logical.0, %2147 ], [ %logical.0, %2160 ], [ %logical.0, %2432 ], [ %logical.0, %2529 ], [ %logical.0, %2736 ], [ %logical.0, %2111 ], [ 0, %1894 ], [ %logical.0, %1518 ], [ %logical.0, %1555 ], [ %logical.0, %1570 ], [ %logical.0, %1602 ], [ %logical.0, %1613 ], [ %logical.0, %1636 ], [ %logical.0, %1454 ], [ %logical.0, %1466 ], [ %logical.0, %1494 ], [ %logical.0, %1415 ], [ %logical.0, %1446 ], [ %logical.0, %1369 ], [ %logical.0, %1325 ], [ %logical.0, %1356 ], [ %logical.0, %1279 ], [ %logical.0, %1232 ], [ %logical.0, %1269 ], [ %logical.0, %1186 ], [ %logical.0, %1103 ], [ %logical.0, %1140 ], [ %logical.0, %1172 ], [ %logical.0, %1052 ], [ %logical.0, %1045 ], [ %logical.0, %783 ], [ %logical.0, %826 ], [ %logical.0, %732 ], [ %logical.0, %676 ], [ %logical.0, %719 ], [ %logical.0, %625 ], [ %logical.0, %488 ], [ %logical.0, %618 ], [ %logical.0, %541 ], [ %logical.0, %423 ], [ %logical.0, %446 ], [ %logical.0, %454 ], [ %logical.0, %468 ], [ %logical.0, %187 ], [ %logical.0, %236 ], [ %logical.0, %248 ], [ %logical.0, %297 ], [ %logical.0, %310 ], [ %logical.0, %318 ], [ %logical.0, %325 ], [ %logical.0, %142 ], [ %logical.0, %154 ], [ %logical.0, %130 ], [ %logical.0, %116 ], [ %logical.0, %104 ], [ %logical.0, %97 ], [ %logical.0, %85 ], [ %logical.0, %92 ], [ %logical.0, %75 ], [ %logical.0, %61 ], [ %logical.0, %56 ], [ %logical.0, %51 ], [ %logical.0, %36 ], [ %logical.0, %5025 ]
  %minmod.5 = phi i32 [ %minmod.0, %4946 ], [ 0, %3981 ], [ 0, %4208 ], [ 0, %4214 ], [ 0, %4478 ], [ %minmod.2, %4806 ], [ 0, %2821 ], [ 0, %3164 ], [ %minmod.1, %3518 ], [ %minmod.0, %2147 ], [ %minmod.0, %2160 ], [ %minmod.0, %2432 ], [ %minmod.0, %2529 ], [ %minmod.0, %2736 ], [ %minmod.0, %2111 ], [ %minmod.0, %1894 ], [ %minmod.0, %1518 ], [ %minmod.0, %1555 ], [ %minmod.0, %1570 ], [ %minmod.0, %1602 ], [ %minmod.0, %1613 ], [ %minmod.0, %1636 ], [ %minmod.0, %1454 ], [ %minmod.0, %1466 ], [ %minmod.0, %1494 ], [ %minmod.0, %1415 ], [ %minmod.0, %1446 ], [ %minmod.0, %1369 ], [ %minmod.0, %1325 ], [ %minmod.0, %1356 ], [ %minmod.0, %1279 ], [ %minmod.0, %1232 ], [ %minmod.0, %1269 ], [ %minmod.0, %1186 ], [ %minmod.0, %1103 ], [ %minmod.0, %1140 ], [ %minmod.0, %1172 ], [ %minmod.0, %1052 ], [ %minmod.0, %1045 ], [ %minmod.0, %783 ], [ %minmod.0, %826 ], [ %minmod.0, %732 ], [ %minmod.0, %676 ], [ %minmod.0, %719 ], [ %minmod.0, %625 ], [ %minmod.0, %488 ], [ %minmod.0, %618 ], [ %minmod.0, %541 ], [ %minmod.0, %423 ], [ %minmod.0, %446 ], [ %minmod.0, %454 ], [ %minmod.0, %468 ], [ %minmod.0, %187 ], [ %minmod.0, %236 ], [ %minmod.0, %248 ], [ %minmod.0, %297 ], [ %minmod.0, %310 ], [ %minmod.0, %318 ], [ %minmod.0, %325 ], [ %minmod.0, %142 ], [ %minmod.0, %154 ], [ %minmod.0, %130 ], [ %minmod.0, %116 ], [ %minmod.0, %104 ], [ %minmod.0, %97 ], [ %minmod.0, %85 ], [ %minmod.0, %92 ], [ %minmod.0, %75 ], [ %minmod.0, %61 ], [ %minmod.0, %56 ], [ %minmod.0, %51 ], [ %minmod.0, %36 ], [ %minmod.0, %5025 ]
  %c2.21 = phi i32 [ %c2.0, %4946 ], [ %c2.19, %3981 ], [ %c2.19, %4208 ], [ %c2.19, %4214 ], [ %c2.19, %4478 ], [ %c2.19, %4806 ], [ %c2.0, %2821 ], [ %c2.5, %3164 ], [ %c2.12, %3518 ], [ %c2.0, %2147 ], [ %c2.0, %2160 ], [ %c2.0, %2432 ], [ %c2.0, %2529 ], [ %c2.0, %2736 ], [ %c2.0, %2111 ], [ %c2.0, %1894 ], [ %c2.0, %1518 ], [ %c2.0, %1555 ], [ %c2.0, %1570 ], [ %c2.0, %1602 ], [ %c2.0, %1613 ], [ %c2.0, %1636 ], [ %c2.0, %1454 ], [ %c2.0, %1466 ], [ %c2.0, %1494 ], [ %c2.0, %1415 ], [ %c2.0, %1446 ], [ %c2.0, %1369 ], [ %c2.0, %1325 ], [ %c2.0, %1356 ], [ %c2.0, %1279 ], [ %c2.0, %1232 ], [ %c2.0, %1269 ], [ %c2.0, %1186 ], [ %c2.0, %1103 ], [ %c2.0, %1140 ], [ %c2.0, %1172 ], [ %c2.0, %1052 ], [ %c2.0, %1045 ], [ %c2.0, %783 ], [ %c2.0, %826 ], [ %c2.0, %732 ], [ %c2.0, %676 ], [ %c2.0, %719 ], [ %c2.0, %625 ], [ %c2.0, %488 ], [ %c2.0, %618 ], [ %c2.0, %541 ], [ %c2.0, %423 ], [ %c2.0, %446 ], [ %c2.0, %454 ], [ %c2.0, %468 ], [ %c2.0, %187 ], [ %c2.0, %236 ], [ %c2.0, %248 ], [ %c2.0, %297 ], [ %c2.0, %310 ], [ %c2.0, %318 ], [ %c2.0, %325 ], [ %c2.0, %142 ], [ %c2.0, %154 ], [ %c2.0, %130 ], [ %c2.0, %116 ], [ %c2.0, %104 ], [ %c2.0, %97 ], [ %c2.0, %85 ], [ %c2.0, %92 ], [ %c2.0, %75 ], [ %c2.0, %61 ], [ %c2.0, %56 ], [ %c2.0, %51 ], [ %c2.0, %36 ], [ %c2.0, %5025 ]
  %c1.16 = phi i32 [ %c1.0, %4946 ], [ %c1.13, %3981 ], [ %c1.13, %4208 ], [ %c1.13, %4214 ], [ %c1.13, %4478 ], [ %c1.13, %4806 ], [ %c1.0, %2821 ], [ %c1.3, %3164 ], [ %c1.8, %3518 ], [ %c1.0, %2147 ], [ %c1.0, %2160 ], [ %c1.0, %2432 ], [ %c1.0, %2529 ], [ %c1.0, %2736 ], [ %c1.0, %2111 ], [ %c1.0, %1894 ], [ %c1.0, %1518 ], [ %c1.0, %1555 ], [ %c1.0, %1570 ], [ %c1.0, %1602 ], [ %c1.0, %1613 ], [ %c1.0, %1636 ], [ %c1.0, %1454 ], [ %c1.0, %1466 ], [ %c1.0, %1494 ], [ %c1.0, %1415 ], [ %c1.0, %1446 ], [ %c1.0, %1369 ], [ %c1.0, %1325 ], [ %c1.0, %1356 ], [ %c1.0, %1279 ], [ %c1.0, %1232 ], [ %c1.0, %1269 ], [ %c1.0, %1186 ], [ %c1.0, %1103 ], [ %c1.0, %1140 ], [ %c1.0, %1172 ], [ %c1.0, %1052 ], [ %c1.0, %1045 ], [ %c1.0, %783 ], [ %c1.0, %826 ], [ %c1.0, %732 ], [ %c1.0, %676 ], [ %c1.0, %719 ], [ %c1.0, %625 ], [ %c1.0, %488 ], [ %c1.0, %618 ], [ %c1.0, %541 ], [ %c1.0, %423 ], [ %c1.0, %446 ], [ %c1.0, %454 ], [ %c1.0, %468 ], [ %c1.0, %187 ], [ %c1.0, %236 ], [ %c1.0, %248 ], [ %c1.0, %297 ], [ %c1.0, %310 ], [ %c1.0, %318 ], [ %c1.0, %325 ], [ %c1.0, %142 ], [ %c1.0, %154 ], [ %c1.0, %130 ], [ %c1.0, %116 ], [ %c1.0, %104 ], [ %c1.0, %97 ], [ %c1.0, %85 ], [ %c1.0, %92 ], [ %c1.0, %75 ], [ %c1.0, %61 ], [ %c1.0, %56 ], [ %c1.0, %51 ], [ %c1.0, %36 ], [ %c1.0, %5025 ]
  %ln.19 = phi i32 [ %ln.0, %4946 ], [ %ln.10, %3981 ], [ %ln.11, %4208 ], [ 1, %4214 ], [ %ln.13, %4478 ], [ %ln.16, %4806 ], [ %2784, %2821 ], [ %ln.8, %3164 ], [ %ln.9, %3518 ], [ %ln.5, %2147 ], [ %ln.0, %2160 ], [ %ln.6, %2432 ], [ %ln.6, %2529 ], [ %ln.7, %2736 ], [ %ln.0, %2111 ], [ %ln.0, %1894 ], [ %1511, %1518 ], [ %1511, %1555 ], [ %1511, %1570 ], [ %1511, %1602 ], [ %1608, %1613 ], [ %1608, %1636 ], [ %ln.0, %1454 ], [ %ln.0, %1466 ], [ %ln.0, %1494 ], [ %ln.0, %1415 ], [ %ln.0, %1446 ], [ %ln.0, %1369 ], [ %ln.0, %1325 ], [ %ln.0, %1356 ], [ %ln.0, %1279 ], [ %ln.0, %1232 ], [ %ln.0, %1269 ], [ %ln.0, %1186 ], [ %ln.0, %1103 ], [ %ln.0, %1140 ], [ %ln.0, %1172 ], [ %ln.0, %1052 ], [ %ln.4, %1045 ], [ %ln.0, %783 ], [ %ln.0, %826 ], [ %ln.0, %732 ], [ %ln.0, %676 ], [ %ln.0, %719 ], [ %ln.0, %625 ], [ %ln.0, %488 ], [ %ln.0, %618 ], [ %ln.0, %541 ], [ %341, %423 ], [ %341, %446 ], [ %341, %454 ], [ %341, %468 ], [ %170, %187 ], [ %170, %236 ], [ %170, %248 ], [ %170, %297 ], [ %170, %310 ], [ %170, %318 ], [ %170, %325 ], [ %ln.0, %142 ], [ %ln.0, %154 ], [ %ln.0, %130 ], [ %ln.0, %116 ], [ %ln.0, %104 ], [ %ln.0, %97 ], [ %ln.0, %85 ], [ %ln.0, %92 ], [ %ln.0, %75 ], [ %ln.0, %61 ], [ %ln.0, %56 ], [ %ln.0, %51 ], [ %ln.0, %36 ], [ %ln.0, %5025 ]
  br label %5031, !dbg !5317

; <label>:5030                                    ; preds = %4849
  br label %5031, !dbg !5317

; <label>:5031                                    ; preds = %5077, %5030, %5029, %4843, %2259
  %unwind.4 = phi i32 [ %unwind.0, %5029 ], [ %5079, %5077 ], [ %unwind.0, %4843 ], [ %unwind.0, %5030 ], [ %unwind.0, %2259 ]
  %logical.8 = phi i32 [ %logical.7, %5029 ], [ %logical.8, %5077 ], [ %logical.0, %4843 ], [ %logical.0, %5030 ], [ %logical.0, %2259 ]
  %minmod.6 = phi i32 [ %minmod.5, %5029 ], [ %minmod.6, %5077 ], [ %minmod.0, %4843 ], [ %minmod.0, %5030 ], [ %minmod.0, %2259 ]
  %c2.22 = phi i32 [ %c2.21, %5029 ], [ %c2.22, %5077 ], [ %c2.0, %4843 ], [ %c2.0, %5030 ], [ %c2.0, %2259 ]
  %c1.17 = phi i32 [ %c1.16, %5029 ], [ %c1.17, %5077 ], [ %c1.0, %4843 ], [ %c1.0, %5030 ], [ %c1.0, %2259 ]
  %ln.20 = phi i32 [ %ln.19, %5029 ], [ %ln.20, %5077 ], [ %ln.0, %4843 ], [ %ln.0, %5030 ], [ %ln.0, %2259 ]
  %5032 = icmp ne i32 %unwind.4, 0, !dbg !5318
  br i1 %5032, label %5033, label %5114, !dbg !5318

; <label>:5033                                    ; preds = %5031
  %5034 = load %union.any** @PL_savestack, align 8, !dbg !5319
  %5035 = bitcast %union.any* %5034 to i8*, !dbg !5319
  %5036 = sext i32 %unwind.4 to i64, !dbg !5319
  %5037 = getelementptr inbounds i8* %5035, i64 %5036, !dbg !5319
  %5038 = bitcast i8* %5037 to %union.re_unwind_t*, !dbg !5319
  call void @llvm.dbg.value(metadata %union.re_unwind_t* %5038, i64 0, metadata !5322, metadata !566), !dbg !5323
  %5039 = bitcast %union.re_unwind_t* %5038 to i32*, !dbg !5324
  %5040 = load i32* %5039, align 4, !dbg !5324
  switch i32 %5040, label %5112 [
    i32 1, label %5041
    i32 2, label %5041
  ], !dbg !5325

; <label>:5041                                    ; preds = %5033, %5033
  %5042 = bitcast %union.re_unwind_t* %5038 to %struct.re_unwind_branch_t*, !dbg !5326
  call void @llvm.dbg.value(metadata %struct.re_unwind_branch_t* %5042, i64 0, metadata !5329, metadata !566), !dbg !5330
  %5043 = getelementptr inbounds %struct.re_unwind_branch_t* %5042, i32 0, i32 3, !dbg !5331
  %5044 = load i32* %5043, align 4, !dbg !5331
  call void @llvm.dbg.value(metadata i32 %5044, i64 0, metadata !5332, metadata !566), !dbg !5333
  %5045 = load i32* @PL_savestack_ix, align 4, !dbg !5334
  %5046 = getelementptr inbounds %struct.re_unwind_branch_t* %5042, i32 0, i32 2, !dbg !5334
  %5047 = load i32* %5046, align 4, !dbg !5334
  %5048 = icmp sgt i32 %5045, %5047, !dbg !5334
  br i1 %5048, label %5049, label %5052, !dbg !5336

; <label>:5049                                    ; preds = %5041
  %5050 = getelementptr inbounds %struct.re_unwind_branch_t* %5042, i32 0, i32 2, !dbg !5337
  %5051 = load i32* %5050, align 4, !dbg !5337
  call void @Perl_leave_scope(i32 %5051), !dbg !5337
  br label %5052, !dbg !5337

; <label>:5052                                    ; preds = %5049, %5041
  %5053 = load i32** @PL_reglastparen, align 8, !dbg !5339
  %5054 = load i32* %5053, align 4, !dbg !5341
  call void @llvm.dbg.value(metadata i32 %5054, i64 0, metadata !2607, metadata !566), !dbg !2608
  br label %5055, !dbg !5342

; <label>:5055                                    ; preds = %5061, %5052
  %n.8 = phi i32 [ %5054, %5052 ], [ %5062, %5061 ]
  %5056 = icmp sgt i32 %n.8, %5044, !dbg !5343
  br i1 %5056, label %5057, label %5063, !dbg !5345

; <label>:5057                                    ; preds = %5055
  %5058 = sext i32 %n.8 to i64, !dbg !5346
  %5059 = load i32** @PL_regendp, align 8, !dbg !5346
  %5060 = getelementptr inbounds i32* %5059, i64 %5058, !dbg !5346
  store i32 -1, i32* %5060, align 4, !dbg !5346
  br label %5061, !dbg !5346

; <label>:5061                                    ; preds = %5057
  %5062 = add nsw i32 %n.8, -1, !dbg !5347
  call void @llvm.dbg.value(metadata i32 %5062, i64 0, metadata !2607, metadata !566), !dbg !2608
  br label %5055, !dbg !5348

; <label>:5063                                    ; preds = %5055
  %5064 = load i32** @PL_reglastparen, align 8, !dbg !5349
  store i32 %n.8, i32* %5064, align 4, !dbg !5350
  %5065 = getelementptr inbounds %struct.re_unwind_branch_t* %5042, i32 0, i32 4, !dbg !5351
  %5066 = load %struct.regnode** %5065, align 8, !dbg !5351
  call void @llvm.dbg.value(metadata %struct.regnode* %5066, i64 0, metadata !2086, metadata !566), !dbg !2087
  call void @llvm.dbg.value(metadata %struct.regnode* %5066, i64 0, metadata !2077, metadata !566), !dbg !2078
  %5067 = icmp ne %struct.regnode* %5066, null, !dbg !5352
  br i1 %5067, label %5068, label %5077, !dbg !5352

; <label>:5068                                    ; preds = %5063
  %5069 = getelementptr inbounds %struct.regnode* %5066, i32 0, i32 1, !dbg !5353
  %5070 = load i8* %5069, align 1, !dbg !5353
  %5071 = zext i8 %5070 to i32, !dbg !5353
  %5072 = getelementptr inbounds %struct.re_unwind_branch_t* %5042, i32 0, i32 0, !dbg !5355
  %5073 = load i32* %5072, align 4, !dbg !5355
  %5074 = icmp eq i32 %5073, 1, !dbg !5355
  %5075 = select i1 %5074, i32 31, i32 56, !dbg !5355
  %5076 = icmp ne i32 %5071, %5075, !dbg !5353
  br i1 %5076, label %5077, label %5080, !dbg !5352

; <label>:5077                                    ; preds = %5068, %5063
  %5078 = getelementptr inbounds %struct.re_unwind_branch_t* %5042, i32 0, i32 1, !dbg !5356
  %5079 = load i32* %5078, align 4, !dbg !5356
  call void @llvm.dbg.value(metadata i32 %5079, i64 0, metadata !2069, metadata !566), !dbg !2070
  br label %5031, !dbg !5358

; <label>:5080                                    ; preds = %5068
  %5081 = getelementptr inbounds %struct.re_unwind_branch_t* %5042, i32 0, i32 0, !dbg !5359
  %5082 = load i32* %5081, align 4, !dbg !5359
  %5083 = icmp eq i32 %5082, 1, !dbg !5359
  br i1 %5083, label %5084, label %5088, !dbg !5359

; <label>:5084                                    ; preds = %5080
  %5085 = getelementptr inbounds %struct.regnode* %5066, i32 0, i32 2, !dbg !5361
  %5086 = load i16* %5085, align 2, !dbg !5361
  %5087 = zext i16 %5086 to i32, !dbg !5361
  br label %5092, !dbg !5359

; <label>:5088                                    ; preds = %5080
  %5089 = bitcast %struct.regnode* %5066 to %struct.regnode_1*, !dbg !5362
  %5090 = getelementptr inbounds %struct.regnode_1* %5089, i32 0, i32 3, !dbg !5362
  %5091 = load i32* %5090, align 4, !dbg !5362
  br label %5092, !dbg !5359

; <label>:5092                                    ; preds = %5088, %5084
  %5093 = phi i32 [ %5087, %5084 ], [ %5091, %5088 ], !dbg !5359
  call void @llvm.dbg.value(metadata i32 %5093, i64 0, metadata !2607, metadata !566), !dbg !2608
  %5094 = icmp ne i32 %5093, 0, !dbg !5363
  br i1 %5094, label %5095, label %5098, !dbg !5363

; <label>:5095                                    ; preds = %5092
  %5096 = sext i32 %5093 to i64, !dbg !5364
  %5097 = getelementptr inbounds %struct.regnode* %5066, i64 %5096, !dbg !5364
  call void @llvm.dbg.value(metadata %struct.regnode* %5097, i64 0, metadata !2086, metadata !566), !dbg !2087
  br label %5099, !dbg !5364

; <label>:5098                                    ; preds = %5092
  call void @llvm.dbg.value(metadata %struct.regnode* null, i64 0, metadata !2086, metadata !566), !dbg !2087
  br label %5099

; <label>:5099                                    ; preds = %5098, %5095
  %next.10 = phi %struct.regnode* [ %5097, %5095 ], [ null, %5098 ]
  %5100 = getelementptr inbounds %struct.re_unwind_branch_t* %5042, i32 0, i32 4, !dbg !5365
  store %struct.regnode* %next.10, %struct.regnode** %5100, align 8, !dbg !5365
  %5101 = getelementptr inbounds %struct.regnode* %5066, i64 1, !dbg !5366
  call void @llvm.dbg.value(metadata %struct.regnode* %5101, i64 0, metadata !2086, metadata !566), !dbg !2087
  %5102 = getelementptr inbounds %struct.re_unwind_branch_t* %5042, i32 0, i32 0, !dbg !5367
  %5103 = load i32* %5102, align 4, !dbg !5367
  %5104 = icmp eq i32 %5103, 2, !dbg !5367
  br i1 %5104, label %5105, label %5107, !dbg !5369

; <label>:5105                                    ; preds = %5099
  %5106 = getelementptr inbounds %struct.regnode* %5101, i64 1, !dbg !5370
  call void @llvm.dbg.value(metadata %struct.regnode* %5106, i64 0, metadata !2086, metadata !566), !dbg !2087
  br label %5107, !dbg !5371

; <label>:5107                                    ; preds = %5105, %5099
  %next.11 = phi %struct.regnode* [ %5106, %5105 ], [ %5101, %5099 ]
  %5108 = getelementptr inbounds %struct.re_unwind_branch_t* %5042, i32 0, i32 5, !dbg !5372
  %5109 = load i8** %5108, align 8, !dbg !5372
  call void @llvm.dbg.value(metadata i8* %5109, i64 0, metadata !2057, metadata !566), !dbg !2058
  %5110 = getelementptr inbounds %struct.re_unwind_branch_t* %5042, i32 0, i32 6, !dbg !5373
  %5111 = load i32* %5110, align 4, !dbg !5373
  call void @llvm.dbg.value(metadata i32 %5111, i64 0, metadata !2075, metadata !566), !dbg !2076
  br label %5024, !dbg !5374

; <label>:5112                                    ; preds = %5033
  call void (i8*, ...)* @Perl_croak(i8* getelementptr inbounds ([32 x i8]* @.str11, i32 0, i32 0)), !dbg !5375
  br label %5113, !dbg !5376

; <label>:5113                                    ; preds = %5112
  br label %5114, !dbg !5377

; <label>:5114                                    ; preds = %5113, %5031
  br label %5115, !dbg !5378

; <label>:5115                                    ; preds = %5114, %5028
  %.0 = phi i32 [ 0, %5114 ], [ 1, %5028 ]
  ret i32 %.0, !dbg !5379
}

declare i64 @Perl_utf8n_to_uvuni(i8*, i64, i64*, i32) #2

declare i32 @Perl_ibcmp_utf8(i8*, i8**, i64, i8 signext, i8*, i8**, i64, i8 signext) #2

declare i32 @Perl_ibcmp(i8*, i8*, i32) #2

declare i32 @Perl_ibcmp_locale(i8*, i8*, i32) #2

declare i32 @reginclass(...) #2

declare void @Perl_push_scope() #2

declare void @Perl_save_re_context() #2

declare signext i8 @Perl_is_utf8_alnum(i8*) #2

declare void @Perl_pop_scope() #2

declare i64 @Perl_swash_fetch(%struct.sv*, i8*, i8 signext) #2

declare i64 @Perl_utf8_to_uvchr(i8*, i64*) #2

declare i16** @__ctype_b_loc() #2

declare signext i8 @Perl_is_uni_alnum_lc(i64) #2

declare signext i8 @Perl_is_uni_alnum(i64) #2

declare signext i8 @Perl_is_utf8_space(i8*) #2

declare signext i8 @Perl_is_uni_space_lc(i64) #2

declare signext i8 @Perl_is_utf8_digit(i8*) #2

declare signext i8 @Perl_is_uni_digit_lc(i64) #2

declare signext i8 @Perl_is_utf8_mark(i8*) #2

declare i64 @Perl_to_utf8_lower(i8*, i8*, i64*) #2

declare i32 @Perl_sv_unmagic(%struct.sv*, i32) #2

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

declare void @Perl_sv_magic(%struct.sv*, %struct.sv*, i32, i8*, i32) #2

declare i32 @regcppush(...) #2

declare i32 @regmatch(...) #2

declare void @Perl_leave_scope(i32) #2

declare i32 @regcppop(...) #2

declare signext i8 @Perl_sv_2bool(%struct.sv*) #2

declare %struct.sv* @Perl_save_scalar(%struct.gv*) #2

declare i8* @Perl_safesysrealloc(i8*, i64) #2

declare i8* @Perl_safesysmalloc(i64) #2

declare void @Perl_warner(i32, i8*, ...) #2

declare i32 @Perl_save_alloc(i32, i32) #2

declare i32 @regrepeat_hard(...) #2

declare %struct.regnode* @Perl_regnext(%struct.regnode*) #2

declare i64 @Perl_to_utf8_upper(i8*, i8*, i64*) #2

declare i32 @regrepeat(...) #2

declare i32 @regcp_set_to(...) #2

declare i32 @reghopmaybe(...) #2

declare i32 @PerlIO_printf(%struct._PerlIO**, i8*, ...) #2

declare %struct._PerlIO** @Perl_PerlIO_stderr() #2

; Function Attrs: nounwind uwtable
define %struct.sv* @Perl_regclass_swash(%struct.regnode* %node, i8 signext %doinit, %struct.sv** %listsvp, %struct.sv** %altsvp) #0 {
  call void @llvm.dbg.value(metadata %struct.regnode* %node, i64 0, metadata !5380, metadata !566), !dbg !5381
  call void @llvm.dbg.value(metadata i8 %doinit, i64 0, metadata !5382, metadata !566), !dbg !5383
  call void @llvm.dbg.value(metadata %struct.sv** %listsvp, i64 0, metadata !5384, metadata !566), !dbg !5385
  call void @llvm.dbg.value(metadata %struct.sv** %altsvp, i64 0, metadata !5386, metadata !566), !dbg !5387
  call void @llvm.dbg.value(metadata %struct.sv* null, i64 0, metadata !5388, metadata !566), !dbg !5389
  call void @llvm.dbg.value(metadata %struct.sv* null, i64 0, metadata !5390, metadata !566), !dbg !5391
  call void @llvm.dbg.value(metadata %struct.sv* null, i64 0, metadata !5392, metadata !566), !dbg !5393
  %1 = load %struct.reg_data** @PL_regdata, align 8, !dbg !5394
  %2 = icmp ne %struct.reg_data* %1, null, !dbg !5396
  br i1 %2, label %3, label %79, !dbg !5396

; <label>:3                                       ; preds = %0
  %4 = load %struct.reg_data** @PL_regdata, align 8, !dbg !5397
  %5 = getelementptr inbounds %struct.reg_data* %4, i32 0, i32 0, !dbg !5397
  %6 = load i32* %5, align 4, !dbg !5397
  %7 = icmp ne i32 %6, 0, !dbg !5396
  br i1 %7, label %8, label %79, !dbg !5396

; <label>:8                                       ; preds = %3
  %9 = bitcast %struct.regnode* %node to %struct.regnode_1*, !dbg !5399
  %10 = getelementptr inbounds %struct.regnode_1* %9, i32 0, i32 3, !dbg !5399
  %11 = load i32* %10, align 4, !dbg !5399
  call void @llvm.dbg.value(metadata i32 %11, i64 0, metadata !5401, metadata !566), !dbg !5402
  %12 = zext i32 %11 to i64, !dbg !5403
  %13 = load %struct.reg_data** @PL_regdata, align 8, !dbg !5403
  %14 = getelementptr inbounds %struct.reg_data* %13, i32 0, i32 1, !dbg !5403
  %15 = load i8** %14, align 8, !dbg !5403
  %16 = getelementptr inbounds i8* %15, i64 %12, !dbg !5403
  %17 = load i8* %16, align 1, !dbg !5403
  %18 = zext i8 %17 to i32, !dbg !5403
  %19 = icmp eq i32 %18, 115, !dbg !5403
  br i1 %19, label %20, label %78, !dbg !5405

; <label>:20                                      ; preds = %8
  %21 = zext i32 %11 to i64, !dbg !5406
  %22 = load %struct.reg_data** @PL_regdata, align 8, !dbg !5406
  %23 = getelementptr inbounds %struct.reg_data* %22, i32 0, i32 2, !dbg !5406
  %24 = getelementptr inbounds [1 x i8*]* %23, i32 0, i64 %21, !dbg !5406
  %25 = load i8** %24, align 8, !dbg !5406
  %26 = bitcast i8* %25 to %struct.sv*, !dbg !5408
  call void @llvm.dbg.value(metadata %struct.sv* %26, i64 0, metadata !5409, metadata !566), !dbg !5410
  %27 = getelementptr inbounds %struct.sv* %26, i32 0, i32 0, !dbg !5411
  %28 = load i8** %27, align 8, !dbg !5411
  %29 = bitcast i8* %28 to %struct.xrv*, !dbg !5411
  %30 = getelementptr inbounds %struct.xrv* %29, i32 0, i32 0, !dbg !5411
  %31 = load %struct.sv** %30, align 8, !dbg !5411
  %32 = bitcast %struct.sv* %31 to %struct.av*, !dbg !5412
  call void @llvm.dbg.value(metadata %struct.av* %32, i64 0, metadata !5413, metadata !566), !dbg !5414
  %33 = getelementptr inbounds %struct.av* %32, i32 0, i32 0, !dbg !5415
  %34 = load %struct.xpvav** %33, align 8, !dbg !5415
  %35 = getelementptr inbounds %struct.xpvav* %34, i32 0, i32 0, !dbg !5415
  %36 = load i8** %35, align 8, !dbg !5415
  %37 = bitcast i8* %36 to %struct.sv**, !dbg !5415
  call void @llvm.dbg.value(metadata %struct.sv** %37, i64 0, metadata !5416, metadata !566), !dbg !5417
  %38 = load %struct.sv** %37, align 8, !dbg !5418
  call void @llvm.dbg.value(metadata %struct.sv* %38, i64 0, metadata !5390, metadata !566), !dbg !5391
  %39 = getelementptr inbounds %struct.sv** %37, i64 1, !dbg !5419
  %40 = load %struct.sv** %39, align 8, !dbg !5419
  %41 = getelementptr inbounds %struct.sv* %40, i32 0, i32 2, !dbg !5419
  %42 = load i32* %41, align 4, !dbg !5419
  %43 = and i32 %42, 255, !dbg !5419
  %44 = icmp eq i32 %43, 3, !dbg !5419
  br i1 %44, label %45, label %47, !dbg !5419

; <label>:45                                      ; preds = %20
  %46 = getelementptr inbounds %struct.sv** %37, i64 1, !dbg !5420
  br label %48, !dbg !5419

; <label>:47                                      ; preds = %20
  br label %48, !dbg !5421

; <label>:48                                      ; preds = %47, %45
  %49 = phi %struct.sv** [ %46, %45 ], [ null, %47 ], !dbg !5419
  call void @llvm.dbg.value(metadata %struct.sv** %49, i64 0, metadata !5423, metadata !566), !dbg !5424
  %50 = getelementptr inbounds %struct.sv** %37, i64 2, !dbg !5425
  %51 = load %struct.sv** %50, align 8, !dbg !5425
  %52 = getelementptr inbounds %struct.sv* %51, i32 0, i32 2, !dbg !5425
  %53 = load i32* %52, align 4, !dbg !5425
  %54 = and i32 %53, 255, !dbg !5425
  %55 = icmp eq i32 %54, 10, !dbg !5425
  br i1 %55, label %56, label %58, !dbg !5425

; <label>:56                                      ; preds = %48
  %57 = getelementptr inbounds %struct.sv** %37, i64 2, !dbg !5426
  br label %59, !dbg !5425

; <label>:58                                      ; preds = %48
  br label %59, !dbg !5427

; <label>:59                                      ; preds = %58, %56
  %60 = phi %struct.sv** [ %57, %56 ], [ null, %58 ], !dbg !5425
  call void @llvm.dbg.value(metadata %struct.sv** %60, i64 0, metadata !5428, metadata !566), !dbg !5429
  %61 = icmp ne %struct.sv** %49, null, !dbg !5430
  br i1 %61, label %62, label %64, !dbg !5430

; <label>:62                                      ; preds = %59
  %63 = load %struct.sv** %49, align 8, !dbg !5431
  call void @llvm.dbg.value(metadata %struct.sv* %63, i64 0, metadata !5388, metadata !566), !dbg !5389
  br label %73, !dbg !5433

; <label>:64                                      ; preds = %59
  %65 = icmp ne %struct.sv* %38, null, !dbg !5434
  br i1 %65, label %66, label %72, !dbg !5434

; <label>:66                                      ; preds = %64
  %67 = sext i8 %doinit to i32, !dbg !5435
  %68 = icmp ne i32 %67, 0, !dbg !5434
  br i1 %68, label %69, label %72, !dbg !5434

; <label>:69                                      ; preds = %66
  %70 = call %struct.sv* @Perl_swash_init(i8* getelementptr inbounds ([5 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str13, i32 0, i32 0), %struct.sv* %38, i32 1, i32 0), !dbg !5438
  call void @llvm.dbg.value(metadata %struct.sv* %70, i64 0, metadata !5388, metadata !566), !dbg !5389
  %71 = call %struct.sv** @Perl_av_store(%struct.av* %32, i32 1, %struct.sv* %70), !dbg !5440
  br label %72, !dbg !5441

; <label>:72                                      ; preds = %69, %66, %64
  %sw.0 = phi %struct.sv* [ %70, %69 ], [ null, %66 ], [ null, %64 ]
  br label %73

; <label>:73                                      ; preds = %72, %62
  %sw.1 = phi %struct.sv* [ %63, %62 ], [ %sw.0, %72 ]
  %74 = icmp ne %struct.sv** %60, null, !dbg !5442
  br i1 %74, label %75, label %77, !dbg !5442

; <label>:75                                      ; preds = %73
  %76 = load %struct.sv** %60, align 8, !dbg !5443
  call void @llvm.dbg.value(metadata %struct.sv* %76, i64 0, metadata !5392, metadata !566), !dbg !5393
  br label %77, !dbg !5445

; <label>:77                                      ; preds = %75, %73
  %alt.0 = phi %struct.sv* [ %76, %75 ], [ null, %73 ]
  br label %78, !dbg !5446

; <label>:78                                      ; preds = %77, %8
  %sw.2 = phi %struct.sv* [ %sw.1, %77 ], [ null, %8 ]
  %si.0 = phi %struct.sv* [ %38, %77 ], [ null, %8 ]
  %alt.1 = phi %struct.sv* [ %alt.0, %77 ], [ null, %8 ]
  br label %79, !dbg !5447

; <label>:79                                      ; preds = %78, %3, %0
  %sw.3 = phi %struct.sv* [ %sw.2, %78 ], [ null, %3 ], [ null, %0 ]
  %si.1 = phi %struct.sv* [ %si.0, %78 ], [ null, %3 ], [ null, %0 ]
  %alt.2 = phi %struct.sv* [ %alt.1, %78 ], [ null, %3 ], [ null, %0 ]
  %80 = icmp ne %struct.sv** %listsvp, null, !dbg !5448
  br i1 %80, label %81, label %82, !dbg !5448

; <label>:81                                      ; preds = %79
  store %struct.sv* %si.1, %struct.sv** %listsvp, align 8, !dbg !5449
  br label %82, !dbg !5449

; <label>:82                                      ; preds = %81, %79
  %83 = icmp ne %struct.sv** %altsvp, null, !dbg !5451
  br i1 %83, label %84, label %85, !dbg !5451

; <label>:84                                      ; preds = %82
  store %struct.sv* %alt.2, %struct.sv** %altsvp, align 8, !dbg !5452
  br label %85, !dbg !5452

; <label>:85                                      ; preds = %84, %82
  ret %struct.sv* %sw.3, !dbg !5454
}

declare %struct.sv* @Perl_swash_init(i8*, i8*, %struct.sv*, i32, i32) #2

declare %struct.sv** @Perl_av_store(%struct.av*, i32, %struct.sv*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!562, !563}
!llvm.ident = !{!564}

!0 = !{!"0x11\0012\00clang version 3.6.2 (tags/RELEASE_362/final)\000\00\000\00\001", !1, !2, !37, !536, !541, !541} ; [ DW_TAG_compile_unit ] [/tmp/perlbench/regexec.c] [DW_LANG_C99]
!1 = !{!"regexec.c", !"/tmp/perlbench"}
!2 = !{!3, !22}
!3 = !{!"0x4\00\0046\0032\0032\000\000\000", !4, null, null, !5, null, null, null} ; [ DW_TAG_enumeration_type ] [line 46, size 32, align 32, offset 0] [def] [from ]
!4 = !{!"./sv.h", !"/tmp/perlbench"}
!5 = !{!6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21}
!6 = !{!"0x28\00SVt_NULL\000"}                    ; [ DW_TAG_enumerator ] [SVt_NULL :: 0]
!7 = !{!"0x28\00SVt_IV\001"}                      ; [ DW_TAG_enumerator ] [SVt_IV :: 1]
!8 = !{!"0x28\00SVt_NV\002"}                      ; [ DW_TAG_enumerator ] [SVt_NV :: 2]
!9 = !{!"0x28\00SVt_RV\003"}                      ; [ DW_TAG_enumerator ] [SVt_RV :: 3]
!10 = !{!"0x28\00SVt_PV\004"}                     ; [ DW_TAG_enumerator ] [SVt_PV :: 4]
!11 = !{!"0x28\00SVt_PVIV\005"}                   ; [ DW_TAG_enumerator ] [SVt_PVIV :: 5]
!12 = !{!"0x28\00SVt_PVNV\006"}                   ; [ DW_TAG_enumerator ] [SVt_PVNV :: 6]
!13 = !{!"0x28\00SVt_PVMG\007"}                   ; [ DW_TAG_enumerator ] [SVt_PVMG :: 7]
!14 = !{!"0x28\00SVt_PVBM\008"}                   ; [ DW_TAG_enumerator ] [SVt_PVBM :: 8]
!15 = !{!"0x28\00SVt_PVLV\009"}                   ; [ DW_TAG_enumerator ] [SVt_PVLV :: 9]
!16 = !{!"0x28\00SVt_PVAV\0010"}                  ; [ DW_TAG_enumerator ] [SVt_PVAV :: 10]
!17 = !{!"0x28\00SVt_PVHV\0011"}                  ; [ DW_TAG_enumerator ] [SVt_PVHV :: 11]
!18 = !{!"0x28\00SVt_PVCV\0012"}                  ; [ DW_TAG_enumerator ] [SVt_PVCV :: 12]
!19 = !{!"0x28\00SVt_PVGV\0013"}                  ; [ DW_TAG_enumerator ] [SVt_PVGV :: 13]
!20 = !{!"0x28\00SVt_PVFM\0014"}                  ; [ DW_TAG_enumerator ] [SVt_PVFM :: 14]
!21 = !{!"0x28\00SVt_PVIO\0015"}                  ; [ DW_TAG_enumerator ] [SVt_PVIO :: 15]
!22 = !{!"0x4\00\0046\0032\0032\000\000\000", !23, null, null, !24, null, null, null} ; [ DW_TAG_enumeration_type ] [line 46, size 32, align 32, offset 0] [def] [from ]
!23 = !{!"/usr/include/ctype.h", !"/tmp/perlbench"}
!24 = !{!25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!25 = !{!"0x28\00_ISupper\00256"}                 ; [ DW_TAG_enumerator ] [_ISupper :: 256]
!26 = !{!"0x28\00_ISlower\00512"}                 ; [ DW_TAG_enumerator ] [_ISlower :: 512]
!27 = !{!"0x28\00_ISalpha\001024"}                ; [ DW_TAG_enumerator ] [_ISalpha :: 1024]
!28 = !{!"0x28\00_ISdigit\002048"}                ; [ DW_TAG_enumerator ] [_ISdigit :: 2048]
!29 = !{!"0x28\00_ISxdigit\004096"}               ; [ DW_TAG_enumerator ] [_ISxdigit :: 4096]
!30 = !{!"0x28\00_ISspace\008192"}                ; [ DW_TAG_enumerator ] [_ISspace :: 8192]
!31 = !{!"0x28\00_ISprint\0016384"}               ; [ DW_TAG_enumerator ] [_ISprint :: 16384]
!32 = !{!"0x28\00_ISgraph\0032768"}               ; [ DW_TAG_enumerator ] [_ISgraph :: 32768]
!33 = !{!"0x28\00_ISblank\001"}                   ; [ DW_TAG_enumerator ] [_ISblank :: 1]
!34 = !{!"0x28\00_IScntrl\002"}                   ; [ DW_TAG_enumerator ] [_IScntrl :: 2]
!35 = !{!"0x28\00_ISpunct\004"}                   ; [ DW_TAG_enumerator ] [_ISpunct :: 4]
!36 = !{!"0x28\00_ISalnum\008"}                   ; [ DW_TAG_enumerator ] [_ISalnum :: 8]
!37 = !{!38, !39, !41, !53, !57, !299, !87, !300, !54, !307, !86, !446, !157, !40, !457, null, !198, !468, !475, !477, !276, !123, !71, !479, !484, !486, !494, !503, !49, !511, !282, !331, !523, !118}
!38 = !{!"0xf\00\000\0064\0064\000\000", null, null, null} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!39 = !{!"0xf\00\000\0064\0064\000\000", null, null, !40} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from char]
!40 = !{!"0x24\00char\000\008\008\000\000\006", null, null} ; [ DW_TAG_base_type ] [char] [line 0, size 8, align 8, offset 0, enc DW_ATE_signed_char]
!41 = !{!"0xf\00\000\0064\0064\000\000", null, null, !42} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPV]
!42 = !{!"0x16\00XPV\002039\000\000\000\000", !43, null, !44} ; [ DW_TAG_typedef ] [XPV] [line 2039, size 0, align 0, offset 0] [from xpv]
!43 = !{!"./perl.h", !"/tmp/perlbench"}
!44 = !{!"0x13\00xpv\00249\00192\0064\000\000\000", !4, null, null, !45, null, null, null} ; [ DW_TAG_structure_type ] [xpv] [line 249, size 192, align 64, offset 0] [def] [from ]
!45 = !{!46, !47, !52}
!46 = !{!"0xd\00xpv_pv\00250\0064\0064\000\000", !4, !44, !39} ; [ DW_TAG_member ] [xpv_pv] [line 250, size 64, align 64, offset 0] [from ]
!47 = !{!"0xd\00xpv_cur\00251\0064\0064\0064\000", !4, !44, !48} ; [ DW_TAG_member ] [xpv_cur] [line 251, size 64, align 64, offset 64] [from STRLEN]
!48 = !{!"0x16\00STRLEN\002003\000\000\000\000", !43, null, !49} ; [ DW_TAG_typedef ] [STRLEN] [line 2003, size 0, align 0, offset 0] [from size_t]
!49 = !{!"0x16\00size_t\0062\000\000\000\000", !50, null, !51} ; [ DW_TAG_typedef ] [size_t] [line 62, size 0, align 0, offset 0] [from long unsigned int]
!50 = !{!"/usr/local/bin/../lib/clang/3.6.2/include/stddef.h", !"/tmp/perlbench"}
!51 = !{!"0x24\00long unsigned int\000\0064\0064\000\000\007", null, null} ; [ DW_TAG_base_type ] [long unsigned int] [line 0, size 64, align 64, offset 0, enc DW_ATE_unsigned]
!52 = !{!"0xd\00xpv_len\00252\0064\0064\00128\000", !4, !44, !48} ; [ DW_TAG_member ] [xpv_len] [line 252, size 64, align 64, offset 128] [from STRLEN]
!53 = !{!"0xf\00\000\0064\0064\000\000", null, null, !54} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from U8]
!54 = !{!"0x16\00U8\00133\000\000\000\000", !55, null, !56} ; [ DW_TAG_typedef ] [U8] [line 133, size 0, align 0, offset 0] [from unsigned char]
!55 = !{!"./handy.h", !"/tmp/perlbench"}
!56 = !{!"0x24\00unsigned char\000\008\008\000\000\008", null, null} ; [ DW_TAG_base_type ] [unsigned char] [line 0, size 8, align 8, offset 0, enc DW_ATE_unsigned_char]
!57 = !{!"0xf\00\000\0064\0064\000\000", null, null, !58} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVBM]
!58 = !{!"0x16\00XPVBM\002049\000\000\000\000", !43, null, !59} ; [ DW_TAG_typedef ] [XPVBM] [line 2049, size 0, align 0, offset 0] [from xpvbm]
!59 = !{!"0x13\00xpvbm\00320\00512\0064\000\000\000", !4, null, null, !60, null, null, null} ; [ DW_TAG_structure_type ] [xpvbm] [line 320, size 512, align 64, offset 0] [def] [from ]
!60 = !{!61, !62, !63, !64, !67, !70, !295, !296, !297, !298}
!61 = !{!"0xd\00xpv_pv\00321\0064\0064\000\000", !4, !59, !39} ; [ DW_TAG_member ] [xpv_pv] [line 321, size 64, align 64, offset 0] [from ]
!62 = !{!"0xd\00xpv_cur\00322\0064\0064\0064\000", !4, !59, !48} ; [ DW_TAG_member ] [xpv_cur] [line 322, size 64, align 64, offset 64] [from STRLEN]
!63 = !{!"0xd\00xpv_len\00323\0064\0064\00128\000", !4, !59, !48} ; [ DW_TAG_member ] [xpv_len] [line 323, size 64, align 64, offset 128] [from STRLEN]
!64 = !{!"0xd\00xiv_iv\00324\0064\0064\00192\000", !4, !59, !65} ; [ DW_TAG_member ] [xiv_iv] [line 324, size 64, align 64, offset 192] [from IV]
!65 = !{!"0x16\00IV\001323\000\000\000\000", !43, null, !66} ; [ DW_TAG_typedef ] [IV] [line 1323, size 0, align 0, offset 0] [from long int]
!66 = !{!"0x24\00long int\000\0064\0064\000\000\005", null, null} ; [ DW_TAG_base_type ] [long int] [line 0, size 64, align 64, offset 0, enc DW_ATE_signed]
!67 = !{!"0xd\00xnv_nv\00325\0064\0064\00256\000", !4, !59, !68} ; [ DW_TAG_member ] [xnv_nv] [line 325, size 64, align 64, offset 256] [from NV]
!68 = !{!"0x16\00NV\001523\000\000\000\000", !43, null, !69} ; [ DW_TAG_typedef ] [NV] [line 1523, size 0, align 0, offset 0] [from double]
!69 = !{!"0x24\00double\000\0064\0064\000\000\004", null, null} ; [ DW_TAG_base_type ] [double] [line 0, size 64, align 64, offset 0, enc DW_ATE_float]
!70 = !{!"0xd\00xmg_magic\00326\0064\0064\00320\000", !4, !59, !71} ; [ DW_TAG_member ] [xmg_magic] [line 326, size 64, align 64, offset 320] [from ]
!71 = !{!"0xf\00\000\0064\0064\000\000", null, null, !72} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from MAGIC]
!72 = !{!"0x16\00MAGIC\002037\000\000\000\000", !43, null, !73} ; [ DW_TAG_typedef ] [MAGIC] [line 2037, size 0, align 0, offset 0] [from magic]
!73 = !{!"0x13\00magic\0026\00384\0064\000\000\000", !74, null, null, !75, null, null, null} ; [ DW_TAG_structure_type ] [magic] [line 26, size 384, align 64, offset 0] [def] [from ]
!74 = !{!"./mg.h", !"/tmp/perlbench"}
!75 = !{!76, !77, !289, !290, !291, !292, !293, !294}
!76 = !{!"0xd\00mg_moremagic\0027\0064\0064\000\000", !74, !73, !71} ; [ DW_TAG_member ] [mg_moremagic] [line 27, size 64, align 64, offset 0] [from ]
!77 = !{!"0xd\00mg_virtual\0028\0064\0064\0064\000", !74, !73, !78} ; [ DW_TAG_member ] [mg_virtual] [line 28, size 64, align 64, offset 64] [from ]
!78 = !{!"0xf\00\000\0064\0064\000\000", null, null, !79} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from MGVTBL]
!79 = !{!"0x16\00MGVTBL\002052\000\000\000\000", !43, null, !80} ; [ DW_TAG_typedef ] [MGVTBL] [line 2052, size 0, align 0, offset 0] [from mgvtbl]
!80 = !{!"0x13\00mgvtbl\0014\00448\0064\000\000\000", !74, null, null, !81, null, null, null} ; [ DW_TAG_structure_type ] [mgvtbl] [line 14, size 448, align 64, offset 0] [def] [from ]
!81 = !{!82, !96, !97, !101, !102, !103, !109}
!82 = !{!"0xd\00svt_get\0015\0064\0064\000\000", !74, !80, !83} ; [ DW_TAG_member ] [svt_get] [line 15, size 64, align 64, offset 0] [from ]
!83 = !{!"0xf\00\000\0064\0064\000\000", null, null, !84} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!84 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !85, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!85 = !{!86, !87, !71}
!86 = !{!"0x24\00int\000\0032\0032\000\000\005", null, null} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
!87 = !{!"0xf\00\000\0064\0064\000\000", null, null, !88} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from SV]
!88 = !{!"0x16\00SV\002026\000\000\000\000", !43, null, !89} ; [ DW_TAG_typedef ] [SV] [line 2026, size 0, align 0, offset 0] [from sv]
!89 = !{!"0x13\00sv\0067\00128\0064\000\000\000", !4, null, null, !90, null, null, null} ; [ DW_TAG_structure_type ] [sv] [line 67, size 128, align 64, offset 0] [def] [from ]
!90 = !{!91, !92, !95}
!91 = !{!"0xd\00sv_any\0068\0064\0064\000\000", !4, !89, !38} ; [ DW_TAG_member ] [sv_any] [line 68, size 64, align 64, offset 0] [from ]
!92 = !{!"0xd\00sv_refcnt\0069\0032\0032\0064\000", !4, !89, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 69, size 32, align 32, offset 64] [from U32]
!93 = !{!"0x16\00U32\00137\000\000\000\000", !55, null, !94} ; [ DW_TAG_typedef ] [U32] [line 137, size 0, align 0, offset 0] [from unsigned int]
!94 = !{!"0x24\00unsigned int\000\0032\0032\000\000\007", null, null} ; [ DW_TAG_base_type ] [unsigned int] [line 0, size 32, align 32, offset 0, enc DW_ATE_unsigned]
!95 = !{!"0xd\00sv_flags\0070\0032\0032\0096\000", !4, !89, !93} ; [ DW_TAG_member ] [sv_flags] [line 70, size 32, align 32, offset 96] [from U32]
!96 = !{!"0xd\00svt_set\0016\0064\0064\0064\000", !74, !80, !83} ; [ DW_TAG_member ] [svt_set] [line 16, size 64, align 64, offset 64] [from ]
!97 = !{!"0xd\00svt_len\0017\0064\0064\00128\000", !74, !80, !98} ; [ DW_TAG_member ] [svt_len] [line 17, size 64, align 64, offset 128] [from ]
!98 = !{!"0xf\00\000\0064\0064\000\000", null, null, !99} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!99 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !100, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!100 = !{!93, !87, !71}
!101 = !{!"0xd\00svt_clear\0018\0064\0064\00192\000", !74, !80, !83} ; [ DW_TAG_member ] [svt_clear] [line 18, size 64, align 64, offset 192] [from ]
!102 = !{!"0xd\00svt_free\0019\0064\0064\00256\000", !74, !80, !83} ; [ DW_TAG_member ] [svt_free] [line 19, size 64, align 64, offset 256] [from ]
!103 = !{!"0xd\00svt_copy\0020\0064\0064\00320\000", !74, !80, !104} ; [ DW_TAG_member ] [svt_copy] [line 20, size 64, align 64, offset 320] [from ]
!104 = !{!"0xf\00\000\0064\0064\000\000", null, null, !105} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!105 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !106, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!106 = !{!86, !87, !71, !87, !107, !86}
!107 = !{!"0xf\00\000\0064\0064\000\000", null, null, !108} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!108 = !{!"0x26\00\000\000\000\000\000", null, null, !40} ; [ DW_TAG_const_type ] [line 0, size 0, align 0, offset 0] [from char]
!109 = !{!"0xd\00svt_dup\0022\0064\0064\00384\000", !74, !80, !110} ; [ DW_TAG_member ] [svt_dup] [line 22, size 64, align 64, offset 384] [from ]
!110 = !{!"0xf\00\000\0064\0064\000\000", null, null, !111} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!111 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !112, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!112 = !{!86, !71, !113}
!113 = !{!"0xf\00\000\0064\0064\000\000", null, null, !114} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from CLONE_PARAMS]
!114 = !{!"0x16\00CLONE_PARAMS\002056\000\000\000\000", !43, null, !115} ; [ DW_TAG_typedef ] [CLONE_PARAMS] [line 2056, size 0, align 0, offset 0] [from clone_params]
!115 = !{!"0x13\00clone_params\001261\00192\0064\000\000\000", !4, null, null, !116, null, null, null} ; [ DW_TAG_structure_type ] [clone_params] [line 1261, size 192, align 64, offset 0] [def] [from ]
!116 = !{!117, !281, !283}
!117 = !{!"0xd\00stashes\001262\0064\0064\000\000", !4, !115, !118} ; [ DW_TAG_member ] [stashes] [line 1262, size 64, align 64, offset 0] [from ]
!118 = !{!"0xf\00\000\0064\0064\000\000", null, null, !119} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from AV]
!119 = !{!"0x16\00AV\002027\000\000\000\000", !43, null, !120} ; [ DW_TAG_typedef ] [AV] [line 2027, size 0, align 0, offset 0] [from av]
!120 = !{!"0x13\00av\0085\00128\0064\000\000\000", !4, null, null, !121, null, null, null} ; [ DW_TAG_structure_type ] [av] [line 85, size 128, align 64, offset 0] [def] [from ]
!121 = !{!122, !279, !280}
!122 = !{!"0xd\00sv_any\0086\0064\0064\000\000", !4, !120, !123} ; [ DW_TAG_member ] [sv_any] [line 86, size 64, align 64, offset 0] [from ]
!123 = !{!"0xf\00\000\0064\0064\000\000", null, null, !124} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVAV]
!124 = !{!"0x16\00XPVAV\002045\000\000\000\000", !43, null, !125} ; [ DW_TAG_typedef ] [XPVAV] [line 2045, size 0, align 0, offset 0] [from xpvav]
!125 = !{!"0x13\00xpvav\0011\00640\0064\000\000\000", !126, null, null, !127, null, null, null} ; [ DW_TAG_structure_type ] [xpvav] [line 11, size 640, align 64, offset 0] [def] [from ]
!126 = !{!"./av.h", !"/tmp/perlbench"}
!127 = !{!128, !129, !134, !135, !136, !137, !138, !275, !277, !278}
!128 = !{!"0xd\00xav_array\0012\0064\0064\000\000", !126, !125, !39} ; [ DW_TAG_member ] [xav_array] [line 12, size 64, align 64, offset 0] [from ]
!129 = !{!"0xd\00xav_fill\0013\0064\0064\0064\000", !126, !125, !130} ; [ DW_TAG_member ] [xav_fill] [line 13, size 64, align 64, offset 64] [from ssize_t]
!130 = !{!"0x16\00ssize_t\00109\000\000\000\000", !131, null, !132} ; [ DW_TAG_typedef ] [ssize_t] [line 109, size 0, align 0, offset 0] [from __ssize_t]
!131 = !{!"/usr/include/x86_64-linux-gnu/sys/types.h", !"/tmp/perlbench"}
!132 = !{!"0x16\00__ssize_t\00172\000\000\000\000", !133, null, !66} ; [ DW_TAG_typedef ] [__ssize_t] [line 172, size 0, align 0, offset 0] [from long int]
!133 = !{!"/usr/include/x86_64-linux-gnu/bits/types.h", !"/tmp/perlbench"}
!134 = !{!"0xd\00xav_max\0014\0064\0064\00128\000", !126, !125, !130} ; [ DW_TAG_member ] [xav_max] [line 14, size 64, align 64, offset 128] [from ssize_t]
!135 = !{!"0xd\00xof_off\0015\0064\0064\00192\000", !126, !125, !65} ; [ DW_TAG_member ] [xof_off] [line 15, size 64, align 64, offset 192] [from IV]
!136 = !{!"0xd\00xnv_nv\0016\0064\0064\00256\000", !126, !125, !68} ; [ DW_TAG_member ] [xnv_nv] [line 16, size 64, align 64, offset 256] [from NV]
!137 = !{!"0xd\00xmg_magic\0017\0064\0064\00320\000", !126, !125, !71} ; [ DW_TAG_member ] [xmg_magic] [line 17, size 64, align 64, offset 320] [from ]
!138 = !{!"0xd\00xmg_stash\0018\0064\0064\00384\000", !126, !125, !139} ; [ DW_TAG_member ] [xmg_stash] [line 18, size 64, align 64, offset 384] [from ]
!139 = !{!"0xf\00\000\0064\0064\000\000", null, null, !140} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from HV]
!140 = !{!"0x16\00HV\002028\000\000\000\000", !43, null, !141} ; [ DW_TAG_typedef ] [HV] [line 2028, size 0, align 0, offset 0] [from hv]
!141 = !{!"0x13\00hv\0091\00128\0064\000\000\000", !4, null, null, !142, null, null, null} ; [ DW_TAG_structure_type ] [hv] [line 91, size 128, align 64, offset 0] [def] [from ]
!142 = !{!143, !273, !274}
!143 = !{!"0xd\00sv_any\0092\0064\0064\000\000", !4, !141, !144} ; [ DW_TAG_member ] [sv_any] [line 92, size 64, align 64, offset 0] [from ]
!144 = !{!"0xf\00\000\0064\0064\000\000", null, null, !145} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVHV]
!145 = !{!"0x16\00XPVHV\002046\000\000\000\000", !43, null, !146} ; [ DW_TAG_typedef ] [XPVHV] [line 2046, size 0, align 0, offset 0] [from xpvhv]
!146 = !{!"0x13\00xpvhv\0034\00704\0064\000\000\000", !147, null, null, !148, null, null, null} ; [ DW_TAG_structure_type ] [xpvhv] [line 34, size 704, align 64, offset 0] [def] [from ]
!147 = !{!"./hv.h", !"/tmp/perlbench"}
!148 = !{!149, !150, !151, !152, !153, !154, !155, !156, !158, !176, !272}
!149 = !{!"0xd\00xhv_array\0035\0064\0064\000\000", !147, !146, !39} ; [ DW_TAG_member ] [xhv_array] [line 35, size 64, align 64, offset 0] [from ]
!150 = !{!"0xd\00xhv_fill\0036\0064\0064\0064\000", !147, !146, !48} ; [ DW_TAG_member ] [xhv_fill] [line 36, size 64, align 64, offset 64] [from STRLEN]
!151 = !{!"0xd\00xhv_max\0037\0064\0064\00128\000", !147, !146, !48} ; [ DW_TAG_member ] [xhv_max] [line 37, size 64, align 64, offset 128] [from STRLEN]
!152 = !{!"0xd\00xhv_keys\0038\0064\0064\00192\000", !147, !146, !65} ; [ DW_TAG_member ] [xhv_keys] [line 38, size 64, align 64, offset 192] [from IV]
!153 = !{!"0xd\00xnv_nv\0039\0064\0064\00256\000", !147, !146, !68} ; [ DW_TAG_member ] [xnv_nv] [line 39, size 64, align 64, offset 256] [from NV]
!154 = !{!"0xd\00xmg_magic\0041\0064\0064\00320\000", !147, !146, !71} ; [ DW_TAG_member ] [xmg_magic] [line 41, size 64, align 64, offset 320] [from ]
!155 = !{!"0xd\00xmg_stash\0042\0064\0064\00384\000", !147, !146, !139} ; [ DW_TAG_member ] [xmg_stash] [line 42, size 64, align 64, offset 384] [from ]
!156 = !{!"0xd\00xhv_riter\0044\0032\0032\00448\000", !147, !146, !157} ; [ DW_TAG_member ] [xhv_riter] [line 44, size 32, align 32, offset 448] [from I32]
!157 = !{!"0x16\00I32\00136\000\000\000\000", !55, null, !86} ; [ DW_TAG_typedef ] [I32] [line 136, size 0, align 0, offset 0] [from int]
!158 = !{!"0xd\00xhv_eiter\0045\0064\0064\00512\000", !147, !146, !159} ; [ DW_TAG_member ] [xhv_eiter] [line 45, size 64, align 64, offset 512] [from ]
!159 = !{!"0xf\00\000\0064\0064\000\000", null, null, !160} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from HE]
!160 = !{!"0x16\00HE\0012\000\000\000\000", !147, null, !161} ; [ DW_TAG_typedef ] [HE] [line 12, size 0, align 0, offset 0] [from he]
!161 = !{!"0x13\00he\0016\00192\0064\000\000\000", !147, null, null, !162, null, null, null} ; [ DW_TAG_structure_type ] [he] [line 16, size 192, align 64, offset 0] [def] [from ]
!162 = !{!163, !164, !175}
!163 = !{!"0xd\00hent_next\0017\0064\0064\000\000", !147, !161, !159} ; [ DW_TAG_member ] [hent_next] [line 17, size 64, align 64, offset 0] [from ]
!164 = !{!"0xd\00hent_hek\0018\0064\0064\0064\000", !147, !161, !165} ; [ DW_TAG_member ] [hent_hek] [line 18, size 64, align 64, offset 64] [from ]
!165 = !{!"0xf\00\000\0064\0064\000\000", null, null, !166} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from HEK]
!166 = !{!"0x16\00HEK\0013\000\000\000\000", !147, null, !167} ; [ DW_TAG_typedef ] [HEK] [line 13, size 0, align 0, offset 0] [from hek]
!167 = !{!"0x13\00hek\0023\0096\0032\000\000\000", !147, null, null, !168, null, null, null} ; [ DW_TAG_structure_type ] [hek] [line 23, size 96, align 32, offset 0] [def] [from ]
!168 = !{!169, !170, !171}
!169 = !{!"0xd\00hek_hash\0024\0032\0032\000\000", !147, !167, !93} ; [ DW_TAG_member ] [hek_hash] [line 24, size 32, align 32, offset 0] [from U32]
!170 = !{!"0xd\00hek_len\0025\0032\0032\0032\000", !147, !167, !157} ; [ DW_TAG_member ] [hek_len] [line 25, size 32, align 32, offset 32] [from I32]
!171 = !{!"0xd\00hek_key\0026\008\008\0064\000", !147, !167, !172} ; [ DW_TAG_member ] [hek_key] [line 26, size 8, align 8, offset 64] [from ]
!172 = !{!"0x1\00\000\008\008\000\000\000", null, null, !40, !173, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 8, align 8, offset 0] [from char]
!173 = !{!174}
!174 = !{!"0x21\000\001"}                         ; [ DW_TAG_subrange_type ] [0, 0]
!175 = !{!"0xd\00hent_val\0019\0064\0064\00128\000", !147, !161, !87} ; [ DW_TAG_member ] [hent_val] [line 19, size 64, align 64, offset 128] [from ]
!176 = !{!"0xd\00xhv_pmroot\0046\0064\0064\00576\000", !147, !146, !177} ; [ DW_TAG_member ] [xhv_pmroot] [line 46, size 64, align 64, offset 576] [from ]
!177 = !{!"0xf\00\000\0064\0064\000\000", null, null, !178} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PMOP]
!178 = !{!"0x16\00PMOP\002011\000\000\000\000", !43, null, !179} ; [ DW_TAG_typedef ] [PMOP] [line 2011, size 0, align 0, offset 0] [from pmop]
!179 = !{!"0x13\00pmop\00253\00896\0064\000\000\000", !180, null, null, !181, null, null, null} ; [ DW_TAG_structure_type ] [pmop] [line 253, size 896, align 64, offset 0] [def] [from ]
!180 = !{!"./op.h", !"/tmp/perlbench"}
!181 = !{!182, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !268, !269, !270, !271}
!182 = !{!"0xd\00op_next\00254\0064\0064\000\000", !180, !179, !183} ; [ DW_TAG_member ] [op_next] [line 254, size 64, align 64, offset 0] [from ]
!183 = !{!"0xf\00\000\0064\0064\000\000", null, null, !184} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from OP]
!184 = !{!"0x16\00OP\002005\000\000\000\000", !43, null, !185} ; [ DW_TAG_typedef ] [OP] [line 2005, size 0, align 0, offset 0] [from op]
!185 = !{!"0x13\00op\00226\00320\0064\000\000\000", !180, null, null, !186, null, null, null} ; [ DW_TAG_structure_type ] [op] [line 226, size 320, align 64, offset 0] [def] [from ]
!186 = !{!187, !188, !189, !193, !196, !199, !200, !201}
!187 = !{!"0xd\00op_next\00227\0064\0064\000\000", !180, !185, !183} ; [ DW_TAG_member ] [op_next] [line 227, size 64, align 64, offset 0] [from ]
!188 = !{!"0xd\00op_sibling\00227\0064\0064\0064\000", !180, !185, !183} ; [ DW_TAG_member ] [op_sibling] [line 227, size 64, align 64, offset 64] [from ]
!189 = !{!"0xd\00op_ppaddr\00227\0064\0064\00128\000", !180, !185, !190} ; [ DW_TAG_member ] [op_ppaddr] [line 227, size 64, align 64, offset 128] [from ]
!190 = !{!"0xf\00\000\0064\0064\000\000", null, null, !191} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!191 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !192, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!192 = !{!183}
!193 = !{!"0xd\00op_targ\00227\0064\0064\00192\000", !180, !185, !194} ; [ DW_TAG_member ] [op_targ] [line 227, size 64, align 64, offset 192] [from PADOFFSET]
!194 = !{!"0x16\00PADOFFSET\0029\000\000\000\000", !195, null, !51} ; [ DW_TAG_typedef ] [PADOFFSET] [line 29, size 0, align 0, offset 0] [from long unsigned int]
!195 = !{!"./pad.h", !"/tmp/perlbench"}
!196 = !{!"0xd\00op_type\00227\0016\0016\00256\000", !180, !185, !197} ; [ DW_TAG_member ] [op_type] [line 227, size 16, align 16, offset 256] [from U16]
!197 = !{!"0x16\00U16\00135\000\000\000\000", !55, null, !198} ; [ DW_TAG_typedef ] [U16] [line 135, size 0, align 0, offset 0] [from unsigned short]
!198 = !{!"0x24\00unsigned short\000\0016\0016\000\000\007", null, null} ; [ DW_TAG_base_type ] [unsigned short] [line 0, size 16, align 16, offset 0, enc DW_ATE_unsigned]
!199 = !{!"0xd\00op_seq\00227\0016\0016\00272\000", !180, !185, !197} ; [ DW_TAG_member ] [op_seq] [line 227, size 16, align 16, offset 272] [from U16]
!200 = !{!"0xd\00op_flags\00227\008\008\00288\000", !180, !185, !54} ; [ DW_TAG_member ] [op_flags] [line 227, size 8, align 8, offset 288] [from U8]
!201 = !{!"0xd\00op_private\00227\008\008\00296\000", !180, !185, !54} ; [ DW_TAG_member ] [op_private] [line 227, size 8, align 8, offset 296] [from U8]
!202 = !{!"0xd\00op_sibling\00254\0064\0064\0064\000", !180, !179, !183} ; [ DW_TAG_member ] [op_sibling] [line 254, size 64, align 64, offset 64] [from ]
!203 = !{!"0xd\00op_ppaddr\00254\0064\0064\00128\000", !180, !179, !190} ; [ DW_TAG_member ] [op_ppaddr] [line 254, size 64, align 64, offset 128] [from ]
!204 = !{!"0xd\00op_targ\00254\0064\0064\00192\000", !180, !179, !194} ; [ DW_TAG_member ] [op_targ] [line 254, size 64, align 64, offset 192] [from PADOFFSET]
!205 = !{!"0xd\00op_type\00254\0016\0016\00256\000", !180, !179, !197} ; [ DW_TAG_member ] [op_type] [line 254, size 16, align 16, offset 256] [from U16]
!206 = !{!"0xd\00op_seq\00254\0016\0016\00272\000", !180, !179, !197} ; [ DW_TAG_member ] [op_seq] [line 254, size 16, align 16, offset 272] [from U16]
!207 = !{!"0xd\00op_flags\00254\008\008\00288\000", !180, !179, !54} ; [ DW_TAG_member ] [op_flags] [line 254, size 8, align 8, offset 288] [from U8]
!208 = !{!"0xd\00op_private\00254\008\008\00296\000", !180, !179, !54} ; [ DW_TAG_member ] [op_private] [line 254, size 8, align 8, offset 296] [from U8]
!209 = !{!"0xd\00op_first\00255\0064\0064\00320\000", !180, !179, !183} ; [ DW_TAG_member ] [op_first] [line 255, size 64, align 64, offset 320] [from ]
!210 = !{!"0xd\00op_last\00256\0064\0064\00384\000", !180, !179, !183} ; [ DW_TAG_member ] [op_last] [line 256, size 64, align 64, offset 384] [from ]
!211 = !{!"0xd\00op_pmreplroot\00257\0064\0064\00448\000", !180, !179, !183} ; [ DW_TAG_member ] [op_pmreplroot] [line 257, size 64, align 64, offset 448] [from ]
!212 = !{!"0xd\00op_pmreplstart\00258\0064\0064\00512\000", !180, !179, !183} ; [ DW_TAG_member ] [op_pmreplstart] [line 258, size 64, align 64, offset 512] [from ]
!213 = !{!"0xd\00op_pmnext\00259\0064\0064\00576\000", !180, !179, !177} ; [ DW_TAG_member ] [op_pmnext] [line 259, size 64, align 64, offset 576] [from ]
!214 = !{!"0xd\00op_pmregexp\00263\0064\0064\00640\000", !180, !179, !215} ; [ DW_TAG_member ] [op_pmregexp] [line 263, size 64, align 64, offset 640] [from ]
!215 = !{!"0xf\00\000\0064\0064\000\000", null, null, !216} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from REGEXP]
!216 = !{!"0x16\00REGEXP\002030\000\000\000\000", !43, null, !217} ; [ DW_TAG_typedef ] [REGEXP] [line 2030, size 0, align 0, offset 0] [from regexp]
!217 = !{!"0x13\00regexp\0031\00832\0064\000\000\000", !218, null, null, !219, null, null, null} ; [ DW_TAG_structure_type ] [regexp] [line 31, size 832, align 64, offset 0] [def] [from ]
!218 = !{!"./regexp.h", !"/tmp/perlbench"}
!219 = !{!220, !222, !223, !231, !246, !247, !255, !256, !258, !259, !260, !261, !262, !263, !264, !265, !266}
!220 = !{!"0xd\00startp\0032\0064\0064\000\000", !218, !217, !221} ; [ DW_TAG_member ] [startp] [line 32, size 64, align 64, offset 0] [from ]
!221 = !{!"0xf\00\000\0064\0064\000\000", null, null, !157} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from I32]
!222 = !{!"0xd\00endp\0033\0064\0064\0064\000", !218, !217, !221} ; [ DW_TAG_member ] [endp] [line 33, size 64, align 64, offset 64] [from ]
!223 = !{!"0xd\00regstclass\0034\0064\0064\00128\000", !218, !217, !224} ; [ DW_TAG_member ] [regstclass] [line 34, size 64, align 64, offset 128] [from ]
!224 = !{!"0xf\00\000\0064\0064\000\000", null, null, !225} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regnode]
!225 = !{!"0x16\00regnode\0025\000\000\000\000", !218, null, !226} ; [ DW_TAG_typedef ] [regnode] [line 25, size 0, align 0, offset 0] [from regnode]
!226 = !{!"0x13\00regnode\0019\0032\0016\000\000\000", !218, null, null, !227, null, null, null} ; [ DW_TAG_structure_type ] [regnode] [line 19, size 32, align 16, offset 0] [def] [from ]
!227 = !{!228, !229, !230}
!228 = !{!"0xd\00flags\0020\008\008\000\000", !218, !226, !54} ; [ DW_TAG_member ] [flags] [line 20, size 8, align 8, offset 0] [from U8]
!229 = !{!"0xd\00type\0021\008\008\008\000", !218, !226, !54} ; [ DW_TAG_member ] [type] [line 21, size 8, align 8, offset 8] [from U8]
!230 = !{!"0xd\00next_off\0022\0016\0016\0016\000", !218, !226, !197} ; [ DW_TAG_member ] [next_off] [line 22, size 16, align 16, offset 16] [from U16]
!231 = !{!"0xd\00substrs\0035\0064\0064\00192\000", !218, !217, !232} ; [ DW_TAG_member ] [substrs] [line 35, size 64, align 64, offset 192] [from ]
!232 = !{!"0xf\00\000\0064\0064\000\000", null, null, !233} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from reg_substr_data]
!233 = !{!"0x13\00reg_substr_data\00394\00576\0064\000\000\000", !234, null, null, !235, null, null, null} ; [ DW_TAG_structure_type ] [reg_substr_data] [line 394, size 576, align 64, offset 0] [def] [from ]
!234 = !{!"./regcomp.h", !"/tmp/perlbench"}
!235 = !{!236}
!236 = !{!"0xd\00data\00395\00576\0064\000\000", !234, !233, !237} ; [ DW_TAG_member ] [data] [line 395, size 576, align 64, offset 0] [from ]
!237 = !{!"0x1\00\000\00576\0064\000\000\000", null, null, !238, !244, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 576, align 64, offset 0] [from reg_substr_datum]
!238 = !{!"0x13\00reg_substr_datum\00387\00192\0064\000\000\000", !234, null, null, !239, null, null, null} ; [ DW_TAG_structure_type ] [reg_substr_datum] [line 387, size 192, align 64, offset 0] [def] [from ]
!239 = !{!240, !241, !242, !243}
!240 = !{!"0xd\00min_offset\00388\0032\0032\000\000", !234, !238, !157} ; [ DW_TAG_member ] [min_offset] [line 388, size 32, align 32, offset 0] [from I32]
!241 = !{!"0xd\00max_offset\00389\0032\0032\0032\000", !234, !238, !157} ; [ DW_TAG_member ] [max_offset] [line 389, size 32, align 32, offset 32] [from I32]
!242 = !{!"0xd\00substr\00390\0064\0064\0064\000", !234, !238, !87} ; [ DW_TAG_member ] [substr] [line 390, size 64, align 64, offset 64] [from ]
!243 = !{!"0xd\00utf8_substr\00391\0064\0064\00128\000", !234, !238, !87} ; [ DW_TAG_member ] [utf8_substr] [line 391, size 64, align 64, offset 128] [from ]
!244 = !{!245}
!245 = !{!"0x21\000\003"}                         ; [ DW_TAG_subrange_type ] [0, 2]
!246 = !{!"0xd\00precomp\0036\0064\0064\00256\000", !218, !217, !39} ; [ DW_TAG_member ] [precomp] [line 36, size 64, align 64, offset 256] [from ]
!247 = !{!"0xd\00data\0037\0064\0064\00320\000", !218, !217, !248} ; [ DW_TAG_member ] [data] [line 37, size 64, align 64, offset 320] [from ]
!248 = !{!"0xf\00\000\0064\0064\000\000", null, null, !249} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from reg_data]
!249 = !{!"0x13\00reg_data\00381\00192\0064\000\000\000", !234, null, null, !250, null, null, null} ; [ DW_TAG_structure_type ] [reg_data] [line 381, size 192, align 64, offset 0] [def] [from ]
!250 = !{!251, !252, !253}
!251 = !{!"0xd\00count\00382\0032\0032\000\000", !234, !249, !93} ; [ DW_TAG_member ] [count] [line 382, size 32, align 32, offset 0] [from U32]
!252 = !{!"0xd\00what\00383\0064\0064\0064\000", !234, !249, !53} ; [ DW_TAG_member ] [what] [line 383, size 64, align 64, offset 64] [from ]
!253 = !{!"0xd\00data\00384\0064\0064\00128\000", !234, !249, !254} ; [ DW_TAG_member ] [data] [line 384, size 64, align 64, offset 128] [from ]
!254 = !{!"0x1\00\000\0064\0064\000\000\000", null, null, !38, !173, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 64, align 64, offset 0] [from ]
!255 = !{!"0xd\00subbeg\0038\0064\0064\00384\000", !218, !217, !39} ; [ DW_TAG_member ] [subbeg] [line 38, size 64, align 64, offset 384] [from ]
!256 = !{!"0xd\00offsets\0040\0064\0064\00448\000", !218, !217, !257} ; [ DW_TAG_member ] [offsets] [line 40, size 64, align 64, offset 448] [from ]
!257 = !{!"0xf\00\000\0064\0064\000\000", null, null, !93} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from U32]
!258 = !{!"0xd\00sublen\0041\0032\0032\00512\000", !218, !217, !157} ; [ DW_TAG_member ] [sublen] [line 41, size 32, align 32, offset 512] [from I32]
!259 = !{!"0xd\00refcnt\0042\0032\0032\00544\000", !218, !217, !157} ; [ DW_TAG_member ] [refcnt] [line 42, size 32, align 32, offset 544] [from I32]
!260 = !{!"0xd\00minlen\0043\0032\0032\00576\000", !218, !217, !157} ; [ DW_TAG_member ] [minlen] [line 43, size 32, align 32, offset 576] [from I32]
!261 = !{!"0xd\00prelen\0044\0032\0032\00608\000", !218, !217, !157} ; [ DW_TAG_member ] [prelen] [line 44, size 32, align 32, offset 608] [from I32]
!262 = !{!"0xd\00nparens\0045\0032\0032\00640\000", !218, !217, !93} ; [ DW_TAG_member ] [nparens] [line 45, size 32, align 32, offset 640] [from U32]
!263 = !{!"0xd\00lastparen\0046\0032\0032\00672\000", !218, !217, !93} ; [ DW_TAG_member ] [lastparen] [line 46, size 32, align 32, offset 672] [from U32]
!264 = !{!"0xd\00lastcloseparen\0047\0032\0032\00704\000", !218, !217, !93} ; [ DW_TAG_member ] [lastcloseparen] [line 47, size 32, align 32, offset 704] [from U32]
!265 = !{!"0xd\00reganch\0048\0032\0032\00736\000", !218, !217, !93} ; [ DW_TAG_member ] [reganch] [line 48, size 32, align 32, offset 736] [from U32]
!266 = !{!"0xd\00program\0050\0032\0016\00768\000", !218, !217, !267} ; [ DW_TAG_member ] [program] [line 50, size 32, align 16, offset 768] [from ]
!267 = !{!"0x1\00\000\0032\0016\000\000\000", null, null, !225, !173, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 32, align 16, offset 0] [from regnode]
!268 = !{!"0xd\00op_pmflags\00265\0032\0032\00704\000", !180, !179, !93} ; [ DW_TAG_member ] [op_pmflags] [line 265, size 32, align 32, offset 704] [from U32]
!269 = !{!"0xd\00op_pmpermflags\00266\0032\0032\00736\000", !180, !179, !93} ; [ DW_TAG_member ] [op_pmpermflags] [line 266, size 32, align 32, offset 736] [from U32]
!270 = !{!"0xd\00op_pmdynflags\00267\008\008\00768\000", !180, !179, !54} ; [ DW_TAG_member ] [op_pmdynflags] [line 267, size 8, align 8, offset 768] [from U8]
!271 = !{!"0xd\00op_pmstash\00271\0064\0064\00832\000", !180, !179, !139} ; [ DW_TAG_member ] [op_pmstash] [line 271, size 64, align 64, offset 832] [from ]
!272 = !{!"0xd\00xhv_name\0047\0064\0064\00640\000", !147, !146, !39} ; [ DW_TAG_member ] [xhv_name] [line 47, size 64, align 64, offset 640] [from ]
!273 = !{!"0xd\00sv_refcnt\0093\0032\0032\0064\000", !4, !141, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 93, size 32, align 32, offset 64] [from U32]
!274 = !{!"0xd\00sv_flags\0094\0032\0032\0096\000", !4, !141, !93} ; [ DW_TAG_member ] [sv_flags] [line 94, size 32, align 32, offset 96] [from U32]
!275 = !{!"0xd\00xav_alloc\0020\0064\0064\00448\000", !126, !125, !276} ; [ DW_TAG_member ] [xav_alloc] [line 20, size 64, align 64, offset 448] [from ]
!276 = !{!"0xf\00\000\0064\0064\000\000", null, null, !87} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!277 = !{!"0xd\00xav_arylen\0021\0064\0064\00512\000", !126, !125, !87} ; [ DW_TAG_member ] [xav_arylen] [line 21, size 64, align 64, offset 512] [from ]
!278 = !{!"0xd\00xav_flags\0022\008\008\00576\000", !126, !125, !54} ; [ DW_TAG_member ] [xav_flags] [line 22, size 8, align 8, offset 576] [from U8]
!279 = !{!"0xd\00sv_refcnt\0087\0032\0032\0064\000", !4, !120, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 87, size 32, align 32, offset 64] [from U32]
!280 = !{!"0xd\00sv_flags\0088\0032\0032\0096\000", !4, !120, !93} ; [ DW_TAG_member ] [sv_flags] [line 88, size 32, align 32, offset 96] [from U32]
!281 = !{!"0xd\00flags\001263\0064\0064\0064\000", !4, !115, !282} ; [ DW_TAG_member ] [flags] [line 1263, size 64, align 64, offset 64] [from UV]
!282 = !{!"0x16\00UV\001324\000\000\000\000", !43, null, !51} ; [ DW_TAG_typedef ] [UV] [line 1324, size 0, align 0, offset 0] [from long unsigned int]
!283 = !{!"0xd\00proto_perl\001264\0064\0064\00128\000", !4, !115, !284} ; [ DW_TAG_member ] [proto_perl] [line 1264, size 64, align 64, offset 128] [from ]
!284 = !{!"0xf\00\000\0064\0064\000\000", null, null, !285} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PerlInterpreter]
!285 = !{!"0x16\00PerlInterpreter\002017\000\000\000\000", !43, null, !286} ; [ DW_TAG_typedef ] [PerlInterpreter] [line 2017, size 0, align 0, offset 0] [from interpreter]
!286 = !{!"0x13\00interpreter\003751\008\008\000\000\000", !43, null, null, !287, null, null, null} ; [ DW_TAG_structure_type ] [interpreter] [line 3751, size 8, align 8, offset 0] [def] [from ]
!287 = !{!288}
!288 = !{!"0xd\00broiled\003752\008\008\000\000", !43, !286, !40} ; [ DW_TAG_member ] [broiled] [line 3752, size 8, align 8, offset 0] [from char]
!289 = !{!"0xd\00mg_private\0029\0016\0016\00128\000", !74, !73, !197} ; [ DW_TAG_member ] [mg_private] [line 29, size 16, align 16, offset 128] [from U16]
!290 = !{!"0xd\00mg_type\0030\008\008\00144\000", !74, !73, !40} ; [ DW_TAG_member ] [mg_type] [line 30, size 8, align 8, offset 144] [from char]
!291 = !{!"0xd\00mg_flags\0031\008\008\00152\000", !74, !73, !54} ; [ DW_TAG_member ] [mg_flags] [line 31, size 8, align 8, offset 152] [from U8]
!292 = !{!"0xd\00mg_obj\0032\0064\0064\00192\000", !74, !73, !87} ; [ DW_TAG_member ] [mg_obj] [line 32, size 64, align 64, offset 192] [from ]
!293 = !{!"0xd\00mg_ptr\0033\0064\0064\00256\000", !74, !73, !39} ; [ DW_TAG_member ] [mg_ptr] [line 33, size 64, align 64, offset 256] [from ]
!294 = !{!"0xd\00mg_len\0034\0032\0032\00320\000", !74, !73, !157} ; [ DW_TAG_member ] [mg_len] [line 34, size 32, align 32, offset 320] [from I32]
!295 = !{!"0xd\00xmg_stash\00327\0064\0064\00384\000", !4, !59, !139} ; [ DW_TAG_member ] [xmg_stash] [line 327, size 64, align 64, offset 384] [from ]
!296 = !{!"0xd\00xbm_useful\00329\0032\0032\00448\000", !4, !59, !157} ; [ DW_TAG_member ] [xbm_useful] [line 329, size 32, align 32, offset 448] [from I32]
!297 = !{!"0xd\00xbm_previous\00330\0016\0016\00480\000", !4, !59, !197} ; [ DW_TAG_member ] [xbm_previous] [line 330, size 16, align 16, offset 480] [from U16]
!298 = !{!"0xd\00xbm_rare\00331\008\008\00496\000", !4, !59, !54} ; [ DW_TAG_member ] [xbm_rare] [line 331, size 8, align 8, offset 496] [from U8]
!299 = !{!"0xf\00\000\0064\0064\000\000", null, null, !56} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from unsigned char]
!300 = !{!"0xf\00\000\0064\0064\000\000", null, null, !301} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regnode_string]
!301 = !{!"0x13\00regnode_string\0075\0048\0016\000\000\000", !234, null, null, !302, null, null, null} ; [ DW_TAG_structure_type ] [regnode_string] [line 75, size 48, align 16, offset 0] [def] [from ]
!302 = !{!303, !304, !305, !306}
!303 = !{!"0xd\00str_len\0076\008\008\000\000", !234, !301, !54} ; [ DW_TAG_member ] [str_len] [line 76, size 8, align 8, offset 0] [from U8]
!304 = !{!"0xd\00type\0077\008\008\008\000", !234, !301, !54} ; [ DW_TAG_member ] [type] [line 77, size 8, align 8, offset 8] [from U8]
!305 = !{!"0xd\00next_off\0078\0016\0016\0016\000", !234, !301, !197} ; [ DW_TAG_member ] [next_off] [line 78, size 16, align 16, offset 16] [from U16]
!306 = !{!"0xd\00string\0079\008\008\0032\000", !234, !301, !172} ; [ DW_TAG_member ] [string] [line 79, size 8, align 8, offset 32] [from ]
!307 = !{!"0xf\00\000\0064\0064\000\000", null, null, !308} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVGV]
!308 = !{!"0x16\00XPVGV\002047\000\000\000\000", !43, null, !309} ; [ DW_TAG_typedef ] [XPVGV] [line 2047, size 0, align 0, offset 0] [from xpvgv]
!309 = !{!"0x13\00xpvgv\00304\00768\0064\000\000\000", !4, null, null, !310, null, null, null} ; [ DW_TAG_structure_type ] [xpvgv] [line 304, size 768, align 64, offset 0] [def] [from ]
!310 = !{!311, !312, !313, !314, !315, !316, !317, !318, !442, !443, !444, !445}
!311 = !{!"0xd\00xpv_pv\00305\0064\0064\000\000", !4, !309, !39} ; [ DW_TAG_member ] [xpv_pv] [line 305, size 64, align 64, offset 0] [from ]
!312 = !{!"0xd\00xpv_cur\00306\0064\0064\0064\000", !4, !309, !48} ; [ DW_TAG_member ] [xpv_cur] [line 306, size 64, align 64, offset 64] [from STRLEN]
!313 = !{!"0xd\00xpv_len\00307\0064\0064\00128\000", !4, !309, !48} ; [ DW_TAG_member ] [xpv_len] [line 307, size 64, align 64, offset 128] [from STRLEN]
!314 = !{!"0xd\00xiv_iv\00308\0064\0064\00192\000", !4, !309, !65} ; [ DW_TAG_member ] [xiv_iv] [line 308, size 64, align 64, offset 192] [from IV]
!315 = !{!"0xd\00xnv_nv\00309\0064\0064\00256\000", !4, !309, !68} ; [ DW_TAG_member ] [xnv_nv] [line 309, size 64, align 64, offset 256] [from NV]
!316 = !{!"0xd\00xmg_magic\00310\0064\0064\00320\000", !4, !309, !71} ; [ DW_TAG_member ] [xmg_magic] [line 310, size 64, align 64, offset 320] [from ]
!317 = !{!"0xd\00xmg_stash\00311\0064\0064\00384\000", !4, !309, !139} ; [ DW_TAG_member ] [xmg_stash] [line 311, size 64, align 64, offset 384] [from ]
!318 = !{!"0xd\00xgv_gp\00313\0064\0064\00448\000", !4, !309, !319} ; [ DW_TAG_member ] [xgv_gp] [line 313, size 64, align 64, offset 448] [from ]
!319 = !{!"0xf\00\000\0064\0064\000\000", null, null, !320} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from GP]
!320 = !{!"0x16\00GP\002031\000\000\000\000", !43, null, !321} ; [ DW_TAG_typedef ] [GP] [line 2031, size 0, align 0, offset 0] [from gp]
!321 = !{!"0x13\00gp\0011\00704\0064\000\000\000", !322, null, null, !323, null, null, null} ; [ DW_TAG_structure_type ] [gp] [line 11, size 704, align 64, offset 0] [def] [from ]
!322 = !{!"./gv.h", !"/tmp/perlbench"}
!323 = !{!324, !325, !326, !382, !433, !434, !435, !436, !437, !438, !439, !441}
!324 = !{!"0xd\00gp_sv\0012\0064\0064\000\000", !322, !321, !87} ; [ DW_TAG_member ] [gp_sv] [line 12, size 64, align 64, offset 0] [from ]
!325 = !{!"0xd\00gp_refcnt\0013\0032\0032\0064\000", !322, !321, !93} ; [ DW_TAG_member ] [gp_refcnt] [line 13, size 32, align 32, offset 64] [from U32]
!326 = !{!"0xd\00gp_io\0014\0064\0064\00128\000", !322, !321, !327} ; [ DW_TAG_member ] [gp_io] [line 14, size 64, align 64, offset 128] [from ]
!327 = !{!"0xf\00\000\0064\0064\000\000", null, null, !328} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from io]
!328 = !{!"0x13\00io\0097\00128\0064\000\000\000", !4, null, null, !329, null, null, null} ; [ DW_TAG_structure_type ] [io] [line 97, size 128, align 64, offset 0] [def] [from ]
!329 = !{!330, !380, !381}
!330 = !{!"0xd\00sv_any\0098\0064\0064\000\000", !4, !328, !331} ; [ DW_TAG_member ] [sv_any] [line 98, size 64, align 64, offset 0] [from ]
!331 = !{!"0xf\00\000\0064\0064\000\000", null, null, !332} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVIO]
!332 = !{!"0x16\00XPVIO\002051\000\000\000\000", !43, null, !333} ; [ DW_TAG_typedef ] [XPVIO] [line 2051, size 0, align 0, offset 0] [from xpvio]
!333 = !{!"0x13\00xpvio\00368\001344\0064\000\000\000", !4, null, null, !334, null, null, null} ; [ DW_TAG_structure_type ] [xpvio] [line 368, size 1344, align 64, offset 0] [def] [from ]
!334 = !{!335, !336, !337, !338, !339, !340, !341, !342, !349, !350, !359, !360, !361, !362, !363, !364, !372, !373, !374, !375, !376, !378, !379}
!335 = !{!"0xd\00xpv_pv\00369\0064\0064\000\000", !4, !333, !39} ; [ DW_TAG_member ] [xpv_pv] [line 369, size 64, align 64, offset 0] [from ]
!336 = !{!"0xd\00xpv_cur\00370\0064\0064\0064\000", !4, !333, !48} ; [ DW_TAG_member ] [xpv_cur] [line 370, size 64, align 64, offset 64] [from STRLEN]
!337 = !{!"0xd\00xpv_len\00371\0064\0064\00128\000", !4, !333, !48} ; [ DW_TAG_member ] [xpv_len] [line 371, size 64, align 64, offset 128] [from STRLEN]
!338 = !{!"0xd\00xiv_iv\00372\0064\0064\00192\000", !4, !333, !65} ; [ DW_TAG_member ] [xiv_iv] [line 372, size 64, align 64, offset 192] [from IV]
!339 = !{!"0xd\00xnv_nv\00373\0064\0064\00256\000", !4, !333, !68} ; [ DW_TAG_member ] [xnv_nv] [line 373, size 64, align 64, offset 256] [from NV]
!340 = !{!"0xd\00xmg_magic\00374\0064\0064\00320\000", !4, !333, !71} ; [ DW_TAG_member ] [xmg_magic] [line 374, size 64, align 64, offset 320] [from ]
!341 = !{!"0xd\00xmg_stash\00375\0064\0064\00384\000", !4, !333, !139} ; [ DW_TAG_member ] [xmg_stash] [line 375, size 64, align 64, offset 384] [from ]
!342 = !{!"0xd\00xio_ifp\00377\0064\0064\00448\000", !4, !333, !343} ; [ DW_TAG_member ] [xio_ifp] [line 377, size 64, align 64, offset 448] [from ]
!343 = !{!"0xf\00\000\0064\0064\000\000", null, null, !344} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PerlIO]
!344 = !{!"0x16\00PerlIO\00101\000\000\000\000", !345, null, !346} ; [ DW_TAG_typedef ] [PerlIO] [line 101, size 0, align 0, offset 0] [from ]
!345 = !{!"./perlio.h", !"/tmp/perlbench"}
!346 = !{!"0xf\00\000\0064\0064\000\000", null, null, !347} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PerlIOl]
!347 = !{!"0x16\00PerlIOl\0099\000\000\000\000", !345, null, !348} ; [ DW_TAG_typedef ] [PerlIOl] [line 99, size 0, align 0, offset 0] [from _PerlIO]
!348 = !{!"0x13\00_PerlIO\0099\000\000\000\004\000", !345, null, null, null, null, null, null} ; [ DW_TAG_structure_type ] [_PerlIO] [line 99, size 0, align 0, offset 0] [decl] [from ]
!349 = !{!"0xd\00xio_ofp\00378\0064\0064\00512\000", !4, !333, !343} ; [ DW_TAG_member ] [xio_ofp] [line 378, size 64, align 64, offset 512] [from ]
!350 = !{!"0xd\00xio_dirpu\00391\0064\0064\00576\000", !4, !333, !351} ; [ DW_TAG_member ] [xio_dirpu] [line 391, size 64, align 64, offset 576] [from ]
!351 = !{!"0x17\00\00388\0064\0064\000\000\000", !4, !333, null, !352, null, null, null} ; [ DW_TAG_union_type ] [line 388, size 64, align 64, offset 0] [def] [from ]
!352 = !{!353, !358}
!353 = !{!"0xd\00xiou_dirp\00389\0064\0064\000\000", !4, !351, !354} ; [ DW_TAG_member ] [xiou_dirp] [line 389, size 64, align 64, offset 0] [from ]
!354 = !{!"0xf\00\000\0064\0064\000\000", null, null, !355} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from DIR]
!355 = !{!"0x16\00DIR\00127\000\000\000\000", !356, null, !357} ; [ DW_TAG_typedef ] [DIR] [line 127, size 0, align 0, offset 0] [from __dirstream]
!356 = !{!"/usr/include/dirent.h", !"/tmp/perlbench"}
!357 = !{!"0x13\00__dirstream\00127\000\000\000\004\000", !356, null, null, null, null, null, null} ; [ DW_TAG_structure_type ] [__dirstream] [line 127, size 0, align 0, offset 0] [decl] [from ]
!358 = !{!"0xd\00xiou_any\00390\0064\0064\000\000", !4, !351, !38} ; [ DW_TAG_member ] [xiou_any] [line 390, size 64, align 64, offset 0] [from ]
!359 = !{!"0xd\00xio_lines\00392\0064\0064\00640\000", !4, !333, !65} ; [ DW_TAG_member ] [xio_lines] [line 392, size 64, align 64, offset 640] [from IV]
!360 = !{!"0xd\00xio_page\00393\0064\0064\00704\000", !4, !333, !65} ; [ DW_TAG_member ] [xio_page] [line 393, size 64, align 64, offset 704] [from IV]
!361 = !{!"0xd\00xio_page_len\00394\0064\0064\00768\000", !4, !333, !65} ; [ DW_TAG_member ] [xio_page_len] [line 394, size 64, align 64, offset 768] [from IV]
!362 = !{!"0xd\00xio_lines_left\00395\0064\0064\00832\000", !4, !333, !65} ; [ DW_TAG_member ] [xio_lines_left] [line 395, size 64, align 64, offset 832] [from IV]
!363 = !{!"0xd\00xio_top_name\00396\0064\0064\00896\000", !4, !333, !39} ; [ DW_TAG_member ] [xio_top_name] [line 396, size 64, align 64, offset 896] [from ]
!364 = !{!"0xd\00xio_top_gv\00397\0064\0064\00960\000", !4, !333, !365} ; [ DW_TAG_member ] [xio_top_gv] [line 397, size 64, align 64, offset 960] [from ]
!365 = !{!"0xf\00\000\0064\0064\000\000", null, null, !366} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from GV]
!366 = !{!"0x16\00GV\002032\000\000\000\000", !43, null, !367} ; [ DW_TAG_typedef ] [GV] [line 2032, size 0, align 0, offset 0] [from gv]
!367 = !{!"0x13\00gv\0073\00128\0064\000\000\000", !4, null, null, !368, null, null, null} ; [ DW_TAG_structure_type ] [gv] [line 73, size 128, align 64, offset 0] [def] [from ]
!368 = !{!369, !370, !371}
!369 = !{!"0xd\00sv_any\0074\0064\0064\000\000", !4, !367, !307} ; [ DW_TAG_member ] [sv_any] [line 74, size 64, align 64, offset 0] [from ]
!370 = !{!"0xd\00sv_refcnt\0075\0032\0032\0064\000", !4, !367, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 75, size 32, align 32, offset 64] [from U32]
!371 = !{!"0xd\00sv_flags\0076\0032\0032\0096\000", !4, !367, !93} ; [ DW_TAG_member ] [sv_flags] [line 76, size 32, align 32, offset 96] [from U32]
!372 = !{!"0xd\00xio_fmt_name\00398\0064\0064\001024\000", !4, !333, !39} ; [ DW_TAG_member ] [xio_fmt_name] [line 398, size 64, align 64, offset 1024] [from ]
!373 = !{!"0xd\00xio_fmt_gv\00399\0064\0064\001088\000", !4, !333, !365} ; [ DW_TAG_member ] [xio_fmt_gv] [line 399, size 64, align 64, offset 1088] [from ]
!374 = !{!"0xd\00xio_bottom_name\00400\0064\0064\001152\000", !4, !333, !39} ; [ DW_TAG_member ] [xio_bottom_name] [line 400, size 64, align 64, offset 1152] [from ]
!375 = !{!"0xd\00xio_bottom_gv\00401\0064\0064\001216\000", !4, !333, !365} ; [ DW_TAG_member ] [xio_bottom_gv] [line 401, size 64, align 64, offset 1216] [from ]
!376 = !{!"0xd\00xio_subprocess\00402\0016\0016\001280\000", !4, !333, !377} ; [ DW_TAG_member ] [xio_subprocess] [line 402, size 16, align 16, offset 1280] [from short]
!377 = !{!"0x24\00short\000\0016\0016\000\000\005", null, null} ; [ DW_TAG_base_type ] [short] [line 0, size 16, align 16, offset 0, enc DW_ATE_signed]
!378 = !{!"0xd\00xio_type\00403\008\008\001296\000", !4, !333, !40} ; [ DW_TAG_member ] [xio_type] [line 403, size 8, align 8, offset 1296] [from char]
!379 = !{!"0xd\00xio_flags\00404\008\008\001304\000", !4, !333, !40} ; [ DW_TAG_member ] [xio_flags] [line 404, size 8, align 8, offset 1304] [from char]
!380 = !{!"0xd\00sv_refcnt\0099\0032\0032\0064\000", !4, !328, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 99, size 32, align 32, offset 64] [from U32]
!381 = !{!"0xd\00sv_flags\00100\0032\0032\0096\000", !4, !328, !93} ; [ DW_TAG_member ] [sv_flags] [line 100, size 32, align 32, offset 96] [from U32]
!382 = !{!"0xd\00gp_form\0015\0064\0064\00192\000", !322, !321, !383} ; [ DW_TAG_member ] [gp_form] [line 15, size 64, align 64, offset 192] [from ]
!383 = !{!"0xf\00\000\0064\0064\000\000", null, null, !384} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from CV]
!384 = !{!"0x16\00CV\002029\000\000\000\000", !43, null, !385} ; [ DW_TAG_typedef ] [CV] [line 2029, size 0, align 0, offset 0] [from cv]
!385 = !{!"0x13\00cv\0079\00128\0064\000\000\000", !4, null, null, !386, null, null, null} ; [ DW_TAG_structure_type ] [cv] [line 79, size 128, align 64, offset 0] [def] [from ]
!386 = !{!387, !431, !432}
!387 = !{!"0xd\00sv_any\0080\0064\0064\000\000", !4, !385, !388} ; [ DW_TAG_member ] [sv_any] [line 80, size 64, align 64, offset 0] [from ]
!388 = !{!"0xf\00\000\0064\0064\000\000", null, null, !389} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVCV]
!389 = !{!"0x16\00XPVCV\002048\000\000\000\000", !43, null, !390} ; [ DW_TAG_typedef ] [XPVCV] [line 2048, size 0, align 0, offset 0] [from xpvcv]
!390 = !{!"0x13\00xpvcv\0014\001152\0064\000\000\000", !391, null, null, !392, null, null, null} ; [ DW_TAG_structure_type ] [xpvcv] [line 14, size 1152, align 64, offset 0] [def] [from ]
!391 = !{!"./cv.h", !"/tmp/perlbench"}
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !407, !421, !422, !423, !424, !427, !428, !430}
!393 = !{!"0xd\00xpv_pv\0015\0064\0064\000\000", !391, !390, !39} ; [ DW_TAG_member ] [xpv_pv] [line 15, size 64, align 64, offset 0] [from ]
!394 = !{!"0xd\00xpv_cur\0016\0064\0064\0064\000", !391, !390, !48} ; [ DW_TAG_member ] [xpv_cur] [line 16, size 64, align 64, offset 64] [from STRLEN]
!395 = !{!"0xd\00xpv_len\0017\0064\0064\00128\000", !391, !390, !48} ; [ DW_TAG_member ] [xpv_len] [line 17, size 64, align 64, offset 128] [from STRLEN]
!396 = !{!"0xd\00xof_off\0018\0064\0064\00192\000", !391, !390, !65} ; [ DW_TAG_member ] [xof_off] [line 18, size 64, align 64, offset 192] [from IV]
!397 = !{!"0xd\00xnv_nv\0019\0064\0064\00256\000", !391, !390, !68} ; [ DW_TAG_member ] [xnv_nv] [line 19, size 64, align 64, offset 256] [from NV]
!398 = !{!"0xd\00xmg_magic\0020\0064\0064\00320\000", !391, !390, !71} ; [ DW_TAG_member ] [xmg_magic] [line 20, size 64, align 64, offset 320] [from ]
!399 = !{!"0xd\00xmg_stash\0021\0064\0064\00384\000", !391, !390, !139} ; [ DW_TAG_member ] [xmg_stash] [line 21, size 64, align 64, offset 384] [from ]
!400 = !{!"0xd\00xcv_stash\0023\0064\0064\00448\000", !391, !390, !139} ; [ DW_TAG_member ] [xcv_stash] [line 23, size 64, align 64, offset 448] [from ]
!401 = !{!"0xd\00xcv_start\0024\0064\0064\00512\000", !391, !390, !183} ; [ DW_TAG_member ] [xcv_start] [line 24, size 64, align 64, offset 512] [from ]
!402 = !{!"0xd\00xcv_root\0025\0064\0064\00576\000", !391, !390, !183} ; [ DW_TAG_member ] [xcv_root] [line 25, size 64, align 64, offset 576] [from ]
!403 = !{!"0xd\00xcv_xsub\0026\0064\0064\00640\000", !391, !390, !404} ; [ DW_TAG_member ] [xcv_xsub] [line 26, size 64, align 64, offset 640] [from ]
!404 = !{!"0xf\00\000\0064\0064\000\000", null, null, !405} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!405 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !406, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!406 = !{null, !383}
!407 = !{!"0xd\00xcv_xsubany\0027\0064\0064\00704\000", !391, !390, !408} ; [ DW_TAG_member ] [xcv_xsubany] [line 27, size 64, align 64, offset 704] [from ANY]
!408 = !{!"0x16\00ANY\002053\000\000\000\000", !43, null, !409} ; [ DW_TAG_typedef ] [ANY] [line 2053, size 0, align 0, offset 0] [from any]
!409 = !{!"0x17\00any\002545\0064\0064\000\000\000", !43, null, null, !410, null, null, null} ; [ DW_TAG_union_type ] [any] [line 2545, size 64, align 64, offset 0] [def] [from ]
!410 = !{!411, !412, !413, !414, !415, !416, !420}
!411 = !{!"0xd\00any_ptr\002546\0064\0064\000\000", !43, !409, !38} ; [ DW_TAG_member ] [any_ptr] [line 2546, size 64, align 64, offset 0] [from ]
!412 = !{!"0xd\00any_i32\002547\0032\0032\000\000", !43, !409, !157} ; [ DW_TAG_member ] [any_i32] [line 2547, size 32, align 32, offset 0] [from I32]
!413 = !{!"0xd\00any_iv\002548\0064\0064\000\000", !43, !409, !65} ; [ DW_TAG_member ] [any_iv] [line 2548, size 64, align 64, offset 0] [from IV]
!414 = !{!"0xd\00any_long\002549\0064\0064\000\000", !43, !409, !66} ; [ DW_TAG_member ] [any_long] [line 2549, size 64, align 64, offset 0] [from long int]
!415 = !{!"0xd\00any_bool\002550\008\008\000\000", !43, !409, !40} ; [ DW_TAG_member ] [any_bool] [line 2550, size 8, align 8, offset 0] [from char]
!416 = !{!"0xd\00any_dptr\002551\0064\0064\000\000", !43, !409, !417} ; [ DW_TAG_member ] [any_dptr] [line 2551, size 64, align 64, offset 0] [from ]
!417 = !{!"0xf\00\000\0064\0064\000\000", null, null, !418} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!418 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !419, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!419 = !{null, !38}
!420 = !{!"0xd\00any_dxptr\002552\0064\0064\000\000", !43, !409, !417} ; [ DW_TAG_member ] [any_dxptr] [line 2552, size 64, align 64, offset 0] [from ]
!421 = !{!"0xd\00xcv_gv\0028\0064\0064\00768\000", !391, !390, !365} ; [ DW_TAG_member ] [xcv_gv] [line 28, size 64, align 64, offset 768] [from ]
!422 = !{!"0xd\00xcv_file\0029\0064\0064\00832\000", !391, !390, !39} ; [ DW_TAG_member ] [xcv_file] [line 29, size 64, align 64, offset 832] [from ]
!423 = !{!"0xd\00xcv_depth\0030\0064\0064\00896\000", !391, !390, !66} ; [ DW_TAG_member ] [xcv_depth] [line 30, size 64, align 64, offset 896] [from long int]
!424 = !{!"0xd\00xcv_padlist\0031\0064\0064\00960\000", !391, !390, !425} ; [ DW_TAG_member ] [xcv_padlist] [line 31, size 64, align 64, offset 960] [from ]
!425 = !{!"0xf\00\000\0064\0064\000\000", null, null, !426} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PADLIST]
!426 = !{!"0x16\00PADLIST\0019\000\000\000\000", !195, null, !119} ; [ DW_TAG_typedef ] [PADLIST] [line 19, size 0, align 0, offset 0] [from AV]
!427 = !{!"0xd\00xcv_outside\0032\0064\0064\001024\000", !391, !390, !383} ; [ DW_TAG_member ] [xcv_outside] [line 32, size 64, align 64, offset 1024] [from ]
!428 = !{!"0xd\00xcv_flags\0037\0016\0016\001088\000", !391, !390, !429} ; [ DW_TAG_member ] [xcv_flags] [line 37, size 16, align 16, offset 1088] [from cv_flags_t]
!429 = !{!"0x16\00cv_flags_t\00336\000\000\000\000", !4, null, !197} ; [ DW_TAG_typedef ] [cv_flags_t] [line 336, size 0, align 0, offset 0] [from U16]
!430 = !{!"0xd\00xcv_outside_seq\0038\0032\0032\001120\000", !391, !390, !93} ; [ DW_TAG_member ] [xcv_outside_seq] [line 38, size 32, align 32, offset 1120] [from U32]
!431 = !{!"0xd\00sv_refcnt\0081\0032\0032\0064\000", !4, !385, !93} ; [ DW_TAG_member ] [sv_refcnt] [line 81, size 32, align 32, offset 64] [from U32]
!432 = !{!"0xd\00sv_flags\0082\0032\0032\0096\000", !4, !385, !93} ; [ DW_TAG_member ] [sv_flags] [line 82, size 32, align 32, offset 96] [from U32]
!433 = !{!"0xd\00gp_av\0016\0064\0064\00256\000", !322, !321, !118} ; [ DW_TAG_member ] [gp_av] [line 16, size 64, align 64, offset 256] [from ]
!434 = !{!"0xd\00gp_hv\0017\0064\0064\00320\000", !322, !321, !139} ; [ DW_TAG_member ] [gp_hv] [line 17, size 64, align 64, offset 320] [from ]
!435 = !{!"0xd\00gp_egv\0018\0064\0064\00384\000", !322, !321, !365} ; [ DW_TAG_member ] [gp_egv] [line 18, size 64, align 64, offset 384] [from ]
!436 = !{!"0xd\00gp_cv\0019\0064\0064\00448\000", !322, !321, !383} ; [ DW_TAG_member ] [gp_cv] [line 19, size 64, align 64, offset 448] [from ]
!437 = !{!"0xd\00gp_cvgen\0020\0032\0032\00512\000", !322, !321, !93} ; [ DW_TAG_member ] [gp_cvgen] [line 20, size 32, align 32, offset 512] [from U32]
!438 = !{!"0xd\00gp_flags\0021\0032\0032\00544\000", !322, !321, !93} ; [ DW_TAG_member ] [gp_flags] [line 21, size 32, align 32, offset 544] [from U32]
!439 = !{!"0xd\00gp_line\0022\0032\0032\00576\000", !322, !321, !440} ; [ DW_TAG_member ] [gp_line] [line 22, size 32, align 32, offset 576] [from line_t]
!440 = !{!"0x16\00line_t\00521\000\000\000\000", !55, null, !93} ; [ DW_TAG_typedef ] [line_t] [line 521, size 0, align 0, offset 0] [from U32]
!441 = !{!"0xd\00gp_file\0023\0064\0064\00640\000", !322, !321, !39} ; [ DW_TAG_member ] [gp_file] [line 23, size 64, align 64, offset 640] [from ]
!442 = !{!"0xd\00xgv_name\00314\0064\0064\00512\000", !4, !309, !39} ; [ DW_TAG_member ] [xgv_name] [line 314, size 64, align 64, offset 512] [from ]
!443 = !{!"0xd\00xgv_namelen\00315\0064\0064\00576\000", !4, !309, !48} ; [ DW_TAG_member ] [xgv_namelen] [line 315, size 64, align 64, offset 576] [from STRLEN]
!444 = !{!"0xd\00xgv_stash\00316\0064\0064\00640\000", !4, !309, !139} ; [ DW_TAG_member ] [xgv_stash] [line 316, size 64, align 64, offset 640] [from ]
!445 = !{!"0xd\00xgv_flags\00317\008\008\00704\000", !4, !309, !54} ; [ DW_TAG_member ] [xgv_flags] [line 317, size 8, align 8, offset 704] [from U8]
!446 = !{!"0xf\00\000\0064\0064\000\000", null, null, !447} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVMG]
!447 = !{!"0x16\00XPVMG\002043\000\000\000\000", !43, null, !448} ; [ DW_TAG_typedef ] [XPVMG] [line 2043, size 0, align 0, offset 0] [from xpvmg]
!448 = !{!"0x13\00xpvmg\00278\00448\0064\000\000\000", !4, null, null, !449, null, null, null} ; [ DW_TAG_structure_type ] [xpvmg] [line 278, size 448, align 64, offset 0] [def] [from ]
!449 = !{!450, !451, !452, !453, !454, !455, !456}
!450 = !{!"0xd\00xpv_pv\00279\0064\0064\000\000", !4, !448, !39} ; [ DW_TAG_member ] [xpv_pv] [line 279, size 64, align 64, offset 0] [from ]
!451 = !{!"0xd\00xpv_cur\00280\0064\0064\0064\000", !4, !448, !48} ; [ DW_TAG_member ] [xpv_cur] [line 280, size 64, align 64, offset 64] [from STRLEN]
!452 = !{!"0xd\00xpv_len\00281\0064\0064\00128\000", !4, !448, !48} ; [ DW_TAG_member ] [xpv_len] [line 281, size 64, align 64, offset 128] [from STRLEN]
!453 = !{!"0xd\00xiv_iv\00282\0064\0064\00192\000", !4, !448, !65} ; [ DW_TAG_member ] [xiv_iv] [line 282, size 64, align 64, offset 192] [from IV]
!454 = !{!"0xd\00xnv_nv\00283\0064\0064\00256\000", !4, !448, !68} ; [ DW_TAG_member ] [xnv_nv] [line 283, size 64, align 64, offset 256] [from NV]
!455 = !{!"0xd\00xmg_magic\00284\0064\0064\00320\000", !4, !448, !71} ; [ DW_TAG_member ] [xmg_magic] [line 284, size 64, align 64, offset 320] [from ]
!456 = !{!"0xd\00xmg_stash\00285\0064\0064\00384\000", !4, !448, !139} ; [ DW_TAG_member ] [xmg_stash] [line 285, size 64, align 64, offset 384] [from ]
!457 = !{!"0xf\00\000\0064\0064\000\000", null, null, !458} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regnode_charclass]
!458 = !{!"0x13\00regnode_charclass\00100\00320\0032\000\000\000", !234, null, null, !459, null, null, null} ; [ DW_TAG_structure_type ] [regnode_charclass] [line 100, size 320, align 32, offset 0] [def] [from ]
!459 = !{!460, !461, !462, !463, !464}
!460 = !{!"0xd\00flags\00101\008\008\000\000", !234, !458, !54} ; [ DW_TAG_member ] [flags] [line 101, size 8, align 8, offset 0] [from U8]
!461 = !{!"0xd\00type\00102\008\008\008\000", !234, !458, !54} ; [ DW_TAG_member ] [type] [line 102, size 8, align 8, offset 8] [from U8]
!462 = !{!"0xd\00next_off\00103\0016\0016\0016\000", !234, !458, !197} ; [ DW_TAG_member ] [next_off] [line 103, size 16, align 16, offset 16] [from U16]
!463 = !{!"0xd\00arg1\00104\0032\0032\0032\000", !234, !458, !93} ; [ DW_TAG_member ] [arg1] [line 104, size 32, align 32, offset 32] [from U32]
!464 = !{!"0xd\00bitmap\00105\00256\008\0064\000", !234, !458, !465} ; [ DW_TAG_member ] [bitmap] [line 105, size 256, align 8, offset 64] [from ]
!465 = !{!"0x1\00\000\00256\008\000\000\000", null, null, !40, !466, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 256, align 8, offset 0] [from char]
!466 = !{!467}
!467 = !{!"0x21\000\0032"}                        ; [ DW_TAG_subrange_type ] [0, 31]
!468 = !{!"0xf\00\000\0064\0064\000\000", null, null, !469} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regnode_1]
!469 = !{!"0x13\00regnode_1\0082\0064\0032\000\000\000", !234, null, null, !470, null, null, null} ; [ DW_TAG_structure_type ] [regnode_1] [line 82, size 64, align 32, offset 0] [def] [from ]
!470 = !{!471, !472, !473, !474}
!471 = !{!"0xd\00flags\0083\008\008\000\000", !234, !469, !54} ; [ DW_TAG_member ] [flags] [line 83, size 8, align 8, offset 0] [from U8]
!472 = !{!"0xd\00type\0084\008\008\008\000", !234, !469, !54} ; [ DW_TAG_member ] [type] [line 84, size 8, align 8, offset 8] [from U8]
!473 = !{!"0xd\00next_off\0085\0016\0016\0016\000", !234, !469, !197} ; [ DW_TAG_member ] [next_off] [line 85, size 16, align 16, offset 16] [from U16]
!474 = !{!"0xd\00arg1\0086\0032\0032\0032\000", !234, !469, !93} ; [ DW_TAG_member ] [arg1] [line 86, size 32, align 32, offset 32] [from U32]
!475 = !{!"0xf\00\000\0064\0064\000\000", null, null, !476} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from OP_4tree]
!476 = !{!"0x16\00OP_4tree\0011\000\000\000\000", !234, null, !184} ; [ DW_TAG_typedef ] [OP_4tree] [line 11, size 0, align 0, offset 0] [from OP]
!477 = !{!"0xf\00\000\0064\0064\000\000", null, null, !478} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from PAD]
!478 = !{!"0x16\00PAD\0020\000\000\000\000", !195, null, !119} ; [ DW_TAG_typedef ] [PAD] [line 20, size 0, align 0, offset 0] [from AV]
!479 = !{!"0xf\00\000\0064\0064\000\000", null, null, !480} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XRV]
!480 = !{!"0x16\00XRV\002038\000\000\000\000", !43, null, !481} ; [ DW_TAG_typedef ] [XRV] [line 2038, size 0, align 0, offset 0] [from xrv]
!481 = !{!"0x13\00xrv\00245\0064\0064\000\000\000", !4, null, null, !482, null, null, null} ; [ DW_TAG_structure_type ] [xrv] [line 245, size 64, align 64, offset 0] [def] [from ]
!482 = !{!483}
!483 = !{!"0xd\00xrv_rv\00246\0064\0064\000\000", !4, !481, !87} ; [ DW_TAG_member ] [xrv_rv] [line 246, size 64, align 64, offset 0] [from ]
!484 = !{!"0xf\00\000\0064\0064\000\000", null, null, !485} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regexp]
!485 = !{!"0x16\00regexp\0051\000\000\000\000", !218, null, !217} ; [ DW_TAG_typedef ] [regexp] [line 51, size 0, align 0, offset 0] [from regexp]
!486 = !{!"0xf\00\000\0064\0064\000\000", null, null, !487} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVIV]
!487 = !{!"0x16\00XPVIV\002040\000\000\000\000", !43, null, !488} ; [ DW_TAG_typedef ] [XPVIV] [line 2040, size 0, align 0, offset 0] [from xpviv]
!488 = !{!"0x13\00xpviv\00255\00256\0064\000\000\000", !4, null, null, !489, null, null, null} ; [ DW_TAG_structure_type ] [xpviv] [line 255, size 256, align 64, offset 0] [def] [from ]
!489 = !{!490, !491, !492, !493}
!490 = !{!"0xd\00xpv_pv\00256\0064\0064\000\000", !4, !488, !39} ; [ DW_TAG_member ] [xpv_pv] [line 256, size 64, align 64, offset 0] [from ]
!491 = !{!"0xd\00xpv_cur\00257\0064\0064\0064\000", !4, !488, !48} ; [ DW_TAG_member ] [xpv_cur] [line 257, size 64, align 64, offset 64] [from STRLEN]
!492 = !{!"0xd\00xpv_len\00258\0064\0064\00128\000", !4, !488, !48} ; [ DW_TAG_member ] [xpv_len] [line 258, size 64, align 64, offset 128] [from STRLEN]
!493 = !{!"0xd\00xiv_iv\00259\0064\0064\00192\000", !4, !488, !65} ; [ DW_TAG_member ] [xiv_iv] [line 259, size 64, align 64, offset 192] [from IV]
!494 = !{!"0xf\00\000\0064\0064\000\000", null, null, !495} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from XPVNV]
!495 = !{!"0x16\00XPVNV\002042\000\000\000\000", !43, null, !496} ; [ DW_TAG_typedef ] [XPVNV] [line 2042, size 0, align 0, offset 0] [from xpvnv]
!496 = !{!"0x13\00xpvnv\00269\00320\0064\000\000\000", !4, null, null, !497, null, null, null} ; [ DW_TAG_structure_type ] [xpvnv] [line 269, size 320, align 64, offset 0] [def] [from ]
!497 = !{!498, !499, !500, !501, !502}
!498 = !{!"0xd\00xpv_pv\00270\0064\0064\000\000", !4, !496, !39} ; [ DW_TAG_member ] [xpv_pv] [line 270, size 64, align 64, offset 0] [from ]
!499 = !{!"0xd\00xpv_cur\00271\0064\0064\0064\000", !4, !496, !48} ; [ DW_TAG_member ] [xpv_cur] [line 271, size 64, align 64, offset 64] [from STRLEN]
!500 = !{!"0xd\00xpv_len\00272\0064\0064\00128\000", !4, !496, !48} ; [ DW_TAG_member ] [xpv_len] [line 272, size 64, align 64, offset 128] [from STRLEN]
!501 = !{!"0xd\00xiv_iv\00273\0064\0064\00192\000", !4, !496, !65} ; [ DW_TAG_member ] [xiv_iv] [line 273, size 64, align 64, offset 192] [from IV]
!502 = !{!"0xd\00xnv_nv\00274\0064\0064\00256\000", !4, !496, !68} ; [ DW_TAG_member ] [xnv_nv] [line 274, size 64, align 64, offset 256] [from NV]
!503 = !{!"0xf\00\000\0064\0064\000\000", null, null, !504} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regnode_2]
!504 = !{!"0x13\00regnode_2\0089\0064\0016\000\000\000", !234, null, null, !505, null, null, null} ; [ DW_TAG_structure_type ] [regnode_2] [line 89, size 64, align 16, offset 0] [def] [from ]
!505 = !{!506, !507, !508, !509, !510}
!506 = !{!"0xd\00flags\0090\008\008\000\000", !234, !504, !54} ; [ DW_TAG_member ] [flags] [line 90, size 8, align 8, offset 0] [from U8]
!507 = !{!"0xd\00type\0091\008\008\008\000", !234, !504, !54} ; [ DW_TAG_member ] [type] [line 91, size 8, align 8, offset 8] [from U8]
!508 = !{!"0xd\00next_off\0092\0016\0016\0016\000", !234, !504, !197} ; [ DW_TAG_member ] [next_off] [line 92, size 16, align 16, offset 16] [from U16]
!509 = !{!"0xd\00arg1\0093\0016\0016\0032\000", !234, !504, !197} ; [ DW_TAG_member ] [arg1] [line 93, size 16, align 16, offset 32] [from U16]
!510 = !{!"0xd\00arg2\0094\0016\0016\0048\000", !234, !504, !197} ; [ DW_TAG_member ] [arg2] [line 94, size 16, align 16, offset 48] [from U16]
!511 = !{!"0xf\00\000\0064\0064\000\000", null, null, !512} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from re_unwind_branch_t]
!512 = !{!"0x16\00re_unwind_branch_t\002226\000\000\000\000", !1, null, !513} ; [ DW_TAG_typedef ] [re_unwind_branch_t] [line 2226, size 0, align 0, offset 0] [from ]
!513 = !{!"0x13\00\002215\00320\0064\000\000\000", !1, null, null, !514, null, null, null} ; [ DW_TAG_structure_type ] [line 2215, size 320, align 64, offset 0] [def] [from ]
!514 = !{!515, !516, !517, !519, !520, !521, !522}
!515 = !{!"0xd\00type\002216\0032\0032\000\000", !1, !513, !157} ; [ DW_TAG_member ] [type] [line 2216, size 32, align 32, offset 0] [from I32]
!516 = !{!"0xd\00prev\002217\0032\0032\0032\000", !1, !513, !157} ; [ DW_TAG_member ] [prev] [line 2217, size 32, align 32, offset 32] [from I32]
!517 = !{!"0xd\00lastcp\002218\0032\0032\0064\000", !1, !513, !518} ; [ DW_TAG_member ] [lastcp] [line 2218, size 32, align 32, offset 64] [from CHECKPOINT]
!518 = !{!"0x16\00CHECKPOINT\002643\000\000\000\000", !43, null, !157} ; [ DW_TAG_typedef ] [CHECKPOINT] [line 2643, size 0, align 0, offset 0] [from I32]
!519 = !{!"0xd\00lastparen\002219\0032\0032\0096\000", !1, !513, !157} ; [ DW_TAG_member ] [lastparen] [line 2219, size 32, align 32, offset 96] [from I32]
!520 = !{!"0xd\00next\002220\0064\0064\00128\000", !1, !513, !224} ; [ DW_TAG_member ] [next] [line 2220, size 64, align 64, offset 128] [from ]
!521 = !{!"0xd\00locinput\002221\0064\0064\00192\000", !1, !513, !39} ; [ DW_TAG_member ] [locinput] [line 2221, size 64, align 64, offset 192] [from ]
!522 = !{!"0xd\00nextchr\002222\0032\0032\00256\000", !1, !513, !157} ; [ DW_TAG_member ] [nextchr] [line 2222, size 32, align 32, offset 256] [from I32]
!523 = !{!"0xf\00\000\0064\0064\000\000", null, null, !524} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from re_unwind_t]
!524 = !{!"0x16\00re_unwind_t\002232\000\000\000\000", !1, null, !525} ; [ DW_TAG_typedef ] [re_unwind_t] [line 2232, size 0, align 0, offset 0] [from re_unwind_t]
!525 = !{!"0x17\00re_unwind_t\002228\00320\0064\000\000\000", !1, null, null, !526, null, null, null} ; [ DW_TAG_union_type ] [re_unwind_t] [line 2228, size 320, align 64, offset 0] [def] [from ]
!526 = !{!527, !528, !535}
!527 = !{!"0xd\00type\002229\0032\0032\000\000", !1, !525, !157} ; [ DW_TAG_member ] [type] [line 2229, size 32, align 32, offset 0] [from I32]
!528 = !{!"0xd\00generic\002230\0096\0032\000\000", !1, !525, !529} ; [ DW_TAG_member ] [generic] [line 2230, size 96, align 32, offset 0] [from re_unwind_generic_t]
!529 = !{!"0x16\00re_unwind_generic_t\002213\000\000\000\000", !1, null, !530} ; [ DW_TAG_typedef ] [re_unwind_generic_t] [line 2213, size 0, align 0, offset 0] [from ]
!530 = !{!"0x13\00\002209\0096\0032\000\000\000", !1, null, null, !531, null, null, null} ; [ DW_TAG_structure_type ] [line 2209, size 96, align 32, offset 0] [def] [from ]
!531 = !{!532, !533, !534}
!532 = !{!"0xd\00type\002210\0032\0032\000\000", !1, !530, !157} ; [ DW_TAG_member ] [type] [line 2210, size 32, align 32, offset 0] [from I32]
!533 = !{!"0xd\00prev\002211\0032\0032\0032\000", !1, !530, !157} ; [ DW_TAG_member ] [prev] [line 2211, size 32, align 32, offset 32] [from I32]
!534 = !{!"0xd\00lastcp\002212\0032\0032\0064\000", !1, !530, !518} ; [ DW_TAG_member ] [lastcp] [line 2212, size 32, align 32, offset 64] [from CHECKPOINT]
!535 = !{!"0xd\00branch\002231\00320\0064\000\000", !1, !525, !512} ; [ DW_TAG_member ] [branch] [line 2231, size 320, align 64, offset 0] [from re_unwind_branch_t]
!536 = !{!537, !542, !552, !555, !558, !561}
!537 = !{!"0x2e\00Perl_pregexec\00Perl_pregexec\00\00326\000\001\000\000\00256\000\00332", !1, !538, !539, null, i32 (%struct.regexp*, i8*, i8*, i8*, i32, %struct.sv*, i32)* @Perl_pregexec, null, null, !541} ; [ DW_TAG_subprogram ] [line 326] [def] [scope 332] [Perl_pregexec]
!538 = !{!"0x29", !1}                             ; [ DW_TAG_file_type ] [/tmp/perlbench/regexec.c]
!539 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !540, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!540 = !{!157, !484, !39, !39, !39, !157, !87, !93}
!541 = !{}
!542 = !{!"0x2e\00Perl_re_intuit_start\00Perl_re_intuit_start\00\00397\000\001\000\000\00256\000\00399", !1, !538, !543, null, i8* (%struct.regexp*, %struct.sv*, i8*, i8*, i32, %struct.re_scream_pos_data_s*)* @Perl_re_intuit_start, null, null, !541} ; [ DW_TAG_subprogram ] [line 397] [def] [scope 399] [Perl_re_intuit_start]
!543 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !544, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!544 = !{!39, !484, !87, !39, !39, !93, !545}
!545 = !{!"0xf\00\000\0064\0064\000\000", null, null, !546} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from re_scream_pos_data]
!546 = !{!"0x16\00re_scream_pos_data\00367\000\000\000\000", !234, null, !547} ; [ DW_TAG_typedef ] [re_scream_pos_data] [line 367, size 0, align 0, offset 0] [from re_scream_pos_data_s]
!547 = !{!"0x13\00re_scream_pos_data_s\00363\00128\0064\000\000\000", !234, null, null, !548, null, null, null} ; [ DW_TAG_structure_type ] [re_scream_pos_data_s] [line 363, size 128, align 64, offset 0] [def] [from ]
!548 = !{!549, !551}
!549 = !{!"0xd\00scream_olds\00365\0064\0064\000\000", !234, !547, !550} ; [ DW_TAG_member ] [scream_olds] [line 365, size 64, align 64, offset 0] [from ]
!550 = !{!"0xf\00\000\0064\0064\000\000", null, null, !39} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from ]
!551 = !{!"0xd\00scream_pos\00366\0064\0064\0064\000", !234, !547, !221} ; [ DW_TAG_member ] [scream_pos] [line 366, size 64, align 64, offset 64] [from ]
!552 = !{!"0x2e\00Perl_regexec_flags\00Perl_regexec_flags\00\001616\000\001\000\000\00256\000\001623", !1, !538, !553, null, i32 (%struct.regexp*, i8*, i8*, i8*, i32, %struct.sv*, i8*, i32)* @Perl_regexec_flags, null, null, !541} ; [ DW_TAG_subprogram ] [line 1616] [def] [scope 1623] [Perl_regexec_flags]
!553 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !554, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!554 = !{!157, !484, !39, !39, !39, !157, !87, !38, !93}
!555 = !{!"0x2e\00S_regmatch\00S_regmatch\00\002296\000\001\000\000\00256\000\002297", !1, !538, !556, null, i32 (%struct.regnode*)* @S_regmatch, null, null, !541} ; [ DW_TAG_subprogram ] [line 2296] [def] [scope 2297] [S_regmatch]
!556 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !557, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!557 = !{!157, !224}
!558 = !{!"0x2e\00Perl_regclass_swash\00Perl_regclass_swash\00\004336\000\001\000\000\00256\000\004337", !1, !538, !559, null, %struct.sv* (%struct.regnode*, i8, %struct.sv**, %struct.sv**)* @Perl_regclass_swash, null, null, !541} ; [ DW_TAG_subprogram ] [line 4336] [def] [scope 4337] [Perl_regclass_swash]
!559 = !{!"0x15\00\000\000\000\000\000\000", null, null, null, !560, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!560 = !{!87, !224, !40, !276, !276}
!561 = !{!"0x2e\00restore_pos\00restore_pos\00\004573\001\001\000\000\00256\000\004574", !1, !538, !418, null, void (i8*)* @restore_pos, null, null, !541} ; [ DW_TAG_subprogram ] [line 4573] [local] [def] [scope 4574] [restore_pos]
!562 = !{i32 2, !"Dwarf Version", i32 4}
!563 = !{i32 2, !"Debug Info Version", i32 2}
!564 = !{!"clang version 3.6.2 (tags/RELEASE_362/final)"}
!565 = !{!"0x101\00prog\0016777542\000", !537, !538, !484} ; [ DW_TAG_arg_variable ] [prog] [line 326]
!566 = !{!"0x102"}                                ; [ DW_TAG_expression ]
!567 = !MDLocation(line: 326, column: 38, scope: !537)
!568 = !{!"0x101\00stringarg\0033554758\000", !537, !538, !39} ; [ DW_TAG_arg_variable ] [stringarg] [line 326]
!569 = !MDLocation(line: 326, column: 50, scope: !537)
!570 = !{!"0x101\00strend\0050331974\000", !537, !538, !39} ; [ DW_TAG_arg_variable ] [strend] [line 326]
!571 = !MDLocation(line: 326, column: 76, scope: !537)
!572 = !{!"0x101\00strbeg\0067109191\000", !537, !538, !39} ; [ DW_TAG_arg_variable ] [strbeg] [line 327]
!573 = !MDLocation(line: 327, column: 9, scope: !537)
!574 = !{!"0x101\00minend\0083886407\000", !537, !538, !157} ; [ DW_TAG_arg_variable ] [minend] [line 327]
!575 = !MDLocation(line: 327, column: 21, scope: !537)
!576 = !{!"0x101\00screamer\00100663623\000", !537, !538, !87} ; [ DW_TAG_arg_variable ] [screamer] [line 327]
!577 = !MDLocation(line: 327, column: 33, scope: !537)
!578 = !{!"0x101\00nosave\00117440839\000", !537, !538, !93} ; [ DW_TAG_arg_variable ] [nosave] [line 327]
!579 = !MDLocation(line: 327, column: 47, scope: !537)
!580 = !MDLocation(line: 335, column: 9, scope: !537)
!581 = !MDLocation(line: 334, column: 2, scope: !537)
!582 = !MDLocation(line: 333, column: 5, scope: !537)
!583 = !{!"0x101\00prog\0016778832\000", !552, !538, !484} ; [ DW_TAG_arg_variable ] [prog] [line 1616]
!584 = !MDLocation(line: 1616, column: 43, scope: !552)
!585 = !{!"0x101\00stringarg\0033556048\000", !552, !538, !39} ; [ DW_TAG_arg_variable ] [stringarg] [line 1616]
!586 = !MDLocation(line: 1616, column: 55, scope: !552)
!587 = !{!"0x101\00strend\0050333264\000", !552, !538, !39} ; [ DW_TAG_arg_variable ] [strend] [line 1616]
!588 = !MDLocation(line: 1616, column: 81, scope: !552)
!589 = !{!"0x101\00strbeg\0067110481\000", !552, !538, !39} ; [ DW_TAG_arg_variable ] [strbeg] [line 1617]
!590 = !MDLocation(line: 1617, column: 14, scope: !552)
!591 = !{!"0x101\00minend\0083887697\000", !552, !538, !157} ; [ DW_TAG_arg_variable ] [minend] [line 1617]
!592 = !MDLocation(line: 1617, column: 26, scope: !552)
!593 = !{!"0x101\00sv\00100664913\000", !552, !538, !87} ; [ DW_TAG_arg_variable ] [sv] [line 1617]
!594 = !MDLocation(line: 1617, column: 38, scope: !552)
!595 = !{!"0x101\00data\00117442129\000", !552, !538, !38} ; [ DW_TAG_arg_variable ] [data] [line 1617]
!596 = !MDLocation(line: 1617, column: 48, scope: !552)
!597 = !{!"0x101\00flags\00134219345\000", !552, !538, !93} ; [ DW_TAG_arg_variable ] [flags] [line 1617]
!598 = !MDLocation(line: 1617, column: 58, scope: !552)
!599 = !{!"0x100\00startpos\001626\000", !552, !538, !39} ; [ DW_TAG_auto_variable ] [startpos] [line 1626]
!600 = !MDLocation(line: 1626, column: 20, scope: !552)
!601 = !{!"0x100\00dontbother\001628\000", !552, !538, !157} ; [ DW_TAG_auto_variable ] [dontbother] [line 1628]
!602 = !MDLocation(line: 1628, column: 9, scope: !552)
!603 = !{!"0x100\00end_shift\001631\000", !552, !538, !157} ; [ DW_TAG_auto_variable ] [end_shift] [line 1631]
!604 = !MDLocation(line: 1631, column: 9, scope: !552)
!605 = !{!"0x100\00scream_pos\001632\000", !552, !538, !157} ; [ DW_TAG_auto_variable ] [scream_pos] [line 1632]
!606 = !MDLocation(line: 1632, column: 9, scope: !552)
!607 = !{!"0x100\00scream_olds\001633\000", !552, !538, !39} ; [ DW_TAG_auto_variable ] [scream_olds] [line 1633]
!608 = !MDLocation(line: 1633, column: 11, scope: !552)
!609 = !MDLocation(line: 1634, column: 19, scope: !552)
!610 = !{!"0x100\00oreplsv\001634\000", !552, !538, !87} ; [ DW_TAG_auto_variable ] [oreplsv] [line 1634]
!611 = !MDLocation(line: 1634, column: 9, scope: !552)
!612 = !MDLocation(line: 1635, column: 20, scope: !552)
!613 = !MDLocation(line: 1635, column: 20, scope: !614)
!614 = !{!"0xb\001", !1, !552}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!615 = !MDLocation(line: 1635, column: 20, scope: !616)
!616 = !{!"0xb\002", !1, !552}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!617 = !{!"0x100\00do_utf8\001635\000", !552, !538, !40} ; [ DW_TAG_auto_variable ] [do_utf8] [line 1635]
!618 = !MDLocation(line: 1635, column: 10, scope: !552)
!619 = !MDLocation(line: 1640, column: 5, scope: !552)
!620 = !MDLocation(line: 1640, column: 5, scope: !614)
!621 = !MDLocation(line: 1640, column: 5, scope: !616)
!622 = !MDLocation(line: 1642, column: 5, scope: !552)
!623 = !MDLocation(line: 1644, column: 5, scope: !552)
!624 = !MDLocation(line: 1650, column: 9, scope: !625)
!625 = !{!"0xb\001650\009\00107", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!626 = !MDLocation(line: 1650, column: 9, scope: !552)
!627 = !MDLocation(line: 1650, column: 25, scope: !628)
!628 = !{!"0xb\001", !1, !625}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!629 = !MDLocation(line: 1651, column: 2, scope: !630)
!630 = !{!"0xb\001650\0043\00108", !1, !625}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!631 = !MDLocation(line: 1652, column: 2, scope: !630)
!632 = !MDLocation(line: 1655, column: 14, scope: !552)
!633 = !{!"0x100\00minlen\001627\000", !552, !538, !157} ; [ DW_TAG_auto_variable ] [minlen] [line 1627]
!634 = !MDLocation(line: 1627, column: 9, scope: !552)
!635 = !MDLocation(line: 1656, column: 9, scope: !636)
!636 = !{!"0xb\001656\009\00109", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!637 = !MDLocation(line: 1656, column: 29, scope: !636)
!638 = !MDLocation(line: 1656, column: 9, scope: !552)
!639 = !MDLocation(line: 1659, column: 2, scope: !640)
!640 = !{!"0xb\001656\0037\00110", !1, !636}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!641 = !MDLocation(line: 1663, column: 9, scope: !642)
!642 = !{!"0xb\001663\009\00111", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!643 = !MDLocation(line: 1663, column: 9, scope: !552)
!644 = !MDLocation(line: 1664, column: 2, scope: !645)
!645 = !{!"0xb\001663\0046\00112", !1, !642}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!646 = !MDLocation(line: 1665, column: 5, scope: !645)
!647 = !MDLocation(line: 1667, column: 5, scope: !552)
!648 = !MDLocation(line: 1668, column: 5, scope: !552)
!649 = !MDLocation(line: 1669, column: 5, scope: !552)
!650 = !MDLocation(line: 1671, column: 9, scope: !651)
!651 = !{!"0xb\001671\009\00113", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!652 = !MDLocation(line: 1671, column: 9, scope: !552)
!653 = !MDLocation(line: 1672, column: 2, scope: !651)
!654 = !MDLocation(line: 1675, column: 5, scope: !552)
!655 = !MDLocation(line: 1676, column: 5, scope: !552)
!656 = !MDLocation(line: 1677, column: 5, scope: !552)
!657 = !MDLocation(line: 1680, column: 5, scope: !552)
!658 = !MDLocation(line: 1683, column: 18, scope: !552)
!659 = !MDLocation(line: 1683, column: 5, scope: !552)
!660 = !MDLocation(line: 1686, column: 5, scope: !552)
!661 = !{!"0x100\00s\001624\000", !552, !538, !39} ; [ DW_TAG_auto_variable ] [s] [line 1624]
!662 = !MDLocation(line: 1624, column: 20, scope: !552)
!663 = !MDLocation(line: 1691, column: 9, scope: !664)
!664 = !{!"0xb\001691\009\00114", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!665 = !MDLocation(line: 1691, column: 9, scope: !552)
!666 = !MDLocation(line: 1694, column: 6, scope: !667)
!667 = !{!"0xb\001694\006\00116", !1, !668}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!668 = !{!"0xb\001691\0041\00115", !1, !664}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!669 = !MDLocation(line: 1694, column: 6, scope: !668)
!670 = !MDLocation(line: 1695, column: 6, scope: !667)
!671 = !MDLocation(line: 1696, column: 11, scope: !667)
!672 = !MDLocation(line: 1696, column: 17, scope: !673)
!673 = !{!"0xb\001", !1, !674}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!674 = !{!"0xb\001696\0011\00117", !1, !667}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!675 = !MDLocation(line: 1697, column: 8, scope: !674)
!676 = !MDLocation(line: 1698, column: 14, scope: !674)
!677 = !{!"0x100\00mg\001692\000", !668, !538, !71} ; [ DW_TAG_auto_variable ] [mg] [line 1692]
!678 = !MDLocation(line: 1692, column: 9, scope: !668)
!679 = !MDLocation(line: 1699, column: 8, scope: !674)
!680 = !MDLocation(line: 1700, column: 30, scope: !681)
!681 = !{!"0xb\001699\0025\00118", !1, !674}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!682 = !MDLocation(line: 1700, column: 21, scope: !681)
!683 = !MDLocation(line: 1700, column: 6, scope: !681)
!684 = !MDLocation(line: 1701, column: 10, scope: !685)
!685 = !{!"0xb\001701\0010\00119", !1, !681}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!686 = !MDLocation(line: 1701, column: 10, scope: !681)
!687 = !MDLocation(line: 1702, column: 18, scope: !688)
!688 = !{!"0xb\001702\0014\00121", !1, !689}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!689 = !{!"0xb\001701\0042\00120", !1, !685}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!690 = !MDLocation(line: 1702, column: 14, scope: !688)
!691 = !MDLocation(line: 1702, column: 14, scope: !689)
!692 = !MDLocation(line: 1703, column: 7, scope: !688)
!693 = !MDLocation(line: 1704, column: 7, scope: !689)
!694 = !MDLocation(line: 1705, column: 6, scope: !689)
!695 = !MDLocation(line: 1706, column: 2, scope: !681)
!696 = !MDLocation(line: 1708, column: 6, scope: !674)
!697 = !MDLocation(line: 1709, column: 5, scope: !668)
!698 = !MDLocation(line: 1711, column: 11, scope: !699)
!699 = !{!"0xb\001711\009\00122", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!700 = !MDLocation(line: 1711, column: 9, scope: !552)
!701 = !MDLocation(line: 1711, column: 38, scope: !702)
!702 = !{!"0xb\001", !1, !699}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!703 = !MDLocation(line: 1711, column: 70, scope: !704)
!704 = !{!"0xb\002", !1, !699}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!705 = !{!"0x100\00d\001712\000", !706, !538, !546} ; [ DW_TAG_auto_variable ] [d] [line 1712]
!706 = !{!"0xb\001711\0099\00123", !1, !699}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!707 = !MDLocation(line: 1712, column: 21, scope: !706)
!708 = !MDLocation(line: 1714, column: 2, scope: !706)
!709 = !MDLocation(line: 1715, column: 2, scope: !706)
!710 = !MDLocation(line: 1716, column: 6, scope: !706)
!711 = !MDLocation(line: 1717, column: 6, scope: !706)
!712 = !MDLocation(line: 1719, column: 6, scope: !713)
!713 = !{!"0xb\001717\0010\00125", !1, !714}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!714 = !{!"0xb\001717\006\00124", !1, !706}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!715 = !MDLocation(line: 1721, column: 5, scope: !706)
!716 = !MDLocation(line: 1749, column: 9, scope: !717)
!717 = !{!"0xb\001749\009\00126", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!718 = !MDLocation(line: 1749, column: 9, scope: !552)
!719 = !MDLocation(line: 1750, column: 6, scope: !720)
!720 = !{!"0xb\001750\006\00128", !1, !721}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!721 = !{!"0xb\001749\0056\00127", !1, !717}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!722 = !MDLocation(line: 1750, column: 6, scope: !721)
!723 = !MDLocation(line: 1750, column: 23, scope: !720)
!724 = !MDLocation(line: 1751, column: 6, scope: !720)
!725 = !MDLocation(line: 1752, column: 11, scope: !726)
!726 = !{!"0xb\001752\0011\00129", !1, !720}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!727 = !MDLocation(line: 1752, column: 11, scope: !720)
!728 = !MDLocation(line: 1752, column: 28, scope: !729)
!729 = !{!"0xb\001", !1, !726}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!730 = !MDLocation(line: 1753, column: 8, scope: !726)
!731 = !MDLocation(line: 1757, column: 10, scope: !732)
!732 = !{!"0xb\001754\002\00130", !1, !726}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!733 = !MDLocation(line: 1758, column: 16, scope: !734)
!734 = !{!"0xb\001757\0010\00131", !1, !732}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!735 = !MDLocation(line: 1758, column: 3, scope: !734)
!736 = !MDLocation(line: 1759, column: 12, scope: !732)
!737 = !MDLocation(line: 1759, column: 12, scope: !738)
!738 = !{!"0xb\001", !1, !732}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!739 = !MDLocation(line: 1759, column: 12, scope: !740)
!740 = !{!"0xb\002", !1, !732}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!741 = !MDLocation(line: 1759, column: 12, scope: !742)
!742 = !{!"0xb\004", !1, !743}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!743 = !{!"0xb\003", !1, !732}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!744 = !{!"0x100\00end\001755\000", !732, !538, !39} ; [ DW_TAG_auto_variable ] [end] [line 1755]
!745 = !MDLocation(line: 1755, column: 12, scope: !732)
!746 = !MDLocation(line: 1761, column: 10, scope: !747)
!747 = !{!"0xb\001761\0010\00132", !1, !732}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!748 = !MDLocation(line: 1761, column: 10, scope: !732)
!749 = !MDLocation(line: 1761, column: 32, scope: !750)
!750 = !{!"0xb\001", !1, !747}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!751 = !MDLocation(line: 1762, column: 7, scope: !752)
!752 = !{!"0xb\001762\007\00134", !1, !753}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!753 = !{!"0xb\001761\0050\00133", !1, !747}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!754 = !MDLocation(line: 1762, column: 7, scope: !753)
!755 = !MDLocation(line: 1763, column: 7, scope: !752)
!756 = !MDLocation(line: 1764, column: 3, scope: !753)
!757 = !MDLocation(line: 1765, column: 11, scope: !758)
!758 = !{!"0xb\001765\0011\00136", !1, !759}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!759 = !{!"0xb\001764\0013\00135", !1, !753}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!760 = !MDLocation(line: 1765, column: 11, scope: !759)
!761 = !MDLocation(line: 1766, column: 4, scope: !758)
!762 = !MDLocation(line: 1765, column: 25, scope: !763)
!763 = !{!"0xb\001", !1, !758}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!764 = !MDLocation(line: 1768, column: 11, scope: !765)
!765 = !{!"0xb\001768\0011\00137", !1, !759}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!766 = !MDLocation(line: 1768, column: 11, scope: !759)
!767 = !MDLocation(line: 1769, column: 4, scope: !765)
!768 = !MDLocation(line: 1770, column: 11, scope: !769)
!769 = !{!"0xb\001770\0011\00138", !1, !759}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!770 = !MDLocation(line: 1770, column: 11, scope: !759)
!771 = !MDLocation(line: 1771, column: 34, scope: !772)
!772 = !{!"0xb\001770\0042\00139", !1, !769}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!773 = !MDLocation(line: 1771, column: 8, scope: !772)
!774 = !MDLocation(line: 1772, column: 8, scope: !772)
!775 = !MDLocation(line: 1773, column: 8, scope: !776)
!776 = !{!"0xb\001772\008\00140", !1, !772}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!777 = !MDLocation(line: 1774, column: 7, scope: !772)
!778 = !MDLocation(line: 1776, column: 4, scope: !769)
!779 = !MDLocation(line: 1779, column: 7, scope: !780)
!780 = !{!"0xb\001779\007\00142", !1, !781}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!781 = !{!"0xb\001778\0013\00141", !1, !747}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!782 = !MDLocation(line: 1779, column: 7, scope: !781)
!783 = !MDLocation(line: 1780, column: 7, scope: !780)
!784 = !MDLocation(line: 1781, column: 3, scope: !781)
!785 = !MDLocation(line: 1781, column: 10, scope: !781)
!786 = !MDLocation(line: 1782, column: 12, scope: !787)
!787 = !{!"0xb\001782\0011\00144", !1, !788}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!788 = !{!"0xb\001781\0019\00143", !1, !781}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!789 = !MDLocation(line: 1782, column: 11, scope: !787)
!790 = !MDLocation(line: 1782, column: 11, scope: !788)
!791 = !MDLocation(line: 1783, column: 8, scope: !792)
!792 = !{!"0xb\001783\008\00146", !1, !793}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!793 = !{!"0xb\001782\0025\00145", !1, !787}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!794 = !MDLocation(line: 1783, column: 8, scope: !793)
!795 = !MDLocation(line: 1784, column: 8, scope: !792)
!796 = !MDLocation(line: 1785, column: 7, scope: !793)
!797 = !MDLocation(line: 1788, column: 2, scope: !732)
!798 = !MDLocation(line: 1789, column: 2, scope: !721)
!799 = !MDLocation(line: 1790, column: 16, scope: !800)
!800 = !{!"0xb\001790\0016\00147", !1, !717}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!801 = !MDLocation(line: 1790, column: 16, scope: !717)
!802 = !MDLocation(line: 1791, column: 19, scope: !803)
!803 = !{!"0xb\001791\006\00149", !1, !804}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!804 = !{!"0xb\001790\0048\00148", !1, !800}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!805 = !MDLocation(line: 1791, column: 6, scope: !803)
!806 = !MDLocation(line: 1791, column: 6, scope: !804)
!807 = !MDLocation(line: 1792, column: 6, scope: !803)
!808 = !MDLocation(line: 1793, column: 2, scope: !804)
!809 = !MDLocation(line: 1797, column: 10, scope: !810)
!810 = !{!"0xb\001797\009\00150", !1, !552}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!811 = !MDLocation(line: 1797, column: 9, scope: !552)
!812 = !MDLocation(line: 1797, column: 35, scope: !813)
!813 = !{!"0xb\002", !1, !810}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!814 = !MDLocation(line: 1797, column: 59, scope: !815)
!815 = !{!"0xb\003", !1, !816}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!816 = !{!"0xb\001", !1, !810}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!817 = !MDLocation(line: 1804, column: 8, scope: !818)
!818 = !{!"0xb\001804\006\00152", !1, !819}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!819 = !{!"0xb\001797\0086\00151", !1, !810}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!820 = !MDLocation(line: 1804, column: 6, scope: !819)
!821 = !MDLocation(line: 1804, column: 18, scope: !822)
!822 = !{!"0xb\001", !1, !818}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!823 = !MDLocation(line: 1804, column: 40, scope: !824)
!824 = !{!"0xb\002", !1, !818}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!825 = !MDLocation(line: 1805, column: 6, scope: !818)
!826 = !MDLocation(line: 1805, column: 16, scope: !818)
!827 = !MDLocation(line: 1805, column: 39, scope: !818)
!828 = !MDLocation(line: 1805, column: 6, scope: !829)
!829 = !{!"0xb\004", !1, !830}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!830 = !{!"0xb\003", !1, !818}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!831 = !MDLocation(line: 1806, column: 7, scope: !819)
!832 = !MDLocation(line: 1806, column: 7, scope: !833)
!833 = !{!"0xb\001", !1, !819}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!834 = !MDLocation(line: 1806, column: 7, scope: !835)
!835 = !{!"0xb\002", !1, !819}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!836 = !MDLocation(line: 1806, column: 7, scope: !837)
!837 = !{!"0xb\004", !1, !838}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!838 = !{!"0xb\003", !1, !819}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!839 = !{!"0x100\00ch\001800\000", !819, !538, !40} ; [ DW_TAG_auto_variable ] [ch] [line 1800]
!840 = !MDLocation(line: 1800, column: 7, scope: !819)
!841 = !MDLocation(line: 1808, column: 6, scope: !819)
!842 = !MDLocation(line: 1809, column: 6, scope: !843)
!843 = !{!"0xb\001808\0015\00154", !1, !844}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!844 = !{!"0xb\001808\006\00153", !1, !819}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!845 = !MDLocation(line: 1809, column: 13, scope: !843)
!846 = !MDLocation(line: 1810, column: 7, scope: !847)
!847 = !{!"0xb\001810\007\00156", !1, !848}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!848 = !{!"0xb\001809\0025\00155", !1, !843}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!849 = !MDLocation(line: 1810, column: 13, scope: !847)
!850 = !MDLocation(line: 1810, column: 7, scope: !848)
!851 = !MDLocation(line: 1812, column: 11, scope: !852)
!852 = !{!"0xb\001812\0011\00158", !1, !853}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!853 = !{!"0xb\001810\0017\00157", !1, !847}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!854 = !MDLocation(line: 1812, column: 11, scope: !853)
!855 = !MDLocation(line: 1812, column: 28, scope: !856)
!856 = !{!"0xb\001", !1, !852}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!857 = !MDLocation(line: 1813, column: 12, scope: !853)
!858 = !MDLocation(line: 1813, column: 7, scope: !853)
!859 = !MDLocation(line: 1814, column: 7, scope: !853)
!860 = !MDLocation(line: 1814, column: 14, scope: !853)
!861 = !MDLocation(line: 1814, column: 28, scope: !853)
!862 = !MDLocation(line: 1814, column: 34, scope: !853)
!863 = !MDLocation(line: 1814, column: 7, scope: !864)
!864 = !{!"0xb\003", !1, !853}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!865 = !MDLocation(line: 1815, column: 9, scope: !853)
!866 = !MDLocation(line: 1815, column: 4, scope: !853)
!867 = !MDLocation(line: 1816, column: 3, scope: !853)
!868 = !MDLocation(line: 1817, column: 8, scope: !848)
!869 = !MDLocation(line: 1817, column: 3, scope: !848)
!870 = !MDLocation(line: 1819, column: 2, scope: !843)
!871 = !MDLocation(line: 1821, column: 6, scope: !872)
!872 = !{!"0xb\001820\007\00159", !1, !844}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!873 = !MDLocation(line: 1821, column: 13, scope: !872)
!874 = !MDLocation(line: 1822, column: 7, scope: !875)
!875 = !{!"0xb\001822\007\00161", !1, !876}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!876 = !{!"0xb\001821\0025\00160", !1, !872}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!877 = !MDLocation(line: 1822, column: 13, scope: !875)
!878 = !MDLocation(line: 1822, column: 7, scope: !876)
!879 = !MDLocation(line: 1824, column: 11, scope: !880)
!880 = !{!"0xb\001824\0011\00163", !1, !881}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!881 = !{!"0xb\001822\0017\00162", !1, !875}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!882 = !MDLocation(line: 1824, column: 11, scope: !881)
!883 = !MDLocation(line: 1824, column: 28, scope: !884)
!884 = !{!"0xb\001", !1, !880}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!885 = !MDLocation(line: 1825, column: 7, scope: !881)
!886 = !MDLocation(line: 1826, column: 7, scope: !881)
!887 = !MDLocation(line: 1826, column: 14, scope: !881)
!888 = !MDLocation(line: 1826, column: 28, scope: !881)
!889 = !MDLocation(line: 1826, column: 34, scope: !881)
!890 = !MDLocation(line: 1826, column: 7, scope: !891)
!891 = !{!"0xb\003", !1, !881}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!892 = !MDLocation(line: 1827, column: 4, scope: !881)
!893 = !MDLocation(line: 1828, column: 3, scope: !881)
!894 = !MDLocation(line: 1829, column: 3, scope: !876)
!895 = !MDLocation(line: 1836, column: 5, scope: !819)
!896 = !MDLocation(line: 1838, column: 14, scope: !897)
!897 = !{!"0xb\001838\0014\00164", !1, !810}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!898 = !MDLocation(line: 1838, column: 14, scope: !810)
!899 = !MDLocation(line: 1839, column: 11, scope: !897)
!900 = !MDLocation(line: 1840, column: 13, scope: !897)
!901 = !MDLocation(line: 1840, column: 45, scope: !897)
!902 = !MDLocation(line: 1841, column: 8, scope: !897)
!903 = !MDLocation(line: 1841, column: 33, scope: !897)
!904 = !MDLocation(line: 1850, column: 6, scope: !905)
!905 = !{!"0xb\001850\006\00166", !1, !906}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!906 = !{!"0xb\001841\0046\00165", !1, !897}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!907 = !MDLocation(line: 1850, column: 6, scope: !906)
!908 = !MDLocation(line: 1850, column: 31, scope: !909)
!909 = !{!"0xb\001", !1, !905}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!910 = !MDLocation(line: 1851, column: 12, scope: !911)
!911 = !{!"0xb\001851\0010\00168", !1, !912}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!912 = !{!"0xb\001850\0052\00167", !1, !905}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!913 = !MDLocation(line: 1851, column: 10, scope: !912)
!914 = !MDLocation(line: 1851, column: 22, scope: !915)
!915 = !{!"0xb\001", !1, !911}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!916 = !MDLocation(line: 1851, column: 44, scope: !917)
!917 = !{!"0xb\002", !1, !911}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!918 = !MDLocation(line: 1852, column: 3, scope: !911)
!919 = !MDLocation(line: 1852, column: 13, scope: !911)
!920 = !MDLocation(line: 1852, column: 36, scope: !911)
!921 = !MDLocation(line: 1852, column: 3, scope: !922)
!922 = !{!"0xb\004", !1, !923}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!923 = !{!"0xb\003", !1, !911}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!924 = !MDLocation(line: 1853, column: 13, scope: !912)
!925 = !MDLocation(line: 1853, column: 23, scope: !926)
!926 = !{!"0xb\001", !1, !912}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!927 = !MDLocation(line: 1853, column: 45, scope: !928)
!928 = !{!"0xb\002", !1, !912}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!929 = !{!"0x100\00must\001842\000", !906, !538, !87} ; [ DW_TAG_auto_variable ] [must] [line 1842]
!930 = !MDLocation(line: 1842, column: 6, scope: !906)
!931 = !MDLocation(line: 1854, column: 28, scope: !912)
!932 = !{!"0x100\00back_min\001844\000", !906, !538, !157} ; [ DW_TAG_auto_variable ] [back_min] [line 1844]
!933 = !MDLocation(line: 1844, column: 6, scope: !906)
!934 = !{!"0x100\00back_max\001843\000", !906, !538, !157} ; [ DW_TAG_auto_variable ] [back_max] [line 1843]
!935 = !MDLocation(line: 1843, column: 6, scope: !906)
!936 = !MDLocation(line: 1855, column: 2, scope: !912)
!937 = !MDLocation(line: 1856, column: 12, scope: !938)
!938 = !{!"0xb\001856\0010\00170", !1, !939}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!939 = !{!"0xb\001855\009\00169", !1, !905}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!940 = !MDLocation(line: 1856, column: 10, scope: !939)
!941 = !MDLocation(line: 1856, column: 22, scope: !942)
!942 = !{!"0xb\001", !1, !938}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!943 = !MDLocation(line: 1856, column: 41, scope: !944)
!944 = !{!"0xb\002", !1, !938}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!945 = !MDLocation(line: 1857, column: 3, scope: !938)
!946 = !MDLocation(line: 1857, column: 13, scope: !938)
!947 = !MDLocation(line: 1857, column: 36, scope: !938)
!948 = !MDLocation(line: 1857, column: 3, scope: !949)
!949 = !{!"0xb\004", !1, !950}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!950 = !{!"0xb\003", !1, !938}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!951 = !MDLocation(line: 1858, column: 13, scope: !939)
!952 = !MDLocation(line: 1858, column: 23, scope: !953)
!953 = !{!"0xb\001", !1, !939}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!954 = !MDLocation(line: 1858, column: 42, scope: !955)
!955 = !{!"0xb\002", !1, !939}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!956 = !MDLocation(line: 1859, column: 17, scope: !939)
!957 = !MDLocation(line: 1860, column: 17, scope: !939)
!958 = !MDLocation(line: 1862, column: 6, scope: !959)
!959 = !{!"0xb\001862\006\00171", !1, !906}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!960 = !MDLocation(line: 1862, column: 6, scope: !906)
!961 = !MDLocation(line: 1864, column: 6, scope: !959)
!962 = !MDLocation(line: 1866, column: 9, scope: !906)
!963 = !MDLocation(line: 1866, column: 9, scope: !964)
!964 = !{!"0xb\001", !1, !906}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!965 = !MDLocation(line: 1866, column: 9, scope: !966)
!966 = !{!"0xb\003", !1, !906}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!967 = !MDLocation(line: 1866, column: 9, scope: !968)
!968 = !{!"0xb\004", !1, !906}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!969 = !MDLocation(line: 1866, column: 9, scope: !970)
!970 = !{!"0xb\006", !1, !971}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!971 = !{!"0xb\005", !1, !906}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!972 = !MDLocation(line: 1866, column: 9, scope: !973)
!973 = !{!"0xb\002", !1, !906}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!974 = !MDLocation(line: 1866, column: 9, scope: !975)
!975 = !{!"0xb\008", !1, !906}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!976 = !MDLocation(line: 1866, column: 9, scope: !977)
!977 = !{!"0xb\009", !1, !906}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!978 = !MDLocation(line: 1866, column: 9, scope: !979)
!979 = !{!"0xb\0011", !1, !980}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!980 = !{!"0xb\0010", !1, !906}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!981 = !{!"0x100\00last\001845\000", !906, !538, !39} ; [ DW_TAG_auto_variable ] [last] [line 1845]
!982 = !MDLocation(line: 1845, column: 8, scope: !906)
!983 = !MDLocation(line: 1870, column: 10, scope: !984)
!984 = !{!"0xb\001870\006\00172", !1, !906}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!985 = !MDLocation(line: 1870, column: 6, scope: !984)
!986 = !MDLocation(line: 1870, column: 6, scope: !906)
!987 = !MDLocation(line: 1871, column: 14, scope: !984)
!988 = !MDLocation(line: 1871, column: 14, scope: !989)
!989 = !{!"0xb\001", !1, !984}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!990 = !MDLocation(line: 1871, column: 14, scope: !991)
!991 = !{!"0xb\002", !1, !984}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!992 = !{!"0x100\00last1\001846\000", !906, !538, !39} ; [ DW_TAG_auto_variable ] [last1] [line 1846]
!993 = !MDLocation(line: 1846, column: 8, scope: !906)
!994 = !MDLocation(line: 1871, column: 6, scope: !995)
!995 = !{!"0xb\004", !1, !996}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!996 = !{!"0xb\003", !1, !984}                    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!997 = !MDLocation(line: 1873, column: 14, scope: !984)
!998 = !MDLocation(line: 1877, column: 2, scope: !906)
!999 = !MDLocation(line: 1879, column: 11, scope: !906)
!1000 = !MDLocation(line: 1879, column: 11, scope: !964)
!1001 = !MDLocation(line: 1879, column: 11, scope: !973)
!1002 = !MDLocation(line: 1880, column: 2, scope: !906)
!1003 = !MDLocation(line: 1880, column: 11, scope: !906)
!1004 = !MDLocation(line: 1880, column: 10, scope: !906)
!1005 = !MDLocation(line: 1881, column: 5, scope: !906)
!1006 = !MDLocation(line: 1881, column: 4, scope: !906)
!1007 = !MDLocation(line: 1882, column: 33, scope: !906)
!1008 = !MDLocation(line: 1882, column: 33, scope: !964)
!1009 = !MDLocation(line: 1882, column: 33, scope: !973)
!1010 = !MDLocation(line: 1882, column: 11, scope: !906)
!1011 = !MDLocation(line: 1884, column: 37, scope: !906)
!1012 = !MDLocation(line: 1884, column: 37, scope: !964)
!1013 = !MDLocation(line: 1884, column: 37, scope: !973)
!1014 = !MDLocation(line: 1886, column: 7, scope: !906)
!1015 = !MDLocation(line: 1884, column: 11, scope: !906)
!1016 = !MDLocation(line: 1880, column: 2, scope: !973)
!1017 = !MDLocation(line: 1888, column: 11, scope: !1018)
!1018 = !{!"0xb\001888\0010\00174", !1, !1019}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1019 = !{!"0xb\001886\0047\00173", !1, !906}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1020 = !MDLocation(line: 1888, column: 10, scope: !1019)
!1021 = !MDLocation(line: 1888, column: 36, scope: !1022)
!1022 = !{!"0xb\001", !1, !1018}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1023 = !MDLocation(line: 1889, column: 21, scope: !1018)
!1024 = !MDLocation(line: 1889, column: 17, scope: !1018)
!1025 = !MDLocation(line: 1889, column: 7, scope: !1018)
!1026 = !MDLocation(line: 1889, column: 3, scope: !1018)
!1027 = !MDLocation(line: 1891, column: 10, scope: !1028)
!1028 = !{!"0xb\001891\0010\00175", !1, !1019}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1029 = !MDLocation(line: 1891, column: 10, scope: !1030)
!1030 = !{!"0xb\001", !1, !1028}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1031 = !MDLocation(line: 1891, column: 10, scope: !1032)
!1032 = !{!"0xb\002", !1, !1028}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1033 = !MDLocation(line: 1891, column: 10, scope: !1019)
!1034 = !MDLocation(line: 1892, column: 11, scope: !1035)
!1035 = !{!"0xb\001891\0038\00176", !1, !1028}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1036 = !MDLocation(line: 1892, column: 11, scope: !1037)
!1037 = !{!"0xb\001", !1, !1035}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1038 = !MDLocation(line: 1892, column: 11, scope: !1039)
!1039 = !{!"0xb\002", !1, !1035}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1040 = !MDLocation(line: 1893, column: 7, scope: !1035)
!1041 = !MDLocation(line: 1893, column: 7, scope: !1037)
!1042 = !MDLocation(line: 1893, column: 7, scope: !1039)
!1043 = !MDLocation(line: 1894, column: 6, scope: !1035)
!1044 = !MDLocation(line: 1896, column: 23, scope: !1045)
!1045 = !{!"0xb\001895\0011\00177", !1, !1028}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1046 = !MDLocation(line: 1896, column: 14, scope: !1045)
!1047 = !MDLocation(line: 1896, column: 13, scope: !1045)
!1048 = !MDLocation(line: 1896, column: 35, scope: !1049)
!1049 = !{!"0xb\001", !1, !1045}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1050 = !MDLocation(line: 1896, column: 35, scope: !1051)
!1051 = !{!"0xb\003", !1, !1045}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1052 = !MDLocation(line: 1896, column: 35, scope: !1053)
!1053 = !{!"0xb\004", !1, !1045}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1054 = !MDLocation(line: 1896, column: 35, scope: !1045)
!1055 = !MDLocation(line: 1896, column: 13, scope: !1056)
!1056 = !{!"0xb\006", !1, !1057}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1057 = !{!"0xb\005", !1, !1045}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1058 = !MDLocation(line: 1896, column: 52, scope: !1059)
!1059 = !{!"0xb\002", !1, !1045}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1060 = !{!"0x100\00t\001896\000", !1045, !538, !39} ; [ DW_TAG_auto_variable ] [t] [line 1896]
!1061 = !MDLocation(line: 1896, column: 9, scope: !1045)
!1062 = !MDLocation(line: 1898, column: 11, scope: !1045)
!1063 = !MDLocation(line: 1898, column: 11, scope: !1049)
!1064 = !MDLocation(line: 1898, column: 11, scope: !1059)
!1065 = !MDLocation(line: 1901, column: 10, scope: !1019)
!1066 = !MDLocation(line: 1902, column: 3, scope: !1067)
!1067 = !{!"0xb\001901\0019\00179", !1, !1068}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1068 = !{!"0xb\001901\0010\00178", !1, !1019}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1069 = !MDLocation(line: 1902, column: 10, scope: !1067)
!1070 = !MDLocation(line: 1903, column: 11, scope: !1071)
!1071 = !{!"0xb\001903\0011\00181", !1, !1072}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1072 = !{!"0xb\001902\0022\00180", !1, !1067}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1073 = !MDLocation(line: 1903, column: 11, scope: !1072)
!1074 = !MDLocation(line: 1904, column: 4, scope: !1071)
!1075 = !MDLocation(line: 1905, column: 12, scope: !1072)
!1076 = !MDLocation(line: 1905, column: 7, scope: !1072)
!1077 = !MDLocation(line: 1907, column: 6, scope: !1067)
!1078 = !MDLocation(line: 1909, column: 3, scope: !1079)
!1079 = !{!"0xb\001908\0011\00182", !1, !1068}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1080 = !MDLocation(line: 1909, column: 10, scope: !1079)
!1081 = !MDLocation(line: 1910, column: 11, scope: !1082)
!1082 = !{!"0xb\001910\0011\00184", !1, !1083}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1083 = !{!"0xb\001909\0022\00183", !1, !1079}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1084 = !MDLocation(line: 1910, column: 11, scope: !1083)
!1085 = !MDLocation(line: 1911, column: 4, scope: !1082)
!1086 = !MDLocation(line: 1912, column: 7, scope: !1083)
!1087 = !MDLocation(line: 1926, column: 2, scope: !906)
!1088 = !MDLocation(line: 1928, column: 19, scope: !1089)
!1089 = !{!"0xb\001928\0014\00185", !1, !897}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1090 = !{!"0x100\00c\001625\000", !552, !538, !224} ; [ DW_TAG_auto_variable ] [c] [line 1625]
!1091 = !MDLocation(line: 1625, column: 23, scope: !552)
!1092 = !MDLocation(line: 1928, column: 14, scope: !897)
!1093 = !MDLocation(line: 1929, column: 6, scope: !1094)
!1094 = !{!"0xb\001928\0038\00186", !1, !1089}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1095 = !MDLocation(line: 1930, column: 19, scope: !1096)
!1096 = !{!"0xb\001929\0014\00188", !1, !1097}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1097 = !{!"0xb\001929\006\00187", !1, !1094}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1098 = !MDLocation(line: 1930, column: 15, scope: !1096)
!1099 = !{!"0x100\00op\001930\000", !1096, !538, !157} ; [ DW_TAG_auto_variable ] [op] [line 1930]
!1100 = !MDLocation(line: 1930, column: 10, scope: !1096)
!1101 = !MDLocation(line: 1932, column: 10, scope: !1102)
!1102 = !{!"0xb\001932\0010\00189", !1, !1096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1103 = !MDLocation(line: 1932, column: 10, scope: !1096)
!1104 = !MDLocation(line: 1932, column: 37, scope: !1105)
!1105 = !{!"0xb\001", !1, !1102}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1106 = !MDLocation(line: 1933, column: 19, scope: !1102)
!1107 = !MDLocation(line: 1933, column: 19, scope: !1105)
!1108 = !MDLocation(line: 1933, column: 19, scope: !1109)
!1109 = !{!"0xb\002", !1, !1102}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1110 = !MDLocation(line: 1933, column: 10, scope: !1111)
!1111 = !{!"0xb\004", !1, !1112}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1112 = !{!"0xb\003", !1, !1102}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1113 = !MDLocation(line: 1934, column: 2, scope: !1096)
!1114 = !MDLocation(line: 1956, column: 8, scope: !1115)
!1115 = !{!"0xb\001956\008\00190", !1, !1094}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1116 = !MDLocation(line: 1956, column: 8, scope: !1094)
!1117 = !MDLocation(line: 1957, column: 6, scope: !1115)
!1118 = !MDLocation(line: 1959, column: 5, scope: !1094)
!1119 = !MDLocation(line: 1962, column: 6, scope: !1120)
!1120 = !{!"0xb\001962\006\00192", !1, !1121}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1121 = !{!"0xb\001960\0010\00191", !1, !1089}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1122 = !MDLocation(line: 1962, column: 6, scope: !1121)
!1123 = !MDLocation(line: 1962, column: 38, scope: !1124)
!1124 = !{!"0xb\001", !1, !1120}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1125 = !MDLocation(line: 1967, column: 12, scope: !1126)
!1126 = !{!"0xb\001967\0010\00194", !1, !1127}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1127 = !{!"0xb\001962\0066\00193", !1, !1120}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1128 = !MDLocation(line: 1967, column: 10, scope: !1127)
!1129 = !MDLocation(line: 1967, column: 22, scope: !1130)
!1130 = !{!"0xb\001", !1, !1126}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1131 = !MDLocation(line: 1967, column: 41, scope: !1132)
!1132 = !{!"0xb\002", !1, !1126}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1133 = !MDLocation(line: 1968, column: 3, scope: !1126)
!1134 = !MDLocation(line: 1968, column: 13, scope: !1126)
!1135 = !MDLocation(line: 1968, column: 36, scope: !1126)
!1136 = !MDLocation(line: 1968, column: 3, scope: !1137)
!1137 = !{!"0xb\004", !1, !1138}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1138 = !{!"0xb\003", !1, !1126}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1139 = !MDLocation(line: 1969, column: 19, scope: !1127)
!1140 = !MDLocation(line: 1969, column: 29, scope: !1141)
!1141 = !{!"0xb\001", !1, !1127}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1142 = !MDLocation(line: 1969, column: 48, scope: !1143)
!1143 = !{!"0xb\002", !1, !1127}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1144 = !{!"0x100\00float_real\001965\000", !1127, !538, !87} ; [ DW_TAG_auto_variable ] [float_real] [line 1965]
!1145 = !MDLocation(line: 1965, column: 10, scope: !1127)
!1146 = !MDLocation(line: 1971, column: 10, scope: !1147)
!1147 = !{!"0xb\001971\0010\00195", !1, !1127}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1148 = !MDLocation(line: 1971, column: 10, scope: !1127)
!1149 = !MDLocation(line: 1972, column: 38, scope: !1150)
!1150 = !{!"0xb\001971\0032\00196", !1, !1147}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1151 = !MDLocation(line: 1972, column: 10, scope: !1150)
!1152 = !{!"0x100\00last\001964\000", !1127, !538, !39} ; [ DW_TAG_auto_variable ] [last] [line 1964]
!1153 = !MDLocation(line: 1964, column: 12, scope: !1127)
!1154 = !MDLocation(line: 1974, column: 7, scope: !1150)
!1155 = !MDLocation(line: 1975, column: 14, scope: !1156)
!1156 = !{!"0xb\001974\007\00197", !1, !1150}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1157 = !MDLocation(line: 1975, column: 7, scope: !1156)
!1158 = !MDLocation(line: 1977, column: 12, scope: !1159)
!1159 = !{!"0xb\001977\0012\00198", !1, !1156}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1160 = !MDLocation(line: 1977, column: 12, scope: !1156)
!1161 = !MDLocation(line: 1978, column: 25, scope: !1159)
!1162 = !MDLocation(line: 1978, column: 21, scope: !1159)
!1163 = !MDLocation(line: 1978, column: 11, scope: !1159)
!1164 = !MDLocation(line: 1978, column: 7, scope: !1159)
!1165 = !MDLocation(line: 1979, column: 6, scope: !1150)
!1166 = !{!"0x100\00len\001981\000", !1167, !538, !48} ; [ DW_TAG_auto_variable ] [len] [line 1981]
!1167 = !{!"0xb\001980\0011\00199", !1, !1147}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1168 = !MDLocation(line: 1981, column: 10, scope: !1167)
!1169 = !MDLocation(line: 1982, column: 18, scope: !1167)
!1170 = !MDLocation(line: 1982, column: 18, scope: !1171)
!1171 = !{!"0xb\001", !1, !1167}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1172 = !MDLocation(line: 1982, column: 18, scope: !1173)
!1173 = !{!"0xb\002", !1, !1167}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1174 = !{!"0x100\00little\001982\000", !1167, !538, !39} ; [ DW_TAG_auto_variable ] [little] [line 1982]
!1175 = !MDLocation(line: 1982, column: 9, scope: !1167)
!1176 = !MDLocation(line: 1984, column: 7, scope: !1177)
!1177 = !{!"0xb\001984\007\00200", !1, !1167}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1178 = !MDLocation(line: 1984, column: 7, scope: !1167)
!1179 = !MDLocation(line: 1985, column: 11, scope: !1180)
!1180 = !{!"0xb\001985\0011\00202", !1, !1181}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1181 = !{!"0xb\001984\0027\00201", !1, !1177}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1182 = !MDLocation(line: 1985, column: 11, scope: !1181)
!1183 = !MDLocation(line: 1986, column: 20, scope: !1180)
!1184 = !MDLocation(line: 1986, column: 11, scope: !1180)
!1185 = !MDLocation(line: 1986, column: 4, scope: !1180)
!1186 = !MDLocation(line: 1987, column: 17, scope: !1187)
!1187 = !{!"0xb\001987\0016\00203", !1, !1180}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1188 = !MDLocation(line: 1987, column: 16, scope: !1180)
!1189 = !MDLocation(line: 1988, column: 11, scope: !1187)
!1190 = !MDLocation(line: 1989, column: 19, scope: !1187)
!1191 = !MDLocation(line: 1989, column: 10, scope: !1187)
!1192 = !MDLocation(line: 1988, column: 11, scope: !1193)
!1193 = !{!"0xb\001", !1, !1187}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1194 = !MDLocation(line: 1988, column: 4, scope: !1195)
!1195 = !{!"0xb\003", !1, !1196}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1196 = !{!"0xb\002", !1, !1187}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1197 = !MDLocation(line: 1991, column: 4, scope: !1187)
!1198 = !MDLocation(line: 1992, column: 3, scope: !1181)
!1199 = !MDLocation(line: 1992, column: 10, scope: !1177)
!1200 = !MDLocation(line: 1994, column: 11, scope: !1201)
!1201 = !{!"0xb\001994\0011\00205", !1, !1202}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1202 = !{!"0xb\001992\0010\00204", !1, !1177}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1203 = !MDLocation(line: 1994, column: 11, scope: !1202)
!1204 = !MDLocation(line: 1995, column: 47, scope: !1201)
!1205 = !MDLocation(line: 1995, column: 38, scope: !1201)
!1206 = !MDLocation(line: 1995, column: 11, scope: !1201)
!1207 = !MDLocation(line: 1995, column: 4, scope: !1201)
!1208 = !MDLocation(line: 2000, column: 10, scope: !1209)
!1209 = !{!"0xb\002000\0010\00206", !1, !1127}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1210 = !MDLocation(line: 2000, column: 10, scope: !1127)
!1211 = !MDLocation(line: 2004, column: 3, scope: !1212)
!1212 = !{!"0xb\002000\0024\00207", !1, !1209}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1213 = !MDLocation(line: 2006, column: 19, scope: !1127)
!1214 = !MDLocation(line: 2006, column: 35, scope: !1127)
!1215 = !MDLocation(line: 2007, column: 2, scope: !1127)
!1216 = !MDLocation(line: 2008, column: 6, scope: !1121)
!1217 = !MDLocation(line: 2008, column: 17, scope: !1218)
!1218 = !{!"0xb\002008\006\00208", !1, !1121}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1219 = !MDLocation(line: 2009, column: 19, scope: !1218)
!1220 = !MDLocation(line: 2009, column: 6, scope: !1218)
!1221 = !MDLocation(line: 2010, column: 2, scope: !1121)
!1222 = !MDLocation(line: 2012, column: 6, scope: !1121)
!1223 = !MDLocation(line: 2013, column: 6, scope: !1224)
!1224 = !{!"0xb\002012\0015\00210", !1, !1225}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1225 = !{!"0xb\002012\006\00209", !1, !1121}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1226 = !MDLocation(line: 2014, column: 7, scope: !1227)
!1227 = !{!"0xb\002014\007\00214", !1, !1228}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1228 = !{!"0xb\002013\0015\00213", !1, !1229}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1229 = !{!"0xb\002013\006\00212", !1, !1230}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1230 = !{!"0xb\002013\006\00211", !1, !1224}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1231 = !MDLocation(line: 2014, column: 7, scope: !1228)
!1232 = !MDLocation(line: 2015, column: 7, scope: !1227)
!1233 = !MDLocation(line: 2016, column: 7, scope: !1234)
!1234 = !{!"0xb\002016\007\00215", !1, !1228}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1235 = !MDLocation(line: 2016, column: 7, scope: !1228)
!1236 = !MDLocation(line: 2017, column: 7, scope: !1234)
!1237 = !MDLocation(line: 2018, column: 8, scope: !1228)
!1238 = !MDLocation(line: 2018, column: 3, scope: !1228)
!1239 = !MDLocation(line: 2013, column: 6, scope: !1229)
!1240 = !MDLocation(line: 2020, column: 2, scope: !1224)
!1241 = !MDLocation(line: 2022, column: 6, scope: !1242)
!1242 = !{!"0xb\002021\007\00216", !1, !1225}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1243 = !MDLocation(line: 2023, column: 7, scope: !1244)
!1244 = !{!"0xb\002023\007\00218", !1, !1245}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1245 = !{!"0xb\002022\009\00217", !1, !1242}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1246 = !MDLocation(line: 2023, column: 7, scope: !1245)
!1247 = !MDLocation(line: 2024, column: 7, scope: !1244)
!1248 = !MDLocation(line: 2025, column: 6, scope: !1245)
!1249 = !MDLocation(line: 2025, column: 15, scope: !1250)
!1250 = !{!"0xb\001", !1, !1242}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1251 = !MDLocation(line: 2025, column: 15, scope: !1242)
!1252 = !MDLocation(line: 2030, column: 5, scope: !552)
!1253 = !MDLocation(line: 2033, column: 5, scope: !552)
!1254 = !MDLocation(line: 2033, column: 5, scope: !614)
!1255 = !MDLocation(line: 2033, column: 5, scope: !616)
!1256 = !MDLocation(line: 2035, column: 9, scope: !1257)
!1257 = !{!"0xb\002035\009\00219", !1, !552}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1258 = !MDLocation(line: 2035, column: 9, scope: !552)
!1259 = !MDLocation(line: 2037, column: 17, scope: !1260)
!1260 = !{!"0xb\002037\006\00221", !1, !1261}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1261 = !{!"0xb\002035\0026\00220", !1, !1257}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1262 = !MDLocation(line: 2037, column: 6, scope: !1260)
!1263 = !MDLocation(line: 2037, column: 6, scope: !1261)
!1264 = !MDLocation(line: 2038, column: 6, scope: !1260)
!1265 = !MDLocation(line: 2041, column: 2, scope: !1261)
!1266 = !MDLocation(line: 2042, column: 5, scope: !1261)
!1267 = !MDLocation(line: 2045, column: 12, scope: !1268)
!1268 = !{!"0xb\002045\0010\00222", !1, !552}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1269 = !MDLocation(line: 2045, column: 10, scope: !552)
!1270 = !MDLocation(line: 2046, column: 6, scope: !1271)
!1271 = !{!"0xb\002046\006\00224", !1, !1272}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1272 = !{!"0xb\002045\0039\00223", !1, !1268}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1273 = !MDLocation(line: 2046, column: 6, scope: !1272)
!1274 = !MDLocation(line: 2047, column: 6, scope: !1275)
!1275 = !{!"0xb\002046\0029\00225", !1, !1271}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1276 = !MDLocation(line: 2048, column: 6, scope: !1275)
!1277 = !MDLocation(line: 2049, column: 2, scope: !1275)
!1278 = !MDLocation(line: 2050, column: 6, scope: !1279)
!1279 = !{!"0xb\002050\006\00226", !1, !1272}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1280 = !MDLocation(line: 2050, column: 6, scope: !1272)
!1281 = !MDLocation(line: 2051, column: 14, scope: !1282)
!1282 = !{!"0xb\002050\0030\00227", !1, !1279}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1283 = !MDLocation(line: 2051, column: 38, scope: !1282)
!1284 = !{!"0x100\00i\002051\000", !1282, !538, !157} ; [ DW_TAG_auto_variable ] [i] [line 2051]
!1285 = !MDLocation(line: 2051, column: 10, scope: !1282)
!1286 = !MDLocation(line: 2053, column: 10, scope: !1282)
!1287 = !MDLocation(line: 2054, column: 6, scope: !1282)
!1288 = !MDLocation(line: 2055, column: 6, scope: !1282)
!1289 = !MDLocation(line: 2056, column: 6, scope: !1282)
!1290 = !MDLocation(line: 2057, column: 2, scope: !1282)
!1291 = !MDLocation(line: 2059, column: 6, scope: !1292)
!1292 = !{!"0xb\002058\007\00228", !1, !1279}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1293 = !MDLocation(line: 2060, column: 21, scope: !1292)
!1294 = !MDLocation(line: 2060, column: 6, scope: !1292)
!1295 = !MDLocation(line: 2062, column: 5, scope: !1272)
!1296 = !MDLocation(line: 2064, column: 5, scope: !552)
!1297 = !MDLocation(line: 2069, column: 9, scope: !1298)
!1298 = !{!"0xb\002069\009\00229", !1, !552}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1299 = !MDLocation(line: 2069, column: 9, scope: !552)
!1300 = !MDLocation(line: 2070, column: 2, scope: !1298)
!1301 = !MDLocation(line: 2071, column: 5, scope: !552)
!1302 = !MDLocation(line: 2072, column: 1, scope: !552)
!1303 = !{!"0x101\00prog\0016777613\000", !542, !538, !484} ; [ DW_TAG_arg_variable ] [prog] [line 397]
!1304 = !MDLocation(line: 397, column: 36, scope: !542)
!1305 = !{!"0x101\00sv\0033554829\000", !542, !538, !87} ; [ DW_TAG_arg_variable ] [sv] [line 397]
!1306 = !MDLocation(line: 397, column: 46, scope: !542)
!1307 = !{!"0x101\00strpos\0050332045\000", !542, !538, !39} ; [ DW_TAG_arg_variable ] [strpos] [line 397]
!1308 = !MDLocation(line: 397, column: 56, scope: !542)
!1309 = !{!"0x101\00strend\0067109262\000", !542, !538, !39} ; [ DW_TAG_arg_variable ] [strend] [line 398]
!1310 = !MDLocation(line: 398, column: 14, scope: !542)
!1311 = !{!"0x101\00flags\0083886478\000", !542, !538, !93} ; [ DW_TAG_arg_variable ] [flags] [line 398]
!1312 = !MDLocation(line: 398, column: 26, scope: !542)
!1313 = !{!"0x101\00data\00100663694\000", !542, !538, !545} ; [ DW_TAG_arg_variable ] [data] [line 398]
!1314 = !MDLocation(line: 398, column: 53, scope: !542)
!1315 = !{!"0x100\00start_shift\00400\000", !542, !538, !157} ; [ DW_TAG_auto_variable ] [start_shift] [line 400]
!1316 = !MDLocation(line: 400, column: 18, scope: !542)
!1317 = !{!"0x100\00end_shift\00402\000", !542, !538, !157} ; [ DW_TAG_auto_variable ] [end_shift] [line 402]
!1318 = !MDLocation(line: 402, column: 18, scope: !542)
!1319 = !MDLocation(line: 407, column: 19, scope: !542)
!1320 = !MDLocation(line: 407, column: 24, scope: !1321)
!1321 = !{!"0xb\001", !1, !542}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1322 = !MDLocation(line: 407, column: 19, scope: !1323)
!1323 = !{!"0xb\002", !1, !542}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1324 = !{!"0x100\00do_utf8\00407\000", !542, !538, !86} ; [ DW_TAG_auto_variable ] [do_utf8] [line 407]
!1325 = !MDLocation(line: 407, column: 9, scope: !542)
!1326 = !{!"0x100\00other_last\00409\000", !542, !538, !39} ; [ DW_TAG_auto_variable ] [other_last] [line 409]
!1327 = !MDLocation(line: 409, column: 20, scope: !542)
!1328 = !{!"0x100\00check_at\00410\000", !542, !538, !39} ; [ DW_TAG_auto_variable ] [check_at] [line 410]
!1329 = !MDLocation(line: 410, column: 11, scope: !542)
!1330 = !MDLocation(line: 415, column: 5, scope: !542)
!1331 = !MDLocation(line: 415, column: 5, scope: !1321)
!1332 = !MDLocation(line: 415, column: 5, scope: !1323)
!1333 = !MDLocation(line: 417, column: 9, scope: !1334)
!1334 = !{!"0xb\00417\009\000", !1, !542}         ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1335 = !MDLocation(line: 417, column: 9, scope: !542)
!1336 = !MDLocation(line: 420, column: 2, scope: !1337)
!1337 = !{!"0xb\00417\0036\001", !1, !1334}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1338 = !MDLocation(line: 421, column: 5, scope: !1337)
!1339 = !MDLocation(line: 448, column: 9, scope: !1340)
!1340 = !{!"0xb\00448\009\002", !1, !542}         ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1341 = !MDLocation(line: 448, column: 24, scope: !1340)
!1342 = !MDLocation(line: 448, column: 9, scope: !542)
!1343 = !MDLocation(line: 451, column: 2, scope: !1344)
!1344 = !{!"0xb\00448\0041\003", !1, !1340}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1345 = !MDLocation(line: 453, column: 14, scope: !542)
!1346 = !MDLocation(line: 453, column: 21, scope: !1321)
!1347 = !MDLocation(line: 453, column: 43, scope: !542)
!1348 = !MDLocation(line: 453, column: 34, scope: !542)
!1349 = !{!"0x100\00strbeg\00405\000", !542, !538, !39} ; [ DW_TAG_auto_variable ] [strbeg] [line 405]
!1350 = !MDLocation(line: 405, column: 11, scope: !542)
!1351 = !MDLocation(line: 454, column: 5, scope: !542)
!1352 = !MDLocation(line: 455, column: 9, scope: !542)
!1353 = !MDLocation(line: 456, column: 7, scope: !1354)
!1354 = !{!"0xb\00456\006\006", !1, !1355}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1355 = !{!"0xb\00455\0018\005", !1, !1356}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1356 = !{!"0xb\00455\009\004", !1, !542}         ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1357 = !MDLocation(line: 456, column: 6, scope: !1355)
!1358 = !MDLocation(line: 456, column: 27, scope: !1359)
!1359 = !{!"0xb\001", !1, !1354}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1360 = !MDLocation(line: 457, column: 6, scope: !1354)
!1361 = !MDLocation(line: 458, column: 10, scope: !1355)
!1362 = !{!"0x100\00check\00404\000", !542, !538, !87} ; [ DW_TAG_auto_variable ] [check] [line 404]
!1363 = !MDLocation(line: 404, column: 18, scope: !542)
!1364 = !MDLocation(line: 459, column: 5, scope: !1355)
!1365 = !MDLocation(line: 460, column: 7, scope: !1366)
!1366 = !{!"0xb\00460\006\008", !1, !1367}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1367 = !{!"0xb\00459\0012\007", !1, !1356}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1368 = !MDLocation(line: 460, column: 6, scope: !1367)
!1369 = !MDLocation(line: 460, column: 29, scope: !1370)
!1370 = !{!"0xb\001", !1, !1366}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1371 = !MDLocation(line: 461, column: 6, scope: !1366)
!1372 = !MDLocation(line: 462, column: 10, scope: !1367)
!1373 = !MDLocation(line: 464, column: 8, scope: !1374)
!1374 = !{!"0xb\00464\008\009", !1, !542}         ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1375 = !MDLocation(line: 464, column: 8, scope: !542)
!1376 = !MDLocation(line: 467, column: 2, scope: !1377)
!1377 = !{!"0xb\00464\0031\0010", !1, !1374}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1378 = !MDLocation(line: 469, column: 9, scope: !1379)
!1379 = !{!"0xb\00469\009\0011", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1380 = !MDLocation(line: 469, column: 9, scope: !542)
!1381 = !MDLocation(line: 470, column: 16, scope: !1382)
!1382 = !{!"0xb\00469\0036\0012", !1, !1379}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1383 = !MDLocation(line: 470, column: 15, scope: !1382)
!1384 = !MDLocation(line: 471, column: 14, scope: !1382)
!1385 = !MDLocation(line: 471, column: 13, scope: !1382)
!1386 = !MDLocation(line: 472, column: 10, scope: !1382)
!1387 = !MDLocation(line: 472, column: 9, scope: !1382)
!1388 = !MDLocation(line: 470, column: 12, scope: !1389)
!1389 = !{!"0xb\002", !1, !1390}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1390 = !{!"0xb\001", !1, !1382}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1391 = !{!"0x100\00ml_anch\00408\000", !542, !538, !157} ; [ DW_TAG_auto_variable ] [ml_anch] [line 408]
!1392 = !MDLocation(line: 408, column: 9, scope: !542)
!1393 = !MDLocation(line: 474, column: 6, scope: !1382)
!1394 = !MDLocation(line: 475, column: 11, scope: !1395)
!1395 = !{!"0xb\00475\009\0015", !1, !1396}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1396 = !{!"0xb\00474\0016\0014", !1, !1397}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1397 = !{!"0xb\00474\006\0013", !1, !1382}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1398 = !MDLocation(line: 475, column: 9, scope: !1396)
!1399 = !MDLocation(line: 478, column: 19, scope: !1395)
!1400 = !MDLocation(line: 479, column: 13, scope: !1395)
!1401 = !MDLocation(line: 481, column: 8, scope: !1402)
!1402 = !{!"0xb\00479\0032\0016", !1, !1395}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1403 = !MDLocation(line: 483, column: 8, scope: !1404)
!1404 = !{!"0xb\00483\008\0017", !1, !1396}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1405 = !MDLocation(line: 483, column: 34, scope: !1404)
!1406 = !MDLocation(line: 483, column: 8, scope: !1396)
!1407 = !MDLocation(line: 484, column: 10, scope: !1404)
!1408 = !MDLocation(line: 488, column: 10, scope: !1409)
!1409 = !{!"0xb\00484\0043\0018", !1, !1404}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1410 = !MDLocation(line: 488, column: 10, scope: !1411)
!1411 = !{!"0xb\001", !1, !1409}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1412 = !MDLocation(line: 488, column: 10, scope: !1413)
!1413 = !{!"0xb\002", !1, !1409}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1414 = !{!"0x100\00s\00403\000", !542, !538, !39} ; [ DW_TAG_auto_variable ] [s] [line 403]
!1415 = !MDLocation(line: 403, column: 20, scope: !542)
!1416 = !MDLocation(line: 489, column: 10, scope: !1417)
!1417 = !{!"0xb\00489\0010\0019", !1, !1409}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1418 = !MDLocation(line: 489, column: 10, scope: !1409)
!1419 = !MDLocation(line: 490, column: 10, scope: !1420)
!1420 = !{!"0xb\00489\0025\0020", !1, !1417}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1421 = !{!"0x100\00slen\00486\000", !1409, !538, !157} ; [ DW_TAG_auto_variable ] [slen] [line 486]
!1422 = !MDLocation(line: 486, column: 10, scope: !1409)
!1423 = !MDLocation(line: 492, column: 8, scope: !1424)
!1424 = !{!"0xb\00492\008\0021", !1, !1420}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1425 = !MDLocation(line: 492, column: 21, scope: !1424)
!1426 = !MDLocation(line: 492, column: 8, scope: !1420)
!1427 = !MDLocation(line: 492, column: 29, scope: !1424)
!1428 = !MDLocation(line: 492, column: 42, scope: !1424)
!1429 = !MDLocation(line: 493, column: 12, scope: !1424)
!1430 = !MDLocation(line: 493, column: 26, scope: !1424)
!1431 = !MDLocation(line: 493, column: 34, scope: !1424)
!1432 = !MDLocation(line: 495, column: 7, scope: !1433)
!1433 = !{!"0xb\00493\0055\0022", !1, !1424}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1434 = !MDLocation(line: 498, column: 3, scope: !1420)
!1435 = !MDLocation(line: 499, column: 7, scope: !1420)
!1436 = !MDLocation(line: 499, column: 17, scope: !1437)
!1437 = !{!"0xb\001", !1, !1438}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1438 = !{!"0xb\00499\007\0023", !1, !1420}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1439 = !MDLocation(line: 499, column: 16, scope: !1438)
!1440 = !MDLocation(line: 499, column: 33, scope: !1438)
!1441 = !MDLocation(line: 500, column: 13, scope: !1438)
!1442 = !MDLocation(line: 501, column: 9, scope: !1438)
!1443 = !MDLocation(line: 501, column: 41, scope: !1438)
!1444 = !MDLocation(line: 504, column: 7, scope: !1445)
!1445 = !{!"0xb\00501\0041\0024", !1, !1438}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1446 = !MDLocation(line: 506, column: 6, scope: !1420)
!1447 = !MDLocation(line: 507, column: 16, scope: !1448)
!1448 = !{!"0xb\00507\0015\0025", !1, !1417}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1449 = !MDLocation(line: 507, column: 15, scope: !1448)
!1450 = !MDLocation(line: 507, column: 32, scope: !1448)
!1451 = !MDLocation(line: 507, column: 15, scope: !1417)
!1452 = !MDLocation(line: 508, column: 20, scope: !1448)
!1453 = !MDLocation(line: 508, column: 12, scope: !1448)
!1454 = !MDLocation(line: 509, column: 8, scope: !1448)
!1455 = !MDLocation(line: 510, column: 3, scope: !1448)
!1456 = !MDLocation(line: 511, column: 6, scope: !1409)
!1457 = !MDLocation(line: 513, column: 2, scope: !1396)
!1458 = !MDLocation(line: 516, column: 16, scope: !1382)
!1459 = !MDLocation(line: 517, column: 14, scope: !1382)
!1460 = !MDLocation(line: 518, column: 6, scope: !1382)
!1461 = !MDLocation(line: 518, column: 6, scope: !1390)
!1462 = !MDLocation(line: 518, column: 6, scope: !1463)
!1463 = !{!"0xb\002", !1, !1382}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1464 = !MDLocation(line: 518, column: 26, scope: !1382)
!1465 = !MDLocation(line: 518, column: 25, scope: !1382)
!1466 = !MDLocation(line: 519, column: 6, scope: !1382)
!1467 = !MDLocation(line: 520, column: 16, scope: !1468)
!1468 = !{!"0xb\00519\0016\0027", !1, !1469}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1469 = !{!"0xb\00519\006\0026", !1, !1382}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1470 = !MDLocation(line: 520, column: 41, scope: !1468)
!1471 = !MDLocation(line: 520, column: 41, scope: !1472)
!1472 = !{!"0xb\001", !1, !1468}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1473 = !MDLocation(line: 520, column: 41, scope: !1474)
!1474 = !{!"0xb\002", !1, !1468}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1475 = !MDLocation(line: 520, column: 16, scope: !1476)
!1476 = !{!"0xb\004", !1, !1477}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1477 = !{!"0xb\003", !1, !1468}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1478 = !MDLocation(line: 521, column: 10, scope: !1468)
!1479 = !MDLocation(line: 521, column: 9, scope: !1468)
!1480 = !{!"0x100\00end\00520\000", !1468, !538, !157} ; [ DW_TAG_auto_variable ] [end] [line 520]
!1481 = !MDLocation(line: 520, column: 10, scope: !1468)
!1482 = !MDLocation(line: 522, column: 19, scope: !1468)
!1483 = !MDLocation(line: 522, column: 19, scope: !1472)
!1484 = !MDLocation(line: 522, column: 19, scope: !1474)
!1485 = !MDLocation(line: 522, column: 51, scope: !1476)
!1486 = !{!"0x100\00eshift\00522\000", !1468, !538, !157} ; [ DW_TAG_auto_variable ] [eshift] [line 522]
!1487 = !MDLocation(line: 522, column: 10, scope: !1468)
!1488 = !MDLocation(line: 524, column: 10, scope: !1489)
!1489 = !{!"0xb\00524\0010\0028", !1, !1468}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1490 = !MDLocation(line: 524, column: 10, scope: !1468)
!1491 = !MDLocation(line: 525, column: 3, scope: !1489)
!1492 = !MDLocation(line: 526, column: 2, scope: !1468)
!1493 = !MDLocation(line: 527, column: 5, scope: !1382)
!1494 = !MDLocation(line: 531, column: 16, scope: !1495)
!1495 = !{!"0xb\00528\0010\0029", !1, !1379}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1496 = !MDLocation(line: 533, column: 14, scope: !1495)
!1497 = !MDLocation(line: 534, column: 6, scope: !1495)
!1498 = !MDLocation(line: 534, column: 6, scope: !1499)
!1499 = !{!"0xb\001", !1, !1495}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1500 = !MDLocation(line: 534, column: 6, scope: !1501)
!1501 = !{!"0xb\002", !1, !1495}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1502 = !MDLocation(line: 534, column: 26, scope: !1495)
!1503 = !MDLocation(line: 534, column: 25, scope: !1495)
!1504 = !MDLocation(line: 469, column: 25, scope: !1379)
!1505 = !MDLocation(line: 545, column: 9, scope: !1506)
!1506 = !{!"0xb\00545\009\0030", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1507 = !MDLocation(line: 545, column: 9, scope: !542)
!1508 = !{!"0x100\00p\00546\000", !1509, !538, !157} ; [ DW_TAG_auto_variable ] [p] [line 546]
!1509 = !{!"0xb\00545\0031\0031", !1, !1506}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1510 = !MDLocation(line: 546, column: 6, scope: !1509)
!1511 = !MDLocation(line: 547, column: 12, scope: !1509)
!1512 = !MDLocation(line: 547, column: 19, scope: !1513)
!1513 = !{!"0xb\001", !1, !1509}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1514 = !MDLocation(line: 547, column: 12, scope: !1515)
!1515 = !{!"0xb\002", !1, !1509}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1516 = !{!"0x100\00pp\00547\000", !1509, !538, !221} ; [ DW_TAG_auto_variable ] [pp] [line 547]
!1517 = !MDLocation(line: 547, column: 7, scope: !1509)
!1518 = !MDLocation(line: 549, column: 21, scope: !1519)
!1519 = !{!"0xb\00549\006\0032", !1, !1509}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1520 = !MDLocation(line: 549, column: 6, scope: !1519)
!1521 = !MDLocation(line: 549, column: 6, scope: !1509)
!1522 = !MDLocation(line: 550, column: 11, scope: !1519)
!1523 = !MDLocation(line: 551, column: 8, scope: !1519)
!1524 = !MDLocation(line: 551, column: 29, scope: !1519)
!1525 = !MDLocation(line: 552, column: 7, scope: !1519)
!1526 = !MDLocation(line: 554, column: 8, scope: !1519)
!1527 = !MDLocation(line: 554, column: 23, scope: !1519)
!1528 = !MDLocation(line: 553, column: 10, scope: !1519)
!1529 = !MDLocation(line: 553, column: 6, scope: !1519)
!1530 = !MDLocation(line: 556, column: 6, scope: !1519)
!1531 = !MDLocation(line: 558, column: 6, scope: !1509)
!1532 = !MDLocation(line: 558, column: 11, scope: !1533)
!1533 = !{!"0xb\001", !1, !1534}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1534 = !{!"0xb\00558\006\0033", !1, !1509}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1535 = !MDLocation(line: 559, column: 24, scope: !1534)
!1536 = !MDLocation(line: 559, column: 20, scope: !1534)
!1537 = !MDLocation(line: 559, column: 10, scope: !1534)
!1538 = !MDLocation(line: 559, column: 6, scope: !1534)
!1539 = !MDLocation(line: 560, column: 6, scope: !1509)
!1540 = !MDLocation(line: 561, column: 7, scope: !1541)
!1541 = !{!"0xb\00560\006\0034", !1, !1509}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1542 = !MDLocation(line: 561, column: 6, scope: !1541)
!1543 = !MDLocation(line: 562, column: 5, scope: !1509)
!1544 = !MDLocation(line: 563, column: 14, scope: !1545)
!1545 = !{!"0xb\00563\0014\0035", !1, !1506}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1546 = !MDLocation(line: 563, column: 14, scope: !1506)
!1547 = !MDLocation(line: 564, column: 22, scope: !1545)
!1548 = !MDLocation(line: 565, column: 15, scope: !1545)
!1549 = !MDLocation(line: 566, column: 16, scope: !1545)
!1550 = !MDLocation(line: 564, column: 6, scope: !1545)
!1551 = !MDLocation(line: 564, column: 2, scope: !1545)
!1552 = !MDLocation(line: 568, column: 16, scope: !1545)
!1553 = !MDLocation(line: 568, column: 16, scope: !1554)
!1554 = !{!"0xb\001", !1, !1545}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1555 = !MDLocation(line: 568, column: 16, scope: !1556)
!1556 = !{!"0xb\002", !1, !1545}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1557 = !MDLocation(line: 569, column: 9, scope: !1545)
!1558 = !MDLocation(line: 569, column: 9, scope: !1554)
!1559 = !MDLocation(line: 569, column: 9, scope: !1556)
!1560 = !MDLocation(line: 570, column: 16, scope: !1545)
!1561 = !MDLocation(line: 568, column: 6, scope: !1545)
!1562 = !MDLocation(line: 584, column: 9, scope: !542)
!1563 = !MDLocation(line: 585, column: 2, scope: !1564)
!1564 = !{!"0xb\00584\009\0036", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1565 = !MDLocation(line: 600, column: 9, scope: !542)
!1566 = !MDLocation(line: 600, column: 20, scope: !1567)
!1567 = !{!"0xb\001", !1, !1568}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1568 = !{!"0xb\00600\009\0037", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1569 = !MDLocation(line: 600, column: 40, scope: !1570)
!1570 = !{!"0xb\003", !1, !1568}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1571 = !MDLocation(line: 600, column: 64, scope: !1572)
!1572 = !{!"0xb\002", !1, !1568}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1573 = !MDLocation(line: 600, column: 86, scope: !1574)
!1574 = !{!"0xb\004", !1, !1568}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1575 = !MDLocation(line: 603, column: 6, scope: !1576)
!1576 = !{!"0xb\00600\00110\0038", !1, !1568}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1577 = !MDLocation(line: 604, column: 6, scope: !1578)
!1578 = !{!"0xb\00603\006\0039", !1, !1576}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1579 = !MDLocation(line: 605, column: 16, scope: !1580)
!1580 = !{!"0xb\00605\006\0040", !1, !1576}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1581 = !MDLocation(line: 605, column: 26, scope: !1582)
!1582 = !{!"0xb\001", !1, !1580}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1583 = !MDLocation(line: 605, column: 45, scope: !1584)
!1584 = !{!"0xb\002", !1, !1580}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1585 = !MDLocation(line: 605, column: 6, scope: !1586)
!1586 = !{!"0xb\004", !1, !1587}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1587 = !{!"0xb\003", !1, !1580}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1588 = !MDLocation(line: 605, column: 6, scope: !1576)
!1589 = !MDLocation(line: 605, column: 66, scope: !1590)
!1590 = !{!"0xb\005", !1, !1580}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1591 = !MDLocation(line: 608, column: 16, scope: !1592)
!1592 = !{!"0xb\00607\006\0042", !1, !1593}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1593 = !{!"0xb\00605\0066\0041", !1, !1580}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1594 = !MDLocation(line: 608, column: 16, scope: !1595)
!1595 = !{!"0xb\001", !1, !1592}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1596 = !MDLocation(line: 608, column: 16, scope: !1597)
!1597 = !{!"0xb\002", !1, !1592}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1598 = !{!"0x100\00last\00608\000", !1592, !538, !39} ; [ DW_TAG_auto_variable ] [last] [line 608]
!1599 = !MDLocation(line: 608, column: 9, scope: !1592)
!1600 = !{!"0x100\00s1\00609\000", !1592, !538, !39} ; [ DW_TAG_auto_variable ] [s1] [line 609]
!1601 = !MDLocation(line: 609, column: 9, scope: !1592)
!1602 = !MDLocation(line: 612, column: 11, scope: !1592)
!1603 = !MDLocation(line: 612, column: 7, scope: !1592)
!1604 = !{!"0x100\00t\00406\000", !542, !538, !39} ; [ DW_TAG_auto_variable ] [t] [line 406]
!1605 = !MDLocation(line: 406, column: 11, scope: !542)
!1606 = !MDLocation(line: 613, column: 7, scope: !1607)
!1607 = !{!"0xb\00613\007\0043", !1, !1592}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1608 = !MDLocation(line: 613, column: 20, scope: !1607)
!1609 = !MDLocation(line: 613, column: 7, scope: !1592)
!1610 = !MDLocation(line: 615, column: 13, scope: !1607)
!1611 = !MDLocation(line: 616, column: 11, scope: !1607)
!1612 = !MDLocation(line: 613, column: 7, scope: !1613)
!1613 = !{!"0xb\002", !1, !1595}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1614 = !MDLocation(line: 620, column: 7, scope: !1592)
!1615 = !MDLocation(line: 620, column: 7, scope: !1595)
!1616 = !MDLocation(line: 620, column: 7, scope: !1597)
!1617 = !MDLocation(line: 621, column: 7, scope: !1618)
!1618 = !{!"0xb\00621\007\0044", !1, !1592}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1619 = !MDLocation(line: 621, column: 7, scope: !1592)
!1620 = !MDLocation(line: 622, column: 7, scope: !1618)
!1621 = !MDLocation(line: 623, column: 19, scope: !1592)
!1622 = !MDLocation(line: 623, column: 19, scope: !1595)
!1623 = !MDLocation(line: 623, column: 19, scope: !1597)
!1624 = !{!"0x100\00last1\00608\000", !1592, !538, !39} ; [ DW_TAG_auto_variable ] [last1] [line 608]
!1625 = !MDLocation(line: 608, column: 49, scope: !1592)
!1626 = !{!"0x100\00last2\00608\000", !1592, !538, !39} ; [ DW_TAG_auto_variable ] [last2] [line 608]
!1627 = !MDLocation(line: 608, column: 57, scope: !1592)
!1628 = !MDLocation(line: 624, column: 7, scope: !1629)
!1629 = !{!"0xb\00624\007\0045", !1, !1592}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1630 = !MDLocation(line: 624, column: 7, scope: !1592)
!1631 = !MDLocation(line: 625, column: 7, scope: !1629)
!1632 = !MDLocation(line: 628, column: 10, scope: !1592)
!1633 = !MDLocation(line: 628, column: 20, scope: !1595)
!1634 = !MDLocation(line: 628, column: 42, scope: !1597)
!1635 = !{!"0x100\00must\00610\000", !1592, !538, !87} ; [ DW_TAG_auto_variable ] [must] [line 610]
!1636 = !MDLocation(line: 610, column: 7, scope: !1592)
!1637 = !MDLocation(line: 629, column: 7, scope: !1638)
!1638 = !{!"0xb\00629\007\0046", !1, !1592}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1639 = !MDLocation(line: 629, column: 7, scope: !1592)
!1640 = !MDLocation(line: 632, column: 3, scope: !1641)
!1641 = !{!"0xb\00629\0029\0047", !1, !1638}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1642 = !MDLocation(line: 636, column: 4, scope: !1638)
!1643 = !MDLocation(line: 636, column: 4, scope: !1644)
!1644 = !{!"0xb\001", !1, !1638}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1645 = !MDLocation(line: 636, column: 4, scope: !1646)
!1646 = !{!"0xb\003", !1, !1638}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1647 = !MDLocation(line: 636, column: 4, scope: !1648)
!1648 = !{!"0xb\004", !1, !1638}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1649 = !MDLocation(line: 636, column: 4, scope: !1650)
!1650 = !{!"0xb\006", !1, !1651}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1651 = !{!"0xb\005", !1, !1638}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1652 = !MDLocation(line: 636, column: 4, scope: !1653)
!1653 = !{!"0xb\002", !1, !1638}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1654 = !MDLocation(line: 636, column: 4, scope: !1655)
!1655 = !{!"0xb\007", !1, !1638}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1656 = !MDLocation(line: 636, column: 4, scope: !1657)
!1657 = !{!"0xb\008", !1, !1638}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1658 = !MDLocation(line: 636, column: 4, scope: !1659)
!1659 = !{!"0xb\0010", !1, !1660}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1660 = !{!"0xb\009", !1, !1638}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1661 = !MDLocation(line: 639, column: 4, scope: !1638)
!1662 = !MDLocation(line: 634, column: 11, scope: !1638)
!1663 = !MDLocation(line: 649, column: 7, scope: !1592)
!1664 = !MDLocation(line: 650, column: 11, scope: !1665)
!1665 = !{!"0xb\00650\0011\0050", !1, !1666}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1666 = !{!"0xb\00649\0011\0049", !1, !1667}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1667 = !{!"0xb\00649\007\0048", !1, !1592}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1668 = !MDLocation(line: 650, column: 11, scope: !1666)
!1669 = !MDLocation(line: 653, column: 4, scope: !1670)
!1670 = !{!"0xb\00650\0027\0051", !1, !1665}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1671 = !MDLocation(line: 658, column: 20, scope: !1666)
!1672 = !MDLocation(line: 658, column: 20, scope: !1673)
!1673 = !{!"0xb\001", !1, !1666}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1674 = !MDLocation(line: 658, column: 20, scope: !1675)
!1675 = !{!"0xb\002", !1, !1666}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1676 = !MDLocation(line: 659, column: 11, scope: !1666)
!1677 = !MDLocation(line: 659, column: 11, scope: !1673)
!1678 = !MDLocation(line: 659, column: 11, scope: !1675)
!1679 = !MDLocation(line: 660, column: 7, scope: !1666)
!1680 = !MDLocation(line: 665, column: 11, scope: !1681)
!1681 = !{!"0xb\00662\008\0052", !1, !1667}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1682 = !MDLocation(line: 665, column: 11, scope: !1683)
!1683 = !{!"0xb\001", !1, !1681}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1684 = !MDLocation(line: 665, column: 11, scope: !1685)
!1685 = !{!"0xb\002", !1, !1681}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1686 = !MDLocation(line: 666, column: 20, scope: !1681)
!1687 = !MDLocation(line: 666, column: 20, scope: !1683)
!1688 = !MDLocation(line: 666, column: 20, scope: !1685)
!1689 = !MDLocation(line: 668, column: 11, scope: !1690)
!1690 = !{!"0xb\00668\0011\0053", !1, !1681}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1691 = !MDLocation(line: 668, column: 11, scope: !1681)
!1692 = !MDLocation(line: 669, column: 4, scope: !1690)
!1693 = !MDLocation(line: 670, column: 7, scope: !1681)
!1694 = !{!"0x100\00s1\00676\000", !1695, !538, !39} ; [ DW_TAG_auto_variable ] [s1] [line 676]
!1695 = !{!"0xb\00674\007\0054", !1, !1580}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1696 = !MDLocation(line: 676, column: 12, scope: !1695)
!1697 = !MDLocation(line: 679, column: 10, scope: !1695)
!1698 = !MDLocation(line: 679, column: 10, scope: !1699)
!1699 = !{!"0xb\001", !1, !1695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1700 = !MDLocation(line: 679, column: 10, scope: !1701)
!1701 = !{!"0xb\002", !1, !1695}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1702 = !MDLocation(line: 681, column: 3, scope: !1695)
!1703 = !MDLocation(line: 681, column: 3, scope: !1699)
!1704 = !MDLocation(line: 681, column: 3, scope: !1701)
!1705 = !{!"0x100\00last\00675\000", !1695, !538, !39} ; [ DW_TAG_auto_variable ] [last] [line 675]
!1706 = !MDLocation(line: 675, column: 12, scope: !1695)
!1707 = !{!"0x100\00last1\00675\000", !1695, !538, !39} ; [ DW_TAG_auto_variable ] [last1] [line 675]
!1708 = !MDLocation(line: 675, column: 19, scope: !1695)
!1709 = !MDLocation(line: 682, column: 10, scope: !1710)
!1710 = !{!"0xb\00682\0010\0055", !1, !1695}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1711 = !MDLocation(line: 682, column: 10, scope: !1712)
!1712 = !{!"0xb\001", !1, !1710}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1713 = !MDLocation(line: 682, column: 10, scope: !1714)
!1714 = !{!"0xb\002", !1, !1710}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1715 = !MDLocation(line: 682, column: 40, scope: !1716)
!1716 = !{!"0xb\004", !1, !1717}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1717 = !{!"0xb\003", !1, !1710}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1718 = !MDLocation(line: 682, column: 10, scope: !1695)
!1719 = !MDLocation(line: 683, column: 10, scope: !1710)
!1720 = !MDLocation(line: 683, column: 10, scope: !1712)
!1721 = !MDLocation(line: 683, column: 10, scope: !1714)
!1722 = !MDLocation(line: 683, column: 3, scope: !1716)
!1723 = !MDLocation(line: 684, column: 10, scope: !1695)
!1724 = !MDLocation(line: 684, column: 10, scope: !1699)
!1725 = !MDLocation(line: 684, column: 10, scope: !1701)
!1726 = !MDLocation(line: 685, column: 10, scope: !1727)
!1727 = !{!"0xb\00685\0010\0056", !1, !1695}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1728 = !MDLocation(line: 685, column: 10, scope: !1695)
!1729 = !MDLocation(line: 686, column: 3, scope: !1727)
!1730 = !MDLocation(line: 688, column: 13, scope: !1695)
!1731 = !MDLocation(line: 688, column: 23, scope: !1699)
!1732 = !MDLocation(line: 688, column: 42, scope: !1701)
!1733 = !{!"0x100\00must\00677\000", !1695, !538, !87} ; [ DW_TAG_auto_variable ] [must] [line 677]
!1734 = !MDLocation(line: 677, column: 10, scope: !1695)
!1735 = !MDLocation(line: 692, column: 10, scope: !1736)
!1736 = !{!"0xb\00692\0010\0057", !1, !1695}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1737 = !MDLocation(line: 692, column: 10, scope: !1695)
!1738 = !MDLocation(line: 695, column: 6, scope: !1739)
!1739 = !{!"0xb\00692\0032\0058", !1, !1736}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1740 = !MDLocation(line: 698, column: 33, scope: !1736)
!1741 = !MDLocation(line: 698, column: 10, scope: !1736)
!1742 = !MDLocation(line: 699, column: 10, scope: !1736)
!1743 = !MDLocation(line: 700, column: 16, scope: !1736)
!1744 = !MDLocation(line: 697, column: 7, scope: !1736)
!1745 = !MDLocation(line: 707, column: 10, scope: !1695)
!1746 = !MDLocation(line: 708, column: 7, scope: !1747)
!1747 = !{!"0xb\00708\007\0061", !1, !1748}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1748 = !{!"0xb\00707\0014\0060", !1, !1749}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1749 = !{!"0xb\00707\0010\0059", !1, !1695}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1750 = !MDLocation(line: 708, column: 7, scope: !1748)
!1751 = !MDLocation(line: 711, column: 7, scope: !1752)
!1752 = !{!"0xb\00708\0022\0062", !1, !1747}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1753 = !MDLocation(line: 717, column: 7, scope: !1748)
!1754 = !MDLocation(line: 717, column: 7, scope: !1755)
!1755 = !{!"0xb\001", !1, !1748}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1756 = !MDLocation(line: 717, column: 7, scope: !1757)
!1757 = !{!"0xb\002", !1, !1748}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1758 = !MDLocation(line: 718, column: 3, scope: !1748)
!1759 = !MDLocation(line: 725, column: 7, scope: !1760)
!1760 = !{!"0xb\00725\007\0064", !1, !1761}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1761 = !{!"0xb\00720\0011\0063", !1, !1749}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1762 = !MDLocation(line: 725, column: 7, scope: !1761)
!1763 = !MDLocation(line: 726, column: 7, scope: !1760)
!1764 = !MDLocation(line: 727, column: 3, scope: !1761)
!1765 = !MDLocation(line: 732, column: 13, scope: !542)
!1766 = !MDLocation(line: 732, column: 9, scope: !542)
!1767 = !MDLocation(line: 733, column: 9, scope: !1768)
!1768 = !{!"0xb\00733\009\0065", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1769 = !MDLocation(line: 733, column: 22, scope: !1768)
!1770 = !MDLocation(line: 733, column: 9, scope: !542)
!1771 = !MDLocation(line: 735, column: 15, scope: !1768)
!1772 = !MDLocation(line: 736, column: 7, scope: !1768)
!1773 = !MDLocation(line: 736, column: 21, scope: !1768)
!1774 = !MDLocation(line: 740, column: 6, scope: !1775)
!1775 = !{!"0xb\00736\0021\0066", !1, !1768}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1776 = !MDLocation(line: 740, column: 17, scope: !1777)
!1777 = !{!"0xb\001", !1, !1778}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1778 = !{!"0xb\00740\006\0067", !1, !1775}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1779 = !MDLocation(line: 740, column: 32, scope: !1780)
!1780 = !{!"0xb\002", !1, !1778}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1781 = !MDLocation(line: 748, column: 6, scope: !1782)
!1782 = !{!"0xb\00740\0032\0068", !1, !1778}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1783 = !MDLocation(line: 748, column: 26, scope: !1782)
!1784 = !MDLocation(line: 748, column: 17, scope: !1782)
!1785 = !MDLocation(line: 748, column: 13, scope: !1782)
!1786 = !MDLocation(line: 749, column: 7, scope: !1787)
!1787 = !{!"0xb\00749\007\0070", !1, !1788}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1788 = !{!"0xb\00748\0040\0069", !1, !1782}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1789 = !MDLocation(line: 749, column: 7, scope: !1788)
!1790 = !MDLocation(line: 750, column: 26, scope: !1791)
!1791 = !{!"0xb\00750\0011\0072", !1, !1792}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1792 = !{!"0xb\00749\0019\0071", !1, !1787}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1793 = !MDLocation(line: 750, column: 15, scope: !1791)
!1794 = !MDLocation(line: 750, column: 11, scope: !1791)
!1795 = !MDLocation(line: 750, column: 11, scope: !1792)
!1796 = !MDLocation(line: 751, column: 8, scope: !1797)
!1797 = !{!"0xb\00750\0050\0073", !1, !1791}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1798 = !MDLocation(line: 751, column: 18, scope: !1799)
!1799 = !{!"0xb\001", !1, !1800}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1800 = !{!"0xb\00751\008\0074", !1, !1797}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1801 = !MDLocation(line: 751, column: 40, scope: !1802)
!1802 = !{!"0xb\002", !1, !1800}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1803 = !MDLocation(line: 759, column: 17, scope: !1804)
!1804 = !{!"0xb\00751\0063\0075", !1, !1800}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1805 = !MDLocation(line: 762, column: 8, scope: !1804)
!1806 = !MDLocation(line: 766, column: 8, scope: !1797)
!1807 = !MDLocation(line: 769, column: 4, scope: !1797)
!1808 = !MDLocation(line: 776, column: 33, scope: !1792)
!1809 = !MDLocation(line: 777, column: 7, scope: !1792)
!1810 = !MDLocation(line: 779, column: 3, scope: !1788)
!1811 = !MDLocation(line: 783, column: 6, scope: !1782)
!1812 = !MDLocation(line: 789, column: 2, scope: !1775)
!1813 = !MDLocation(line: 791, column: 4, scope: !1775)
!1814 = !MDLocation(line: 791, column: 4, scope: !1815)
!1815 = !{!"0xb\001", !1, !1775}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1816 = !MDLocation(line: 791, column: 4, scope: !1817)
!1817 = !{!"0xb\002", !1, !1775}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1818 = !MDLocation(line: 791, column: 4, scope: !1819)
!1819 = !{!"0xb\004", !1, !1820}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1820 = !{!"0xb\003", !1, !1775}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1821 = !MDLocation(line: 791, column: 2, scope: !1775)
!1822 = !MDLocation(line: 792, column: 5, scope: !1775)
!1823 = !MDLocation(line: 793, column: 10, scope: !1768)
!1824 = !MDLocation(line: 801, column: 6, scope: !1825)
!1825 = !{!"0xb\00793\0010\0077", !1, !1768}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1826 = !MDLocation(line: 801, column: 24, scope: !1827)
!1827 = !{!"0xb\002", !1, !1828}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1828 = !{!"0xb\00801\006\0078", !1, !1825}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1829 = !MDLocation(line: 802, column: 10, scope: !1828)
!1830 = !MDLocation(line: 802, column: 31, scope: !1828)
!1831 = !MDLocation(line: 804, column: 11, scope: !1828)
!1832 = !MDLocation(line: 807, column: 6, scope: !1833)
!1833 = !{!"0xb\00805\002\0079", !1, !1828}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1834 = !MDLocation(line: 804, column: 40, scope: !1828)
!1835 = !MDLocation(line: 814, column: 8, scope: !1836)
!1836 = !{!"0xb\00814\006\0080", !1, !1825}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1837 = !MDLocation(line: 814, column: 6, scope: !1825)
!1838 = !MDLocation(line: 816, column: 3, scope: !1836)
!1839 = !MDLocation(line: 817, column: 8, scope: !1836)
!1840 = !MDLocation(line: 817, column: 6, scope: !1836)
!1841 = !MDLocation(line: 818, column: 7, scope: !1836)
!1842 = !MDLocation(line: 818, column: 27, scope: !1836)
!1843 = !MDLocation(line: 820, column: 3, scope: !1836)
!1844 = !MDLocation(line: 821, column: 8, scope: !1836)
!1845 = !MDLocation(line: 821, column: 6, scope: !1836)
!1846 = !MDLocation(line: 822, column: 7, scope: !1836)
!1847 = !MDLocation(line: 822, column: 29, scope: !1836)
!1848 = !MDLocation(line: 827, column: 6, scope: !1849)
!1849 = !{!"0xb\00824\002\0081", !1, !1836}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1850 = !MDLocation(line: 827, column: 6, scope: !1851)
!1851 = !{!"0xb\001", !1, !1849}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1852 = !MDLocation(line: 827, column: 6, scope: !1853)
!1853 = !{!"0xb\002", !1, !1849}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1854 = !MDLocation(line: 827, column: 6, scope: !1855)
!1855 = !{!"0xb\004", !1, !1856}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1856 = !{!"0xb\003", !1, !1849}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1857 = !MDLocation(line: 828, column: 10, scope: !1849)
!1858 = !MDLocation(line: 828, column: 20, scope: !1859)
!1859 = !{!"0xb\001", !1, !1860}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1860 = !{!"0xb\00828\0010\0082", !1, !1849}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1861 = !MDLocation(line: 828, column: 41, scope: !1862)
!1862 = !{!"0xb\002", !1, !1860}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1863 = !MDLocation(line: 829, column: 3, scope: !1860)
!1864 = !MDLocation(line: 829, column: 3, scope: !1859)
!1865 = !MDLocation(line: 829, column: 3, scope: !1862)
!1866 = !MDLocation(line: 829, column: 3, scope: !1867)
!1867 = !{!"0xb\004", !1, !1868}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1868 = !{!"0xb\003", !1, !1860}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1869 = !MDLocation(line: 830, column: 27, scope: !1849)
!1870 = !MDLocation(line: 830, column: 6, scope: !1849)
!1871 = !MDLocation(line: 831, column: 27, scope: !1849)
!1872 = !MDLocation(line: 831, column: 6, scope: !1849)
!1873 = !MDLocation(line: 837, column: 6, scope: !1849)
!1874 = !MDLocation(line: 838, column: 2, scope: !1849)
!1875 = !MDLocation(line: 845, column: 9, scope: !1876)
!1876 = !{!"0xb\00845\009\0083", !1, !542}        ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1877 = !MDLocation(line: 845, column: 9, scope: !542)
!1878 = !MDLocation(line: 854, column: 17, scope: !1879)
!1879 = !{!"0xb\00845\0027\0084", !1, !1876}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1880 = !{!"0x100\00str\00854\000", !1879, !538, !53} ; [ DW_TAG_auto_variable ] [str] [line 854]
!1881 = !MDLocation(line: 854, column: 6, scope: !1879)
!1882 = !MDLocation(line: 855, column: 29, scope: !1879)
!1883 = !MDLocation(line: 855, column: 14, scope: !1879)
!1884 = !MDLocation(line: 856, column: 9, scope: !1879)
!1885 = !MDLocation(line: 856, column: 9, scope: !1886)
!1886 = !{!"0xb\001", !1, !1879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1887 = !MDLocation(line: 856, column: 9, scope: !1888)
!1888 = !{!"0xb\002", !1, !1879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1889 = !MDLocation(line: 855, column: 14, scope: !1886)
!1890 = !MDLocation(line: 855, column: 13, scope: !1891)
!1891 = !{!"0xb\003", !1, !1888}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1892 = !{!"0x100\00cl_l\00855\000", !1879, !538, !86} ; [ DW_TAG_auto_variable ] [cl_l] [line 855]
!1893 = !MDLocation(line: 855, column: 6, scope: !1879)
!1894 = !MDLocation(line: 858, column: 18, scope: !1879)
!1895 = !MDLocation(line: 858, column: 17, scope: !1879)
!1896 = !MDLocation(line: 858, column: 43, scope: !1886)
!1897 = !MDLocation(line: 859, column: 5, scope: !1879)
!1898 = !MDLocation(line: 859, column: 5, scope: !1886)
!1899 = !MDLocation(line: 859, column: 5, scope: !1900)
!1900 = !{!"0xb\003", !1, !1879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1901 = !MDLocation(line: 859, column: 5, scope: !1902)
!1902 = !{!"0xb\004", !1, !1879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1903 = !MDLocation(line: 859, column: 5, scope: !1904)
!1904 = !{!"0xb\006", !1, !1905}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1905 = !{!"0xb\005", !1, !1879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1906 = !MDLocation(line: 859, column: 5, scope: !1888)
!1907 = !MDLocation(line: 859, column: 5, scope: !1908)
!1908 = !{!"0xb\007", !1, !1879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1909 = !MDLocation(line: 859, column: 5, scope: !1910)
!1910 = !{!"0xb\008", !1, !1879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1911 = !MDLocation(line: 859, column: 5, scope: !1912)
!1912 = !{!"0xb\0010", !1, !1913}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1913 = !{!"0xb\009", !1, !1879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1914 = !MDLocation(line: 860, column: 6, scope: !1879)
!1915 = !MDLocation(line: 860, column: 28, scope: !1886)
!1916 = !MDLocation(line: 861, column: 8, scope: !1879)
!1917 = !MDLocation(line: 861, column: 8, scope: !1886)
!1918 = !MDLocation(line: 861, column: 8, scope: !1900)
!1919 = !MDLocation(line: 861, column: 8, scope: !1902)
!1920 = !MDLocation(line: 861, column: 8, scope: !1904)
!1921 = !MDLocation(line: 861, column: 8, scope: !1888)
!1922 = !MDLocation(line: 861, column: 8, scope: !1908)
!1923 = !MDLocation(line: 861, column: 8, scope: !1910)
!1924 = !MDLocation(line: 861, column: 8, scope: !1912)
!1925 = !{!"0x100\00endpos\00858\000", !1879, !538, !39} ; [ DW_TAG_auto_variable ] [endpos] [line 858]
!1926 = !MDLocation(line: 858, column: 8, scope: !1879)
!1927 = !{!"0x100\00startpos\00864\000", !1879, !538, !39} ; [ DW_TAG_auto_variable ] [startpos] [line 864]
!1928 = !MDLocation(line: 864, column: 8, scope: !1879)
!1929 = !MDLocation(line: 867, column: 2, scope: !1879)
!1930 = !MDLocation(line: 868, column: 25, scope: !1879)
!1931 = !MDLocation(line: 868, column: 6, scope: !1879)
!1932 = !MDLocation(line: 869, column: 6, scope: !1879)
!1933 = !MDLocation(line: 873, column: 10, scope: !1934)
!1934 = !{!"0xb\00873\0010\0087", !1, !1935}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1935 = !{!"0xb\00869\0010\0086", !1, !1936}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1936 = !{!"0xb\00869\006\0085", !1, !1879}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1937 = !MDLocation(line: 873, column: 10, scope: !1935)
!1938 = !MDLocation(line: 876, column: 3, scope: !1939)
!1939 = !{!"0xb\00873\0028\0088", !1, !1934}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1940 = !MDLocation(line: 880, column: 11, scope: !1941)
!1941 = !{!"0xb\00880\0010\0089", !1, !1935}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1942 = !MDLocation(line: 880, column: 10, scope: !1935)
!1943 = !MDLocation(line: 881, column: 3, scope: !1941)
!1944 = !MDLocation(line: 883, column: 10, scope: !1945)
!1945 = !{!"0xb\00883\0010\0090", !1, !1935}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1946 = !MDLocation(line: 883, column: 10, scope: !1935)
!1947 = !MDLocation(line: 883, column: 35, scope: !1948)
!1948 = !{!"0xb\001", !1, !1945}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1949 = !MDLocation(line: 884, column: 8, scope: !1950)
!1950 = !{!"0xb\00884\007\0092", !1, !1951}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1951 = !{!"0xb\00883\0056\0091", !1, !1945}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1952 = !MDLocation(line: 884, column: 18, scope: !1953)
!1953 = !{!"0xb\001", !1, !1950}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1954 = !MDLocation(line: 884, column: 40, scope: !1955)
!1955 = !{!"0xb\002", !1, !1950}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1956 = !MDLocation(line: 884, column: 7, scope: !1950)
!1957 = !MDLocation(line: 884, column: 7, scope: !1951)
!1958 = !MDLocation(line: 884, column: 73, scope: !1959)
!1959 = !{!"0xb\005", !1, !1950}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1960 = !MDLocation(line: 887, column: 11, scope: !1961)
!1961 = !{!"0xb\00884\0073\0093", !1, !1950}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1962 = !MDLocation(line: 887, column: 11, scope: !1963)
!1963 = !{!"0xb\001", !1, !1961}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1964 = !MDLocation(line: 887, column: 11, scope: !1965)
!1965 = !{!"0xb\002", !1, !1961}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1966 = !MDLocation(line: 888, column: 11, scope: !1967)
!1967 = !{!"0xb\00888\0011\0094", !1, !1961}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1968 = !MDLocation(line: 888, column: 11, scope: !1961)
!1969 = !MDLocation(line: 892, column: 4, scope: !1970)
!1970 = !{!"0xb\00888\0049\0095", !1, !1967}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1971 = !MDLocation(line: 894, column: 11, scope: !1961)
!1972 = !MDLocation(line: 895, column: 4, scope: !1973)
!1973 = !{!"0xb\00894\0011\0096", !1, !1961}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1974 = !MDLocation(line: 899, column: 7, scope: !1961)
!1975 = !MDLocation(line: 902, column: 7, scope: !1976)
!1976 = !{!"0xb\00902\007\0097", !1, !1951}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1977 = !MDLocation(line: 902, column: 7, scope: !1951)
!1978 = !MDLocation(line: 903, column: 7, scope: !1976)
!1979 = !MDLocation(line: 906, column: 7, scope: !1951)
!1980 = !MDLocation(line: 907, column: 7, scope: !1981)
!1981 = !{!"0xb\00906\007\0098", !1, !1951}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1982 = !MDLocation(line: 911, column: 3, scope: !1951)
!1983 = !MDLocation(line: 915, column: 10, scope: !1935)
!1984 = !MDLocation(line: 916, column: 11, scope: !1985)
!1985 = !{!"0xb\00915\0019\00100", !1, !1986}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1986 = !{!"0xb\00915\0010\0099", !1, !1935}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1987 = !MDLocation(line: 917, column: 7, scope: !1985)
!1988 = !MDLocation(line: 918, column: 7, scope: !1989)
!1989 = !{!"0xb\00917\007\00101", !1, !1985}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1990 = !MDLocation(line: 922, column: 3, scope: !1985)
!1991 = !MDLocation(line: 924, column: 10, scope: !1935)
!1992 = !MDLocation(line: 924, column: 22, scope: !1993)
!1993 = !{!"0xb\001", !1, !1994}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1994 = !{!"0xb\00924\0010\00102", !1, !1935}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1995 = !MDLocation(line: 924, column: 41, scope: !1996)
!1996 = !{!"0xb\002", !1, !1994}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!1997 = !MDLocation(line: 925, column: 3, scope: !1994)
!1998 = !MDLocation(line: 924, column: 59, scope: !1999)
!1999 = !{!"0xb\004", !1, !2000}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2000 = !{!"0xb\003", !1, !1994}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2001 = !MDLocation(line: 928, column: 10, scope: !1935)
!2002 = !MDLocation(line: 930, column: 6, scope: !1935)
!2003 = !MDLocation(line: 932, column: 6, scope: !2004)
!2004 = !{!"0xb\00932\006\00103", !1, !1879}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2005 = !MDLocation(line: 932, column: 6, scope: !1879)
!2006 = !MDLocation(line: 937, column: 9, scope: !2007)
!2007 = !{!"0xb\00932\0014\00104", !1, !2004}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2008 = !MDLocation(line: 943, column: 5, scope: !1879)
!2009 = !MDLocation(line: 845, column: 15, scope: !2010)
!2010 = !{!"0xb\001", !1, !1876}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2011 = !MDLocation(line: 948, column: 5, scope: !542)
!2012 = !MDLocation(line: 951, column: 9, scope: !2013)
!2013 = !{!"0xb\00951\009\00106", !1, !542}       ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2014 = !MDLocation(line: 951, column: 9, scope: !542)
!2015 = !MDLocation(line: 951, column: 31, scope: !2016)
!2016 = !{!"0xb\001", !1, !2013}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2017 = !MDLocation(line: 952, column: 2, scope: !2013)
!2018 = !MDLocation(line: 952, column: 2, scope: !2016)
!2019 = !MDLocation(line: 952, column: 2, scope: !2020)
!2020 = !{!"0xb\002", !1, !2013}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2021 = !MDLocation(line: 952, column: 2, scope: !2022)
!2022 = !{!"0xb\004", !1, !2023}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2023 = !{!"0xb\003", !1, !2013}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2024 = !MDLocation(line: 951, column: 37, scope: !2020)
!2025 = !MDLocation(line: 956, column: 5, scope: !542)
!2026 = !MDLocation(line: 957, column: 1, scope: !542)
!2027 = !{!"0x101\00arg\0016781789\000", !561, !538, !38} ; [ DW_TAG_arg_variable ] [arg] [line 4573]
!2028 = !MDLocation(line: 4573, column: 25, scope: !561)
!2029 = !MDLocation(line: 4575, column: 9, scope: !2030)
!2030 = !{!"0xb\004575\009\00738", !1, !561}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2031 = !MDLocation(line: 4575, column: 9, scope: !561)
!2032 = !MDLocation(line: 4576, column: 6, scope: !2033)
!2033 = !{!"0xb\004576\006\00740", !1, !2034}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2034 = !{!"0xb\004575\0026\00739", !1, !2030}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2035 = !MDLocation(line: 4576, column: 6, scope: !2034)
!2036 = !MDLocation(line: 4577, column: 26, scope: !2037)
!2037 = !{!"0xb\004576\0023\00741", !1, !2033}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2038 = !MDLocation(line: 4577, column: 6, scope: !2037)
!2039 = !MDLocation(line: 4578, column: 26, scope: !2037)
!2040 = !MDLocation(line: 4578, column: 6, scope: !2037)
!2041 = !MDLocation(line: 4579, column: 6, scope: !2037)
!2042 = !MDLocation(line: 4580, column: 2, scope: !2037)
!2043 = !MDLocation(line: 4581, column: 25, scope: !2034)
!2044 = !MDLocation(line: 4581, column: 2, scope: !2034)
!2045 = !MDLocation(line: 4582, column: 2, scope: !2034)
!2046 = !MDLocation(line: 4583, column: 13, scope: !2034)
!2047 = !MDLocation(line: 4583, column: 2, scope: !2034)
!2048 = !MDLocation(line: 4584, column: 5, scope: !2034)
!2049 = !MDLocation(line: 4585, column: 1, scope: !561)
!2050 = !{!"0x101\00prog\0016779512\000", !555, !538, !224} ; [ DW_TAG_arg_variable ] [prog] [line 2296]
!2051 = !MDLocation(line: 2296, column: 27, scope: !555)
!2052 = !{!"0x100\00ln\002304\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [ln] [line 2304]
!2053 = !MDLocation(line: 2304, column: 18, scope: !555)
!2054 = !{!"0x100\00s\002305\000", !555, !538, !39} ; [ DW_TAG_auto_variable ] [s] [line 2305]
!2055 = !MDLocation(line: 2305, column: 20, scope: !555)
!2056 = !MDLocation(line: 2306, column: 31, scope: !555)
!2057 = !{!"0x100\00locinput\002306\000", !555, !538, !39} ; [ DW_TAG_auto_variable ] [locinput] [line 2306]
!2058 = !MDLocation(line: 2306, column: 20, scope: !555)
!2059 = !{!"0x100\00c1\002307\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [c1] [line 2307]
!2060 = !MDLocation(line: 2307, column: 18, scope: !555)
!2061 = !{!"0x100\00c2\002307\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [c2] [line 2307]
!2062 = !MDLocation(line: 2307, column: 26, scope: !555)
!2063 = !{!"0x100\00minmod\002308\000", !555, !538, !86} ; [ DW_TAG_auto_variable ] [minmod] [line 2308]
!2064 = !MDLocation(line: 2308, column: 9, scope: !555)
!2065 = !{!"0x100\00sw\002308\000", !555, !538, !86} ; [ DW_TAG_auto_variable ] [sw] [line 2308]
!2066 = !MDLocation(line: 2308, column: 21, scope: !555)
!2067 = !{!"0x100\00logical\002308\000", !555, !538, !86} ; [ DW_TAG_auto_variable ] [logical] [line 2308]
!2068 = !MDLocation(line: 2308, column: 29, scope: !555)
!2069 = !{!"0x100\00unwind\002309\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [unwind] [line 2309]
!2070 = !MDLocation(line: 2309, column: 9, scope: !555)
!2071 = !MDLocation(line: 2313, column: 29, scope: !555)
!2072 = !{!"0x100\00do_utf8\002313\000", !555, !538, !40} ; [ DW_TAG_auto_variable ] [do_utf8] [line 2313]
!2073 = !MDLocation(line: 2313, column: 19, scope: !555)
!2074 = !MDLocation(line: 2325, column: 15, scope: !555)
!2075 = !{!"0x100\00nextchr\002301\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [nextchr] [line 2301]
!2076 = !MDLocation(line: 2301, column: 18, scope: !555)
!2077 = !{!"0x100\00scan\002298\000", !555, !538, !224} ; [ DW_TAG_auto_variable ] [scan] [line 2298]
!2078 = !MDLocation(line: 2298, column: 23, scope: !555)
!2079 = !MDLocation(line: 2327, column: 5, scope: !555)
!2080 = !MDLocation(line: 2327, column: 12, scope: !2081)
!2081 = !{!"0xb\002", !1, !2082}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2082 = !{!"0xb\001", !1, !555}                   ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2083 = !MDLocation(line: 2394, column: 16, scope: !2084)
!2084 = !{!"0xb\002327\0026\00230", !1, !555}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2085 = !MDLocation(line: 2394, column: 9, scope: !2084)
!2086 = !{!"0x100\00next\002299\000", !555, !538, !224} ; [ DW_TAG_auto_variable ] [next] [line 2299]
!2087 = !MDLocation(line: 2299, column: 14, scope: !555)
!2088 = !MDLocation(line: 2395, column: 6, scope: !2089)
!2089 = !{!"0xb\002395\006\00231", !1, !2084}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2090 = !MDLocation(line: 2395, column: 6, scope: !2084)
!2091 = !MDLocation(line: 2396, column: 6, scope: !2089)
!2092 = !MDLocation(line: 2398, column: 10, scope: !2084)
!2093 = !MDLocation(line: 2398, column: 2, scope: !2084)
!2094 = !MDLocation(line: 2400, column: 22, scope: !2095)
!2095 = !{!"0xb\002400\0010\00233", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2096 = !{!"0xb\002398\0020\00232", !1, !2084}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2097 = !MDLocation(line: 2400, column: 10, scope: !2095)
!2098 = !MDLocation(line: 2400, column: 10, scope: !2096)
!2099 = !MDLocation(line: 2400, column: 35, scope: !2100)
!2100 = !{!"0xb\001", !1, !2095}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2101 = !MDLocation(line: 2401, column: 26, scope: !2095)
!2102 = !MDLocation(line: 2401, column: 15, scope: !2095)
!2103 = !MDLocation(line: 2401, column: 40, scope: !2095)
!2104 = !MDLocation(line: 2404, column: 3, scope: !2105)
!2105 = !{!"0xb\002402\006\00234", !1, !2095}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2106 = !MDLocation(line: 2406, column: 6, scope: !2096)
!2107 = !MDLocation(line: 2408, column: 22, scope: !2108)
!2108 = !{!"0xb\002408\0010\00235", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2109 = !MDLocation(line: 2408, column: 10, scope: !2108)
!2110 = !MDLocation(line: 2408, column: 10, scope: !2096)
!2111 = !MDLocation(line: 2409, column: 27, scope: !2108)
!2112 = !MDLocation(line: 2409, column: 16, scope: !2108)
!2113 = !MDLocation(line: 2409, column: 41, scope: !2108)
!2114 = !MDLocation(line: 2411, column: 3, scope: !2115)
!2115 = !{!"0xb\002410\006\00236", !1, !2108}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2116 = !MDLocation(line: 2413, column: 6, scope: !2096)
!2117 = !MDLocation(line: 2415, column: 22, scope: !2118)
!2118 = !{!"0xb\002415\0010\00237", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2119 = !MDLocation(line: 2415, column: 10, scope: !2118)
!2120 = !MDLocation(line: 2415, column: 10, scope: !2096)
!2121 = !MDLocation(line: 2416, column: 3, scope: !2118)
!2122 = !MDLocation(line: 2417, column: 6, scope: !2096)
!2123 = !MDLocation(line: 2419, column: 22, scope: !2124)
!2124 = !{!"0xb\002419\0010\00238", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2125 = !MDLocation(line: 2419, column: 10, scope: !2124)
!2126 = !MDLocation(line: 2419, column: 10, scope: !2096)
!2127 = !MDLocation(line: 2420, column: 3, scope: !2124)
!2128 = !MDLocation(line: 2421, column: 6, scope: !2096)
!2129 = !MDLocation(line: 2423, column: 10, scope: !2130)
!2130 = !{!"0xb\002423\0010\00239", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2131 = !MDLocation(line: 2423, column: 10, scope: !2096)
!2132 = !MDLocation(line: 2424, column: 3, scope: !2130)
!2133 = !MDLocation(line: 2426, column: 3, scope: !2130)
!2134 = !MDLocation(line: 2429, column: 10, scope: !2096)
!2135 = !MDLocation(line: 2429, column: 33, scope: !2136)
!2136 = !{!"0xb\002429\0010\00240", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2137 = !MDLocation(line: 2429, column: 22, scope: !2136)
!2138 = !MDLocation(line: 2429, column: 47, scope: !2139)
!2139 = !{!"0xb\003", !1, !2140}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2140 = !{!"0xb\001", !1, !2136}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2141 = !MDLocation(line: 2430, column: 3, scope: !2136)
!2142 = !MDLocation(line: 2431, column: 6, scope: !2096)
!2143 = !MDLocation(line: 2434, column: 10, scope: !2096)
!2144 = !MDLocation(line: 2434, column: 33, scope: !2145)
!2145 = !{!"0xb\002434\0010\00241", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2146 = !MDLocation(line: 2434, column: 22, scope: !2145)
!2147 = !MDLocation(line: 2434, column: 47, scope: !2148)
!2148 = !{!"0xb\003", !1, !2149}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2149 = !{!"0xb\001", !1, !2145}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2150 = !MDLocation(line: 2435, column: 3, scope: !2145)
!2151 = !MDLocation(line: 2436, column: 10, scope: !2152)
!2152 = !{!"0xb\002436\0010\00242", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2153 = !MDLocation(line: 2436, column: 10, scope: !2096)
!2154 = !MDLocation(line: 2437, column: 3, scope: !2152)
!2155 = !MDLocation(line: 2438, column: 6, scope: !2096)
!2156 = !MDLocation(line: 2440, column: 10, scope: !2157)
!2157 = !{!"0xb\002440\0010\00243", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2158 = !MDLocation(line: 2440, column: 10, scope: !2096)
!2159 = !MDLocation(line: 2441, column: 3, scope: !2157)
!2160 = !MDLocation(line: 2442, column: 6, scope: !2096)
!2161 = !MDLocation(line: 2444, column: 10, scope: !2096)
!2162 = !MDLocation(line: 2444, column: 34, scope: !2163)
!2163 = !{!"0xb\002444\0010\00244", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2164 = !MDLocation(line: 2444, column: 22, scope: !2163)
!2165 = !MDLocation(line: 2445, column: 3, scope: !2163)
!2166 = !MDLocation(line: 2446, column: 11, scope: !2096)
!2167 = !MDLocation(line: 2447, column: 22, scope: !2168)
!2168 = !{!"0xb\002446\0020\00246", !1, !2169}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2169 = !{!"0xb\002446\0011\00245", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2170 = !MDLocation(line: 2447, column: 10, scope: !2168)
!2171 = !MDLocation(line: 2448, column: 18, scope: !2172)
!2172 = !{!"0xb\002448\007\00247", !1, !2168}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2173 = !MDLocation(line: 2448, column: 7, scope: !2172)
!2174 = !MDLocation(line: 2448, column: 7, scope: !2168)
!2175 = !MDLocation(line: 2449, column: 8, scope: !2172)
!2176 = !MDLocation(line: 2450, column: 14, scope: !2168)
!2177 = !MDLocation(line: 2451, column: 7, scope: !2168)
!2178 = !MDLocation(line: 2453, column: 14, scope: !2169)
!2179 = !MDLocation(line: 2454, column: 6, scope: !2096)
!2180 = !MDLocation(line: 2456, column: 10, scope: !2096)
!2181 = !MDLocation(line: 2456, column: 34, scope: !2182)
!2182 = !{!"0xb\002456\0010\00248", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2183 = !MDLocation(line: 2456, column: 22, scope: !2182)
!2184 = !MDLocation(line: 2457, column: 3, scope: !2182)
!2185 = !MDLocation(line: 2458, column: 16, scope: !2096)
!2186 = !MDLocation(line: 2459, column: 6, scope: !2096)
!2187 = !MDLocation(line: 2461, column: 10, scope: !2096)
!2188 = !MDLocation(line: 2461, column: 35, scope: !2189)
!2189 = !{!"0xb\002461\0010\00249", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2190 = !MDLocation(line: 2461, column: 23, scope: !2189)
!2191 = !MDLocation(line: 2461, column: 49, scope: !2192)
!2192 = !{!"0xb\003", !1, !2193}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2193 = !{!"0xb\001", !1, !2189}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2194 = !MDLocation(line: 2462, column: 3, scope: !2189)
!2195 = !MDLocation(line: 2463, column: 10, scope: !2096)
!2196 = !MDLocation(line: 2464, column: 15, scope: !2197)
!2197 = !{!"0xb\002463\0019\00251", !1, !2198}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2198 = !{!"0xb\002463\0010\00250", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2199 = !MDLocation(line: 2464, column: 3, scope: !2197)
!2200 = !MDLocation(line: 2465, column: 18, scope: !2201)
!2201 = !{!"0xb\002465\007\00252", !1, !2197}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2202 = !MDLocation(line: 2465, column: 7, scope: !2201)
!2203 = !MDLocation(line: 2465, column: 7, scope: !2197)
!2204 = !MDLocation(line: 2466, column: 7, scope: !2201)
!2205 = !MDLocation(line: 2467, column: 13, scope: !2197)
!2206 = !MDLocation(line: 2468, column: 6, scope: !2197)
!2207 = !MDLocation(line: 2470, column: 13, scope: !2198)
!2208 = !MDLocation(line: 2471, column: 6, scope: !2096)
!2209 = !MDLocation(line: 2473, column: 10, scope: !2096)
!2210 = !MDLocation(line: 2474, column: 11, scope: !2096)
!2211 = !MDLocation(line: 2475, column: 10, scope: !2212)
!2212 = !{!"0xb\002475\0010\00253", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2213 = !MDLocation(line: 2475, column: 21, scope: !2212)
!2214 = !MDLocation(line: 2475, column: 10, scope: !2096)
!2215 = !{!"0x100\00l\002477\000", !2216, !538, !39} ; [ DW_TAG_auto_variable ] [l] [line 2477]
!2216 = !{!"0xb\002475\0026\00254", !1, !2212}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2217 = !MDLocation(line: 2477, column: 9, scope: !2216)
!2218 = !MDLocation(line: 2478, column: 13, scope: !2216)
!2219 = !{!"0x100\00e\002478\000", !2216, !538, !39} ; [ DW_TAG_auto_variable ] [e] [line 2478]
!2220 = !MDLocation(line: 2478, column: 9, scope: !2216)
!2221 = !{!"0x100\00ulen\002479\000", !2216, !538, !48} ; [ DW_TAG_auto_variable ] [ulen] [line 2479]
!2222 = !MDLocation(line: 2479, column: 10, scope: !2216)
!2223 = !MDLocation(line: 2481, column: 7, scope: !2216)
!2224 = !MDLocation(line: 2483, column: 7, scope: !2225)
!2225 = !{!"0xb\002481\0016\00256", !1, !2226}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2226 = !{!"0xb\002481\007\00255", !1, !2216}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2227 = !MDLocation(line: 2483, column: 14, scope: !2225)
!2228 = !MDLocation(line: 2484, column: 13, scope: !2229)
!2229 = !{!"0xb\002484\008\00258", !1, !2230}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2230 = !{!"0xb\002483\0021\00257", !1, !2225}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2231 = !MDLocation(line: 2484, column: 8, scope: !2229)
!2232 = !MDLocation(line: 2484, column: 8, scope: !2230)
!2233 = !MDLocation(line: 2485, column: 9, scope: !2229)
!2234 = !MDLocation(line: 2486, column: 8, scope: !2235)
!2235 = !{!"0xb\002486\008\00259", !1, !2230}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2236 = !MDLocation(line: 2488, column: 9, scope: !2235)
!2237 = !MDLocation(line: 2488, column: 9, scope: !2238)
!2238 = !{!"0xb\001", !1, !2235}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2239 = !MDLocation(line: 2488, column: 9, scope: !2240)
!2240 = !{!"0xb\003", !1, !2235}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2241 = !MDLocation(line: 2488, column: 9, scope: !2242)
!2242 = !{!"0xb\006", !1, !2235}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2243 = !MDLocation(line: 2488, column: 9, scope: !2244)
!2244 = !{!"0xb\008", !1, !2245}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2245 = !{!"0xb\004", !1, !2246}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2246 = !{!"0xb\002", !1, !2235}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2247 = !MDLocation(line: 2488, column: 9, scope: !2248)
!2248 = !{!"0xb\009", !1, !2235}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2249 = !MDLocation(line: 2488, column: 9, scope: !2250)
!2250 = !{!"0xb\0010", !1, !2235}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2251 = !MDLocation(line: 2488, column: 9, scope: !2252)
!2252 = !{!"0xb\0011", !1, !2253}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2253 = !{!"0xb\007", !1, !2254}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2254 = !{!"0xb\005", !1, !2235}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2255 = !MDLocation(line: 2487, column: 8, scope: !2235)
!2256 = !MDLocation(line: 2486, column: 8, scope: !2230)
!2257 = !MDLocation(line: 2490, column: 9, scope: !2235)
!2258 = !MDLocation(line: 2491, column: 9, scope: !2230)
!2259 = !MDLocation(line: 2491, column: 4, scope: !2230)
!2260 = !MDLocation(line: 2492, column: 4, scope: !2230)
!2261 = !MDLocation(line: 2494, column: 3, scope: !2225)
!2262 = !MDLocation(line: 2497, column: 7, scope: !2263)
!2263 = !{!"0xb\002495\008\00260", !1, !2226}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2264 = !MDLocation(line: 2497, column: 14, scope: !2263)
!2265 = !MDLocation(line: 2498, column: 13, scope: !2266)
!2266 = !{!"0xb\002498\008\00262", !1, !2267}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2267 = !{!"0xb\002497\0021\00261", !1, !2263}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2268 = !MDLocation(line: 2498, column: 8, scope: !2266)
!2269 = !MDLocation(line: 2498, column: 8, scope: !2267)
!2270 = !MDLocation(line: 2499, column: 8, scope: !2266)
!2271 = !MDLocation(line: 2500, column: 8, scope: !2272)
!2272 = !{!"0xb\002500\008\00263", !1, !2267}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2273 = !MDLocation(line: 2502, column: 9, scope: !2272)
!2274 = !MDLocation(line: 2502, column: 9, scope: !2275)
!2275 = !{!"0xb\001", !1, !2272}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2276 = !MDLocation(line: 2502, column: 9, scope: !2277)
!2277 = !{!"0xb\003", !1, !2272}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2278 = !MDLocation(line: 2502, column: 9, scope: !2279)
!2279 = !{!"0xb\006", !1, !2272}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2280 = !MDLocation(line: 2502, column: 9, scope: !2281)
!2281 = !{!"0xb\008", !1, !2282}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2282 = !{!"0xb\004", !1, !2283}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2283 = !{!"0xb\002", !1, !2272}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2284 = !MDLocation(line: 2502, column: 9, scope: !2285)
!2285 = !{!"0xb\009", !1, !2272}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2286 = !MDLocation(line: 2502, column: 9, scope: !2287)
!2287 = !{!"0xb\0010", !1, !2272}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2288 = !MDLocation(line: 2502, column: 9, scope: !2289)
!2289 = !{!"0xb\0011", !1, !2290}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2290 = !{!"0xb\007", !1, !2291}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2291 = !{!"0xb\005", !1, !2272}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2292 = !MDLocation(line: 2501, column: 8, scope: !2272)
!2293 = !MDLocation(line: 2500, column: 8, scope: !2267)
!2294 = !MDLocation(line: 2504, column: 8, scope: !2272)
!2295 = !MDLocation(line: 2505, column: 9, scope: !2267)
!2296 = !MDLocation(line: 2505, column: 4, scope: !2267)
!2297 = !MDLocation(line: 2506, column: 4, scope: !2267)
!2298 = !MDLocation(line: 2510, column: 13, scope: !2216)
!2299 = !MDLocation(line: 2511, column: 3, scope: !2216)
!2300 = !MDLocation(line: 2515, column: 10, scope: !2301)
!2301 = !{!"0xb\002515\0010\00264", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2302 = !MDLocation(line: 2515, column: 10, scope: !2096)
!2303 = !MDLocation(line: 2516, column: 3, scope: !2301)
!2304 = !MDLocation(line: 2517, column: 10, scope: !2305)
!2305 = !{!"0xb\002517\0010\00265", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2306 = !MDLocation(line: 2517, column: 33, scope: !2305)
!2307 = !MDLocation(line: 2517, column: 10, scope: !2096)
!2308 = !MDLocation(line: 2518, column: 3, scope: !2305)
!2309 = !MDLocation(line: 2519, column: 10, scope: !2310)
!2310 = !{!"0xb\002519\0010\00266", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2311 = !MDLocation(line: 2519, column: 10, scope: !2096)
!2312 = !MDLocation(line: 2519, column: 20, scope: !2313)
!2313 = !{!"0xb\001", !1, !2310}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2314 = !MDLocation(line: 2520, column: 3, scope: !2310)
!2315 = !MDLocation(line: 2521, column: 6, scope: !2096)
!2316 = !MDLocation(line: 2522, column: 16, scope: !2096)
!2317 = !MDLocation(line: 2523, column: 6, scope: !2096)
!2318 = !MDLocation(line: 2525, column: 6, scope: !2096)
!2319 = !MDLocation(line: 2528, column: 10, scope: !2096)
!2320 = !MDLocation(line: 2529, column: 11, scope: !2096)
!2321 = !MDLocation(line: 2531, column: 10, scope: !2322)
!2322 = !{!"0xb\002531\0010\00267", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2323 = !MDLocation(line: 2531, column: 10, scope: !2096)
!2324 = !MDLocation(line: 2531, column: 21, scope: !2325)
!2325 = !{!"0xb\001", !1, !2322}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2326 = !{!"0x100\00l\002533\000", !2327, !538, !39} ; [ DW_TAG_auto_variable ] [l] [line 2533]
!2327 = !{!"0xb\002531\0026\00268", !1, !2322}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2328 = !MDLocation(line: 2533, column: 9, scope: !2327)
!2329 = !{!"0x100\00e\002534\000", !2327, !538, !39} ; [ DW_TAG_auto_variable ] [e] [line 2534]
!2330 = !MDLocation(line: 2534, column: 9, scope: !2327)
!2331 = !MDLocation(line: 2534, column: 13, scope: !2327)
!2332 = !MDLocation(line: 2536, column: 25, scope: !2333)
!2333 = !{!"0xb\002536\007\00269", !1, !2327}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2334 = !MDLocation(line: 2536, column: 35, scope: !2333)
!2335 = !MDLocation(line: 2536, column: 29, scope: !2333)
!2336 = !MDLocation(line: 2536, column: 7, scope: !2333)
!2337 = !MDLocation(line: 2536, column: 7, scope: !2327)
!2338 = !MDLocation(line: 2542, column: 14, scope: !2339)
!2339 = !{!"0xb\002542\0012\00271", !1, !2340}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2340 = !{!"0xb\002537\0032\00270", !1, !2333}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2341 = !MDLocation(line: 2542, column: 12, scope: !2340)
!2342 = !MDLocation(line: 2543, column: 7, scope: !2339)
!2343 = !MDLocation(line: 2543, column: 7, scope: !2344)
!2344 = !{!"0xb\001", !1, !2339}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2345 = !MDLocation(line: 2543, column: 7, scope: !2346)
!2346 = !{!"0xb\003", !1, !2339}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2347 = !MDLocation(line: 2543, column: 7, scope: !2348)
!2348 = !{!"0xb\004", !1, !2349}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2349 = !{!"0xb\002", !1, !2339}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2350 = !MDLocation(line: 2543, column: 7, scope: !2351)
!2351 = !{!"0xb\006", !1, !2352}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2352 = !{!"0xb\005", !1, !2339}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2353 = !MDLocation(line: 2544, column: 7, scope: !2339)
!2354 = !MDLocation(line: 2545, column: 7, scope: !2339)
!2355 = !MDLocation(line: 2545, column: 7, scope: !2344)
!2356 = !MDLocation(line: 2545, column: 7, scope: !2346)
!2357 = !MDLocation(line: 2545, column: 7, scope: !2348)
!2358 = !MDLocation(line: 2545, column: 7, scope: !2351)
!2359 = !MDLocation(line: 2546, column: 11, scope: !2339)
!2360 = !MDLocation(line: 2546, column: 7, scope: !2339)
!2361 = !MDLocation(line: 2547, column: 7, scope: !2339)
!2362 = !MDLocation(line: 2548, column: 11, scope: !2339)
!2363 = !MDLocation(line: 2548, column: 7, scope: !2339)
!2364 = !MDLocation(line: 2549, column: 6, scope: !2339)
!2365 = !MDLocation(line: 2550, column: 3, scope: !2340)
!2366 = !MDLocation(line: 2551, column: 14, scope: !2327)
!2367 = !MDLocation(line: 2552, column: 13, scope: !2327)
!2368 = !MDLocation(line: 2553, column: 3, scope: !2327)
!2369 = !MDLocation(line: 2559, column: 10, scope: !2370)
!2370 = !{!"0xb\002559\0010\00272", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2371 = !MDLocation(line: 2559, column: 10, scope: !2096)
!2372 = !MDLocation(line: 2560, column: 3, scope: !2370)
!2373 = !MDLocation(line: 2560, column: 17, scope: !2370)
!2374 = !MDLocation(line: 2560, column: 19, scope: !2370)
!2375 = !MDLocation(line: 2560, column: 18, scope: !2370)
!2376 = !MDLocation(line: 2562, column: 3, scope: !2370)
!2377 = !MDLocation(line: 2563, column: 10, scope: !2378)
!2378 = !{!"0xb\002563\0010\00273", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2379 = !MDLocation(line: 2563, column: 33, scope: !2378)
!2380 = !MDLocation(line: 2563, column: 10, scope: !2096)
!2381 = !MDLocation(line: 2564, column: 3, scope: !2378)
!2382 = !MDLocation(line: 2565, column: 10, scope: !2383)
!2383 = !{!"0xb\002565\0010\00274", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2384 = !MDLocation(line: 2565, column: 10, scope: !2096)
!2385 = !MDLocation(line: 2565, column: 21, scope: !2386)
!2386 = !{!"0xb\001", !1, !2383}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2387 = !MDLocation(line: 2566, column: 9, scope: !2383)
!2388 = !MDLocation(line: 2567, column: 9, scope: !2383)
!2389 = !MDLocation(line: 2568, column: 3, scope: !2383)
!2390 = !MDLocation(line: 2569, column: 6, scope: !2096)
!2391 = !MDLocation(line: 2570, column: 16, scope: !2096)
!2392 = !MDLocation(line: 2571, column: 6, scope: !2096)
!2393 = !MDLocation(line: 2573, column: 10, scope: !2096)
!2394 = !{!"0x100\00inclasslen\002574\000", !2395, !538, !48} ; [ DW_TAG_auto_variable ] [inclasslen] [line 2574]
!2395 = !{!"0xb\002573\0019\00276", !1, !2396}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2396 = !{!"0xb\002573\0010\00275", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2397 = !MDLocation(line: 2574, column: 17, scope: !2395)
!2398 = !MDLocation(line: 2574, column: 30, scope: !2395)
!2399 = !MDLocation(line: 2576, column: 60, scope: !2400)
!2400 = !{!"0xb\002576\0014\00277", !1, !2395}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2401 = !MDLocation(line: 2576, column: 15, scope: !2400)
!2402 = !MDLocation(line: 2576, column: 14, scope: !2395)
!2403 = !MDLocation(line: 2577, column: 7, scope: !2400)
!2404 = !MDLocation(line: 2578, column: 19, scope: !2405)
!2405 = !{!"0xb\002578\007\00278", !1, !2395}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2406 = !MDLocation(line: 2578, column: 7, scope: !2405)
!2407 = !MDLocation(line: 2578, column: 7, scope: !2395)
!2408 = !MDLocation(line: 2579, column: 7, scope: !2405)
!2409 = !MDLocation(line: 2580, column: 15, scope: !2395)
!2410 = !MDLocation(line: 2580, column: 28, scope: !2411)
!2411 = !{!"0xb\001", !1, !2395}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2412 = !MDLocation(line: 2580, column: 41, scope: !2413)
!2413 = !{!"0xb\002", !1, !2395}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2414 = !MDLocation(line: 2580, column: 3, scope: !2415)
!2415 = !{!"0xb\004", !1, !2416}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2416 = !{!"0xb\003", !1, !2395}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2417 = !MDLocation(line: 2581, column: 13, scope: !2395)
!2418 = !MDLocation(line: 2582, column: 3, scope: !2395)
!2419 = !MDLocation(line: 2585, column: 7, scope: !2420)
!2420 = !{!"0xb\002585\007\00280", !1, !2421}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2421 = !{!"0xb\002584\0011\00279", !1, !2396}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2422 = !MDLocation(line: 2585, column: 7, scope: !2421)
!2423 = !MDLocation(line: 2586, column: 17, scope: !2420)
!2424 = !MDLocation(line: 2586, column: 7, scope: !2420)
!2425 = !MDLocation(line: 2587, column: 8, scope: !2426)
!2426 = !{!"0xb\002587\007\00281", !1, !2421}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2427 = !MDLocation(line: 2587, column: 7, scope: !2421)
!2428 = !MDLocation(line: 2587, column: 8, scope: !2429)
!2429 = !{!"0xb\001", !1, !2426}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2430 = !MDLocation(line: 2587, column: 8, scope: !2431)
!2431 = !{!"0xb\002", !1, !2426}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2432 = !MDLocation(line: 2588, column: 7, scope: !2426)
!2433 = !MDLocation(line: 2589, column: 7, scope: !2421)
!2434 = !MDLocation(line: 2589, column: 31, scope: !2435)
!2435 = !{!"0xb\002589\007\00282", !1, !2421}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2436 = !MDLocation(line: 2589, column: 19, scope: !2435)
!2437 = !MDLocation(line: 2590, column: 7, scope: !2435)
!2438 = !MDLocation(line: 2591, column: 13, scope: !2421)
!2439 = !MDLocation(line: 2592, column: 3, scope: !2421)
!2440 = !MDLocation(line: 2598, column: 10, scope: !2441)
!2441 = !{!"0xb\002598\0010\00283", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2442 = !MDLocation(line: 2598, column: 10, scope: !2096)
!2443 = !MDLocation(line: 2598, column: 10, scope: !2444)
!2444 = !{!"0xb\001", !1, !2441}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2445 = !MDLocation(line: 2598, column: 10, scope: !2446)
!2446 = !{!"0xb\002", !1, !2441}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2447 = !MDLocation(line: 2598, column: 10, scope: !2448)
!2448 = !{!"0xb\003", !1, !2441}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2449 = !MDLocation(line: 2598, column: 10, scope: !2450)
!2450 = !{!"0xb\004", !1, !2441}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2451 = !MDLocation(line: 2598, column: 10, scope: !2452)
!2452 = !{!"0xb\005", !1, !2441}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2453 = !MDLocation(line: 2598, column: 10, scope: !2454)
!2454 = !{!"0xb\007", !1, !2441}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2455 = !MDLocation(line: 2598, column: 10, scope: !2456)
!2456 = !{!"0xb\008", !1, !2457}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2457 = !{!"0xb\006", !1, !2441}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2458 = !MDLocation(line: 2598, column: 10, scope: !2459)
!2459 = !{!"0xb\0010", !1, !2460}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2460 = !{!"0xb\009", !1, !2441}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2461 = !MDLocation(line: 2598, column: 10, scope: !2462)
!2462 = !{!"0xb\0011", !1, !2441}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2463 = !MDLocation(line: 2598, column: 10, scope: !2464)
!2464 = !{!"0xb\0012", !1, !2441}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2465 = !MDLocation(line: 2598, column: 10, scope: !2466)
!2466 = !{!"0xb\0014", !1, !2441}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2467 = !MDLocation(line: 2598, column: 10, scope: !2468)
!2468 = !{!"0xb\0015", !1, !2469}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2469 = !{!"0xb\0013", !1, !2441}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2470 = !MDLocation(line: 2598, column: 10, scope: !2471)
!2471 = !{!"0xb\0017", !1, !2472}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2472 = !{!"0xb\0016", !1, !2441}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2473 = !MDLocation(line: 2599, column: 4, scope: !2474)
!2474 = !{!"0xb\002598\0057\00284", !1, !2441}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2475 = !MDLocation(line: 2600, column: 14, scope: !2474)
!2476 = !MDLocation(line: 2601, column: 6, scope: !2474)
!2477 = !MDLocation(line: 2603, column: 4, scope: !2441)
!2478 = !MDLocation(line: 2604, column: 6, scope: !2096)
!2479 = !MDLocation(line: 2606, column: 6, scope: !2096)
!2480 = !MDLocation(line: 2609, column: 10, scope: !2096)
!2481 = !MDLocation(line: 2610, column: 3, scope: !2482)
!2482 = !{!"0xb\002609\0010\00285", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2483 = !MDLocation(line: 2611, column: 10, scope: !2096)
!2484 = !MDLocation(line: 2612, column: 3, scope: !2485)
!2485 = !{!"0xb\002612\003\00289", !1, !2486}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2486 = !{!"0xb\002612\003\00288", !1, !2487}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2487 = !{!"0xb\002611\0019\00287", !1, !2488}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2488 = !{!"0xb\002611\0010\00286", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2489 = !MDLocation(line: 2612, column: 3, scope: !2486)
!2490 = !MDLocation(line: 2612, column: 3, scope: !2491)
!2491 = !{!"0xb\001", !1, !2492}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2492 = !{!"0xb\002612\003\00290", !1, !2485}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2493 = !MDLocation(line: 2613, column: 9, scope: !2494)
!2494 = !{!"0xb\002613\007\00291", !1, !2487}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2495 = !MDLocation(line: 2613, column: 7, scope: !2487)
!2496 = !MDLocation(line: 2614, column: 23, scope: !2494)
!2497 = !MDLocation(line: 2614, column: 11, scope: !2494)
!2498 = !MDLocation(line: 2615, column: 11, scope: !2494)
!2499 = !MDLocation(line: 2615, column: 11, scope: !2500)
!2500 = !{!"0xb\001", !1, !2494}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2501 = !MDLocation(line: 2615, column: 11, scope: !2502)
!2502 = !{!"0xb\003", !1, !2494}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2503 = !MDLocation(line: 2615, column: 11, scope: !2504)
!2504 = !{!"0xb\005", !1, !2494}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2505 = !MDLocation(line: 2615, column: 11, scope: !2506)
!2506 = !{!"0xb\004", !1, !2494}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2507 = !MDLocation(line: 2615, column: 11, scope: !2508)
!2508 = !{!"0xb\002", !1, !2494}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2509 = !MDLocation(line: 2615, column: 11, scope: !2510)
!2510 = !{!"0xb\007", !1, !2511}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2511 = !{!"0xb\006", !1, !2494}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2512 = !MDLocation(line: 2617, column: 7, scope: !2513)
!2513 = !{!"0xb\002616\003\00292", !1, !2494}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2514 = !MDLocation(line: 2619, column: 15, scope: !2487)
!2515 = !MDLocation(line: 2619, column: 3, scope: !2487)
!2516 = !MDLocation(line: 2620, column: 13, scope: !2487)
!2517 = !MDLocation(line: 2621, column: 3, scope: !2487)
!2518 = !MDLocation(line: 2623, column: 12, scope: !2519)
!2519 = !{!"0xb\002623\0010\00293", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2520 = !MDLocation(line: 2623, column: 10, scope: !2096)
!2521 = !MDLocation(line: 2624, column: 7, scope: !2519)
!2522 = !MDLocation(line: 2624, column: 26, scope: !2519)
!2523 = !MDLocation(line: 2625, column: 3, scope: !2519)
!2524 = !MDLocation(line: 2626, column: 16, scope: !2096)
!2525 = !MDLocation(line: 2627, column: 6, scope: !2096)
!2526 = !MDLocation(line: 2629, column: 6, scope: !2096)
!2527 = !MDLocation(line: 2632, column: 10, scope: !2096)
!2528 = !MDLocation(line: 2632, column: 34, scope: !2529)
!2529 = !{!"0xb\002632\0010\00294", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2530 = !MDLocation(line: 2632, column: 22, scope: !2529)
!2531 = !MDLocation(line: 2633, column: 3, scope: !2529)
!2532 = !MDLocation(line: 2634, column: 10, scope: !2096)
!2533 = !MDLocation(line: 2635, column: 3, scope: !2534)
!2534 = !{!"0xb\002635\003\00298", !1, !2535}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2535 = !{!"0xb\002635\003\00297", !1, !2536}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2536 = !{!"0xb\002634\0019\00296", !1, !2537}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2537 = !{!"0xb\002634\0010\00295", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2538 = !MDLocation(line: 2635, column: 3, scope: !2535)
!2539 = !MDLocation(line: 2635, column: 3, scope: !2540)
!2540 = !{!"0xb\001", !1, !2541}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2541 = !{!"0xb\002635\003\00299", !1, !2534}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2542 = !MDLocation(line: 2636, column: 7, scope: !2543)
!2543 = !{!"0xb\002636\007\00300", !1, !2536}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2544 = !MDLocation(line: 2636, column: 7, scope: !2536)
!2545 = !MDLocation(line: 2637, column: 21, scope: !2543)
!2546 = !MDLocation(line: 2637, column: 9, scope: !2543)
!2547 = !MDLocation(line: 2638, column: 9, scope: !2543)
!2548 = !MDLocation(line: 2638, column: 9, scope: !2549)
!2549 = !{!"0xb\001", !1, !2543}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2550 = !MDLocation(line: 2638, column: 9, scope: !2551)
!2551 = !{!"0xb\003", !1, !2543}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2552 = !MDLocation(line: 2638, column: 9, scope: !2553)
!2553 = !{!"0xb\005", !1, !2543}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2554 = !MDLocation(line: 2638, column: 9, scope: !2555)
!2555 = !{!"0xb\004", !1, !2543}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2556 = !MDLocation(line: 2638, column: 9, scope: !2557)
!2557 = !{!"0xb\002", !1, !2543}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2558 = !MDLocation(line: 2638, column: 9, scope: !2559)
!2559 = !{!"0xb\007", !1, !2560}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2560 = !{!"0xb\006", !1, !2543}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2561 = !MDLocation(line: 2640, column: 7, scope: !2562)
!2562 = !{!"0xb\002639\003\00301", !1, !2543}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2563 = !MDLocation(line: 2642, column: 15, scope: !2536)
!2564 = !MDLocation(line: 2642, column: 3, scope: !2536)
!2565 = !MDLocation(line: 2643, column: 13, scope: !2536)
!2566 = !MDLocation(line: 2644, column: 3, scope: !2536)
!2567 = !MDLocation(line: 2646, column: 10, scope: !2568)
!2568 = !{!"0xb\002646\0010\00302", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2569 = !MDLocation(line: 2646, column: 10, scope: !2096)
!2570 = !MDLocation(line: 2647, column: 5, scope: !2568)
!2571 = !MDLocation(line: 2647, column: 24, scope: !2568)
!2572 = !MDLocation(line: 2648, column: 3, scope: !2568)
!2573 = !MDLocation(line: 2649, column: 16, scope: !2096)
!2574 = !MDLocation(line: 2650, column: 6, scope: !2096)
!2575 = !MDLocation(line: 2653, column: 6, scope: !2096)
!2576 = !MDLocation(line: 2658, column: 10, scope: !2096)
!2577 = !MDLocation(line: 2659, column: 19, scope: !2578)
!2578 = !{!"0xb\002659\007\00305", !1, !2579}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2579 = !{!"0xb\002658\0019\00304", !1, !2580}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2580 = !{!"0xb\002658\0010\00303", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2581 = !MDLocation(line: 2659, column: 7, scope: !2578)
!2582 = !MDLocation(line: 2659, column: 7, scope: !2579)
!2583 = !MDLocation(line: 2660, column: 7, scope: !2578)
!2584 = !MDLocation(line: 2662, column: 47, scope: !2585)
!2585 = !{!"0xb\002661\008\00306", !1, !2578}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2586 = !MDLocation(line: 2662, column: 15, scope: !2585)
!2587 = !{!"0x100\00r\002662\000", !2585, !538, !53} ; [ DW_TAG_auto_variable ] [r] [line 2662]
!2588 = !MDLocation(line: 2662, column: 11, scope: !2585)
!2589 = !MDLocation(line: 2664, column: 30, scope: !2585)
!2590 = !MDLocation(line: 2664, column: 12, scope: !2585)
!2591 = !MDLocation(line: 2666, column: 7, scope: !2592)
!2592 = !{!"0xb\002666\007\00307", !1, !2579}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2593 = !MDLocation(line: 2666, column: 7, scope: !2579)
!2594 = !MDLocation(line: 2666, column: 28, scope: !2595)
!2595 = !{!"0xb\001", !1, !2592}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2596 = !MDLocation(line: 2667, column: 12, scope: !2597)
!2597 = !{!"0xb\002666\0048\00308", !1, !2592}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2598 = !MDLocation(line: 2668, column: 7, scope: !2599)
!2599 = !{!"0xb\002668\007\00310", !1, !2600}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2600 = !{!"0xb\002668\007\00309", !1, !2597}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2601 = !MDLocation(line: 2668, column: 7, scope: !2600)
!2602 = !MDLocation(line: 2668, column: 7, scope: !2603)
!2603 = !{!"0xb\001", !1, !2604}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2604 = !{!"0xb\002668\007\00311", !1, !2599}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2605 = !MDLocation(line: 2669, column: 23, scope: !2597)
!2606 = !MDLocation(line: 2669, column: 11, scope: !2597)
!2607 = !{!"0x100\00n\002303\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [n] [line 2303]
!2608 = !MDLocation(line: 2303, column: 18, scope: !555)
!2609 = !MDLocation(line: 2670, column: 3, scope: !2597)
!2610 = !MDLocation(line: 2672, column: 12, scope: !2611)
!2611 = !{!"0xb\002671\008\00312", !1, !2592}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2612 = !MDLocation(line: 2672, column: 12, scope: !2613)
!2613 = !{!"0xb\001", !1, !2611}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2614 = !MDLocation(line: 2672, column: 12, scope: !2615)
!2615 = !{!"0xb\003", !1, !2611}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2616 = !MDLocation(line: 2672, column: 12, scope: !2617)
!2617 = !{!"0xb\005", !1, !2611}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2618 = !MDLocation(line: 2672, column: 12, scope: !2619)
!2619 = !{!"0xb\004", !1, !2611}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2620 = !MDLocation(line: 2672, column: 12, scope: !2621)
!2621 = !{!"0xb\002", !1, !2611}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2622 = !MDLocation(line: 2673, column: 11, scope: !2611)
!2623 = !MDLocation(line: 2673, column: 11, scope: !2613)
!2624 = !MDLocation(line: 2673, column: 11, scope: !2615)
!2625 = !MDLocation(line: 2673, column: 11, scope: !2617)
!2626 = !MDLocation(line: 2673, column: 11, scope: !2619)
!2627 = !MDLocation(line: 2673, column: 11, scope: !2621)
!2628 = !MDLocation(line: 2675, column: 6, scope: !2579)
!2629 = !MDLocation(line: 2677, column: 21, scope: !2630)
!2630 = !{!"0xb\002676\0011\00313", !1, !2580}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2631 = !MDLocation(line: 2677, column: 9, scope: !2630)
!2632 = !MDLocation(line: 2677, column: 8, scope: !2630)
!2633 = !MDLocation(line: 2678, column: 7, scope: !2630)
!2634 = !MDLocation(line: 2677, column: 8, scope: !2635)
!2635 = !{!"0xb\001", !1, !2630}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2636 = !MDLocation(line: 2679, column: 7, scope: !2637)
!2637 = !{!"0xb\002679\007\00314", !1, !2630}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2638 = !MDLocation(line: 2679, column: 7, scope: !2630)
!2639 = !MDLocation(line: 2679, column: 28, scope: !2640)
!2640 = !{!"0xb\001", !1, !2637}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2641 = !MDLocation(line: 2680, column: 12, scope: !2642)
!2642 = !{!"0xb\002679\0048\00315", !1, !2637}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2643 = !MDLocation(line: 2680, column: 12, scope: !2644)
!2644 = !{!"0xb\001", !1, !2642}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2645 = !MDLocation(line: 2680, column: 12, scope: !2646)
!2646 = !{!"0xb\004", !1, !2647}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2647 = !{!"0xb\002", !1, !2642}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2648 = !MDLocation(line: 2680, column: 12, scope: !2649)
!2649 = !{!"0xb\005", !1, !2642}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2650 = !MDLocation(line: 2680, column: 12, scope: !2651)
!2651 = !{!"0xb\008", !1, !2652}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2652 = !{!"0xb\006", !1, !2642}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2653 = !MDLocation(line: 2680, column: 12, scope: !2654)
!2654 = !{!"0xb\009", !1, !2642}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2655 = !MDLocation(line: 2680, column: 12, scope: !2656)
!2656 = !{!"0xb\0012", !1, !2657}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2657 = !{!"0xb\0010", !1, !2642}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2658 = !MDLocation(line: 2680, column: 12, scope: !2659)
!2659 = !{!"0xb\0013", !1, !2660}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2660 = !{!"0xb\0011", !1, !2661}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2661 = !{!"0xb\007", !1, !2662}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2662 = !{!"0xb\003", !1, !2642}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2663 = !MDLocation(line: 2681, column: 11, scope: !2642)
!2664 = !MDLocation(line: 2681, column: 11, scope: !2644)
!2665 = !MDLocation(line: 2681, column: 11, scope: !2646)
!2666 = !MDLocation(line: 2681, column: 11, scope: !2649)
!2667 = !MDLocation(line: 2681, column: 11, scope: !2651)
!2668 = !MDLocation(line: 2681, column: 11, scope: !2654)
!2669 = !MDLocation(line: 2681, column: 11, scope: !2656)
!2670 = !MDLocation(line: 2681, column: 11, scope: !2659)
!2671 = !MDLocation(line: 2682, column: 3, scope: !2642)
!2672 = !MDLocation(line: 2684, column: 12, scope: !2673)
!2673 = !{!"0xb\002683\008\00316", !1, !2637}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2674 = !MDLocation(line: 2684, column: 12, scope: !2675)
!2675 = !{!"0xb\001", !1, !2673}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2676 = !MDLocation(line: 2684, column: 12, scope: !2677)
!2677 = !{!"0xb\003", !1, !2673}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2678 = !MDLocation(line: 2684, column: 12, scope: !2679)
!2679 = !{!"0xb\002", !1, !2673}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2680 = !MDLocation(line: 2685, column: 11, scope: !2673)
!2681 = !MDLocation(line: 2685, column: 11, scope: !2675)
!2682 = !MDLocation(line: 2685, column: 11, scope: !2677)
!2683 = !MDLocation(line: 2685, column: 11, scope: !2679)
!2684 = !MDLocation(line: 2688, column: 12, scope: !2685)
!2685 = !{!"0xb\002688\0010\00317", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2686 = !MDLocation(line: 2688, column: 21, scope: !2685)
!2687 = !MDLocation(line: 2688, column: 11, scope: !2685)
!2688 = !MDLocation(line: 2688, column: 30, scope: !2685)
!2689 = !MDLocation(line: 2689, column: 9, scope: !2685)
!2690 = !MDLocation(line: 2688, column: 30, scope: !2691)
!2691 = !{!"0xb\002", !1, !2692}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2692 = !{!"0xb\001", !1, !2685}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2693 = !MDLocation(line: 2688, column: 10, scope: !2685)
!2694 = !MDLocation(line: 2688, column: 10, scope: !2096)
!2695 = !MDLocation(line: 2690, column: 7, scope: !2685)
!2696 = !MDLocation(line: 2691, column: 6, scope: !2096)
!2697 = !MDLocation(line: 2693, column: 6, scope: !2096)
!2698 = !MDLocation(line: 2696, column: 10, scope: !2096)
!2699 = !MDLocation(line: 2697, column: 3, scope: !2700)
!2700 = !{!"0xb\002696\0010\00318", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2701 = !MDLocation(line: 2698, column: 10, scope: !2096)
!2702 = !MDLocation(line: 2699, column: 7, scope: !2703)
!2703 = !{!"0xb\002699\007\00321", !1, !2704}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2704 = !{!"0xb\002698\0019\00320", !1, !2705}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2705 = !{!"0xb\002698\0010\00319", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2706 = !MDLocation(line: 2699, column: 7, scope: !2704)
!2707 = !MDLocation(line: 2700, column: 7, scope: !2708)
!2708 = !{!"0xb\002700\007\00324", !1, !2709}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2709 = !{!"0xb\002700\007\00323", !1, !2710}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2710 = !{!"0xb\002699\0035\00322", !1, !2703}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2711 = !MDLocation(line: 2700, column: 7, scope: !2709)
!2712 = !MDLocation(line: 2700, column: 7, scope: !2713)
!2713 = !{!"0xb\001", !1, !2714}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2714 = !{!"0xb\002700\007\00325", !1, !2708}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2715 = !MDLocation(line: 2701, column: 13, scope: !2716)
!2716 = !{!"0xb\002701\0011\00326", !1, !2710}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2717 = !MDLocation(line: 2701, column: 11, scope: !2710)
!2718 = !MDLocation(line: 2702, column: 20, scope: !2716)
!2719 = !MDLocation(line: 2702, column: 8, scope: !2716)
!2720 = !MDLocation(line: 2703, column: 8, scope: !2716)
!2721 = !MDLocation(line: 2703, column: 8, scope: !2722)
!2722 = !{!"0xb\001", !1, !2716}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2723 = !MDLocation(line: 2703, column: 8, scope: !2724)
!2724 = !{!"0xb\003", !1, !2716}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2725 = !MDLocation(line: 2703, column: 8, scope: !2726)
!2726 = !{!"0xb\004", !1, !2716}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2727 = !MDLocation(line: 2703, column: 8, scope: !2728)
!2728 = !{!"0xb\002", !1, !2716}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2729 = !MDLocation(line: 2703, column: 8, scope: !2730)
!2730 = !{!"0xb\006", !1, !2731}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2731 = !{!"0xb\005", !1, !2716}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2732 = !MDLocation(line: 2705, column: 4, scope: !2733)
!2733 = !{!"0xb\002704\007\00327", !1, !2716}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2734 = !MDLocation(line: 2707, column: 19, scope: !2710)
!2735 = !MDLocation(line: 2707, column: 7, scope: !2710)
!2736 = !MDLocation(line: 2708, column: 17, scope: !2710)
!2737 = !MDLocation(line: 2709, column: 7, scope: !2710)
!2738 = !MDLocation(line: 2711, column: 9, scope: !2739)
!2739 = !{!"0xb\002711\007\00328", !1, !2704}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2740 = !MDLocation(line: 2711, column: 7, scope: !2704)
!2741 = !MDLocation(line: 2712, column: 11, scope: !2739)
!2742 = !MDLocation(line: 2712, column: 30, scope: !2739)
!2743 = !MDLocation(line: 2713, column: 7, scope: !2739)
!2744 = !MDLocation(line: 2714, column: 13, scope: !2704)
!2745 = !MDLocation(line: 2715, column: 6, scope: !2704)
!2746 = !MDLocation(line: 2717, column: 9, scope: !2747)
!2747 = !{!"0xb\002717\007\00330", !1, !2748}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2748 = !{!"0xb\002716\0011\00329", !1, !2705}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2749 = !MDLocation(line: 2717, column: 7, scope: !2748)
!2750 = !MDLocation(line: 2718, column: 11, scope: !2747)
!2751 = !MDLocation(line: 2718, column: 30, scope: !2747)
!2752 = !MDLocation(line: 2719, column: 7, scope: !2747)
!2753 = !MDLocation(line: 2720, column: 13, scope: !2748)
!2754 = !MDLocation(line: 2722, column: 6, scope: !2096)
!2755 = !MDLocation(line: 2724, column: 6, scope: !2096)
!2756 = !MDLocation(line: 2727, column: 10, scope: !2096)
!2757 = !MDLocation(line: 2727, column: 34, scope: !2758)
!2758 = !{!"0xb\002727\0010\00331", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2759 = !MDLocation(line: 2727, column: 22, scope: !2758)
!2760 = !MDLocation(line: 2728, column: 3, scope: !2758)
!2761 = !MDLocation(line: 2729, column: 10, scope: !2096)
!2762 = !MDLocation(line: 2730, column: 3, scope: !2763)
!2763 = !{!"0xb\002730\003\00335", !1, !2764}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2764 = !{!"0xb\002730\003\00334", !1, !2765}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2765 = !{!"0xb\002729\0019\00333", !1, !2766}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2766 = !{!"0xb\002729\0010\00332", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2767 = !MDLocation(line: 2730, column: 3, scope: !2764)
!2768 = !MDLocation(line: 2730, column: 3, scope: !2769)
!2769 = !{!"0xb\001", !1, !2770}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2770 = !{!"0xb\002730\003\00336", !1, !2763}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2771 = !MDLocation(line: 2731, column: 7, scope: !2772)
!2772 = !{!"0xb\002731\007\00337", !1, !2765}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2773 = !MDLocation(line: 2731, column: 7, scope: !2765)
!2774 = !MDLocation(line: 2732, column: 21, scope: !2772)
!2775 = !MDLocation(line: 2732, column: 9, scope: !2772)
!2776 = !MDLocation(line: 2733, column: 9, scope: !2772)
!2777 = !MDLocation(line: 2733, column: 9, scope: !2778)
!2778 = !{!"0xb\001", !1, !2772}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2779 = !MDLocation(line: 2733, column: 9, scope: !2780)
!2780 = !{!"0xb\003", !1, !2772}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2781 = !MDLocation(line: 2733, column: 9, scope: !2782)
!2782 = !{!"0xb\004", !1, !2772}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2783 = !MDLocation(line: 2733, column: 9, scope: !2784)
!2784 = !{!"0xb\002", !1, !2772}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2785 = !MDLocation(line: 2733, column: 9, scope: !2786)
!2786 = !{!"0xb\006", !1, !2787}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2787 = !{!"0xb\005", !1, !2772}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2788 = !MDLocation(line: 2735, column: 7, scope: !2789)
!2789 = !{!"0xb\002734\003\00338", !1, !2772}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2790 = !MDLocation(line: 2737, column: 15, scope: !2765)
!2791 = !MDLocation(line: 2737, column: 3, scope: !2765)
!2792 = !MDLocation(line: 2738, column: 13, scope: !2765)
!2793 = !MDLocation(line: 2739, column: 3, scope: !2765)
!2794 = !MDLocation(line: 2741, column: 10, scope: !2795)
!2795 = !{!"0xb\002741\0010\00339", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2796 = !MDLocation(line: 2741, column: 10, scope: !2096)
!2797 = !MDLocation(line: 2742, column: 5, scope: !2795)
!2798 = !MDLocation(line: 2742, column: 24, scope: !2795)
!2799 = !MDLocation(line: 2743, column: 3, scope: !2795)
!2800 = !MDLocation(line: 2744, column: 16, scope: !2096)
!2801 = !MDLocation(line: 2745, column: 6, scope: !2096)
!2802 = !MDLocation(line: 2747, column: 6, scope: !2096)
!2803 = !MDLocation(line: 2750, column: 10, scope: !2096)
!2804 = !MDLocation(line: 2751, column: 3, scope: !2805)
!2805 = !{!"0xb\002750\0010\00340", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2806 = !MDLocation(line: 2752, column: 10, scope: !2096)
!2807 = !MDLocation(line: 2753, column: 3, scope: !2808)
!2808 = !{!"0xb\002753\003\00344", !1, !2809}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2809 = !{!"0xb\002753\003\00343", !1, !2810}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2810 = !{!"0xb\002752\0019\00342", !1, !2811}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2811 = !{!"0xb\002752\0010\00341", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2812 = !MDLocation(line: 2753, column: 3, scope: !2809)
!2813 = !MDLocation(line: 2753, column: 3, scope: !2814)
!2814 = !{!"0xb\001", !1, !2815}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2815 = !{!"0xb\002753\003\00345", !1, !2808}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2816 = !MDLocation(line: 2754, column: 9, scope: !2817)
!2817 = !{!"0xb\002754\007\00346", !1, !2810}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2818 = !MDLocation(line: 2754, column: 7, scope: !2810)
!2819 = !MDLocation(line: 2755, column: 23, scope: !2817)
!2820 = !MDLocation(line: 2755, column: 11, scope: !2817)
!2821 = !MDLocation(line: 2756, column: 11, scope: !2817)
!2822 = !MDLocation(line: 2756, column: 11, scope: !2823)
!2823 = !{!"0xb\001", !1, !2817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2824 = !MDLocation(line: 2756, column: 11, scope: !2825)
!2825 = !{!"0xb\003", !1, !2817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2826 = !MDLocation(line: 2756, column: 11, scope: !2827)
!2827 = !{!"0xb\004", !1, !2817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2828 = !MDLocation(line: 2756, column: 11, scope: !2829)
!2829 = !{!"0xb\002", !1, !2817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2830 = !MDLocation(line: 2756, column: 11, scope: !2831)
!2831 = !{!"0xb\006", !1, !2832}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2832 = !{!"0xb\005", !1, !2817}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2833 = !MDLocation(line: 2758, column: 7, scope: !2834)
!2834 = !{!"0xb\002757\003\00347", !1, !2817}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2835 = !MDLocation(line: 2760, column: 15, scope: !2810)
!2836 = !MDLocation(line: 2760, column: 3, scope: !2810)
!2837 = !MDLocation(line: 2761, column: 13, scope: !2810)
!2838 = !MDLocation(line: 2762, column: 3, scope: !2810)
!2839 = !MDLocation(line: 2764, column: 12, scope: !2840)
!2840 = !{!"0xb\002764\0010\00348", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2841 = !MDLocation(line: 2764, column: 10, scope: !2096)
!2842 = !MDLocation(line: 2765, column: 7, scope: !2840)
!2843 = !MDLocation(line: 2765, column: 26, scope: !2840)
!2844 = !MDLocation(line: 2766, column: 3, scope: !2840)
!2845 = !MDLocation(line: 2767, column: 16, scope: !2096)
!2846 = !MDLocation(line: 2768, column: 6, scope: !2096)
!2847 = !MDLocation(line: 2770, column: 6, scope: !2096)
!2848 = !MDLocation(line: 2773, column: 10, scope: !2096)
!2849 = !MDLocation(line: 2773, column: 34, scope: !2850)
!2850 = !{!"0xb\002773\0010\00349", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2851 = !MDLocation(line: 2773, column: 22, scope: !2850)
!2852 = !MDLocation(line: 2774, column: 3, scope: !2850)
!2853 = !MDLocation(line: 2775, column: 10, scope: !2096)
!2854 = !MDLocation(line: 2776, column: 3, scope: !2855)
!2855 = !{!"0xb\002776\003\00353", !1, !2856}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2856 = !{!"0xb\002776\003\00352", !1, !2857}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2857 = !{!"0xb\002775\0019\00351", !1, !2858}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2858 = !{!"0xb\002775\0010\00350", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2859 = !MDLocation(line: 2776, column: 3, scope: !2856)
!2860 = !MDLocation(line: 2776, column: 3, scope: !2861)
!2861 = !{!"0xb\001", !1, !2862}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2862 = !{!"0xb\002776\003\00354", !1, !2855}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2863 = !MDLocation(line: 2777, column: 7, scope: !2864)
!2864 = !{!"0xb\002777\007\00355", !1, !2857}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2865 = !MDLocation(line: 2777, column: 7, scope: !2857)
!2866 = !MDLocation(line: 2778, column: 21, scope: !2864)
!2867 = !MDLocation(line: 2778, column: 9, scope: !2864)
!2868 = !MDLocation(line: 2779, column: 9, scope: !2864)
!2869 = !MDLocation(line: 2779, column: 9, scope: !2870)
!2870 = !{!"0xb\001", !1, !2864}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2871 = !MDLocation(line: 2779, column: 9, scope: !2872)
!2872 = !{!"0xb\003", !1, !2864}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2873 = !MDLocation(line: 2779, column: 9, scope: !2874)
!2874 = !{!"0xb\004", !1, !2864}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2875 = !MDLocation(line: 2779, column: 9, scope: !2876)
!2876 = !{!"0xb\002", !1, !2864}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2877 = !MDLocation(line: 2779, column: 9, scope: !2878)
!2878 = !{!"0xb\006", !1, !2879}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2879 = !{!"0xb\005", !1, !2864}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2880 = !MDLocation(line: 2781, column: 7, scope: !2881)
!2881 = !{!"0xb\002780\003\00356", !1, !2864}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2882 = !MDLocation(line: 2783, column: 15, scope: !2857)
!2883 = !MDLocation(line: 2783, column: 3, scope: !2857)
!2884 = !MDLocation(line: 2784, column: 13, scope: !2857)
!2885 = !MDLocation(line: 2785, column: 3, scope: !2857)
!2886 = !MDLocation(line: 2787, column: 10, scope: !2887)
!2887 = !{!"0xb\002787\0010\00357", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2888 = !MDLocation(line: 2787, column: 10, scope: !2096)
!2889 = !MDLocation(line: 2788, column: 5, scope: !2887)
!2890 = !MDLocation(line: 2788, column: 24, scope: !2887)
!2891 = !MDLocation(line: 2789, column: 3, scope: !2887)
!2892 = !MDLocation(line: 2790, column: 16, scope: !2096)
!2893 = !MDLocation(line: 2791, column: 6, scope: !2096)
!2894 = !MDLocation(line: 2793, column: 22, scope: !2895)
!2895 = !{!"0xb\002793\0010\00358", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2896 = !MDLocation(line: 2793, column: 10, scope: !2895)
!2897 = !MDLocation(line: 2793, column: 10, scope: !2096)
!2898 = !MDLocation(line: 2794, column: 3, scope: !2895)
!2899 = !MDLocation(line: 2795, column: 11, scope: !2096)
!2900 = !MDLocation(line: 2796, column: 3, scope: !2901)
!2901 = !{!"0xb\002796\003\00362", !1, !2902}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2902 = !{!"0xb\002796\003\00361", !1, !2903}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2903 = !{!"0xb\002795\0020\00360", !1, !2904}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2904 = !{!"0xb\002795\0011\00359", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2905 = !MDLocation(line: 2796, column: 3, scope: !2902)
!2906 = !MDLocation(line: 2796, column: 3, scope: !2907)
!2907 = !{!"0xb\001", !1, !2908}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2908 = !{!"0xb\002796\003\00363", !1, !2901}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2909 = !MDLocation(line: 2797, column: 19, scope: !2910)
!2910 = !{!"0xb\002797\007\00364", !1, !2903}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2911 = !MDLocation(line: 2797, column: 7, scope: !2910)
!2912 = !MDLocation(line: 2797, column: 7, scope: !2903)
!2913 = !MDLocation(line: 2798, column: 7, scope: !2910)
!2914 = !MDLocation(line: 2799, column: 15, scope: !2903)
!2915 = !MDLocation(line: 2799, column: 3, scope: !2903)
!2916 = !MDLocation(line: 2800, column: 3, scope: !2903)
!2917 = !MDLocation(line: 2800, column: 21, scope: !2903)
!2918 = !MDLocation(line: 2800, column: 10, scope: !2903)
!2919 = !MDLocation(line: 2801, column: 22, scope: !2903)
!2920 = !MDLocation(line: 2801, column: 10, scope: !2903)
!2921 = !MDLocation(line: 2800, column: 3, scope: !2922)
!2922 = !{!"0xb\002", !1, !2903}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2923 = !MDLocation(line: 2802, column: 19, scope: !2903)
!2924 = !MDLocation(line: 2802, column: 7, scope: !2903)
!2925 = !MDLocation(line: 2803, column: 18, scope: !2926)
!2926 = !{!"0xb\002803\007\00365", !1, !2903}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2927 = !MDLocation(line: 2803, column: 7, scope: !2926)
!2928 = !MDLocation(line: 2803, column: 7, scope: !2903)
!2929 = !MDLocation(line: 2804, column: 7, scope: !2926)
!2930 = !MDLocation(line: 2805, column: 6, scope: !2903)
!2931 = !MDLocation(line: 2807, column: 9, scope: !2904)
!2932 = !MDLocation(line: 2808, column: 16, scope: !2096)
!2933 = !MDLocation(line: 2809, column: 6, scope: !2096)
!2934 = !MDLocation(line: 2811, column: 6, scope: !2096)
!2935 = !MDLocation(line: 2815, column: 10, scope: !2096)
!2936 = !MDLocation(line: 2816, column: 11, scope: !2096)
!2937 = !MDLocation(line: 2817, column: 24, scope: !2096)
!2938 = !MDLocation(line: 2817, column: 6, scope: !2096)
!2939 = !MDLocation(line: 2818, column: 16, scope: !2940)
!2940 = !{!"0xb\002818\0010\00366", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2941 = !MDLocation(line: 2818, column: 15, scope: !2940)
!2942 = !MDLocation(line: 2818, column: 10, scope: !2940)
!2943 = !MDLocation(line: 2818, column: 10, scope: !2096)
!2944 = !MDLocation(line: 2818, column: 39, scope: !2945)
!2945 = !{!"0xb\001", !1, !2940}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2946 = !MDLocation(line: 2819, column: 3, scope: !2940)
!2947 = !MDLocation(line: 2820, column: 16, scope: !2948)
!2948 = !{!"0xb\002820\0010\00367", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2949 = !MDLocation(line: 2820, column: 10, scope: !2948)
!2950 = !MDLocation(line: 2820, column: 10, scope: !2096)
!2951 = !MDLocation(line: 2821, column: 3, scope: !2948)
!2952 = !MDLocation(line: 2823, column: 10, scope: !2096)
!2953 = !MDLocation(line: 2824, column: 10, scope: !2954)
!2954 = !{!"0xb\002824\0010\00368", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2955 = !MDLocation(line: 2824, column: 10, scope: !2096)
!2956 = !MDLocation(line: 2824, column: 21, scope: !2957)
!2957 = !{!"0xb\001", !1, !2954}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2958 = !{!"0x100\00l\002825\000", !2959, !538, !39} ; [ DW_TAG_auto_variable ] [l] [line 2825]
!2959 = !{!"0xb\002824\0038\00369", !1, !2954}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2960 = !MDLocation(line: 2825, column: 9, scope: !2959)
!2961 = !MDLocation(line: 2826, column: 13, scope: !2959)
!2962 = !MDLocation(line: 2826, column: 24, scope: !2959)
!2963 = !{!"0x100\00e\002826\000", !2959, !538, !39} ; [ DW_TAG_auto_variable ] [e] [line 2826]
!2964 = !MDLocation(line: 2826, column: 9, scope: !2959)
!2965 = !MDLocation(line: 2832, column: 7, scope: !2966)
!2966 = !{!"0xb\002832\007\00370", !1, !2959}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2967 = !MDLocation(line: 2832, column: 7, scope: !2959)
!2968 = !{!"0x100\00ulen1\002833\000", !2969, !538, !48} ; [ DW_TAG_auto_variable ] [ulen1] [line 2833]
!2969 = !{!"0xb\002832\0025\00371", !1, !2966}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2970 = !MDLocation(line: 2833, column: 14, scope: !2969)
!2971 = !{!"0x100\00ulen2\002833\000", !2969, !538, !48} ; [ DW_TAG_auto_variable ] [ulen2] [line 2833]
!2972 = !MDLocation(line: 2833, column: 21, scope: !2969)
!2973 = !{!"0x100\00tmpbuf1\002834\000", !2969, !538, !2974} ; [ DW_TAG_auto_variable ] [tmpbuf1] [line 2834]
!2974 = !{!"0x1\00\000\0056\008\000\000\000", null, null, !54, !2975, null, null, null} ; [ DW_TAG_array_type ] [line 0, size 56, align 8, offset 0] [from U8]
!2975 = !{!2976}
!2976 = !{!"0x21\000\007"}                        ; [ DW_TAG_subrange_type ] [0, 6]
!2977 = !MDLocation(line: 2834, column: 10, scope: !2969)
!2978 = !{!"0x100\00tmpbuf2\002835\000", !2969, !538, !2974} ; [ DW_TAG_auto_variable ] [tmpbuf2] [line 2835]
!2979 = !MDLocation(line: 2835, column: 10, scope: !2969)
!2980 = !MDLocation(line: 2836, column: 7, scope: !2969)
!2981 = !MDLocation(line: 2836, column: 14, scope: !2969)
!2982 = !MDLocation(line: 2837, column: 13, scope: !2983)
!2983 = !{!"0xb\002837\008\00373", !1, !2984}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2984 = !{!"0xb\002836\0021\00372", !1, !2969}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2985 = !MDLocation(line: 2837, column: 8, scope: !2983)
!2986 = !MDLocation(line: 2837, column: 8, scope: !2984)
!2987 = !MDLocation(line: 2838, column: 8, scope: !2983)
!2988 = !MDLocation(line: 2839, column: 4, scope: !2984)
!2989 = !MDLocation(line: 2840, column: 4, scope: !2984)
!2990 = !MDLocation(line: 2841, column: 8, scope: !2991)
!2991 = !{!"0xb\002841\008\00374", !1, !2984}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2992 = !MDLocation(line: 2841, column: 17, scope: !2991)
!2993 = !MDLocation(line: 2841, column: 8, scope: !2984)
!2994 = !MDLocation(line: 2841, column: 26, scope: !2995)
!2995 = !{!"0xb\001", !1, !2991}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!2996 = !MDLocation(line: 2842, column: 8, scope: !2991)
!2997 = !MDLocation(line: 2843, column: 9, scope: !2984)
!2998 = !MDLocation(line: 2843, column: 4, scope: !2984)
!2999 = !MDLocation(line: 2844, column: 9, scope: !2984)
!3000 = !MDLocation(line: 2844, column: 4, scope: !2984)
!3001 = !MDLocation(line: 2846, column: 3, scope: !2969)
!3002 = !MDLocation(line: 2848, column: 13, scope: !2959)
!3003 = !MDLocation(line: 2849, column: 3, scope: !2959)
!3004 = !MDLocation(line: 2853, column: 10, scope: !3005)
!3005 = !{!"0xb\002853\0010\00375", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3006 = !MDLocation(line: 2853, column: 10, scope: !2096)
!3007 = !MDLocation(line: 2854, column: 4, scope: !3005)
!3008 = !MDLocation(line: 2855, column: 5, scope: !3005)
!3009 = !MDLocation(line: 2855, column: 20, scope: !3005)
!3010 = !MDLocation(line: 2855, column: 21, scope: !3005)
!3011 = !MDLocation(line: 2855, column: 19, scope: !3005)
!3012 = !MDLocation(line: 2857, column: 3, scope: !3005)
!3013 = !MDLocation(line: 2858, column: 11, scope: !2096)
!3014 = !MDLocation(line: 2859, column: 10, scope: !3015)
!3015 = !{!"0xb\002859\0010\00376", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3016 = !MDLocation(line: 2859, column: 26, scope: !3015)
!3017 = !MDLocation(line: 2859, column: 10, scope: !2096)
!3018 = !MDLocation(line: 2860, column: 3, scope: !3015)
!3019 = !MDLocation(line: 2861, column: 10, scope: !3020)
!3020 = !{!"0xb\002861\0010\00377", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3021 = !MDLocation(line: 2861, column: 10, scope: !2096)
!3022 = !MDLocation(line: 2861, column: 21, scope: !3023)
!3023 = !{!"0xb\001", !1, !3020}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3024 = !MDLocation(line: 2862, column: 9, scope: !3020)
!3025 = !MDLocation(line: 2863, column: 10, scope: !3020)
!3026 = !MDLocation(line: 2864, column: 12, scope: !3020)
!3027 = !MDLocation(line: 2865, column: 12, scope: !3020)
!3028 = !MDLocation(line: 2866, column: 3, scope: !3020)
!3029 = !MDLocation(line: 2867, column: 6, scope: !2096)
!3030 = !MDLocation(line: 2868, column: 16, scope: !2096)
!3031 = !MDLocation(line: 2869, column: 6, scope: !2096)
!3032 = !MDLocation(line: 2873, column: 6, scope: !2096)
!3033 = !MDLocation(line: 2875, column: 6, scope: !2096)
!3034 = !MDLocation(line: 2878, column: 6, scope: !3035)
!3035 = !{!"0xb\002877\002\00378", !1, !2096}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3036 = !{!"0x100\00sp\002878\000", !3035, !538, !276} ; [ DW_TAG_auto_variable ] [sp] [line 2878]
!3037 = !MDLocation(line: 2879, column: 22, scope: !3035)
!3038 = !{!"0x100\00oop\002879\000", !3035, !538, !475} ; [ DW_TAG_auto_variable ] [oop] [line 2879]
!3039 = !MDLocation(line: 2879, column: 16, scope: !3035)
!3040 = !MDLocation(line: 2880, column: 21, scope: !3035)
!3041 = !{!"0x100\00ocurcop\002880\000", !3035, !538, !3042} ; [ DW_TAG_auto_variable ] [ocurcop] [line 2880]
!3042 = !{!"0xf\00\000\0064\0064\000\000", null, null, !3043} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from COP]
!3043 = !{!"0x16\00COP\002006\000\000\000\000", !43, null, !3044} ; [ DW_TAG_typedef ] [COP] [line 2006, size 0, align 0, offset 0] [from cop]
!3044 = !{!"0x13\00cop\0016\00768\0064\000\000\000", !3045, null, null, !3046, null, null, null} ; [ DW_TAG_structure_type ] [cop] [line 16, size 768, align 64, offset 0] [def] [from ]
!3045 = !{!"./cop.h", !"/tmp/perlbench"}
!3046 = !{!3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062}
!3047 = !{!"0xd\00op_next\0017\0064\0064\000\000", !3045, !3044, !183} ; [ DW_TAG_member ] [op_next] [line 17, size 64, align 64, offset 0] [from ]
!3048 = !{!"0xd\00op_sibling\0017\0064\0064\0064\000", !3045, !3044, !183} ; [ DW_TAG_member ] [op_sibling] [line 17, size 64, align 64, offset 64] [from ]
!3049 = !{!"0xd\00op_ppaddr\0017\0064\0064\00128\000", !3045, !3044, !190} ; [ DW_TAG_member ] [op_ppaddr] [line 17, size 64, align 64, offset 128] [from ]
!3050 = !{!"0xd\00op_targ\0017\0064\0064\00192\000", !3045, !3044, !194} ; [ DW_TAG_member ] [op_targ] [line 17, size 64, align 64, offset 192] [from PADOFFSET]
!3051 = !{!"0xd\00op_type\0017\0016\0016\00256\000", !3045, !3044, !197} ; [ DW_TAG_member ] [op_type] [line 17, size 16, align 16, offset 256] [from U16]
!3052 = !{!"0xd\00op_seq\0017\0016\0016\00272\000", !3045, !3044, !197} ; [ DW_TAG_member ] [op_seq] [line 17, size 16, align 16, offset 272] [from U16]
!3053 = !{!"0xd\00op_flags\0017\008\008\00288\000", !3045, !3044, !54} ; [ DW_TAG_member ] [op_flags] [line 17, size 8, align 8, offset 288] [from U8]
!3054 = !{!"0xd\00op_private\0017\008\008\00296\000", !3045, !3044, !54} ; [ DW_TAG_member ] [op_private] [line 17, size 8, align 8, offset 296] [from U8]
!3055 = !{!"0xd\00cop_label\0018\0064\0064\00320\000", !3045, !3044, !39} ; [ DW_TAG_member ] [cop_label] [line 18, size 64, align 64, offset 320] [from ]
!3056 = !{!"0xd\00cop_stash\0023\0064\0064\00384\000", !3045, !3044, !139} ; [ DW_TAG_member ] [cop_stash] [line 23, size 64, align 64, offset 384] [from ]
!3057 = !{!"0xd\00cop_filegv\0024\0064\0064\00448\000", !3045, !3044, !365} ; [ DW_TAG_member ] [cop_filegv] [line 24, size 64, align 64, offset 448] [from ]
!3058 = !{!"0xd\00cop_seq\0026\0032\0032\00512\000", !3045, !3044, !93} ; [ DW_TAG_member ] [cop_seq] [line 26, size 32, align 32, offset 512] [from U32]
!3059 = !{!"0xd\00cop_arybase\0027\0032\0032\00544\000", !3045, !3044, !157} ; [ DW_TAG_member ] [cop_arybase] [line 27, size 32, align 32, offset 544] [from I32]
!3060 = !{!"0xd\00cop_line\0028\0032\0032\00576\000", !3045, !3044, !440} ; [ DW_TAG_member ] [cop_line] [line 28, size 32, align 32, offset 576] [from line_t]
!3061 = !{!"0xd\00cop_warnings\0029\0064\0064\00640\000", !3045, !3044, !87} ; [ DW_TAG_member ] [cop_warnings] [line 29, size 64, align 64, offset 640] [from ]
!3062 = !{!"0xd\00cop_io\0030\0064\0064\00704\000", !3045, !3044, !87} ; [ DW_TAG_member ] [cop_io] [line 30, size 64, align 64, offset 704] [from ]
!3063 = !MDLocation(line: 2880, column: 11, scope: !3035)
!3064 = !MDLocation(line: 2883, column: 28, scope: !3035)
!3065 = !{!"0x100\00oreg\002883\000", !3035, !538, !3066} ; [ DW_TAG_auto_variable ] [oreg] [line 2883]
!3066 = !{!"0xf\00\000\0064\0064\000\000", null, null, !217} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from regexp]
!3067 = !MDLocation(line: 2883, column: 21, scope: !3035)
!3068 = !MDLocation(line: 2885, column: 10, scope: !3035)
!3069 = !MDLocation(line: 2886, column: 25, scope: !3035)
!3070 = !MDLocation(line: 2886, column: 14, scope: !3035)
!3071 = !MDLocation(line: 2886, column: 6, scope: !3035)
!3072 = !MDLocation(line: 2888, column: 6, scope: !3035)
!3073 = !{!"0x100\00old_comppad\002881\000", !3035, !538, !477} ; [ DW_TAG_auto_variable ] [old_comppad] [line 2881]
!3074 = !MDLocation(line: 2881, column: 11, scope: !3035)
!3075 = !MDLocation(line: 2888, column: 6, scope: !3076)
!3076 = !{!"0xb\001", !1, !3035}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3077 = !MDLocation(line: 2888, column: 6, scope: !3078)
!3078 = !{!"0xb\002", !1, !3035}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3079 = !MDLocation(line: 2888, column: 6, scope: !3080)
!3080 = !{!"0xb\004", !1, !3081}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3081 = !{!"0xb\003", !1, !3035}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3082 = !MDLocation(line: 2889, column: 56, scope: !3035)
!3083 = !MDLocation(line: 2889, column: 45, scope: !3035)
!3084 = !MDLocation(line: 2889, column: 22, scope: !3035)
!3085 = !MDLocation(line: 2889, column: 6, scope: !3035)
!3086 = !{!"0x100\00before\002892\000", !3087, !538, !276} ; [ DW_TAG_auto_variable ] [before] [line 2892]
!3087 = !{!"0xb\002891\006\00379", !1, !3035}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3088 = !MDLocation(line: 2892, column: 8, scope: !3087)
!3089 = !MDLocation(line: 2893, column: 3, scope: !3087)
!3090 = !MDLocation(line: 2894, column: 3, scope: !3087)
!3091 = !MDLocation(line: 2895, column: 7, scope: !3092)
!3092 = !{!"0xb\002895\007\00380", !1, !3087}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3093 = !MDLocation(line: 2895, column: 7, scope: !3087)
!3094 = !{!"0x100\00ret\002882\000", !3035, !538, !87} ; [ DW_TAG_auto_variable ] [ret] [line 2882]
!3095 = !MDLocation(line: 2882, column: 10, scope: !3035)
!3096 = !MDLocation(line: 2896, column: 7, scope: !3092)
!3097 = !MDLocation(line: 2898, column: 13, scope: !3098)
!3098 = !{!"0xb\002897\008\00381", !1, !3092}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3099 = !MDLocation(line: 2899, column: 7, scope: !3098)
!3100 = !MDLocation(line: 2903, column: 6, scope: !3035)
!3101 = !MDLocation(line: 2904, column: 6, scope: !3035)
!3102 = !MDLocation(line: 2904, column: 6, scope: !3076)
!3103 = !MDLocation(line: 2904, column: 6, scope: !3078)
!3104 = !MDLocation(line: 2904, column: 6, scope: !3080)
!3105 = !MDLocation(line: 2905, column: 6, scope: !3035)
!3106 = !MDLocation(line: 2906, column: 10, scope: !3035)
!3107 = !MDLocation(line: 2907, column: 7, scope: !3108)
!3108 = !{!"0xb\002907\007\00384", !1, !3109}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3109 = !{!"0xb\002906\0019\00383", !1, !3110}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3110 = !{!"0xb\002906\0010\00382", !1, !3035}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3111 = !MDLocation(line: 2907, column: 7, scope: !3109)
!3112 = !{!"0x100\00mg\002909\000", !3113, !538, !71} ; [ DW_TAG_auto_variable ] [mg] [line 2909]
!3113 = !{!"0xb\002907\0021\00385", !1, !3108}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3114 = !MDLocation(line: 2909, column: 14, scope: !3113)
!3115 = !{!"0x100\00state\002910\000", !3113, !538, !3116} ; [ DW_TAG_auto_variable ] [state] [line 2910]
!3116 = !{!"0x16\00re_cc_state\00298\000\000\000\000", !1, null, !3117} ; [ DW_TAG_typedef ] [re_cc_state] [line 298, size 0, align 0, offset 0] [from re_cc_state]
!3117 = !{!"0x13\00re_cc_state\00291\00320\0064\000\000\000", !1, null, null, !3118, null, null, null} ; [ DW_TAG_structure_type ] [re_cc_state] [line 291, size 320, align 64, offset 0] [def] [from ]
!3118 = !{!3119, !3120, !3121, !3123, !3137}
!3119 = !{!"0xd\00ss\00293\0032\0032\000\000", !1, !3117, !157} ; [ DW_TAG_member ] [ss] [line 293, size 32, align 32, offset 0] [from I32]
!3120 = !{!"0xd\00node\00294\0064\0064\0064\000", !1, !3117, !224} ; [ DW_TAG_member ] [node] [line 294, size 64, align 64, offset 64] [from ]
!3121 = !{!"0xd\00prev\00295\0064\0064\00128\000", !1, !3117, !3122} ; [ DW_TAG_member ] [prev] [line 295, size 64, align 64, offset 128] [from ]
!3122 = !{!"0xf\00\000\0064\0064\000\000", null, null, !3117} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from re_cc_state]
!3123 = !{!"0xd\00cc\00296\0064\0064\00192\000", !1, !3117, !3124} ; [ DW_TAG_member ] [cc] [line 296, size 64, align 64, offset 192] [from ]
!3124 = !{!"0xf\00\000\0064\0064\000\000", null, null, !3125} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from CURCUR]
!3125 = !{!"0x16\00CURCUR\002616\000\000\000\000", !43, null, !3126} ; [ DW_TAG_typedef ] [CURCUR] [line 2616, size 0, align 0, offset 0] [from curcur]
!3126 = !{!"0x13\00curcur\002617\00448\0064\000\000\000", !43, null, null, !3127, null, null, null} ; [ DW_TAG_structure_type ] [curcur] [line 2617, size 448, align 64, offset 0] [def] [from ]
!3127 = !{!3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136}
!3128 = !{!"0xd\00parenfloor\002618\0032\0032\000\000", !43, !3126, !86} ; [ DW_TAG_member ] [parenfloor] [line 2618, size 32, align 32, offset 0] [from int]
!3129 = !{!"0xd\00cur\002619\0032\0032\0032\000", !43, !3126, !86} ; [ DW_TAG_member ] [cur] [line 2619, size 32, align 32, offset 32] [from int]
!3130 = !{!"0xd\00min\002620\0032\0032\0064\000", !43, !3126, !86} ; [ DW_TAG_member ] [min] [line 2620, size 32, align 32, offset 64] [from int]
!3131 = !{!"0xd\00max\002621\0032\0032\0096\000", !43, !3126, !86} ; [ DW_TAG_member ] [max] [line 2621, size 32, align 32, offset 96] [from int]
!3132 = !{!"0xd\00minmod\002622\0032\0032\00128\000", !43, !3126, !86} ; [ DW_TAG_member ] [minmod] [line 2622, size 32, align 32, offset 128] [from int]
!3133 = !{!"0xd\00scan\002623\0064\0064\00192\000", !43, !3126, !224} ; [ DW_TAG_member ] [scan] [line 2623, size 64, align 64, offset 192] [from ]
!3134 = !{!"0xd\00next\002624\0064\0064\00256\000", !43, !3126, !224} ; [ DW_TAG_member ] [next] [line 2624, size 64, align 64, offset 256] [from ]
!3135 = !{!"0xd\00lastloc\002625\0064\0064\00320\000", !43, !3126, !39} ; [ DW_TAG_member ] [lastloc] [line 2625, size 64, align 64, offset 320] [from ]
!3136 = !{!"0xd\00oldcc\002626\0064\0064\00384\000", !43, !3126, !3124} ; [ DW_TAG_member ] [oldcc] [line 2626, size 64, align 64, offset 384] [from ]
!3137 = !{!"0xd\00re\00297\0064\0064\00256\000", !1, !3117, !484} ; [ DW_TAG_member ] [re] [line 297, size 64, align 64, offset 256] [from ]
!3138 = !MDLocation(line: 2910, column: 19, scope: !3113)
!3139 = !MDLocation(line: 2915, column: 10, scope: !3140)
!3140 = !{!"0xb\002915\0010\00386", !1, !3113}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3141 = !MDLocation(line: 2915, column: 10, scope: !3113)
!3142 = !MDLocation(line: 2915, column: 24, scope: !3143)
!3143 = !{!"0xb\001", !1, !3140}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3144 = !{!"0x100\00sv\002913\000", !3113, !538, !87} ; [ DW_TAG_auto_variable ] [sv] [line 2913]
!3145 = !MDLocation(line: 2913, column: 20, scope: !3113)
!3146 = !MDLocation(line: 2916, column: 9, scope: !3140)
!3147 = !MDLocation(line: 2916, column: 4, scope: !3140)
!3148 = !MDLocation(line: 2917, column: 16, scope: !3149)
!3149 = !{!"0xb\002917\0016\00387", !1, !3140}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3150 = !MDLocation(line: 2917, column: 16, scope: !3140)
!3151 = !MDLocation(line: 2918, column: 8, scope: !3152)
!3152 = !{!"0xb\002918\008\00389", !1, !3153}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3153 = !{!"0xb\002917\0033\00388", !1, !3149}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3154 = !MDLocation(line: 2918, column: 8, scope: !3153)
!3155 = !MDLocation(line: 2919, column: 8, scope: !3152)
!3156 = !MDLocation(line: 2921, column: 13, scope: !3152)
!3157 = !MDLocation(line: 2922, column: 7, scope: !3153)
!3158 = !MDLocation(line: 2924, column: 11, scope: !3113)
!3159 = !MDLocation(line: 2925, column: 19, scope: !3160)
!3160 = !{!"0xb\002924\0015\00391", !1, !3161}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3161 = !{!"0xb\002924\0011\00390", !1, !3113}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3162 = !MDLocation(line: 2925, column: 9, scope: !3160)
!3163 = !{!"0x100\00re\002908\000", !3113, !538, !484} ; [ DW_TAG_auto_variable ] [re] [line 2908]
!3164 = !MDLocation(line: 2908, column: 15, scope: !3113)
!3165 = !MDLocation(line: 2926, column: 10, scope: !3160)
!3166 = !MDLocation(line: 2926, column: 10, scope: !3167)
!3167 = !{!"0xb\001", !1, !3160}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3168 = !MDLocation(line: 2926, column: 10, scope: !3169)
!3169 = !{!"0xb\002", !1, !3160}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3170 = !MDLocation(line: 2927, column: 7, scope: !3160)
!3171 = !{!"0x100\00len\002929\000", !3172, !538, !48} ; [ DW_TAG_auto_variable ] [len] [line 2929]
!3172 = !{!"0xb\002928\0012\00392", !1, !3161}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3173 = !MDLocation(line: 2929, column: 11, scope: !3172)
!3174 = !MDLocation(line: 2930, column: 14, scope: !3172)
!3175 = !MDLocation(line: 2930, column: 14, scope: !3176)
!3176 = !{!"0xb\001", !1, !3172}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3177 = !MDLocation(line: 2930, column: 14, scope: !3178)
!3178 = !{!"0xb\002", !1, !3172}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3179 = !{!"0x100\00t\002930\000", !3172, !538, !39} ; [ DW_TAG_auto_variable ] [t] [line 2930]
!3180 = !MDLocation(line: 2930, column: 10, scope: !3172)
!3181 = !{!"0x100\00pm\002931\000", !3172, !538, !178} ; [ DW_TAG_auto_variable ] [pm] [line 2931]
!3182 = !MDLocation(line: 2931, column: 9, scope: !3172)
!3183 = !MDLocation(line: 2932, column: 21, scope: !3172)
!3184 = !{!"0x100\00oprecomp\002932\000", !3172, !538, !39} ; [ DW_TAG_auto_variable ] [oprecomp] [line 2932]
!3185 = !MDLocation(line: 2932, column: 10, scope: !3172)
!3186 = !MDLocation(line: 2933, column: 16, scope: !3172)
!3187 = !{!"0x100\00osize\002933\000", !3172, !538, !157} ; [ DW_TAG_auto_variable ] [osize] [line 2933]
!3188 = !MDLocation(line: 2933, column: 8, scope: !3172)
!3189 = !MDLocation(line: 2934, column: 16, scope: !3172)
!3190 = !{!"0x100\00onpar\002934\000", !3172, !538, !157} ; [ DW_TAG_auto_variable ] [onpar] [line 2934]
!3191 = !MDLocation(line: 2934, column: 8, scope: !3172)
!3192 = !MDLocation(line: 2936, column: 4, scope: !3172)
!3193 = !MDLocation(line: 2937, column: 29, scope: !3194)
!3194 = !{!"0xb\002937\0029\00393", !1, !3172}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3195 = !MDLocation(line: 2937, column: 29, scope: !3172)
!3196 = !MDLocation(line: 2937, column: 29, scope: !3197)
!3197 = !{!"0xb\001", !1, !3194}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3198 = !MDLocation(line: 2937, column: 43, scope: !3199)
!3199 = !{!"0xb\002", !1, !3194}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3200 = !MDLocation(line: 2938, column: 9, scope: !3172)
!3201 = !MDLocation(line: 2938, column: 34, scope: !3172)
!3202 = !MDLocation(line: 2938, column: 30, scope: !3172)
!3203 = !MDLocation(line: 2939, column: 10, scope: !3204)
!3204 = !{!"0xb\002939\008\00394", !1, !3172}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3205 = !MDLocation(line: 2939, column: 8, scope: !3172)
!3206 = !MDLocation(line: 2942, column: 26, scope: !3204)
!3207 = !MDLocation(line: 2942, column: 26, scope: !3208)
!3208 = !{!"0xb\001", !1, !3204}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3209 = !MDLocation(line: 2942, column: 26, scope: !3210)
!3210 = !{!"0xb\002", !1, !3204}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3211 = !MDLocation(line: 2942, column: 21, scope: !3204)
!3212 = !MDLocation(line: 2942, column: 8, scope: !3204)
!3213 = !MDLocation(line: 2944, column: 4, scope: !3172)
!3214 = !MDLocation(line: 2945, column: 4, scope: !3172)
!3215 = !MDLocation(line: 2946, column: 4, scope: !3172)
!3216 = !MDLocation(line: 2956, column: 7, scope: !3113)
!3217 = !MDLocation(line: 2957, column: 20, scope: !3113)
!3218 = !MDLocation(line: 2957, column: 7, scope: !3113)
!3219 = !MDLocation(line: 2958, column: 18, scope: !3113)
!3220 = !MDLocation(line: 2958, column: 7, scope: !3113)
!3221 = !MDLocation(line: 2959, column: 18, scope: !3113)
!3222 = !MDLocation(line: 2959, column: 7, scope: !3113)
!3223 = !MDLocation(line: 2961, column: 7, scope: !3113)
!3224 = !MDLocation(line: 2963, column: 12, scope: !3113)
!3225 = !{!"0x100\00cp\002911\000", !3113, !538, !518} ; [ DW_TAG_auto_variable ] [cp] [line 2911]
!3226 = !MDLocation(line: 2911, column: 18, scope: !3113)
!3227 = !MDLocation(line: 2964, column: 7, scope: !3113)
!3228 = !{!"0x100\00lastcp\002911\000", !3113, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 2911]
!3229 = !MDLocation(line: 2911, column: 22, scope: !3113)
!3230 = !MDLocation(line: 2965, column: 7, scope: !3113)
!3231 = !MDLocation(line: 2966, column: 18, scope: !3113)
!3232 = !MDLocation(line: 2966, column: 7, scope: !3113)
!3233 = !MDLocation(line: 2967, column: 8, scope: !3113)
!3234 = !MDLocation(line: 2967, column: 7, scope: !3113)
!3235 = !MDLocation(line: 2968, column: 8, scope: !3113)
!3236 = !MDLocation(line: 2968, column: 7, scope: !3113)
!3237 = !MDLocation(line: 2969, column: 7, scope: !3113)
!3238 = !MDLocation(line: 2970, column: 7, scope: !3113)
!3239 = !MDLocation(line: 2971, column: 21, scope: !3113)
!3240 = !MDLocation(line: 2971, column: 20, scope: !3113)
!3241 = !MDLocation(line: 2972, column: 7, scope: !3113)
!3242 = !MDLocation(line: 2972, column: 6, scope: !3113)
!3243 = !MDLocation(line: 2971, column: 19, scope: !3113)
!3244 = !{!"0x100\00toggleutf\002912\000", !3113, !538, !86} ; [ DW_TAG_auto_variable ] [toggleutf] [line 2912]
!3245 = !MDLocation(line: 2912, column: 25, scope: !3113)
!3246 = !MDLocation(line: 2973, column: 11, scope: !3113)
!3247 = !MDLocation(line: 2973, column: 22, scope: !3248)
!3248 = !{!"0xb\001", !1, !3249}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3249 = !{!"0xb\002973\0011\00395", !1, !3113}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3250 = !MDLocation(line: 2976, column: 7, scope: !3113)
!3251 = !MDLocation(line: 2978, column: 20, scope: !3252)
!3252 = !{!"0xb\002978\0011\00396", !1, !3113}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3253 = !MDLocation(line: 2978, column: 11, scope: !3252)
!3254 = !MDLocation(line: 2978, column: 11, scope: !3113)
!3255 = !MDLocation(line: 2984, column: 21, scope: !3256)
!3256 = !{!"0xb\002978\0038\00397", !1, !3252}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3257 = !MDLocation(line: 2984, column: 4, scope: !3256)
!3258 = !MDLocation(line: 2985, column: 15, scope: !3256)
!3259 = !MDLocation(line: 2985, column: 4, scope: !3256)
!3260 = !MDLocation(line: 2986, column: 16, scope: !3256)
!3261 = !MDLocation(line: 2986, column: 4, scope: !3256)
!3262 = !MDLocation(line: 2987, column: 13, scope: !3256)
!3263 = !MDLocation(line: 2987, column: 4, scope: !3256)
!3264 = !MDLocation(line: 2988, column: 8, scope: !3256)
!3265 = !MDLocation(line: 2988, column: 19, scope: !3266)
!3266 = !{!"0xb\001", !1, !3267}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3267 = !{!"0xb\002988\008\00398", !1, !3256}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3268 = !MDLocation(line: 2991, column: 4, scope: !3256)
!3269 = !MDLocation(line: 2994, column: 4, scope: !3256)
!3270 = !MDLocation(line: 2995, column: 4, scope: !3271)
!3271 = !{!"0xb\002995\004\00399", !1, !3256}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3272 = !MDLocation(line: 2995, column: 4, scope: !3256)
!3273 = !MDLocation(line: 2995, column: 4, scope: !3274)
!3274 = !{!"0xb\001", !1, !3271}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3275 = !MDLocation(line: 2996, column: 4, scope: !3256)
!3276 = !MDLocation(line: 2998, column: 7, scope: !3113)
!3277 = !MDLocation(line: 2999, column: 7, scope: !3278)
!3278 = !{!"0xb\002999\007\00400", !1, !3113}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3279 = !MDLocation(line: 2999, column: 7, scope: !3113)
!3280 = !MDLocation(line: 2999, column: 7, scope: !3281)
!3281 = !{!"0xb\001", !1, !3278}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3282 = !MDLocation(line: 3000, column: 7, scope: !3113)
!3283 = !MDLocation(line: 3001, column: 24, scope: !3113)
!3284 = !MDLocation(line: 3001, column: 7, scope: !3113)
!3285 = !MDLocation(line: 3002, column: 18, scope: !3113)
!3286 = !MDLocation(line: 3002, column: 7, scope: !3113)
!3287 = !MDLocation(line: 3003, column: 19, scope: !3113)
!3288 = !MDLocation(line: 3003, column: 7, scope: !3113)
!3289 = !MDLocation(line: 3004, column: 16, scope: !3113)
!3290 = !MDLocation(line: 3004, column: 7, scope: !3113)
!3291 = !MDLocation(line: 3005, column: 11, scope: !3113)
!3292 = !MDLocation(line: 3005, column: 22, scope: !3293)
!3293 = !{!"0xb\001", !1, !3294}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3294 = !{!"0xb\003005\0011\00401", !1, !3113}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3295 = !MDLocation(line: 3008, column: 7, scope: !3113)
!3296 = !MDLocation(line: 3011, column: 7, scope: !3113)
!3297 = !MDLocation(line: 3013, column: 8, scope: !3109)
!3298 = !MDLocation(line: 3013, column: 8, scope: !3299)
!3299 = !{!"0xb\002", !1, !3109}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3300 = !MDLocation(line: 3013, column: 8, scope: !3301)
!3301 = !{!"0xb\001", !1, !3109}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3302 = !MDLocation(line: 3013, column: 8, scope: !3303)
!3303 = !{!"0xb\004", !1, !3109}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3304 = !MDLocation(line: 3013, column: 8, scope: !3305)
!3305 = !{!"0xb\006", !1, !3109}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3306 = !MDLocation(line: 3013, column: 8, scope: !3307)
!3307 = !{!"0xb\008", !1, !3109}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3308 = !MDLocation(line: 3013, column: 8, scope: !3309)
!3309 = !{!"0xb\009", !1, !3109}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3310 = !MDLocation(line: 3013, column: 8, scope: !3311)
!3311 = !{!"0xb\0010", !1, !3109}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3312 = !MDLocation(line: 3013, column: 8, scope: !3313)
!3313 = !{!"0xb\007", !1, !3109}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3314 = !MDLocation(line: 3013, column: 8, scope: !3315)
!3315 = !{!"0xb\005", !1, !3109}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3316 = !MDLocation(line: 3013, column: 8, scope: !3317)
!3317 = !{!"0xb\0012", !1, !3109}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3318 = !MDLocation(line: 3013, column: 8, scope: !3319)
!3319 = !{!"0xb\0013", !1, !3109}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3320 = !MDLocation(line: 3013, column: 8, scope: !3321)
!3321 = !{!"0xb\0015", !1, !3109}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3322 = !MDLocation(line: 3013, column: 8, scope: !3323)
!3323 = !{!"0xb\0016", !1, !3109}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3324 = !MDLocation(line: 3013, column: 8, scope: !3325)
!3325 = !{!"0xb\0018", !1, !3326}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3326 = !{!"0xb\0017", !1, !3109}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3327 = !MDLocation(line: 3013, column: 8, scope: !3328)
!3328 = !{!"0xb\0019", !1, !3329}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3329 = !{!"0xb\0014", !1, !3109}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3330 = !MDLocation(line: 3013, column: 8, scope: !3331)
!3331 = !{!"0xb\0020", !1, !3332}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3332 = !{!"0xb\0011", !1, !3109}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3333 = !MDLocation(line: 3015, column: 6, scope: !3109)
!3334 = !MDLocation(line: 3017, column: 3, scope: !3335)
!3335 = !{!"0xb\003016\0011\00402", !1, !3110}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3336 = !MDLocation(line: 3018, column: 3, scope: !3335)
!3337 = !MDLocation(line: 3020, column: 6, scope: !3035)
!3338 = !MDLocation(line: 3023, column: 10, scope: !2096)
!3339 = !MDLocation(line: 3024, column: 6, scope: !2096)
!3340 = !MDLocation(line: 3025, column: 14, scope: !3341)
!3341 = !{!"0xb\003025\0010\00403", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3342 = !MDLocation(line: 3025, column: 10, scope: !3341)
!3343 = !MDLocation(line: 3025, column: 10, scope: !2096)
!3344 = !MDLocation(line: 3026, column: 3, scope: !3341)
!3345 = !MDLocation(line: 3027, column: 6, scope: !2096)
!3346 = !MDLocation(line: 3029, column: 10, scope: !2096)
!3347 = !MDLocation(line: 3030, column: 24, scope: !2096)
!3348 = !MDLocation(line: 3030, column: 46, scope: !2096)
!3349 = !MDLocation(line: 3030, column: 6, scope: !2096)
!3350 = !MDLocation(line: 3031, column: 33, scope: !2096)
!3351 = !MDLocation(line: 3031, column: 22, scope: !2096)
!3352 = !MDLocation(line: 3031, column: 6, scope: !2096)
!3353 = !MDLocation(line: 3032, column: 20, scope: !3354)
!3354 = !{!"0xb\003032\0010\00404", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3355 = !MDLocation(line: 3032, column: 19, scope: !3354)
!3356 = !MDLocation(line: 3032, column: 10, scope: !3354)
!3357 = !MDLocation(line: 3032, column: 10, scope: !2096)
!3358 = !MDLocation(line: 3033, column: 4, scope: !3354)
!3359 = !MDLocation(line: 3033, column: 3, scope: !3354)
!3360 = !MDLocation(line: 3034, column: 7, scope: !2096)
!3361 = !MDLocation(line: 3034, column: 6, scope: !2096)
!3362 = !MDLocation(line: 3035, column: 6, scope: !2096)
!3363 = !MDLocation(line: 3037, column: 10, scope: !2096)
!3364 = !MDLocation(line: 3038, column: 18, scope: !2096)
!3365 = !MDLocation(line: 3038, column: 17, scope: !2096)
!3366 = !MDLocation(line: 3038, column: 12, scope: !2096)
!3367 = !MDLocation(line: 3038, column: 42, scope: !2096)
!3368 = !MDLocation(line: 3038, column: 12, scope: !3369)
!3369 = !{!"0xb\002", !1, !2096}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3370 = !MDLocation(line: 3039, column: 6, scope: !2096)
!3371 = !MDLocation(line: 3041, column: 24, scope: !2096)
!3372 = !MDLocation(line: 3041, column: 6, scope: !2096)
!3373 = !MDLocation(line: 3042, column: 10, scope: !2096)
!3374 = !MDLocation(line: 3043, column: 10, scope: !3375)
!3375 = !{!"0xb\003042\0010\00405", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3376 = !MDLocation(line: 3043, column: 3, scope: !3375)
!3377 = !MDLocation(line: 3045, column: 17, scope: !3378)
!3378 = !{!"0xb\003044\0011\00406", !1, !3375}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3379 = !MDLocation(line: 3045, column: 10, scope: !3378)
!3380 = !MDLocation(line: 3046, column: 7, scope: !3381)
!3381 = !{!"0xb\003046\007\00407", !1, !3378}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3382 = !MDLocation(line: 3046, column: 7, scope: !3378)
!3383 = !MDLocation(line: 3047, column: 14, scope: !3381)
!3384 = !MDLocation(line: 3047, column: 7, scope: !3381)
!3385 = !MDLocation(line: 3049, column: 6, scope: !2096)
!3386 = !MDLocation(line: 3051, column: 16, scope: !2096)
!3387 = !MDLocation(line: 3052, column: 6, scope: !2096)
!3388 = !{!"0x100\00cc\003129\000", !3389, !538, !3125} ; [ DW_TAG_auto_variable ] [cc] [line 3129]
!3389 = !{!"0xb\003128\0015\00408", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3390 = !MDLocation(line: 3129, column: 10, scope: !3389)
!3391 = !MDLocation(line: 3130, column: 19, scope: !3389)
!3392 = !{!"0x100\00cp\003130\000", !3389, !538, !518} ; [ DW_TAG_auto_variable ] [cp] [line 3130]
!3393 = !MDLocation(line: 3130, column: 14, scope: !3389)
!3394 = !MDLocation(line: 3132, column: 20, scope: !3389)
!3395 = !{!"0x100\00parenfloor\003132\000", !3389, !538, !157} ; [ DW_TAG_auto_variable ] [parenfloor] [line 3132]
!3396 = !MDLocation(line: 3132, column: 7, scope: !3389)
!3397 = !MDLocation(line: 3134, column: 7, scope: !3398)
!3398 = !{!"0xb\003134\007\00409", !1, !3389}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3399 = !MDLocation(line: 3134, column: 7, scope: !3389)
!3400 = !MDLocation(line: 3135, column: 15, scope: !3398)
!3401 = !MDLocation(line: 3135, column: 7, scope: !3398)
!3402 = !MDLocation(line: 3136, column: 14, scope: !3389)
!3403 = !MDLocation(line: 3136, column: 3, scope: !3389)
!3404 = !MDLocation(line: 3137, column: 3, scope: !3389)
!3405 = !MDLocation(line: 3140, column: 26, scope: !3406)
!3406 = !{!"0xb\003140\007\00410", !1, !3389}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3407 = !MDLocation(line: 3140, column: 25, scope: !3406)
!3408 = !MDLocation(line: 3140, column: 7, scope: !3406)
!3409 = !MDLocation(line: 3140, column: 7, scope: !3389)
!3410 = !MDLocation(line: 3141, column: 21, scope: !3406)
!3411 = !MDLocation(line: 3141, column: 20, scope: !3406)
!3412 = !MDLocation(line: 3141, column: 7, scope: !3406)
!3413 = !MDLocation(line: 3142, column: 3, scope: !3389)
!3414 = !MDLocation(line: 3143, column: 3, scope: !3389)
!3415 = !MDLocation(line: 3144, column: 12, scope: !3389)
!3416 = !MDLocation(line: 3144, column: 3, scope: !3389)
!3417 = !MDLocation(line: 3145, column: 13, scope: !3389)
!3418 = !MDLocation(line: 3145, column: 3, scope: !3389)
!3419 = !MDLocation(line: 3146, column: 13, scope: !3389)
!3420 = !MDLocation(line: 3146, column: 3, scope: !3389)
!3421 = !MDLocation(line: 3147, column: 3, scope: !3389)
!3422 = !MDLocation(line: 3148, column: 3, scope: !3389)
!3423 = !MDLocation(line: 3149, column: 3, scope: !3389)
!3424 = !MDLocation(line: 3150, column: 3, scope: !3389)
!3425 = !MDLocation(line: 3151, column: 16, scope: !3389)
!3426 = !MDLocation(line: 3151, column: 7, scope: !3389)
!3427 = !MDLocation(line: 3152, column: 3, scope: !3428)
!3428 = !{!"0xb\003152\003\00411", !1, !3389}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3429 = !MDLocation(line: 3152, column: 3, scope: !3389)
!3430 = !MDLocation(line: 3152, column: 3, scope: !3431)
!3431 = !{!"0xb\001", !1, !3428}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3432 = !MDLocation(line: 3153, column: 14, scope: !3389)
!3433 = !MDLocation(line: 3153, column: 3, scope: !3389)
!3434 = !MDLocation(line: 3154, column: 3, scope: !3389)
!3435 = !MDLocation(line: 3154, column: 3, scope: !3436)
!3436 = !{!"0xb\001", !1, !3437}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3437 = !{!"0xb\003154\003\00412", !1, !3389}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3438 = !MDLocation(line: 3154, column: 3, scope: !3439)
!3439 = !{!"0xb\002", !1, !3437}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3440 = !MDLocation(line: 3168, column: 16, scope: !3441)
!3441 = !{!"0xb\003157\0015\00413", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3442 = !{!"0x100\00cc\003168\000", !3441, !538, !3124} ; [ DW_TAG_auto_variable ] [cc] [line 3168]
!3443 = !MDLocation(line: 3168, column: 11, scope: !3441)
!3444 = !MDLocation(line: 3169, column: 19, scope: !3441)
!3445 = !{!"0x100\00lastloc\003169\000", !3441, !538, !39} ; [ DW_TAG_auto_variable ] [lastloc] [line 3169]
!3446 = !MDLocation(line: 3169, column: 9, scope: !3441)
!3447 = !{!"0x100\00cache_offset\003170\000", !3441, !538, !157} ; [ DW_TAG_auto_variable ] [cache_offset] [line 3170]
!3448 = !MDLocation(line: 3170, column: 7, scope: !3441)
!3449 = !{!"0x100\00cache_bit\003170\000", !3441, !538, !157} ; [ DW_TAG_auto_variable ] [cache_bit] [line 3170]
!3450 = !MDLocation(line: 3170, column: 25, scope: !3441)
!3451 = !MDLocation(line: 3172, column: 7, scope: !3441)
!3452 = !MDLocation(line: 3173, column: 3, scope: !3441)
!3453 = !MDLocation(line: 3185, column: 19, scope: !3454)
!3454 = !{!"0xb\003185\007\00414", !1, !3441}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3455 = !MDLocation(line: 3185, column: 7, scope: !3454)
!3456 = !MDLocation(line: 3185, column: 7, scope: !3441)
!3457 = !MDLocation(line: 3185, column: 39, scope: !3454)
!3458 = !MDLocation(line: 3185, column: 34, scope: !3454)
!3459 = !MDLocation(line: 3186, column: 18, scope: !3460)
!3460 = !{!"0xb\003185\0048\00415", !1, !3454}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3461 = !MDLocation(line: 3186, column: 7, scope: !3460)
!3462 = !MDLocation(line: 3187, column: 11, scope: !3463)
!3463 = !{!"0xb\003187\0011\00416", !1, !3460}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3464 = !MDLocation(line: 3187, column: 11, scope: !3460)
!3465 = !MDLocation(line: 3188, column: 9, scope: !3463)
!3466 = !MDLocation(line: 3188, column: 4, scope: !3463)
!3467 = !MDLocation(line: 3194, column: 20, scope: !3468)
!3468 = !{!"0xb\003194\0011\00417", !1, !3460}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3469 = !MDLocation(line: 3194, column: 11, scope: !3468)
!3470 = !MDLocation(line: 3194, column: 11, scope: !3460)
!3471 = !MDLocation(line: 3195, column: 4, scope: !3468)
!3472 = !MDLocation(line: 3196, column: 11, scope: !3473)
!3473 = !{!"0xb\003196\0011\00418", !1, !3460}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3474 = !MDLocation(line: 3196, column: 11, scope: !3460)
!3475 = !MDLocation(line: 3197, column: 4, scope: !3473)
!3476 = !MDLocation(line: 3198, column: 7, scope: !3460)
!3477 = !MDLocation(line: 3199, column: 7, scope: !3460)
!3478 = !MDLocation(line: 3204, column: 11, scope: !3479)
!3479 = !{!"0xb\003204\007\00419", !1, !3441}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3480 = !MDLocation(line: 3204, column: 7, scope: !3479)
!3481 = !MDLocation(line: 3204, column: 7, scope: !3441)
!3482 = !MDLocation(line: 3205, column: 7, scope: !3483)
!3483 = !{!"0xb\003204\0020\00420", !1, !3479}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3484 = !MDLocation(line: 3206, column: 7, scope: !3483)
!3485 = !MDLocation(line: 3207, column: 20, scope: !3486)
!3486 = !{!"0xb\003207\0011\00421", !1, !3483}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3487 = !MDLocation(line: 3207, column: 11, scope: !3486)
!3488 = !MDLocation(line: 3207, column: 11, scope: !3483)
!3489 = !MDLocation(line: 3208, column: 4, scope: !3486)
!3490 = !MDLocation(line: 3209, column: 17, scope: !3483)
!3491 = !MDLocation(line: 3209, column: 7, scope: !3483)
!3492 = !MDLocation(line: 3210, column: 7, scope: !3483)
!3493 = !MDLocation(line: 3211, column: 7, scope: !3483)
!3494 = !MDLocation(line: 3214, column: 7, scope: !3495)
!3495 = !{!"0xb\003214\007\00422", !1, !3441}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3496 = !MDLocation(line: 3214, column: 7, scope: !3441)
!3497 = !MDLocation(line: 3218, column: 8, scope: !3498)
!3498 = !{!"0xb\003218\007\00424", !1, !3499}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3499 = !{!"0xb\003214\0020\00423", !1, !3495}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3500 = !MDLocation(line: 3218, column: 7, scope: !3499)
!3501 = !MDLocation(line: 3219, column: 25, scope: !3502)
!3502 = !{!"0xb\003218\0024\00425", !1, !3498}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3503 = !MDLocation(line: 3219, column: 37, scope: !3502)
!3504 = !MDLocation(line: 3219, column: 54, scope: !3502)
!3505 = !MDLocation(line: 3219, column: 53, scope: !3502)
!3506 = !MDLocation(line: 3219, column: 24, scope: !3502)
!3507 = !MDLocation(line: 3219, column: 7, scope: !3502)
!3508 = !MDLocation(line: 3220, column: 25, scope: !3502)
!3509 = !MDLocation(line: 3220, column: 7, scope: !3502)
!3510 = !MDLocation(line: 3221, column: 3, scope: !3502)
!3511 = !MDLocation(line: 3222, column: 7, scope: !3512)
!3512 = !{!"0xb\003222\007\00426", !1, !3499}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3513 = !MDLocation(line: 3222, column: 7, scope: !3499)
!3514 = !MDLocation(line: 3223, column: 19, scope: !3515)
!3515 = !{!"0xb\003222\0031\00427", !1, !3512}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3516 = !MDLocation(line: 3223, column: 18, scope: !3515)
!3517 = !{!"0x100\00size\003223\000", !3515, !538, !157} ; [ DW_TAG_auto_variable ] [size] [line 3223]
!3518 = !MDLocation(line: 3223, column: 11, scope: !3515)
!3519 = !MDLocation(line: 3224, column: 11, scope: !3520)
!3520 = !{!"0xb\003224\0011\00428", !1, !3515}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3521 = !MDLocation(line: 3224, column: 11, scope: !3515)
!3522 = !MDLocation(line: 3225, column: 13, scope: !3523)
!3523 = !{!"0xb\003225\008\00430", !1, !3524}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3524 = !{!"0xb\003224\0028\00429", !1, !3520}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3525 = !MDLocation(line: 3225, column: 8, scope: !3523)
!3526 = !MDLocation(line: 3225, column: 8, scope: !3524)
!3527 = !MDLocation(line: 3226, column: 8, scope: !3528)
!3528 = !{!"0xb\003225\0042\00431", !1, !3523}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3529 = !MDLocation(line: 3227, column: 31, scope: !3528)
!3530 = !MDLocation(line: 3227, column: 8, scope: !3528)
!3531 = !MDLocation(line: 3228, column: 4, scope: !3528)
!3532 = !MDLocation(line: 3229, column: 4, scope: !3524)
!3533 = !MDLocation(line: 3230, column: 7, scope: !3524)
!3534 = !MDLocation(line: 3232, column: 27, scope: !3535)
!3535 = !{!"0xb\003231\0012\00432", !1, !3520}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3536 = !MDLocation(line: 3232, column: 4, scope: !3535)
!3537 = !MDLocation(line: 3233, column: 4, scope: !3535)
!3538 = !MDLocation(line: 3240, column: 3, scope: !3515)
!3539 = !MDLocation(line: 3241, column: 7, scope: !3540)
!3540 = !{!"0xb\003241\007\00433", !1, !3499}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3541 = !MDLocation(line: 3241, column: 7, scope: !3499)
!3542 = !MDLocation(line: 3242, column: 33, scope: !3543)
!3543 = !{!"0xb\003241\0028\00434", !1, !3540}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3544 = !MDLocation(line: 3242, column: 22, scope: !3543)
!3545 = !MDLocation(line: 3244, column: 23, scope: !3543)
!3546 = !MDLocation(line: 3244, column: 22, scope: !3543)
!3547 = !MDLocation(line: 3245, column: 26, scope: !3543)
!3548 = !MDLocation(line: 3245, column: 10, scope: !3543)
!3549 = !MDLocation(line: 3246, column: 19, scope: !3543)
!3550 = !MDLocation(line: 3247, column: 7, scope: !3543)
!3551 = !MDLocation(line: 3248, column: 11, scope: !3552)
!3552 = !{!"0xb\003248\0011\00435", !1, !3543}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3553 = !MDLocation(line: 3248, column: 44, scope: !3552)
!3554 = !MDLocation(line: 3248, column: 11, scope: !3543)
!3555 = !MDLocation(line: 3254, column: 8, scope: !3556)
!3556 = !{!"0xb\003254\008\00437", !1, !3557}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3557 = !{!"0xb\003248\0059\00436", !1, !3552}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3558 = !MDLocation(line: 3254, column: 8, scope: !3557)
!3559 = !MDLocation(line: 3256, column: 8, scope: !3556)
!3560 = !MDLocation(line: 3259, column: 8, scope: !3556)
!3561 = !MDLocation(line: 3261, column: 41, scope: !3543)
!3562 = !MDLocation(line: 3261, column: 7, scope: !3543)
!3563 = !MDLocation(line: 3262, column: 3, scope: !3543)
!3564 = !MDLocation(line: 3263, column: 3, scope: !3499)
!3565 = !MDLocation(line: 3267, column: 7, scope: !3566)
!3566 = !{!"0xb\003267\007\00438", !1, !3441}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3567 = !MDLocation(line: 3267, column: 7, scope: !3441)
!3568 = !MDLocation(line: 3268, column: 18, scope: !3569)
!3569 = !{!"0xb\003267\0019\00439", !1, !3566}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3570 = !MDLocation(line: 3268, column: 7, scope: !3569)
!3571 = !MDLocation(line: 3269, column: 11, scope: !3572)
!3572 = !{!"0xb\003269\0011\00440", !1, !3569}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3573 = !MDLocation(line: 3269, column: 11, scope: !3569)
!3574 = !MDLocation(line: 3270, column: 9, scope: !3572)
!3575 = !MDLocation(line: 3270, column: 4, scope: !3572)
!3576 = !MDLocation(line: 3271, column: 22, scope: !3569)
!3577 = !MDLocation(line: 3271, column: 12, scope: !3569)
!3578 = !{!"0x100\00cp\003167\000", !3441, !538, !518} ; [ DW_TAG_auto_variable ] [cp] [line 3167]
!3579 = !MDLocation(line: 3167, column: 14, scope: !3441)
!3580 = !MDLocation(line: 3272, column: 7, scope: !3569)
!3581 = !{!"0x100\00lastcp\003167\000", !3441, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 3167]
!3582 = !MDLocation(line: 3167, column: 18, scope: !3441)
!3583 = !MDLocation(line: 3273, column: 20, scope: !3584)
!3584 = !{!"0xb\003273\0011\00441", !1, !3569}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3585 = !MDLocation(line: 3273, column: 11, scope: !3584)
!3586 = !MDLocation(line: 3273, column: 11, scope: !3569)
!3587 = !MDLocation(line: 3274, column: 4, scope: !3588)
!3588 = !{!"0xb\003274\004\00443", !1, !3589}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3589 = !{!"0xb\003273\0031\00442", !1, !3584}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3590 = !MDLocation(line: 3274, column: 4, scope: !3589)
!3591 = !MDLocation(line: 3274, column: 4, scope: !3592)
!3592 = !{!"0xb\001", !1, !3588}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3593 = !MDLocation(line: 3275, column: 4, scope: !3594)
!3594 = !{!"0xb\003275\004\00445", !1, !3595}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3595 = !{!"0xb\003275\004\00444", !1, !3589}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3596 = !MDLocation(line: 3275, column: 4, scope: !3595)
!3597 = !MDLocation(line: 3275, column: 4, scope: !3598)
!3598 = !{!"0xb\001", !1, !3599}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3599 = !{!"0xb\003275\004\00447", !1, !3600}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3600 = !{!"0xb\003275\004\00446", !1, !3594}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3601 = !MDLocation(line: 3275, column: 4, scope: !3600)
!3602 = !MDLocation(line: 3275, column: 4, scope: !3603)
!3603 = !{!"0xb\004", !1, !3599}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3604 = !MDLocation(line: 3275, column: 4, scope: !3605)
!3605 = !{!"0xb\003", !1, !3606}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3606 = !{!"0xb\003275\004\00448", !1, !3599}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3607 = !MDLocation(line: 3275, column: 4, scope: !3599)
!3608 = !MDLocation(line: 3275, column: 4, scope: !3609)
!3609 = !{!"0xb\006", !1, !3610}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3610 = !{!"0xb\003275\004\00449", !1, !3606}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3611 = !MDLocation(line: 3275, column: 4, scope: !3612)
!3612 = !{!"0xb\005", !1, !3600}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3613 = !MDLocation(line: 3275, column: 4, scope: !3614)
!3614 = !{!"0xb\007", !1, !3615}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3615 = !{!"0xb\002", !1, !3595}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3616 = !MDLocation(line: 3277, column: 7, scope: !3617)
!3617 = !{!"0xb\003277\007\00450", !1, !3569}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3618 = !MDLocation(line: 3277, column: 7, scope: !3569)
!3619 = !MDLocation(line: 3277, column: 7, scope: !3620)
!3620 = !{!"0xb\001", !1, !3617}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3621 = !MDLocation(line: 3278, column: 7, scope: !3569)
!3622 = !MDLocation(line: 3279, column: 11, scope: !3623)
!3623 = !{!"0xb\003279\0011\00451", !1, !3569}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3624 = !MDLocation(line: 3279, column: 11, scope: !3569)
!3625 = !MDLocation(line: 3280, column: 4, scope: !3623)
!3626 = !MDLocation(line: 3281, column: 7, scope: !3569)
!3627 = !MDLocation(line: 3283, column: 16, scope: !3628)
!3628 = !{!"0xb\003283\0011\00452", !1, !3569}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3629 = !MDLocation(line: 3283, column: 11, scope: !3628)
!3630 = !MDLocation(line: 3283, column: 11, scope: !3569)
!3631 = !MDLocation(line: 3284, column: 8, scope: !3632)
!3632 = !{!"0xb\003284\008\00454", !1, !3633}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3633 = !{!"0xb\003283\0025\00453", !1, !3628}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3634 = !MDLocation(line: 3284, column: 8, scope: !3633)
!3635 = !MDLocation(line: 3284, column: 8, scope: !3636)
!3636 = !{!"0xb\001", !1, !3632}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3637 = !MDLocation(line: 3284, column: 8, scope: !3638)
!3638 = !{!"0xb\003", !1, !3632}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3639 = !MDLocation(line: 3284, column: 8, scope: !3640)
!3640 = !{!"0xb\006", !1, !3632}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3641 = !MDLocation(line: 3284, column: 8, scope: !3642)
!3642 = !{!"0xb\008", !1, !3643}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3643 = !{!"0xb\004", !1, !3644}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3644 = !{!"0xb\002", !1, !3632}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3645 = !MDLocation(line: 3284, column: 8, scope: !3646)
!3646 = !{!"0xb\009", !1, !3632}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3647 = !MDLocation(line: 3284, column: 31, scope: !3648)
!3648 = !{!"0xb\0010", !1, !3649}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3649 = !{!"0xb\007", !1, !3650}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3650 = !{!"0xb\005", !1, !3632}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3651 = !MDLocation(line: 3285, column: 13, scope: !3632)
!3652 = !MDLocation(line: 3286, column: 8, scope: !3653)
!3653 = !{!"0xb\003285\0040\00455", !1, !3632}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3654 = !MDLocation(line: 3287, column: 8, scope: !3653)
!3655 = !MDLocation(line: 3290, column: 4, scope: !3653)
!3656 = !MDLocation(line: 3291, column: 4, scope: !3657)
!3657 = !{!"0xb\003291\004\00457", !1, !3658}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3658 = !{!"0xb\003291\004\00456", !1, !3633}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3659 = !MDLocation(line: 3291, column: 4, scope: !3658)
!3660 = !MDLocation(line: 3291, column: 4, scope: !3661)
!3661 = !{!"0xb\001", !1, !3662}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3662 = !{!"0xb\003291\004\00459", !1, !3663}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3663 = !{!"0xb\003291\004\00458", !1, !3657}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3664 = !MDLocation(line: 3291, column: 4, scope: !3663)
!3665 = !MDLocation(line: 3291, column: 4, scope: !3666)
!3666 = !{!"0xb\004", !1, !3662}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3667 = !MDLocation(line: 3291, column: 4, scope: !3668)
!3668 = !{!"0xb\003", !1, !3669}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3669 = !{!"0xb\003291\004\00460", !1, !3662}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3670 = !MDLocation(line: 3291, column: 4, scope: !3662)
!3671 = !MDLocation(line: 3291, column: 4, scope: !3672)
!3672 = !{!"0xb\006", !1, !3673}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3673 = !{!"0xb\003291\004\00461", !1, !3669}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3674 = !MDLocation(line: 3291, column: 4, scope: !3675)
!3675 = !{!"0xb\005", !1, !3663}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3676 = !MDLocation(line: 3291, column: 4, scope: !3677)
!3677 = !{!"0xb\007", !1, !3678}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3678 = !{!"0xb\002", !1, !3658}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3679 = !MDLocation(line: 3300, column: 7, scope: !3569)
!3680 = !MDLocation(line: 3301, column: 7, scope: !3569)
!3681 = !MDLocation(line: 3302, column: 7, scope: !3569)
!3682 = !MDLocation(line: 3303, column: 22, scope: !3569)
!3683 = !MDLocation(line: 3303, column: 12, scope: !3569)
!3684 = !MDLocation(line: 3304, column: 7, scope: !3569)
!3685 = !MDLocation(line: 3305, column: 20, scope: !3686)
!3686 = !{!"0xb\003305\0011\00462", !1, !3569}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3687 = !MDLocation(line: 3305, column: 11, scope: !3686)
!3688 = !MDLocation(line: 3305, column: 11, scope: !3569)
!3689 = !MDLocation(line: 3306, column: 4, scope: !3690)
!3690 = !{!"0xb\003306\004\00464", !1, !3691}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3691 = !{!"0xb\003305\0031\00463", !1, !3686}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3692 = !MDLocation(line: 3306, column: 4, scope: !3691)
!3693 = !MDLocation(line: 3306, column: 4, scope: !3694)
!3694 = !{!"0xb\001", !1, !3690}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3695 = !MDLocation(line: 3307, column: 4, scope: !3696)
!3696 = !{!"0xb\003307\004\00466", !1, !3697}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3697 = !{!"0xb\003307\004\00465", !1, !3691}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3698 = !MDLocation(line: 3307, column: 4, scope: !3697)
!3699 = !MDLocation(line: 3307, column: 4, scope: !3700)
!3700 = !{!"0xb\001", !1, !3701}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3701 = !{!"0xb\003307\004\00468", !1, !3702}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3702 = !{!"0xb\003307\004\00467", !1, !3696}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3703 = !MDLocation(line: 3307, column: 4, scope: !3702)
!3704 = !MDLocation(line: 3307, column: 4, scope: !3705)
!3705 = !{!"0xb\004", !1, !3701}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3706 = !MDLocation(line: 3307, column: 4, scope: !3707)
!3707 = !{!"0xb\003", !1, !3708}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3708 = !{!"0xb\003307\004\00469", !1, !3701}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3709 = !MDLocation(line: 3307, column: 4, scope: !3701)
!3710 = !MDLocation(line: 3307, column: 4, scope: !3711)
!3711 = !{!"0xb\006", !1, !3712}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3712 = !{!"0xb\003307\004\00470", !1, !3708}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3713 = !MDLocation(line: 3307, column: 4, scope: !3714)
!3714 = !{!"0xb\005", !1, !3702}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3715 = !MDLocation(line: 3307, column: 4, scope: !3716)
!3716 = !{!"0xb\007", !1, !3717}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3717 = !{!"0xb\002", !1, !3697}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3718 = !MDLocation(line: 3309, column: 7, scope: !3719)
!3719 = !{!"0xb\003309\007\00471", !1, !3569}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3720 = !MDLocation(line: 3309, column: 7, scope: !3569)
!3721 = !MDLocation(line: 3309, column: 7, scope: !3722)
!3722 = !{!"0xb\001", !1, !3719}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3723 = !MDLocation(line: 3310, column: 7, scope: !3569)
!3724 = !MDLocation(line: 3311, column: 17, scope: !3569)
!3725 = !MDLocation(line: 3311, column: 7, scope: !3569)
!3726 = !MDLocation(line: 3312, column: 7, scope: !3569)
!3727 = !MDLocation(line: 3313, column: 7, scope: !3728)
!3728 = !{!"0xb\003313\007\00473", !1, !3729}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3729 = !{!"0xb\003313\007\00472", !1, !3569}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3730 = !MDLocation(line: 3313, column: 7, scope: !3729)
!3731 = !MDLocation(line: 3313, column: 7, scope: !3732)
!3732 = !{!"0xb\001", !1, !3733}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3733 = !{!"0xb\003313\007\00475", !1, !3734}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3734 = !{!"0xb\003313\007\00474", !1, !3728}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3735 = !MDLocation(line: 3313, column: 7, scope: !3734)
!3736 = !MDLocation(line: 3313, column: 7, scope: !3737)
!3737 = !{!"0xb\004", !1, !3733}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3738 = !MDLocation(line: 3313, column: 7, scope: !3739)
!3739 = !{!"0xb\003", !1, !3740}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3740 = !{!"0xb\003313\007\00476", !1, !3733}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3741 = !MDLocation(line: 3313, column: 7, scope: !3733)
!3742 = !MDLocation(line: 3313, column: 7, scope: !3743)
!3743 = !{!"0xb\006", !1, !3744}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3744 = !{!"0xb\003313\007\00477", !1, !3740}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3745 = !MDLocation(line: 3313, column: 7, scope: !3746)
!3746 = !{!"0xb\005", !1, !3734}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3747 = !MDLocation(line: 3313, column: 7, scope: !3748)
!3748 = !{!"0xb\007", !1, !3749}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3749 = !{!"0xb\002", !1, !3729}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3750 = !MDLocation(line: 3318, column: 11, scope: !3751)
!3751 = !{!"0xb\003318\007\00478", !1, !3441}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3752 = !MDLocation(line: 3318, column: 7, scope: !3751)
!3753 = !MDLocation(line: 3318, column: 7, scope: !3441)
!3754 = !MDLocation(line: 3319, column: 22, scope: !3755)
!3755 = !{!"0xb\003318\0020\00479", !1, !3751}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3756 = !MDLocation(line: 3319, column: 12, scope: !3755)
!3757 = !MDLocation(line: 3320, column: 7, scope: !3755)
!3758 = !MDLocation(line: 3321, column: 7, scope: !3755)
!3759 = !MDLocation(line: 3322, column: 7, scope: !3755)
!3760 = !MDLocation(line: 3323, column: 20, scope: !3761)
!3761 = !{!"0xb\003323\0011\00480", !1, !3755}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3762 = !MDLocation(line: 3323, column: 11, scope: !3761)
!3763 = !MDLocation(line: 3323, column: 11, scope: !3755)
!3764 = !MDLocation(line: 3324, column: 4, scope: !3765)
!3765 = !{!"0xb\003324\004\00482", !1, !3766}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3766 = !{!"0xb\003323\0031\00481", !1, !3761}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3767 = !MDLocation(line: 3324, column: 4, scope: !3766)
!3768 = !MDLocation(line: 3324, column: 4, scope: !3769)
!3769 = !{!"0xb\001", !1, !3765}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3770 = !MDLocation(line: 3325, column: 4, scope: !3771)
!3771 = !{!"0xb\003325\004\00484", !1, !3772}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3772 = !{!"0xb\003325\004\00483", !1, !3766}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3773 = !MDLocation(line: 3325, column: 4, scope: !3772)
!3774 = !MDLocation(line: 3325, column: 4, scope: !3775)
!3775 = !{!"0xb\001", !1, !3776}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3776 = !{!"0xb\003325\004\00486", !1, !3777}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3777 = !{!"0xb\003325\004\00485", !1, !3771}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3778 = !MDLocation(line: 3325, column: 4, scope: !3777)
!3779 = !MDLocation(line: 3325, column: 4, scope: !3780)
!3780 = !{!"0xb\004", !1, !3776}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3781 = !MDLocation(line: 3325, column: 4, scope: !3782)
!3782 = !{!"0xb\003", !1, !3783}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3783 = !{!"0xb\003325\004\00487", !1, !3776}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3784 = !MDLocation(line: 3325, column: 4, scope: !3776)
!3785 = !MDLocation(line: 3325, column: 4, scope: !3786)
!3786 = !{!"0xb\006", !1, !3787}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3787 = !{!"0xb\003325\004\00488", !1, !3783}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3788 = !MDLocation(line: 3325, column: 4, scope: !3789)
!3789 = !{!"0xb\005", !1, !3777}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3790 = !MDLocation(line: 3325, column: 4, scope: !3791)
!3791 = !{!"0xb\007", !1, !3792}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3792 = !{!"0xb\002", !1, !3772}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3793 = !MDLocation(line: 3327, column: 7, scope: !3794)
!3794 = !{!"0xb\003327\007\00489", !1, !3755}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3795 = !MDLocation(line: 3327, column: 7, scope: !3755)
!3796 = !MDLocation(line: 3327, column: 7, scope: !3797)
!3797 = !{!"0xb\001", !1, !3794}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3798 = !MDLocation(line: 3328, column: 7, scope: !3755)
!3799 = !MDLocation(line: 3329, column: 7, scope: !3755)
!3800 = !MDLocation(line: 3335, column: 3, scope: !3755)
!3801 = !MDLocation(line: 3336, column: 7, scope: !3802)
!3802 = !{!"0xb\003336\007\00490", !1, !3441}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3803 = !MDLocation(line: 3336, column: 7, scope: !3441)
!3804 = !MDLocation(line: 3336, column: 7, scope: !3805)
!3805 = !{!"0xb\001", !1, !3802}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3806 = !MDLocation(line: 3336, column: 7, scope: !3807)
!3807 = !{!"0xb\003", !1, !3802}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3808 = !MDLocation(line: 3336, column: 7, scope: !3809)
!3809 = !{!"0xb\006", !1, !3802}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3810 = !MDLocation(line: 3336, column: 7, scope: !3811)
!3811 = !{!"0xb\008", !1, !3812}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3812 = !{!"0xb\004", !1, !3813}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3813 = !{!"0xb\002", !1, !3802}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3814 = !MDLocation(line: 3336, column: 7, scope: !3815)
!3815 = !{!"0xb\009", !1, !3802}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3816 = !MDLocation(line: 3336, column: 30, scope: !3817)
!3817 = !{!"0xb\0010", !1, !3818}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3818 = !{!"0xb\007", !1, !3819}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3819 = !{!"0xb\005", !1, !3802}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3820 = !MDLocation(line: 3337, column: 9, scope: !3802)
!3821 = !MDLocation(line: 3338, column: 7, scope: !3822)
!3822 = !{!"0xb\003337\0036\00491", !1, !3802}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3823 = !MDLocation(line: 3339, column: 7, scope: !3822)
!3824 = !MDLocation(line: 3342, column: 3, scope: !3822)
!3825 = !MDLocation(line: 3345, column: 14, scope: !3441)
!3826 = !MDLocation(line: 3345, column: 3, scope: !3441)
!3827 = !MDLocation(line: 3346, column: 7, scope: !3828)
!3828 = !{!"0xb\003346\007\00492", !1, !3441}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3829 = !MDLocation(line: 3346, column: 7, scope: !3441)
!3830 = !MDLocation(line: 3347, column: 12, scope: !3828)
!3831 = !MDLocation(line: 3347, column: 7, scope: !3828)
!3832 = !MDLocation(line: 3348, column: 16, scope: !3833)
!3833 = !{!"0xb\003348\007\00493", !1, !3441}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3834 = !MDLocation(line: 3348, column: 7, scope: !3833)
!3835 = !MDLocation(line: 3348, column: 7, scope: !3441)
!3836 = !MDLocation(line: 3349, column: 7, scope: !3837)
!3837 = !{!"0xb\003349\007\00495", !1, !3838}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3838 = !{!"0xb\003349\007\00494", !1, !3833}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3839 = !MDLocation(line: 3349, column: 7, scope: !3838)
!3840 = !MDLocation(line: 3349, column: 7, scope: !3841)
!3841 = !{!"0xb\001", !1, !3842}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3842 = !{!"0xb\003349\007\00497", !1, !3843}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3843 = !{!"0xb\003349\007\00496", !1, !3837}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3844 = !MDLocation(line: 3349, column: 7, scope: !3843)
!3845 = !MDLocation(line: 3349, column: 7, scope: !3846)
!3846 = !{!"0xb\004", !1, !3842}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3847 = !MDLocation(line: 3349, column: 7, scope: !3848)
!3848 = !{!"0xb\003", !1, !3849}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3849 = !{!"0xb\003349\007\00498", !1, !3842}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3850 = !MDLocation(line: 3349, column: 7, scope: !3842)
!3851 = !MDLocation(line: 3349, column: 7, scope: !3852)
!3852 = !{!"0xb\006", !1, !3853}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3853 = !{!"0xb\003349\007\00499", !1, !3849}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3854 = !MDLocation(line: 3349, column: 7, scope: !3855)
!3855 = !{!"0xb\005", !1, !3843}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3856 = !MDLocation(line: 3349, column: 7, scope: !3857)
!3857 = !{!"0xb\007", !1, !3858}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3858 = !{!"0xb\002", !1, !3838}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3859 = !MDLocation(line: 3350, column: 7, scope: !3860)
!3860 = !{!"0xb\003350\007\00500", !1, !3441}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3861 = !MDLocation(line: 3350, column: 7, scope: !3441)
!3862 = !MDLocation(line: 3351, column: 7, scope: !3860)
!3863 = !MDLocation(line: 3352, column: 3, scope: !3441)
!3864 = !MDLocation(line: 3353, column: 13, scope: !3441)
!3865 = !MDLocation(line: 3353, column: 3, scope: !3441)
!3866 = !MDLocation(line: 3354, column: 3, scope: !3441)
!3867 = !MDLocation(line: 3355, column: 3, scope: !3868)
!3868 = !{!"0xb\003355\003\00502", !1, !3869}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3869 = !{!"0xb\003355\003\00501", !1, !3441}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3870 = !MDLocation(line: 3355, column: 3, scope: !3869)
!3871 = !MDLocation(line: 3355, column: 3, scope: !3872)
!3872 = !{!"0xb\001", !1, !3873}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3873 = !{!"0xb\003355\003\00504", !1, !3874}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3874 = !{!"0xb\003355\003\00503", !1, !3868}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3875 = !MDLocation(line: 3355, column: 3, scope: !3874)
!3876 = !MDLocation(line: 3355, column: 3, scope: !3877)
!3877 = !{!"0xb\004", !1, !3873}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3878 = !MDLocation(line: 3355, column: 3, scope: !3879)
!3879 = !{!"0xb\003", !1, !3880}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3880 = !{!"0xb\003355\003\00505", !1, !3873}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3881 = !MDLocation(line: 3355, column: 3, scope: !3873)
!3882 = !MDLocation(line: 3355, column: 3, scope: !3883)
!3883 = !{!"0xb\006", !1, !3884}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3884 = !{!"0xb\003355\003\00506", !1, !3880}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3885 = !MDLocation(line: 3355, column: 3, scope: !3886)
!3886 = !{!"0xb\005", !1, !3874}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3887 = !MDLocation(line: 3355, column: 3, scope: !3888)
!3888 = !{!"0xb\007", !1, !3889}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3889 = !{!"0xb\002", !1, !3869}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3890 = !MDLocation(line: 3359, column: 20, scope: !2096)
!3891 = !MDLocation(line: 3359, column: 13, scope: !2096)
!3892 = !MDLocation(line: 3360, column: 10, scope: !3893)
!3893 = !{!"0xb\003360\0010\00507", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3894 = !MDLocation(line: 3360, column: 10, scope: !2096)
!3895 = !MDLocation(line: 3361, column: 3, scope: !3893)
!3896 = !MDLocation(line: 3362, column: 14, scope: !2096)
!3897 = !{!"0x100\00inner\002300\000", !555, !538, !224} ; [ DW_TAG_auto_variable ] [inner] [line 2300]
!3898 = !MDLocation(line: 2300, column: 14, scope: !555)
!3899 = !MDLocation(line: 3363, column: 6, scope: !2096)
!3900 = !MDLocation(line: 3365, column: 14, scope: !2096)
!3901 = !MDLocation(line: 3365, column: 6, scope: !2096)
!3902 = !MDLocation(line: 3368, column: 8, scope: !3903)
!3903 = !{!"0xb\003367\006\00508", !1, !2096}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3904 = !MDLocation(line: 3369, column: 7, scope: !3905)
!3905 = !{!"0xb\003369\007\00509", !1, !3903}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3906 = !MDLocation(line: 3369, column: 7, scope: !3903)
!3907 = !MDLocation(line: 3370, column: 7, scope: !3905)
!3908 = !MDLocation(line: 3372, column: 24, scope: !3909)
!3909 = !{!"0xb\003371\008\00510", !1, !3905}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3910 = !MDLocation(line: 3372, column: 23, scope: !3909)
!3911 = !{!"0x100\00lastparen\003372\000", !3909, !538, !157} ; [ DW_TAG_auto_variable ] [lastparen] [line 3372]
!3912 = !MDLocation(line: 3372, column: 11, scope: !3909)
!3913 = !MDLocation(line: 3377, column: 17, scope: !3909)
!3914 = !{!"0x100\00unwind1\003373\000", !3909, !538, !157} ; [ DW_TAG_auto_variable ] [unwind1] [line 3373]
!3915 = !MDLocation(line: 3373, column: 11, scope: !3909)
!3916 = !MDLocation(line: 3378, column: 12, scope: !3909)
!3917 = !{!"0x100\00uw\003374\000", !3909, !538, !511} ; [ DW_TAG_auto_variable ] [uw] [line 3374]
!3918 = !MDLocation(line: 3374, column: 27, scope: !3909)
!3919 = !MDLocation(line: 3379, column: 7, scope: !3909)
!3920 = !MDLocation(line: 3381, column: 20, scope: !3909)
!3921 = !MDLocation(line: 3381, column: 19, scope: !3909)
!3922 = !MDLocation(line: 3381, column: 7, scope: !3909)
!3923 = !MDLocation(line: 3384, column: 7, scope: !3909)
!3924 = !MDLocation(line: 3385, column: 7, scope: !3909)
!3925 = !MDLocation(line: 3386, column: 7, scope: !3909)
!3926 = !MDLocation(line: 3387, column: 7, scope: !3909)
!3927 = !MDLocation(line: 3392, column: 7, scope: !3909)
!3928 = !MDLocation(line: 3398, column: 6, scope: !2096)
!3929 = !MDLocation(line: 3401, column: 6, scope: !2096)
!3930 = !{!"0x100\00l\003404\000", !3931, !538, !157} ; [ DW_TAG_auto_variable ] [l] [line 3404]
!3931 = !{!"0xb\003403\002\00511", !1, !2096}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3932 = !MDLocation(line: 3404, column: 10, scope: !3931)
!3933 = !MDLocation(line: 3410, column: 11, scope: !3931)
!3934 = !MDLocation(line: 3411, column: 11, scope: !3931)
!3935 = !MDLocation(line: 3412, column: 14, scope: !3931)
!3936 = !{!"0x100\00paren\002307\000", !555, !538, !157} ; [ DW_TAG_auto_variable ] [paren] [line 2307]
!3937 = !MDLocation(line: 2307, column: 34, scope: !555)
!3938 = !MDLocation(line: 3413, column: 10, scope: !3931)
!3939 = !MDLocation(line: 3414, column: 15, scope: !3940)
!3940 = !{!"0xb\003414\007\00514", !1, !3941}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3941 = !{!"0xb\003413\0017\00513", !1, !3942}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3942 = !{!"0xb\003413\0010\00512", !1, !3931}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3943 = !MDLocation(line: 3414, column: 7, scope: !3940)
!3944 = !MDLocation(line: 3414, column: 7, scope: !3941)
!3945 = !MDLocation(line: 3415, column: 7, scope: !3940)
!3946 = !MDLocation(line: 3416, column: 21, scope: !3947)
!3947 = !{!"0xb\003416\007\00515", !1, !3941}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3948 = !MDLocation(line: 3416, column: 20, scope: !3947)
!3949 = !MDLocation(line: 3416, column: 7, scope: !3947)
!3950 = !MDLocation(line: 3416, column: 7, scope: !3941)
!3951 = !MDLocation(line: 3417, column: 8, scope: !3947)
!3952 = !MDLocation(line: 3417, column: 7, scope: !3947)
!3953 = !MDLocation(line: 3418, column: 6, scope: !3941)
!3954 = !MDLocation(line: 3419, column: 13, scope: !3931)
!3955 = !MDLocation(line: 3420, column: 10, scope: !3931)
!3956 = !MDLocation(line: 3421, column: 11, scope: !3957)
!3957 = !{!"0xb\003420\0010\00516", !1, !3931}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3958 = !MDLocation(line: 3421, column: 3, scope: !3957)
!3959 = !MDLocation(line: 3422, column: 6, scope: !3931)
!3960 = !MDLocation(line: 3423, column: 10, scope: !3931)
!3961 = !MDLocation(line: 3425, column: 7, scope: !3962)
!3962 = !{!"0xb\003423\0018\00518", !1, !3963}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3963 = !{!"0xb\003423\0010\00517", !1, !3931}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3964 = !MDLocation(line: 3425, column: 13, scope: !3965)
!3965 = !{!"0xb\003425\007\00519", !1, !3962}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3966 = !MDLocation(line: 3426, column: 7, scope: !3965)
!3967 = !MDLocation(line: 3427, column: 14, scope: !3962)
!3968 = !MDLocation(line: 3428, column: 7, scope: !3969)
!3969 = !{!"0xb\003428\007\00520", !1, !3962}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3970 = !MDLocation(line: 3428, column: 7, scope: !3962)
!3971 = !MDLocation(line: 3428, column: 7, scope: !3972)
!3972 = !{!"0xb\001", !1, !3969}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3973 = !MDLocation(line: 3428, column: 25, scope: !3974)
!3974 = !{!"0xb\002", !1, !3969}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3975 = !MDLocation(line: 3428, column: 25, scope: !3976)
!3976 = !{!"0xb\003", !1, !3969}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3977 = !MDLocation(line: 3428, column: 25, scope: !3978)
!3978 = !{!"0xb\004", !1, !3969}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3979 = !MDLocation(line: 3428, column: 25, scope: !3980)
!3980 = !{!"0xb\005", !1, !3969}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3981 = !MDLocation(line: 3428, column: 25, scope: !3982)
!3982 = !{!"0xb\006", !1, !3969}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3983 = !MDLocation(line: 3428, column: 25, scope: !3984)
!3984 = !{!"0xb\007", !1, !3969}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3985 = !MDLocation(line: 3428, column: 25, scope: !3986)
!3986 = !{!"0xb\008", !1, !3969}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3987 = !MDLocation(line: 3428, column: 25, scope: !3988)
!3988 = !{!"0xb\009", !1, !3969}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3989 = !MDLocation(line: 3428, column: 25, scope: !3990)
!3990 = !{!"0xb\0010", !1, !3969}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3991 = !{!"0x100\00text_node\003429\000", !3992, !538, !224} ; [ DW_TAG_auto_variable ] [text_node] [line 3429]
!3992 = !{!"0xb\003428\0041\00521", !1, !3969}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3993 = !MDLocation(line: 3429, column: 16, scope: !3992)
!3994 = !MDLocation(line: 3431, column: 13, scope: !3995)
!3995 = !{!"0xb\003431\0011\00522", !1, !3992}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3996 = !MDLocation(line: 3431, column: 11, scope: !3992)
!3997 = !MDLocation(line: 3431, column: 13, scope: !3998)
!3998 = !{!"0xb\001", !1, !3995}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!3999 = !MDLocation(line: 3431, column: 34, scope: !4000)
!4000 = !{!"0xb\002", !1, !4001}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4001 = !{!"0xb\003431\0034\00523", !1, !3995}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4002 = !MDLocation(line: 3431, column: 34, scope: !4003)
!4003 = !{!"0xb\0036", !1, !4004}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4004 = !{!"0xb\003", !1, !4001}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4005 = !MDLocation(line: 3431, column: 34, scope: !4006)
!4006 = !{!"0xb\005", !1, !4001}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4007 = !MDLocation(line: 3431, column: 34, scope: !4008)
!4008 = !{!"0xb\007", !1, !4001}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4009 = !MDLocation(line: 3431, column: 34, scope: !4010)
!4010 = !{!"0xb\009", !1, !4001}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4011 = !MDLocation(line: 3431, column: 34, scope: !4012)
!4012 = !{!"0xb\0011", !1, !4001}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4013 = !MDLocation(line: 3431, column: 34, scope: !4014)
!4014 = !{!"0xb\0013", !1, !4001}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4015 = !MDLocation(line: 3431, column: 34, scope: !4016)
!4016 = !{!"0xb\0015", !1, !4001}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4017 = !MDLocation(line: 3431, column: 34, scope: !4018)
!4018 = !{!"0xb\0017", !1, !4001}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4019 = !MDLocation(line: 3431, column: 34, scope: !4020)
!4020 = !{!"0xb\0018", !1, !4001}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4021 = !MDLocation(line: 3431, column: 34, scope: !4022)
!4022 = !{!"0xb\0019", !1, !4001}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4023 = !MDLocation(line: 3431, column: 34, scope: !4024)
!4024 = !{!"0xb\0020", !1, !4025}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4025 = !{!"0xb\0016", !1, !4026}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4026 = !{!"0xb\0014", !1, !4027}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4027 = !{!"0xb\0012", !1, !4028}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4028 = !{!"0xb\0010", !1, !4029}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4029 = !{!"0xb\008", !1, !4030}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4030 = !{!"0xb\006", !1, !4031}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4031 = !{!"0xb\004", !1, !4001}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4032 = !MDLocation(line: 3431, column: 34, scope: !4033)
!4033 = !{!"0xb\0021", !1, !4034}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4034 = !{!"0xb\003431\0034\00524", !1, !4001}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4035 = !MDLocation(line: 3431, column: 34, scope: !4001)
!4036 = !MDLocation(line: 3431, column: 34, scope: !4037)
!4037 = !{!"0xb\0024", !1, !4034}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4038 = !MDLocation(line: 3431, column: 34, scope: !4039)
!4039 = !{!"0xb\0025", !1, !4040}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4040 = !{!"0xb\0023", !1, !4034}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4041 = !MDLocation(line: 3431, column: 34, scope: !4042)
!4042 = !{!"0xb\0026", !1, !4043}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4043 = !{!"0xb\003431\0034\00525", !1, !4034}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4044 = !MDLocation(line: 3431, column: 34, scope: !4034)
!4045 = !MDLocation(line: 3431, column: 34, scope: !4046)
!4046 = !{!"0xb\0028", !1, !4043}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4047 = !MDLocation(line: 3431, column: 34, scope: !4048)
!4048 = !{!"0xb\0029", !1, !4049}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4049 = !{!"0xb\003431\0034\00526", !1, !4043}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4050 = !MDLocation(line: 3431, column: 34, scope: !4043)
!4051 = !MDLocation(line: 3431, column: 34, scope: !4052)
!4052 = !{!"0xb\0030", !1, !4049}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4053 = !MDLocation(line: 3431, column: 34, scope: !4054)
!4054 = !{!"0xb\0032", !1, !4049}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4055 = !MDLocation(line: 3431, column: 34, scope: !4056)
!4056 = !{!"0xb\0033", !1, !4049}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4057 = !MDLocation(line: 3431, column: 34, scope: !4049)
!4058 = !MDLocation(line: 3431, column: 34, scope: !4059)
!4059 = !{!"0xb\0035", !1, !4060}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4060 = !{!"0xb\0034", !1, !4049}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4061 = !MDLocation(line: 3431, column: 34, scope: !4062)
!4062 = !{!"0xb\0031", !1, !4049}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4063 = !MDLocation(line: 3431, column: 34, scope: !4064)
!4064 = !{!"0xb\0027", !1, !4001}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4065 = !MDLocation(line: 3431, column: 34, scope: !4066)
!4066 = !{!"0xb\0022", !1, !3995}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4067 = !MDLocation(line: 3433, column: 13, scope: !4068)
!4068 = !{!"0xb\003433\0011\00527", !1, !3992}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4069 = !MDLocation(line: 3433, column: 11, scope: !3992)
!4070 = !MDLocation(line: 3433, column: 13, scope: !4071)
!4071 = !{!"0xb\001", !1, !4068}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4072 = !MDLocation(line: 3433, column: 34, scope: !4068)
!4073 = !MDLocation(line: 3435, column: 23, scope: !4074)
!4074 = !{!"0xb\003435\008\00529", !1, !4075}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4075 = !{!"0xb\003434\0012\00528", !1, !4068}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4076 = !MDLocation(line: 3435, column: 8, scope: !4074)
!4077 = !MDLocation(line: 3435, column: 8, scope: !4075)
!4078 = !MDLocation(line: 3437, column: 8, scope: !4079)
!4079 = !{!"0xb\003435\0046\00530", !1, !4074}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4080 = !MDLocation(line: 3439, column: 21, scope: !4081)
!4081 = !{!"0xb\003439\009\00531", !1, !4074}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4082 = !MDLocation(line: 3439, column: 20, scope: !4081)
!4083 = !MDLocation(line: 3439, column: 16, scope: !4081)
!4084 = !MDLocation(line: 3440, column: 8, scope: !4085)
!4085 = !{!"0xb\003440\008\00532", !1, !4075}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4086 = !MDLocation(line: 3440, column: 8, scope: !4075)
!4087 = !MDLocation(line: 3440, column: 35, scope: !4088)
!4088 = !{!"0xb\001", !1, !4085}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4089 = !MDLocation(line: 3441, column: 13, scope: !4085)
!4090 = !MDLocation(line: 3441, column: 8, scope: !4085)
!4091 = !MDLocation(line: 3442, column: 13, scope: !4092)
!4092 = !{!"0xb\003442\0013\00533", !1, !4085}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4093 = !MDLocation(line: 3442, column: 13, scope: !4085)
!4094 = !MDLocation(line: 3442, column: 41, scope: !4095)
!4095 = !{!"0xb\001", !1, !4092}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4096 = !MDLocation(line: 3443, column: 13, scope: !4092)
!4097 = !MDLocation(line: 3443, column: 8, scope: !4092)
!4098 = !MDLocation(line: 3447, column: 3, scope: !3992)
!4099 = !MDLocation(line: 3428, column: 25, scope: !3969)
!4100 = !MDLocation(line: 3451, column: 3, scope: !3962)
!4101 = !{!"0x100\00lastcp\003405\000", !3931, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 3405]
!4102 = !MDLocation(line: 3405, column: 17, scope: !3931)
!4103 = !MDLocation(line: 3452, column: 3, scope: !3962)
!4104 = !MDLocation(line: 3452, column: 10, scope: !3962)
!4105 = !MDLocation(line: 3452, column: 22, scope: !4106)
!4106 = !{!"0xb\003", !1, !3962}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4107 = !MDLocation(line: 3452, column: 40, scope: !4108)
!4108 = !{!"0xb\004", !1, !3962}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4109 = !MDLocation(line: 3452, column: 10, scope: !4110)
!4110 = !{!"0xb\005", !1, !3962}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4111 = !MDLocation(line: 3452, column: 3, scope: !4112)
!4112 = !{!"0xb\006", !1, !4113}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4113 = !{!"0xb\002", !1, !3962}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4114 = !MDLocation(line: 3454, column: 11, scope: !4115)
!4115 = !{!"0xb\003454\0011\00535", !1, !4116}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4116 = !{!"0xb\003452\0049\00534", !1, !3962}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4117 = !MDLocation(line: 3454, column: 11, scope: !4116)
!4118 = !MDLocation(line: 3455, column: 4, scope: !4115)
!4119 = !MDLocation(line: 3456, column: 4, scope: !4115)
!4120 = !MDLocation(line: 3458, column: 8, scope: !4121)
!4121 = !{!"0xb\003457\007\00536", !1, !4115}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4122 = !MDLocation(line: 3459, column: 12, scope: !4123)
!4123 = !{!"0xb\003458\0015\00538", !1, !4124}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4124 = !{!"0xb\003458\008\00537", !1, !4121}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4125 = !MDLocation(line: 3461, column: 9, scope: !4126)
!4126 = !{!"0xb\003459\0016\00540", !1, !4127}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4127 = !{!"0xb\003459\0012\00539", !1, !4123}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4128 = !MDLocation(line: 3461, column: 9, scope: !4129)
!4129 = !{!"0xb\001", !1, !4126}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4130 = !MDLocation(line: 3461, column: 9, scope: !4131)
!4131 = !{!"0xb\002", !1, !4126}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4132 = !MDLocation(line: 3461, column: 33, scope: !4133)
!4133 = !{!"0xb\004", !1, !4134}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4134 = !{!"0xb\003", !1, !4126}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4135 = !MDLocation(line: 3460, column: 5, scope: !4126)
!4136 = !MDLocation(line: 3462, column: 25, scope: !4126)
!4137 = !MDLocation(line: 3462, column: 39, scope: !4126)
!4138 = !MDLocation(line: 3462, column: 5, scope: !4126)
!4139 = !MDLocation(line: 3463, column: 8, scope: !4126)
!4140 = !MDLocation(line: 3465, column: 5, scope: !4127)
!4141 = !MDLocation(line: 3466, column: 4, scope: !4123)
!4142 = !MDLocation(line: 3467, column: 8, scope: !4143)
!4143 = !{!"0xb\003467\008\00541", !1, !4121}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4144 = !MDLocation(line: 3467, column: 8, scope: !4121)
!4145 = !MDLocation(line: 3468, column: 8, scope: !4143)
!4146 = !MDLocation(line: 3469, column: 4, scope: !4147)
!4147 = !{!"0xb\003469\004\00542", !1, !4121}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4148 = !MDLocation(line: 3469, column: 4, scope: !4121)
!4149 = !MDLocation(line: 3469, column: 4, scope: !4150)
!4150 = !{!"0xb\001", !1, !4147}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4151 = !MDLocation(line: 3470, column: 7, scope: !4121)
!4152 = !MDLocation(line: 3472, column: 7, scope: !4116)
!4153 = !MDLocation(line: 3473, column: 11, scope: !4154)
!4154 = !{!"0xb\003473\0011\00543", !1, !4116}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4155 = !MDLocation(line: 3473, column: 11, scope: !4116)
!4156 = !MDLocation(line: 3474, column: 4, scope: !4157)
!4157 = !{!"0xb\003473\0040\00544", !1, !4154}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4158 = !MDLocation(line: 3475, column: 15, scope: !4157)
!4159 = !MDLocation(line: 3476, column: 7, scope: !4157)
!4160 = !MDLocation(line: 3478, column: 4, scope: !4154)
!4161 = !MDLocation(line: 3480, column: 6, scope: !3962)
!4162 = !MDLocation(line: 3482, column: 7, scope: !4163)
!4163 = !{!"0xb\003481\0011\00545", !1, !3963}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4164 = !MDLocation(line: 3483, column: 14, scope: !4163)
!4165 = !MDLocation(line: 3490, column: 7, scope: !4166)
!4166 = !{!"0xb\003490\007\00546", !1, !4163}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4167 = !MDLocation(line: 3490, column: 7, scope: !4163)
!4168 = !MDLocation(line: 3491, column: 11, scope: !4169)
!4169 = !{!"0xb\003491\0011\00548", !1, !4170}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4170 = !{!"0xb\003490\0016\00547", !1, !4166}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4171 = !MDLocation(line: 3491, column: 11, scope: !4170)
!4172 = !MDLocation(line: 3491, column: 11, scope: !4173)
!4173 = !{!"0xb\001", !1, !4169}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4174 = !MDLocation(line: 3491, column: 29, scope: !4175)
!4175 = !{!"0xb\002", !1, !4169}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4176 = !MDLocation(line: 3491, column: 29, scope: !4177)
!4177 = !{!"0xb\003", !1, !4169}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4178 = !MDLocation(line: 3491, column: 29, scope: !4179)
!4179 = !{!"0xb\004", !1, !4169}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4180 = !MDLocation(line: 3491, column: 29, scope: !4181)
!4181 = !{!"0xb\005", !1, !4169}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4182 = !MDLocation(line: 3491, column: 29, scope: !4183)
!4183 = !{!"0xb\006", !1, !4169}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4184 = !MDLocation(line: 3491, column: 29, scope: !4185)
!4185 = !{!"0xb\007", !1, !4169}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4186 = !MDLocation(line: 3491, column: 29, scope: !4187)
!4187 = !{!"0xb\008", !1, !4169}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4188 = !MDLocation(line: 3491, column: 29, scope: !4189)
!4189 = !{!"0xb\009", !1, !4169}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4190 = !MDLocation(line: 3491, column: 29, scope: !4191)
!4191 = !{!"0xb\0010", !1, !4169}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4192 = !{!"0x100\00text_node\003492\000", !4193, !538, !224} ; [ DW_TAG_auto_variable ] [text_node] [line 3492]
!4193 = !{!"0xb\003491\0045\00549", !1, !4169}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4194 = !MDLocation(line: 3492, column: 13, scope: !4193)
!4195 = !MDLocation(line: 3494, column: 10, scope: !4196)
!4196 = !{!"0xb\003494\008\00550", !1, !4193}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4197 = !MDLocation(line: 3494, column: 8, scope: !4193)
!4198 = !MDLocation(line: 3494, column: 10, scope: !4199)
!4199 = !{!"0xb\001", !1, !4196}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4200 = !MDLocation(line: 3494, column: 31, scope: !4201)
!4201 = !{!"0xb\002", !1, !4202}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4202 = !{!"0xb\003494\0031\00551", !1, !4196}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4203 = !MDLocation(line: 3494, column: 31, scope: !4204)
!4204 = !{!"0xb\0036", !1, !4205}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4205 = !{!"0xb\003", !1, !4202}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4206 = !MDLocation(line: 3494, column: 31, scope: !4207)
!4207 = !{!"0xb\005", !1, !4202}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4208 = !MDLocation(line: 3494, column: 31, scope: !4209)
!4209 = !{!"0xb\007", !1, !4202}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4210 = !MDLocation(line: 3494, column: 31, scope: !4211)
!4211 = !{!"0xb\009", !1, !4202}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4212 = !MDLocation(line: 3494, column: 31, scope: !4213)
!4213 = !{!"0xb\0011", !1, !4202}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4214 = !MDLocation(line: 3494, column: 31, scope: !4215)
!4215 = !{!"0xb\0013", !1, !4202}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4216 = !MDLocation(line: 3494, column: 31, scope: !4217)
!4217 = !{!"0xb\0015", !1, !4202}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4218 = !MDLocation(line: 3494, column: 31, scope: !4219)
!4219 = !{!"0xb\0017", !1, !4202}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4220 = !MDLocation(line: 3494, column: 31, scope: !4221)
!4221 = !{!"0xb\0018", !1, !4202}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4222 = !MDLocation(line: 3494, column: 31, scope: !4223)
!4223 = !{!"0xb\0019", !1, !4202}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4224 = !MDLocation(line: 3494, column: 31, scope: !4225)
!4225 = !{!"0xb\0020", !1, !4226}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4226 = !{!"0xb\0016", !1, !4227}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4227 = !{!"0xb\0014", !1, !4228}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4228 = !{!"0xb\0012", !1, !4229}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4229 = !{!"0xb\0010", !1, !4230}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4230 = !{!"0xb\008", !1, !4231}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4231 = !{!"0xb\006", !1, !4232}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4232 = !{!"0xb\004", !1, !4202}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4233 = !MDLocation(line: 3494, column: 31, scope: !4234)
!4234 = !{!"0xb\0021", !1, !4235}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4235 = !{!"0xb\003494\0031\00552", !1, !4202}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4236 = !MDLocation(line: 3494, column: 31, scope: !4202)
!4237 = !MDLocation(line: 3494, column: 31, scope: !4238)
!4238 = !{!"0xb\0024", !1, !4235}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4239 = !MDLocation(line: 3494, column: 31, scope: !4240)
!4240 = !{!"0xb\0025", !1, !4241}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4241 = !{!"0xb\0023", !1, !4235}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4242 = !MDLocation(line: 3494, column: 31, scope: !4243)
!4243 = !{!"0xb\0026", !1, !4244}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4244 = !{!"0xb\003494\0031\00553", !1, !4235}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4245 = !MDLocation(line: 3494, column: 31, scope: !4235)
!4246 = !MDLocation(line: 3494, column: 31, scope: !4247)
!4247 = !{!"0xb\0028", !1, !4244}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4248 = !MDLocation(line: 3494, column: 31, scope: !4249)
!4249 = !{!"0xb\0029", !1, !4250}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4250 = !{!"0xb\003494\0031\00554", !1, !4244}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4251 = !MDLocation(line: 3494, column: 31, scope: !4244)
!4252 = !MDLocation(line: 3494, column: 31, scope: !4253)
!4253 = !{!"0xb\0030", !1, !4250}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4254 = !MDLocation(line: 3494, column: 31, scope: !4255)
!4255 = !{!"0xb\0032", !1, !4250}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4256 = !MDLocation(line: 3494, column: 31, scope: !4257)
!4257 = !{!"0xb\0033", !1, !4250}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4258 = !MDLocation(line: 3494, column: 31, scope: !4250)
!4259 = !MDLocation(line: 3494, column: 31, scope: !4260)
!4260 = !{!"0xb\0035", !1, !4261}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4261 = !{!"0xb\0034", !1, !4250}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4262 = !MDLocation(line: 3494, column: 31, scope: !4263)
!4263 = !{!"0xb\0031", !1, !4250}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4264 = !MDLocation(line: 3494, column: 31, scope: !4265)
!4265 = !{!"0xb\0027", !1, !4202}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4266 = !MDLocation(line: 3494, column: 31, scope: !4267)
!4267 = !{!"0xb\0022", !1, !4196}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4268 = !MDLocation(line: 3496, column: 10, scope: !4269)
!4269 = !{!"0xb\003496\008\00555", !1, !4193}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4270 = !MDLocation(line: 3496, column: 8, scope: !4193)
!4271 = !MDLocation(line: 3496, column: 10, scope: !4272)
!4272 = !{!"0xb\001", !1, !4269}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4273 = !MDLocation(line: 3496, column: 31, scope: !4269)
!4274 = !MDLocation(line: 3498, column: 27, scope: !4275)
!4275 = !{!"0xb\003498\0012\00557", !1, !4276}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4276 = !{!"0xb\003497\009\00556", !1, !4269}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4277 = !MDLocation(line: 3498, column: 12, scope: !4275)
!4278 = !MDLocation(line: 3498, column: 12, scope: !4276)
!4279 = !MDLocation(line: 3500, column: 5, scope: !4280)
!4280 = !{!"0xb\003498\0050\00558", !1, !4275}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4281 = !MDLocation(line: 3502, column: 25, scope: !4282)
!4282 = !{!"0xb\003502\0013\00559", !1, !4275}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4283 = !MDLocation(line: 3502, column: 24, scope: !4282)
!4284 = !MDLocation(line: 3502, column: 20, scope: !4282)
!4285 = !MDLocation(line: 3504, column: 12, scope: !4286)
!4286 = !{!"0xb\003504\0012\00560", !1, !4276}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4287 = !MDLocation(line: 3504, column: 12, scope: !4276)
!4288 = !MDLocation(line: 3504, column: 39, scope: !4289)
!4289 = !{!"0xb\001", !1, !4286}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4290 = !MDLocation(line: 3505, column: 10, scope: !4286)
!4291 = !MDLocation(line: 3505, column: 5, scope: !4286)
!4292 = !MDLocation(line: 3506, column: 17, scope: !4293)
!4293 = !{!"0xb\003506\0017\00561", !1, !4286}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4294 = !MDLocation(line: 3506, column: 17, scope: !4286)
!4295 = !MDLocation(line: 3506, column: 45, scope: !4296)
!4296 = !{!"0xb\001", !1, !4293}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4297 = !MDLocation(line: 3507, column: 10, scope: !4293)
!4298 = !MDLocation(line: 3507, column: 5, scope: !4293)
!4299 = !MDLocation(line: 3511, column: 7, scope: !4193)
!4300 = !MDLocation(line: 3514, column: 3, scope: !4170)
!4301 = !MDLocation(line: 3490, column: 12, scope: !4302)
!4302 = !{!"0xb\001", !1, !4166}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4303 = !MDLocation(line: 3516, column: 3, scope: !4163)
!4304 = !MDLocation(line: 3517, column: 3, scope: !4163)
!4305 = !MDLocation(line: 3517, column: 10, scope: !4163)
!4306 = !MDLocation(line: 3519, column: 11, scope: !4307)
!4307 = !{!"0xb\003519\0011\00563", !1, !4308}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4308 = !{!"0xb\003517\0019\00562", !1, !4163}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4309 = !MDLocation(line: 3519, column: 11, scope: !4308)
!4310 = !MDLocation(line: 3520, column: 4, scope: !4307)
!4311 = !MDLocation(line: 3521, column: 4, scope: !4307)
!4312 = !MDLocation(line: 3528, column: 8, scope: !4313)
!4313 = !{!"0xb\003522\007\00564", !1, !4307}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4314 = !MDLocation(line: 3529, column: 12, scope: !4315)
!4315 = !{!"0xb\003528\0015\00566", !1, !4316}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4316 = !{!"0xb\003528\008\00565", !1, !4313}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4317 = !MDLocation(line: 3530, column: 27, scope: !4318)
!4318 = !{!"0xb\003529\0015\00568", !1, !4319}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4319 = !{!"0xb\003529\0012\00567", !1, !4315}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4320 = !MDLocation(line: 3530, column: 27, scope: !4321)
!4321 = !{!"0xb\001", !1, !4318}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4322 = !MDLocation(line: 3530, column: 27, scope: !4323)
!4323 = !{!"0xb\002", !1, !4318}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4324 = !MDLocation(line: 3530, column: 51, scope: !4325)
!4325 = !{!"0xb\004", !1, !4326}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4326 = !{!"0xb\003", !1, !4318}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4327 = !MDLocation(line: 3530, column: 5, scope: !4318)
!4328 = !MDLocation(line: 3531, column: 25, scope: !4318)
!4329 = !MDLocation(line: 3531, column: 39, scope: !4318)
!4330 = !MDLocation(line: 3531, column: 5, scope: !4318)
!4331 = !MDLocation(line: 3532, column: 8, scope: !4318)
!4332 = !MDLocation(line: 3534, column: 5, scope: !4319)
!4333 = !MDLocation(line: 3535, column: 4, scope: !4315)
!4334 = !MDLocation(line: 3536, column: 8, scope: !4335)
!4335 = !{!"0xb\003536\008\00569", !1, !4313}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4336 = !MDLocation(line: 3536, column: 8, scope: !4313)
!4337 = !MDLocation(line: 3537, column: 8, scope: !4335)
!4338 = !MDLocation(line: 3538, column: 4, scope: !4339)
!4339 = !{!"0xb\003538\004\00570", !1, !4313}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4340 = !MDLocation(line: 3538, column: 4, scope: !4313)
!4341 = !MDLocation(line: 3538, column: 4, scope: !4342)
!4342 = !{!"0xb\001", !1, !4339}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4343 = !MDLocation(line: 3539, column: 7, scope: !4313)
!4344 = !MDLocation(line: 3541, column: 7, scope: !4308)
!4345 = !MDLocation(line: 3542, column: 18, scope: !4308)
!4346 = !MDLocation(line: 3542, column: 18, scope: !4347)
!4347 = !{!"0xb\001", !1, !4308}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4348 = !MDLocation(line: 3542, column: 18, scope: !4349)
!4349 = !{!"0xb\002", !1, !4308}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4350 = !MDLocation(line: 3543, column: 7, scope: !4308)
!4351 = !MDLocation(line: 3546, column: 6, scope: !3931)
!4352 = !MDLocation(line: 3550, column: 14, scope: !2096)
!4353 = !MDLocation(line: 3551, column: 18, scope: !4354)
!4354 = !{!"0xb\003551\0010\00571", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4355 = !MDLocation(line: 3551, column: 10, scope: !4354)
!4356 = !MDLocation(line: 3551, column: 10, scope: !2096)
!4357 = !MDLocation(line: 3552, column: 3, scope: !4354)
!4358 = !MDLocation(line: 3553, column: 24, scope: !4359)
!4359 = !{!"0xb\003553\0010\00572", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4360 = !MDLocation(line: 3553, column: 23, scope: !4359)
!4361 = !MDLocation(line: 3553, column: 10, scope: !4359)
!4362 = !MDLocation(line: 3553, column: 10, scope: !2096)
!4363 = !MDLocation(line: 3554, column: 4, scope: !4359)
!4364 = !MDLocation(line: 3554, column: 3, scope: !4359)
!4365 = !MDLocation(line: 3555, column: 11, scope: !2096)
!4366 = !MDLocation(line: 3556, column: 11, scope: !2096)
!4367 = !MDLocation(line: 3557, column: 28, scope: !2096)
!4368 = !MDLocation(line: 3557, column: 20, scope: !2096)
!4369 = !MDLocation(line: 3558, column: 6, scope: !2096)
!4370 = !MDLocation(line: 3561, column: 11, scope: !2096)
!4371 = !MDLocation(line: 3562, column: 11, scope: !2096)
!4372 = !MDLocation(line: 3563, column: 13, scope: !2096)
!4373 = !MDLocation(line: 3564, column: 6, scope: !2096)
!4374 = !MDLocation(line: 3568, column: 13, scope: !2096)
!4375 = !MDLocation(line: 3570, column: 6, scope: !2096)
!4376 = !MDLocation(line: 3574, column: 13, scope: !2096)
!4377 = !MDLocation(line: 3575, column: 6, scope: !2096)
!4378 = !MDLocation(line: 3588, column: 10, scope: !4379)
!4379 = !{!"0xb\003588\0010\00573", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4380 = !MDLocation(line: 3588, column: 10, scope: !2096)
!4381 = !MDLocation(line: 3588, column: 10, scope: !4382)
!4382 = !{!"0xb\001", !1, !4379}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4383 = !MDLocation(line: 3588, column: 28, scope: !4384)
!4384 = !{!"0xb\002", !1, !4379}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4385 = !MDLocation(line: 3588, column: 28, scope: !4386)
!4386 = !{!"0xb\003", !1, !4379}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4387 = !MDLocation(line: 3588, column: 28, scope: !4388)
!4388 = !{!"0xb\004", !1, !4379}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4389 = !MDLocation(line: 3588, column: 28, scope: !4390)
!4390 = !{!"0xb\005", !1, !4379}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4391 = !MDLocation(line: 3588, column: 28, scope: !4392)
!4392 = !{!"0xb\006", !1, !4379}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4393 = !MDLocation(line: 3588, column: 28, scope: !4394)
!4394 = !{!"0xb\007", !1, !4379}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4395 = !MDLocation(line: 3588, column: 28, scope: !4396)
!4396 = !{!"0xb\008", !1, !4379}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4397 = !MDLocation(line: 3588, column: 28, scope: !4398)
!4398 = !{!"0xb\009", !1, !4379}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4399 = !MDLocation(line: 3588, column: 28, scope: !4400)
!4400 = !{!"0xb\0010", !1, !4379}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4401 = !{!"0x100\00text_node\003590\000", !4402, !538, !224} ; [ DW_TAG_auto_variable ] [text_node] [line 3590]
!4402 = !{!"0xb\003588\0044\00574", !1, !4379}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4403 = !MDLocation(line: 3590, column: 12, scope: !4402)
!4404 = !MDLocation(line: 3592, column: 9, scope: !4405)
!4405 = !{!"0xb\003592\007\00575", !1, !4402}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4406 = !MDLocation(line: 3592, column: 7, scope: !4402)
!4407 = !MDLocation(line: 3592, column: 9, scope: !4408)
!4408 = !{!"0xb\001", !1, !4405}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4409 = !MDLocation(line: 3592, column: 30, scope: !4410)
!4410 = !{!"0xb\002", !1, !4411}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4411 = !{!"0xb\003592\0030\00576", !1, !4405}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4412 = !MDLocation(line: 3592, column: 30, scope: !4413)
!4413 = !{!"0xb\0036", !1, !4414}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4414 = !{!"0xb\003", !1, !4411}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4415 = !MDLocation(line: 3592, column: 30, scope: !4416)
!4416 = !{!"0xb\005", !1, !4411}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4417 = !MDLocation(line: 3592, column: 30, scope: !4418)
!4418 = !{!"0xb\007", !1, !4411}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4419 = !MDLocation(line: 3592, column: 30, scope: !4420)
!4420 = !{!"0xb\009", !1, !4411}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4421 = !MDLocation(line: 3592, column: 30, scope: !4422)
!4422 = !{!"0xb\0011", !1, !4411}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4423 = !MDLocation(line: 3592, column: 30, scope: !4424)
!4424 = !{!"0xb\0013", !1, !4411}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4425 = !MDLocation(line: 3592, column: 30, scope: !4426)
!4426 = !{!"0xb\0015", !1, !4411}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4427 = !MDLocation(line: 3592, column: 30, scope: !4428)
!4428 = !{!"0xb\0017", !1, !4411}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4429 = !MDLocation(line: 3592, column: 30, scope: !4430)
!4430 = !{!"0xb\0018", !1, !4411}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4431 = !MDLocation(line: 3592, column: 30, scope: !4432)
!4432 = !{!"0xb\0019", !1, !4411}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4433 = !MDLocation(line: 3592, column: 30, scope: !4434)
!4434 = !{!"0xb\0020", !1, !4435}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4435 = !{!"0xb\0016", !1, !4436}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4436 = !{!"0xb\0014", !1, !4437}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4437 = !{!"0xb\0012", !1, !4438}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4438 = !{!"0xb\0010", !1, !4439}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4439 = !{!"0xb\008", !1, !4440}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4440 = !{!"0xb\006", !1, !4441}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4441 = !{!"0xb\004", !1, !4411}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4442 = !MDLocation(line: 3592, column: 30, scope: !4443)
!4443 = !{!"0xb\0021", !1, !4444}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4444 = !{!"0xb\003592\0030\00577", !1, !4411}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4445 = !MDLocation(line: 3592, column: 30, scope: !4411)
!4446 = !MDLocation(line: 3592, column: 30, scope: !4447)
!4447 = !{!"0xb\0024", !1, !4444}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4448 = !MDLocation(line: 3592, column: 30, scope: !4449)
!4449 = !{!"0xb\0025", !1, !4450}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4450 = !{!"0xb\0023", !1, !4444}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4451 = !MDLocation(line: 3592, column: 30, scope: !4452)
!4452 = !{!"0xb\0026", !1, !4453}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4453 = !{!"0xb\003592\0030\00578", !1, !4444}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4454 = !MDLocation(line: 3592, column: 30, scope: !4444)
!4455 = !MDLocation(line: 3592, column: 30, scope: !4456)
!4456 = !{!"0xb\0028", !1, !4453}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4457 = !MDLocation(line: 3592, column: 30, scope: !4458)
!4458 = !{!"0xb\0029", !1, !4459}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4459 = !{!"0xb\003592\0030\00579", !1, !4453}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4460 = !MDLocation(line: 3592, column: 30, scope: !4453)
!4461 = !MDLocation(line: 3592, column: 30, scope: !4462)
!4462 = !{!"0xb\0030", !1, !4459}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4463 = !MDLocation(line: 3592, column: 30, scope: !4464)
!4464 = !{!"0xb\0032", !1, !4459}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4465 = !MDLocation(line: 3592, column: 30, scope: !4466)
!4466 = !{!"0xb\0033", !1, !4459}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4467 = !MDLocation(line: 3592, column: 30, scope: !4459)
!4468 = !MDLocation(line: 3592, column: 30, scope: !4469)
!4469 = !{!"0xb\0035", !1, !4470}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4470 = !{!"0xb\0034", !1, !4459}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4471 = !MDLocation(line: 3592, column: 30, scope: !4472)
!4472 = !{!"0xb\0031", !1, !4459}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4473 = !MDLocation(line: 3592, column: 30, scope: !4474)
!4474 = !{!"0xb\0027", !1, !4411}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4475 = !MDLocation(line: 3592, column: 30, scope: !4476)
!4476 = !{!"0xb\0022", !1, !4405}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4477 = !MDLocation(line: 3594, column: 9, scope: !4478)
!4478 = !{!"0xb\003594\007\00580", !1, !4402}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4479 = !MDLocation(line: 3594, column: 7, scope: !4402)
!4480 = !MDLocation(line: 3594, column: 9, scope: !4481)
!4481 = !{!"0xb\001", !1, !4478}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4482 = !MDLocation(line: 3594, column: 30, scope: !4478)
!4483 = !MDLocation(line: 3596, column: 26, scope: !4484)
!4484 = !{!"0xb\003596\0011\00582", !1, !4485}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4485 = !{!"0xb\003595\008\00581", !1, !4478}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4486 = !MDLocation(line: 3596, column: 11, scope: !4484)
!4487 = !MDLocation(line: 3596, column: 11, scope: !4485)
!4488 = !MDLocation(line: 3598, column: 4, scope: !4489)
!4489 = !{!"0xb\003596\0049\00583", !1, !4484}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4490 = !MDLocation(line: 3600, column: 23, scope: !4491)
!4491 = !{!"0xb\003600\0012\00584", !1, !4484}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4492 = !{!"0x100\00s\003589\000", !4402, !538, !53} ; [ DW_TAG_auto_variable ] [s] [line 3589]
!4493 = !MDLocation(line: 3589, column: 7, scope: !4402)
!4494 = !MDLocation(line: 3602, column: 12, scope: !4495)
!4495 = !{!"0xb\003602\0011\00585", !1, !4485}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4496 = !MDLocation(line: 3602, column: 11, scope: !4485)
!4497 = !MDLocation(line: 3603, column: 14, scope: !4498)
!4498 = !{!"0xb\003602\0017\00586", !1, !4495}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4499 = !MDLocation(line: 3604, column: 8, scope: !4500)
!4500 = !{!"0xb\003604\008\00587", !1, !4498}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4501 = !MDLocation(line: 3604, column: 8, scope: !4498)
!4502 = !MDLocation(line: 3604, column: 35, scope: !4503)
!4503 = !{!"0xb\001", !1, !4500}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4504 = !MDLocation(line: 3605, column: 13, scope: !4500)
!4505 = !MDLocation(line: 3605, column: 8, scope: !4500)
!4506 = !MDLocation(line: 3606, column: 13, scope: !4507)
!4507 = !{!"0xb\003606\0013\00588", !1, !4500}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4508 = !MDLocation(line: 3606, column: 13, scope: !4500)
!4509 = !MDLocation(line: 3606, column: 41, scope: !4510)
!4510 = !{!"0xb\001", !1, !4507}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4511 = !MDLocation(line: 3607, column: 13, scope: !4507)
!4512 = !MDLocation(line: 3607, column: 8, scope: !4507)
!4513 = !MDLocation(line: 3608, column: 7, scope: !4498)
!4514 = !MDLocation(line: 3610, column: 8, scope: !4515)
!4515 = !{!"0xb\003610\008\00590", !1, !4516}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4516 = !{!"0xb\003609\0012\00589", !1, !4495}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4517 = !MDLocation(line: 3610, column: 8, scope: !4516)
!4518 = !MDLocation(line: 3610, column: 35, scope: !4519)
!4519 = !{!"0xb\001", !1, !4515}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4520 = !{!"0x100\00ulen1\003611\000", !4521, !538, !48} ; [ DW_TAG_auto_variable ] [ulen1] [line 3611]
!4521 = !{!"0xb\003610\0058\00591", !1, !4515}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4522 = !MDLocation(line: 3611, column: 16, scope: !4521)
!4523 = !{!"0x100\00ulen2\003611\000", !4521, !538, !48} ; [ DW_TAG_auto_variable ] [ulen2] [line 3611]
!4524 = !MDLocation(line: 3611, column: 23, scope: !4521)
!4525 = !{!"0x100\00tmpbuf1\003612\000", !4521, !538, !2974} ; [ DW_TAG_auto_variable ] [tmpbuf1] [line 3612]
!4526 = !MDLocation(line: 3612, column: 12, scope: !4521)
!4527 = !{!"0x100\00tmpbuf2\003613\000", !4521, !538, !2974} ; [ DW_TAG_auto_variable ] [tmpbuf2] [line 3613]
!4528 = !MDLocation(line: 3613, column: 12, scope: !4521)
!4529 = !MDLocation(line: 3615, column: 31, scope: !4521)
!4530 = !MDLocation(line: 3615, column: 9, scope: !4521)
!4531 = !MDLocation(line: 3616, column: 31, scope: !4521)
!4532 = !MDLocation(line: 3616, column: 9, scope: !4521)
!4533 = !MDLocation(line: 3618, column: 29, scope: !4521)
!4534 = !MDLocation(line: 3619, column: 8, scope: !4521)
!4535 = !MDLocation(line: 3619, column: 8, scope: !4536)
!4536 = !{!"0xb\001", !1, !4521}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4537 = !MDLocation(line: 3619, column: 8, scope: !4538)
!4538 = !{!"0xb\003", !1, !4521}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4539 = !MDLocation(line: 3619, column: 8, scope: !4540)
!4540 = !{!"0xb\006", !1, !4521}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4541 = !MDLocation(line: 3619, column: 8, scope: !4542)
!4542 = !{!"0xb\008", !1, !4543}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4543 = !{!"0xb\004", !1, !4544}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4544 = !{!"0xb\002", !1, !4521}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4545 = !MDLocation(line: 3619, column: 8, scope: !4546)
!4546 = !{!"0xb\009", !1, !4521}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4547 = !MDLocation(line: 3619, column: 8, scope: !4548)
!4548 = !{!"0xb\0010", !1, !4521}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4549 = !MDLocation(line: 3619, column: 8, scope: !4550)
!4550 = !{!"0xb\0011", !1, !4551}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4551 = !{!"0xb\007", !1, !4552}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4552 = !{!"0xb\005", !1, !4521}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4553 = !MDLocation(line: 3618, column: 14, scope: !4521)
!4554 = !MDLocation(line: 3621, column: 29, scope: !4521)
!4555 = !MDLocation(line: 3622, column: 8, scope: !4521)
!4556 = !MDLocation(line: 3622, column: 8, scope: !4536)
!4557 = !MDLocation(line: 3622, column: 8, scope: !4538)
!4558 = !MDLocation(line: 3622, column: 8, scope: !4540)
!4559 = !MDLocation(line: 3622, column: 8, scope: !4542)
!4560 = !MDLocation(line: 3622, column: 8, scope: !4546)
!4561 = !MDLocation(line: 3622, column: 8, scope: !4548)
!4562 = !MDLocation(line: 3622, column: 8, scope: !4550)
!4563 = !MDLocation(line: 3621, column: 14, scope: !4521)
!4564 = !MDLocation(line: 3624, column: 4, scope: !4521)
!4565 = !MDLocation(line: 3627, column: 12, scope: !4566)
!4566 = !{!"0xb\003625\009\00592", !1, !4515}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4567 = !MDLocation(line: 3627, column: 12, scope: !4568)
!4568 = !{!"0xb\001", !1, !4566}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4569 = !MDLocation(line: 3627, column: 12, scope: !4570)
!4570 = !{!"0xb\003", !1, !4566}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4571 = !MDLocation(line: 3627, column: 12, scope: !4572)
!4572 = !{!"0xb\006", !1, !4566}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4573 = !MDLocation(line: 3627, column: 12, scope: !4574)
!4574 = !{!"0xb\008", !1, !4575}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4575 = !{!"0xb\004", !1, !4576}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4576 = !{!"0xb\002", !1, !4566}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4577 = !MDLocation(line: 3627, column: 12, scope: !4578)
!4578 = !{!"0xb\009", !1, !4566}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4579 = !MDLocation(line: 3627, column: 12, scope: !4580)
!4580 = !{!"0xb\0010", !1, !4566}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4581 = !MDLocation(line: 3627, column: 12, scope: !4582)
!4582 = !{!"0xb\0011", !1, !4583}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4583 = !{!"0xb\007", !1, !4584}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4584 = !{!"0xb\005", !1, !4566}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4585 = !MDLocation(line: 3626, column: 18, scope: !4566)
!4586 = !MDLocation(line: 3632, column: 6, scope: !4402)
!4587 = !MDLocation(line: 3588, column: 28, scope: !4379)
!4588 = !MDLocation(line: 3636, column: 6, scope: !2096)
!4589 = !MDLocation(line: 3637, column: 10, scope: !2096)
!4590 = !MDLocation(line: 3640, column: 7, scope: !4591)
!4591 = !{!"0xb\003637\0018\00594", !1, !4592}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4592 = !{!"0xb\003637\0010\00593", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4593 = !MDLocation(line: 3640, column: 13, scope: !4594)
!4594 = !{!"0xb\003640\007\00595", !1, !4591}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4595 = !MDLocation(line: 3641, column: 7, scope: !4594)
!4596 = !MDLocation(line: 3642, column: 14, scope: !4591)
!4597 = !MDLocation(line: 3643, column: 3, scope: !4591)
!4598 = !{!"0x100\00lastcp\003638\000", !4591, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 3638]
!4599 = !MDLocation(line: 3638, column: 14, scope: !4591)
!4600 = !MDLocation(line: 3644, column: 7, scope: !4601)
!4601 = !{!"0xb\003644\007\00596", !1, !4591}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4602 = !MDLocation(line: 3644, column: 7, scope: !4591)
!4603 = !{!"0x100\00old\003646\000", !4604, !538, !39} ; [ DW_TAG_auto_variable ] [old] [line 3646]
!4604 = !{!"0xb\003644\0020\00597", !1, !4601}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4605 = !MDLocation(line: 3646, column: 13, scope: !4604)
!4606 = !{!"0x100\00count\003647\000", !4604, !538, !86} ; [ DW_TAG_auto_variable ] [count] [line 3647]
!4607 = !MDLocation(line: 3647, column: 11, scope: !4604)
!4608 = !MDLocation(line: 3649, column: 12, scope: !4609)
!4609 = !{!"0xb\003649\0012\00598", !1, !4604}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4610 = !MDLocation(line: 3649, column: 12, scope: !4604)
!4611 = !MDLocation(line: 3650, column: 8, scope: !4612)
!4612 = !{!"0xb\003649\0028\00599", !1, !4609}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4613 = !{!"0x100\00e\003645\000", !4604, !538, !39} ; [ DW_TAG_auto_variable ] [e] [line 3645]
!4614 = !MDLocation(line: 3645, column: 13, scope: !4604)
!4615 = !MDLocation(line: 3651, column: 8, scope: !4612)
!4616 = !MDLocation(line: 3652, column: 8, scope: !4617)
!4617 = !{!"0xb\003651\008\00600", !1, !4612}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4618 = !MDLocation(line: 3652, column: 15, scope: !4619)
!4619 = !{!"0xb\005", !1, !4620}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4620 = !{!"0xb\001", !1, !4617}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4621 = !MDLocation(line: 3652, column: 15, scope: !4622)
!4622 = !{!"0xb\002", !1, !4617}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4623 = !MDLocation(line: 3652, column: 8, scope: !4624)
!4624 = !{!"0xb\003", !1, !4617}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4625 = !MDLocation(line: 3653, column: 5, scope: !4617)
!4626 = !MDLocation(line: 3652, column: 8, scope: !4627)
!4627 = !{!"0xb\004", !1, !4617}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4628 = !MDLocation(line: 3654, column: 7, scope: !4612)
!4629 = !MDLocation(line: 3655, column: 16, scope: !4609)
!4630 = !MDLocation(line: 3656, column: 12, scope: !4631)
!4631 = !{!"0xb\003655\0025\00602", !1, !4632}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4632 = !{!"0xb\003655\0016\00601", !1, !4609}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4633 = !{!"0x100\00m\003656\000", !4631, !538, !86} ; [ DW_TAG_auto_variable ] [m] [line 3656]
!4634 = !MDLocation(line: 3656, column: 8, scope: !4631)
!4635 = !MDLocation(line: 3657, column: 9, scope: !4636)
!4636 = !{!"0xb\003657\004\00603", !1, !4631}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4637 = !MDLocation(line: 3658, column: 9, scope: !4638)
!4638 = !{!"0xb\003657\004\00604", !1, !4636}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4639 = !MDLocation(line: 3658, column: 21, scope: !4638)
!4640 = !MDLocation(line: 3658, column: 17, scope: !4638)
!4641 = !MDLocation(line: 3658, column: 36, scope: !4638)
!4642 = !MDLocation(line: 3657, column: 4, scope: !4636)
!4643 = !MDLocation(line: 3659, column: 13, scope: !4638)
!4644 = !MDLocation(line: 3659, column: 8, scope: !4638)
!4645 = !MDLocation(line: 3658, column: 47, scope: !4638)
!4646 = !MDLocation(line: 3657, column: 4, scope: !4638)
!4647 = !MDLocation(line: 3660, column: 7, scope: !4631)
!4648 = !MDLocation(line: 3662, column: 8, scope: !4649)
!4649 = !{!"0xb\003661\0012\00605", !1, !4632}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4650 = !MDLocation(line: 3663, column: 13, scope: !4651)
!4651 = !{!"0xb\003663\008\00606", !1, !4649}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4652 = !MDLocation(line: 3663, column: 8, scope: !4651)
!4653 = !MDLocation(line: 3663, column: 8, scope: !4649)
!4654 = !MDLocation(line: 3664, column: 12, scope: !4651)
!4655 = !MDLocation(line: 3664, column: 8, scope: !4651)
!4656 = !MDLocation(line: 3666, column: 7, scope: !4604)
!4657 = !MDLocation(line: 3668, column: 8, scope: !4658)
!4658 = !{!"0xb\003666\0017\00607", !1, !4604}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4659 = !MDLocation(line: 3669, column: 12, scope: !4660)
!4660 = !{!"0xb\003669\0012\00610", !1, !4661}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4661 = !{!"0xb\003668\0018\00609", !1, !4662}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4662 = !{!"0xb\003668\008\00608", !1, !4658}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4663 = !MDLocation(line: 3669, column: 12, scope: !4661)
!4664 = !MDLocation(line: 3670, column: 5, scope: !4665)
!4665 = !{!"0xb\003669\0022\00611", !1, !4660}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4666 = !MDLocation(line: 3670, column: 12, scope: !4665)
!4667 = !MDLocation(line: 3671, column: 12, scope: !4665)
!4668 = !MDLocation(line: 3670, column: 5, scope: !4669)
!4669 = !{!"0xb\002", !1, !4665}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4670 = !MDLocation(line: 3672, column: 9, scope: !4665)
!4671 = !MDLocation(line: 3673, column: 8, scope: !4665)
!4672 = !MDLocation(line: 3674, column: 5, scope: !4673)
!4673 = !{!"0xb\003673\0015\00612", !1, !4660}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4674 = !MDLocation(line: 3674, column: 12, scope: !4673)
!4675 = !MDLocation(line: 3675, column: 15, scope: !4673)
!4676 = !MDLocation(line: 3676, column: 15, scope: !4673)
!4677 = !MDLocation(line: 3674, column: 5, scope: !4678)
!4678 = !{!"0xb\003", !1, !4679}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4679 = !{!"0xb\002", !1, !4673}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4680 = !MDLocation(line: 3677, column: 9, scope: !4673)
!4681 = !MDLocation(line: 3679, column: 16, scope: !4661)
!4682 = !MDLocation(line: 3680, column: 4, scope: !4661)
!4683 = !{!"0x100\00len\003682\000", !4684, !538, !48} ; [ DW_TAG_auto_variable ] [len] [line 3682]
!4684 = !{!"0xb\003681\009\00613", !1, !4662}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4685 = !MDLocation(line: 3682, column: 15, scope: !4684)
!4686 = !MDLocation(line: 3683, column: 12, scope: !4687)
!4687 = !{!"0xb\003683\0012\00614", !1, !4684}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4688 = !MDLocation(line: 3683, column: 12, scope: !4684)
!4689 = !MDLocation(line: 3686, column: 5, scope: !4690)
!4690 = !{!"0xb\003683\0022\00615", !1, !4687}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4691 = !MDLocation(line: 3686, column: 12, scope: !4690)
!4692 = !MDLocation(line: 3689, column: 13, scope: !4690)
!4693 = !MDLocation(line: 3689, column: 13, scope: !4694)
!4694 = !{!"0xb\001", !1, !4690}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4695 = !MDLocation(line: 3689, column: 13, scope: !4696)
!4696 = !{!"0xb\003", !1, !4690}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4697 = !MDLocation(line: 3689, column: 13, scope: !4698)
!4698 = !{!"0xb\006", !1, !4690}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4699 = !MDLocation(line: 3689, column: 13, scope: !4700)
!4700 = !{!"0xb\008", !1, !4701}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4701 = !{!"0xb\004", !1, !4702}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4702 = !{!"0xb\002", !1, !4690}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4703 = !MDLocation(line: 3689, column: 13, scope: !4704)
!4704 = !{!"0xb\009", !1, !4690}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4705 = !MDLocation(line: 3689, column: 13, scope: !4706)
!4706 = !{!"0xb\0010", !1, !4690}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4707 = !MDLocation(line: 3689, column: 13, scope: !4708)
!4708 = !{!"0xb\0011", !1, !4709}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4709 = !{!"0xb\007", !1, !4710}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4710 = !{!"0xb\005", !1, !4690}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4711 = !MDLocation(line: 3687, column: 12, scope: !4690)
!4712 = !MDLocation(line: 3690, column: 36, scope: !4690)
!4713 = !MDLocation(line: 3686, column: 5, scope: !4702)
!4714 = !MDLocation(line: 3691, column: 21, scope: !4715)
!4715 = !{!"0xb\003690\0044\00616", !1, !4690}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4716 = !MDLocation(line: 3691, column: 9, scope: !4715)
!4717 = !MDLocation(line: 3692, column: 9, scope: !4715)
!4718 = !MDLocation(line: 3694, column: 8, scope: !4690)
!4719 = !MDLocation(line: 3697, column: 5, scope: !4720)
!4720 = !{!"0xb\003694\0015\00617", !1, !4687}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4721 = !MDLocation(line: 3697, column: 12, scope: !4720)
!4722 = !MDLocation(line: 3700, column: 10, scope: !4723)
!4723 = !{!"0xb\003697\0027\00618", !1, !4720}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4724 = !MDLocation(line: 3700, column: 10, scope: !4725)
!4725 = !{!"0xb\001", !1, !4723}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4726 = !MDLocation(line: 3700, column: 10, scope: !4727)
!4727 = !{!"0xb\003", !1, !4723}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4728 = !MDLocation(line: 3700, column: 10, scope: !4729)
!4729 = !{!"0xb\006", !1, !4723}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4730 = !MDLocation(line: 3700, column: 10, scope: !4731)
!4731 = !{!"0xb\008", !1, !4732}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4732 = !{!"0xb\004", !1, !4733}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4733 = !{!"0xb\002", !1, !4723}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4734 = !MDLocation(line: 3700, column: 10, scope: !4735)
!4735 = !{!"0xb\009", !1, !4723}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4736 = !MDLocation(line: 3700, column: 10, scope: !4737)
!4737 = !{!"0xb\0010", !1, !4723}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4738 = !MDLocation(line: 3700, column: 10, scope: !4739)
!4739 = !{!"0xb\0011", !1, !4740}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4740 = !{!"0xb\007", !1, !4741}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4741 = !{!"0xb\005", !1, !4723}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4742 = !MDLocation(line: 3698, column: 16, scope: !4723)
!4743 = !{!"0x100\00c\003698\000", !4723, !538, !282} ; [ DW_TAG_auto_variable ] [c] [line 3698]
!4744 = !MDLocation(line: 3698, column: 12, scope: !4723)
!4745 = !MDLocation(line: 3702, column: 18, scope: !4746)
!4746 = !{!"0xb\003702\0013\00619", !1, !4723}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4747 = !MDLocation(line: 3702, column: 13, scope: !4746)
!4748 = !MDLocation(line: 3702, column: 13, scope: !4723)
!4749 = !MDLocation(line: 3702, column: 33, scope: !4746)
!4750 = !MDLocation(line: 3702, column: 28, scope: !4746)
!4751 = !MDLocation(line: 3703, column: 6, scope: !4746)
!4752 = !MDLocation(line: 3704, column: 21, scope: !4723)
!4753 = !MDLocation(line: 3704, column: 9, scope: !4723)
!4754 = !MDLocation(line: 3705, column: 9, scope: !4723)
!4755 = !MDLocation(line: 3709, column: 8, scope: !4756)
!4756 = !{!"0xb\003709\008\00620", !1, !4658}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4757 = !MDLocation(line: 3709, column: 8, scope: !4658)
!4758 = !MDLocation(line: 3710, column: 8, scope: !4756)
!4759 = !MDLocation(line: 3712, column: 8, scope: !4760)
!4760 = !{!"0xb\003712\008\00621", !1, !4658}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4761 = !MDLocation(line: 3712, column: 8, scope: !4658)
!4762 = !MDLocation(line: 3714, column: 12, scope: !4763)
!4763 = !{!"0xb\003714\0012\00623", !1, !4764}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4764 = !{!"0xb\003712\0025\00622", !1, !4760}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4765 = !MDLocation(line: 3714, column: 12, scope: !4764)
!4766 = !MDLocation(line: 3715, column: 5, scope: !4763)
!4767 = !MDLocation(line: 3716, column: 4, scope: !4764)
!4768 = !MDLocation(line: 3718, column: 4, scope: !4769)
!4769 = !{!"0xb\003718\004\00624", !1, !4658}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4770 = !MDLocation(line: 3718, column: 4, scope: !4771)
!4771 = !{!"0xb\003718\004\00626", !1, !4772}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4772 = !{!"0xb\003718\004\00625", !1, !4769}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4773 = !MDLocation(line: 3718, column: 4, scope: !4774)
!4774 = !{!"0xb\003", !1, !4775}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4775 = !{!"0xb\003718\004\00628", !1, !4776}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4776 = !{!"0xb\003718\004\00627", !1, !4771}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4777 = !MDLocation(line: 3718, column: 4, scope: !4778)
!4778 = !{!"0xb\005", !1, !4775}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4779 = !MDLocation(line: 3718, column: 4, scope: !4780)
!4780 = !{!"0xb\006", !1, !4775}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4781 = !MDLocation(line: 3718, column: 4, scope: !4775)
!4782 = !MDLocation(line: 3718, column: 4, scope: !4783)
!4783 = !{!"0xb\008", !1, !4784}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4784 = !{!"0xb\007", !1, !4775}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4785 = !MDLocation(line: 3718, column: 4, scope: !4786)
!4786 = !{!"0xb\004", !1, !4776}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4787 = !MDLocation(line: 3718, column: 4, scope: !4788)
!4788 = !{!"0xb\009", !1, !4771}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4789 = !MDLocation(line: 3718, column: 4, scope: !4790)
!4790 = !{!"0xb\0010", !1, !4791}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4791 = !{!"0xb\002", !1, !4792}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4792 = !{!"0xb\003718\004\00629", !1, !4769}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4793 = !MDLocation(line: 3718, column: 4, scope: !4794)
!4794 = !{!"0xb\0011", !1, !4792}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4795 = !MDLocation(line: 3718, column: 4, scope: !4796)
!4796 = !{!"0xb\0014", !1, !4797}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4797 = !{!"0xb\003718\004\00630", !1, !4769}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4798 = !MDLocation(line: 3719, column: 4, scope: !4658)
!4799 = !MDLocation(line: 3720, column: 4, scope: !4800)
!4800 = !{!"0xb\003720\004\00631", !1, !4658}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4801 = !MDLocation(line: 3720, column: 4, scope: !4658)
!4802 = !MDLocation(line: 3720, column: 4, scope: !4803)
!4803 = !{!"0xb\001", !1, !4800}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4804 = !MDLocation(line: 3723, column: 8, scope: !4658)
!4805 = !MDLocation(line: 3724, column: 20, scope: !4806)
!4806 = !{!"0xb\003723\008\00632", !1, !4658}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4807 = !MDLocation(line: 3724, column: 8, scope: !4806)
!4808 = !MDLocation(line: 3726, column: 8, scope: !4806)
!4809 = !MDLocation(line: 3731, column: 3, scope: !4601)
!4810 = !MDLocation(line: 3731, column: 10, scope: !4601)
!4811 = !MDLocation(line: 3731, column: 22, scope: !4812)
!4812 = !{!"0xb\003", !1, !4601}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4813 = !MDLocation(line: 3731, column: 40, scope: !4814)
!4814 = !{!"0xb\004", !1, !4601}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4815 = !MDLocation(line: 3731, column: 10, scope: !4816)
!4816 = !{!"0xb\005", !1, !4601}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4817 = !MDLocation(line: 3731, column: 3, scope: !4818)
!4818 = !{!"0xb\006", !1, !4819}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4819 = !{!"0xb\002", !1, !4601}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4820 = !MDLocation(line: 3733, column: 11, scope: !4821)
!4821 = !{!"0xb\003733\0011\00634", !1, !4822}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4822 = !{!"0xb\003731\0049\00633", !1, !4601}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4823 = !MDLocation(line: 3733, column: 11, scope: !4822)
!4824 = !MDLocation(line: 3734, column: 8, scope: !4825)
!4825 = !{!"0xb\003733\0024\00635", !1, !4821}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4826 = !MDLocation(line: 3735, column: 32, scope: !4827)
!4827 = !{!"0xb\003734\008\00636", !1, !4825}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4828 = !MDLocation(line: 3737, column: 13, scope: !4827)
!4829 = !MDLocation(line: 3737, column: 13, scope: !4830)
!4830 = !{!"0xb\001", !1, !4827}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4831 = !MDLocation(line: 3737, column: 13, scope: !4832)
!4832 = !{!"0xb\003", !1, !4827}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4833 = !MDLocation(line: 3737, column: 13, scope: !4834)
!4834 = !{!"0xb\006", !1, !4827}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4835 = !MDLocation(line: 3737, column: 13, scope: !4836)
!4836 = !{!"0xb\008", !1, !4837}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4837 = !{!"0xb\004", !1, !4838}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4838 = !{!"0xb\002", !1, !4827}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4839 = !MDLocation(line: 3737, column: 13, scope: !4840)
!4840 = !{!"0xb\009", !1, !4827}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4841 = !MDLocation(line: 3737, column: 13, scope: !4842)
!4842 = !{!"0xb\0010", !1, !4827}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4843 = !MDLocation(line: 3737, column: 13, scope: !4844)
!4844 = !{!"0xb\0011", !1, !4845}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4845 = !{!"0xb\007", !1, !4846}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4846 = !{!"0xb\005", !1, !4827}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4847 = !MDLocation(line: 3735, column: 12, scope: !4827)
!4848 = !{!"0x100\00c\003732\000", !4822, !538, !282} ; [ DW_TAG_auto_variable ] [c] [line 3732]
!4849 = !MDLocation(line: 3732, column: 10, scope: !4822)
!4850 = !MDLocation(line: 3735, column: 8, scope: !4827)
!4851 = !MDLocation(line: 3740, column: 12, scope: !4827)
!4852 = !MDLocation(line: 3742, column: 20, scope: !4853)
!4853 = !{!"0xb\003742\0015\00637", !1, !4825}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4854 = !MDLocation(line: 3742, column: 15, scope: !4853)
!4855 = !MDLocation(line: 3742, column: 15, scope: !4825)
!4856 = !MDLocation(line: 3742, column: 35, scope: !4853)
!4857 = !MDLocation(line: 3742, column: 30, scope: !4853)
!4858 = !MDLocation(line: 3744, column: 8, scope: !4859)
!4859 = !{!"0xb\003744\008\00639", !1, !4860}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4860 = !{!"0xb\003743\0011\00638", !1, !4853}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4861 = !MDLocation(line: 3744, column: 8, scope: !4862)
!4862 = !{!"0xb\003744\008\00641", !1, !4863}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4863 = !{!"0xb\003744\008\00640", !1, !4859}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4864 = !MDLocation(line: 3744, column: 8, scope: !4865)
!4865 = !{!"0xb\003", !1, !4866}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4866 = !{!"0xb\003744\008\00643", !1, !4867}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4867 = !{!"0xb\003744\008\00642", !1, !4862}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4868 = !MDLocation(line: 3744, column: 8, scope: !4869)
!4869 = !{!"0xb\005", !1, !4866}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4870 = !MDLocation(line: 3744, column: 8, scope: !4871)
!4871 = !{!"0xb\006", !1, !4866}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4872 = !MDLocation(line: 3744, column: 8, scope: !4866)
!4873 = !MDLocation(line: 3744, column: 8, scope: !4874)
!4874 = !{!"0xb\008", !1, !4875}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4875 = !{!"0xb\007", !1, !4866}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4876 = !MDLocation(line: 3744, column: 8, scope: !4877)
!4877 = !{!"0xb\004", !1, !4867}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4878 = !MDLocation(line: 3744, column: 8, scope: !4879)
!4879 = !{!"0xb\009", !1, !4862}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4880 = !MDLocation(line: 3744, column: 8, scope: !4881)
!4881 = !{!"0xb\0010", !1, !4882}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4882 = !{!"0xb\002", !1, !4883}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4883 = !{!"0xb\003744\008\00644", !1, !4859}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4884 = !MDLocation(line: 3744, column: 8, scope: !4885)
!4885 = !{!"0xb\0011", !1, !4883}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4886 = !MDLocation(line: 3744, column: 8, scope: !4887)
!4887 = !{!"0xb\0014", !1, !4888}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4888 = !{!"0xb\003744\008\00645", !1, !4859}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4889 = !MDLocation(line: 3745, column: 8, scope: !4890)
!4890 = !{!"0xb\003745\008\00646", !1, !4860}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4891 = !MDLocation(line: 3745, column: 8, scope: !4860)
!4892 = !MDLocation(line: 3745, column: 8, scope: !4893)
!4893 = !{!"0xb\001", !1, !4890}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4894 = !MDLocation(line: 3746, column: 11, scope: !4860)
!4895 = !MDLocation(line: 3747, column: 7, scope: !4825)
!4896 = !MDLocation(line: 3749, column: 16, scope: !4897)
!4897 = !{!"0xb\003749\0016\00647", !1, !4821}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4898 = !MDLocation(line: 3749, column: 16, scope: !4821)
!4899 = !MDLocation(line: 3751, column: 4, scope: !4900)
!4900 = !{!"0xb\003751\004\00649", !1, !4901}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4901 = !{!"0xb\003750\007\00648", !1, !4897}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4902 = !MDLocation(line: 3751, column: 4, scope: !4903)
!4903 = !{!"0xb\003751\004\00651", !1, !4904}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4904 = !{!"0xb\003751\004\00650", !1, !4900}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4905 = !MDLocation(line: 3751, column: 4, scope: !4906)
!4906 = !{!"0xb\003", !1, !4907}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4907 = !{!"0xb\003751\004\00653", !1, !4908}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4908 = !{!"0xb\003751\004\00652", !1, !4903}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4909 = !MDLocation(line: 3751, column: 4, scope: !4910)
!4910 = !{!"0xb\005", !1, !4907}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4911 = !MDLocation(line: 3751, column: 4, scope: !4912)
!4912 = !{!"0xb\006", !1, !4907}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4913 = !MDLocation(line: 3751, column: 4, scope: !4907)
!4914 = !MDLocation(line: 3751, column: 4, scope: !4915)
!4915 = !{!"0xb\008", !1, !4916}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4916 = !{!"0xb\007", !1, !4907}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4917 = !MDLocation(line: 3751, column: 4, scope: !4918)
!4918 = !{!"0xb\004", !1, !4908}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4919 = !MDLocation(line: 3751, column: 4, scope: !4920)
!4920 = !{!"0xb\009", !1, !4903}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4921 = !MDLocation(line: 3751, column: 4, scope: !4922)
!4922 = !{!"0xb\0010", !1, !4923}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4923 = !{!"0xb\002", !1, !4924}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4924 = !{!"0xb\003751\004\00654", !1, !4900}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4925 = !MDLocation(line: 3751, column: 4, scope: !4926)
!4926 = !{!"0xb\0011", !1, !4924}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4927 = !MDLocation(line: 3751, column: 4, scope: !4928)
!4928 = !{!"0xb\0014", !1, !4929}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4929 = !{!"0xb\003751\004\00655", !1, !4900}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4930 = !MDLocation(line: 3752, column: 4, scope: !4931)
!4931 = !{!"0xb\003752\004\00656", !1, !4901}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4932 = !MDLocation(line: 3752, column: 4, scope: !4901)
!4933 = !MDLocation(line: 3752, column: 4, scope: !4934)
!4934 = !{!"0xb\001", !1, !4931}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4935 = !MDLocation(line: 3753, column: 7, scope: !4901)
!4936 = !MDLocation(line: 3755, column: 7, scope: !4822)
!4937 = !MDLocation(line: 3756, column: 11, scope: !4938)
!4938 = !{!"0xb\003756\0011\00657", !1, !4822}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4939 = !MDLocation(line: 3756, column: 11, scope: !4822)
!4940 = !MDLocation(line: 3757, column: 4, scope: !4941)
!4941 = !{!"0xb\003756\0031\00658", !1, !4938}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4942 = !MDLocation(line: 3758, column: 15, scope: !4941)
!4943 = !MDLocation(line: 3759, column: 7, scope: !4941)
!4944 = !MDLocation(line: 3761, column: 4, scope: !4938)
!4945 = !MDLocation(line: 3763, column: 6, scope: !4591)
!4946 = !MDLocation(line: 3766, column: 7, scope: !4947)
!4947 = !{!"0xb\003764\0011\00659", !1, !4592}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4948 = !MDLocation(line: 3767, column: 14, scope: !4947)
!4949 = !MDLocation(line: 3768, column: 7, scope: !4950)
!4950 = !{!"0xb\003768\007\00660", !1, !4947}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4951 = !MDLocation(line: 3768, column: 7, scope: !4947)
!4952 = !MDLocation(line: 3768, column: 32, scope: !4953)
!4953 = !{!"0xb\001", !1, !4950}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4954 = !MDLocation(line: 3768, column: 17, scope: !4950)
!4955 = !MDLocation(line: 3769, column: 10, scope: !4950)
!4956 = !MDLocation(line: 3769, column: 26, scope: !4950)
!4957 = !MDLocation(line: 3770, column: 4, scope: !4950)
!4958 = !MDLocation(line: 3770, column: 24, scope: !4950)
!4959 = !MDLocation(line: 3776, column: 11, scope: !4960)
!4960 = !{!"0xb\003776\0011\00662", !1, !4961}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4961 = !{!"0xb\003771\003\00661", !1, !4950}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4962 = !MDLocation(line: 3776, column: 11, scope: !4961)
!4963 = !MDLocation(line: 3776, column: 47, scope: !4964)
!4964 = !{!"0xb\001", !1, !4960}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4965 = !MDLocation(line: 3777, column: 4, scope: !4960)
!4966 = !MDLocation(line: 3778, column: 3, scope: !4961)
!4967 = !MDLocation(line: 3779, column: 3, scope: !4947)
!4968 = !{!"0x100\00lastcp\003765\000", !4947, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 3765]
!4969 = !MDLocation(line: 3765, column: 14, scope: !4947)
!4970 = !MDLocation(line: 3780, column: 7, scope: !4947)
!4971 = !{!"0x100\00c\003781\000", !4972, !538, !282} ; [ DW_TAG_auto_variable ] [c] [line 3781]
!4972 = !{!"0xb\003780\0014\00664", !1, !4973}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4973 = !{!"0xb\003780\007\00663", !1, !4947}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4974 = !MDLocation(line: 3781, column: 10, scope: !4972)
!4975 = !MDLocation(line: 3782, column: 7, scope: !4972)
!4976 = !MDLocation(line: 3782, column: 14, scope: !4972)
!4977 = !MDLocation(line: 3783, column: 8, scope: !4978)
!4978 = !{!"0xb\003783\008\00666", !1, !4979}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4979 = !{!"0xb\003782\0023\00665", !1, !4972}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4980 = !MDLocation(line: 3783, column: 8, scope: !4979)
!4981 = !MDLocation(line: 3784, column: 12, scope: !4982)
!4982 = !{!"0xb\003783\0021\00667", !1, !4978}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4983 = !MDLocation(line: 3785, column: 29, scope: !4984)
!4984 = !{!"0xb\003784\0012\00668", !1, !4982}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4985 = !MDLocation(line: 3787, column: 10, scope: !4984)
!4986 = !MDLocation(line: 3787, column: 10, scope: !4987)
!4987 = !{!"0xb\001", !1, !4984}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4988 = !MDLocation(line: 3787, column: 10, scope: !4989)
!4989 = !{!"0xb\003", !1, !4984}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4990 = !MDLocation(line: 3787, column: 10, scope: !4991)
!4991 = !{!"0xb\006", !1, !4984}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4992 = !MDLocation(line: 3787, column: 10, scope: !4993)
!4993 = !{!"0xb\008", !1, !4994}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4994 = !{!"0xb\004", !1, !4995}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4995 = !{!"0xb\002", !1, !4984}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4996 = !MDLocation(line: 3787, column: 10, scope: !4997)
!4997 = !{!"0xb\009", !1, !4984}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!4998 = !MDLocation(line: 3787, column: 10, scope: !4999)
!4999 = !{!"0xb\0010", !1, !4984}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5000 = !MDLocation(line: 3787, column: 10, scope: !5001)
!5001 = !{!"0xb\0011", !1, !5002}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5002 = !{!"0xb\007", !1, !5003}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5003 = !{!"0xb\005", !1, !4984}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5004 = !MDLocation(line: 3785, column: 9, scope: !4984)
!5005 = !MDLocation(line: 3785, column: 5, scope: !4984)
!5006 = !MDLocation(line: 3790, column: 9, scope: !4984)
!5007 = !MDLocation(line: 3791, column: 4, scope: !4982)
!5008 = !MDLocation(line: 3793, column: 8, scope: !5009)
!5009 = !{!"0xb\003793\008\00669", !1, !4979}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5010 = !MDLocation(line: 3793, column: 8, scope: !4979)
!5011 = !MDLocation(line: 3793, column: 28, scope: !5009)
!5012 = !MDLocation(line: 3793, column: 23, scope: !5009)
!5013 = !MDLocation(line: 3793, column: 43, scope: !5009)
!5014 = !MDLocation(line: 3793, column: 38, scope: !5009)
!5015 = !MDLocation(line: 3795, column: 5, scope: !5016)
!5016 = !{!"0xb\003795\005\00671", !1, !5017}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5017 = !{!"0xb\003794\008\00670", !1, !5009}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5018 = !MDLocation(line: 3795, column: 5, scope: !5019)
!5019 = !{!"0xb\003795\005\00673", !1, !5020}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5020 = !{!"0xb\003795\005\00672", !1, !5016}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5021 = !MDLocation(line: 3795, column: 5, scope: !5022)
!5022 = !{!"0xb\003", !1, !5023}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5023 = !{!"0xb\003795\005\00675", !1, !5024}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5024 = !{!"0xb\003795\005\00674", !1, !5019}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5025 = !MDLocation(line: 3795, column: 5, scope: !5026)
!5026 = !{!"0xb\005", !1, !5023}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5027 = !MDLocation(line: 3795, column: 5, scope: !5028)
!5028 = !{!"0xb\006", !1, !5023}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5029 = !MDLocation(line: 3795, column: 5, scope: !5023)
!5030 = !MDLocation(line: 3795, column: 5, scope: !5031)
!5031 = !{!"0xb\008", !1, !5032}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5032 = !{!"0xb\007", !1, !5023}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5033 = !MDLocation(line: 3795, column: 5, scope: !5034)
!5034 = !{!"0xb\004", !1, !5024}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5035 = !MDLocation(line: 3795, column: 5, scope: !5036)
!5036 = !{!"0xb\009", !1, !5019}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5037 = !MDLocation(line: 3795, column: 5, scope: !5038)
!5038 = !{!"0xb\0010", !1, !5039}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5039 = !{!"0xb\002", !1, !5040}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5040 = !{!"0xb\003795\005\00676", !1, !5016}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5041 = !MDLocation(line: 3795, column: 5, scope: !5042)
!5042 = !{!"0xb\0011", !1, !5040}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5043 = !MDLocation(line: 3795, column: 5, scope: !5044)
!5044 = !{!"0xb\0014", !1, !5045}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5045 = !{!"0xb\003795\005\00677", !1, !5016}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5046 = !MDLocation(line: 3796, column: 5, scope: !5047)
!5047 = !{!"0xb\003796\005\00678", !1, !5017}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5048 = !MDLocation(line: 3796, column: 5, scope: !5017)
!5049 = !MDLocation(line: 3796, column: 5, scope: !5050)
!5050 = !{!"0xb\001", !1, !5047}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5051 = !MDLocation(line: 3797, column: 8, scope: !5017)
!5052 = !MDLocation(line: 3799, column: 4, scope: !4979)
!5053 = !MDLocation(line: 3800, column: 29, scope: !4979)
!5054 = !MDLocation(line: 3800, column: 29, scope: !5055)
!5055 = !{!"0xb\001", !1, !4979}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5056 = !MDLocation(line: 3800, column: 29, scope: !5057)
!5057 = !{!"0xb\002", !1, !4979}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5058 = !MDLocation(line: 3800, column: 4, scope: !4979)
!5059 = !MDLocation(line: 3802, column: 3, scope: !4972)
!5060 = !{!"0x100\00c\003804\000", !5061, !538, !282} ; [ DW_TAG_auto_variable ] [c] [line 3804]
!5061 = !{!"0xb\003803\008\00679", !1, !4973}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5062 = !MDLocation(line: 3804, column: 10, scope: !5061)
!5063 = !MDLocation(line: 3805, column: 7, scope: !5061)
!5064 = !MDLocation(line: 3805, column: 14, scope: !5061)
!5065 = !MDLocation(line: 3806, column: 8, scope: !5066)
!5066 = !{!"0xb\003806\008\00681", !1, !5067}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5067 = !{!"0xb\003805\0023\00680", !1, !5061}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5068 = !MDLocation(line: 3806, column: 8, scope: !5067)
!5069 = !MDLocation(line: 3807, column: 12, scope: !5070)
!5070 = !{!"0xb\003806\0021\00682", !1, !5066}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5071 = !MDLocation(line: 3808, column: 29, scope: !5072)
!5072 = !{!"0xb\003807\0012\00683", !1, !5070}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5073 = !MDLocation(line: 3810, column: 10, scope: !5072)
!5074 = !MDLocation(line: 3810, column: 10, scope: !5075)
!5075 = !{!"0xb\001", !1, !5072}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5076 = !MDLocation(line: 3810, column: 10, scope: !5077)
!5077 = !{!"0xb\003", !1, !5072}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5078 = !MDLocation(line: 3810, column: 10, scope: !5079)
!5079 = !{!"0xb\006", !1, !5072}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5080 = !MDLocation(line: 3810, column: 10, scope: !5081)
!5081 = !{!"0xb\008", !1, !5082}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5082 = !{!"0xb\004", !1, !5083}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5083 = !{!"0xb\002", !1, !5072}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5084 = !MDLocation(line: 3810, column: 10, scope: !5085)
!5085 = !{!"0xb\009", !1, !5072}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5086 = !MDLocation(line: 3810, column: 10, scope: !5087)
!5087 = !{!"0xb\0010", !1, !5072}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5088 = !MDLocation(line: 3810, column: 10, scope: !5089)
!5089 = !{!"0xb\0011", !1, !5090}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5090 = !{!"0xb\007", !1, !5091}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5091 = !{!"0xb\005", !1, !5072}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5092 = !MDLocation(line: 3808, column: 9, scope: !5072)
!5093 = !MDLocation(line: 3808, column: 5, scope: !5072)
!5094 = !MDLocation(line: 3813, column: 9, scope: !5072)
!5095 = !MDLocation(line: 3814, column: 4, scope: !5070)
!5096 = !MDLocation(line: 3816, column: 8, scope: !5097)
!5097 = !{!"0xb\003816\008\00684", !1, !5067}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5098 = !MDLocation(line: 3816, column: 8, scope: !5067)
!5099 = !MDLocation(line: 3816, column: 28, scope: !5097)
!5100 = !MDLocation(line: 3816, column: 23, scope: !5097)
!5101 = !MDLocation(line: 3816, column: 43, scope: !5097)
!5102 = !MDLocation(line: 3816, column: 38, scope: !5097)
!5103 = !MDLocation(line: 3818, column: 5, scope: !5104)
!5104 = !{!"0xb\003818\005\00686", !1, !5105}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5105 = !{!"0xb\003817\008\00685", !1, !5097}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5106 = !MDLocation(line: 3818, column: 5, scope: !5107)
!5107 = !{!"0xb\003818\005\00688", !1, !5108}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5108 = !{!"0xb\003818\005\00687", !1, !5104}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5109 = !MDLocation(line: 3818, column: 5, scope: !5110)
!5110 = !{!"0xb\003", !1, !5111}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5111 = !{!"0xb\003818\005\00690", !1, !5112}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5112 = !{!"0xb\003818\005\00689", !1, !5107}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5113 = !MDLocation(line: 3818, column: 5, scope: !5114)
!5114 = !{!"0xb\005", !1, !5111}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5115 = !MDLocation(line: 3818, column: 5, scope: !5116)
!5116 = !{!"0xb\006", !1, !5111}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5117 = !MDLocation(line: 3818, column: 5, scope: !5111)
!5118 = !MDLocation(line: 3818, column: 5, scope: !5119)
!5119 = !{!"0xb\008", !1, !5120}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5120 = !{!"0xb\007", !1, !5111}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5121 = !MDLocation(line: 3818, column: 5, scope: !5122)
!5122 = !{!"0xb\004", !1, !5112}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5123 = !MDLocation(line: 3818, column: 5, scope: !5124)
!5124 = !{!"0xb\009", !1, !5107}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5125 = !MDLocation(line: 3818, column: 5, scope: !5126)
!5126 = !{!"0xb\0010", !1, !5127}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5127 = !{!"0xb\002", !1, !5128}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5128 = !{!"0xb\003818\005\00691", !1, !5104}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5129 = !MDLocation(line: 3818, column: 5, scope: !5130)
!5130 = !{!"0xb\0011", !1, !5128}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5131 = !MDLocation(line: 3818, column: 5, scope: !5132)
!5132 = !{!"0xb\0014", !1, !5133}                 ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5133 = !{!"0xb\003818\005\00692", !1, !5104}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5134 = !MDLocation(line: 3819, column: 5, scope: !5135)
!5135 = !{!"0xb\003819\005\00693", !1, !5105}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5136 = !MDLocation(line: 3819, column: 5, scope: !5105)
!5137 = !MDLocation(line: 3819, column: 5, scope: !5138)
!5138 = !{!"0xb\001", !1, !5135}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5139 = !MDLocation(line: 3820, column: 8, scope: !5105)
!5140 = !MDLocation(line: 3822, column: 4, scope: !5067)
!5141 = !MDLocation(line: 3823, column: 29, scope: !5067)
!5142 = !MDLocation(line: 3823, column: 29, scope: !5143)
!5143 = !{!"0xb\001", !1, !5067}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5144 = !MDLocation(line: 3823, column: 29, scope: !5145)
!5145 = !{!"0xb\002", !1, !5067}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5146 = !MDLocation(line: 3823, column: 4, scope: !5067)
!5147 = !MDLocation(line: 3827, column: 6, scope: !2096)
!5148 = !MDLocation(line: 3830, column: 10, scope: !5149)
!5149 = !{!"0xb\003830\0010\00694", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5150 = !MDLocation(line: 3830, column: 10, scope: !2096)
!5151 = !MDLocation(line: 3831, column: 30, scope: !5152)
!5152 = !{!"0xb\003830\0026\00695", !1, !5149}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5153 = !{!"0x100\00cur_call_cc\003831\000", !5152, !538, !5154} ; [ DW_TAG_auto_variable ] [cur_call_cc] [line 3831]
!5154 = !{!"0xf\00\000\0064\0064\000\000", null, null, !3116} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from re_cc_state]
!5155 = !MDLocation(line: 3831, column: 16, scope: !5152)
!5156 = !MDLocation(line: 3832, column: 19, scope: !5152)
!5157 = !{!"0x100\00cctmp\003832\000", !5152, !538, !3124} ; [ DW_TAG_auto_variable ] [cctmp] [line 3832]
!5158 = !MDLocation(line: 3832, column: 11, scope: !5152)
!5159 = !MDLocation(line: 3833, column: 16, scope: !5152)
!5160 = !{!"0x100\00re\003833\000", !5152, !538, !484} ; [ DW_TAG_auto_variable ] [re] [line 3833]
!5161 = !MDLocation(line: 3833, column: 11, scope: !5152)
!5162 = !MDLocation(line: 3836, column: 8, scope: !5152)
!5163 = !{!"0x100\00cp\003834\000", !5152, !538, !518} ; [ DW_TAG_auto_variable ] [cp] [line 3834]
!5164 = !MDLocation(line: 3834, column: 14, scope: !5152)
!5165 = !MDLocation(line: 3837, column: 3, scope: !5152)
!5166 = !{!"0x100\00lastcp\003834\000", !5152, !538, !518} ; [ DW_TAG_auto_variable ] [lastcp] [line 3834]
!5167 = !MDLocation(line: 3834, column: 18, scope: !5152)
!5168 = !MDLocation(line: 3838, column: 16, scope: !5152)
!5169 = !MDLocation(line: 3838, column: 3, scope: !5152)
!5170 = !MDLocation(line: 3840, column: 3, scope: !5152)
!5171 = !MDLocation(line: 3842, column: 12, scope: !5152)
!5172 = !MDLocation(line: 3842, column: 3, scope: !5152)
!5173 = !MDLocation(line: 3843, column: 14, scope: !5152)
!5174 = !MDLocation(line: 3843, column: 3, scope: !5152)
!5175 = !MDLocation(line: 3844, column: 20, scope: !5152)
!5176 = !MDLocation(line: 3844, column: 3, scope: !5152)
!5177 = !MDLocation(line: 3845, column: 16, scope: !5178)
!5178 = !{!"0xb\003845\007\00696", !1, !5152}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5179 = !MDLocation(line: 3845, column: 7, scope: !5178)
!5180 = !MDLocation(line: 3845, column: 7, scope: !5152)
!5181 = !MDLocation(line: 3846, column: 7, scope: !5182)
!5182 = !{!"0xb\003845\0036\00697", !1, !5178}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5183 = !MDLocation(line: 3847, column: 7, scope: !5184)
!5184 = !{!"0xb\003847\007\00698", !1, !5182}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5185 = !MDLocation(line: 3847, column: 7, scope: !5182)
!5186 = !MDLocation(line: 3847, column: 7, scope: !5187)
!5187 = !{!"0xb\001", !1, !5184}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5188 = !MDLocation(line: 3848, column: 7, scope: !5182)
!5189 = !MDLocation(line: 3850, column: 3, scope: !5190)
!5190 = !{!"0xb\003850\003\00699", !1, !5152}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5191 = !MDLocation(line: 3850, column: 3, scope: !5152)
!5192 = !MDLocation(line: 3850, column: 3, scope: !5193)
!5193 = !{!"0xb\001", !1, !5190}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5194 = !MDLocation(line: 3851, column: 3, scope: !5152)
!5195 = !MDLocation(line: 3852, column: 3, scope: !5152)
!5196 = !MDLocation(line: 3853, column: 3, scope: !5152)
!5197 = !MDLocation(line: 3854, column: 3, scope: !5152)
!5198 = !MDLocation(line: 3855, column: 3, scope: !5152)
!5199 = !MDLocation(line: 3862, column: 3, scope: !5152)
!5200 = !MDLocation(line: 3864, column: 21, scope: !5201)
!5201 = !{!"0xb\003864\0010\00700", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5202 = !MDLocation(line: 3864, column: 10, scope: !5201)
!5203 = !MDLocation(line: 3864, column: 10, scope: !2096)
!5204 = !MDLocation(line: 3871, column: 3, scope: !5205)
!5205 = !{!"0xb\003864\0033\00701", !1, !5201}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5206 = !MDLocation(line: 3873, column: 6, scope: !2096)
!5207 = !MDLocation(line: 3874, column: 6, scope: !2096)
!5208 = !MDLocation(line: 3876, column: 6, scope: !2096)
!5209 = !MDLocation(line: 3877, column: 6, scope: !2096)
!5210 = !MDLocation(line: 3880, column: 6, scope: !2096)
!5211 = !MDLocation(line: 3881, column: 6, scope: !2096)
!5212 = !MDLocation(line: 3884, column: 10, scope: !5213)
!5213 = !{!"0xb\003884\0010\00702", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5214 = !MDLocation(line: 3884, column: 10, scope: !2096)
!5215 = !MDLocation(line: 3885, column: 7, scope: !5216)
!5216 = !{!"0xb\003884\0023\00703", !1, !5213}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5217 = !MDLocation(line: 3885, column: 7, scope: !5218)
!5218 = !{!"0xb\001", !1, !5216}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5219 = !MDLocation(line: 3885, column: 7, scope: !5220)
!5220 = !{!"0xb\002", !1, !5216}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5221 = !MDLocation(line: 3885, column: 7, scope: !5222)
!5222 = !{!"0xb\004", !1, !5216}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5223 = !MDLocation(line: 3885, column: 7, scope: !5224)
!5224 = !{!"0xb\005", !1, !5216}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5225 = !MDLocation(line: 3885, column: 7, scope: !5226)
!5226 = !{!"0xb\007", !1, !5227}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5227 = !{!"0xb\006", !1, !5216}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5228 = !MDLocation(line: 3886, column: 7, scope: !5216)
!5229 = !MDLocation(line: 3887, column: 7, scope: !5230)
!5230 = !{!"0xb\003886\007\00704", !1, !5216}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5231 = !MDLocation(line: 3888, column: 3, scope: !5216)
!5232 = !MDLocation(line: 3889, column: 6, scope: !5216)
!5233 = !MDLocation(line: 3891, column: 3, scope: !5213)
!5234 = !MDLocation(line: 3892, column: 6, scope: !2096)
!5235 = !MDLocation(line: 3895, column: 10, scope: !5236)
!5236 = !{!"0xb\003895\0010\00705", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5237 = !MDLocation(line: 3895, column: 10, scope: !2096)
!5238 = !MDLocation(line: 3896, column: 7, scope: !5239)
!5239 = !{!"0xb\003895\0023\00706", !1, !5236}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5240 = !MDLocation(line: 3896, column: 7, scope: !5241)
!5241 = !{!"0xb\001", !1, !5239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5242 = !MDLocation(line: 3896, column: 7, scope: !5243)
!5243 = !{!"0xb\002", !1, !5239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5244 = !MDLocation(line: 3896, column: 7, scope: !5245)
!5245 = !{!"0xb\004", !1, !5239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5246 = !MDLocation(line: 3896, column: 7, scope: !5247)
!5247 = !{!"0xb\005", !1, !5239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5248 = !MDLocation(line: 3896, column: 7, scope: !5249)
!5249 = !{!"0xb\007", !1, !5250}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5250 = !{!"0xb\006", !1, !5239}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5251 = !MDLocation(line: 3897, column: 7, scope: !5239)
!5252 = !MDLocation(line: 3898, column: 7, scope: !5253)
!5253 = !{!"0xb\003897\007\00707", !1, !5239}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5254 = !MDLocation(line: 3899, column: 3, scope: !5239)
!5255 = !MDLocation(line: 3900, column: 6, scope: !5239)
!5256 = !MDLocation(line: 3902, column: 3, scope: !5236)
!5257 = !MDLocation(line: 3895, column: 16, scope: !5236)
!5258 = !MDLocation(line: 3905, column: 14, scope: !2096)
!5259 = !MDLocation(line: 3906, column: 10, scope: !5260)
!5260 = !{!"0xb\003906\0010\00708", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5261 = !MDLocation(line: 3906, column: 10, scope: !2096)
!5262 = !MDLocation(line: 3906, column: 32, scope: !5263)
!5263 = !{!"0xb\001", !1, !5260}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5264 = !MDLocation(line: 3908, column: 7, scope: !5265)
!5265 = !{!"0xb\003906\0032\00709", !1, !5260}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5266 = !MDLocation(line: 3911, column: 7, scope: !5267)
!5267 = !{!"0xb\003908\0016\00711", !1, !5268}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5268 = !{!"0xb\003908\007\00710", !1, !5265}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5269 = !MDLocation(line: 3914, column: 7, scope: !5268)
!5270 = !MDLocation(line: 3906, column: 29, scope: !5271)
!5271 = !{!"0xb\002", !1, !5260}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5272 = !MDLocation(line: 3917, column: 10, scope: !2096)
!5273 = !MDLocation(line: 3920, column: 6, scope: !5274)
!5274 = !{!"0xb\003917\0019\00713", !1, !5275}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5275 = !{!"0xb\003917\0010\00712", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5276 = !MDLocation(line: 3921, column: 10, scope: !5277)
!5277 = !{!"0xb\003921\0010\00714", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5278 = !MDLocation(line: 3921, column: 10, scope: !2096)
!5279 = !MDLocation(line: 3922, column: 14, scope: !5280)
!5280 = !{!"0xb\003921\0031\00715", !1, !5277}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5281 = !MDLocation(line: 3923, column: 13, scope: !5280)
!5282 = !MDLocation(line: 3924, column: 6, scope: !5280)
!5283 = !MDLocation(line: 3921, column: 22, scope: !5284)
!5284 = !{!"0xb\001", !1, !5277}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5285 = !MDLocation(line: 3921, column: 22, scope: !5286)
!5286 = !{!"0xb\002", !1, !5277}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5287 = !MDLocation(line: 3928, column: 20, scope: !2096)
!5288 = !MDLocation(line: 3928, column: 13, scope: !2096)
!5289 = !MDLocation(line: 3929, column: 10, scope: !5290)
!5290 = !{!"0xb\003929\0010\00716", !1, !2096}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5291 = !MDLocation(line: 3929, column: 10, scope: !2096)
!5292 = !MDLocation(line: 3930, column: 3, scope: !5290)
!5293 = !MDLocation(line: 3931, column: 6, scope: !2096)
!5294 = !MDLocation(line: 3933, column: 20, scope: !2096)
!5295 = !MDLocation(line: 3933, column: 20, scope: !5296)
!5296 = !{!"0xb\001", !1, !2096}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5297 = !MDLocation(line: 3933, column: 20, scope: !5298)
!5298 = !{!"0xb\003", !1, !2096}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5299 = !MDLocation(line: 3933, column: 20, scope: !5300)
!5300 = !{!"0xb\005", !1, !2096}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5301 = !MDLocation(line: 3933, column: 20, scope: !5302)
!5302 = !{!"0xb\007", !1, !2096}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5303 = !MDLocation(line: 3933, column: 20, scope: !5304)
!5304 = !{!"0xb\008", !1, !5305}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5305 = !{!"0xb\006", !1, !5306}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5306 = !{!"0xb\004", !1, !3369}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5307 = !MDLocation(line: 3934, column: 6, scope: !2096)
!5308 = !MDLocation(line: 3934, column: 20, scope: !2096)
!5309 = !MDLocation(line: 3933, column: 6, scope: !2096)
!5310 = !MDLocation(line: 3935, column: 6, scope: !2096)
!5311 = !MDLocation(line: 3936, column: 2, scope: !2096)
!5312 = !MDLocation(line: 3936, column: 2, scope: !5296)
!5313 = !MDLocation(line: 3945, column: 5, scope: !555)
!5314 = !MDLocation(line: 3947, column: 5, scope: !555)
!5315 = !MDLocation(line: 3955, column: 5, scope: !555)
!5316 = !MDLocation(line: 3968, column: 5, scope: !555)
!5317 = !MDLocation(line: 3976, column: 5, scope: !555)
!5318 = !MDLocation(line: 3979, column: 9, scope: !555)
!5319 = !MDLocation(line: 3980, column: 20, scope: !5320)
!5320 = !{!"0xb\003979\0017\00718", !1, !5321}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5321 = !{!"0xb\003979\009\00717", !1, !555}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5322 = !{!"0x100\00uw\003980\000", !5320, !538, !523} ; [ DW_TAG_auto_variable ] [uw] [line 3980]
!5323 = !MDLocation(line: 3980, column: 15, scope: !5320)
!5324 = !MDLocation(line: 3982, column: 10, scope: !5320)
!5325 = !MDLocation(line: 3982, column: 2, scope: !5320)
!5326 = !MDLocation(line: 3986, column: 32, scope: !5327)
!5327 = !{!"0xb\003985\002\00720", !1, !5328}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5328 = !{!"0xb\003982\0020\00719", !1, !5320}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5329 = !{!"0x100\00uwb\003986\000", !5327, !538, !511} ; [ DW_TAG_auto_variable ] [uwb] [line 3986]
!5330 = !MDLocation(line: 3986, column: 26, scope: !5327)
!5331 = !MDLocation(line: 3987, column: 22, scope: !5327)
!5332 = !{!"0x100\00lastparen\003987\000", !5327, !538, !157} ; [ DW_TAG_auto_variable ] [lastparen] [line 3987]
!5333 = !MDLocation(line: 3987, column: 10, scope: !5327)
!5334 = !MDLocation(line: 3989, column: 6, scope: !5335)
!5335 = !{!"0xb\003989\006\00721", !1, !5327}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5336 = !MDLocation(line: 3989, column: 6, scope: !5327)
!5337 = !MDLocation(line: 3989, column: 6, scope: !5338)
!5338 = !{!"0xb\001", !1, !5335}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5339 = !MDLocation(line: 3990, column: 16, scope: !5340)
!5340 = !{!"0xb\003990\006\00722", !1, !5327}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5341 = !MDLocation(line: 3990, column: 15, scope: !5340)
!5342 = !MDLocation(line: 3990, column: 11, scope: !5340)
!5343 = !MDLocation(line: 3990, column: 33, scope: !5344)
!5344 = !{!"0xb\003990\006\00723", !1, !5340}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5345 = !MDLocation(line: 3990, column: 6, scope: !5340)
!5346 = !MDLocation(line: 3991, column: 3, scope: !5344)
!5347 = !MDLocation(line: 3990, column: 48, scope: !5344)
!5348 = !MDLocation(line: 3990, column: 6, scope: !5344)
!5349 = !MDLocation(line: 3992, column: 7, scope: !5327)
!5350 = !MDLocation(line: 3992, column: 6, scope: !5327)
!5351 = !MDLocation(line: 3993, column: 20, scope: !5327)
!5352 = !MDLocation(line: 3994, column: 11, scope: !5327)
!5353 = !MDLocation(line: 3995, column: 4, scope: !5354)
!5354 = !{!"0xb\003994\0011\00724", !1, !5327}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5355 = !MDLocation(line: 3995, column: 17, scope: !5354)
!5356 = !MDLocation(line: 3997, column: 12, scope: !5357)
!5357 = !{!"0xb\003996\0032\00725", !1, !5354}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5358 = !MDLocation(line: 4001, column: 3, scope: !5357)
!5359 = !MDLocation(line: 4005, column: 16, scope: !5360)
!5360 = !{!"0xb\004005\0010\00726", !1, !5327}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5361 = !MDLocation(line: 4006, column: 11, scope: !5360)
!5362 = !MDLocation(line: 4006, column: 28, scope: !5360)
!5363 = !MDLocation(line: 4005, column: 10, scope: !5327)
!5364 = !MDLocation(line: 4007, column: 3, scope: !5360)
!5365 = !MDLocation(line: 4010, column: 6, scope: !5327)
!5366 = !MDLocation(line: 4011, column: 13, scope: !5327)
!5367 = !MDLocation(line: 4012, column: 10, scope: !5368)
!5368 = !{!"0xb\004012\0010\00727", !1, !5327}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5369 = !MDLocation(line: 4012, column: 10, scope: !5327)
!5370 = !MDLocation(line: 4013, column: 10, scope: !5368)
!5371 = !MDLocation(line: 4013, column: 3, scope: !5368)
!5372 = !MDLocation(line: 4014, column: 17, scope: !5327)
!5373 = !MDLocation(line: 4015, column: 16, scope: !5327)
!5374 = !MDLocation(line: 4020, column: 6, scope: !5327)
!5375 = !MDLocation(line: 4024, column: 6, scope: !5328)
!5376 = !MDLocation(line: 4025, column: 2, scope: !5328)
!5377 = !MDLocation(line: 4027, column: 5, scope: !5320)
!5378 = !MDLocation(line: 4031, column: 5, scope: !555)
!5379 = !MDLocation(line: 4032, column: 1, scope: !555)
!5380 = !{!"0x101\00node\0016781552\000", !558, !538, !224} ; [ DW_TAG_arg_variable ] [node] [line 4336]
!5381 = !MDLocation(line: 4336, column: 45, scope: !558)
!5382 = !{!"0x101\00doinit\0033558768\000", !558, !538, !40} ; [ DW_TAG_arg_variable ] [doinit] [line 4336]
!5383 = !MDLocation(line: 4336, column: 56, scope: !558)
!5384 = !{!"0x101\00listsvp\0050335984\000", !558, !538, !276} ; [ DW_TAG_arg_variable ] [listsvp] [line 4336]
!5385 = !MDLocation(line: 4336, column: 69, scope: !558)
!5386 = !{!"0x101\00altsvp\0067113200\000", !558, !538, !276} ; [ DW_TAG_arg_variable ] [altsvp] [line 4336]
!5387 = !MDLocation(line: 4336, column: 83, scope: !558)
!5388 = !{!"0x100\00sw\004338\000", !558, !538, !87} ; [ DW_TAG_auto_variable ] [sw] [line 4338]
!5389 = !MDLocation(line: 4338, column: 9, scope: !558)
!5390 = !{!"0x100\00si\004339\000", !558, !538, !87} ; [ DW_TAG_auto_variable ] [si] [line 4339]
!5391 = !MDLocation(line: 4339, column: 9, scope: !558)
!5392 = !{!"0x100\00alt\004340\000", !558, !538, !87} ; [ DW_TAG_auto_variable ] [alt] [line 4340]
!5393 = !MDLocation(line: 4340, column: 9, scope: !558)
!5394 = !MDLocation(line: 4342, column: 9, scope: !5395)
!5395 = !{!"0xb\004342\009\00728", !1, !558}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5396 = !MDLocation(line: 4342, column: 9, scope: !558)
!5397 = !MDLocation(line: 4342, column: 23, scope: !5398)
!5398 = !{!"0xb\001", !1, !5395}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5399 = !MDLocation(line: 4343, column: 10, scope: !5400)
!5400 = !{!"0xb\004342\0042\00729", !1, !5395}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5401 = !{!"0x100\00n\004343\000", !5400, !538, !93} ; [ DW_TAG_auto_variable ] [n] [line 4343]
!5402 = !MDLocation(line: 4343, column: 6, scope: !5400)
!5403 = !MDLocation(line: 4345, column: 6, scope: !5404)
!5404 = !{!"0xb\004345\006\00730", !1, !5400}     ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5405 = !MDLocation(line: 4345, column: 6, scope: !5400)
!5406 = !MDLocation(line: 4346, column: 20, scope: !5407)
!5407 = !{!"0xb\004345\0034\00731", !1, !5404}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5408 = !MDLocation(line: 4346, column: 15, scope: !5407)
!5409 = !{!"0x100\00rv\004346\000", !5407, !538, !87} ; [ DW_TAG_auto_variable ] [rv] [line 4346]
!5410 = !MDLocation(line: 4346, column: 10, scope: !5407)
!5411 = !MDLocation(line: 4347, column: 20, scope: !5407)
!5412 = !MDLocation(line: 4347, column: 15, scope: !5407)
!5413 = !{!"0x100\00av\004347\000", !5407, !538, !118} ; [ DW_TAG_auto_variable ] [av] [line 4347]
!5414 = !MDLocation(line: 4347, column: 10, scope: !5407)
!5415 = !MDLocation(line: 4348, column: 17, scope: !5407)
!5416 = !{!"0x100\00ary\004348\000", !5407, !538, !276} ; [ DW_TAG_auto_variable ] [ary] [line 4348]
!5417 = !MDLocation(line: 4348, column: 11, scope: !5407)
!5418 = !MDLocation(line: 4354, column: 11, scope: !5407)
!5419 = !MDLocation(line: 4355, column: 11, scope: !5407)
!5420 = !MDLocation(line: 4355, column: 40, scope: !5407)
!5421 = !MDLocation(line: 4355, column: 11, scope: !5422)
!5422 = !{!"0xb\002", !1, !5407}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5423 = !{!"0x100\00a\004349\000", !5407, !538, !276} ; [ DW_TAG_auto_variable ] [a] [line 4349]
!5424 = !MDLocation(line: 4349, column: 11, scope: !5407)
!5425 = !MDLocation(line: 4356, column: 11, scope: !5407)
!5426 = !MDLocation(line: 4356, column: 40, scope: !5407)
!5427 = !MDLocation(line: 4356, column: 11, scope: !5422)
!5428 = !{!"0x100\00b\004349\000", !5407, !538, !276} ; [ DW_TAG_auto_variable ] [b] [line 4349]
!5429 = !MDLocation(line: 4349, column: 16, scope: !5407)
!5430 = !MDLocation(line: 4358, column: 10, scope: !5407)
!5431 = !MDLocation(line: 4359, column: 8, scope: !5432)
!5432 = !{!"0xb\004358\0010\00732", !1, !5407}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5433 = !MDLocation(line: 4359, column: 3, scope: !5432)
!5434 = !MDLocation(line: 4360, column: 15, scope: !5432)
!5435 = !MDLocation(line: 4360, column: 21, scope: !5436)
!5436 = !{!"0xb\001", !1, !5437}                  ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5437 = !{!"0xb\004360\0015\00733", !1, !5432}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5438 = !MDLocation(line: 4361, column: 8, scope: !5439)
!5439 = !{!"0xb\004360\0029\00734", !1, !5437}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5440 = !MDLocation(line: 4362, column: 9, scope: !5439)
!5441 = !MDLocation(line: 4363, column: 6, scope: !5439)
!5442 = !MDLocation(line: 4364, column: 10, scope: !5407)
!5443 = !MDLocation(line: 4365, column: 16, scope: !5444)
!5444 = !{!"0xb\004364\0010\00735", !1, !5407}    ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5445 = !MDLocation(line: 4365, column: 10, scope: !5444)
!5446 = !MDLocation(line: 4366, column: 2, scope: !5407)
!5447 = !MDLocation(line: 4367, column: 5, scope: !5400)
!5448 = !MDLocation(line: 4369, column: 9, scope: !558)
!5449 = !MDLocation(line: 4370, column: 2, scope: !5450)
!5450 = !{!"0xb\004369\009\00736", !1, !558}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5451 = !MDLocation(line: 4371, column: 9, scope: !558)
!5452 = !MDLocation(line: 4372, column: 2, scope: !5453)
!5453 = !{!"0xb\004371\009\00737", !1, !558}      ; [ DW_TAG_lexical_block ] [/tmp/perlbench/regexec.c]
!5454 = !MDLocation(line: 4374, column: 5, scope: !558)
